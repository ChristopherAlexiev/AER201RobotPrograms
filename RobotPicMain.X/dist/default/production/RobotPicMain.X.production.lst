

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 05:03:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 2.05
    94                           ; Generated 20/12/2018 GMT
    95                           ; 
    96                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F4620 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataCOMRAM
   129  00419C                     __pidataCOMRAM:
   130                           	opt callstack 0
   131                           
   132                           ;initializer for _motorBDirection
   133  00419C  01                 	db	1
   134                           
   135                           	psect	idataBANK0
   136  004184                     __pidataBANK0:
   137                           	opt callstack 0
   138                           
   139                           ;initializer for stoa@F1144
   140  004184  28                 	db	40
   141  004185  6E                 	db	110
   142  004186  75                 	db	117
   143  004187  6C                 	db	108
   144  004188  6C                 	db	108
   145  004189  29                 	db	41
   146  00418A  00                 	db	0
   147                           
   148                           ;initializer for _motorADirection
   149  00418B  01                 	db	1
   150                           
   151                           	psect	mediumconst
   152  00FE5E                     __pmediumconst:
   153                           	opt callstack 0
   154  00FE5E  00                 	db	0
   155  00FE5F                     _keys:
   156                           	opt callstack 0
   157  00FE5F  31                 	db	49
   158  00FE60  32                 	db	50
   159  00FE61  33                 	db	51
   160  00FE62  41                 	db	65
   161  00FE63  34                 	db	52
   162  00FE64  35                 	db	53
   163  00FE65  36                 	db	54
   164  00FE66  42                 	db	66
   165  00FE67  37                 	db	55
   166  00FE68  38                 	db	56
   167  00FE69  39                 	db	57
   168  00FE6A  43                 	db	67
   169  00FE6B  2A                 	db	42
   170  00FE6C  30                 	db	48
   171  00FE6D  23                 	db	35
   172  00FE6E  44                 	db	68
   173  00FE6F  00                 	db	0
   174  00FE70                     __end_of_keys:
   175                           	opt callstack 0
   176  00FE70                     _happynewyear:
   177                           	opt callstack 0
   178  00FE70  00                 	db	0
   179  00FE71  37                 	db	55
   180  00FE72  0E                 	db	14
   181  00FE73  02                 	db	2
   182  00FE74  13                 	db	19
   183  00FE75  02                 	db	2
   184  00FE76  13                 	db	19
   185  00FE77                     __end_of_happynewyear:
   186                           	opt callstack 0
   187  00FE77                     _LCD_LINE1_ADDR:
   188                           	opt callstack 0
   189  00FE77  00                 	db	0
   190  00FE78                     __end_of_LCD_LINE1_ADDR:
   191                           	opt callstack 0
   192  00FE78                     _LCD_SIZE_VERT:
   193                           	opt callstack 0
   194  00FE78  04                 	db	4
   195  00FE79                     __end_of_LCD_SIZE_VERT:
   196                           	opt callstack 0
   197  00FE79                     _LCD_SIZE_HORZ:
   198                           	opt callstack 0
   199  00FE79  10                 	db	16
   200  00FE7A                     __end_of_LCD_SIZE_HORZ:
   201                           	opt callstack 0
   202  00FE7A  10                 	db	16
   203  00FE7B                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   204                           	opt callstack 0
   205  00FE7B  03E8               	dw	1000
   206  00FE7D  0000               	dw	0
   207  00FE7F                     __end_ofinit_motor_PWM@FREQUENCY:
   208                           	opt callstack 0
   209  00FE7F  50                 	db	80
   210  00FE80                     __end_of_LCD_LINE4_ADDR:
   211                           	opt callstack 0
   212  00FE80  10                 	db	16
   213  00FE81                     __end_of_LCD_LINE3_ADDR:
   214                           	opt callstack 0
   215  00FE81  40                 	db	64
   216  00FE82                     __end_of_LCD_LINE2_ADDR:
   217                           	opt callstack 0
   218  0000                     _SSPBUF	set	4041
   219  0000                     _SSPCON2bits	set	4037
   220  0000                     _SSPCON1	set	4038
   221  0000                     _SSPADD	set	4040
   222  0000                     _SSPCON1bits	set	4038
   223  0000                     _SSPCON2	set	4037
   224  0000                     _SSPSTAT	set	4039
   225  0000                     _LATDbits	set	3980
   226  0000                     _ADCON1	set	4033
   227  0000                     _LATB	set	3978
   228  0000                     _TRISD	set	3989
   229  0000                     _LATD	set	3980
   230  0000                     _EECON2	set	4007
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _EEDATA	set	4008
   234  0000                     _TRISAbits	set	3986
   235  0000                     _LATAbits	set	3977
   236  0000                     _CCPR2L	set	4027
   237  0000                     _CCPR1L	set	4030
   238  0000                     _PR2	set	4043
   239  0000                     _INTCONbits	set	4082
   240  0000                     _TMR0L	set	4054
   241  0000                     _TMR0H	set	4055
   242  0000                     _T0CONbits	set	4053
   243  0000                     _OSCCONbits	set	4051
   244  0000                     _TRISBbits	set	3987
   245  0000                     _TRISEbits	set	3990
   246  0000                     _TRISCbits	set	3988
   247  0000                     _PORTCbits	set	3970
   248  0000                     _PORTEbits	set	3972
   249  0000                     _PORTBbits	set	3969
   250  0000                     _PORTB	set	3969
   251  0000                     _INT0IF	set	32657
   252  0000                     _INT2IF	set	32641
   253  0000                     _TMR0IF	set	32658
   254  0000                     _INT1IF	set	32640
   255  0000                     _INT1IE	set	32643
   256  0000                     _CCP2Y	set	32212
   257  0000                     _CCP2X	set	32213
   258  0000                     _CCP1Y	set	32236
   259  0000                     _CCP1X	set	32237
   260  0000                     _TMR2ON	set	32338
   261  0000                     _T2CKPS1	set	32337
   262  0000                     _T2CKPS0	set	32336
   263  0000                     _CCP2M0	set	32208
   264  0000                     _CCP2M1	set	32209
   265  0000                     _CCP2M2	set	32210
   266  0000                     _CCP2M3	set	32211
   267  0000                     _CCP1M0	set	32232
   268  0000                     _CCP1M1	set	32233
   269  0000                     _CCP1M2	set	32234
   270  0000                     _CCP1M3	set	32235
   271  0000                     _P1M0	set	32238
   272  0000                     _P1M1	set	32239
   273  0000                     _TMR0ON	set	32431
   274  0000                     _TMR0IE	set	32661
   275  0000                     _PSA	set	32427
   276  0000                     _T0PS0	set	32424
   277  0000                     _T0PS1	set	32425
   278  0000                     _T0PS2	set	32426
   279  0000                     _T08BIT	set	32430
   280  0000                     _INT0IE	set	32660
   281  0000                     _INT2IE	set	32644
   282  00FE82                     STR_16:
   283                           
   284                           ; BSR set to: 0
   285  00FE82  54                 	db	84	;'T'
   286  00FE83  49                 	db	73	;'I'
   287  00FE84  52                 	db	82	;'R'
   288  00FE85  45                 	db	69	;'E'
   289  00FE86  2E                 	db	46
   290  00FE87  20                 	db	32
   291  00FE88  4F                 	db	79	;'O'
   292  00FE89  4E                 	db	78	;'N'
   293  00FE8A  20                 	db	32
   294  00FE8B  50                 	db	80	;'P'
   295  00FE8C  4F                 	db	79	;'O'
   296  00FE8D  4C                 	db	76	;'L'
   297  00FE8E  45                 	db	69	;'E'
   298  00FE8F  3A                 	db	58	;':'
   299  00FE90  20                 	db	32
   300  00FE91  00                 	db	0
   301  00FE92                     STR_51:
   302                           
   303                           ; BSR set to: 0
   304  00FE92  28                 	db	40
   305  00FE93  31                 	db	49	;'1'
   306  00FE94  29                 	db	41
   307  00FE95  20                 	db	32
   308  00FE96  28                 	db	40
   309  00FE97  32                 	db	50	;'2'
   310  00FE98  29                 	db	41
   311  00FE99  20                 	db	32
   312  00FE9A  28                 	db	40
   313  00FE9B  33                 	db	51	;'3'
   314  00FE9C  29                 	db	41
   315  00FE9D  20                 	db	32
   316  00FE9E  28                 	db	40
   317  00FE9F  34                 	db	52	;'4'
   318  00FEA0  29                 	db	41
   319  00FEA1  00                 	db	0
   320  00FEA2                     STR_9:
   321                           
   322                           ; BSR set to: 0
   323  00FEA2  28                 	db	40
   324  00FEA3  32                 	db	50	;'2'
   325  00FEA4  29                 	db	41
   326  00FEA5  20                 	db	32
   327  00FEA6  53                 	db	83	;'S'
   328  00FEA7  41                 	db	65	;'A'
   329  00FEA8  56                 	db	86	;'V'
   330  00FEA9  45                 	db	69	;'E'
   331  00FEAA  20                 	db	32
   332  00FEAB  26                 	db	38
   333  00FEAC  20                 	db	32
   334  00FEAD  45                 	db	69	;'E'
   335  00FEAE  58                 	db	88	;'X'
   336  00FEAF  49                 	db	73	;'I'
   337  00FEB0  54                 	db	84	;'T'
   338  00FEB1  00                 	db	0
   339  00FEB2                     STR_43:
   340                           
   341                           ; BSR set to: 0
   342  00FEB2  28                 	db	40
   343  00FEB3  32                 	db	50	;'2'
   344  00FEB4  29                 	db	41
   345  00FEB5  20                 	db	32
   346  00FEB6  51                 	db	81	;'Q'
   347  00FEB7  55                 	db	85	;'U'
   348  00FEB8  49                 	db	73	;'I'
   349  00FEB9  54                 	db	84	;'T'
   350  00FEBA  20                 	db	32
   351  00FEBB  44                 	db	68	;'D'
   352  00FEBC  4F                 	db	79	;'O'
   353  00FEBD  20                 	db	32
   354  00FEBE  4E                 	db	78	;'N'
   355  00FEBF  4F                 	db	79	;'O'
   356  00FEC0  54                 	db	84	;'T'
   357  00FEC1  00                 	db	0
   358  00FEC2                     STR_5:
   359                           
   360                           ; BSR set to: 0
   361  00FEC2  54                 	db	84	;'T'
   362  00FEC3  49                 	db	73	;'I'
   363  00FEC4  52                 	db	82	;'R'
   364  00FEC5  2E                 	db	46
   365  00FEC6  20                 	db	32
   366  00FEC7  53                 	db	83	;'S'
   367  00FEC8  55                 	db	85	;'U'
   368  00FEC9  50                 	db	80	;'P'
   369  00FECA  50                 	db	80	;'P'
   370  00FECB  4C                 	db	76	;'L'
   371  00FECC  49                 	db	73	;'I'
   372  00FECD  45                 	db	69	;'E'
   373  00FECE  44                 	db	68	;'D'
   374  00FECF  20                 	db	32
   375  00FED0  00                 	db	0
   376  00FED1                     STR_28:
   377                           
   378                           ; BSR set to: 0
   379  00FED1  25                 	db	37
   380  00FED2  30                 	db	48	;'0'
   381  00FED3  32                 	db	50	;'2'
   382  00FED4  78                 	db	120	;'x'
   383  00FED5  2F                 	db	47
   384  00FED6  25                 	db	37
   385  00FED7  30                 	db	48	;'0'
   386  00FED8  32                 	db	50	;'2'
   387  00FED9  78                 	db	120	;'x'
   388  00FEDA  2F                 	db	47
   389  00FEDB  25                 	db	37
   390  00FEDC  30                 	db	48	;'0'
   391  00FEDD  32                 	db	50	;'2'
   392  00FEDE  78                 	db	120	;'x'
   393  00FEDF  00                 	db	0
   394  00FEE0                     STR_29:
   395                           
   396                           ; BSR set to: 0
   397  00FEE0  25                 	db	37
   398  00FEE1  30                 	db	48	;'0'
   399  00FEE2  32                 	db	50	;'2'
   400  00FEE3  78                 	db	120	;'x'
   401  00FEE4  3A                 	db	58	;':'
   402  00FEE5  25                 	db	37
   403  00FEE6  30                 	db	48	;'0'
   404  00FEE7  32                 	db	50	;'2'
   405  00FEE8  78                 	db	120	;'x'
   406  00FEE9  3A                 	db	58	;':'
   407  00FEEA  25                 	db	37
   408  00FEEB  30                 	db	48	;'0'
   409  00FEEC  32                 	db	50	;'2'
   410  00FEED  78                 	db	120	;'x'
   411  00FEEE  00                 	db	0
   412  00FEEF                     STR_14:
   413                           
   414                           ; BSR set to: 0
   415  00FEEF  54                 	db	84	;'T'
   416  00FEF0  49                 	db	73	;'I'
   417  00FEF1  52                 	db	82	;'R'
   418  00FEF2  2E                 	db	46
   419  00FEF3  20                 	db	32
   420  00FEF4  44                 	db	68	;'D'
   421  00FEF5  45                 	db	69	;'E'
   422  00FEF6  50                 	db	80	;'P'
   423  00FEF7  4C                 	db	76	;'L'
   424  00FEF8  4F                 	db	79	;'O'
   425  00FEF9  59                 	db	89	;'Y'
   426  00FEFA  3A                 	db	58	;':'
   427  00FEFB  20                 	db	32
   428  00FEFC  00                 	db	0
   429  00FEFD                     STR_49:
   430                           
   431                           ; BSR set to: 0
   432  00FEFD  28                 	db	40
   433  00FEFE  31                 	db	49	;'1'
   434  00FEFF  20                 	db	32
   435  00FF00  49                 	db	73	;'I'
   436  00FF01  53                 	db	83	;'S'
   437  00FF02  20                 	db	32
   438  00FF03  4F                 	db	79	;'O'
   439  00FF04  4C                 	db	76	;'L'
   440  00FF05  44                 	db	68	;'D'
   441  00FF06  45                 	db	69	;'E'
   442  00FF07  53                 	db	83	;'S'
   443  00FF08  54                 	db	84	;'T'
   444  00FF09  29                 	db	41
   445  00FF0A  00                 	db	0
   446  00FF0B                     STR_7:
   447                           
   448                           ; BSR set to: 0
   449  00FF0B  28                 	db	40
   450  00FF0C  31                 	db	49	;'1'
   451  00FF0D  29                 	db	41
   452  00FF0E  20                 	db	32
   453  00FF0F  50                 	db	80	;'P'
   454  00FF10  4F                 	db	79	;'O'
   455  00FF11  4C                 	db	76	;'L'
   456  00FF12  45                 	db	69	;'E'
   457  00FF13  20                 	db	32
   458  00FF14  49                 	db	73	;'I'
   459  00FF15  4E                 	db	78	;'N'
   460  00FF16  46                 	db	70	;'F'
   461  00FF17  4F                 	db	79	;'O'
   462  00FF18  00                 	db	0
   463  00FF19                     STR_33:
   464                           
   465                           ; BSR set to: 0
   466  00FF19  28                 	db	40
   467  00FF1A  32                 	db	50	;'2'
   468  00FF1B  29                 	db	41
   469  00FF1C  20                 	db	32
   470  00FF1D  56                 	db	86	;'V'
   471  00FF1E  49                 	db	73	;'I'
   472  00FF1F  45                 	db	69	;'E'
   473  00FF20  57                 	db	87	;'W'
   474  00FF21  20                 	db	32
   475  00FF22  4C                 	db	76	;'L'
   476  00FF23  4F                 	db	79	;'O'
   477  00FF24  47                 	db	71	;'G'
   478  00FF25  53                 	db	83	;'S'
   479  00FF26  00                 	db	0
   480  00FF27                     STR_18:
   481                           
   482                           ; BSR set to: 0
   483  00FF27  31                 	db	49	;'1'
   484  00FF28  3C                 	db	60	;'<'
   485  00FF29  2D                 	db	45
   486  00FF2A  20                 	db	32
   487  00FF2B  32                 	db	50	;'2'
   488  00FF2C  2D                 	db	45
   489  00FF2D  3E                 	db	62	;'>'
   490  00FF2E  20                 	db	32
   491  00FF2F  33                 	db	51	;'3'
   492  00FF30  4D                 	db	77	;'M'
   493  00FF31  45                 	db	69	;'E'
   494  00FF32  4E                 	db	78	;'N'
   495  00FF33  55                 	db	85	;'U'
   496  00FF34  00                 	db	0
   497  00FF35                     STR_39:
   498                           
   499                           ; BSR set to: 0
   500  00FF35  4F                 	db	79	;'O'
   501  00FF36  50                 	db	80	;'P'
   502  00FF37  2E                 	db	46
   503  00FF38  20                 	db	32
   504  00FF39  43                 	db	67	;'C'
   505  00FF3A  4F                 	db	79	;'O'
   506  00FF3B  4D                 	db	77	;'M'
   507  00FF3C  50                 	db	80	;'P'
   508  00FF3D  4C                 	db	76	;'L'
   509  00FF3E  45                 	db	69	;'E'
   510  00FF3F  54                 	db	84	;'T'
   511  00FF40  45                 	db	69	;'E'
   512  00FF41  00                 	db	0
   513  00FF42                     STR_41:
   514                           
   515                           ; BSR set to: 0
   516  00FF42  28                 	db	40
   517  00FF43  31                 	db	49	;'1'
   518  00FF44  29                 	db	41
   519  00FF45  20                 	db	32
   520  00FF46  56                 	db	86	;'V'
   521  00FF47  49                 	db	73	;'I'
   522  00FF48  45                 	db	69	;'E'
   523  00FF49  57                 	db	87	;'W'
   524  00FF4A  20                 	db	32
   525  00FF4B  4C                 	db	76	;'L'
   526  00FF4C  4F                 	db	79	;'O'
   527  00FF4D  47                 	db	71	;'G'
   528  00FF4E  00                 	db	0
   529  00FF4F                     STR_35:
   530                           
   531                           ; BSR set to: 0
   532  00FF4F  4F                 	db	79	;'O'
   533  00FF50  50                 	db	80	;'P'
   534  00FF51  45                 	db	69	;'E'
   535  00FF52  52                 	db	82	;'R'
   536  00FF53  41                 	db	65	;'A'
   537  00FF54  54                 	db	84	;'T'
   538  00FF55  49                 	db	73	;'I'
   539  00FF56  4F                 	db	79	;'O'
   540  00FF57  4E                 	db	78	;'N'
   541  00FF58  20                 	db	32
   542  00FF59  49                 	db	73	;'I'
   543  00FF5A  4E                 	db	78	;'N'
   544  00FF5B  00                 	db	0
   545  00FF5C                     STR_25:
   546                           
   547                           ; BSR set to: 0
   548  00FF5C  4C                 	db	76	;'L'
   549  00FF5D  65                 	db	101	;'e'
   550  00FF5E  61                 	db	97	;'a'
   551  00FF5F  76                 	db	118	;'v'
   552  00FF60  69                 	db	105	;'i'
   553  00FF61  6E                 	db	110	;'n'
   554  00FF62  67                 	db	103	;'g'
   555  00FF63  20                 	db	32
   556  00FF64  50                 	db	80	;'P'
   557  00FF65  6F                 	db	111	;'o'
   558  00FF66  6C                 	db	108	;'l'
   559  00FF67  65                 	db	101	;'e'
   560  00FF68  00                 	db	0
   561  00FF69                     STR_47:
   562                           
   563                           ; BSR set to: 0
   564  00FF69  53                 	db	83	;'S'
   565  00FF6A  45                 	db	69	;'E'
   566  00FF6B  4C                 	db	76	;'L'
   567  00FF6C  45                 	db	69	;'E'
   568  00FF6D  43                 	db	67	;'C'
   569  00FF6E  54                 	db	84	;'T'
   570  00FF6F  20                 	db	32
   571  00FF70  4C                 	db	76	;'L'
   572  00FF71  4F                 	db	79	;'O'
   573  00FF72  47                 	db	71	;'G'
   574  00FF73  00                 	db	0
   575  00FF74                     STR_24:
   576                           
   577                           ; BSR set to: 0
   578  00FF74  25                 	db	37
   579  00FF75  64                 	db	100	;'d'
   580  00FF76  20                 	db	32
   581  00FF77  6F                 	db	111	;'o'
   582  00FF78  6E                 	db	110	;'n'
   583  00FF79  20                 	db	32
   584  00FF7A  70                 	db	112	;'p'
   585  00FF7B  6F                 	db	111	;'o'
   586  00FF7C  6C                 	db	108	;'l'
   587  00FF7D  65                 	db	101	;'e'
   588  00FF7E  00                 	db	0
   589  00FF7F                     STR_2:
   590                           
   591                           ; BSR set to: 0
   592  00FF7F  4F                 	db	79	;'O'
   593  00FF80  50                 	db	80	;'P'
   594  00FF81  2E                 	db	46
   595  00FF82  20                 	db	32
   596  00FF83  54                 	db	84	;'T'
   597  00FF84  49                 	db	73	;'I'
   598  00FF85  4D                 	db	77	;'M'
   599  00FF86  45                 	db	69	;'E'
   600  00FF87  20                 	db	32
   601  00FF88  00                 	db	0
   602  00FF89                     STR_23:
   603                           
   604                           ; BSR set to: 0
   605  00FF89  54                 	db	84	;'T'
   606  00FF8A  49                 	db	73	;'I'
   607  00FF8B  52                 	db	82	;'R'
   608  00FF8C  45                 	db	69	;'E'
   609  00FF8D  20                 	db	32
   610  00FF8E  44                 	db	68	;'D'
   611  00FF8F  52                 	db	82	;'R'
   612  00FF90  4F                 	db	79	;'O'
   613  00FF91  50                 	db	80	;'P'
   614  00FF92  00                 	db	0
   615  00FF93                     STR_31:
   616                           
   617                           ; BSR set to: 0
   618  00FF93  28                 	db	40
   619  00FF94  31                 	db	49	;'1'
   620  00FF95  29                 	db	41
   621  00FF96  20                 	db	32
   622  00FF97  53                 	db	83	;'S'
   623  00FF98  54                 	db	84	;'T'
   624  00FF99  41                 	db	65	;'A'
   625  00FF9A  52                 	db	82	;'R'
   626  00FF9B  54                 	db	84	;'T'
   627  00FF9C  00                 	db	0
   628  00FF9D                     STR_52:
   629                           
   630                           ; BSR set to: 0
   631  00FF9D  77                 	db	119	;'w'
   632  00FF9E  72                 	db	114	;'r'
   633  00FF9F  6F                 	db	111	;'o'
   634  00FFA0  74                 	db	116	;'t'
   635  00FFA1  65                 	db	101	;'e'
   636  00FFA2  3A                 	db	58	;':'
   637  00FFA3  20                 	db	32
   638  00FFA4  25                 	db	37
   639  00FFA5  63                 	db	99	;'c'
   640  00FFA6  00                 	db	0
   641  00FFA7                     STR_27:
   642                           
   643                           ; BSR set to: 0
   644  00FFA7  57                 	db	87	;'W'
   645  00FFA8  45                 	db	69	;'E'
   646  00FFA9  4C                 	db	76	;'L'
   647  00FFAA  43                 	db	67	;'C'
   648  00FFAB  4F                 	db	79	;'O'
   649  00FFAC  4D                 	db	77	;'M'
   650  00FFAD  45                 	db	69	;'E'
   651  00FFAE  20                 	db	32
   652  00FFAF  00                 	db	0
   653  00FFB0                     STR_45:
   654                           
   655                           ; BSR set to: 0
   656  00FFB0  53                 	db	83	;'S'
   657  00FFB1  41                 	db	65	;'A'
   658  00FFB2  56                 	db	86	;'V'
   659  00FFB3  45                 	db	69	;'E'
   660  00FFB4  20                 	db	32
   661  00FFB5  4C                 	db	76	;'L'
   662  00FFB6  4F                 	db	79	;'O'
   663  00FFB7  47                 	db	71	;'G'
   664  00FFB8  00                 	db	0
   665  00FFB9                     STR_37:
   666                           
   667                           ; BSR set to: 0
   668  00FFB9  50                 	db	80	;'P'
   669  00FFBA  52                 	db	82	;'R'
   670  00FFBB  4F                 	db	79	;'O'
   671  00FFBC  47                 	db	71	;'G'
   672  00FFBD  52                 	db	82	;'R'
   673  00FFBE  45                 	db	69	;'E'
   674  00FFBF  53                 	db	83	;'S'
   675  00FFC0  53                 	db	83	;'S'
   676  00FFC1  00                 	db	0
   677  00FFC2                     STR_54:
   678                           
   679                           ; BSR set to: 0
   680  00FFC2  72                 	db	114	;'r'
   681  00FFC3  65                 	db	101	;'e'
   682  00FFC4  61                 	db	97	;'a'
   683  00FFC5  64                 	db	100	;'d'
   684  00FFC6  3A                 	db	58	;':'
   685  00FFC7  20                 	db	32
   686  00FFC8  25                 	db	37
   687  00FFC9  63                 	db	99	;'c'
   688  00FFCA  00                 	db	0
   689  00FFCB                     STR_10:
   690                           
   691                           ; BSR set to: 0
   692  00FFCB  25                 	db	37
   693  00FFCC  73                 	db	115	;'s'
   694  00FFCD  25                 	db	37
   695  00FFCE  64                 	db	100	;'d'
   696  00FFCF  25                 	db	37
   697  00FFD0  73                 	db	115	;'s'
   698  00FFD1  25                 	db	37
   699  00FFD2  64                 	db	100	;'d'
   700  00FFD3  00                 	db	0
   701  00FFD4                     STR_1:
   702                           
   703                           ; BSR set to: 0
   704  00FFD4  25                 	db	37
   705  00FFD5  73                 	db	115	;'s'
   706  00FFD6  25                 	db	37
   707  00FFD7  64                 	db	100	;'d'
   708  00FFD8  25                 	db	37
   709  00FFD9  73                 	db	115	;'s'
   710  00FFDA  00                 	db	0
   711  00FFDB                     STR_11:
   712                           
   713                           ; BSR set to: 0
   714  00FFDB  50                 	db	80	;'P'
   715  00FFDC  4F                 	db	79	;'O'
   716  00FFDD  4C                 	db	76	;'L'
   717  00FFDE  45                 	db	69	;'E'
   718  00FFDF  20                 	db	32
   719  00FFE0  00                 	db	0
   720  00FFE1                     STR_22:
   721                           
   722                           ; BSR set to: 0
   723  00FFE1  41                 	db	65	;'A'
   724  00FFE2  3A                 	db	58	;':'
   725  00FFE3  20                 	db	32
   726  00FFE4  25                 	db	37
   727  00FFE5  64                 	db	100	;'d'
   728  00FFE6  00                 	db	0
   729  00FFE7                     STR_21:
   730                           
   731                           ; BSR set to: 0
   732  00FFE7  42                 	db	66	;'B'
   733  00FFE8  3A                 	db	58	;':'
   734  00FFE9  20                 	db	32
   735  00FFEA  25                 	db	37
   736  00FFEB  64                 	db	100	;'d'
   737  00FFEC  00                 	db	0
   738  00FFED                     STR_19:
   739                           
   740                           ; BSR set to: 0
   741  00FFED  25                 	db	37
   742  00FFEE  6C                 	db	108	;'l'
   743  00FFEF  75                 	db	117	;'u'
   744  00FFF0  00                 	db	0
   745  00FFF1                     STR_75:
   746                           
   747                           ; BSR set to: 0
   748  00FFF1  6C                 	db	108	;'l'
   749  00FFF2  58                 	db	88	;'X'
   750  00FFF3  00                 	db	0
   751  00FFF4                     STR_57:
   752                           
   753                           ; BSR set to: 0
   754  00FFF4  6C                 	db	108	;'l'
   755  00FFF5  64                 	db	100	;'d'
   756  00FFF6  00                 	db	0
   757  00FFF7                     STR_61:
   758                           
   759                           ; BSR set to: 0
   760  00FFF7  6C                 	db	108	;'l'
   761  00FFF8  69                 	db	105	;'i'
   762  00FFF9  00                 	db	0
   763  00FFFA                     STR_71:
   764                           
   765                           ; BSR set to: 0
   766  00FFFA  6C                 	db	108	;'l'
   767  00FFFB  78                 	db	120	;'x'
   768  00FFFC  00                 	db	0
   769  00FFFD                     STR_12:
   770                           
   771                           ; BSR set to: 0
   772  00FFFD  2F                 	db	47
   773  00FFFE  00                 	db	0
   774  0000                     
   775                           ; #config settings
   776  00FFFF  00                 	db	0	; dummy byte at the end
   777  0000                     
   778                           	psect	cinit
   779  003836                     __pcinit:
   780                           	opt callstack 0
   781  003836                     start_initialization:
   782                           	opt callstack 0
   783  003836                     __initialization:
   784                           	opt callstack 0
   785                           
   786                           ; Initialize objects allocated to BANK0 (8 bytes)
   787                           ; load TBLPTR registers with __pidataBANK0
   788  003836  0E84               	movlw	low __pidataBANK0
   789  003838  6EF6               	movwf	tblptrl,c
   790  00383A  0E41               	movlw	high __pidataBANK0
   791  00383C  6EF7               	movwf	tblptrh,c
   792  00383E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   793  003840  6EF8               	movwf	tblptru,c
   794  003842  EE00  F0EC         	lfsr	0,__pdataBANK0
   795  003846  EE10 F008          	lfsr	1,8
   796  00384A                     copy_data0:
   797  00384A  0009               	tblrd		*+
   798  00384C  CFF5 FFEE          	movff	tablat,postinc0
   799  003850  50E5               	movf	postdec1,w,c
   800  003852  50E1               	movf	fsr1l,w,c
   801  003854  E1FA               	bnz	copy_data0
   802                           
   803                           ; Initialize objects allocated to COMRAM (1 bytes)
   804                           ; load TBLPTR registers with __pidataCOMRAM
   805  003856  0E9C               	movlw	low __pidataCOMRAM
   806  003858  6EF6               	movwf	tblptrl,c
   807  00385A  0E41               	movlw	high __pidataCOMRAM
   808  00385C  6EF7               	movwf	tblptrh,c
   809  00385E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   810  003860  6EF8               	movwf	tblptru,c
   811  003862  0009               	tblrd		*+	;fetch initializer
   812  003864  CFF5 F079          	movff	tablat,__pdataCOMRAM
   813                           
   814                           ; Clear objects allocated to BIGRAM (480 bytes)
   815  003868  EE01  F081         	lfsr	0,__pbssBIGRAM
   816  00386C  EE11 F0E0          	lfsr	1,480
   817  003870                     clear_0:
   818  003870  6AEE               	clrf	postinc0,c
   819  003872  50E5               	movf	postdec1,w,c
   820  003874  50E1               	movf	fsr1l,w,c
   821  003876  E1FC               	bnz	clear_0
   822  003878  50E2               	movf	fsr1h,w,c
   823  00387A  E1FA               	bnz	clear_0
   824                           
   825                           ; Clear objects allocated to BANK1 (40 bytes)
   826  00387C  EE01  F059         	lfsr	0,__pbssBANK1
   827  003880  0E28               	movlw	40
   828  003882                     clear_1:
   829  003882  6AEE               	clrf	postinc0,c
   830  003884  06E8               	decf	wreg,f,c
   831  003886  E1FD               	bnz	clear_1
   832                           
   833                           ; Clear objects allocated to BANK0 (21 bytes)
   834  003888  EE00  F0D7         	lfsr	0,__pbssBANK0
   835  00388C  0E15               	movlw	21
   836  00388E                     clear_2:
   837  00388E  6AEE               	clrf	postinc0,c
   838  003890  06E8               	decf	wreg,f,c
   839  003892  E1FD               	bnz	clear_2
   840                           
   841                           ; Clear objects allocated to COMRAM (4 bytes)
   842  003894  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   843  003896  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   844  003898  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   845  00389A  6A75               	clrf	__pbssCOMRAM& (0+255),c
   846  00389C                     end_of_initialization:
   847                           	opt callstack 0
   848  00389C                     __end_of__initialization:
   849                           	opt callstack 0
   850  00389C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   851  00389E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   852  0038A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   853  0038A2  6EF8               	movwf	tblptru,c
   854  0038A4  0100               	movlb	0
   855  0038A6  EF29  F007         	goto	_main	;jump to C main() function
   856                           
   857                           	psect	bssCOMRAM
   858  000075                     __pbssCOMRAM:
   859                           	opt callstack 0
   860  000075                     _millisecondsMeasured:
   861                           	opt callstack 0
   862  000075                     	ds	4
   863                           
   864                           	psect	dataCOMRAM
   865  000079                     __pdataCOMRAM:
   866                           	opt callstack 0
   867  000079                     _motorBDirection:
   868                           	opt callstack 0
   869  000079                     	ds	1
   870                           
   871                           	psect	bssBANK0
   872  0000D7                     __pbssBANK0:
   873                           	opt callstack 0
   874  0000D7                     _motorBDistance:
   875                           	opt callstack 0
   876  0000D7                     	ds	4
   877  0000DB                     _motorADistance:
   878                           	opt callstack 0
   879  0000DB                     	ds	4
   880  0000DF                     _nout:
   881                           	opt callstack 0
   882  0000DF                     	ds	2
   883  0000E1                     _width:
   884                           	opt callstack 0
   885  0000E1                     	ds	2
   886  0000E3                     _prec:
   887                           	opt callstack 0
   888  0000E3                     	ds	2
   889  0000E5                     _flags:
   890                           	opt callstack 0
   891  0000E5                     	ds	2
   892  0000E7                     _encoderAInterruptLast:
   893                           	opt callstack 0
   894  0000E7                     	ds	1
   895  0000E8                     _encoderBInterruptLast:
   896                           	opt callstack 0
   897  0000E8                     	ds	1
   898  0000E9                     _bottomBreakBeamTriggeredChange:
   899                           	opt callstack 0
   900  0000E9                     	ds	1
   901  0000EA                     _topBreakBeamTriggeredChange:
   902                           	opt callstack 0
   903  0000EA                     	ds	1
   904  0000EB                     _keyPressed:
   905                           	opt callstack 0
   906  0000EB                     	ds	1
   907                           
   908                           	psect	dataBANK0
   909  0000EC                     __pdataBANK0:
   910                           	opt callstack 0
   911  0000EC                     stoa@F1144:
   912                           	opt callstack 0
   913  0000EC                     	ds	7
   914  0000F3                     _motorADirection:
   915                           	opt callstack 0
   916  0000F3                     	ds	1
   917                           
   918                           	psect	bssBANK1
   919  000159                     __pbssBANK1:
   920                           	opt callstack 0
   921  000159                     	ds	8
   922  000161                     _dbuf:
   923                           	opt callstack 0
   924  000161                     	ds	32
   925                           
   926                           	psect	bssBIGRAM
   927  000181                     __pbssBIGRAM:
   928                           	opt callstack 0
   929  000181                     _logs:
   930                           	opt callstack 0
   931  000181                     	ds	480
   932                           
   933                           	psect	cstackBANK1
   934  000100                     __pcstackBANK1:
   935                           	opt callstack 0
   936  000100                     doOperation@PIDData:
   937                           	opt callstack 0
   938                           
   939                           ; 8 bytes @ 0x0
   940  000100                     	ds	8
   941  000108                     doOperation@startedDistA:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x8
   945  000108                     	ds	4
   946  00010C                     doOperation@startedDistB:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0xC
   950  00010C                     	ds	20
   951  000120                     doOperation@accelerationDelay:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x20
   955  000120                     	ds	2
   956  000122                     doOperation@tiresOnPoleAfterOp:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x22
   960  000122                     	ds	2
   961  000124                     doOperation@motorStartTime:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x24
   965  000124                     	ds	4
   966  000128                     doOperation@distanceFromLastPole:
   967                           	opt callstack 0
   968                           
   969                           ; 4 bytes @ 0x28
   970  000128                     	ds	4
   971  00012C                     doOperation@send:
   972                           	opt callstack 0
   973                           
   974                           ; 1 bytes @ 0x2C
   975  00012C                     	ds	1
   976  00012D                     doOperation@badCount:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x2D
   980  00012D                     	ds	2
   981  00012F                     doOperation@badCountBot:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x2F
   985  00012F                     	ds	2
   986  000131                     doOperation@poleNumber:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x31
   990  000131                     	ds	2
   991  000133                     doOperation@totalTiresSupplied:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x33
   995  000133                     	ds	2
   996  000135                     doOperation@timeStart:
   997                           	opt callstack 0
   998                           
   999                           ; 4 bytes @ 0x35
  1000  000135                     	ds	4
  1001  000139                     doOperation@motorBStartDistance:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x39
  1005  000139                     	ds	4
  1006  00013D                     doOperation@distanceToPole:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x3D
  1010  00013D                     	ds	4
  1011  000141                     doOperation@isDoneDrop:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x41
  1015  000141                     	ds	1
  1016  000142                     doOperation@counted:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x42
  1020  000142                     	ds	2
  1021  000144                     doOperation@tiresToDrop:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x44
  1025  000144                     	ds	2
  1026  000146                     doOperation@tiresDeployedOnPole:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x46
  1030  000146                     	ds	2
  1031  000148                     doOperation@tiresOnPole:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x48
  1035  000148                     	ds	2
  1036  00014A                     doOperation@motorAStartDistance:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x4A
  1040  00014A                     	ds	4
  1041  00014E                     doOperation@topLaserStatePrev:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x4E
  1045  00014E                     	ds	1
  1046  00014F                     doOperation@bottomLaserStatePrev:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x4F
  1050  00014F                     	ds	1
  1051  000150                     doOperation@timeInOperation:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x50
  1055  000150                     	ds	4
  1056  000154                     doOperation@i:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x54
  1060  000154                     	ds	2
  1061  000156                     doOperation@currentOperationState:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x56
  1065  000156                     	ds	1
  1066  000157                     doOperation@bottomLaserState:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x57
  1070  000157                     	ds	1
  1071  000158                     doOperation@topLaserState:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x58
  1075  000158                     	ds	1
  1076                           
  1077                           	psect	cstackBANK0
  1078  000080                     __pcstackBANK0:
  1079                           	opt callstack 0
  1080  000080                     vfpfcnvrt@cp:
  1081                           	opt callstack 0
  1082  000080                     _setMotorSpeeds$2303:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x0
  1086  000080                     	ds	2
  1087  000082                     vfpfcnvrt@done:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x2
  1091  000082                     	ds	2
  1092  000084                     _vfpfcnvrt$1408:
  1093                           	opt callstack 0
  1094  000084                     _setMotorSpeeds$2304:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x4
  1098  000084                     	ds	2
  1099  000086                     vfpfcnvrt@ll:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 8 bytes @ 0x6
  1103  000086                     	ds	2
  1104  000088                     ?_tirePositioning:
  1105                           	opt callstack 0
  1106  000088                     errorCorrectedMove@goalSpeed:
  1107                           	opt callstack 0
  1108  000088                     tirePositioning@maxOperationTime:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x8
  1112  000088                     	ds	2
  1113  00008A                     errorCorrectedMove@turnRatio:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0xA
  1117  00008A                     	ds	2
  1118  00008C                     tirePositioning@startDistanceTop:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0xC
  1122  00008C                     	ds	2
  1123  00008E                     vfpfcnvrt@c:
  1124                           	opt callstack 0
  1125  00008E                     errorCorrectedMove@motorAStartDistance:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 4 bytes @ 0xE
  1129  00008E                     	ds	1
  1130  00008F                     vfpfcnvrt@llu:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 8 bytes @ 0xF
  1134  00008F                     	ds	1
  1135  000090                     tirePositioning@startDistanceBottom:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x10
  1139  000090                     	ds	2
  1140  000092                     errorCorrectedMove@motorBStartDistance:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x12
  1144  000092                     	ds	2
  1145  000094                     tirePositioning@topPreviousState:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x14
  1149  000094                     	ds	2
  1150  000096                     tirePositioning@bottomPreviousState:
  1151                           	opt callstack 0
  1152  000096                     errorCorrectedMove@correctionConstant:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x16
  1156  000096                     	ds	1
  1157  000097                     ?_vfprintf:
  1158                           	opt callstack 0
  1159  000097                     vfprintf@fp:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x17
  1163  000097                     	ds	1
  1164  000098                     tirePositioning@distanceRecordedBottom:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x18
  1168  000098                     	ds	1
  1169  000099                     vfprintf@fmt:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x19
  1173  000099                     	ds	1
  1174  00009A                     errorCorrectedMove@error:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x1A
  1178  00009A                     	ds	1
  1179  00009B                     vfprintf@ap:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x1B
  1183  00009B                     	ds	1
  1184  00009C                     tirePositioning@distanceRecordedTop:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x1C
  1188  00009C                     	ds	1
  1189  00009D                     ?_printf:
  1190                           	opt callstack 0
  1191  00009D                     printf@fmt:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x1D
  1195  00009D                     	ds	1
  1196  00009E                     errorCorrectedMove@ASpeed:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x1E
  1200  00009E                     	ds	2
  1201  0000A0                     tirePositioning@topBreakbeam:
  1202                           	opt callstack 0
  1203  0000A0                     errorCorrectedMove@BSpeed:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x20
  1207  0000A0                     	ds	2
  1208  0000A2                     tirePositioning@bottomBreakbeam:
  1209                           	opt callstack 0
  1210  0000A2                     opErrorCorrectionDegrees@goalSpeed:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x22
  1214  0000A2                     	ds	2
  1215  0000A4                     opErrorCorrectionDegrees@turnRatio:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x24
  1219  0000A4                     	ds	2
  1220  0000A6                     opErrorCorrectionDegrees@correctionConstant:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x26
  1224  0000A6                     	ds	1
  1225  0000A7                     doDisplayLog@logNumber:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x27
  1229  0000A7                     	ds	3
  1230  0000AA                     opErrorCorrectionDegrees@distanceDegrees:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x2A
  1234  0000AA                     	ds	4
  1235  0000AE                     opErrorCorrectionDegrees@maxOperationTime:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x2E
  1239  0000AE                     	ds	4
  1240  0000B2                     ??_opErrorCorrectionDegrees:
  1241                           
  1242                           ; 1 bytes @ 0x32
  1243  0000B2                     	ds	5
  1244  0000B7                     opErrorCorrectionDegrees@motorBStartDistance:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x37
  1248  0000B7                     	ds	4
  1249  0000BB                     _opErrorCorrectionDegrees$2306:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x3B
  1253  0000BB                     	ds	4
  1254  0000BF                     opErrorCorrectionDegrees@motorAStartDistance:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x3F
  1258  0000BF                     	ds	4
  1259  0000C3                     ??_doOperation:
  1260                           
  1261                           ; 1 bytes @ 0x43
  1262  0000C3                     	ds	4
  1263  0000C7                     main@time:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 7 bytes @ 0x47
  1267  0000C7                     	ds	7
  1268  0000CE                     main@tick:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x4E
  1272  0000CE                     	ds	4
  1273  0000D2                     main@keypress:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x52
  1277  0000D2                     	ds	1
  1278  0000D3                     main@i:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x53
  1282  0000D3                     	ds	1
  1283  0000D4                     main@currentLogState:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 1 bytes @ 0x54
  1287  0000D4                     	ds	1
  1288  0000D5                     main@currentRobotState:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x55
  1292  0000D5                     	ds	1
  1293  0000D6                     main@keyValue:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x56
  1297  0000D6                     	ds	1
  1298                           
  1299                           	psect	cstackCOMRAM
  1300  000001                     __pcstackCOMRAM:
  1301                           	opt callstack 0
  1302  000001                     ??_updateMotorBEncoder:
  1303  000001                     ??_updateMotorAEncoder:
  1304  000001                     
  1305                           ; 1 bytes @ 0x0
  1306  000001                     	ds	1
  1307  000002                     updateMotorBEncoder@interruptPinState:
  1308                           	opt callstack 0
  1309  000002                     updateMotorAEncoder@interruptPinState:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x1
  1313  000002                     	ds	2
  1314  000004                     updateMotorBEncoder@directionPin:
  1315                           	opt callstack 0
  1316  000004                     updateMotorAEncoder@directionPin:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x3
  1320  000004                     	ds	2
  1321  000006                     ??_I2C_Master_Wait:
  1322  000006                     ?_strlen:
  1323                           	opt callstack 0
  1324  000006                     ?_isupper:
  1325                           	opt callstack 0
  1326  000006                     ?_isalpha:
  1327                           	opt callstack 0
  1328  000006                     ?_isdigit:
  1329                           	opt callstack 0
  1330  000006                     ?_strncmp:
  1331                           	opt callstack 0
  1332  000006                     ?_isspace:
  1333                           	opt callstack 0
  1334  000006                     ?_islower:
  1335                           	opt callstack 0
  1336  000006                     ?___wmul:
  1337                           	opt callstack 0
  1338  000006                     ?___awmod:
  1339                           	opt callstack 0
  1340  000006                     ?___lldiv:
  1341                           	opt callstack 0
  1342  000006                     ?___llmod:
  1343                           	opt callstack 0
  1344  000006                     ?___xxtofl:
  1345                           	opt callstack 0
  1346  000006                     ?___aodiv:
  1347                           	opt callstack 0
  1348  000006                     ?___aomod:
  1349                           	opt callstack 0
  1350  000006                     ?___lodiv:
  1351                           	opt callstack 0
  1352  000006                     ?___lomod:
  1353                           	opt callstack 0
  1354  000006                     pulse_e@interruptState:
  1355                           	opt callstack 0
  1356  000006                     opDelay@millis:
  1357                           	opt callstack 0
  1358  000006                     replaceOldLog@i:
  1359                           	opt callstack 0
  1360  000006                     ___wmul@multiplier:
  1361                           	opt callstack 0
  1362  000006                     ___awmod@dividend:
  1363                           	opt callstack 0
  1364  000006                     isalpha@c:
  1365                           	opt callstack 0
  1366  000006                     isdigit@c:
  1367                           	opt callstack 0
  1368  000006                     isspace@c:
  1369                           	opt callstack 0
  1370  000006                     isupper@c:
  1371                           	opt callstack 0
  1372  000006                     strlen@s:
  1373                           	opt callstack 0
  1374  000006                     strncmp@_l:
  1375                           	opt callstack 0
  1376  000006                     islower@c:
  1377                           	opt callstack 0
  1378  000006                     ___lldiv@dividend:
  1379                           	opt callstack 0
  1380  000006                     ___flge@ff1:
  1381                           	opt callstack 0
  1382  000006                     ___llmod@dividend:
  1383                           	opt callstack 0
  1384  000006                     ___xxtofl@val:
  1385                           	opt callstack 0
  1386  000006                     ___aodiv@dividend:
  1387                           	opt callstack 0
  1388  000006                     ___aomod@dividend:
  1389                           	opt callstack 0
  1390  000006                     ___lodiv@dividend:
  1391                           	opt callstack 0
  1392  000006                     ___lomod@dividend:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 8 bytes @ 0x5
  1396  000006                     	ds	1
  1397  000007                     send_nibble@data:
  1398                           	opt callstack 0
  1399  000007                     I2C_Master_Read@ackBit:
  1400                           	opt callstack 0
  1401  000007                     I2C_Master_Write@byteToWrite:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x6
  1405  000007                     	ds	1
  1406  000008                     ??_isupper:
  1407  000008                     ??_isalpha:
  1408  000008                     ??_isdigit:
  1409  000008                     ??_isspace:
  1410  000008                     ??_islower:
  1411  000008                     send_byte@data:
  1412                           	opt callstack 0
  1413  000008                     I2C_Master_Read@receivedByte:
  1414                           	opt callstack 0
  1415  000008                     ___wmul@multiplicand:
  1416                           	opt callstack 0
  1417  000008                     ___awmod@divisor:
  1418                           	opt callstack 0
  1419  000008                     strlen@a:
  1420                           	opt callstack 0
  1421  000008                     strncmp@_r:
  1422                           	opt callstack 0
  1423  000008                     opDelay@maxOperationTime:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x7
  1427  000008                     	ds	1
  1428  000009                     requestIsTireDropDone@data:
  1429                           	opt callstack 0
  1430  000009                     lcdInst@data:
  1431                           	opt callstack 0
  1432  000009                     putch@data:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 1 bytes @ 0x8
  1436  000009                     	ds	1
  1437  00000A                     ??_initLCD:
  1438  00000A                     ??___xxtofl:
  1439  00000A                     ___awmod@counter:
  1440                           	opt callstack 0
  1441  00000A                     ___wmul@product:
  1442                           	opt callstack 0
  1443  00000A                     fputc@c:
  1444                           	opt callstack 0
  1445  00000A                     strncmp@n:
  1446                           	opt callstack 0
  1447  00000A                     ___lldiv@divisor:
  1448                           	opt callstack 0
  1449  00000A                     ___flge@ff2:
  1450                           	opt callstack 0
  1451  00000A                     ___llmod@divisor:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x9
  1455  00000A                     	ds	1
  1456  00000B                     ___awmod@sign:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 1 bytes @ 0xA
  1460  00000B                     	ds	1
  1461  00000C                     ??_strncmp:
  1462  00000C                     ??_opDelay:
  1463  00000C                     ?_toupper:
  1464                           	opt callstack 0
  1465  00000C                     _isspace$1919:
  1466                           	opt callstack 0
  1467  00000C                     fputc@fp:
  1468                           	opt callstack 0
  1469  00000C                     toupper@c:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0xB
  1473  00000C                     	ds	1
  1474  00000D                     ?_atoi:
  1475                           	opt callstack 0
  1476  00000D                     atoi@s:
  1477                           	opt callstack 0
  1478  00000D                     strncmp@l:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 2 bytes @ 0xC
  1482  00000D                     	ds	1
  1483  00000E                     ??_fputc:
  1484  00000E                     ??_toupper:
  1485  00000E                     ??___flge:
  1486  00000E                     ___llmod@counter:
  1487                           	opt callstack 0
  1488  00000E                     ___xxtofl@sign:
  1489                           	opt callstack 0
  1490  00000E                     ___lldiv@quotient:
  1491                           	opt callstack 0
  1492  00000E                     ___aodiv@divisor:
  1493                           	opt callstack 0
  1494  00000E                     ___aomod@divisor:
  1495                           	opt callstack 0
  1496  00000E                     ___lodiv@divisor:
  1497                           	opt callstack 0
  1498  00000E                     ___lomod@divisor:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 8 bytes @ 0xD
  1502  00000E                     	ds	1
  1503  00000F                     ??_atoi:
  1504  00000F                     ___xxtofl@exp:
  1505                           	opt callstack 0
  1506  00000F                     strncmp@r:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 2 bytes @ 0xE
  1510  00000F                     	ds	1
  1511  000010                     ___xxtofl@arg:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 4 bytes @ 0xF
  1515  000010                     	ds	2
  1516  000012                     ___lldiv@counter:
  1517                           	opt callstack 0
  1518  000012                     _toupper$1989:
  1519                           	opt callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x11
  1522  000012                     	ds	1
  1523  000013                     ?_stoa:
  1524                           	opt callstack 0
  1525  000013                     stoa@fp:
  1526                           	opt callstack 0
  1527  000013                     atoi@neg:
  1528                           	opt callstack 0
  1529  000013                     fputs@s:
  1530                           	opt callstack 0
  1531  000013                     I2C_Master_Init@clockFreq:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x12
  1535  000013                     	ds	1
  1536  000014                     ?___flmul:
  1537                           	opt callstack 0
  1538  000014                     opDelay@startTime:
  1539                           	opt callstack 0
  1540  000014                     ___flmul@b:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x13
  1544  000014                     	ds	1
  1545  000015                     stoa@s:
  1546                           	opt callstack 0
  1547  000015                     _atoi$1892:
  1548                           	opt callstack 0
  1549  000015                     fputs@fp:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x14
  1553  000015                     	ds	1
  1554  000016                     ___aodiv@counter:
  1555                           	opt callstack 0
  1556  000016                     ___aomod@counter:
  1557                           	opt callstack 0
  1558  000016                     ___lomod@counter:
  1559                           	opt callstack 0
  1560  000016                     ___lodiv@quotient:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 8 bytes @ 0x15
  1564  000016                     	ds	1
  1565  000017                     ??_I2C_Master_Init:
  1566  000017                     ??_stoa:
  1567  000017                     ___aodiv@sign:
  1568                           	opt callstack 0
  1569  000017                     ___aomod@sign:
  1570                           	opt callstack 0
  1571  000017                     fputs@c:
  1572                           	opt callstack 0
  1573  000017                     _atoi$1894:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x16
  1577  000017                     	ds	1
  1578  000018                     ?_abs:
  1579                           	opt callstack 0
  1580  000018                     abs@a:
  1581                           	opt callstack 0
  1582  000018                     fputs@i:
  1583                           	opt callstack 0
  1584  000018                     ___flmul@a:
  1585                           	opt callstack 0
  1586  000018                     stoa@nuls:
  1587                           	opt callstack 0
  1588  000018                     ___aodiv@quotient:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 8 bytes @ 0x17
  1592  000018                     	ds	1
  1593  000019                     _atoi$1893:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x18
  1597  000019                     	ds	1
  1598  00001A                     ??_abs:
  1599  00001A                     ?_pad:
  1600                           	opt callstack 0
  1601  00001A                     pad@fp:
  1602                           	opt callstack 0
  1603  00001A                     atoi@n:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x19
  1607  00001A                     	ds	1
  1608  00001B                     
  1609                           ; 1 bytes @ 0x1A
  1610  00001B                     	ds	1
  1611  00001C                     ??___flmul:
  1612  00001C                     pad@buf:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x1B
  1616  00001C                     	ds	2
  1617  00001E                     ___lodiv@counter:
  1618                           	opt callstack 0
  1619  00001E                     pad@p:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x1D
  1623  00001E                     	ds	1
  1624  00001F                     stoa@i:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x1E
  1628  00001F                     	ds	1
  1629  000020                     ??_pad:
  1630  000020                     ___flmul@sign:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x1F
  1634  000020                     	ds	1
  1635  000021                     ___flmul@aexp:
  1636                           	opt callstack 0
  1637  000021                     pad@i:
  1638                           	opt callstack 0
  1639  000021                     stoa@w:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x20
  1643  000021                     	ds	1
  1644  000022                     ___flmul@grs:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 4 bytes @ 0x21
  1648  000022                     	ds	1
  1649  000023                     pad@w:
  1650                           	opt callstack 0
  1651  000023                     stoa@cp:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x22
  1655  000023                     	ds	2
  1656  000025                     ?_ctoa:
  1657                           	opt callstack 0
  1658  000025                     ?_dtoa:
  1659                           	opt callstack 0
  1660  000025                     ?_utoa:
  1661                           	opt callstack 0
  1662  000025                     ?_xtoa:
  1663                           	opt callstack 0
  1664  000025                     ctoa@fp:
  1665                           	opt callstack 0
  1666  000025                     dtoa@fp:
  1667                           	opt callstack 0
  1668  000025                     stoa@p:
  1669                           	opt callstack 0
  1670  000025                     utoa@fp:
  1671                           	opt callstack 0
  1672  000025                     xtoa@fp:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x24
  1676  000025                     	ds	1
  1677  000026                     ___flmul@bexp:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x25
  1681  000026                     	ds	1
  1682  000027                     ctoa@c:
  1683                           	opt callstack 0
  1684  000027                     stoa@l:
  1685                           	opt callstack 0
  1686  000027                     ___flmul@prod:
  1687                           	opt callstack 0
  1688  000027                     dtoa@d:
  1689                           	opt callstack 0
  1690  000027                     utoa@d:
  1691                           	opt callstack 0
  1692  000027                     xtoa@d:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 8 bytes @ 0x26
  1696  000027                     	ds	1
  1697  000028                     ctoa@w:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x27
  1701  000028                     	ds	3
  1702  00002B                     ___flmul@temp:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x2A
  1706  00002B                     	ds	2
  1707  00002D                     ?___fladd:
  1708                           	opt callstack 0
  1709  00002D                     ?___fldiv:
  1710                           	opt callstack 0
  1711  00002D                     ___fladd@b:
  1712                           	opt callstack 0
  1713  00002D                     ___fldiv@b:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x2C
  1717  00002D                     	ds	2
  1718  00002F                     ??_dtoa:
  1719  00002F                     ??_utoa:
  1720  00002F                     xtoa@x:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 1 bytes @ 0x2E
  1724  00002F                     	ds	1
  1725  000030                     ??_xtoa:
  1726                           
  1727                           ; 1 bytes @ 0x2F
  1728  000030                     	ds	1
  1729  000031                     ___fladd@a:
  1730                           	opt callstack 0
  1731  000031                     ___fldiv@a:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x30
  1735  000031                     	ds	4
  1736  000035                     ??___fladd:
  1737  000035                     ??___fldiv:
  1738                           
  1739                           ; 1 bytes @ 0x34
  1740  000035                     	ds	2
  1741  000037                     _dtoa$1365:
  1742                           	opt callstack 0
  1743  000037                     utoa@p:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x36
  1747  000037                     	ds	1
  1748  000038                     _xtoa$1393:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x37
  1752  000038                     	ds	1
  1753  000039                     ___fladd@signs:
  1754                           	opt callstack 0
  1755  000039                     dtoa@p:
  1756                           	opt callstack 0
  1757  000039                     utoa@w:
  1758                           	opt callstack 0
  1759  000039                     ___fldiv@rem:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 4 bytes @ 0x38
  1763  000039                     	ds	1
  1764  00003A                     ___fladd@aexp:
  1765                           	opt callstack 0
  1766  00003A                     _xtoa$1394:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x39
  1770  00003A                     	ds	1
  1771  00003B                     ___fladd@bexp:
  1772                           	opt callstack 0
  1773  00003B                     dtoa@w:
  1774                           	opt callstack 0
  1775  00003B                     utoa@n:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 8 bytes @ 0x3A
  1779  00003B                     	ds	1
  1780  00003C                     ___fladd@grs:
  1781                           	opt callstack 0
  1782  00003C                     xtoa@p:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x3B
  1786  00003C                     	ds	1
  1787  00003D                     ___fldiv@sign:
  1788                           	opt callstack 0
  1789  00003D                     dtoa@s:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x3C
  1793  00003D                     	ds	1
  1794  00003E                     xtoa@w:
  1795                           	opt callstack 0
  1796  00003E                     ___fldiv@new_exp:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 2 bytes @ 0x3D
  1800  00003E                     	ds	1
  1801  00003F                     dtoa@n:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 8 bytes @ 0x3E
  1805  00003F                     	ds	1
  1806  000040                     ___fldiv@grs:
  1807                           	opt callstack 0
  1808  000040                     xtoa@n:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 8 bytes @ 0x3F
  1812  000040                     	ds	3
  1813  000043                     utoa@i:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x42
  1817  000043                     	ds	1
  1818  000044                     ___fldiv@bexp:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 1 bytes @ 0x43
  1822  000044                     	ds	1
  1823  000045                     ___fldiv@aexp:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 1 bytes @ 0x44
  1827  000045                     	ds	1
  1828  000046                     ?___flsub:
  1829                           	opt callstack 0
  1830  000046                     ___flsub@b:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 4 bytes @ 0x45
  1834  000046                     	ds	1
  1835  000047                     dtoa@i:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x46
  1839  000047                     	ds	1
  1840  000048                     xtoa@i:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x47
  1844  000048                     	ds	2
  1845  00004A                     xtoa@c:
  1846                           	opt callstack 0
  1847  00004A                     ___flsub@a:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x49
  1851  00004A                     	ds	2
  1852  00004C                     ?_vfpfcnvrt:
  1853                           	opt callstack 0
  1854  00004C                     vfpfcnvrt@fp:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x4B
  1858  00004C                     	ds	2
  1859  00004E                     ?___fltol:
  1860                           	opt callstack 0
  1861  00004E                     vfpfcnvrt@fmt:
  1862                           	opt callstack 0
  1863  00004E                     ___fltol@f1:
  1864                           	opt callstack 0
  1865                           
  1866                           ; 4 bytes @ 0x4D
  1867  00004E                     	ds	2
  1868  000050                     vfpfcnvrt@ap:
  1869                           	opt callstack 0
  1870                           
  1871                           ; 2 bytes @ 0x4F
  1872  000050                     	ds	2
  1873  000052                     ??_vfpfcnvrt:
  1874  000052                     ??___fltol:
  1875                           
  1876                           ; 1 bytes @ 0x51
  1877  000052                     	ds	4
  1878  000056                     ___fltol@sign1:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 1 bytes @ 0x55
  1882  000056                     	ds	1
  1883  000057                     ___fltol@exp1:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 1 bytes @ 0x56
  1887  000057                     	ds	1
  1888  000058                     set_pwm_duty_cycle@dutyA:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 4 bytes @ 0x57
  1892  000058                     	ds	4
  1893  00005C                     set_pwm_duty_cycle@dutyB:
  1894                           	opt callstack 0
  1895                           
  1896                           ; 4 bytes @ 0x5B
  1897  00005C                     	ds	4
  1898  000060                     ??_set_pwm_duty_cycle:
  1899  000060                     vfprintf@cfmt:
  1900                           	opt callstack 0
  1901                           
  1902                           ; 2 bytes @ 0x5F
  1903  000060                     	ds	2
  1904  000062                     set_pwm_duty_cycle@max_duty_val:
  1905                           	opt callstack 0
  1906                           
  1907                           ; 2 bytes @ 0x61
  1908  000062                     	ds	2
  1909  000064                     set_pwm_duty_cycle@duty_valA:
  1910                           	opt callstack 0
  1911  000064                     printf@ap:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 2 bytes @ 0x63
  1915  000064                     	ds	2
  1916  000066                     ??_doDisplayLog:
  1917  000066                     set_pwm_duty_cycle@duty_valB:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x65
  1921  000066                     	ds	2
  1922  000068                     _set_pwm_duty_cycle$2302:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 4 bytes @ 0x67
  1926  000068                     	ds	2
  1927  00006A                     doDisplayLog@keypress:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x69
  1931  00006A                     	ds	1
  1932  00006B                     doDisplayLog@currentDisplayState:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 1 bytes @ 0x6A
  1936  00006B                     	ds	1
  1937  00006C                     doDisplayLog@keyValue:
  1938                           	opt callstack 0
  1939  00006C                     setMotorSpeeds@motorASpeed:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 2 bytes @ 0x6B
  1943  00006C                     	ds	1
  1944  00006D                     doDisplayLog@currentPole:
  1945                           	opt callstack 0
  1946                           
  1947                           ; 2 bytes @ 0x6C
  1948  00006D                     	ds	1
  1949  00006E                     setMotorSpeeds@Aforward:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 1 bytes @ 0x6D
  1953  00006E                     	ds	1
  1954  00006F                     setMotorSpeeds@Bforward:
  1955                           	opt callstack 0
  1956  00006F                     _doDisplayLog$2301:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x6E
  1960  00006F                     	ds	1
  1961  000070                     setMotorSpeeds@motorBSpeed:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x6F
  1965  000070                     	ds	2
  1966  000072                     ??_tirePositioning:
  1967  000072                     
  1968                           ; 1 bytes @ 0x71
  1969  000072                     	ds	1
  1970  000073                     ??_main:
  1971                           
  1972                           ; 1 bytes @ 0x72
  1973  000073                     	ds	2
  1974                           
  1975 ;;
  1976 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1977 ;;
  1978 ;; *************** function _main *****************
  1979 ;; Defined at:
  1980 ;;		line 1136 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  i               1   83[BANK0 ] unsigned char 
  1985 ;;  keyValue        1   86[BANK0 ] unsigned char 
  1986 ;;  keypress        1   82[BANK0 ] unsigned char 
  1987 ;;  time            7   71[BANK0 ] unsigned char [7]
  1988 ;;  tick            4   78[BANK0 ] unsigned long 
  1989 ;;  currentRobot    1   85[BANK0 ] enum E3430
  1990 ;;  currentLogSt    1   84[BANK0 ] enum E3437
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;Total ram usage:       18 bytes
  2005 ;; Hardware stack levels required when called:   14
  2006 ;; This function calls:
  2007 ;;		_I2C_Master_Read
  2008 ;;		_I2C_Master_Start
  2009 ;;		_I2C_Master_Stop
  2010 ;;		_I2C_Master_Write
  2011 ;;		___llmod
  2012 ;;		_doDisplayLog
  2013 ;;		_doOperation
  2014 ;;		_lcdInst
  2015 ;;		_printf
  2016 ;;		_replaceOldLog
  2017 ;;		_robotInit
  2018 ;;		_sendArduinoStandbyClampRequest
  2019 ;; This function is called by:
  2020 ;;		Startup code after reset
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text0
  2025  000E52                     __ptext0:
  2026                           	opt callstack 0
  2027  000E52                     _main:
  2028                           	opt callstack 17
  2029                           
  2030                           ;main.c: 1137:     robotInit();
  2031                           
  2032                           ;incstack = 0
  2033  000E52  ECE7  F01E         	call	_robotInit	;wreg free
  2034                           
  2035                           ;main.c: 1140:     unsigned char time[7];;main.c: 1147:     enum robotStates currentRobo
      +                          tState = standby;
  2036  000E56  0E00               	movlw	0
  2037  000E58  0100               	movlb	0	; () banked
  2038  000E5A  6FD5               	movwf	main@currentRobotState& (0+255),b
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;main.c: 1149:     enum logStates currentLogState = one;
  2042  000E5C  0E01               	movlw	1
  2043  000E5E  6FD4               	movwf	main@currentLogState& (0+255),b
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 1151:     unsigned long tick = 0ul;
  2047  000E60  0E00               	movlw	0
  2048  000E62  6FCE               	movwf	main@tick& (0+255),b
  2049  000E64  0E00               	movlw	0
  2050  000E66  6FCF               	movwf	(main@tick+1)& (0+255),b
  2051  000E68  0E00               	movlw	0
  2052  000E6A  6FD0               	movwf	(main@tick+2)& (0+255),b
  2053  000E6C  0E00               	movlw	0
  2054  000E6E  6FD1               	movwf	(main@tick+3)& (0+255),b
  2055  000E70                     l8798:
  2056                           
  2057                           ;main.c: 1155:             if (tick%10ul==0){
  2058  000E70  C0CE  F006         	movff	main@tick,___llmod@dividend
  2059  000E74  C0CF  F007         	movff	main@tick+1,___llmod@dividend+1
  2060  000E78  C0D0  F008         	movff	main@tick+2,___llmod@dividend+2
  2061  000E7C  C0D1  F009         	movff	main@tick+3,___llmod@dividend+3
  2062  000E80  0E0A               	movlw	10
  2063  000E82  6E0A               	movwf	___llmod@divisor,c
  2064  000E84  0E00               	movlw	0
  2065  000E86  6E0B               	movwf	___llmod@divisor+1,c
  2066  000E88  0E00               	movlw	0
  2067  000E8A  6E0C               	movwf	___llmod@divisor+2,c
  2068  000E8C  0E00               	movlw	0
  2069  000E8E  6E0D               	movwf	___llmod@divisor+3,c
  2070  000E90  ECF8  F01C         	call	___llmod	;wreg free
  2071  000E94  5006               	movf	?___llmod,w,c
  2072  000E96  1007               	iorwf	?___llmod+1,w,c
  2073  000E98  1008               	iorwf	?___llmod+2,w,c
  2074  000E9A  1009               	iorwf	?___llmod+3,w,c
  2075  000E9C  A4D8               	btfss	status,2,c
  2076  000E9E  D14E               	goto	l8904
  2077                           
  2078                           ;main.c: 1157:                 I2C_Master_Start();
  2079  000EA0  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  2080                           
  2081                           ;main.c: 1158:                 I2C_Master_Write(0b11010000);
  2082  000EA4  0E00               	movlw	0
  2083  000EA6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2084  000EA8  0ED0               	movlw	208
  2085  000EAA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2086  000EAC  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  2087                           
  2088                           ;main.c: 1159:                 I2C_Master_Write(0x00);
  2089  000EB0  0E00               	movlw	0
  2090  000EB2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2091  000EB4  0E00               	movlw	0
  2092  000EB6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2093  000EB8  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  2094                           
  2095                           ;main.c: 1160:                 I2C_Master_Stop();
  2096  000EBC  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  2097                           
  2098                           ;main.c: 1163:                 I2C_Master_Start();
  2099  000EC0  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  2100                           
  2101                           ;main.c: 1164:                 I2C_Master_Write(0b11010001);
  2102  000EC4  0E00               	movlw	0
  2103  000EC6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2104  000EC8  0ED1               	movlw	209
  2105  000ECA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2106  000ECC  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  2107                           
  2108                           ;main.c: 1165:                 for(unsigned char i = 0; i < 6; i++){
  2109  000ED0  0E00               	movlw	0
  2110  000ED2  0100               	movlb	0	; () banked
  2111  000ED4  6FD3               	movwf	main@i& (0+255),b
  2112  000ED6                     l8808:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;main.c: 1166:                     time[i] = I2C_Master_Read(0);
  2116  000ED6  0EC7               	movlw	low main@time
  2117  000ED8  25D3               	addwf	main@i& (0+255),w,b
  2118  000EDA  6ED9               	movwf	fsr2l,c
  2119  000EDC  6ADA               	clrf	fsr2h,c
  2120  000EDE  0E00               	movlw	high main@time
  2121  000EE0  22DA               	addwfc	fsr2h,f,c
  2122  000EE2  0E00               	movlw	0
  2123  000EE4  EC23  F020         	call	_I2C_Master_Read
  2124  000EE8  6EDF               	movwf	indf2,c
  2125                           
  2126                           ;main.c: 1167:                 }
  2127  000EEA  0100               	movlb	0	; () banked
  2128  000EEC  2BD3               	incf	main@i& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131  000EEE  0E05               	movlw	5
  2132  000EF0  65D3               	cpfsgt	main@i& (0+255),b
  2133  000EF2  D7F1               	goto	l8808
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;main.c: 1168:                 time[6] = I2C_Master_Read(1);
  2137  000EF4  0E01               	movlw	1
  2138  000EF6  EC23  F020         	call	_I2C_Master_Read
  2139  000EFA  0100               	movlb	0	; () banked
  2140  000EFC  6FCD               	movwf	(main@time+6)& (0+255),b
  2141                           
  2142                           ;main.c: 1169:                 I2C_Master_Stop();
  2143  000EFE  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  2144  000F02  D11C               	goto	l8904
  2145  000F04                     l8816:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;main.c: 1182:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2149  000F04  0E80               	movlw	128
  2150  000F06  ECB7  F020         	call	_lcdInst
  2151  000F0A  0E07               	movlw	7
  2152  000F0C  6E73               	movwf	??_main& (0+255),c
  2153  000F0E  0E7D               	movlw	125
  2154  000F10                     u10267:
  2155  000F10  2EE8               	decfsz	wreg,f,c
  2156  000F12  D7FE               	bra	u10267
  2157  000F14  2E73               	decfsz	??_main& (0+255),f,c
  2158  000F16  D7FC               	bra	u10267
  2159  000F18  F000               	nop	
  2160                           
  2161                           ;main.c: 1184:                 printf("%s", "WELCOME ");
  2162  000F1A  0ED8               	movlw	low (STR_1+4)
  2163  000F1C  0100               	movlb	0	; () banked
  2164  000F1E  6F9D               	movwf	printf@fmt& (0+255),b
  2165  000F20  0EFF               	movlw	high (STR_1+4)
  2166  000F22  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2167  000F24  0EA7               	movlw	low STR_27
  2168  000F26  6F9F               	movwf	(?_printf+2)& (0+255),b
  2169  000F28  0EFF               	movlw	high STR_27
  2170  000F2A  6FA0               	movwf	(?_printf+3)& (0+255),b
  2171  000F2C  ECFC  F01F         	call	_printf	;wreg free
  2172                           
  2173                           ;main.c: 1185:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2174  000F30  0ED1               	movlw	low STR_28
  2175  000F32  0100               	movlb	0	; () banked
  2176  000F34  6F9D               	movwf	printf@fmt& (0+255),b
  2177  000F36  0EFE               	movlw	high STR_28
  2178  000F38  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2179  000F3A  C0CD  F09F         	movff	main@time+6,?_printf+2
  2180  000F3E  6BA0               	clrf	(?_printf+3)& (0+255),b
  2181  000F40  C0CC  F0A1         	movff	main@time+5,?_printf+4
  2182  000F44  6BA2               	clrf	(?_printf+5)& (0+255),b
  2183  000F46  C0CB  F0A3         	movff	main@time+4,?_printf+6
  2184  000F4A  6BA4               	clrf	(?_printf+7)& (0+255),b
  2185  000F4C  ECFC  F01F         	call	_printf	;wreg free
  2186  000F50  0EC0               	movlw	192
  2187  000F52  ECB7  F020         	call	_lcdInst
  2188                           
  2189                           ;main.c: 1187:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2190  000F56  0EE0               	movlw	low STR_29
  2191  000F58  0100               	movlb	0	; () banked
  2192  000F5A  6F9D               	movwf	printf@fmt& (0+255),b
  2193  000F5C  0EFE               	movlw	high STR_29
  2194  000F5E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2195  000F60  C0C9  F09F         	movff	main@time+2,?_printf+2
  2196  000F64  6BA0               	clrf	(?_printf+3)& (0+255),b
  2197  000F66  C0C8  F0A1         	movff	main@time+1,?_printf+4
  2198  000F6A  6BA2               	clrf	(?_printf+5)& (0+255),b
  2199  000F6C  C0C7  F0A3         	movff	main@time,?_printf+6
  2200  000F70  6BA4               	clrf	(?_printf+7)& (0+255),b
  2201  000F72  ECFC  F01F         	call	_printf	;wreg free
  2202  000F76  0E90               	movlw	144
  2203  000F78  ECB7  F020         	call	_lcdInst
  2204                           
  2205                           ;main.c: 1189:                 printf("%s","(1) START");
  2206  000F7C  0ED8               	movlw	low (STR_1+4)
  2207  000F7E  0100               	movlb	0	; () banked
  2208  000F80  6F9D               	movwf	printf@fmt& (0+255),b
  2209  000F82  0EFF               	movlw	high (STR_1+4)
  2210  000F84  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2211  000F86  0E93               	movlw	low STR_31
  2212  000F88  6F9F               	movwf	(?_printf+2)& (0+255),b
  2213  000F8A  0EFF               	movlw	high STR_31
  2214  000F8C  6FA0               	movwf	(?_printf+3)& (0+255),b
  2215  000F8E  ECFC  F01F         	call	_printf	;wreg free
  2216  000F92  0ED0               	movlw	208
  2217  000F94  ECB7  F020         	call	_lcdInst
  2218                           
  2219                           ;main.c: 1191:                 printf("%s","(2) VIEW LOGS");
  2220  000F98  0ED8               	movlw	low (STR_1+4)
  2221  000F9A  0100               	movlb	0	; () banked
  2222  000F9C  6F9D               	movwf	printf@fmt& (0+255),b
  2223  000F9E  0EFF               	movlw	high (STR_1+4)
  2224  000FA0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2225  000FA2  0E19               	movlw	low STR_33
  2226  000FA4  6F9F               	movwf	(?_printf+2)& (0+255),b
  2227  000FA6  0EFF               	movlw	high STR_33
  2228  000FA8  6FA0               	movwf	(?_printf+3)& (0+255),b
  2229  000FAA  ECFC  F01F         	call	_printf	;wreg free
  2230                           
  2231                           ;main.c: 1192:                 break;
  2232  000FAE  D0DE               	goto	l8906
  2233  000FB0                     l8836:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;main.c: 1195:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2237  000FB0  0E80               	movlw	128
  2238  000FB2  ECB7  F020         	call	_lcdInst
  2239  000FB6  0E07               	movlw	7
  2240  000FB8  6E73               	movwf	??_main& (0+255),c
  2241  000FBA  0E7D               	movlw	125
  2242  000FBC                     u10277:
  2243  000FBC  2EE8               	decfsz	wreg,f,c
  2244  000FBE  D7FE               	bra	u10277
  2245  000FC0  2E73               	decfsz	??_main& (0+255),f,c
  2246  000FC2  D7FC               	bra	u10277
  2247  000FC4  F000               	nop	
  2248                           
  2249                           ;main.c: 1196:                 printf("%s", "OPERATION IN");
  2250  000FC6  0ED8               	movlw	low (STR_1+4)
  2251  000FC8  0100               	movlb	0	; () banked
  2252  000FCA  6F9D               	movwf	printf@fmt& (0+255),b
  2253  000FCC  0EFF               	movlw	high (STR_1+4)
  2254  000FCE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2255  000FD0  0E4F               	movlw	low STR_35
  2256  000FD2  6F9F               	movwf	(?_printf+2)& (0+255),b
  2257  000FD4  0EFF               	movlw	high STR_35
  2258  000FD6  6FA0               	movwf	(?_printf+3)& (0+255),b
  2259  000FD8  ECFC  F01F         	call	_printf	;wreg free
  2260  000FDC  0EC0               	movlw	192
  2261  000FDE  ECB7  F020         	call	_lcdInst
  2262                           
  2263                           ;main.c: 1198:                 printf("%s","PROGRESS");
  2264  000FE2  0ED8               	movlw	low (STR_1+4)
  2265  000FE4  0100               	movlb	0	; () banked
  2266  000FE6  6F9D               	movwf	printf@fmt& (0+255),b
  2267  000FE8  0EFF               	movlw	high (STR_1+4)
  2268  000FEA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2269  000FEC  0EB9               	movlw	low STR_37
  2270  000FEE  6F9F               	movwf	(?_printf+2)& (0+255),b
  2271  000FF0  0EFF               	movlw	high STR_37
  2272  000FF2  6FA0               	movwf	(?_printf+3)& (0+255),b
  2273  000FF4  ECFC  F01F         	call	_printf	;wreg free
  2274                           
  2275                           ;main.c: 1199:                 doOperation();
  2276  000FF8  EC04  F004         	call	_doOperation	;wreg free
  2277                           
  2278                           ;main.c: 1200:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2279  000FFC  0E01               	movlw	1
  2280  000FFE  ECB7  F020         	call	_lcdInst
  2281  001002  0E11               	movlw	17
  2282  001004  6E73               	movwf	??_main& (0+255),c
  2283  001006  0E3A               	movlw	58
  2284  001008                     u10287:
  2285  001008  2EE8               	decfsz	wreg,f,c
  2286  00100A  D7FE               	bra	u10287
  2287  00100C  2E73               	decfsz	??_main& (0+255),f,c
  2288  00100E  D7FC               	bra	u10287
  2289  001010  D000               	nop2	
  2290                           
  2291                           ;main.c: 1201:                 currentRobotState = operationComplete;
  2292  001012  0E02               	movlw	2
  2293  001014  D090               	goto	L1
  2294  001016                     l8854:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 1207:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2298  001016  0E80               	movlw	128
  2299  001018  ECB7  F020         	call	_lcdInst
  2300  00101C  0E07               	movlw	7
  2301  00101E  6E73               	movwf	??_main& (0+255),c
  2302  001020  0E7D               	movlw	125
  2303  001022                     u10297:
  2304  001022  2EE8               	decfsz	wreg,f,c
  2305  001024  D7FE               	bra	u10297
  2306  001026  2E73               	decfsz	??_main& (0+255),f,c
  2307  001028  D7FC               	bra	u10297
  2308  00102A  F000               	nop	
  2309                           
  2310                           ;main.c: 1208:                 printf("%s", "OP. COMPLETE");
  2311  00102C  0ED8               	movlw	low (STR_1+4)
  2312  00102E  0100               	movlb	0	; () banked
  2313  001030  6F9D               	movwf	printf@fmt& (0+255),b
  2314  001032  0EFF               	movlw	high (STR_1+4)
  2315  001034  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2316  001036  0E35               	movlw	low STR_39
  2317  001038  6F9F               	movwf	(?_printf+2)& (0+255),b
  2318  00103A  0EFF               	movlw	high STR_39
  2319  00103C  6FA0               	movwf	(?_printf+3)& (0+255),b
  2320  00103E  ECFC  F01F         	call	_printf	;wreg free
  2321  001042  0EC0               	movlw	192
  2322  001044  ECB7  F020         	call	_lcdInst
  2323                           
  2324                           ;main.c: 1210:                 printf("%s","(1) VIEW LOG");
  2325  001048  0ED8               	movlw	low (STR_1+4)
  2326  00104A  0100               	movlb	0	; () banked
  2327  00104C  6F9D               	movwf	printf@fmt& (0+255),b
  2328  00104E  0EFF               	movlw	high (STR_1+4)
  2329  001050  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2330  001052  0E42               	movlw	low STR_41
  2331  001054  6F9F               	movwf	(?_printf+2)& (0+255),b
  2332  001056  0EFF               	movlw	high STR_41
  2333  001058  6FA0               	movwf	(?_printf+3)& (0+255),b
  2334  00105A  ECFC  F01F         	call	_printf	;wreg free
  2335  00105E  0E90               	movlw	144
  2336  001060  ECB7  F020         	call	_lcdInst
  2337                           
  2338                           ;main.c: 1212:                 printf("%s","(2) QUIT DO NOT");
  2339  001064  0ED8               	movlw	low (STR_1+4)
  2340  001066  0100               	movlb	0	; () banked
  2341  001068  6F9D               	movwf	printf@fmt& (0+255),b
  2342  00106A  0EFF               	movlw	high (STR_1+4)
  2343  00106C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2344  00106E  0EB2               	movlw	low STR_43
  2345  001070  6F9F               	movwf	(?_printf+2)& (0+255),b
  2346  001072  0EFE               	movlw	high STR_43
  2347  001074  6FA0               	movwf	(?_printf+3)& (0+255),b
  2348  001076  ECFC  F01F         	call	_printf	;wreg free
  2349  00107A  0ED0               	movlw	208
  2350  00107C  ECB7  F020         	call	_lcdInst
  2351                           
  2352                           ;main.c: 1214:                 printf("%s","SAVE LOG");
  2353  001080  0ED8               	movlw	low (STR_1+4)
  2354  001082  0100               	movlb	0	; () banked
  2355  001084  6F9D               	movwf	printf@fmt& (0+255),b
  2356  001086  0EFF               	movlw	high (STR_1+4)
  2357  001088  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2358  00108A  0EB0               	movlw	low STR_45
  2359  00108C  6F9F               	movwf	(?_printf+2)& (0+255),b
  2360  00108E  0EFF               	movlw	high STR_45
  2361  001090  6FA0               	movwf	(?_printf+3)& (0+255),b
  2362  001092  ECFC  F01F         	call	_printf	;wreg free
  2363                           
  2364                           ;main.c: 1215:                 currentLogState = justRan;
  2365  001096  0E00               	movlw	0
  2366  001098  0100               	movlb	0	; () banked
  2367  00109A  6FD4               	movwf	main@currentLogState& (0+255),b
  2368                           
  2369                           ;main.c: 1216:                 break;
  2370  00109C  D067               	goto	l8906
  2371  00109E                     l8874:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;main.c: 1219:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2375  00109E  0E80               	movlw	128
  2376  0010A0  ECB7  F020         	call	_lcdInst
  2377  0010A4  0E07               	movlw	7
  2378  0010A6  6E73               	movwf	??_main& (0+255),c
  2379  0010A8  0E7D               	movlw	125
  2380  0010AA                     u10307:
  2381  0010AA  2EE8               	decfsz	wreg,f,c
  2382  0010AC  D7FE               	bra	u10307
  2383  0010AE  2E73               	decfsz	??_main& (0+255),f,c
  2384  0010B0  D7FC               	bra	u10307
  2385  0010B2  F000               	nop	
  2386                           
  2387                           ;main.c: 1220:                 printf("%s", "SELECT LOG");
  2388  0010B4  0ED8               	movlw	low (STR_1+4)
  2389  0010B6  0100               	movlb	0	; () banked
  2390  0010B8  6F9D               	movwf	printf@fmt& (0+255),b
  2391  0010BA  0EFF               	movlw	high (STR_1+4)
  2392  0010BC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2393  0010BE  0E69               	movlw	low STR_47
  2394  0010C0  6F9F               	movwf	(?_printf+2)& (0+255),b
  2395  0010C2  0EFF               	movlw	high STR_47
  2396  0010C4  6FA0               	movwf	(?_printf+3)& (0+255),b
  2397  0010C6  ECFC  F01F         	call	_printf	;wreg free
  2398  0010CA  0EC0               	movlw	192
  2399  0010CC  ECB7  F020         	call	_lcdInst
  2400                           
  2401                           ;main.c: 1222:                 printf("%s","(1 IS OLDEST)");
  2402  0010D0  0ED8               	movlw	low (STR_1+4)
  2403  0010D2  0100               	movlb	0	; () banked
  2404  0010D4  6F9D               	movwf	printf@fmt& (0+255),b
  2405  0010D6  0EFF               	movlw	high (STR_1+4)
  2406  0010D8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2407  0010DA  0EFD               	movlw	low STR_49
  2408  0010DC  6F9F               	movwf	(?_printf+2)& (0+255),b
  2409  0010DE  0EFE               	movlw	high STR_49
  2410  0010E0  6FA0               	movwf	(?_printf+3)& (0+255),b
  2411  0010E2  ECFC  F01F         	call	_printf	;wreg free
  2412  0010E6  0E90               	movlw	144
  2413  0010E8  ECB7  F020         	call	_lcdInst
  2414                           
  2415                           ;main.c: 1224:                 printf("%s","(1) (2) (3) (4)");
  2416  0010EC  0ED8               	movlw	low (STR_1+4)
  2417  0010EE  0100               	movlb	0	; () banked
  2418  0010F0  6F9D               	movwf	printf@fmt& (0+255),b
  2419  0010F2  0EFF               	movlw	high (STR_1+4)
  2420  0010F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2421  0010F6  0E92               	movlw	low STR_51
  2422  0010F8  6F9F               	movwf	(?_printf+2)& (0+255),b
  2423  0010FA  0EFE               	movlw	high STR_51
  2424  0010FC  6FA0               	movwf	(?_printf+3)& (0+255),b
  2425  0010FE  ECFC  F01F         	call	_printf	;wreg free
  2426                           
  2427                           ;main.c: 1225:                 break;
  2428  001102  D034               	goto	l8906
  2429  001104                     l8888:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 1227:                 if (currentLogState == justRan){
  2433  001104  51D4               	movf	main@currentLogState& (0+255),w,b
  2434  001106  A4D8               	btfss	status,2,c
  2435  001108  D005               	goto	l8894
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 1228:                     replaceOldLog();
  2439  00110A  EC34  F01E         	call	_replaceOldLog	;wreg free
  2440                           
  2441                           ;main.c: 1229:                     currentLogState = four;
  2442  00110E  0E04               	movlw	4
  2443  001110  0100               	movlb	0	; () banked
  2444  001112  6FD4               	movwf	main@currentLogState& (0+255),b
  2445  001114                     l8894:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 1231:                 doDisplayLog(currentLogState);
  2449  001114  C0D4  F0A7         	movff	main@currentLogState,doDisplayLog@logNumber
  2450  001118  6BA8               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2451  00111A  EC33  F009         	call	_doDisplayLog	;wreg free
  2452                           
  2453                           ;main.c: 1232:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2454  00111E  0E01               	movlw	1
  2455  001120  ECB7  F020         	call	_lcdInst
  2456  001124  0E11               	movlw	17
  2457  001126  6E73               	movwf	??_main& (0+255),c
  2458  001128  0E3A               	movlw	58
  2459  00112A                     u10317:
  2460  00112A  2EE8               	decfsz	wreg,f,c
  2461  00112C  D7FE               	bra	u10317
  2462  00112E  2E73               	decfsz	??_main& (0+255),f,c
  2463  001130  D7FC               	bra	u10317
  2464  001132  D000               	nop2	
  2465                           
  2466                           ;main.c: 1233:                 currentRobotState = standby;
  2467  001134  0E00               	movlw	0
  2468  001136                     L1:
  2469  001136  0100               	movlb	0	; () banked
  2470  001138  6FD5               	movwf	main@currentRobotState& (0+255),b
  2471                           
  2472                           ;main.c: 1234:                 break;
  2473  00113A  D018               	goto	l8906
  2474  00113C                     l8904:
  2475  00113C  0100               	movlb	0	; () banked
  2476  00113E  51D5               	movf	main@currentRobotState& (0+255),w,b
  2477  001140  6E73               	movwf	??_main& (0+255),c
  2478  001142  6A74               	clrf	(??_main+1)& (0+255),c
  2479                           
  2480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2481                           ; Switch size 1, requested type "simple"
  2482                           ; Number of cases is 1, Range of values is 0 to 0
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte            4     3 (average)
  2486                           ;	Chosen strategy is simple_byte
  2487  001144  5074               	movf	??_main+1,w,c
  2488  001146  0A00               	xorlw	0	; case 0
  2489  001148  A4D8               	btfss	status,2,c
  2490  00114A  D010               	goto	l8906
  2491                           
  2492                           ; BSR set to: 0
  2493                           ; Switch size 1, requested type "simple"
  2494                           ; Number of cases is 5, Range of values is 0 to 4
  2495                           ; switch strategies available:
  2496                           ; Name         Instructions Cycles
  2497                           ; simple_byte           16     9 (average)
  2498                           ;	Chosen strategy is simple_byte
  2499  00114C  5073               	movf	??_main,w,c
  2500  00114E  0A00               	xorlw	0	; case 0
  2501  001150  B4D8               	btfsc	status,2,c
  2502  001152  D6D8               	goto	l8816
  2503  001154  0A01               	xorlw	1	; case 1
  2504  001156  B4D8               	btfsc	status,2,c
  2505  001158  D72B               	goto	l8836
  2506  00115A  0A03               	xorlw	3	; case 2
  2507  00115C  B4D8               	btfsc	status,2,c
  2508  00115E  D75B               	goto	l8854
  2509  001160  0A01               	xorlw	1	; case 3
  2510  001162  B4D8               	btfsc	status,2,c
  2511  001164  D79C               	goto	l8874
  2512  001166  0A07               	xorlw	7	; case 4
  2513  001168  B4D8               	btfsc	status,2,c
  2514  00116A  D7CC               	goto	l8888
  2515  00116C                     l8906:
  2516                           
  2517                           ;main.c: 1238:         if(keyPressed){
  2518  00116C  0100               	movlb	0	; () banked
  2519  00116E  51EB               	movf	_keyPressed& (0+255),w,b	;volatile
  2520  001170  B4D8               	btfsc	status,2,c
  2521  001172  D06A               	goto	l416
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 1241:             keyPressed = 0;
  2525  001174  0E00               	movlw	0
  2526  001176  6FEB               	movwf	_keyPressed& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;main.c: 1244:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2530  001178  3881               	swapf	3969,w,c	;volatile
  2531  00117A  0B0F               	andlw	15
  2532  00117C  0B0F               	andlw	15
  2533  00117E  6FD2               	movwf	main@keypress& (0+255),b
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;main.c: 1245:             char keyValue = keys[keypress];
  2537  001180  0E5F               	movlw	low _keys
  2538  001182  25D2               	addwf	main@keypress& (0+255),w,b
  2539  001184  6EF6               	movwf	tblptrl,c
  2540  001186  6AF7               	clrf	tblptrh,c
  2541  001188  0EFE               	movlw	high _keys
  2542  00118A  22F7               	addwfc	tblptrh,f,c
  2543  00118C                     	if	0	;There are less than 3 active tblptr bytes
  2544  00118C                     	endif
  2545  00118C  0008               	tblrd		*
  2546  00118E  CFF5 F0D6          	movff	tablat,main@keyValue
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;main.c: 1246:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2550  001192  0E01               	movlw	1
  2551  001194  ECB7  F020         	call	_lcdInst
  2552  001198  0E11               	movlw	17
  2553  00119A  6E73               	movwf	??_main& (0+255),c
  2554  00119C  0E3A               	movlw	58
  2555  00119E                     u10327:
  2556  00119E  2EE8               	decfsz	wreg,f,c
  2557  0011A0  D7FE               	bra	u10327
  2558  0011A2  2E73               	decfsz	??_main& (0+255),f,c
  2559  0011A4  D7FC               	bra	u10327
  2560  0011A6  D000               	nop2	
  2561                           
  2562                           ;main.c: 1247:             switch (currentRobotState){
  2563  0011A8  D039               	goto	l8958
  2564  0011AA                     l8918:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;main.c: 1249:                     if (keyValue == '1'){
  2568  0011AA  0E31               	movlw	49
  2569  0011AC  19D6               	xorwf	main@keyValue& (0+255),w,b
  2570  0011AE  A4D8               	btfss	status,2,c
  2571  0011B0  D002               	goto	l8922
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;main.c: 1250:                         currentRobotState = operation;
  2575  0011B2  0E01               	movlw	1
  2576  0011B4  D018               	goto	L4
  2577  0011B6                     l8922:
  2578                           
  2579                           ; BSR set to: 0
  2580  0011B6  0E32               	movlw	50
  2581  0011B8  19D6               	xorwf	main@keyValue& (0+255),w,b
  2582  0011BA  A4D8               	btfss	status,2,c
  2583  0011BC  D002               	goto	l8926
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;main.c: 1252:                         currentRobotState = selectLog;
  2587  0011BE  0E03               	movlw	3
  2588  0011C0  D012               	goto	L4
  2589  0011C2                     l8926:
  2590                           
  2591                           ; BSR set to: 0
  2592  0011C2  0E41               	movlw	65
  2593  0011C4  19D6               	xorwf	main@keyValue& (0+255),w,b
  2594  0011C6  A4D8               	btfss	status,2,c
  2595  0011C8  D03F               	goto	l416
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 1254:                         sendArduinoStandbyClampRequest();
  2599  0011CA  EC35  F020         	call	_sendArduinoStandbyClampRequest	;wreg free
  2600  0011CE  D03C               	goto	l416
  2601  0011D0                     l8930:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;main.c: 1260:                     if (keyValue == '1'){
  2605  0011D0  0E31               	movlw	49
  2606  0011D2  19D6               	xorwf	main@keyValue& (0+255),w,b
  2607  0011D4  A4D8               	btfss	status,2,c
  2608  0011D6  D002               	goto	l8934
  2609  0011D8                     u10180:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;main.c: 1261:                         currentRobotState = displayLog;
  2613  0011D8  0E04               	movlw	4
  2614  0011DA  D005               	goto	L4
  2615  0011DC                     l8934:
  2616                           
  2617                           ; BSR set to: 0
  2618  0011DC  0E32               	movlw	50
  2619  0011DE  19D6               	xorwf	main@keyValue& (0+255),w,b
  2620  0011E0  A4D8               	btfss	status,2,c
  2621  0011E2  D032               	goto	l416
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;main.c: 1263:                         currentRobotState = standby;
  2625  0011E4  0E00               	movlw	0
  2626  0011E6                     L4:
  2627  0011E6  6FD5               	movwf	main@currentRobotState& (0+255),b
  2628  0011E8  D02F               	goto	l416
  2629  0011EA                     l8938:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;main.c: 1267:                     if (keyValue == '1'){
  2633  0011EA  0E31               	movlw	49
  2634  0011EC  19D6               	xorwf	main@keyValue& (0+255),w,b
  2635  0011EE  A4D8               	btfss	status,2,c
  2636  0011F0  D002               	goto	l8942
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;main.c: 1268:                         currentLogState = one;
  2640  0011F2  0E01               	movlw	1
  2641  0011F4  D011               	goto	L7
  2642  0011F6                     l8942:
  2643                           
  2644                           ; BSR set to: 0
  2645  0011F6  0E32               	movlw	50
  2646  0011F8  19D6               	xorwf	main@keyValue& (0+255),w,b
  2647  0011FA  A4D8               	btfss	status,2,c
  2648  0011FC  D002               	goto	l8946
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 1270:                         currentLogState = two;
  2652  0011FE  0E02               	movlw	2
  2653  001200  D00B               	goto	L7
  2654  001202                     l8946:
  2655                           
  2656                           ; BSR set to: 0
  2657  001202  0E33               	movlw	51
  2658  001204  19D6               	xorwf	main@keyValue& (0+255),w,b
  2659  001206  A4D8               	btfss	status,2,c
  2660  001208  D002               	goto	l8950
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;main.c: 1272:                         currentLogState = three;
  2664  00120A  0E03               	movlw	3
  2665  00120C  D005               	goto	L7
  2666  00120E                     l8950:
  2667                           
  2668                           ; BSR set to: 0
  2669  00120E  0E34               	movlw	52
  2670  001210  19D6               	xorwf	main@keyValue& (0+255),w,b
  2671  001212  A4D8               	btfss	status,2,c
  2672  001214  D019               	goto	l416
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 1274:                         currentLogState = '4';
  2676  001216  0E34               	movlw	52
  2677  001218                     L7:
  2678  001218  6FD4               	movwf	main@currentLogState& (0+255),b
  2679                           
  2680                           ;main.c: 1275:                     } else {
  2681  00121A  D7DE               	goto	u10180
  2682  00121C                     l8958:
  2683  00121C  0100               	movlb	0	; () banked
  2684  00121E  51D5               	movf	main@currentRobotState& (0+255),w,b
  2685  001220  6E73               	movwf	??_main& (0+255),c
  2686  001222  6A74               	clrf	(??_main+1)& (0+255),c
  2687                           
  2688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 1, Range of values is 0 to 0
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            4     3 (average)
  2694                           ;	Chosen strategy is simple_byte
  2695  001224  5074               	movf	??_main+1,w,c
  2696  001226  0A00               	xorlw	0	; case 0
  2697  001228  A4D8               	btfss	status,2,c
  2698  00122A  D00E               	goto	l416
  2699                           
  2700                           ; BSR set to: 0
  2701                           ; Switch size 1, requested type "simple"
  2702                           ; Number of cases is 5, Range of values is 0 to 4
  2703                           ; switch strategies available:
  2704                           ; Name         Instructions Cycles
  2705                           ; simple_byte           16     9 (average)
  2706                           ;	Chosen strategy is simple_byte
  2707  00122C  5073               	movf	??_main,w,c
  2708  00122E  0A00               	xorlw	0	; case 0
  2709  001230  B4D8               	btfsc	status,2,c
  2710  001232  D7BB               	goto	l8918
  2711  001234  0A01               	xorlw	1	; case 1
  2712  001236  B4D8               	btfsc	status,2,c
  2713  001238  D007               	goto	l416
  2714  00123A  0A03               	xorlw	3	; case 2
  2715  00123C  B4D8               	btfsc	status,2,c
  2716  00123E  D7C8               	goto	l8930
  2717  001240  0A01               	xorlw	1	; case 3
  2718  001242  B4D8               	btfsc	status,2,c
  2719  001244  D7D2               	goto	l8938
  2720  001246  0A07               	xorlw	7	; case 4
  2721  001248                     l416:
  2722                           
  2723                           ;main.c: 1295:         tick++;
  2724                           
  2725                           ; BSR set to: 0
  2726  001248  0E01               	movlw	1
  2727  00124A  0100               	movlb	0	; () banked
  2728  00124C  27CE               	addwf	main@tick& (0+255),f,b
  2729  00124E  0E00               	movlw	0
  2730  001250  23CF               	addwfc	(main@tick+1)& (0+255),f,b
  2731  001252  23D0               	addwfc	(main@tick+2)& (0+255),f,b
  2732  001254  23D1               	addwfc	(main@tick+3)& (0+255),f,b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;main.c: 1296:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2736  001256  0E04               	movlw	4
  2737  001258  6E73               	movwf	??_main& (0+255),c
  2738  00125A  0E3E               	movlw	62
  2739  00125C                     u10337:
  2740  00125C  2EE8               	decfsz	wreg,f,c
  2741  00125E  D7FE               	bra	u10337
  2742  001260  2E73               	decfsz	??_main& (0+255),f,c
  2743  001262  D7FC               	bra	u10337
  2744  001264  D605               	goto	l8798
  2745  001266                     __end_of_main:
  2746                           	opt callstack 0
  2747                           
  2748 ;; *************** function _sendArduinoStandbyClampRequest *****************
  2749 ;; Defined at:
  2750 ;;		line 503 in file "main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  data            1    0        unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        1 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    4
  2771 ;; This function calls:
  2772 ;;		_I2C_Master_Start
  2773 ;;		_I2C_Master_Stop
  2774 ;;		_I2C_Master_Write
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text1
  2781  00406A                     __ptext1:
  2782                           	opt callstack 0
  2783  00406A                     _sendArduinoStandbyClampRequest:
  2784                           	opt callstack 26
  2785                           
  2786                           ;main.c: 510:     I2C_Master_Start();
  2787                           
  2788                           ;incstack = 0
  2789  00406A  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  2790                           
  2791                           ;main.c: 511:     I2C_Master_Write(0b00010000);
  2792  00406E  0E00               	movlw	0
  2793  004070  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2794  004072  0E10               	movlw	16
  2795  004074  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2796  004076  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  2797                           
  2798                           ;main.c: 512:     I2C_Master_Write(data);
  2799  00407A  0E00               	movlw	0
  2800  00407C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2801  00407E  0E41               	movlw	65
  2802  004080  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2803  004082  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  2804                           
  2805                           ;main.c: 513:     I2C_Master_Stop();
  2806  004086  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  2807  00408A  0012               	return		;funcret
  2808  00408C                     __end_of_sendArduinoStandbyClampRequest:
  2809                           	opt callstack 0
  2810                           
  2811 ;; *************** function _robotInit *****************
  2812 ;; Defined at:
  2813 ;;		line 1083 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    7
  2834 ;; This function calls:
  2835 ;;		_EncoderInit
  2836 ;;		_I2C_Master_Init
  2837 ;;		_initLCD
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;;		_mainEEPROM
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text2
  2845  003DCE                     __ptext2:
  2846                           	opt callstack 0
  2847  003DCE                     _robotInit:
  2848                           	opt callstack 23
  2849                           
  2850                           ;main.c: 1085:     EncoderInit();
  2851                           
  2852                           ;incstack = 0
  2853  003DCE  EC88  F020         	call	_EncoderInit	;wreg free
  2854                           
  2855                           ;main.c: 1089:     LATD = 0x00;
  2856  003DD2  0E00               	movlw	0
  2857  003DD4  6E8C               	movwf	3980,c	;volatile
  2858                           
  2859                           ;main.c: 1090:     TRISD = 0x00;
  2860  003DD6  0E00               	movlw	0
  2861  003DD8  6E95               	movwf	3989,c	;volatile
  2862                           
  2863                           ;main.c: 1093:     LATB = 0x00;
  2864  003DDA  0E00               	movlw	0
  2865  003DDC  6E8A               	movwf	3978,c	;volatile
  2866                           
  2867                           ;main.c: 1094:     TRISBbits.TRISB1 = 1;
  2868  003DDE  8293               	bsf	3987,1,c	;volatile
  2869                           
  2870                           ;main.c: 1095:     TRISBbits.TRISB4 = 1;
  2871  003DE0  8893               	bsf	3987,4,c	;volatile
  2872                           
  2873                           ;main.c: 1096:     TRISBbits.TRISB5 = 1;
  2874  003DE2  8A93               	bsf	3987,5,c	;volatile
  2875                           
  2876                           ;main.c: 1097:     TRISBbits.TRISB6 = 1;
  2877  003DE4  8C93               	bsf	3987,6,c	;volatile
  2878                           
  2879                           ;main.c: 1098:     TRISBbits.TRISB7 = 1;
  2880  003DE6  8E93               	bsf	3987,7,c	;volatile
  2881                           
  2882                           ;main.c: 1101:     TRISAbits.TRISA4 = 0;
  2883  003DE8  9892               	bcf	3986,4,c	;volatile
  2884                           
  2885                           ;main.c: 1102:     LATAbits.LATA4 = 0;
  2886  003DEA  9889               	bcf	3977,4,c	;volatile
  2887                           
  2888                           ;main.c: 1105:     I2C_Master_Init(100000);
  2889  003DEC  0EA0               	movlw	160
  2890  003DEE  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2891  003DF0  0E86               	movlw	134
  2892  003DF2  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2893  003DF4  0E01               	movlw	1
  2894  003DF6  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2895  003DF8  0E00               	movlw	0
  2896  003DFA  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2897  003DFC  EC5D  F01D         	call	_I2C_Master_Init	;wreg free
  2898                           
  2899                           ;main.c: 1112:     ADCON1 = 0b00001111;
  2900  003E00  0E0F               	movlw	15
  2901  003E02  6EC1               	movwf	4033,c	;volatile
  2902                           
  2903                           ;main.c: 1115:     INT1IE = 1;
  2904  003E04  86F0               	bsf	4080,3,c	;volatile
  2905                           
  2906                           ;main.c: 1118:     initLCD();
  2907  003E06  ECC3  F01C         	call	_initLCD	;wreg free
  2908                           
  2909                           ;main.c: 1121:     (INTCONbits.GIE = 1);
  2910  003E0A  8EF2               	bsf	4082,7,c	;volatile
  2911  003E0C  0012               	return		;funcret
  2912  003E0E                     __end_of_robotInit:
  2913                           	opt callstack 0
  2914                           
  2915 ;; *************** function _initLCD *****************
  2916 ;; Defined at:
  2917 ;;		line 69 in file "lcd.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        1 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    6
  2938 ;; This function calls:
  2939 ;;		_lcdInst
  2940 ;;		_send_byte
  2941 ;;		_send_nibble
  2942 ;; This function is called by:
  2943 ;;		_robotInit
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text3
  2948  003986                     __ptext3:
  2949                           	opt callstack 0
  2950  003986                     _initLCD:
  2951                           	opt callstack 23
  2952                           
  2953                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2954                           
  2955                           ;incstack = 0
  2956  003986  0E31               	movlw	49
  2957  003988  6E0A               	movwf	??_initLCD& (0+255),c
  2958  00398A  0EB2               	movlw	178
  2959  00398C                     u10347:
  2960  00398C  2EE8               	decfsz	wreg,f,c
  2961  00398E  D7FE               	bra	u10347
  2962  003990  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2963  003992  D7FC               	bra	u10347
  2964  003994  D000               	nop2	
  2965                           
  2966                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2967  003996  948C               	bcf	3980,2,c	;volatile
  2968                           
  2969                           ;lcd.c: 74:     send_nibble(0b0011);
  2970  003998  0E03               	movlw	3
  2971  00399A  EC94  F020         	call	_send_nibble
  2972                           
  2973                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2974  00399E  0E11               	movlw	17
  2975  0039A0  6E0A               	movwf	??_initLCD& (0+255),c
  2976  0039A2  0E3A               	movlw	58
  2977  0039A4                     u10357:
  2978  0039A4  2EE8               	decfsz	wreg,f,c
  2979  0039A6  D7FE               	bra	u10357
  2980  0039A8  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2981  0039AA  D7FC               	bra	u10357
  2982  0039AC  D000               	nop2	
  2983                           
  2984                           ;lcd.c: 76:     send_nibble(0b0011);
  2985  0039AE  0E03               	movlw	3
  2986  0039B0  EC94  F020         	call	_send_nibble
  2987                           
  2988                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2989  0039B4  0E7D               	movlw	125
  2990  0039B6                     u10367:
  2991  0039B6  2EE8               	decfsz	wreg,f,c
  2992  0039B8  D7FE               	bra	u10367
  2993                           
  2994                           ;lcd.c: 78:     send_byte(0b00110010);
  2995  0039BA  0E32               	movlw	50
  2996  0039BC  ECA8  F020         	call	_send_byte
  2997                           
  2998                           ;lcd.c: 80:     send_byte(0b00101000);
  2999  0039C0  0E28               	movlw	40
  3000  0039C2  ECA8  F020         	call	_send_byte
  3001                           
  3002                           ;lcd.c: 81:     send_byte(0b00001000);
  3003  0039C6  0E08               	movlw	8
  3004  0039C8  ECA8  F020         	call	_send_byte
  3005                           
  3006                           ;lcd.c: 82:     send_byte(0b00000001);
  3007  0039CC  0E01               	movlw	1
  3008  0039CE  ECA8  F020         	call	_send_byte
  3009                           
  3010                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3011  0039D2  0E11               	movlw	17
  3012  0039D4  6E0A               	movwf	??_initLCD& (0+255),c
  3013  0039D6  0E3A               	movlw	58
  3014  0039D8                     u10377:
  3015  0039D8  2EE8               	decfsz	wreg,f,c
  3016  0039DA  D7FE               	bra	u10377
  3017  0039DC  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3018  0039DE  D7FC               	bra	u10377
  3019  0039E0  D000               	nop2	
  3020                           
  3021                           ;lcd.c: 84:     send_byte(0b00000110);
  3022  0039E2  0E06               	movlw	6
  3023  0039E4  ECA8  F020         	call	_send_byte
  3024                           
  3025                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  3026  0039E8  0E0C               	movlw	12
  3027  0039EA  ECB7  F020         	call	_lcdInst
  3028  0039EE  0012               	return		;funcret
  3029  0039F0                     __end_of_initLCD:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _I2C_Master_Init *****************
  3033 ;; Defined at:
  3034 ;;		line 32 in file "I2C.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;Total ram usage:        8 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    3
  3055 ;; This function calls:
  3056 ;;		___lldiv
  3057 ;; This function is called by:
  3058 ;;		_robotInit
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text4
  3063  003ABA                     __ptext4:
  3064                           	opt callstack 0
  3065  003ABA                     _I2C_Master_Init:
  3066                           	opt callstack 26
  3067                           
  3068                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3069                           
  3070                           ;incstack = 0
  3071  003ABA  9AC6               	bcf	4038,5,c	;volatile
  3072                           
  3073                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3074  003ABC  8694               	bsf	3988,3,c	;volatile
  3075                           
  3076                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3077  003ABE  8894               	bsf	3988,4,c	;volatile
  3078                           
  3079                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3080  003AC0  0E80               	movlw	128
  3081  003AC2  6E06               	movwf	___lldiv@dividend,c
  3082  003AC4  0E96               	movlw	150
  3083  003AC6  6E07               	movwf	___lldiv@dividend+1,c
  3084  003AC8  0E98               	movlw	152
  3085  003ACA  6E08               	movwf	___lldiv@dividend+2,c
  3086  003ACC  0E00               	movlw	0
  3087  003ACE  6E09               	movwf	___lldiv@dividend+3,c
  3088  003AD0  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3089  003AD4  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3090  003AD8  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3091  003ADC  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3092  003AE0  0E02               	movlw	2
  3093  003AE2                     u6505:
  3094  003AE2  90D8               	bcf	status,0,c
  3095  003AE4  3617               	rlcf	??_I2C_Master_Init,f,c
  3096  003AE6  3618               	rlcf	??_I2C_Master_Init+1,f,c
  3097  003AE8  3619               	rlcf	??_I2C_Master_Init+2,f,c
  3098  003AEA  361A               	rlcf	??_I2C_Master_Init+3,f,c
  3099  003AEC  2EE8               	decfsz	wreg,f,c
  3100  003AEE  D7F9               	goto	u6505
  3101  003AF0  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  3102  003AF4  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3103  003AF8  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3104  003AFC  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3105  003B00  ECDA  F01B         	call	___lldiv	;wreg free
  3106  003B04  0406               	decf	?___lldiv,w,c
  3107  003B06  6EC8               	movwf	4040,c	;volatile
  3108                           
  3109                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3110  003B08  0E80               	movlw	128
  3111  003B0A  6EC7               	movwf	4039,c	;volatile
  3112                           
  3113                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3114  003B0C  0E28               	movlw	40
  3115  003B0E  6EC6               	movwf	4038,c	;volatile
  3116                           
  3117                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3118  003B10  0E00               	movlw	0
  3119  003B12  6EC5               	movwf	4037,c	;volatile
  3120  003B14  0012               	return		;funcret
  3121  003B16                     __end_of_I2C_Master_Init:
  3122                           	opt callstack 0
  3123                           
  3124 ;; *************** function ___lldiv *****************
  3125 ;; Defined at:
  3126 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  dividend        4    5[COMRAM] unsigned long 
  3129 ;;  divisor         4    9[COMRAM] unsigned long 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  quotient        4   13[COMRAM] unsigned long 
  3132 ;;  counter         1   17[COMRAM] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  4    5[COMRAM] unsigned long 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3142 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;Total ram usage:       13 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    2
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_I2C_Master_Init
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text5
  3157  0037B4                     __ptext5:
  3158                           	opt callstack 0
  3159  0037B4                     ___lldiv:
  3160                           	opt callstack 26
  3161                           
  3162                           ;incstack = 0
  3163  0037B4  0E00               	movlw	0
  3164  0037B6  6E0E               	movwf	___lldiv@quotient,c
  3165  0037B8  0E00               	movlw	0
  3166  0037BA  6E0F               	movwf	___lldiv@quotient+1,c
  3167  0037BC  0E00               	movlw	0
  3168  0037BE  6E10               	movwf	___lldiv@quotient+2,c
  3169  0037C0  0E00               	movlw	0
  3170  0037C2  6E11               	movwf	___lldiv@quotient+3,c
  3171  0037C4  500A               	movf	___lldiv@divisor,w,c
  3172  0037C6  100B               	iorwf	___lldiv@divisor+1,w,c
  3173  0037C8  100C               	iorwf	___lldiv@divisor+2,w,c
  3174  0037CA  100D               	iorwf	___lldiv@divisor+3,w,c
  3175  0037CC  B4D8               	btfsc	status,2,c
  3176  0037CE  D02A               	goto	l761
  3177  0037D0  0E01               	movlw	1
  3178  0037D2  6E12               	movwf	___lldiv@counter,c
  3179  0037D4  D006               	goto	l5708
  3180  0037D6                     l5706:
  3181  0037D6  90D8               	bcf	status,0,c
  3182  0037D8  360A               	rlcf	___lldiv@divisor,f,c
  3183  0037DA  360B               	rlcf	___lldiv@divisor+1,f,c
  3184  0037DC  360C               	rlcf	___lldiv@divisor+2,f,c
  3185  0037DE  360D               	rlcf	___lldiv@divisor+3,f,c
  3186  0037E0  2A12               	incf	___lldiv@counter,f,c
  3187  0037E2                     l5708:
  3188  0037E2  AE0D               	btfss	___lldiv@divisor+3,7,c
  3189  0037E4  D7F8               	goto	l5706
  3190  0037E6                     u6270:
  3191  0037E6  90D8               	bcf	status,0,c
  3192  0037E8  360E               	rlcf	___lldiv@quotient,f,c
  3193  0037EA  360F               	rlcf	___lldiv@quotient+1,f,c
  3194  0037EC  3610               	rlcf	___lldiv@quotient+2,f,c
  3195  0037EE  3611               	rlcf	___lldiv@quotient+3,f,c
  3196  0037F0  500A               	movf	___lldiv@divisor,w,c
  3197  0037F2  5C06               	subwf	___lldiv@dividend,w,c
  3198  0037F4  500B               	movf	___lldiv@divisor+1,w,c
  3199  0037F6  5807               	subwfb	___lldiv@dividend+1,w,c
  3200  0037F8  500C               	movf	___lldiv@divisor+2,w,c
  3201  0037FA  5808               	subwfb	___lldiv@dividend+2,w,c
  3202  0037FC  500D               	movf	___lldiv@divisor+3,w,c
  3203  0037FE  5809               	subwfb	___lldiv@dividend+3,w,c
  3204  003800  A0D8               	btfss	status,0,c
  3205  003802  D009               	goto	l5718
  3206  003804  500A               	movf	___lldiv@divisor,w,c
  3207  003806  5E06               	subwf	___lldiv@dividend,f,c
  3208  003808  500B               	movf	___lldiv@divisor+1,w,c
  3209  00380A  5A07               	subwfb	___lldiv@dividend+1,f,c
  3210  00380C  500C               	movf	___lldiv@divisor+2,w,c
  3211  00380E  5A08               	subwfb	___lldiv@dividend+2,f,c
  3212  003810  500D               	movf	___lldiv@divisor+3,w,c
  3213  003812  5A09               	subwfb	___lldiv@dividend+3,f,c
  3214  003814  800E               	bsf	___lldiv@quotient,0,c
  3215  003816                     l5718:
  3216  003816  90D8               	bcf	status,0,c
  3217  003818  320D               	rrcf	___lldiv@divisor+3,f,c
  3218  00381A  320C               	rrcf	___lldiv@divisor+2,f,c
  3219  00381C  320B               	rrcf	___lldiv@divisor+1,f,c
  3220  00381E  320A               	rrcf	___lldiv@divisor,f,c
  3221  003820  2E12               	decfsz	___lldiv@counter,f,c
  3222  003822  D7E1               	goto	u6270
  3223  003824                     l761:
  3224  003824  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  3225  003828  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  3226  00382C  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  3227  003830  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  3228  003834  0012               	return		;funcret
  3229  003836                     __end_of___lldiv:
  3230                           	opt callstack 0
  3231                           
  3232 ;; *************** function _EncoderInit *****************
  3233 ;; Defined at:
  3234 ;;		line 192 in file "main.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_robotInit
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text6
  3263  004110                     __ptext6:
  3264                           	opt callstack 0
  3265  004110                     _EncoderInit:
  3266                           	opt callstack 27
  3267                           
  3268                           ;main.c: 193:   motorBDirection = 1;
  3269                           
  3270                           ;incstack = 0
  3271  004110  0E01               	movlw	1
  3272  004112  6E79               	movwf	_motorBDirection,c	;volatile
  3273                           
  3274                           ;main.c: 194:   motorADirection = 1;
  3275  004114  0E01               	movlw	1
  3276  004116  0100               	movlb	0	; () banked
  3277  004118  6FF3               	movwf	_motorADirection& (0+255),b	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;main.c: 197:   TRISCbits.TRISC0 = 1;
  3281  00411A  8094               	bsf	3988,0,c	;volatile
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;main.c: 198:   TRISEbits.TRISE1 = 1;
  3285  00411C  8296               	bsf	3990,1,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 199:   TRISBbits.TRISB2 = 1;
  3289  00411E  8493               	bsf	3987,2,c	;volatile
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;main.c: 200:   TRISBbits.TRISB0 = 1;
  3293  004120  8093               	bsf	3987,0,c	;volatile
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;main.c: 203:   INT2IE = 1;
  3297  004122  88F0               	bsf	4080,4,c	;volatile
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;main.c: 205:   INT0IE = 1;
  3301  004124  88F2               	bsf	4082,4,c	;volatile
  3302                           
  3303                           ; BSR set to: 0
  3304  004126  0012               	return		;funcret
  3305  004128                     __end_of_EncoderInit:
  3306                           	opt callstack 0
  3307                           
  3308 ;; *************** function _replaceOldLog *****************
  3309 ;; Defined at:
  3310 ;;		line 1129 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  i               2    5[COMRAM] int 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    2
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text7
  3339  003C68                     __ptext7:
  3340                           	opt callstack 0
  3341  003C68                     _replaceOldLog:
  3342                           	opt callstack 28
  3343                           
  3344                           ;main.c: 1130:     for (int i = 0; i< 48; i++){
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;incstack = 0
  3348  003C68  0E00               	movlw	0
  3349  003C6A  6E07               	movwf	replaceOldLog@i+1,c
  3350  003C6C  0E00               	movlw	0
  3351  003C6E  6E06               	movwf	replaceOldLog@i,c
  3352  003C70                     l6424:
  3353                           
  3354                           ;main.c: 1131:         logs[4][i] = logs[0][i];
  3355  003C70  90D8               	bcf	status,0,c
  3356  003C72  3406               	rlcf	replaceOldLog@i,w,c
  3357  003C74  6ED9               	movwf	fsr2l,c
  3358  003C76  3407               	rlcf	replaceOldLog@i+1,w,c
  3359  003C78  6EDA               	movwf	fsr2h,c
  3360  003C7A  0E81               	movlw	low _logs
  3361  003C7C  26D9               	addwf	fsr2l,f,c
  3362  003C7E  0E01               	movlw	high _logs
  3363  003C80  22DA               	addwfc	fsr2h,f,c
  3364  003C82  90D8               	bcf	status,0,c
  3365  003C84  3406               	rlcf	replaceOldLog@i,w,c
  3366  003C86  6EE1               	movwf	fsr1l,c
  3367  003C88  3407               	rlcf	replaceOldLog@i+1,w,c
  3368  003C8A  6EE2               	movwf	fsr1h,c
  3369  003C8C  0E01               	movlw	low (_logs+384)
  3370  003C8E  26E1               	addwf	fsr1l,f,c
  3371  003C90  0E03               	movlw	high (_logs+384)
  3372  003C92  22E2               	addwfc	fsr1h,f,c
  3373  003C94  CFDE FFE6          	movff	postinc2,postinc1
  3374  003C98  CFDD FFE5          	movff	postdec2,postdec1
  3375                           
  3376                           ;main.c: 1132:     }
  3377  003C9C  4A06               	infsnz	replaceOldLog@i,f,c
  3378  003C9E  2A07               	incf	replaceOldLog@i+1,f,c
  3379  003CA0  BE07               	btfsc	replaceOldLog@i+1,7,c
  3380  003CA2  D7E6               	goto	l6424
  3381  003CA4  5007               	movf	replaceOldLog@i+1,w,c
  3382  003CA6  E105               	bnz	u6910
  3383  003CA8  0E30               	movlw	48
  3384  003CAA  5C06               	subwf	replaceOldLog@i,w,c
  3385  003CAC  B0D8               	btfsc	status,0,c
  3386  003CAE  0012               	return	
  3387  003CB0  D7DF               	goto	l6424
  3388  003CB2                     u6910:
  3389  003CB2  0012               	return		;funcret
  3390  003CB4                     __end_of_replaceOldLog:
  3391                           	opt callstack 0
  3392                           
  3393 ;; *************** function _doOperation *****************
  3394 ;; Defined at:
  3395 ;;		line 699 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  i               2   84[BANK1 ] int 
  3400 ;;  startedDistB    4   12[BANK1 ] long 
  3401 ;;  startedDistA    4    8[BANK1 ] long 
  3402 ;;  PIDData         8    0[BANK1 ] long [2]
  3403 ;;  timeInOperat    4   80[BANK1 ] unsigned long 
  3404 ;;  motorAStartD    4   74[BANK1 ] long 
  3405 ;;  distanceToPo    4   61[BANK1 ] long 
  3406 ;;  motorBStartD    4   57[BANK1 ] long 
  3407 ;;  timeStart       4   53[BANK1 ] unsigned long 
  3408 ;;  distanceFrom    4   40[BANK1 ] long 
  3409 ;;  motorStartTi    4   36[BANK1 ] unsigned long 
  3410 ;;  tiresOnPole     2   72[BANK1 ] int 
  3411 ;;  tiresDeploye    2   70[BANK1 ] int 
  3412 ;;  tiresToDrop     2   68[BANK1 ] int 
  3413 ;;  counted         2   66[BANK1 ] int 
  3414 ;;  totalTiresSu    2   51[BANK1 ] int 
  3415 ;;  poleNumber      2   49[BANK1 ] int 
  3416 ;;  badCountBot     2   47[BANK1 ] int 
  3417 ;;  badCount        2   45[BANK1 ] int 
  3418 ;;  tiresOnPoleA    2   34[BANK1 ] int 
  3419 ;;  acceleration    2   32[BANK1 ] int 
  3420 ;;  rightRangeFi    2    0        int 
  3421 ;;  leftRangeFin    2    0        int 
  3422 ;;  currentAngle    2    0        int 
  3423 ;;  error           2    0        int 
  3424 ;;  errorScaleFa    2    0        int 
  3425 ;;  motorBSpeed     2    0        int 
  3426 ;;  motorASpeed     2    0        int 
  3427 ;;  goalSpeed       2    0        int 
  3428 ;;  fourMetreEqu    2    0        int 
  3429 ;;  minimumSafeD    2    0        int 
  3430 ;;  topLaserStat    1   88[BANK1 ] _Bool 
  3431 ;;  bottomLaserS    1   87[BANK1 ] _Bool 
  3432 ;;  currentOpera    1   86[BANK1 ] enum E3372
  3433 ;;  bottomLaserS    1   79[BANK1 ] _Bool 
  3434 ;;  topLaserStat    1   78[BANK1 ] _Bool 
  3435 ;;  isDoneDrop      1   65[BANK1 ] _Bool 
  3436 ;;  send            1   44[BANK1 ] _Bool 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Locals:         0       0      89       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Totals:         0       4      89       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;Total ram usage:       93 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:   13
  3453 ;; This function calls:
  3454 ;;		_I2C_Master_Start
  3455 ;;		_I2C_Master_Stop
  3456 ;;		_I2C_Master_Write
  3457 ;;		_TIMER_INIT
  3458 ;;		___awmod
  3459 ;;		_errorCorrectedMove
  3460 ;;		_init_motor_PWM
  3461 ;;		_lcdInst
  3462 ;;		_opErrorCorrectionDegrees
  3463 ;;		_printf
  3464 ;;		_requestIsTireDropDone
  3465 ;;		_sendArduinoAbortOperationMessage
  3466 ;;		_sendArduinoTireDropRequest
  3467 ;;		_sendArduinoTireOperationStartMessage
  3468 ;;		_setMotorSpeeds
  3469 ;;		_tirePositioning
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text8
  3476  000808                     __ptext8:
  3477                           	opt callstack 0
  3478  000808                     _doOperation:
  3479                           	opt callstack 17
  3480                           
  3481                           ;main.c: 706:     I2C_Master_Start();
  3482                           
  3483                           ;incstack = 0
  3484  000808  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  3485                           
  3486                           ;main.c: 707:     I2C_Master_Write(0b00010000);
  3487  00080C  0E00               	movlw	0
  3488  00080E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3489  000810  0E10               	movlw	16
  3490  000812  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3491  000814  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  3492                           
  3493                           ;main.c: 708:     I2C_Master_Stop();
  3494  000818  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  3495                           
  3496                           ;main.c: 710:     sendArduinoTireOperationStartMessage();
  3497  00081C  EC46  F020         	call	_sendArduinoTireOperationStartMessage	;wreg free
  3498                           
  3499                           ;main.c: 714:     TIMER_INIT();
  3500  000820  EC79  F020         	call	_TIMER_INIT	;wreg free
  3501                           
  3502                           ;main.c: 715:     millisecondsMeasured = 30000ul;
  3503  000824  0E30               	movlw	48
  3504  000826  6E75               	movwf	_millisecondsMeasured,c	;volatile
  3505  000828  0E75               	movlw	117
  3506  00082A  6E76               	movwf	_millisecondsMeasured+1,c	;volatile
  3507  00082C  0E00               	movlw	0
  3508  00082E  6E77               	movwf	_millisecondsMeasured+2,c	;volatile
  3509  000830  0E00               	movlw	0
  3510  000832  6E78               	movwf	_millisecondsMeasured+3,c	;volatile
  3511                           
  3512                           ;main.c: 724:  enum operationStates currentOperationState = moveForward;
  3513  000834  0E00               	movlw	0
  3514  000836  0101               	movlb	1	; () banked
  3515  000838  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;main.c: 727:  int tiresToDrop = 0;
  3519                           
  3520                           ; BSR set to: 1
  3521                           
  3522                           ; BSR set to: 1
  3523  00083A  0E00               	movlw	0
  3524  00083C  6F45               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3525  00083E  0E00               	movlw	0
  3526  000840  6F44               	movwf	doOperation@tiresToDrop& (0+255),b
  3527                           
  3528                           ; BSR set to: 1
  3529                           ;main.c: 728:     int minimumSafeDistanceToPole;;main.c: 729:     int fourMetreEquivalen
      +                          t;;main.c: 730:     unsigned long timeInOperation = 180000ul;
  3530  000842  0E20               	movlw	32
  3531  000844  6F50               	movwf	doOperation@timeInOperation& (0+255),b
  3532  000846  0EBF               	movlw	191
  3533  000848  6F51               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3534  00084A  0E02               	movlw	2
  3535  00084C  6F52               	movwf	(doOperation@timeInOperation+2)& (0+255),b
  3536  00084E  0E00               	movlw	0
  3537  000850  6F53               	movwf	(doOperation@timeInOperation+3)& (0+255),b
  3538                           
  3539                           ; BSR set to: 1
  3540                           ;main.c: 731:     long motorAStartDistance = motorADistance;
  3541  000852  C0DB  F14A         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3542  000856  C0DC  F14B         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3543  00085A  C0DD  F14C         	movff	_motorADistance+2,doOperation@motorAStartDistance+2	;volatile
  3544  00085E  C0DE  F14D         	movff	_motorADistance+3,doOperation@motorAStartDistance+3	;volatile
  3545                           
  3546                           ; BSR set to: 1
  3547                           ;main.c: 732:     long motorBStartDistance = motorBDistance;
  3548  000862  C0D7  F139         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3549  000866  C0D8  F13A         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3550  00086A  C0D9  F13B         	movff	_motorBDistance+2,doOperation@motorBStartDistance+2	;volatile
  3551  00086E  C0DA  F13C         	movff	_motorBDistance+3,doOperation@motorBStartDistance+3	;volatile
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;main.c: 733:     unsigned long motorStartTime = millisecondsMeasured;
  3555  000872  C075  F124         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  3556  000876  C076  F125         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  3557  00087A  C077  F126         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  3558  00087E  C078  F127         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;main.c: 734:     int accelerationDelay = 0;
  3562  000882  0E00               	movlw	0
  3563  000884  6F21               	movwf	(doOperation@accelerationDelay+1)& (0+255),b
  3564  000886  0E00               	movlw	0
  3565  000888  6F20               	movwf	doOperation@accelerationDelay& (0+255),b
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;main.c: 736:     long PIDData[2] = {0,0};
  3569  00088A  EE21  F000         	lfsr	2,doOperation@PIDData
  3570  00088E  0E07               	movlw	7
  3571  000890                     u9821:
  3572  000890  6ADE               	clrf	postinc2,c
  3573  000892  06E8               	decf	wreg,f,c
  3574  000894  E2FD               	bc	u9821
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;main.c: 737:     _Bool topLaserState;;main.c: 738:     _Bool topLaserStatePrev;;main.c:
      +                           739:     _Bool bottomLaserState;;main.c: 740:     _Bool bottomLaserStatePrev;;main.c: 7
      +                          41:     _Bool isDoneDrop;;main.c: 742:     init_motor_PWM();
  3578  000896  ECE8  F01F         	call	_init_motor_PWM	;wreg free
  3579                           
  3580                           ;main.c: 743:     int counted = 0;
  3581  00089A  0E00               	movlw	0
  3582  00089C  0101               	movlb	1	; () banked
  3583  00089E  6F43               	movwf	(doOperation@counted+1)& (0+255),b
  3584  0008A0  0E00               	movlw	0
  3585  0008A2  6F42               	movwf	doOperation@counted& (0+255),b
  3586                           
  3587                           ; BSR set to: 1
  3588                           ;main.c: 744:     int badCount = 0;
  3589  0008A4  0E00               	movlw	0
  3590  0008A6  6F2E               	movwf	(doOperation@badCount+1)& (0+255),b
  3591  0008A8  0E00               	movlw	0
  3592  0008AA  6F2D               	movwf	doOperation@badCount& (0+255),b
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;main.c: 745:     int badCountBot = 0;
  3596  0008AC  0E00               	movlw	0
  3597  0008AE  6F30               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3598  0008B0  0E00               	movlw	0
  3599  0008B2  6F2F               	movwf	doOperation@badCountBot& (0+255),b
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;main.c: 748:     int poleNumber = 0;
  3603  0008B4  0E00               	movlw	0
  3604  0008B6  6F32               	movwf	(doOperation@poleNumber+1)& (0+255),b
  3605  0008B8  0E00               	movlw	0
  3606  0008BA  6F31               	movwf	doOperation@poleNumber& (0+255),b
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;main.c: 749:     int tiresDeployedOnPole = 0;
  3610  0008BC  0E00               	movlw	0
  3611  0008BE  6F47               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3612  0008C0  0E00               	movlw	0
  3613  0008C2  6F46               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;main.c: 750:     int tiresOnPoleAfterOp = 0;
  3617  0008C4  0E00               	movlw	0
  3618  0008C6  6F23               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  3619  0008C8  0E00               	movlw	0
  3620  0008CA  6F22               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;main.c: 751:     int tiresOnPole = 0;
  3624  0008CC  0E00               	movlw	0
  3625  0008CE  6F49               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3626  0008D0  0E00               	movlw	0
  3627  0008D2  6F48               	movwf	doOperation@tiresOnPole& (0+255),b
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;main.c: 753:     int totalTiresSupplied = 0;
  3631  0008D4  0E00               	movlw	0
  3632  0008D6  6F34               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  3633  0008D8  0E00               	movlw	0
  3634  0008DA  6F33               	movwf	doOperation@totalTiresSupplied& (0+255),b
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;main.c: 755:     long distanceToPole = 0ll;
  3638  0008DC  0E00               	movlw	0
  3639  0008DE  6F3D               	movwf	doOperation@distanceToPole& (0+255),b
  3640  0008E0  0E00               	movlw	0
  3641  0008E2  6F3E               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  3642  0008E4  0E00               	movlw	0
  3643  0008E6  6F3F               	movwf	(doOperation@distanceToPole+2)& (0+255),b
  3644  0008E8  0E00               	movlw	0
  3645  0008EA  6F40               	movwf	(doOperation@distanceToPole+3)& (0+255),b
  3646                           
  3647                           ; BSR set to: 1
  3648                           ;main.c: 756:     long distanceFromLastPole = 0ll;
  3649  0008EC  0E00               	movlw	0
  3650  0008EE  6F28               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3651  0008F0  0E00               	movlw	0
  3652  0008F2  6F29               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3653  0008F4  0E00               	movlw	0
  3654  0008F6  6F2A               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  3655  0008F8  0E00               	movlw	0
  3656  0008FA  6F2B               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;main.c: 763:     TRISAbits.TRISA0 = 0;
  3660  0008FC  9092               	bcf	3986,0,c	;volatile
  3661                           
  3662                           ; BSR set to: 1
  3663                           ;main.c: 764:     TRISAbits.TRISA1 = 0;
  3664  0008FE  9292               	bcf	3986,1,c	;volatile
  3665                           
  3666                           ; BSR set to: 1
  3667                           ;main.c: 765:     TRISAbits.TRISA2 = 0;
  3668  000900  9492               	bcf	3986,2,c	;volatile
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;main.c: 766:     TRISAbits.TRISA3 = 0;
  3672  000902  9692               	bcf	3986,3,c	;volatile
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;main.c: 769:     TRISAbits.TRISA4 = 0;
  3676  000904  9892               	bcf	3986,4,c	;volatile
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;main.c: 770:     LATAbits.LATA4 = 1;
  3680  000906  8889               	bsf	3977,4,c	;volatile
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;main.c: 771:     unsigned long timeStart = millisecondsMeasured;
  3684  000908  C075  F135         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3685  00090C  C076  F136         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3686  000910  C077  F137         	movff	_millisecondsMeasured+2,doOperation@timeStart+2	;volatile
  3687  000914  C078  F138         	movff	_millisecondsMeasured+3,doOperation@timeStart+3	;volatile
  3688  000918                     l8512:
  3689                           
  3690                           ;main.c: 772:     while(millisecondsMeasured < timeStart + 100){
  3691  000918  0E64               	movlw	100
  3692  00091A  0101               	movlb	1	; () banked
  3693  00091C  2535               	addwf	doOperation@timeStart& (0+255),w,b
  3694  00091E  0100               	movlb	0	; () banked
  3695  000920  6FC3               	movwf	??_doOperation& (0+255),b
  3696  000922  0E00               	movlw	0
  3697  000924  0101               	movlb	1	; () banked
  3698  000926  2136               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3699  000928  0100               	movlb	0	; () banked
  3700  00092A  6FC4               	movwf	(??_doOperation+1)& (0+255),b
  3701  00092C  0E00               	movlw	0
  3702  00092E  0101               	movlb	1	; () banked
  3703  000930  2137               	addwfc	(doOperation@timeStart+2)& (0+255),w,b
  3704  000932  0100               	movlb	0	; () banked
  3705  000934  6FC5               	movwf	(??_doOperation+2)& (0+255),b
  3706  000936  0E00               	movlw	0
  3707  000938  0101               	movlb	1	; () banked
  3708  00093A  2138               	addwfc	(doOperation@timeStart+3)& (0+255),w,b
  3709  00093C  0100               	movlb	0	; () banked
  3710  00093E  6FC6               	movwf	(??_doOperation+3)& (0+255),b
  3711  000940  51C3               	movf	??_doOperation& (0+255),w,b
  3712  000942  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3713  000944  51C4               	movf	(??_doOperation+1)& (0+255),w,b
  3714  000946  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  3715  000948  51C5               	movf	(??_doOperation+2)& (0+255),w,b
  3716  00094A  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  3717  00094C  51C6               	movf	(??_doOperation+3)& (0+255),w,b
  3718  00094E  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  3719  000950  A0D8               	btfss	status,0,c
  3720  000952  D7E2               	goto	l8512
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;main.c: 776:     topLaserState = PORTBbits.RB4;
  3724  000954  A881               	btfss	3969,4,c	;volatile
  3725  000956  D002               	goto	u9840
  3726  000958  0E01               	movlw	1
  3727  00095A  D001               	goto	u9846
  3728  00095C                     u9840:
  3729  00095C  0E00               	movlw	0
  3730  00095E                     u9846:
  3731  00095E  0101               	movlb	1	; () banked
  3732  000960  6F58               	movwf	doOperation@topLaserState& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;main.c: 777:     topLaserStatePrev = topLaserState;
  3736  000962  C158  F14E         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3737                           
  3738                           ;main.c: 778:     bottomLaserState = PORTBbits.RB5;
  3739  000966  AA81               	btfss	3969,5,c	;volatile
  3740  000968  D002               	goto	u9850
  3741  00096A  0E01               	movlw	1
  3742  00096C  D001               	goto	u9856
  3743  00096E                     u9850:
  3744  00096E  0E00               	movlw	0
  3745  000970                     u9856:
  3746  000970  6F57               	movwf	doOperation@bottomLaserState& (0+255),b
  3747                           
  3748                           ; BSR set to: 1
  3749                           ;main.c: 779:     bottomLaserStatePrev = bottomLaserState;
  3750  000972  C157  F14F         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3751                           
  3752                           ;main.c: 787:     _Bool send = 1;
  3753  000976  0E01               	movlw	1
  3754  000978  6F2C               	movwf	doOperation@send& (0+255),b
  3755  00097A                     l8520:
  3756                           
  3757                           ;main.c: 794:         counted ++;
  3758  00097A  0101               	movlb	1	; () banked
  3759  00097C  4B42               	infsnz	doOperation@counted& (0+255),f,b
  3760  00097E  2B43               	incf	(doOperation@counted+1)& (0+255),f,b
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;main.c: 795:         topLaserStatePrev = topLaserState;
  3764  000980  C158  F14E         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;main.c: 796:         topLaserState = PORTBbits.RB4;
  3768  000984  A881               	btfss	3969,4,c	;volatile
  3769  000986  D002               	goto	u9860
  3770  000988  0E01               	movlw	1
  3771  00098A  D001               	goto	u9866
  3772  00098C                     u9860:
  3773  00098C  0E00               	movlw	0
  3774  00098E                     u9866:
  3775  00098E  6F58               	movwf	doOperation@topLaserState& (0+255),b
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;main.c: 797:         bottomLaserStatePrev = bottomLaserState;
  3779  000990  C157  F14F         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;main.c: 798:         bottomLaserState = PORTBbits.RB5;
  3783  000994  AA81               	btfss	3969,5,c	;volatile
  3784  000996  D002               	goto	u9870
  3785  000998  0E01               	movlw	1
  3786  00099A  D001               	goto	u9876
  3787  00099C                     u9870:
  3788  00099C  0E00               	movlw	0
  3789  00099E                     u9876:
  3790  00099E  6F57               	movwf	doOperation@bottomLaserState& (0+255),b
  3791                           
  3792                           ;main.c: 801:         switch (currentOperationState){
  3793  0009A0  D1F7               	goto	l8658
  3794  0009A2                     l8530:
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;main.c: 803:                 if (counted%100 == 0){
  3798  0009A2  C142  F006         	movff	doOperation@counted,___awmod@dividend
  3799  0009A6  C143  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3800  0009AA  0E00               	movlw	0
  3801  0009AC  6E09               	movwf	___awmod@divisor+1,c
  3802  0009AE  0E64               	movlw	100
  3803  0009B0  6E08               	movwf	___awmod@divisor,c
  3804  0009B2  EC55  F01C         	call	___awmod	;wreg free
  3805  0009B6  5006               	movf	?___awmod,w,c
  3806  0009B8  1007               	iorwf	?___awmod+1,w,c
  3807  0009BA  A4D8               	btfss	status,2,c
  3808  0009BC  D057               	goto	l8552
  3809                           
  3810                           ;main.c: 804:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3811  0009BE  0E01               	movlw	1
  3812  0009C0  ECB7  F020         	call	_lcdInst
  3813  0009C4  0E11               	movlw	17
  3814  0009C6  0100               	movlb	0	; () banked
  3815  0009C8  6FC3               	movwf	??_doOperation& (0+255),b
  3816  0009CA  0E3A               	movlw	58
  3817  0009CC                     u10387:
  3818  0009CC  2EE8               	decfsz	wreg,f,c
  3819  0009CE  D7FE               	bra	u10387
  3820  0009D0  2FC3               	decfsz	??_doOperation& (0+255),f,b
  3821  0009D2  D7FC               	bra	u10387
  3822  0009D4  F000               	nop	
  3823                           
  3824                           ;main.c: 805:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  3825  0009D6  0E80               	movlw	128
  3826  0009D8  ECB7  F020         	call	_lcdInst
  3827  0009DC  0E07               	movlw	7
  3828  0009DE  0100               	movlb	0	; () banked
  3829  0009E0  6FC3               	movwf	??_doOperation& (0+255),b
  3830  0009E2  0E7D               	movlw	125
  3831  0009E4                     u10397:
  3832  0009E4  2EE8               	decfsz	wreg,f,c
  3833  0009E6  D7FE               	bra	u10397
  3834  0009E8  2FC3               	decfsz	??_doOperation& (0+255),f,b
  3835  0009EA  D7FC               	bra	u10397
  3836                           
  3837                           ;main.c: 806:                 printf("%lu", millisecondsMeasured);
  3838  0009EC  0EED               	movlw	low STR_19
  3839  0009EE  0100               	movlb	0	; () banked
  3840  0009F0  6F9D               	movwf	printf@fmt& (0+255),b
  3841  0009F2  0EFF               	movlw	high STR_19
  3842  0009F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3843  0009F6  C075  F09F         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3844  0009FA  C076  F0A0         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3845  0009FE  C077  F0A1         	movff	_millisecondsMeasured+2,?_printf+4	;volatile
  3846  000A02  C078  F0A2         	movff	_millisecondsMeasured+3,?_printf+5	;volatile
  3847  000A06  ECFC  F01F         	call	_printf	;wreg free
  3848  000A0A  0E90               	movlw	144
  3849  000A0C  ECB7  F020         	call	_lcdInst
  3850                           
  3851                           ;main.c: 808:                 printf("%d", topLaserState);
  3852  000A10  0EE4               	movlw	low (STR_22+3)
  3853  000A12  0100               	movlb	0	; () banked
  3854  000A14  6F9D               	movwf	printf@fmt& (0+255),b
  3855  000A16  0EFF               	movlw	high (STR_22+3)
  3856  000A18  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3857  000A1A  C158  F09F         	movff	doOperation@topLaserState,?_printf+2
  3858  000A1E  6BA0               	clrf	(?_printf+3)& (0+255),b
  3859  000A20  ECFC  F01F         	call	_printf	;wreg free
  3860  000A24  0EC0               	movlw	192
  3861  000A26  ECB7  F020         	call	_lcdInst
  3862                           
  3863                           ;main.c: 810:                 printf("B: %d", motorBDistance);
  3864  000A2A  0EE7               	movlw	low STR_21
  3865  000A2C  0100               	movlb	0	; () banked
  3866  000A2E  6F9D               	movwf	printf@fmt& (0+255),b
  3867  000A30  0EFF               	movlw	high STR_21
  3868  000A32  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3869  000A34  C0D7  F09F         	movff	_motorBDistance,?_printf+2	;volatile
  3870  000A38  C0D8  F0A0         	movff	_motorBDistance+1,?_printf+3	;volatile
  3871  000A3C  C0D9  F0A1         	movff	_motorBDistance+2,?_printf+4	;volatile
  3872  000A40  C0DA  F0A2         	movff	_motorBDistance+3,?_printf+5	;volatile
  3873  000A44  ECFC  F01F         	call	_printf	;wreg free
  3874  000A48  0ED0               	movlw	208
  3875  000A4A  ECB7  F020         	call	_lcdInst
  3876                           
  3877                           ;main.c: 812:                 printf("A: %d", motorADistance);
  3878  000A4E  0EE1               	movlw	low STR_22
  3879  000A50  0100               	movlb	0	; () banked
  3880  000A52  6F9D               	movwf	printf@fmt& (0+255),b
  3881  000A54  0EFF               	movlw	high STR_22
  3882  000A56  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  3883  000A58  C0DB  F09F         	movff	_motorADistance,?_printf+2	;volatile
  3884  000A5C  C0DC  F0A0         	movff	_motorADistance+1,?_printf+3	;volatile
  3885  000A60  C0DD  F0A1         	movff	_motorADistance+2,?_printf+4	;volatile
  3886  000A64  C0DE  F0A2         	movff	_motorADistance+3,?_printf+5	;volatile
  3887  000A68  ECFC  F01F         	call	_printf	;wreg free
  3888  000A6C                     l8552:
  3889                           
  3890                           ;main.c: 833:                 errorCorrectedMove(90, 1, motorAStartDistance, motorBStart
      +                          Distance, 0.4);
  3891  000A6C  0E00               	movlw	0
  3892  000A6E  0100               	movlb	0	; () banked
  3893  000A70  6F89               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  3894  000A72  0E5A               	movlw	90
  3895  000A74  6F88               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  3896  000A76  0E00               	movlw	0
  3897  000A78  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3898  000A7A  0E00               	movlw	0
  3899  000A7C  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3900  000A7E  0E80               	movlw	128
  3901  000A80  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3902  000A82  0E3F               	movlw	63
  3903  000A84  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3904  000A86  C14A  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3905  000A8A  C14B  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3906  000A8E  C14C  F090         	movff	doOperation@motorAStartDistance+2,errorCorrectedMove@motorAStartDistance+2
  3907  000A92  C14D  F091         	movff	doOperation@motorAStartDistance+3,errorCorrectedMove@motorAStartDistance+3
  3908  000A96  C139  F092         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3909  000A9A  C13A  F093         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3910  000A9E  C13B  F094         	movff	doOperation@motorBStartDistance+2,errorCorrectedMove@motorBStartDistance+2
  3911  000AA2  C13C  F095         	movff	doOperation@motorBStartDistance+3,errorCorrectedMove@motorBStartDistance+3
  3912  000AA6  0ECD               	movlw	205
  3913  000AA8  6F96               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3914  000AAA  0ECC               	movlw	204
  3915  000AAC  6F97               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3916  000AAE  0ECC               	movlw	204
  3917  000AB0  6F98               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3918  000AB2  0E3E               	movlw	62
  3919  000AB4  6F99               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3920  000AB6  EC74  F00F         	call	_errorCorrectedMove	;wreg free
  3921                           
  3922                           ;main.c: 835:                 if(motorADistance - motorAStartDistance > 30000){
  3923  000ABA  0101               	movlb	1	; () banked
  3924  000ABC  514A               	movf	doOperation@motorAStartDistance& (0+255),w,b
  3925  000ABE  0100               	movlb	0	; () banked
  3926  000AC0  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  3927  000AC2  6FC3               	movwf	??_doOperation& (0+255),b
  3928  000AC4  0101               	movlb	1	; () banked
  3929  000AC6  514B               	movf	(doOperation@motorAStartDistance+1)& (0+255),w,b
  3930  000AC8  0100               	movlb	0	; () banked
  3931  000ACA  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  3932  000ACC  6FC4               	movwf	(??_doOperation+1)& (0+255),b
  3933  000ACE  0101               	movlb	1	; () banked
  3934  000AD0  514C               	movf	(doOperation@motorAStartDistance+2)& (0+255),w,b
  3935  000AD2  0100               	movlb	0	; () banked
  3936  000AD4  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  3937  000AD6  6FC5               	movwf	(??_doOperation+2)& (0+255),b
  3938  000AD8  0101               	movlb	1	; () banked
  3939  000ADA  514D               	movf	(doOperation@motorAStartDistance+3)& (0+255),w,b
  3940  000ADC  0100               	movlb	0	; () banked
  3941  000ADE  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  3942  000AE0  6FC6               	movwf	(??_doOperation+3)& (0+255),b
  3943  000AE2  BFC6               	btfsc	(??_doOperation+3)& (0+255),7,b
  3944  000AE4  D173               	goto	l8660
  3945  000AE6  51C6               	movf	(??_doOperation+3)& (0+255),w,b
  3946  000AE8  11C5               	iorwf	(??_doOperation+2)& (0+255),w,b
  3947  000AEA  E106               	bnz	u9890
  3948  000AEC  0E31               	movlw	49
  3949  000AEE  5DC3               	subwf	??_doOperation& (0+255),w,b
  3950  000AF0  0E75               	movlw	117
  3951  000AF2  59C4               	subwfb	(??_doOperation+1)& (0+255),w,b
  3952  000AF4  A0D8               	btfss	status,0,c
  3953  000AF6  D16A               	goto	l8660
  3954  000AF8                     u9890:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 836:                     currentOperationState = complete;
  3958  000AF8  0E05               	movlw	5
  3959  000AFA  D093               	goto	L10
  3960  000AFC                     l8558:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 842:                 distanceFromLastPole = motorADistance - distanceToPole;
  3964  000AFC  0101               	movlb	1	; () banked
  3965  000AFE  513D               	movf	doOperation@distanceToPole& (0+255),w,b
  3966  000B00  0100               	movlb	0	; () banked
  3967  000B02  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  3968  000B04  0101               	movlb	1	; () banked
  3969  000B06  6F28               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3970  000B08  513E               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  3971  000B0A  0100               	movlb	0	; () banked
  3972  000B0C  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  3973  000B0E  0101               	movlb	1	; () banked
  3974  000B10  6F29               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3975  000B12  513F               	movf	(doOperation@distanceToPole+2)& (0+255),w,b
  3976  000B14  0100               	movlb	0	; () banked
  3977  000B16  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  3978  000B18  0101               	movlb	1	; () banked
  3979  000B1A  6F2A               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  3980  000B1C  5140               	movf	(doOperation@distanceToPole+3)& (0+255),w,b
  3981  000B1E  0100               	movlb	0	; () banked
  3982  000B20  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  3983  000B22  0101               	movlb	1	; () banked
  3984  000B24  6F2B               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;main.c: 843:                 distanceToPole = motorADistance;
  3988  000B26  C0DB  F13D         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  3989  000B2A  C0DC  F13E         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  3990  000B2E  C0DD  F13F         	movff	_motorADistance+2,doOperation@distanceToPole+2	;volatile
  3991  000B32  C0DE  F140         	movff	_motorADistance+3,doOperation@distanceToPole+3	;volatile
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;main.c: 845:                 poleNumber++;
  3995  000B36  4B31               	infsnz	doOperation@poleNumber& (0+255),f,b
  3996  000B38  2B32               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;main.c: 848:                 tiresOnPole = tirePositioning(timeInOperation);
  4000  000B3A  C150  F088         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  4001  000B3E  C151  F089         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  4002  000B42  C152  F08A         	movff	doOperation@timeInOperation+2,tirePositioning@maxOperationTime+2
  4003  000B46  C153  F08B         	movff	doOperation@timeInOperation+3,tirePositioning@maxOperationTime+3
  4004  000B4A  ECC6  F011         	call	_tirePositioning	;wreg free
  4005  000B4E  C088  F148         	movff	?_tirePositioning,doOperation@tiresOnPole
  4006  000B52  C089  F149         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  4007                           
  4008                           ;main.c: 849:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4009  000B56  0E01               	movlw	1
  4010  000B58  ECB7  F020         	call	_lcdInst
  4011  000B5C  0E11               	movlw	17
  4012  000B5E  0100               	movlb	0	; () banked
  4013  000B60  6FC3               	movwf	??_doOperation& (0+255),b
  4014  000B62  0E3A               	movlw	58
  4015  000B64                     u10407:
  4016  000B64  2EE8               	decfsz	wreg,f,c
  4017  000B66  D7FE               	bra	u10407
  4018  000B68  2FC3               	decfsz	??_doOperation& (0+255),f,b
  4019  000B6A  D7FC               	bra	u10407
  4020  000B6C  F000               	nop	
  4021                           
  4022                           ;main.c: 850:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4023  000B6E  0E80               	movlw	128
  4024  000B70  ECB7  F020         	call	_lcdInst
  4025  000B74  0E07               	movlw	7
  4026  000B76  0100               	movlb	0	; () banked
  4027  000B78  6FC3               	movwf	??_doOperation& (0+255),b
  4028  000B7A  0E7D               	movlw	125
  4029  000B7C                     u10417:
  4030  000B7C  2EE8               	decfsz	wreg,f,c
  4031  000B7E  D7FE               	bra	u10417
  4032  000B80  2FC3               	decfsz	??_doOperation& (0+255),f,b
  4033  000B82  D7FC               	bra	u10417
  4034                           
  4035                           ;main.c: 851:                 printf("TIRE DROP");
  4036  000B84  0E89               	movlw	low STR_23
  4037  000B86  0100               	movlb	0	; () banked
  4038  000B88  6F9D               	movwf	printf@fmt& (0+255),b
  4039  000B8A  0EFF               	movlw	high STR_23
  4040  000B8C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4041  000B8E  ECFC  F01F         	call	_printf	;wreg free
  4042  000B92  0EC0               	movlw	192
  4043  000B94  ECB7  F020         	call	_lcdInst
  4044                           
  4045                           ;main.c: 853:                 printf("%d on pole", tiresOnPole);
  4046  000B98  0E74               	movlw	low STR_24
  4047  000B9A  0100               	movlb	0	; () banked
  4048  000B9C  6F9D               	movwf	printf@fmt& (0+255),b
  4049  000B9E  0EFF               	movlw	high STR_24
  4050  000BA0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4051  000BA2  C148  F09F         	movff	doOperation@tiresOnPole,?_printf+2
  4052  000BA6  C149  F0A0         	movff	doOperation@tiresOnPole+1,?_printf+3
  4053  000BAA  ECFC  F01F         	call	_printf	;wreg free
  4054                           
  4055                           ;main.c: 855:                 setMotorSpeeds(0, 1, 1, 0);
  4056  000BAE  0E00               	movlw	0
  4057  000BB0  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4058  000BB2  0E00               	movlw	0
  4059  000BB4  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4060  000BB6  0E01               	movlw	1
  4061  000BB8  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4062  000BBA  0E01               	movlw	1
  4063  000BBC  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4064  000BBE  0E00               	movlw	0
  4065  000BC0  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4066  000BC2  0E00               	movlw	0
  4067  000BC4  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4068  000BC6  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  4069                           
  4070                           ;main.c: 864:     sendArduinoTireDropRequest();
  4071  000BCA  EC57  F020         	call	_sendArduinoTireDropRequest	;wreg free
  4072                           
  4073                           ;main.c: 867:                 tiresToDrop = 1;
  4074  000BCE  0E00               	movlw	0
  4075  000BD0  0101               	movlb	1	; () banked
  4076  000BD2  6F45               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4077  000BD4  0E01               	movlw	1
  4078  000BD6  6F44               	movwf	doOperation@tiresToDrop& (0+255),b
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;main.c: 868:                 currentOperationState = tireDrop;
  4082  000BD8  0E02               	movlw	2
  4083  000BDA  D024               	goto	L9
  4084  000BDC                     l8588:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;main.c: 875:     isDoneDrop = requestIsTireDropDone();
  4088  000BDC  ECBD  F01F         	call	_requestIsTireDropDone	;wreg free
  4089  000BE0  0101               	movlb	1	; () banked
  4090  000BE2  6F41               	movwf	doOperation@isDoneDrop& (0+255),b
  4091                           
  4092                           ; BSR set to: 1
  4093                           ;main.c: 877:     if (isDoneDrop){
  4094  000BE4  5141               	movf	doOperation@isDoneDrop& (0+255),w,b
  4095  000BE6  B4D8               	btfsc	status,2,c
  4096  000BE8  D0F1               	goto	l8660
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;main.c: 878:      tiresToDrop -- ;
  4100  000BEA  0744               	decf	doOperation@tiresToDrop& (0+255),f,b
  4101  000BEC  A0D8               	btfss	status,0,c
  4102  000BEE  0745               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  4103                           
  4104                           ;main.c: 879:                     tiresDeployedOnPole++;
  4105  000BF0  4B46               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  4106  000BF2  2B47               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;main.c: 880:      if (tiresToDrop == 0){
  4110  000BF4  5144               	movf	doOperation@tiresToDrop& (0+255),w,b
  4111  000BF6  1145               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  4112  000BF8  A4D8               	btfss	status,2,c
  4113  000BFA  D00F               	goto	l8602
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;main.c: 881:       currentOperationState = leavePole;
  4117  000BFC  0E06               	movlw	6
  4118  000BFE  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  4119                           
  4120                           ;main.c: 883:                         tiresOnPole = 0;
  4121  000C00  0E00               	movlw	0
  4122  000C02  6F49               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  4123  000C04  0E00               	movlw	0
  4124  000C06  6F48               	movwf	doOperation@tiresOnPole& (0+255),b
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;main.c: 884:                         totalTiresSupplied += tiresDeployedOnPole;
  4128  000C08  5146               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  4129  000C0A  2733               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  4130  000C0C  5147               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  4131  000C0E  2334               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  4132                           
  4133                           ; BSR set to: 1
  4134                           ;main.c: 885:                         tiresDeployedOnPole = 0;
  4135  000C10  0E00               	movlw	0
  4136  000C12  6F47               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  4137  000C14  0E00               	movlw	0
  4138  000C16  6F46               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  4139                           
  4140                           ;main.c: 886:      } else {
  4141  000C18  D0D9               	goto	l8660
  4142  000C1A                     l8602:
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;main.c: 888:       sendArduinoTireDropRequest();
  4146  000C1A  EC57  F020         	call	_sendArduinoTireDropRequest	;wreg free
  4147  000C1E  D0D6               	goto	l8660
  4148  000C20                     l8604:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;main.c: 897:                 currentOperationState = moveForward;
  4152  000C20  0E00               	movlw	0
  4153  000C22                     L10:
  4154  000C22  0101               	movlb	1	; () banked
  4155  000C24                     L9:
  4156  000C24  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  4157                           
  4158                           ;main.c: 898:     break;
  4159  000C26  D0D2               	goto	l8660
  4160  000C28                     l8606:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 901:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4164  000C28  0E01               	movlw	1
  4165  000C2A  ECB7  F020         	call	_lcdInst
  4166  000C2E  0E11               	movlw	17
  4167  000C30  0100               	movlb	0	; () banked
  4168  000C32  6FC3               	movwf	??_doOperation& (0+255),b
  4169  000C34  0E3A               	movlw	58
  4170  000C36                     u10427:
  4171  000C36  2EE8               	decfsz	wreg,f,c
  4172  000C38  D7FE               	bra	u10427
  4173  000C3A  2FC3               	decfsz	??_doOperation& (0+255),f,b
  4174  000C3C  D7FC               	bra	u10427
  4175  000C3E  F000               	nop	
  4176                           
  4177                           ;main.c: 902:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4178  000C40  0E80               	movlw	128
  4179  000C42  ECB7  F020         	call	_lcdInst
  4180  000C46  0E07               	movlw	7
  4181  000C48  0100               	movlb	0	; () banked
  4182  000C4A  6FC3               	movwf	??_doOperation& (0+255),b
  4183  000C4C  0E7D               	movlw	125
  4184  000C4E                     u10437:
  4185  000C4E  2EE8               	decfsz	wreg,f,c
  4186  000C50  D7FE               	bra	u10437
  4187  000C52  2FC3               	decfsz	??_doOperation& (0+255),f,b
  4188  000C54  D7FC               	bra	u10437
  4189                           
  4190                           ;main.c: 903:                 printf("Leaving Pole");
  4191  000C56  0E5C               	movlw	low STR_25
  4192  000C58  0100               	movlb	0	; () banked
  4193  000C5A  6F9D               	movwf	printf@fmt& (0+255),b
  4194  000C5C  0EFF               	movlw	high STR_25
  4195  000C5E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4196  000C60  ECFC  F01F         	call	_printf	;wreg free
  4197                           
  4198                           ;main.c: 904:                 long startedDistA = motorADistance;
  4199  000C64  C0DB  F108         	movff	_motorADistance,doOperation@startedDistA	;volatile
  4200  000C68  C0DC  F109         	movff	_motorADistance+1,doOperation@startedDistA+1	;volatile
  4201  000C6C  C0DD  F10A         	movff	_motorADistance+2,doOperation@startedDistA+2	;volatile
  4202  000C70  C0DE  F10B         	movff	_motorADistance+3,doOperation@startedDistA+3	;volatile
  4203                           
  4204                           ;main.c: 905:                 long startedDistB = motorBDistance;
  4205  000C74  C0D7  F10C         	movff	_motorBDistance,doOperation@startedDistB	;volatile
  4206  000C78  C0D8  F10D         	movff	_motorBDistance+1,doOperation@startedDistB+1	;volatile
  4207  000C7C  C0D9  F10E         	movff	_motorBDistance+2,doOperation@startedDistB+2	;volatile
  4208  000C80  C0DA  F10F         	movff	_motorBDistance+3,doOperation@startedDistB+3	;volatile
  4209                           
  4210                           ;main.c: 909:                 opErrorCorrectionDegrees(90, 1, 0.1, 180, timeInOperation)
      +                          ;
  4211  000C84  0E00               	movlw	0
  4212  000C86  0100               	movlb	0	; () banked
  4213  000C88  6FA3               	movwf	(opErrorCorrectionDegrees@goalSpeed+1)& (0+255),b
  4214  000C8A  0E5A               	movlw	90
  4215  000C8C  6FA2               	movwf	opErrorCorrectionDegrees@goalSpeed& (0+255),b
  4216  000C8E  0E00               	movlw	0
  4217  000C90  6FA5               	movwf	(opErrorCorrectionDegrees@turnRatio+1)& (0+255),b
  4218  000C92  0E01               	movlw	1
  4219  000C94  6FA4               	movwf	opErrorCorrectionDegrees@turnRatio& (0+255),b
  4220  000C96  0ECD               	movlw	205
  4221  000C98  6FA6               	movwf	opErrorCorrectionDegrees@correctionConstant& (0+255),b
  4222  000C9A  0ECC               	movlw	204
  4223  000C9C  6FA7               	movwf	(opErrorCorrectionDegrees@correctionConstant+1)& (0+255),b
  4224  000C9E  0ECC               	movlw	204
  4225  000CA0  6FA8               	movwf	(opErrorCorrectionDegrees@correctionConstant+2)& (0+255),b
  4226  000CA2  0E3D               	movlw	61
  4227  000CA4  6FA9               	movwf	(opErrorCorrectionDegrees@correctionConstant+3)& (0+255),b
  4228  000CA6  0EB4               	movlw	180
  4229  000CA8  6FAA               	movwf	opErrorCorrectionDegrees@distanceDegrees& (0+255),b
  4230  000CAA  0E00               	movlw	0
  4231  000CAC  6FAB               	movwf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),b
  4232  000CAE  0E00               	movlw	0
  4233  000CB0  6FAC               	movwf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),b
  4234  000CB2  0E00               	movlw	0
  4235  000CB4  6FAD               	movwf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),b
  4236  000CB6  C150  F0AE         	movff	doOperation@timeInOperation,opErrorCorrectionDegrees@maxOperationTime
  4237  000CBA  C151  F0AF         	movff	doOperation@timeInOperation+1,opErrorCorrectionDegrees@maxOperationTime+1
  4238  000CBE  C152  F0B0         	movff	doOperation@timeInOperation+2,opErrorCorrectionDegrees@maxOperationTime+2
  4239  000CC2  C153  F0B1         	movff	doOperation@timeInOperation+3,opErrorCorrectionDegrees@maxOperationTime+3
  4240  000CC6  ECF3  F018         	call	_opErrorCorrectionDegrees	;wreg free
  4241                           
  4242                           ;main.c: 916:                 motorAStartDistance = 0ll;
  4243  000CCA  0E00               	movlw	0
  4244  000CCC  0101               	movlb	1	; () banked
  4245  000CCE  6F4A               	movwf	doOperation@motorAStartDistance& (0+255),b
  4246  000CD0  0E00               	movlw	0
  4247  000CD2  6F4B               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  4248  000CD4  0E00               	movlw	0
  4249  000CD6  6F4C               	movwf	(doOperation@motorAStartDistance+2)& (0+255),b
  4250  000CD8  0E00               	movlw	0
  4251  000CDA  6F4D               	movwf	(doOperation@motorAStartDistance+3)& (0+255),b
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;main.c: 917:                 motorBStartDistance = 0ll;
  4255  000CDC  0E00               	movlw	0
  4256  000CDE  6F39               	movwf	doOperation@motorBStartDistance& (0+255),b
  4257  000CE0  0E00               	movlw	0
  4258  000CE2  6F3A               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  4259  000CE4  0E00               	movlw	0
  4260  000CE6  6F3B               	movwf	(doOperation@motorBStartDistance+2)& (0+255),b
  4261  000CE8  0E00               	movlw	0
  4262  000CEA  6F3C               	movwf	(doOperation@motorBStartDistance+3)& (0+255),b
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;main.c: 918:                 motorStartTime = millisecondsMeasured;
  4266  000CEC  C075  F124         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  4267  000CF0  C076  F125         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  4268  000CF4  C077  F126         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  4269  000CF8  C078  F127         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  4270                           
  4271                           ; BSR set to: 1
  4272                           ;main.c: 919:                 currentOperationState = moveForward;
  4273  000CFC  0E00               	movlw	0
  4274  000CFE  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 922:                 topLaserState = PORTBbits.RB4;
  4278  000D00  A881               	btfss	3969,4,c	;volatile
  4279  000D02  D002               	goto	u9920
  4280  000D04  0E01               	movlw	1
  4281  000D06  D001               	goto	u9926
  4282  000D08                     u9920:
  4283  000D08  0E00               	movlw	0
  4284  000D0A                     u9926:
  4285  000D0A  6F58               	movwf	doOperation@topLaserState& (0+255),b
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;main.c: 923:                 topLaserStatePrev = PORTBbits.RB4;
  4289  000D0C  A881               	btfss	3969,4,c	;volatile
  4290  000D0E  D002               	goto	u9930
  4291  000D10  0E01               	movlw	1
  4292  000D12  D001               	goto	u9936
  4293  000D14                     u9930:
  4294  000D14  0E00               	movlw	0
  4295  000D16                     u9936:
  4296  000D16  6F4E               	movwf	doOperation@topLaserStatePrev& (0+255),b
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 924:                 bottomLaserState = PORTBbits.RB5;
  4300  000D18  AA81               	btfss	3969,5,c	;volatile
  4301  000D1A  D002               	goto	u9940
  4302  000D1C  0E01               	movlw	1
  4303  000D1E  D001               	goto	u9946
  4304  000D20                     u9940:
  4305  000D20  0E00               	movlw	0
  4306  000D22                     u9946:
  4307  000D22  6F57               	movwf	doOperation@bottomLaserState& (0+255),b
  4308                           
  4309                           ; BSR set to: 1
  4310                           ;main.c: 925:                 bottomLaserStatePrev = PORTBbits.RB5;
  4311  000D24  AA81               	btfss	3969,5,c	;volatile
  4312  000D26  D002               	goto	u9950
  4313  000D28  0E01               	movlw	1
  4314  000D2A  D001               	goto	u9956
  4315  000D2C                     u9950:
  4316  000D2C  0E00               	movlw	0
  4317  000D2E                     u9956:
  4318  000D2E  6F4F               	movwf	doOperation@bottomLaserStatePrev& (0+255),b
  4319                           
  4320                           ;main.c: 927:                 break;
  4321  000D30  D04D               	goto	l8660
  4322  000D32                     l8638:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 933:                 setMotorSpeeds(0, 1, 1, 0);
  4326  000D32  0E00               	movlw	0
  4327  000D34  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4328  000D36  0E00               	movlw	0
  4329  000D38  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4330  000D3A  0E01               	movlw	1
  4331  000D3C  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4332  000D3E  0E01               	movlw	1
  4333  000D40  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4334  000D42  0E00               	movlw	0
  4335  000D44  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4336  000D46  0E00               	movlw	0
  4337  000D48  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4338  000D4A  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  4339                           
  4340                           ;main.c: 936:                 sendArduinoAbortOperationMessage();
  4341  000D4E  EC68  F020         	call	_sendArduinoAbortOperationMessage	;wreg free
  4342                           
  4343                           ;main.c: 937:                 for (int i = 0; i < 48; i++){
  4344  000D52  0E00               	movlw	0
  4345  000D54  0101               	movlb	1	; () banked
  4346  000D56  6F55               	movwf	(doOperation@i+1)& (0+255),b
  4347  000D58  0E00               	movlw	0
  4348  000D5A  6F54               	movwf	doOperation@i& (0+255),b
  4349  000D5C                     l8644:
  4350                           
  4351                           ; BSR set to: 1
  4352  000D5C  BF55               	btfsc	(doOperation@i+1)& (0+255),7,b
  4353  000D5E  D006               	goto	l8648
  4354  000D60  5155               	movf	(doOperation@i+1)& (0+255),w,b
  4355  000D62  E114               	bnz	l350
  4356  000D64  0E30               	movlw	48
  4357  000D66  5D54               	subwf	doOperation@i& (0+255),w,b
  4358  000D68  B0D8               	btfsc	status,0,c
  4359  000D6A  D010               	goto	l350
  4360  000D6C                     l8648:
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 938:                     logs[0][i] = 3;
  4364  000D6C  90D8               	bcf	status,0,c
  4365  000D6E  3554               	rlcf	doOperation@i& (0+255),w,b
  4366  000D70  6ED9               	movwf	fsr2l,c
  4367  000D72  3555               	rlcf	(doOperation@i+1)& (0+255),w,b
  4368  000D74  6EDA               	movwf	fsr2h,c
  4369  000D76  0E81               	movlw	low _logs
  4370  000D78  26D9               	addwf	fsr2l,f,c
  4371  000D7A  0E01               	movlw	high _logs
  4372  000D7C  22DA               	addwfc	fsr2h,f,c
  4373  000D7E  0E03               	movlw	3
  4374  000D80  6EDE               	movwf	postinc2,c
  4375  000D82  0E00               	movlw	0
  4376  000D84  6EDD               	movwf	postdec2,c
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;main.c: 939:                 }
  4380  000D86  4B54               	infsnz	doOperation@i& (0+255),f,b
  4381  000D88  2B55               	incf	(doOperation@i+1)& (0+255),f,b
  4382  000D8A  D7E8               	goto	l8644
  4383  000D8C                     l350:
  4384                           
  4385                           ; BSR set to: 1
  4386                           ;main.c: 941:                 LATAbits.LATA4 = 0;
  4387  000D8C  9889               	bcf	3977,4,c	;volatile
  4388                           
  4389                           ;main.c: 942:     return;
  4390  000D8E  0012               	return	
  4391  000D90                     l8658:
  4392                           
  4393                           ; BSR set to: 1
  4394  000D90  5156               	movf	doOperation@currentOperationState& (0+255),w,b
  4395  000D92  0100               	movlb	0	; () banked
  4396  000D94  6FC3               	movwf	??_doOperation& (0+255),b
  4397  000D96  6BC4               	clrf	(??_doOperation+1)& (0+255),b
  4398                           
  4399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4400                           ; Switch size 1, requested type "simple"
  4401                           ; Number of cases is 1, Range of values is 0 to 0
  4402                           ; switch strategies available:
  4403                           ; Name         Instructions Cycles
  4404                           ; simple_byte            4     3 (average)
  4405                           ;	Chosen strategy is simple_byte
  4406  000D98  51C4               	movf	(??_doOperation+1)& (0+255),w,b
  4407  000D9A  0A00               	xorlw	0	; case 0
  4408  000D9C  A4D8               	btfss	status,2,c
  4409  000D9E  D016               	goto	l8660
  4410                           
  4411                           ; BSR set to: 0
  4412                           ; Switch size 1, requested type "simple"
  4413                           ; Number of cases is 7, Range of values is 0 to 6
  4414                           ; switch strategies available:
  4415                           ; Name         Instructions Cycles
  4416                           ; simple_byte           22    12 (average)
  4417                           ;	Chosen strategy is simple_byte
  4418  000DA0  51C3               	movf	??_doOperation& (0+255),w,b
  4419  000DA2  0A00               	xorlw	0	; case 0
  4420  000DA4  B4D8               	btfsc	status,2,c
  4421  000DA6  D5FD               	goto	l8530
  4422  000DA8  0A01               	xorlw	1	; case 1
  4423  000DAA  B4D8               	btfsc	status,2,c
  4424  000DAC  D6A7               	goto	l8558
  4425  000DAE  0A03               	xorlw	3	; case 2
  4426  000DB0  B4D8               	btfsc	status,2,c
  4427  000DB2  D714               	goto	l8588
  4428  000DB4  0A01               	xorlw	1	; case 3
  4429  000DB6  B4D8               	btfsc	status,2,c
  4430  000DB8  D733               	goto	l8604
  4431  000DBA  0A07               	xorlw	7	; case 4
  4432  000DBC  B4D8               	btfsc	status,2,c
  4433  000DBE  D69C               	goto	u9890
  4434  000DC0  0A01               	xorlw	1	; case 5
  4435  000DC2  B4D8               	btfsc	status,2,c
  4436  000DC4  D7B6               	goto	l8638
  4437  000DC6  0A03               	xorlw	3	; case 6
  4438  000DC8  B4D8               	btfsc	status,2,c
  4439  000DCA  D72E               	goto	l8606
  4440  000DCC                     l8660:
  4441                           
  4442                           ;main.c: 960:   if (millisecondsMeasured >= timeInOperation){
  4443  000DCC  0101               	movlb	1	; () banked
  4444  000DCE  5150               	movf	doOperation@timeInOperation& (0+255),w,b
  4445  000DD0  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4446  000DD2  5151               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  4447  000DD4  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4448  000DD6  5152               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  4449  000DD8  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4450  000DDA  5153               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  4451  000DDC  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4452  000DDE  A0D8               	btfss	status,0,c
  4453  000DE0  D01B               	goto	l8680
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;main.c: 961:    currentOperationState = complete;
  4457  000DE2  0E05               	movlw	5
  4458  000DE4  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  4459  000DE6  D018               	goto	l8680
  4460  000DE8                     l8664:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 971:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  4464  000DE8  0101               	movlb	1	; () banked
  4465  000DEA  5158               	movf	doOperation@topLaserState& (0+255),w,b
  4466  000DEC  194E               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4467  000DEE  A4D8               	btfss	status,2,c
  4468  000DF0  D004               	goto	u9990
  4469                           
  4470                           ; BSR set to: 1
  4471  000DF2  5157               	movf	doOperation@bottomLaserState& (0+255),w,b
  4472  000DF4  194F               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4473  000DF6  B4D8               	btfsc	status,2,c
  4474  000DF8  D5C0               	goto	l8520
  4475  000DFA                     u9990:
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;main.c: 972:                     if (topLaserStatePrev != topLaserState){
  4479  000DFA  5158               	movf	doOperation@topLaserState& (0+255),w,b
  4480  000DFC  194E               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4481  000DFE  B4D8               	btfsc	status,2,c
  4482  000E00  D002               	goto	l8672
  4483                           
  4484                           ; BSR set to: 1
  4485                           ;main.c: 973:                         badCount++;
  4486  000E02  4B2D               	infsnz	doOperation@badCount& (0+255),f,b
  4487  000E04  2B2E               	incf	(doOperation@badCount+1)& (0+255),f,b
  4488  000E06                     l8672:
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 975:                     if (bottomLaserStatePrev != bottomLaserState){
  4492  000E06  5157               	movf	doOperation@bottomLaserState& (0+255),w,b
  4493  000E08  194F               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4494  000E0A  B4D8               	btfsc	status,2,c
  4495  000E0C  D002               	goto	l8676
  4496                           
  4497                           ; BSR set to: 1
  4498                           ;main.c: 976:                         badCountBot++;
  4499  000E0E  4B2F               	infsnz	doOperation@badCountBot& (0+255),f,b
  4500  000E10  2B30               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  4501  000E12                     l8676:
  4502                           
  4503                           ; BSR set to: 1
  4504                           ;main.c: 978:                     currentOperationState = poleFinding;
  4505  000E12  0E01               	movlw	1
  4506  000E14  6F56               	movwf	doOperation@currentOperationState& (0+255),b
  4507  000E16  D5B1               	goto	l8520
  4508  000E18                     l8680:
  4509                           
  4510                           ; BSR set to: 1
  4511  000E18  5156               	movf	doOperation@currentOperationState& (0+255),w,b
  4512  000E1A  0100               	movlb	0	; () banked
  4513  000E1C  6FC3               	movwf	??_doOperation& (0+255),b
  4514  000E1E  6BC4               	clrf	(??_doOperation+1)& (0+255),b
  4515                           
  4516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4517                           ; Switch size 1, requested type "simple"
  4518                           ; Number of cases is 1, Range of values is 0 to 0
  4519                           ; switch strategies available:
  4520                           ; Name         Instructions Cycles
  4521                           ; simple_byte            4     3 (average)
  4522                           ;	Chosen strategy is simple_byte
  4523  000E20  51C4               	movf	(??_doOperation+1)& (0+255),w,b
  4524  000E22  0A00               	xorlw	0	; case 0
  4525  000E24  A4D8               	btfss	status,2,c
  4526  000E26  D5A9               	goto	l8520
  4527                           
  4528                           ; BSR set to: 0
  4529                           ; Switch size 1, requested type "simple"
  4530                           ; Number of cases is 7, Range of values is 0 to 6
  4531                           ; switch strategies available:
  4532                           ; Name         Instructions Cycles
  4533                           ; simple_byte           22    12 (average)
  4534                           ;	Chosen strategy is simple_byte
  4535  000E28  51C3               	movf	??_doOperation& (0+255),w,b
  4536  000E2A  0A00               	xorlw	0	; case 0
  4537  000E2C  B4D8               	btfsc	status,2,c
  4538  000E2E  D7DC               	goto	l8664
  4539  000E30  0A01               	xorlw	1	; case 1
  4540  000E32  B4D8               	btfsc	status,2,c
  4541  000E34  D5A2               	goto	l8520
  4542  000E36  0A03               	xorlw	3	; case 2
  4543  000E38  B4D8               	btfsc	status,2,c
  4544  000E3A  D59F               	goto	l8520
  4545  000E3C  0A01               	xorlw	1	; case 3
  4546  000E3E  B4D8               	btfsc	status,2,c
  4547  000E40  D59C               	goto	l8520
  4548  000E42  0A07               	xorlw	7	; case 4
  4549  000E44  B4D8               	btfsc	status,2,c
  4550  000E46  D599               	goto	l8520
  4551  000E48  0A01               	xorlw	1	; case 5
  4552  000E4A  B4D8               	btfsc	status,2,c
  4553  000E4C  D596               	goto	l8520
  4554  000E4E  0A03               	xorlw	3	; case 6
  4555  000E50  D594               	goto	l8520
  4556  000E52                     __end_of_doOperation:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _tirePositioning *****************
  4560 ;; Defined at:
  4561 ;;		line 362 in file "main.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  maxOperation    4    8[BANK0 ] unsigned long 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  distanceReco    4   28[BANK0 ] long 
  4566 ;;  distanceReco    4   24[BANK0 ] long 
  4567 ;;  startDistanc    4   16[BANK0 ] long 
  4568 ;;  startDistanc    4   12[BANK0 ] long 
  4569 ;;  bottomBreakb    2   34[BANK0 ] int 
  4570 ;;  topBreakbeam    2   32[BANK0 ] int 
  4571 ;;  bottomPrevio    2   22[BANK0 ] int 
  4572 ;;  topPreviousS    2   20[BANK0 ] int 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    8[BANK0 ] int 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Totals:         1      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;Total ram usage:       29 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    6
  4589 ;; This function calls:
  4590 ;;		_abs
  4591 ;;		_lcdInst
  4592 ;;		_opDelay
  4593 ;;		_setMotorSpeeds
  4594 ;; This function is called by:
  4595 ;;		_doOperation
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text9
  4600  00238C                     __ptext9:
  4601                           	opt callstack 0
  4602  00238C                     _tirePositioning:
  4603                           	opt callstack 23
  4604                           
  4605                           ;main.c: 363:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4606                           
  4607                           ; BSR set to: 1
  4608                           ;incstack = 0
  4609  00238C  0E01               	movlw	1
  4610  00238E  ECB7  F020         	call	_lcdInst
  4611  002392  0E11               	movlw	17
  4612  002394  6E72               	movwf	??_tirePositioning& (0+255),c
  4613  002396  0E3A               	movlw	58
  4614  002398                     u10447:
  4615  002398  2EE8               	decfsz	wreg,f,c
  4616  00239A  D7FE               	bra	u10447
  4617  00239C  2E72               	decfsz	??_tirePositioning& (0+255),f,c
  4618  00239E  D7FC               	bra	u10447
  4619  0023A0  D000               	nop2	
  4620                           
  4621                           ;main.c: 364:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  4622  0023A2  0E80               	movlw	128
  4623  0023A4  ECB7  F020         	call	_lcdInst
  4624  0023A8  0E07               	movlw	7
  4625  0023AA  6E72               	movwf	??_tirePositioning& (0+255),c
  4626  0023AC  0E7D               	movlw	125
  4627  0023AE                     u10457:
  4628  0023AE  2EE8               	decfsz	wreg,f,c
  4629  0023B0  D7FE               	bra	u10457
  4630  0023B2  2E72               	decfsz	??_tirePositioning& (0+255),f,c
  4631  0023B4  D7FC               	bra	u10457
  4632  0023B6  F000               	nop	
  4633                           
  4634                           ;main.c: 366:     int topBreakbeam;;main.c: 367:     int bottomBreakbeam;;main.c: 368:  
      +                             long distanceRecordedTop;;main.c: 369:     long startDistanceTop;;main.c: 370:     lo
      +                          ng distanceRecordedBottom;;main.c: 371:     long startDistanceBottom;;main.c: 372:     i
      +                          nt topPreviousState = 1;
  4635  0023B8  0E00               	movlw	0
  4636  0023BA  0100               	movlb	0	; () banked
  4637  0023BC  6F95               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  4638  0023BE  0E01               	movlw	1
  4639  0023C0  6F94               	movwf	tirePositioning@topPreviousState& (0+255),b
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;main.c: 373:     int bottomPreviousState = 1;
  4643  0023C2  0E00               	movlw	0
  4644  0023C4  6F97               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  4645  0023C6  0E01               	movlw	1
  4646  0023C8  6F96               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  4647                           
  4648                           ;main.c: 376:     while(millisecondsMeasured < maxOperationTime){
  4649  0023CA  D070               	goto	l8260
  4650  0023CC                     l8232:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;main.c: 377:         topBreakbeam = PORTBbits.RB4;
  4654  0023CC  A881               	btfss	3969,4,c	;volatile
  4655  0023CE  D003               	goto	u9540
  4656  0023D0  6A72               	clrf	??_tirePositioning& (0+255),c
  4657  0023D2  2A72               	incf	??_tirePositioning& (0+255),f,c
  4658  0023D4  D001               	goto	u9548
  4659  0023D6                     u9540:
  4660  0023D6  6A72               	clrf	??_tirePositioning& (0+255),c
  4661  0023D8                     u9548:
  4662  0023D8  5072               	movf	??_tirePositioning,w,c
  4663  0023DA  0100               	movlb	0	; () banked
  4664  0023DC  6FA0               	movwf	tirePositioning@topBreakbeam& (0+255),b
  4665  0023DE  6BA1               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  4666                           
  4667                           ;main.c: 378:         bottomBreakbeam = PORTBbits.RB5;
  4668  0023E0  AA81               	btfss	3969,5,c	;volatile
  4669  0023E2  D003               	goto	u9550
  4670  0023E4  6A72               	clrf	??_tirePositioning& (0+255),c
  4671  0023E6  2A72               	incf	??_tirePositioning& (0+255),f,c
  4672  0023E8  D001               	goto	u9558
  4673  0023EA                     u9550:
  4674  0023EA  6A72               	clrf	??_tirePositioning& (0+255),c
  4675  0023EC                     u9558:
  4676  0023EC  5072               	movf	??_tirePositioning,w,c
  4677  0023EE  0100               	movlb	0	; () banked
  4678  0023F0  6FA2               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  4679  0023F2  6BA3               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;main.c: 379:         if (topBreakbeam == 0 && topPreviousState == 1){
  4683  0023F4  51A0               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4684  0023F6  11A1               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4685  0023F8  A4D8               	btfss	status,2,c
  4686  0023FA  D00C               	goto	l8240
  4687                           
  4688                           ; BSR set to: 0
  4689  0023FC  0594               	decf	tirePositioning@topPreviousState& (0+255),w,b
  4690  0023FE  1195               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  4691  002400  A4D8               	btfss	status,2,c
  4692  002402  D008               	goto	l8240
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;main.c: 380:             startDistanceTop = motorADistance;
  4696  002404  C0DB  F08C         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  4697  002408  C0DC  F08D         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  4698  00240C  C0DD  F08E         	movff	_motorADistance+2,tirePositioning@startDistanceTop+2	;volatile
  4699  002410  C0DE  F08F         	movff	_motorADistance+3,tirePositioning@startDistanceTop+3	;volatile
  4700  002414                     l8240:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;main.c: 382:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  4704  002414  51A2               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4705  002416  11A3               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4706  002418  A4D8               	btfss	status,2,c
  4707  00241A  D00C               	goto	l8246
  4708                           
  4709                           ; BSR set to: 0
  4710  00241C  0596               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  4711  00241E  1197               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  4712  002420  A4D8               	btfss	status,2,c
  4713  002422  D008               	goto	l8246
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;main.c: 383:             startDistanceBottom = motorADistance;
  4717  002424  C0DB  F090         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4718  002428  C0DC  F091         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4719  00242C  C0DD  F092         	movff	_motorADistance+2,tirePositioning@startDistanceBottom+2	;volatile
  4720  002430  C0DE  F093         	movff	_motorADistance+3,tirePositioning@startDistanceBottom+3	;volatile
  4721  002434                     l8246:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;main.c: 385:         if(!topBreakbeam){
  4725  002434  51A0               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4726  002436  11A1               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4727  002438  A4D8               	btfss	status,2,c
  4728  00243A  D012               	goto	l8250
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;main.c: 386:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  4732  00243C  518C               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  4733  00243E  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4734  002440  6E18               	movwf	abs@a,c
  4735  002442  518D               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  4736  002444  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4737  002446  6E19               	movwf	abs@a+1,c
  4738  002448  EC5C  F01F         	call	_abs	;wreg free
  4739  00244C  C018  F09C         	movff	?_abs,tirePositioning@distanceRecordedTop
  4740  002450  C019  F09D         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  4741  002454  0100               	movlb	0	; () banked
  4742  002456  0E00               	movlw	0
  4743  002458  BF9D               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4744  00245A  0EFF               	movlw	-1
  4745  00245C  6F9E               	movwf	(tirePositioning@distanceRecordedTop+2)& (0+255),b
  4746  00245E  6F9F               	movwf	(tirePositioning@distanceRecordedTop+3)& (0+255),b
  4747  002460                     l8250:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;main.c: 388:         if(!bottomBreakbeam){
  4751  002460  51A2               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4752  002462  11A3               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4753  002464  A4D8               	btfss	status,2,c
  4754  002466  D012               	goto	l8254
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;main.c: 389:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  4758  002468  5190               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  4759  00246A  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4760  00246C  6E18               	movwf	abs@a,c
  4761  00246E  5191               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  4762  002470  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4763  002472  6E19               	movwf	abs@a+1,c
  4764  002474  EC5C  F01F         	call	_abs	;wreg free
  4765  002478  C018  F098         	movff	?_abs,tirePositioning@distanceRecordedBottom
  4766  00247C  C019  F099         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  4767  002480  0100               	movlb	0	; () banked
  4768  002482  0E00               	movlw	0
  4769  002484  BF99               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  4770  002486  0EFF               	movlw	-1
  4771  002488  6F9A               	movwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),b
  4772  00248A  6F9B               	movwf	(tirePositioning@distanceRecordedBottom+3)& (0+255),b
  4773  00248C                     l8254:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;main.c: 391:         if(topBreakbeam && bottomBreakbeam){
  4777  00248C  51A0               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4778  00248E  11A1               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4779  002490  B4D8               	btfsc	status,2,c
  4780  002492  D004               	goto	l265
  4781                           
  4782                           ; BSR set to: 0
  4783  002494  51A2               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4784  002496  11A3               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4785  002498  A4D8               	btfss	status,2,c
  4786  00249A  D012               	goto	u9640
  4787  00249C                     l265:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;main.c: 394:         topPreviousState = topBreakbeam;
  4791  00249C  C0A0  F094         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4792  0024A0  C0A1  F095         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4793                           
  4794                           ;main.c: 395:         bottomPreviousState = bottomBreakbeam;
  4795  0024A4  C0A2  F096         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4796  0024A8  C0A3  F097         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4797  0024AC                     l8260:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;main.c: 376:     while(millisecondsMeasured < maxOperationTime){
  4801  0024AC  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4802  0024AE  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4803  0024B0  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4804  0024B2  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4805  0024B4  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4806  0024B6  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4807  0024B8  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4808  0024BA  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4809  0024BC  A0D8               	btfss	status,0,c
  4810  0024BE  D786               	goto	l8232
  4811  0024C0                     u9640:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;main.c: 408:     if (distanceRecordedTop < 80){
  4815  0024C0  BF9F               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  4816  0024C2  D008               	goto	u9650
  4817  0024C4  519F               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  4818  0024C6  119E               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  4819  0024C8  119D               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4820  0024CA  E14A               	bnz	l8276
  4821  0024CC  0E50               	movlw	80
  4822  0024CE  5D9C               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4823  0024D0  B0D8               	btfsc	status,0,c
  4824  0024D2  D046               	goto	l8276
  4825  0024D4                     u9650:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;main.c: 409:         setMotorSpeeds(0, 1, 1, 0);
  4829  0024D4  0E00               	movlw	0
  4830  0024D6  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4831  0024D8  0E00               	movlw	0
  4832  0024DA  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4833  0024DC  0E01               	movlw	1
  4834  0024DE  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4835  0024E0  0E01               	movlw	1
  4836  0024E2  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4837  0024E4  0E00               	movlw	0
  4838  0024E6  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4839  0024E8  0E00               	movlw	0
  4840  0024EA  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4841  0024EC  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  4842                           
  4843                           ;main.c: 410:         opDelay(100, maxOperationTime);
  4844  0024F0  0E00               	movlw	0
  4845  0024F2  6E07               	movwf	opDelay@millis+1,c
  4846  0024F4  0E64               	movlw	100
  4847  0024F6  6E06               	movwf	opDelay@millis,c
  4848  0024F8  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4849  0024FC  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4850  002500  C08A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  4851  002504  C08B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  4852  002508  EC2B  F01D         	call	_opDelay	;wreg free
  4853                           
  4854                           ;main.c: 411:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4855  00250C  D00E               	goto	l8270
  4856  00250E                     l8268:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;main.c: 412:             setMotorSpeeds(90, 0, 0, 90);
  4860  00250E  0E00               	movlw	0
  4861  002510  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4862  002512  0E5A               	movlw	90
  4863  002514  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4864  002516  0E00               	movlw	0
  4865  002518  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4866  00251A  0E00               	movlw	0
  4867  00251C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4868  00251E  0E00               	movlw	0
  4869  002520  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4870  002522  0E5A               	movlw	90
  4871  002524  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4872  002526  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  4873  00252A                     l8270:
  4874                           
  4875                           ;main.c: 411:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4876  00252A  0100               	movlb	0	; () banked
  4877  00252C  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4878  00252E  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4879  002530  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4880  002532  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4881  002534  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4882  002536  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4883  002538  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4884  00253A  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4885  00253C  B0D8               	btfsc	status,0,c
  4886  00253E  D002               	goto	u9670
  4887                           
  4888                           ; BSR set to: 0
  4889  002540  B881               	btfsc	3969,4,c	;volatile
  4890  002542  D7E5               	goto	l8268
  4891  002544                     u9670:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;main.c: 414:         setMotorSpeeds(0, 1, 1, 0);
  4895  002544  0E00               	movlw	0
  4896  002546  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4897  002548  0E00               	movlw	0
  4898  00254A  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4899  00254C  0E01               	movlw	1
  4900  00254E  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4901  002550  0E01               	movlw	1
  4902  002552  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4903  002554  0E00               	movlw	0
  4904  002556  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4905  002558  0E00               	movlw	0
  4906  00255A  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4907  00255C  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  4908  002560                     l8276:
  4909                           
  4910                           ;main.c: 431:     if (distanceRecordedTop < 80 && distanceRecordedBottom < 80){
  4911  002560  0100               	movlb	0	; () banked
  4912  002562  BF9F               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  4913  002564  D008               	goto	u9680
  4914  002566  519F               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  4915  002568  119E               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  4916  00256A  119D               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4917  00256C  E113               	bnz	l8286
  4918  00256E  0E50               	movlw	80
  4919  002570  5D9C               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4920  002572  B0D8               	btfsc	status,0,c
  4921  002574  D00F               	goto	l8286
  4922  002576                     u9680:
  4923                           
  4924                           ; BSR set to: 0
  4925  002576  BF9B               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  4926  002578  D008               	goto	u9690
  4927  00257A  519B               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  4928  00257C  119A               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  4929  00257E  1199               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4930  002580  E109               	bnz	l8286
  4931  002582  0E50               	movlw	80
  4932  002584  5D98               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4933  002586  B0D8               	btfsc	status,0,c
  4934  002588  D005               	goto	l8286
  4935  00258A                     u9690:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;main.c: 432:         return 0;
  4939  00258A  0E00               	movlw	0
  4940  00258C  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4941  00258E  0E00               	movlw	0
  4942  002590  6F88               	movwf	?_tirePositioning& (0+255),b
  4943  002592  0012               	return	
  4944  002594                     l8286:
  4945                           
  4946                           ; BSR set to: 0
  4947  002594  BF9F               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  4948  002596  D017               	goto	l8296
  4949  002598  519F               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  4950  00259A  119E               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  4951  00259C  119D               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4952  00259E  E104               	bnz	u9700
  4953  0025A0  0E51               	movlw	81
  4954  0025A2  5D9C               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4955  0025A4  A0D8               	btfss	status,0,c
  4956  0025A6  D00F               	goto	l8296
  4957  0025A8                     u9700:
  4958                           
  4959                           ; BSR set to: 0
  4960  0025A8  BF9B               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  4961  0025AA  D00D               	goto	l8296
  4962  0025AC  519B               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  4963  0025AE  119A               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  4964  0025B0  1199               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4965  0025B2  E104               	bnz	u9710
  4966  0025B4  0E51               	movlw	81
  4967  0025B6  5D98               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4968  0025B8  A0D8               	btfss	status,0,c
  4969  0025BA  D005               	goto	l8296
  4970  0025BC                     u9710:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;main.c: 434:         return 2;
  4974  0025BC  0E00               	movlw	0
  4975  0025BE  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4976  0025C0  0E02               	movlw	2
  4977  0025C2  6F88               	movwf	?_tirePositioning& (0+255),b
  4978  0025C4  0012               	return	
  4979  0025C6                     l8296:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;main.c: 436:         return 1;
  4983  0025C6  0E00               	movlw	0
  4984  0025C8  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4985  0025CA  0E01               	movlw	1
  4986  0025CC  6F88               	movwf	?_tirePositioning& (0+255),b
  4987                           
  4988                           ; BSR set to: 0
  4989  0025CE  0012               	return		;funcret
  4990  0025D0                     __end_of_tirePositioning:
  4991                           	opt callstack 0
  4992                           
  4993 ;; *************** function _opDelay *****************
  4994 ;; Defined at:
  4995 ;;		line 122 in file "main.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  millis          2    5[COMRAM] int 
  4998 ;;  maxOperation    4    7[COMRAM] unsigned long 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  startTime       4   19[COMRAM] unsigned long 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;Total ram usage:       18 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    2
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_tirePositioning
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text10
  5025  003A56                     __ptext10:
  5026                           	opt callstack 0
  5027  003A56                     _opDelay:
  5028                           	opt callstack 26
  5029                           
  5030                           ;main.c: 123:     unsigned long startTime = millisecondsMeasured;
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;incstack = 0
  5034  003A56  C075  F014         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  5035  003A5A  C076  F015         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  5036  003A5E  C077  F016         	movff	_millisecondsMeasured+2,opDelay@startTime+2	;volatile
  5037  003A62  C078  F017         	movff	_millisecondsMeasured+3,opDelay@startTime+3	;volatile
  5038  003A66                     l5636:
  5039                           
  5040                           ;main.c: 124:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  5041  003A66  5008               	movf	opDelay@maxOperationTime,w,c
  5042  003A68  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5043  003A6A  5009               	movf	opDelay@maxOperationTime+1,w,c
  5044  003A6C  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5045  003A6E  500A               	movf	opDelay@maxOperationTime+2,w,c
  5046  003A70  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5047  003A72  500B               	movf	opDelay@maxOperationTime+3,w,c
  5048  003A74  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5049  003A76  B0D8               	btfsc	status,0,c
  5050  003A78  0012               	return	
  5051  003A7A  C006  F00C         	movff	opDelay@millis,??_opDelay
  5052  003A7E  C007  F00D         	movff	opDelay@millis+1,??_opDelay+1
  5053  003A82  0E00               	movlw	0
  5054  003A84  BE0D               	btfsc	(??_opDelay+1)& (0+255),7,c
  5055  003A86  0EFF               	movlw	255
  5056  003A88  6E0E               	movwf	(??_opDelay+2)& (0+255),c
  5057  003A8A  6E0F               	movwf	(??_opDelay+3)& (0+255),c
  5058  003A8C  5014               	movf	opDelay@startTime,w,c
  5059  003A8E  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5060  003A90  6E10               	movwf	(??_opDelay+4)& (0+255),c
  5061  003A92  5015               	movf	opDelay@startTime+1,w,c
  5062  003A94  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5063  003A96  6E11               	movwf	(??_opDelay+5)& (0+255),c
  5064  003A98  5016               	movf	opDelay@startTime+2,w,c
  5065  003A9A  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5066  003A9C  6E12               	movwf	(??_opDelay+6)& (0+255),c
  5067  003A9E  5017               	movf	opDelay@startTime+3,w,c
  5068  003AA0  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5069  003AA2  6E13               	movwf	(??_opDelay+7)& (0+255),c
  5070  003AA4  500C               	movf	??_opDelay,w,c
  5071  003AA6  5C10               	subwf	??_opDelay+4,w,c
  5072  003AA8  500D               	movf	??_opDelay+1,w,c
  5073  003AAA  5811               	subwfb	??_opDelay+5,w,c
  5074  003AAC  500E               	movf	??_opDelay+2,w,c
  5075  003AAE  5812               	subwfb	??_opDelay+6,w,c
  5076  003AB0  500F               	movf	??_opDelay+3,w,c
  5077  003AB2  5813               	subwfb	??_opDelay+7,w,c
  5078  003AB4  B0D8               	btfsc	status,0,c
  5079  003AB6  0012               	return	
  5080  003AB8  D7D6               	goto	l5636
  5081  003ABA                     __end_of_opDelay:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  5085 ;; Defined at:
  5086 ;;		line 517 in file "main.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  data            1    0        unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    4
  5107 ;; This function calls:
  5108 ;;		_I2C_Master_Start
  5109 ;;		_I2C_Master_Stop
  5110 ;;		_I2C_Master_Write
  5111 ;; This function is called by:
  5112 ;;		_doOperation
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text11
  5117  00408C                     __ptext11:
  5118                           	opt callstack 0
  5119  00408C                     _sendArduinoTireOperationStartMessage:
  5120                           	opt callstack 25
  5121                           
  5122                           ;main.c: 524:     I2C_Master_Start();
  5123                           
  5124                           ;incstack = 0
  5125  00408C  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  5126                           
  5127                           ;main.c: 525:     I2C_Master_Write(0b00010000);
  5128  004090  0E00               	movlw	0
  5129  004092  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5130  004094  0E10               	movlw	16
  5131  004096  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5132  004098  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5133                           
  5134                           ;main.c: 526:     I2C_Master_Write(data);
  5135  00409C  0E00               	movlw	0
  5136  00409E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5137  0040A0  0E32               	movlw	50
  5138  0040A2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5139  0040A4  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5140                           
  5141                           ;main.c: 527:     I2C_Master_Stop();
  5142  0040A8  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  5143  0040AC  0012               	return		;funcret
  5144  0040AE                     __end_of_sendArduinoTireOperationStartMessage:
  5145                           	opt callstack 0
  5146                           
  5147 ;; *************** function _sendArduinoTireDropRequest *****************
  5148 ;; Defined at:
  5149 ;;		line 444 in file "main.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  data            1    0        unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0, cstack
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;Total ram usage:        1 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    4
  5170 ;; This function calls:
  5171 ;;		_I2C_Master_Start
  5172 ;;		_I2C_Master_Stop
  5173 ;;		_I2C_Master_Write
  5174 ;; This function is called by:
  5175 ;;		_doOperation
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text12
  5180  0040AE                     __ptext12:
  5181                           	opt callstack 0
  5182  0040AE                     _sendArduinoTireDropRequest:
  5183                           	opt callstack 25
  5184                           
  5185                           ;main.c: 451:     I2C_Master_Start();
  5186                           
  5187                           ;incstack = 0
  5188  0040AE  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  5189                           
  5190                           ;main.c: 452:     I2C_Master_Write(0b00010000);
  5191  0040B2  0E00               	movlw	0
  5192  0040B4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5193  0040B6  0E10               	movlw	16
  5194  0040B8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5195  0040BA  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5196                           
  5197                           ;main.c: 453:     I2C_Master_Write(data);
  5198  0040BE  0E00               	movlw	0
  5199  0040C0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5200  0040C2  0E31               	movlw	49
  5201  0040C4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5202  0040C6  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5203                           
  5204                           ;main.c: 454:     I2C_Master_Stop();
  5205  0040CA  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  5206  0040CE  0012               	return		;funcret
  5207  0040D0                     __end_of_sendArduinoTireDropRequest:
  5208                           	opt callstack 0
  5209                           
  5210 ;; *************** function _sendArduinoAbortOperationMessage *****************
  5211 ;; Defined at:
  5212 ;;		line 560 in file "main.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  data            1    0        unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;Total ram usage:        1 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    4
  5233 ;; This function calls:
  5234 ;;		_I2C_Master_Start
  5235 ;;		_I2C_Master_Stop
  5236 ;;		_I2C_Master_Write
  5237 ;; This function is called by:
  5238 ;;		_doOperation
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text13
  5243  0040D0                     __ptext13:
  5244                           	opt callstack 0
  5245  0040D0                     _sendArduinoAbortOperationMessage:
  5246                           	opt callstack 25
  5247                           
  5248                           ;main.c: 567:     I2C_Master_Start();
  5249                           
  5250                           ;incstack = 0
  5251  0040D0  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  5252                           
  5253                           ;main.c: 568:     I2C_Master_Write(0b00010000);
  5254  0040D4  0E00               	movlw	0
  5255  0040D6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5256  0040D8  0E10               	movlw	16
  5257  0040DA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5258  0040DC  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5259                           
  5260                           ;main.c: 569:     I2C_Master_Write(data);
  5261  0040E0  0E00               	movlw	0
  5262  0040E2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5263  0040E4  0E33               	movlw	51
  5264  0040E6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5265  0040E8  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5266                           
  5267                           ;main.c: 570:     I2C_Master_Stop();
  5268  0040EC  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  5269  0040F0  0012               	return		;funcret
  5270  0040F2                     __end_of_sendArduinoAbortOperationMessage:
  5271                           	opt callstack 0
  5272                           
  5273 ;; *************** function _requestIsTireDropDone *****************
  5274 ;; Defined at:
  5275 ;;		line 575 in file "main.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;		None
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  data            1    8[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      _Bool 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;Total ram usage:        1 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    4
  5296 ;; This function calls:
  5297 ;;		_I2C_Master_Read
  5298 ;;		_I2C_Master_Start
  5299 ;;		_I2C_Master_Stop
  5300 ;;		_I2C_Master_Write
  5301 ;; This function is called by:
  5302 ;;		_doOperation
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text14
  5307  003F7A                     __ptext14:
  5308                           	opt callstack 0
  5309  003F7A                     _requestIsTireDropDone:
  5310                           	opt callstack 25
  5311                           
  5312                           ;main.c: 576:     I2C_Master_Start();
  5313                           
  5314                           ;incstack = 0
  5315  003F7A  ECCA  F020         	call	_I2C_Master_Start	;wreg free
  5316                           
  5317                           ;main.c: 577:     I2C_Master_Write(0b00010001);
  5318  003F7E  0E00               	movlw	0
  5319  003F80  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5320  003F82  0E11               	movlw	17
  5321  003F84  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5322  003F86  ECBD  F020         	call	_I2C_Master_Write	;wreg free
  5323                           
  5324                           ;main.c: 578:     unsigned char data = I2C_Master_Read(1);
  5325  003F8A  0E01               	movlw	1
  5326  003F8C  EC23  F020         	call	_I2C_Master_Read
  5327  003F90  6E09               	movwf	requestIsTireDropDone@data,c
  5328                           
  5329                           ;main.c: 579:     I2C_Master_Stop();
  5330  003F92  ECC6  F020         	call	_I2C_Master_Stop	;wreg free
  5331                           
  5332                           ;main.c: 580:     if(data == '1'){
  5333  003F96  0E31               	movlw	49
  5334  003F98  1809               	xorwf	requestIsTireDropDone@data,w,c
  5335  003F9A  A4D8               	btfss	status,2,c
  5336  003F9C  D002               	goto	l5912
  5337                           
  5338                           ;main.c: 581:         return 1;
  5339  003F9E  0E01               	movlw	1
  5340  003FA0  0012               	return	
  5341  003FA2                     l5912:
  5342                           
  5343                           ;main.c: 583:     return 0;
  5344  003FA2  0E00               	movlw	0
  5345  003FA4  0012               	return		;funcret
  5346  003FA6                     __end_of_requestIsTireDropDone:
  5347                           	opt callstack 0
  5348                           
  5349 ;; *************** function _I2C_Master_Write *****************
  5350 ;; Defined at:
  5351 ;;		line 70 in file "I2C.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;Total ram usage:        2 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    3
  5372 ;; This function calls:
  5373 ;;		_I2C_Master_Wait
  5374 ;; This function is called by:
  5375 ;;		_sendArduinoTireDropRequest
  5376 ;;		_sendArduinoStandbyClampRequest
  5377 ;;		_sendArduinoTireOperationStartMessage
  5378 ;;		_sendArduinoAbortOperationMessage
  5379 ;;		_requestIsTireDropDone
  5380 ;;		_doOperation
  5381 ;;		_main
  5382 ;;		_sendArduinoLogs
  5383 ;;		_rtc_set_time
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text15
  5388  00417A                     __ptext15:
  5389                           	opt callstack 0
  5390  00417A                     _I2C_Master_Write:
  5391                           	opt callstack 26
  5392                           
  5393                           ;I2C.c: 71:     I2C_Master_Wait();
  5394                           
  5395                           ;incstack = 0
  5396  00417A  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5397                           
  5398                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5399  00417E  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5400  004182  0012               	return		;funcret
  5401  004184                     __end_of_I2C_Master_Write:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function _I2C_Master_Stop *****************
  5405 ;; Defined at:
  5406 ;;		line 65 in file "I2C.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    3
  5427 ;; This function calls:
  5428 ;;		_I2C_Master_Wait
  5429 ;; This function is called by:
  5430 ;;		_sendArduinoTireDropRequest
  5431 ;;		_sendArduinoStandbyClampRequest
  5432 ;;		_sendArduinoTireOperationStartMessage
  5433 ;;		_sendArduinoAbortOperationMessage
  5434 ;;		_requestIsTireDropDone
  5435 ;;		_doOperation
  5436 ;;		_main
  5437 ;;		_sendArduinoLogs
  5438 ;;		_rtc_set_time
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text16
  5443  00418C                     __ptext16:
  5444                           	opt callstack 0
  5445  00418C                     _I2C_Master_Stop:
  5446                           	opt callstack 26
  5447                           
  5448                           ;I2C.c: 66:     I2C_Master_Wait();
  5449                           
  5450                           ;incstack = 0
  5451  00418C  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5452                           
  5453                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5454  004190  84C5               	bsf	4037,2,c	;volatile
  5455  004192  0012               	return		;funcret
  5456  004194                     __end_of_I2C_Master_Stop:
  5457                           	opt callstack 0
  5458                           
  5459 ;; *************** function _I2C_Master_Start *****************
  5460 ;; Defined at:
  5461 ;;		line 55 in file "I2C.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;Total ram usage:        0 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    3
  5482 ;; This function calls:
  5483 ;;		_I2C_Master_Wait
  5484 ;; This function is called by:
  5485 ;;		_sendArduinoTireDropRequest
  5486 ;;		_sendArduinoStandbyClampRequest
  5487 ;;		_sendArduinoTireOperationStartMessage
  5488 ;;		_sendArduinoAbortOperationMessage
  5489 ;;		_requestIsTireDropDone
  5490 ;;		_doOperation
  5491 ;;		_main
  5492 ;;		_sendArduinoLogs
  5493 ;;		_rtc_set_time
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text17
  5498  004194                     __ptext17:
  5499                           	opt callstack 0
  5500  004194                     _I2C_Master_Start:
  5501                           	opt callstack 26
  5502                           
  5503                           ;I2C.c: 56:     I2C_Master_Wait();
  5504                           
  5505                           ;incstack = 0
  5506  004194  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5507                           
  5508                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5509  004198  80C5               	bsf	4037,0,c	;volatile
  5510  00419A  0012               	return		;funcret
  5511  00419C                     __end_of_I2C_Master_Start:
  5512                           	opt callstack 0
  5513                           
  5514 ;; *************** function _I2C_Master_Read *****************
  5515 ;; Defined at:
  5516 ;;		line 77 in file "I2C.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  ackBit          1    wreg     unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  ackBit          1    6[COMRAM] unsigned char 
  5521 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:        2 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    3
  5538 ;; This function calls:
  5539 ;;		_I2C_Master_Wait
  5540 ;; This function is called by:
  5541 ;;		_requestIsTireDropDone
  5542 ;;		_main
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text18
  5547  004046                     __ptext18:
  5548                           	opt callstack 0
  5549  004046                     _I2C_Master_Read:
  5550                           	opt callstack 25
  5551                           
  5552                           ;incstack = 0
  5553                           ;I2C_Master_Read@ackBit stored from wreg
  5554  004046  6E07               	movwf	I2C_Master_Read@ackBit,c
  5555                           
  5556                           ;I2C.c: 78:     I2C_Master_Wait();
  5557  004048  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5558                           
  5559                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5560  00404C  86C5               	bsf	4037,3,c	;volatile
  5561                           
  5562                           ;I2C.c: 81:     I2C_Master_Wait();
  5563  00404E  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5564                           
  5565                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5566  004052  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5567                           
  5568                           ;I2C.c: 86:     I2C_Master_Wait();
  5569  004056  EC9F  F020         	call	_I2C_Master_Wait	;wreg free
  5570                           
  5571                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5572  00405A  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5573  00405C  D002               	bra	u6205
  5574  00405E  9AC5               	bcf	4037,5,c	;volatile
  5575  004060  D001               	bra	u6206
  5576  004062                     u6205:
  5577  004062  8AC5               	bsf	4037,5,c	;volatile
  5578  004064                     u6206:
  5579                           
  5580                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5581  004064  88C5               	bsf	4037,4,c	;volatile
  5582                           
  5583                           ;I2C.c: 90:     return receivedByte;
  5584  004066  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5585  004068  0012               	return		;funcret
  5586  00406A                     __end_of_I2C_Master_Read:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function _I2C_Master_Wait *****************
  5590 ;; Defined at:
  5591 ;;		line 21 in file "I2C.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;Total ram usage:        1 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_I2C_Master_Start
  5616 ;;		_I2C_Master_Stop
  5617 ;;		_I2C_Master_Write
  5618 ;;		_I2C_Master_Read
  5619 ;;		_I2C_Master_RepeatedStart
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text19
  5624  00413E                     __ptext19:
  5625                           	opt callstack 0
  5626  00413E                     _I2C_Master_Wait:
  5627                           	opt callstack 26
  5628                           
  5629                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5630                           
  5631                           ;I2C.c: 28:     }
  5632                           
  5633                           ;incstack = 0
  5634  00413E  B4C7               	btfsc	4039,2,c	;volatile
  5635  004140  D7FE               	goto	_I2C_Master_Wait
  5636  004142  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5637  004146  0E1F               	movlw	31
  5638  004148  1606               	andwf	??_I2C_Master_Wait,f,c
  5639  00414A  B4D8               	btfsc	status,2,c
  5640  00414C  0012               	return	
  5641  00414E  D7F7               	goto	_I2C_Master_Wait
  5642  004150                     __end_of_I2C_Master_Wait:
  5643                           	opt callstack 0
  5644                           
  5645 ;; *************** function _opErrorCorrectionDegrees *****************
  5646 ;; Defined at:
  5647 ;;		line 686 in file "main.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  goalSpeed       2   34[BANK0 ] int 
  5650 ;;  turnRatio       2   36[BANK0 ] int 
  5651 ;;  correctionCo    4   38[BANK0 ] float 
  5652 ;;  distanceDegr    4   42[BANK0 ] long 
  5653 ;;  maxOperation    4   46[BANK0 ] unsigned long 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  motorAStartD    4   63[BANK0 ] long 
  5656 ;;  motorBStartD    4   55[BANK0 ] long 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:       33 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    6
  5673 ;; This function calls:
  5674 ;;		___xxtofl
  5675 ;;		_abs
  5676 ;;		_errorCorrectedMove
  5677 ;; This function is called by:
  5678 ;;		_doOperation
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text20
  5683  0031E6                     __ptext20:
  5684                           	opt callstack 0
  5685  0031E6                     _opErrorCorrectionDegrees:
  5686                           	opt callstack 23
  5687                           
  5688                           ;main.c: 687:     long motorAStartDistance = motorADistance;
  5689                           
  5690                           ;incstack = 0
  5691  0031E6  C0DB  F0BF         	movff	_motorADistance,opErrorCorrectionDegrees@motorAStartDistance	;volatile
  5692  0031EA  C0DC  F0C0         	movff	_motorADistance+1,opErrorCorrectionDegrees@motorAStartDistance+1	;volatile
  5693  0031EE  C0DD  F0C1         	movff	_motorADistance+2,opErrorCorrectionDegrees@motorAStartDistance+2	;volatile
  5694  0031F2  C0DE  F0C2         	movff	_motorADistance+3,opErrorCorrectionDegrees@motorAStartDistance+3	;volatile
  5695                           
  5696                           ;main.c: 688:     long motorBStartDistance = motorBDistance;
  5697  0031F6  C0D7  F0B7         	movff	_motorBDistance,opErrorCorrectionDegrees@motorBStartDistance	;volatile
  5698  0031FA  C0D8  F0B8         	movff	_motorBDistance+1,opErrorCorrectionDegrees@motorBStartDistance+1	;volatile
  5699  0031FE  C0D9  F0B9         	movff	_motorBDistance+2,opErrorCorrectionDegrees@motorBStartDistance+2	;volatile
  5700  003202  C0DA  F0BA         	movff	_motorBDistance+3,opErrorCorrectionDegrees@motorBStartDistance+3	;volatile
  5701                           
  5702                           ;main.c: 692:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5703  003206  D03A               	goto	l8306
  5704  003208                     l8302:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;main.c: 693:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5708  003208  C0A4  F006         	movff	opErrorCorrectionDegrees@turnRatio,___xxtofl@val
  5709  00320C  C0A5  F007         	movff	opErrorCorrectionDegrees@turnRatio+1,___xxtofl@val+1
  5710  003210  0E00               	movlw	0
  5711  003212  BE07               	btfsc	___xxtofl@val+1,7,c
  5712  003214  0EFF               	movlw	-1
  5713  003216  6E08               	movwf	___xxtofl@val+2,c
  5714  003218  6E09               	movwf	___xxtofl@val+3,c
  5715  00321A  0E01               	movlw	1
  5716  00321C  EC21  F017         	call	___xxtofl
  5717  003220  C006  F0BB         	movff	?___xxtofl,_opErrorCorrectionDegrees$2306
  5718  003224  C007  F0BC         	movff	?___xxtofl+1,_opErrorCorrectionDegrees$2306+1
  5719  003228  C008  F0BD         	movff	?___xxtofl+2,_opErrorCorrectionDegrees$2306+2
  5720  00322C  C009  F0BE         	movff	?___xxtofl+3,_opErrorCorrectionDegrees$2306+3
  5721                           
  5722                           ;main.c: 693:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5723  003230  C0A2  F088         	movff	opErrorCorrectionDegrees@goalSpeed,errorCorrectedMove@goalSpeed
  5724  003234  C0A3  F089         	movff	opErrorCorrectionDegrees@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  5725  003238  C0BB  F08A         	movff	_opErrorCorrectionDegrees$2306,errorCorrectedMove@turnRatio
  5726  00323C  C0BC  F08B         	movff	_opErrorCorrectionDegrees$2306+1,errorCorrectedMove@turnRatio+1
  5727  003240  C0BD  F08C         	movff	_opErrorCorrectionDegrees$2306+2,errorCorrectedMove@turnRatio+2
  5728  003244  C0BE  F08D         	movff	_opErrorCorrectionDegrees$2306+3,errorCorrectedMove@turnRatio+3
  5729  003248  C0BF  F08E         	movff	opErrorCorrectionDegrees@motorAStartDistance,errorCorrectedMove@motorAStartDistan
      +                          ce
  5730  00324C  C0C0  F08F         	movff	opErrorCorrectionDegrees@motorAStartDistance+1,errorCorrectedMove@motorAStartDist
      +                          ance+1
  5731  003250  C0C1  F090         	movff	opErrorCorrectionDegrees@motorAStartDistance+2,errorCorrectedMove@motorAStartDist
      +                          ance+2
  5732  003254  C0C2  F091         	movff	opErrorCorrectionDegrees@motorAStartDistance+3,errorCorrectedMove@motorAStartDist
      +                          ance+3
  5733  003258  C0B7  F092         	movff	opErrorCorrectionDegrees@motorBStartDistance,errorCorrectedMove@motorBStartDistan
      +                          ce
  5734  00325C  C0B8  F093         	movff	opErrorCorrectionDegrees@motorBStartDistance+1,errorCorrectedMove@motorBStartDist
      +                          ance+1
  5735  003260  C0B9  F094         	movff	opErrorCorrectionDegrees@motorBStartDistance+2,errorCorrectedMove@motorBStartDist
      +                          ance+2
  5736  003264  C0BA  F095         	movff	opErrorCorrectionDegrees@motorBStartDistance+3,errorCorrectedMove@motorBStartDist
      +                          ance+3
  5737  003268  C0A6  F096         	movff	opErrorCorrectionDegrees@correctionConstant,errorCorrectedMove@correctionConstant
  5738  00326C  C0A7  F097         	movff	opErrorCorrectionDegrees@correctionConstant+1,errorCorrectedMove@correctionConsta
      +                          nt+1
  5739  003270  C0A8  F098         	movff	opErrorCorrectionDegrees@correctionConstant+2,errorCorrectedMove@correctionConsta
      +                          nt+2
  5740  003274  C0A9  F099         	movff	opErrorCorrectionDegrees@correctionConstant+3,errorCorrectedMove@correctionConsta
      +                          nt+3
  5741  003278  EC74  F00F         	call	_errorCorrectedMove	;wreg free
  5742  00327C                     l8306:
  5743                           
  5744                           ;main.c: 692:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5745  00327C  0100               	movlb	0	; () banked
  5746  00327E  51AE               	movf	opErrorCorrectionDegrees@maxOperationTime& (0+255),w,b
  5747  003280  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5748  003282  51AF               	movf	(opErrorCorrectionDegrees@maxOperationTime+1)& (0+255),w,b
  5749  003284  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5750  003286  51B0               	movf	(opErrorCorrectionDegrees@maxOperationTime+2)& (0+255),w,b
  5751  003288  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5752  00328A  51B1               	movf	(opErrorCorrectionDegrees@maxOperationTime+3)& (0+255),w,b
  5753  00328C  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5754  00328E  B0D8               	btfsc	status,0,c
  5755  003290  0012               	return	
  5756                           
  5757                           ; BSR set to: 0
  5758  003292  51BF               	movf	opErrorCorrectionDegrees@motorAStartDistance& (0+255),w,b
  5759  003294  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5760  003296  6E18               	movwf	abs@a,c
  5761  003298  51C0               	movf	(opErrorCorrectionDegrees@motorAStartDistance+1)& (0+255),w,b
  5762  00329A  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5763  00329C  6E19               	movwf	abs@a+1,c
  5764  00329E  EC5C  F01F         	call	_abs	;wreg free
  5765  0032A2  C018  F0B2         	movff	?_abs,??_opErrorCorrectionDegrees
  5766  0032A6  C019  F0B3         	movff	?_abs+1,??_opErrorCorrectionDegrees+1
  5767  0032AA  0E00               	movlw	0
  5768  0032AC  0100               	movlb	0	; () banked
  5769  0032AE  BFB3               	btfsc	(??_opErrorCorrectionDegrees+1)& (0+255),7,b
  5770  0032B0  0EFF               	movlw	255
  5771  0032B2  6FB4               	movwf	(??_opErrorCorrectionDegrees+2)& (0+255),b
  5772  0032B4  6FB5               	movwf	(??_opErrorCorrectionDegrees+3)& (0+255),b
  5773  0032B6  51AA               	movf	opErrorCorrectionDegrees@distanceDegrees& (0+255),w,b
  5774  0032B8  5DB2               	subwf	??_opErrorCorrectionDegrees& (0+255),w,b
  5775  0032BA  51AB               	movf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),w,b
  5776  0032BC  59B3               	subwfb	(??_opErrorCorrectionDegrees+1)& (0+255),w,b
  5777  0032BE  51AC               	movf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),w,b
  5778  0032C0  59B4               	subwfb	(??_opErrorCorrectionDegrees+2)& (0+255),w,b
  5779  0032C2  51B5               	movf	(??_opErrorCorrectionDegrees+3)& (0+255),w,b
  5780  0032C4  0A80               	xorlw	128
  5781  0032C6  6FB6               	movwf	(??_opErrorCorrectionDegrees+4)& (0+255),b
  5782  0032C8  51AD               	movf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),w,b
  5783  0032CA  0A80               	xorlw	128
  5784  0032CC  59B6               	subwfb	(??_opErrorCorrectionDegrees+4)& (0+255),w,b
  5785  0032CE  B0D8               	btfsc	status,0,c
  5786  0032D0  0012               	return	
  5787  0032D2  D79A               	goto	l8302
  5788  0032D4                     __end_of_opErrorCorrectionDegrees:
  5789                           	opt callstack 0
  5790                           
  5791 ;; *************** function _errorCorrectedMove *****************
  5792 ;; Defined at:
  5793 ;;		line 632 in file "main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  goalSpeed       2    8[BANK0 ] int 
  5796 ;;  turnRatio       4   10[BANK0 ] float 
  5797 ;;  motorAStartD    4   14[BANK0 ] long 
  5798 ;;  motorBStartD    4   18[BANK0 ] long 
  5799 ;;  correctionCo    4   22[BANK0 ] float 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  error           4   26[BANK0 ] long 
  5802 ;;  BSpeed          2   32[BANK0 ] int 
  5803 ;;  ASpeed          2   30[BANK0 ] int 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5813 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;Total ram usage:       26 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    5
  5820 ;; This function calls:
  5821 ;;		___fladd
  5822 ;;		___fldiv
  5823 ;;		___flmul
  5824 ;;		___flsub
  5825 ;;		___fltol
  5826 ;;		___xxtofl
  5827 ;;		_setMotorSpeeds
  5828 ;; This function is called by:
  5829 ;;		_opErrorCorrectionDegrees
  5830 ;;		_doOperation
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text21
  5835  001EE8                     __ptext21:
  5836                           	opt callstack 0
  5837  001EE8                     _errorCorrectedMove:
  5838                           	opt callstack 23
  5839                           
  5840                           ;main.c: 633:     long error = (long)((motorADistance - motorAStartDistance)-(motorBDist
      +                          ance - motorBStartDistance)/(double)turnRatio);
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;incstack = 0
  5844  001EE8  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  5845  001EEC  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  5846  001EF0  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  5847  001EF4  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  5848  001EF8  0100               	movlb	0	; () banked
  5849  001EFA  5192               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  5850  001EFC  5DD7               	subwf	_motorBDistance& (0+255),w,b	;volatile
  5851  001EFE  6E06               	movwf	___xxtofl@val,c
  5852  001F00  5193               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  5853  001F02  59D8               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  5854  001F04  6E07               	movwf	___xxtofl@val+1,c
  5855  001F06  5194               	movf	(errorCorrectedMove@motorBStartDistance+2)& (0+255),w,b
  5856  001F08  59D9               	subwfb	(_motorBDistance+2)& (0+255),w,b	;volatile
  5857  001F0A  6E08               	movwf	___xxtofl@val+2,c
  5858  001F0C  5195               	movf	(errorCorrectedMove@motorBStartDistance+3)& (0+255),w,b
  5859  001F0E  59DA               	subwfb	(_motorBDistance+3)& (0+255),w,b	;volatile
  5860  001F10  6E09               	movwf	___xxtofl@val+3,c
  5861  001F12  0E01               	movlw	1
  5862  001F14  EC21  F017         	call	___xxtofl
  5863  001F18  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5864  001F1C  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5865  001F20  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5866  001F24  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5867  001F28  EC30  F00E         	call	___fldiv	;wreg free
  5868  001F2C  C02D  F04A         	movff	?___fldiv,___flsub@a
  5869  001F30  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  5870  001F34  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  5871  001F38  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  5872  001F3C  0100               	movlb	0	; () banked
  5873  001F3E  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  5874  001F40  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5875  001F42  6E06               	movwf	___xxtofl@val,c
  5876  001F44  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  5877  001F46  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5878  001F48  6E07               	movwf	___xxtofl@val+1,c
  5879  001F4A  5190               	movf	(errorCorrectedMove@motorAStartDistance+2)& (0+255),w,b
  5880  001F4C  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  5881  001F4E  6E08               	movwf	___xxtofl@val+2,c
  5882  001F50  5191               	movf	(errorCorrectedMove@motorAStartDistance+3)& (0+255),w,b
  5883  001F52  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  5884  001F54  6E09               	movwf	___xxtofl@val+3,c
  5885  001F56  0E01               	movlw	1
  5886  001F58  EC21  F017         	call	___xxtofl
  5887  001F5C  C006  F046         	movff	?___xxtofl,___flsub@b
  5888  001F60  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5889  001F64  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5890  001F68  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5891  001F6C  EC7F  F01E         	call	___flsub	;wreg free
  5892  001F70  C046  F04E         	movff	?___flsub,___fltol@f1
  5893  001F74  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5894  001F78  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5895  001F7C  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5896  001F80  EC39  F01A         	call	___fltol	;wreg free
  5897  001F84  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  5898  001F88  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  5899  001F8C  C050  F09C         	movff	?___fltol+2,errorCorrectedMove@error+2
  5900  001F90  C051  F09D         	movff	?___fltol+3,errorCorrectedMove@error+3
  5901                           
  5902                           ;main.c: 634:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  5903  001F94  C096  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5904  001F98  C097  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5905  001F9C  C098  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5906  001FA0  C099  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5907  001FA4  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5908  001FA8  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5909  001FAC  C09C  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  5910  001FB0  C09D  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  5911  001FB4  0E01               	movlw	1
  5912  001FB6  EC21  F017         	call	___xxtofl
  5913  001FBA  C006  F014         	movff	?___xxtofl,___flmul@b
  5914  001FBE  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5915  001FC2  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5916  001FC6  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5917  001FCA  EC01  F00B         	call	___flmul	;wreg free
  5918  001FCE  C014  F04A         	movff	?___flmul,___flsub@a
  5919  001FD2  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  5920  001FD6  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  5921  001FDA  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  5922  001FDE  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5923  001FE2  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5924  001FE6  0E00               	movlw	0
  5925  001FE8  BE07               	btfsc	___xxtofl@val+1,7,c
  5926  001FEA  0EFF               	movlw	-1
  5927  001FEC  6E08               	movwf	___xxtofl@val+2,c
  5928  001FEE  6E09               	movwf	___xxtofl@val+3,c
  5929  001FF0  0E01               	movlw	1
  5930  001FF2  EC21  F017         	call	___xxtofl
  5931  001FF6  C006  F046         	movff	?___xxtofl,___flsub@b
  5932  001FFA  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5933  001FFE  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5934  002002  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5935  002006  EC7F  F01E         	call	___flsub	;wreg free
  5936  00200A  C046  F04E         	movff	?___flsub,___fltol@f1
  5937  00200E  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5938  002012  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5939  002016  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5940  00201A  EC39  F01A         	call	___fltol	;wreg free
  5941  00201E  C04E  F09E         	movff	?___fltol,errorCorrectedMove@ASpeed
  5942  002022  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  5943                           
  5944                           ;main.c: 635:     int BSpeed = (int)(goalSpeed*turnRatio + error*correctionConstant);
  5945  002026  C096  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5946  00202A  C097  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5947  00202E  C098  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5948  002032  C099  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5949  002036  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5950  00203A  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5951  00203E  C09C  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  5952  002042  C09D  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  5953  002046  0E01               	movlw	1
  5954  002048  EC21  F017         	call	___xxtofl
  5955  00204C  C006  F014         	movff	?___xxtofl,___flmul@b
  5956  002050  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5957  002054  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5958  002058  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5959  00205C  EC01  F00B         	call	___flmul	;wreg free
  5960  002060  C014  F031         	movff	?___flmul,___fladd@a
  5961  002064  C015  F032         	movff	?___flmul+1,___fladd@a+1
  5962  002068  C016  F033         	movff	?___flmul+2,___fladd@a+2
  5963  00206C  C017  F034         	movff	?___flmul+3,___fladd@a+3
  5964  002070  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  5965  002074  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  5966  002078  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  5967  00207C  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  5968  002080  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5969  002084  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5970  002088  0E00               	movlw	0
  5971  00208A  BE07               	btfsc	___xxtofl@val+1,7,c
  5972  00208C  0EFF               	movlw	-1
  5973  00208E  6E08               	movwf	___xxtofl@val+2,c
  5974  002090  6E09               	movwf	___xxtofl@val+3,c
  5975  002092  0E01               	movlw	1
  5976  002094  EC21  F017         	call	___xxtofl
  5977  002098  C006  F014         	movff	?___xxtofl,___flmul@b
  5978  00209C  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5979  0020A0  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5980  0020A4  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5981  0020A8  EC01  F00B         	call	___flmul	;wreg free
  5982  0020AC  C014  F02D         	movff	?___flmul,___fladd@b
  5983  0020B0  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5984  0020B4  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5985  0020B8  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5986  0020BC  ECAA  F00C         	call	___fladd	;wreg free
  5987  0020C0  C02D  F04E         	movff	?___fladd,___fltol@f1
  5988  0020C4  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  5989  0020C8  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  5990  0020CC  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  5991  0020D0  EC39  F01A         	call	___fltol	;wreg free
  5992  0020D4  C04E  F0A0         	movff	?___fltol,errorCorrectedMove@BSpeed
  5993  0020D8  C04F  F0A1         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  5994                           
  5995                           ;main.c: 637:     if (ASpeed > 100){
  5996  0020DC  0100               	movlb	0	; () banked
  5997  0020DE  BF9F               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5998  0020E0  D00A               	goto	l8192
  5999  0020E2  519F               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  6000  0020E4  E104               	bnz	u9490
  6001  0020E6  0E65               	movlw	101
  6002  0020E8  5D9E               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  6003  0020EA  A0D8               	btfss	status,0,c
  6004  0020EC  D004               	goto	l8192
  6005  0020EE                     u9490:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;main.c: 638:         ASpeed = 100;
  6009  0020EE  0E00               	movlw	0
  6010  0020F0  6F9F               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6011  0020F2  0E64               	movlw	100
  6012  0020F4  6F9E               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6013  0020F6                     l8192:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;main.c: 640:     if (ASpeed < 0){
  6017  0020F6  AF9F               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  6018  0020F8  D004               	goto	l8196
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;main.c: 641:         ASpeed = 0;
  6022  0020FA  0E00               	movlw	0
  6023  0020FC  6F9F               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6024  0020FE  0E00               	movlw	0
  6025  002100  6F9E               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6026  002102                     l8196:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;main.c: 643:     if (BSpeed > 100){
  6030  002102  BFA1               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6031  002104  D00A               	goto	l8200
  6032  002106  51A1               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  6033  002108  E104               	bnz	u9510
  6034  00210A  0E65               	movlw	101
  6035  00210C  5DA0               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  6036  00210E  A0D8               	btfss	status,0,c
  6037  002110  D004               	goto	l8200
  6038  002112                     u9510:
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;main.c: 644:         BSpeed = 100;
  6042  002112  0E00               	movlw	0
  6043  002114  6FA1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6044  002116  0E64               	movlw	100
  6045  002118  6FA0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6046  00211A                     l8200:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;main.c: 646:     if (BSpeed < 0){
  6050  00211A  AFA1               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6051  00211C  D004               	goto	l8204
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;main.c: 647:         BSpeed = 0;
  6055  00211E  0E00               	movlw	0
  6056  002120  6FA1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6057  002122  0E00               	movlw	0
  6058  002124  6FA0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6059  002126                     l8204:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;main.c: 650:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  6063  002126  C09E  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  6064  00212A  C09F  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  6065  00212E  0E01               	movlw	1
  6066  002130  6E6E               	movwf	setMotorSpeeds@Aforward,c
  6067  002132  0E01               	movlw	1
  6068  002134  6E6F               	movwf	setMotorSpeeds@Bforward,c
  6069  002136  C0A0  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  6070  00213A  C0A1  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  6071  00213E  EC8F  F01B         	call	_setMotorSpeeds	;wreg free
  6072  002142  0012               	return		;funcret
  6073  002144                     __end_of_errorCorrectedMove:
  6074                           	opt callstack 0
  6075                           
  6076 ;; *************** function _setMotorSpeeds *****************
  6077 ;; Defined at:
  6078 ;;		line 340 in file "main.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  motorASpeed     2  107[COMRAM] int 
  6081 ;;  Aforward        1  109[COMRAM] _Bool 
  6082 ;;  Bforward        1  110[COMRAM] _Bool 
  6083 ;;  motorBSpeed     2  111[COMRAM] int 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6095 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;Total ram usage:       14 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    4
  6102 ;; This function calls:
  6103 ;;		___xxtofl
  6104 ;;		_set_pwm_duty_cycle
  6105 ;; This function is called by:
  6106 ;;		_tirePositioning
  6107 ;;		_errorCorrectedMove
  6108 ;;		_doOperation
  6109 ;;		_PIDCorrectedMove
  6110 ;;		_errorCorrectedMoveAccelerate
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text22
  6115  00371E                     __ptext22:
  6116                           	opt callstack 0
  6117  00371E                     _setMotorSpeeds:
  6118                           	opt callstack 24
  6119                           
  6120                           ;main.c: 341:     if (Aforward){
  6121                           
  6122                           ;incstack = 0
  6123  00371E  506E               	movf	setMotorSpeeds@Aforward,w,c
  6124  003720  B4D8               	btfsc	status,2,c
  6125  003722  D003               	goto	l252
  6126                           
  6127                           ;main.c: 342:         LATAbits.LATA0 = 1;
  6128  003724  8089               	bsf	3977,0,c	;volatile
  6129                           
  6130                           ;main.c: 343:         LATAbits.LATA1 = 0;
  6131  003726  9289               	bcf	3977,1,c	;volatile
  6132                           
  6133                           ;main.c: 344:     } else {
  6134  003728  D002               	goto	l8000
  6135  00372A                     l252:
  6136                           
  6137                           ;main.c: 345:         LATAbits.LATA0 = 0;
  6138  00372A  9089               	bcf	3977,0,c	;volatile
  6139                           
  6140                           ;main.c: 346:         LATAbits.LATA1 = 1;
  6141  00372C  8289               	bsf	3977,1,c	;volatile
  6142  00372E                     l8000:
  6143                           
  6144                           ;main.c: 348:     if (Bforward){
  6145  00372E  506F               	movf	setMotorSpeeds@Bforward,w,c
  6146  003730  B4D8               	btfsc	status,2,c
  6147  003732  D003               	goto	l254
  6148                           
  6149                           ;main.c: 349:         LATAbits.LATA2 = 1;
  6150  003734  8489               	bsf	3977,2,c	;volatile
  6151                           
  6152                           ;main.c: 350:         LATAbits.LATA3 = 0;
  6153  003736  9689               	bcf	3977,3,c	;volatile
  6154                           
  6155                           ;main.c: 351:     } else {
  6156  003738  D002               	goto	l8004
  6157  00373A                     l254:
  6158                           
  6159                           ;main.c: 352:         LATAbits.LATA2 = 0;
  6160  00373A  9489               	bcf	3977,2,c	;volatile
  6161                           
  6162                           ;main.c: 353:         LATAbits.LATA3 = 1;
  6163  00373C  8689               	bsf	3977,3,c	;volatile
  6164  00373E                     l8004:
  6165                           
  6166                           ;main.c: 356:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6167  00373E  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  6168  003742  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  6169  003746  0E00               	movlw	0
  6170  003748  BE07               	btfsc	___xxtofl@val+1,7,c
  6171  00374A  0EFF               	movlw	-1
  6172  00374C  6E08               	movwf	___xxtofl@val+2,c
  6173  00374E  6E09               	movwf	___xxtofl@val+3,c
  6174  003750  0E01               	movlw	1
  6175  003752  EC21  F017         	call	___xxtofl
  6176  003756  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2303
  6177  00375A  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2303+1
  6178  00375E  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2303+2
  6179  003762  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2303+3
  6180                           
  6181                           ;main.c: 356:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6182  003766  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  6183  00376A  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  6184  00376E  0E00               	movlw	0
  6185  003770  BE07               	btfsc	___xxtofl@val+1,7,c
  6186  003772  0EFF               	movlw	-1
  6187  003774  6E08               	movwf	___xxtofl@val+2,c
  6188  003776  6E09               	movwf	___xxtofl@val+3,c
  6189  003778  0E01               	movlw	1
  6190  00377A  EC21  F017         	call	___xxtofl
  6191  00377E  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2304
  6192  003782  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2304+1
  6193  003786  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2304+2
  6194  00378A  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2304+3
  6195                           
  6196                           ;main.c: 356:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6197  00378E  C080  F058         	movff	_setMotorSpeeds$2303,set_pwm_duty_cycle@dutyA
  6198  003792  C081  F059         	movff	_setMotorSpeeds$2303+1,set_pwm_duty_cycle@dutyA+1
  6199  003796  C082  F05A         	movff	_setMotorSpeeds$2303+2,set_pwm_duty_cycle@dutyA+2
  6200  00379A  C083  F05B         	movff	_setMotorSpeeds$2303+3,set_pwm_duty_cycle@dutyA+3
  6201  00379E  C084  F05C         	movff	_setMotorSpeeds$2304,set_pwm_duty_cycle@dutyB
  6202  0037A2  C085  F05D         	movff	_setMotorSpeeds$2304+1,set_pwm_duty_cycle@dutyB+1
  6203  0037A6  C086  F05E         	movff	_setMotorSpeeds$2304+2,set_pwm_duty_cycle@dutyB+2
  6204  0037AA  C087  F05F         	movff	_setMotorSpeeds$2304+3,set_pwm_duty_cycle@dutyB+3
  6205  0037AE  EC01  F014         	call	_set_pwm_duty_cycle	;wreg free
  6206  0037B2  0012               	return		;funcret
  6207  0037B4                     __end_of_setMotorSpeeds:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _set_pwm_duty_cycle *****************
  6211 ;; Defined at:
  6212 ;;		line 310 in file "main.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  dutyA           4   87[COMRAM] float 
  6215 ;;  dutyB           4   91[COMRAM] float 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  duty_valB       2  101[COMRAM] unsigned short 
  6218 ;;  duty_valA       2   99[COMRAM] unsigned short 
  6219 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;Total ram usage:       20 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    3
  6236 ;; This function calls:
  6237 ;;		___fldiv
  6238 ;;		___flge
  6239 ;;		___flmul
  6240 ;;		___fltol
  6241 ;;		___xxtofl
  6242 ;; This function is called by:
  6243 ;;		_setMotorSpeeds
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text23
  6248  002802                     __ptext23:
  6249                           	opt callstack 0
  6250  002802                     _set_pwm_duty_cycle:
  6251                           	opt callstack 24
  6252                           
  6253                           ;main.c: 311:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  6254                           
  6255                           ;incstack = 0
  6256  002802  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  6257  002804  0012               	return	
  6258  002806  0E00               	movlw	0
  6259  002808  6E06               	movwf	___flge@ff1,c
  6260  00280A  0E00               	movlw	0
  6261  00280C  6E07               	movwf	___flge@ff1+1,c
  6262  00280E  0EC8               	movlw	200
  6263  002810  6E08               	movwf	___flge@ff1+2,c
  6264  002812  0E42               	movlw	66
  6265  002814  6E09               	movwf	___flge@ff1+3,c
  6266  002816  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  6267  00281A  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  6268  00281E  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  6269  002822  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  6270  002826  EC6A  F019         	call	___flge	;wreg free
  6271  00282A  A0D8               	btfss	status,0,c
  6272  00282C  0012               	return	
  6273  00282E  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  6274  002830  0012               	return	
  6275  002832  0E00               	movlw	0
  6276  002834  6E06               	movwf	___flge@ff1,c
  6277  002836  0E00               	movlw	0
  6278  002838  6E07               	movwf	___flge@ff1+1,c
  6279  00283A  0EC8               	movlw	200
  6280  00283C  6E08               	movwf	___flge@ff1+2,c
  6281  00283E  0E42               	movlw	66
  6282  002840  6E09               	movwf	___flge@ff1+3,c
  6283  002842  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  6284  002846  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  6285  00284A  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  6286  00284E  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  6287  002852  EC6A  F019         	call	___flge	;wreg free
  6288  002856  A0D8               	btfss	status,0,c
  6289  002858  0012               	return	
  6290                           
  6291                           ;main.c: 316:         unsigned short max_duty_val = PR2 + 1;
  6292  00285A  0E01               	movlw	1
  6293  00285C  24CB               	addwf	4043,w,c	;volatile
  6294  00285E  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  6295  002860  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  6296  002862  0E00               	movlw	0
  6297  002864  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  6298                           
  6299                           ;main.c: 322:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6300  002866  0E00               	movlw	0
  6301  002868  6E31               	movwf	___fldiv@a,c
  6302  00286A  0E00               	movlw	0
  6303  00286C  6E32               	movwf	___fldiv@a+1,c
  6304  00286E  0EC8               	movlw	200
  6305  002870  6E33               	movwf	___fldiv@a+2,c
  6306  002872  0E42               	movlw	66
  6307  002874  6E34               	movwf	___fldiv@a+3,c
  6308  002876  0E00               	movlw	0
  6309  002878  6E18               	movwf	___flmul@a,c
  6310  00287A  0E00               	movlw	0
  6311  00287C  6E19               	movwf	___flmul@a+1,c
  6312  00287E  0E80               	movlw	128
  6313  002880  6E1A               	movwf	___flmul@a+2,c
  6314  002882  0E40               	movlw	64
  6315  002884  6E1B               	movwf	___flmul@a+3,c
  6316  002886  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  6317  00288A  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  6318  00288E  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  6319  002892  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  6320  002896  EC01  F00B         	call	___flmul	;wreg free
  6321  00289A  C014  F02D         	movff	?___flmul,___fldiv@b
  6322  00289E  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6323  0028A2  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6324  0028A6  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6325  0028AA  EC30  F00E         	call	___fldiv	;wreg free
  6326  0028AE  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2302
  6327  0028B2  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2302+1
  6328  0028B6  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2302+2
  6329  0028BA  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2302+3
  6330                           
  6331                           ;main.c: 322:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6332  0028BE  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6333  0028C2  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6334  0028C6  6A08               	clrf	___xxtofl@val+2,c
  6335  0028C8  6A09               	clrf	___xxtofl@val+3,c
  6336  0028CA  0E00               	movlw	0
  6337  0028CC  EC21  F017         	call	___xxtofl
  6338  0028D0  C006  F018         	movff	?___xxtofl,___flmul@a
  6339  0028D4  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6340  0028D8  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6341  0028DC  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6342  0028E0  C068  F014         	movff	_set_pwm_duty_cycle$2302,___flmul@b
  6343  0028E4  C069  F015         	movff	_set_pwm_duty_cycle$2302+1,___flmul@b+1
  6344  0028E8  C06A  F016         	movff	_set_pwm_duty_cycle$2302+2,___flmul@b+2
  6345  0028EC  C06B  F017         	movff	_set_pwm_duty_cycle$2302+3,___flmul@b+3
  6346  0028F0  EC01  F00B         	call	___flmul	;wreg free
  6347  0028F4  C014  F04E         	movff	?___flmul,___fltol@f1
  6348  0028F8  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6349  0028FC  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6350  002900  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6351  002904  EC39  F01A         	call	___fltol	;wreg free
  6352  002908  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  6353  00290C  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  6354                           
  6355                           ;main.c: 323:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6356  002910  0E00               	movlw	0
  6357  002912  6E31               	movwf	___fldiv@a,c
  6358  002914  0E00               	movlw	0
  6359  002916  6E32               	movwf	___fldiv@a+1,c
  6360  002918  0EC8               	movlw	200
  6361  00291A  6E33               	movwf	___fldiv@a+2,c
  6362  00291C  0E42               	movlw	66
  6363  00291E  6E34               	movwf	___fldiv@a+3,c
  6364  002920  0E00               	movlw	0
  6365  002922  6E18               	movwf	___flmul@a,c
  6366  002924  0E00               	movlw	0
  6367  002926  6E19               	movwf	___flmul@a+1,c
  6368  002928  0E80               	movlw	128
  6369  00292A  6E1A               	movwf	___flmul@a+2,c
  6370  00292C  0E40               	movlw	64
  6371  00292E  6E1B               	movwf	___flmul@a+3,c
  6372  002930  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  6373  002934  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  6374  002938  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  6375  00293C  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  6376  002940  EC01  F00B         	call	___flmul	;wreg free
  6377  002944  C014  F02D         	movff	?___flmul,___fldiv@b
  6378  002948  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6379  00294C  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6380  002950  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6381  002954  EC30  F00E         	call	___fldiv	;wreg free
  6382  002958  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2302
  6383  00295C  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2302+1
  6384  002960  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2302+2
  6385  002964  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2302+3
  6386                           
  6387                           ;main.c: 323:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6388  002968  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6389  00296C  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6390  002970  6A08               	clrf	___xxtofl@val+2,c
  6391  002972  6A09               	clrf	___xxtofl@val+3,c
  6392  002974  0E00               	movlw	0
  6393  002976  EC21  F017         	call	___xxtofl
  6394  00297A  C006  F018         	movff	?___xxtofl,___flmul@a
  6395  00297E  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6396  002982  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6397  002986  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6398  00298A  C068  F014         	movff	_set_pwm_duty_cycle$2302,___flmul@b
  6399  00298E  C069  F015         	movff	_set_pwm_duty_cycle$2302+1,___flmul@b+1
  6400  002992  C06A  F016         	movff	_set_pwm_duty_cycle$2302+2,___flmul@b+2
  6401  002996  C06B  F017         	movff	_set_pwm_duty_cycle$2302+3,___flmul@b+3
  6402  00299A  EC01  F00B         	call	___flmul	;wreg free
  6403  00299E  C014  F04E         	movff	?___flmul,___fltol@f1
  6404  0029A2  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6405  0029A6  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6406  0029AA  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6407  0029AE  EC39  F01A         	call	___fltol	;wreg free
  6408  0029B2  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  6409  0029B6  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  6410                           
  6411                           ;main.c: 327:         CCP1X = duty_valA & 2;
  6412  0029BA  9ABD               	bcf	4029,5,c	;volatile
  6413                           
  6414                           ;main.c: 328:         CCP1Y = duty_valA & 1;
  6415  0029BC  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  6416  0029BE  D002               	goto	u8600
  6417  0029C0  88BD               	bsf	4029,4,c	;volatile
  6418  0029C2  D001               	goto	u8615
  6419  0029C4                     u8600:
  6420  0029C4  98BD               	bcf	4029,4,c	;volatile
  6421  0029C6                     u8615:
  6422                           
  6423                           ;main.c: 329:         CCPR1L = duty_valA >> 2;
  6424  0029C6  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  6425  0029CA  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  6426  0029CE  90D8               	bcf	status,0,c
  6427  0029D0  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6428  0029D2  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6429  0029D4  90D8               	bcf	status,0,c
  6430  0029D6  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6431  0029D8  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6432  0029DA  5060               	movf	??_set_pwm_duty_cycle,w,c
  6433  0029DC  6EBE               	movwf	4030,c	;volatile
  6434                           
  6435                           ;main.c: 333:         CCP2X = duty_valB & 2;
  6436  0029DE  9ABA               	bcf	4026,5,c	;volatile
  6437                           
  6438                           ;main.c: 334:         CCP2Y = duty_valB & 1;
  6439  0029E0  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  6440  0029E2  D002               	goto	u8620
  6441  0029E4  88BA               	bsf	4026,4,c	;volatile
  6442  0029E6  D001               	goto	u8635
  6443  0029E8                     u8620:
  6444  0029E8  98BA               	bcf	4026,4,c	;volatile
  6445  0029EA                     u8635:
  6446                           
  6447                           ;main.c: 335:         CCPR2L = duty_valB >> 2;
  6448  0029EA  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  6449  0029EE  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  6450  0029F2  90D8               	bcf	status,0,c
  6451  0029F4  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6452  0029F6  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6453  0029F8  90D8               	bcf	status,0,c
  6454  0029FA  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6455  0029FC  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6456  0029FE  5060               	movf	??_set_pwm_duty_cycle,w,c
  6457  002A00  6EBB               	movwf	4027,c	;volatile
  6458  002A02  0012               	return		;funcret
  6459  002A04                     __end_of_set_pwm_duty_cycle:
  6460                           	opt callstack 0
  6461                           
  6462 ;; *************** function ___xxtofl *****************
  6463 ;; Defined at:
  6464 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  sign            1    wreg     unsigned char 
  6467 ;;  val             4    5[COMRAM] long 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  sign            1   13[COMRAM] unsigned char 
  6470 ;;  arg             4   15[COMRAM] unsigned long 
  6471 ;;  exp             1   14[COMRAM] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  4    5[COMRAM] unsigned char 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;Total ram usage:       14 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    2
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_set_pwm_duty_cycle
  6492 ;;		_setMotorSpeeds
  6493 ;;		_errorCorrectedMove
  6494 ;;		_opErrorCorrectionDegrees
  6495 ;;		_PIDCorrectedMove
  6496 ;;		_errorCorrectedMoveAccelerate
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text24
  6501  002E42                     __ptext24:
  6502                           	opt callstack 0
  6503  002E42                     ___xxtofl:
  6504                           	opt callstack 24
  6505                           
  6506                           ;incstack = 0
  6507                           ;___xxtofl@sign stored from wreg
  6508  002E42  6E0E               	movwf	___xxtofl@sign,c
  6509  002E44  500E               	movf	___xxtofl@sign,w,c
  6510  002E46  A4D8               	btfss	status,2,c
  6511  002E48  AE09               	btfss	___xxtofl@val+3,7,c
  6512  002E4A  D01A               	goto	l1389
  6513  002E4C  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6514  002E50  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6515  002E54  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6516  002E58  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6517  002E5C  1E0A               	comf	??___xxtofl,f,c
  6518  002E5E  1E0B               	comf	??___xxtofl+1,f,c
  6519  002E60  1E0C               	comf	??___xxtofl+2,f,c
  6520  002E62  1E0D               	comf	??___xxtofl+3,f,c
  6521  002E64  2A0A               	incf	??___xxtofl,f,c
  6522  002E66  0E00               	movlw	0
  6523  002E68  220B               	addwfc	??___xxtofl+1,f,c
  6524  002E6A  220C               	addwfc	??___xxtofl+2,f,c
  6525  002E6C  220D               	addwfc	??___xxtofl+3,f,c
  6526  002E6E  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6527  002E72  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6528  002E76  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6529  002E7A  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6530  002E7E  D008               	goto	l7636
  6531  002E80                     l1389:
  6532  002E80  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6533  002E84  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6534  002E88  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6535  002E8C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6536  002E90                     l7636:
  6537  002E90  5006               	movf	___xxtofl@val,w,c
  6538  002E92  1007               	iorwf	___xxtofl@val+1,w,c
  6539  002E94  1008               	iorwf	___xxtofl@val+2,w,c
  6540  002E96  1009               	iorwf	___xxtofl@val+3,w,c
  6541  002E98  A4D8               	btfss	status,2,c
  6542  002E9A  D009               	goto	l7642
  6543  002E9C  0E00               	movlw	0
  6544  002E9E  6E06               	movwf	?___xxtofl,c
  6545  002EA0  0E00               	movlw	0
  6546  002EA2  6E07               	movwf	?___xxtofl+1,c
  6547  002EA4  0E00               	movlw	0
  6548  002EA6  6E08               	movwf	?___xxtofl+2,c
  6549  002EA8  0E00               	movlw	0
  6550  002EAA  6E09               	movwf	?___xxtofl+3,c
  6551  002EAC  0012               	return	
  6552  002EAE                     l7642:
  6553  002EAE  0E96               	movlw	150
  6554  002EB0  6E0F               	movwf	___xxtofl@exp,c
  6555  002EB2  D006               	goto	l7646
  6556  002EB4                     l7644:
  6557  002EB4  2A0F               	incf	___xxtofl@exp,f,c
  6558  002EB6  90D8               	bcf	status,0,c
  6559  002EB8  3213               	rrcf	___xxtofl@arg+3,f,c
  6560  002EBA  3212               	rrcf	___xxtofl@arg+2,f,c
  6561  002EBC  3211               	rrcf	___xxtofl@arg+1,f,c
  6562  002EBE  3210               	rrcf	___xxtofl@arg,f,c
  6563  002EC0                     l7646:
  6564  002EC0  0E00               	movlw	0
  6565  002EC2  1410               	andwf	___xxtofl@arg,w,c
  6566  002EC4  6E0A               	movwf	??___xxtofl& (0+255),c
  6567  002EC6  0E00               	movlw	0
  6568  002EC8  1411               	andwf	___xxtofl@arg+1,w,c
  6569  002ECA  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6570  002ECC  0E00               	movlw	0
  6571  002ECE  1412               	andwf	___xxtofl@arg+2,w,c
  6572  002ED0  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6573  002ED2  0EFE               	movlw	254
  6574  002ED4  1413               	andwf	___xxtofl@arg+3,w,c
  6575  002ED6  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6576  002ED8  500A               	movf	??___xxtofl,w,c
  6577  002EDA  100B               	iorwf	??___xxtofl+1,w,c
  6578  002EDC  100C               	iorwf	??___xxtofl+2,w,c
  6579  002EDE  100D               	iorwf	??___xxtofl+3,w,c
  6580  002EE0  B4D8               	btfsc	status,2,c
  6581  002EE2  D00D               	goto	l1396
  6582  002EE4  D7E7               	goto	l7644
  6583  002EE6                     l7648:
  6584  002EE6  2A0F               	incf	___xxtofl@exp,f,c
  6585  002EE8  0E01               	movlw	1
  6586  002EEA  2610               	addwf	___xxtofl@arg,f,c
  6587  002EEC  0E00               	movlw	0
  6588  002EEE  2211               	addwfc	___xxtofl@arg+1,f,c
  6589  002EF0  2212               	addwfc	___xxtofl@arg+2,f,c
  6590  002EF2  2213               	addwfc	___xxtofl@arg+3,f,c
  6591  002EF4  90D8               	bcf	status,0,c
  6592  002EF6  3213               	rrcf	___xxtofl@arg+3,f,c
  6593  002EF8  3212               	rrcf	___xxtofl@arg+2,f,c
  6594  002EFA  3211               	rrcf	___xxtofl@arg+1,f,c
  6595  002EFC  3210               	rrcf	___xxtofl@arg,f,c
  6596  002EFE                     l1396:
  6597  002EFE  0E00               	movlw	0
  6598  002F00  1410               	andwf	___xxtofl@arg,w,c
  6599  002F02  6E0A               	movwf	??___xxtofl& (0+255),c
  6600  002F04  0E00               	movlw	0
  6601  002F06  1411               	andwf	___xxtofl@arg+1,w,c
  6602  002F08  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6603  002F0A  0E00               	movlw	0
  6604  002F0C  1412               	andwf	___xxtofl@arg+2,w,c
  6605  002F0E  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6606  002F10  0EFF               	movlw	255
  6607  002F12  1413               	andwf	___xxtofl@arg+3,w,c
  6608  002F14  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6609  002F16  500A               	movf	??___xxtofl,w,c
  6610  002F18  100B               	iorwf	??___xxtofl+1,w,c
  6611  002F1A  100C               	iorwf	??___xxtofl+2,w,c
  6612  002F1C  100D               	iorwf	??___xxtofl+3,w,c
  6613  002F1E  B4D8               	btfsc	status,2,c
  6614  002F20  D007               	goto	l7656
  6615  002F22  D7E1               	goto	l7648
  6616  002F24                     l7654:
  6617  002F24  060F               	decf	___xxtofl@exp,f,c
  6618  002F26  90D8               	bcf	status,0,c
  6619  002F28  3610               	rlcf	___xxtofl@arg,f,c
  6620  002F2A  3611               	rlcf	___xxtofl@arg+1,f,c
  6621  002F2C  3612               	rlcf	___xxtofl@arg+2,f,c
  6622  002F2E  3613               	rlcf	___xxtofl@arg+3,f,c
  6623  002F30                     l7656:
  6624  002F30  BE12               	btfsc	___xxtofl@arg+2,7,c
  6625  002F32  D003               	goto	u8500
  6626  002F34  0E02               	movlw	2
  6627  002F36  600F               	cpfslt	___xxtofl@exp,c
  6628  002F38  D7F5               	goto	l7654
  6629  002F3A                     u8500:
  6630  002F3A  A00F               	btfss	___xxtofl@exp,0,c
  6631  002F3C  9E12               	bcf	___xxtofl@arg+2,7,c
  6632  002F3E  90D8               	bcf	status,0,c
  6633  002F40  320F               	rrcf	___xxtofl@exp,f,c
  6634  002F42  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6635  002F46  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6636  002F48  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6637  002F4A  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6638  002F4C  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6639  002F50  6A0C               	clrf	??___xxtofl+2,c
  6640  002F52  6A0B               	clrf	??___xxtofl+1,c
  6641  002F54  6A0A               	clrf	??___xxtofl,c
  6642  002F56  500A               	movf	??___xxtofl,w,c
  6643  002F58  1210               	iorwf	___xxtofl@arg,f,c
  6644  002F5A  500B               	movf	??___xxtofl+1,w,c
  6645  002F5C  1211               	iorwf	___xxtofl@arg+1,f,c
  6646  002F5E  500C               	movf	??___xxtofl+2,w,c
  6647  002F60  1212               	iorwf	___xxtofl@arg+2,f,c
  6648  002F62  500D               	movf	??___xxtofl+3,w,c
  6649  002F64  1213               	iorwf	___xxtofl@arg+3,f,c
  6650  002F66  500E               	movf	___xxtofl@sign,w,c
  6651  002F68  A4D8               	btfss	status,2,c
  6652  002F6A  AE09               	btfss	___xxtofl@val+3,7,c
  6653  002F6C  D001               	goto	l7672
  6654  002F6E  8E13               	bsf	___xxtofl@arg+3,7,c
  6655  002F70                     l7672:
  6656  002F70  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6657  002F74  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6658  002F78  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6659  002F7C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6660  002F80  0012               	return		;funcret
  6661  002F82                     __end_of___xxtofl:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function ___fltol *****************
  6665 ;; Defined at:
  6666 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  f1              4   77[COMRAM] unsigned char 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  exp1            1   86[COMRAM] unsigned char 
  6671 ;;  sign1           1   85[COMRAM] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  4   77[COMRAM] long 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;Total ram usage:       10 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_set_pwm_duty_cycle
  6692 ;;		_errorCorrectedMove
  6693 ;;		_PIDCorrectedMove
  6694 ;;		_errorCorrectedMoveAccelerate
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text25
  6699  003472                     __ptext25:
  6700                           	opt callstack 0
  6701  003472                     ___fltol:
  6702                           	opt callstack 24
  6703                           
  6704                           ;incstack = 0
  6705  003472  3450               	rlcf	___fltol@f1+2,w,c
  6706  003474  3451               	rlcf	___fltol@f1+3,w,c
  6707  003476  6E57               	movwf	___fltol@exp1,c
  6708  003478  5057               	movf	___fltol@exp1,w,c
  6709  00347A  A4D8               	btfss	status,2,c
  6710  00347C  D009               	goto	l7554
  6711  00347E                     u8300:
  6712  00347E  0E00               	movlw	0
  6713  003480  6E4E               	movwf	?___fltol,c
  6714  003482  0E00               	movlw	0
  6715  003484  6E4F               	movwf	?___fltol+1,c
  6716  003486  0E00               	movlw	0
  6717  003488  6E50               	movwf	?___fltol+2,c
  6718  00348A  0E00               	movlw	0
  6719  00348C  6E51               	movwf	?___fltol+3,c
  6720  00348E  0012               	return	
  6721  003490                     l7554:
  6722  003490  C04E  F052         	movff	___fltol@f1,??___fltol
  6723  003494  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  6724  003498  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  6725  00349C  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  6726  0034A0  0E20               	movlw	32
  6727  0034A2  D005               	goto	u8310
  6728  0034A4                     u8315:
  6729  0034A4  90D8               	bcf	status,0,c
  6730  0034A6  3255               	rrcf	??___fltol+3,f,c
  6731  0034A8  3254               	rrcf	??___fltol+2,f,c
  6732  0034AA  3253               	rrcf	??___fltol+1,f,c
  6733  0034AC  3252               	rrcf	??___fltol,f,c
  6734  0034AE                     u8310:
  6735  0034AE  2EE8               	decfsz	wreg,f,c
  6736  0034B0  D7F9               	goto	u8315
  6737  0034B2  5052               	movf	??___fltol,w,c
  6738  0034B4  6E56               	movwf	___fltol@sign1,c
  6739  0034B6  8E50               	bsf	___fltol@f1+2,7,c
  6740  0034B8  0EFF               	movlw	255
  6741  0034BA  164E               	andwf	___fltol@f1,f,c
  6742  0034BC  0EFF               	movlw	255
  6743  0034BE  164F               	andwf	___fltol@f1+1,f,c
  6744  0034C0  0EFF               	movlw	255
  6745  0034C2  1650               	andwf	___fltol@f1+2,f,c
  6746  0034C4  0E00               	movlw	0
  6747  0034C6  1651               	andwf	___fltol@f1+3,f,c
  6748  0034C8  0E96               	movlw	150
  6749  0034CA  5E57               	subwf	___fltol@exp1,f,c
  6750  0034CC  AE57               	btfss	___fltol@exp1,7,c
  6751  0034CE  D00D               	goto	l7574
  6752  0034D0  5057               	movf	___fltol@exp1,w,c
  6753  0034D2  0A80               	xorlw	128
  6754  0034D4  0F97               	addlw	151
  6755  0034D6  A0D8               	btfss	status,0,c
  6756  0034D8  D7D2               	goto	u8300
  6757  0034DA                     l7570:
  6758  0034DA  90D8               	bcf	status,0,c
  6759  0034DC  3251               	rrcf	___fltol@f1+3,f,c
  6760  0034DE  3250               	rrcf	___fltol@f1+2,f,c
  6761  0034E0  324F               	rrcf	___fltol@f1+1,f,c
  6762  0034E2  324E               	rrcf	___fltol@f1,f,c
  6763  0034E4  3E57               	incfsz	___fltol@exp1,f,c
  6764  0034E6  D7F9               	goto	l7570
  6765  0034E8  D00D               	goto	u8350
  6766  0034EA                     l7574:
  6767  0034EA  0E1F               	movlw	31
  6768  0034EC  6457               	cpfsgt	___fltol@exp1,c
  6769  0034EE  D007               	goto	l7582
  6770  0034F0  D7C6               	goto	u8300
  6771  0034F2                     l7580:
  6772  0034F2  90D8               	bcf	status,0,c
  6773  0034F4  364E               	rlcf	___fltol@f1,f,c
  6774  0034F6  364F               	rlcf	___fltol@f1+1,f,c
  6775  0034F8  3650               	rlcf	___fltol@f1+2,f,c
  6776  0034FA  3651               	rlcf	___fltol@f1+3,f,c
  6777  0034FC  0657               	decf	___fltol@exp1,f,c
  6778  0034FE                     l7582:
  6779  0034FE  5057               	movf	___fltol@exp1,w,c
  6780  003500  A4D8               	btfss	status,2,c
  6781  003502  D7F7               	goto	l7580
  6782  003504                     u8350:
  6783  003504  5056               	movf	___fltol@sign1,w,c
  6784  003506  B4D8               	btfsc	status,2,c
  6785  003508  D008               	goto	l7588
  6786  00350A  1E51               	comf	___fltol@f1+3,f,c
  6787  00350C  1E50               	comf	___fltol@f1+2,f,c
  6788  00350E  1E4F               	comf	___fltol@f1+1,f,c
  6789  003510  6C4E               	negf	___fltol@f1,c
  6790  003512  0E00               	movlw	0
  6791  003514  224F               	addwfc	___fltol@f1+1,f,c
  6792  003516  2250               	addwfc	___fltol@f1+2,f,c
  6793  003518  2251               	addwfc	___fltol@f1+3,f,c
  6794  00351A                     l7588:
  6795  00351A  C04E  F04E         	movff	___fltol@f1,?___fltol
  6796  00351E  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  6797  003522  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  6798  003526  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  6799  00352A  0012               	return		;funcret
  6800  00352C                     __end_of___fltol:
  6801                           	opt callstack 0
  6802                           
  6803 ;; *************** function ___flmul *****************
  6804 ;; Defined at:
  6805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  b               4   19[COMRAM] long 
  6808 ;;  a               4   23[COMRAM] long 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  prod            4   38[COMRAM] struct .
  6811 ;;  grs             4   33[COMRAM] unsigned long 
  6812 ;;  temp            2   42[COMRAM] struct .
  6813 ;;  bexp            1   37[COMRAM] unsigned char 
  6814 ;;  aexp            1   32[COMRAM] unsigned char 
  6815 ;;  sign            1   31[COMRAM] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  4   19[COMRAM] unsigned char 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0, prodl, prodh
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:       25 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    2
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_set_pwm_duty_cycle
  6836 ;;		_errorCorrectedMove
  6837 ;;		_PIDCorrectedMove
  6838 ;;		_errorCorrectedMoveAccelerate
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text26
  6843  001602                     __ptext26:
  6844                           	opt callstack 0
  6845  001602                     ___flmul:
  6846                           	opt callstack 24
  6847                           
  6848                           ;incstack = 0
  6849  001602  5017               	movf	___flmul@b+3,w,c
  6850  001604  0B80               	andlw	128
  6851  001606  6E20               	movwf	___flmul@sign,c
  6852  001608  5017               	movf	___flmul@b+3,w,c
  6853  00160A  2417               	addwf	___flmul@b+3,w,c
  6854  00160C  6E26               	movwf	___flmul@bexp,c
  6855  00160E  BE16               	btfsc	___flmul@b+2,7,c
  6856  001610  8026               	bsf	___flmul@bexp,0,c
  6857  001612  5026               	movf	___flmul@bexp,w,c
  6858  001614  B4D8               	btfsc	status,2,c
  6859  001616  D00D               	goto	l7410
  6860  001618  2826               	incf	___flmul@bexp,w,c
  6861  00161A  A4D8               	btfss	status,2,c
  6862  00161C  D008               	goto	l7408
  6863  00161E  0E00               	movlw	0
  6864  001620  6E14               	movwf	___flmul@b,c
  6865  001622  0E00               	movlw	0
  6866  001624  6E15               	movwf	___flmul@b+1,c
  6867  001626  0E00               	movlw	0
  6868  001628  6E16               	movwf	___flmul@b+2,c
  6869  00162A  0E00               	movlw	0
  6870  00162C  6E17               	movwf	___flmul@b+3,c
  6871  00162E                     l7408:
  6872  00162E  8E16               	bsf	___flmul@b+2,7,c
  6873  001630  D008               	goto	l7412
  6874  001632                     l7410:
  6875  001632  0E00               	movlw	0
  6876  001634  6E14               	movwf	___flmul@b,c
  6877  001636  0E00               	movlw	0
  6878  001638  6E15               	movwf	___flmul@b+1,c
  6879  00163A  0E00               	movlw	0
  6880  00163C  6E16               	movwf	___flmul@b+2,c
  6881  00163E  0E00               	movlw	0
  6882  001640  6E17               	movwf	___flmul@b+3,c
  6883  001642                     l7412:
  6884  001642  501B               	movf	___flmul@a+3,w,c
  6885  001644  0B80               	andlw	128
  6886  001646  1A20               	xorwf	___flmul@sign,f,c
  6887  001648  501B               	movf	___flmul@a+3,w,c
  6888  00164A  241B               	addwf	___flmul@a+3,w,c
  6889  00164C  6E21               	movwf	___flmul@aexp,c
  6890  00164E  BE1A               	btfsc	___flmul@a+2,7,c
  6891  001650  8021               	bsf	___flmul@aexp,0,c
  6892  001652  5021               	movf	___flmul@aexp,w,c
  6893  001654  B4D8               	btfsc	status,2,c
  6894  001656  D00D               	goto	l7428
  6895  001658  2821               	incf	___flmul@aexp,w,c
  6896  00165A  A4D8               	btfss	status,2,c
  6897  00165C  D008               	goto	l7426
  6898  00165E  0E00               	movlw	0
  6899  001660  6E18               	movwf	___flmul@a,c
  6900  001662  0E00               	movlw	0
  6901  001664  6E19               	movwf	___flmul@a+1,c
  6902  001666  0E00               	movlw	0
  6903  001668  6E1A               	movwf	___flmul@a+2,c
  6904  00166A  0E00               	movlw	0
  6905  00166C  6E1B               	movwf	___flmul@a+3,c
  6906  00166E                     l7426:
  6907  00166E  8E1A               	bsf	___flmul@a+2,7,c
  6908  001670  D008               	goto	l1348
  6909  001672                     l7428:
  6910  001672  0E00               	movlw	0
  6911  001674  6E18               	movwf	___flmul@a,c
  6912  001676  0E00               	movlw	0
  6913  001678  6E19               	movwf	___flmul@a+1,c
  6914  00167A  0E00               	movlw	0
  6915  00167C  6E1A               	movwf	___flmul@a+2,c
  6916  00167E  0E00               	movlw	0
  6917  001680  6E1B               	movwf	___flmul@a+3,c
  6918  001682                     l1348:
  6919  001682  5021               	movf	___flmul@aexp,w,c
  6920  001684  B4D8               	btfsc	status,2,c
  6921  001686  D003               	goto	u8130
  6922  001688  5026               	movf	___flmul@bexp,w,c
  6923  00168A  A4D8               	btfss	status,2,c
  6924  00168C  D009               	goto	l7436
  6925  00168E                     u8130:
  6926  00168E  0E00               	movlw	0
  6927  001690  6E14               	movwf	?___flmul,c
  6928  001692  0E00               	movlw	0
  6929  001694  6E15               	movwf	?___flmul+1,c
  6930  001696  0E00               	movlw	0
  6931  001698  6E16               	movwf	?___flmul+2,c
  6932  00169A  0E00               	movlw	0
  6933  00169C  6E17               	movwf	?___flmul+3,c
  6934  00169E  0012               	return	
  6935  0016A0                     l7436:
  6936  0016A0  501A               	movf	___flmul@a+2,w,c
  6937  0016A2  0214               	mulwf	___flmul@b,c
  6938  0016A4  CFF3 F02B          	movff	prodl,___flmul@temp
  6939  0016A8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6940  0016AC  502B               	movf	___flmul@temp,w,c
  6941  0016AE  6E22               	movwf	___flmul@grs,c
  6942  0016B0  6A23               	clrf	___flmul@grs+1,c
  6943  0016B2  6A24               	clrf	___flmul@grs+2,c
  6944  0016B4  6A25               	clrf	___flmul@grs+3,c
  6945  0016B6  502C               	movf	___flmul@temp+1,w,c
  6946  0016B8  6E27               	movwf	___flmul@prod,c
  6947  0016BA  6A28               	clrf	___flmul@prod+1,c
  6948  0016BC  6A29               	clrf	___flmul@prod+2,c
  6949  0016BE  6A2A               	clrf	___flmul@prod+3,c
  6950  0016C0  5019               	movf	___flmul@a+1,w,c
  6951  0016C2  0215               	mulwf	___flmul@b+1,c
  6952  0016C4  CFF3 F02B          	movff	prodl,___flmul@temp
  6953  0016C8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6954  0016CC  502B               	movf	___flmul@temp,w,c
  6955  0016CE  2622               	addwf	___flmul@grs,f,c
  6956  0016D0  0E00               	movlw	0
  6957  0016D2  2223               	addwfc	___flmul@grs+1,f,c
  6958  0016D4  2224               	addwfc	___flmul@grs+2,f,c
  6959  0016D6  2225               	addwfc	___flmul@grs+3,f,c
  6960  0016D8  502C               	movf	___flmul@temp+1,w,c
  6961  0016DA  2627               	addwf	___flmul@prod,f,c
  6962  0016DC  0E00               	movlw	0
  6963  0016DE  2228               	addwfc	___flmul@prod+1,f,c
  6964  0016E0  2229               	addwfc	___flmul@prod+2,f,c
  6965  0016E2  222A               	addwfc	___flmul@prod+3,f,c
  6966  0016E4  5018               	movf	___flmul@a,w,c
  6967  0016E6  0216               	mulwf	___flmul@b+2,c
  6968  0016E8  CFF3 F02B          	movff	prodl,___flmul@temp
  6969  0016EC  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6970  0016F0  502B               	movf	___flmul@temp,w,c
  6971  0016F2  2622               	addwf	___flmul@grs,f,c
  6972  0016F4  0E00               	movlw	0
  6973  0016F6  2223               	addwfc	___flmul@grs+1,f,c
  6974  0016F8  2224               	addwfc	___flmul@grs+2,f,c
  6975  0016FA  2225               	addwfc	___flmul@grs+3,f,c
  6976  0016FC  502C               	movf	___flmul@temp+1,w,c
  6977  0016FE  2627               	addwf	___flmul@prod,f,c
  6978  001700  0E00               	movlw	0
  6979  001702  2228               	addwfc	___flmul@prod+1,f,c
  6980  001704  2229               	addwfc	___flmul@prod+2,f,c
  6981  001706  222A               	addwfc	___flmul@prod+3,f,c
  6982  001708  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6983  00170C  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6984  001710  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6985  001714  6A22               	clrf	___flmul@grs,c
  6986  001716  5018               	movf	___flmul@a,w,c
  6987  001718  0215               	mulwf	___flmul@b+1,c
  6988  00171A  CFF3 F02B          	movff	prodl,___flmul@temp
  6989  00171E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6990  001722  502B               	movf	___flmul@temp,w,c
  6991  001724  2622               	addwf	___flmul@grs,f,c
  6992  001726  502C               	movf	___flmul@temp+1,w,c
  6993  001728  2223               	addwfc	___flmul@grs+1,f,c
  6994  00172A  0E00               	movlw	0
  6995  00172C  2224               	addwfc	___flmul@grs+2,f,c
  6996  00172E  0E00               	movlw	0
  6997  001730  2225               	addwfc	___flmul@grs+3,f,c
  6998  001732  5019               	movf	___flmul@a+1,w,c
  6999  001734  0214               	mulwf	___flmul@b,c
  7000  001736  CFF3 F02B          	movff	prodl,___flmul@temp
  7001  00173A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7002  00173E  502B               	movf	___flmul@temp,w,c
  7003  001740  2622               	addwf	___flmul@grs,f,c
  7004  001742  502C               	movf	___flmul@temp+1,w,c
  7005  001744  2223               	addwfc	___flmul@grs+1,f,c
  7006  001746  0E00               	movlw	0
  7007  001748  2224               	addwfc	___flmul@grs+2,f,c
  7008  00174A  0E00               	movlw	0
  7009  00174C  2225               	addwfc	___flmul@grs+3,f,c
  7010  00174E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7011  001752  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7012  001756  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7013  00175A  6A22               	clrf	___flmul@grs,c
  7014  00175C  5018               	movf	___flmul@a,w,c
  7015  00175E  0214               	mulwf	___flmul@b,c
  7016  001760  CFF3 F02B          	movff	prodl,___flmul@temp
  7017  001764  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7018  001768  502B               	movf	___flmul@temp,w,c
  7019  00176A  2622               	addwf	___flmul@grs,f,c
  7020  00176C  502C               	movf	___flmul@temp+1,w,c
  7021  00176E  2223               	addwfc	___flmul@grs+1,f,c
  7022  001770  0E00               	movlw	0
  7023  001772  2224               	addwfc	___flmul@grs+2,f,c
  7024  001774  0E00               	movlw	0
  7025  001776  2225               	addwfc	___flmul@grs+3,f,c
  7026  001778  501A               	movf	___flmul@a+2,w,c
  7027  00177A  0215               	mulwf	___flmul@b+1,c
  7028  00177C  CFF3 F02B          	movff	prodl,___flmul@temp
  7029  001780  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7030  001784  502B               	movf	___flmul@temp,w,c
  7031  001786  2627               	addwf	___flmul@prod,f,c
  7032  001788  502C               	movf	___flmul@temp+1,w,c
  7033  00178A  2228               	addwfc	___flmul@prod+1,f,c
  7034  00178C  0E00               	movlw	0
  7035  00178E  2229               	addwfc	___flmul@prod+2,f,c
  7036  001790  0E00               	movlw	0
  7037  001792  222A               	addwfc	___flmul@prod+3,f,c
  7038  001794  5019               	movf	___flmul@a+1,w,c
  7039  001796  0216               	mulwf	___flmul@b+2,c
  7040  001798  CFF3 F02B          	movff	prodl,___flmul@temp
  7041  00179C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7042  0017A0  502B               	movf	___flmul@temp,w,c
  7043  0017A2  2627               	addwf	___flmul@prod,f,c
  7044  0017A4  502C               	movf	___flmul@temp+1,w,c
  7045  0017A6  2228               	addwfc	___flmul@prod+1,f,c
  7046  0017A8  0E00               	movlw	0
  7047  0017AA  2229               	addwfc	___flmul@prod+2,f,c
  7048  0017AC  0E00               	movlw	0
  7049  0017AE  222A               	addwfc	___flmul@prod+3,f,c
  7050  0017B0  501A               	movf	___flmul@a+2,w,c
  7051  0017B2  0216               	mulwf	___flmul@b+2,c
  7052  0017B4  CFF3 F02B          	movff	prodl,___flmul@temp
  7053  0017B8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7054  0017BC  502B               	movf	___flmul@temp,w,c
  7055  0017BE  6E1C               	movwf	??___flmul& (0+255),c
  7056  0017C0  502C               	movf	___flmul@temp+1,w,c
  7057  0017C2  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7058  0017C4  6A1E               	clrf	(??___flmul+2)& (0+255),c
  7059  0017C6  6A1F               	clrf	(??___flmul+3)& (0+255),c
  7060  0017C8  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  7061  0017CC  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  7062  0017D0  C01C  F01D         	movff	??___flmul,??___flmul+1
  7063  0017D4  6A1C               	clrf	??___flmul,c
  7064  0017D6  501C               	movf	??___flmul,w,c
  7065  0017D8  2627               	addwf	___flmul@prod,f,c
  7066  0017DA  501D               	movf	??___flmul+1,w,c
  7067  0017DC  2228               	addwfc	___flmul@prod+1,f,c
  7068  0017DE  501E               	movf	??___flmul+2,w,c
  7069  0017E0  2229               	addwfc	___flmul@prod+2,f,c
  7070  0017E2  501F               	movf	??___flmul+3,w,c
  7071  0017E4  222A               	addwfc	___flmul@prod+3,f,c
  7072  0017E6  C022  F01C         	movff	___flmul@grs,??___flmul
  7073  0017EA  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  7074  0017EE  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  7075  0017F2  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  7076  0017F6  0E19               	movlw	25
  7077  0017F8  D005               	goto	u8140
  7078  0017FA                     u8145:
  7079  0017FA  90D8               	bcf	status,0,c
  7080  0017FC  321F               	rrcf	??___flmul+3,f,c
  7081  0017FE  321E               	rrcf	??___flmul+2,f,c
  7082  001800  321D               	rrcf	??___flmul+1,f,c
  7083  001802  321C               	rrcf	??___flmul,f,c
  7084  001804                     u8140:
  7085  001804  2EE8               	decfsz	wreg,f,c
  7086  001806  D7F9               	goto	u8145
  7087  001808  501C               	movf	??___flmul,w,c
  7088  00180A  2627               	addwf	___flmul@prod,f,c
  7089  00180C  501D               	movf	??___flmul+1,w,c
  7090  00180E  2228               	addwfc	___flmul@prod+1,f,c
  7091  001810  501E               	movf	??___flmul+2,w,c
  7092  001812  2229               	addwfc	___flmul@prod+2,f,c
  7093  001814  501F               	movf	??___flmul+3,w,c
  7094  001816  222A               	addwfc	___flmul@prod+3,f,c
  7095  001818  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7096  00181C  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7097  001820  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7098  001824  6A22               	clrf	___flmul@grs,c
  7099  001826  5021               	movf	___flmul@aexp,w,c
  7100  001828  C026  F01C         	movff	___flmul@bexp,??___flmul
  7101  00182C  6A1D               	clrf	(??___flmul+1)& (0+255),c
  7102  00182E  261C               	addwf	??___flmul,f,c
  7103  001830  0E00               	movlw	0
  7104  001832  221D               	addwfc	??___flmul+1,f,c
  7105  001834  0E82               	movlw	130
  7106  001836  241C               	addwf	??___flmul,w,c
  7107  001838  6E2B               	movwf	___flmul@temp,c
  7108  00183A  0EFF               	movlw	255
  7109  00183C  201D               	addwfc	??___flmul+1,w,c
  7110  00183E  6E2C               	movwf	___flmul@temp+1,c
  7111  001840  D00F               	goto	l7484
  7112  001842                     l7478:
  7113  001842  90D8               	bcf	status,0,c
  7114  001844  3627               	rlcf	___flmul@prod,f,c
  7115  001846  3628               	rlcf	___flmul@prod+1,f,c
  7116  001848  3629               	rlcf	___flmul@prod+2,f,c
  7117  00184A  362A               	rlcf	___flmul@prod+3,f,c
  7118  00184C  BE25               	btfsc	___flmul@grs+3,7,c
  7119  00184E  8027               	bsf	___flmul@prod,0,c
  7120  001850  90D8               	bcf	status,0,c
  7121  001852  3622               	rlcf	___flmul@grs,f,c
  7122  001854  3623               	rlcf	___flmul@grs+1,f,c
  7123  001856  3624               	rlcf	___flmul@grs+2,f,c
  7124  001858  3625               	rlcf	___flmul@grs+3,f,c
  7125  00185A  062B               	decf	___flmul@temp,f,c
  7126  00185C  A0D8               	btfss	status,0,c
  7127  00185E  062C               	decf	___flmul@temp+1,f,c
  7128  001860                     l7484:
  7129  001860  AE29               	btfss	___flmul@prod+2,7,c
  7130  001862  D7EF               	goto	l7478
  7131  001864  0E00               	movlw	0
  7132  001866  6E21               	movwf	___flmul@aexp,c
  7133  001868  AE25               	btfss	___flmul@grs+3,7,c
  7134  00186A  D017               	goto	l1357
  7135  00186C  0EFF               	movlw	255
  7136  00186E  1422               	andwf	___flmul@grs,w,c
  7137  001870  6E1C               	movwf	??___flmul& (0+255),c
  7138  001872  0EFF               	movlw	255
  7139  001874  1423               	andwf	___flmul@grs+1,w,c
  7140  001876  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7141  001878  0EFF               	movlw	255
  7142  00187A  1424               	andwf	___flmul@grs+2,w,c
  7143  00187C  6E1E               	movwf	(??___flmul+2)& (0+255),c
  7144  00187E  0E7F               	movlw	127
  7145  001880  1425               	andwf	___flmul@grs+3,w,c
  7146  001882  6E1F               	movwf	(??___flmul+3)& (0+255),c
  7147  001884  501C               	movf	??___flmul,w,c
  7148  001886  101D               	iorwf	??___flmul+1,w,c
  7149  001888  101E               	iorwf	??___flmul+2,w,c
  7150  00188A  101F               	iorwf	??___flmul+3,w,c
  7151  00188C  B4D8               	btfsc	status,2,c
  7152  00188E  D003               	goto	l1358
  7153  001890                     u8180:
  7154  001890  0E01               	movlw	1
  7155  001892  6E21               	movwf	___flmul@aexp,c
  7156  001894  D002               	goto	l1357
  7157  001896                     l1358:
  7158  001896  B027               	btfsc	___flmul@prod,0,c
  7159  001898  D7FB               	goto	u8180
  7160  00189A                     l1357:
  7161  00189A  5021               	movf	___flmul@aexp,w,c
  7162  00189C  B4D8               	btfsc	status,2,c
  7163  00189E  D01F               	goto	l7504
  7164  0018A0  0E01               	movlw	1
  7165  0018A2  2627               	addwf	___flmul@prod,f,c
  7166  0018A4  0E00               	movlw	0
  7167  0018A6  2228               	addwfc	___flmul@prod+1,f,c
  7168  0018A8  2229               	addwfc	___flmul@prod+2,f,c
  7169  0018AA  222A               	addwfc	___flmul@prod+3,f,c
  7170  0018AC  A02A               	btfss	___flmul@prod+3,0,c
  7171  0018AE  D017               	goto	l7504
  7172  0018B0  C027  F01C         	movff	___flmul@prod,??___flmul
  7173  0018B4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  7174  0018B8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  7175  0018BC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  7176  0018C0  341F               	rlcf	??___flmul+3,w,c
  7177  0018C2  321F               	rrcf	??___flmul+3,f,c
  7178  0018C4  321E               	rrcf	??___flmul+2,f,c
  7179  0018C6  321D               	rrcf	??___flmul+1,f,c
  7180  0018C8  321C               	rrcf	??___flmul,f,c
  7181  0018CA  C01C  F027         	movff	??___flmul,___flmul@prod
  7182  0018CE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  7183  0018D2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  7184  0018D6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  7185  0018DA  4A2B               	infsnz	___flmul@temp,f,c
  7186  0018DC  2A2C               	incf	___flmul@temp+1,f,c
  7187  0018DE                     l7504:
  7188  0018DE  BE2C               	btfsc	___flmul@temp+1,7,c
  7189  0018E0  D00D               	goto	l7508
  7190  0018E2  502C               	movf	___flmul@temp+1,w,c
  7191  0018E4  E103               	bnz	u8220
  7192  0018E6  282B               	incf	___flmul@temp,w,c
  7193  0018E8  A0D8               	btfss	status,0,c
  7194  0018EA  D008               	goto	l7508
  7195  0018EC                     u8220:
  7196  0018EC  0E00               	movlw	0
  7197  0018EE  6E27               	movwf	___flmul@prod,c
  7198  0018F0  0E00               	movlw	0
  7199  0018F2  6E28               	movwf	___flmul@prod+1,c
  7200  0018F4  0E80               	movlw	128
  7201  0018F6  6E29               	movwf	___flmul@prod+2,c
  7202  0018F8  0E7F               	movlw	127
  7203  0018FA  D020               	goto	L11
  7204  0018FC                     l7508:
  7205  0018FC  BE2C               	btfsc	___flmul@temp+1,7,c
  7206  0018FE  D005               	goto	u8230
  7207  001900  502C               	movf	___flmul@temp+1,w,c
  7208  001902  E10E               	bnz	l1365
  7209  001904  042B               	decf	___flmul@temp,w,c
  7210  001906  B0D8               	btfsc	status,0,c
  7211  001908  D00B               	goto	l1365
  7212  00190A                     u8230:
  7213  00190A  0E00               	movlw	0
  7214  00190C  6E27               	movwf	___flmul@prod,c
  7215  00190E  0E00               	movlw	0
  7216  001910  6E28               	movwf	___flmul@prod+1,c
  7217  001912  0E00               	movlw	0
  7218  001914  6E29               	movwf	___flmul@prod+2,c
  7219  001916  0E00               	movlw	0
  7220  001918  6E2A               	movwf	___flmul@prod+3,c
  7221  00191A  0E00               	movlw	0
  7222  00191C  6E20               	movwf	___flmul@sign,c
  7223  00191E  D00F               	goto	l7520
  7224  001920                     l1365:
  7225  001920  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  7226  001924  0EFF               	movlw	255
  7227  001926  1627               	andwf	___flmul@prod,f,c
  7228  001928  0EFF               	movlw	255
  7229  00192A  1628               	andwf	___flmul@prod+1,f,c
  7230  00192C  0E7F               	movlw	127
  7231  00192E  1629               	andwf	___flmul@prod+2,f,c
  7232  001930  0E00               	movlw	0
  7233  001932  162A               	andwf	___flmul@prod+3,f,c
  7234  001934  B026               	btfsc	___flmul@bexp,0,c
  7235  001936  8E29               	bsf	___flmul@prod+2,7,c
  7236  001938  90D8               	bcf	status,0,c
  7237  00193A  3026               	rrcf	___flmul@bexp,w,c
  7238  00193C                     L11:
  7239  00193C  6E2A               	movwf	___flmul@prod+3,c
  7240  00193E                     l7520:
  7241  00193E  5020               	movf	___flmul@sign,w,c
  7242  001940  122A               	iorwf	___flmul@prod+3,f,c
  7243  001942  C027  F014         	movff	___flmul@prod,?___flmul
  7244  001946  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7245  00194A  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7246  00194E  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7247  001952  0012               	return		;funcret
  7248  001954                     __end_of___flmul:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function ___flge *****************
  7252 ;; Defined at:
  7253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  ff1             4    5[COMRAM] unsigned char 
  7256 ;;  ff2             4    9[COMRAM] unsigned char 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;		None               void
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7268 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;Total ram usage:       12 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    2
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_set_pwm_duty_cycle
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text27
  7283  0032D4                     __ptext27:
  7284                           	opt callstack 0
  7285  0032D4                     ___flge:
  7286                           	opt callstack 24
  7287                           
  7288                           ;incstack = 0
  7289  0032D4  0E00               	movlw	0
  7290  0032D6  1406               	andwf	___flge@ff1,w,c
  7291  0032D8  6E0E               	movwf	??___flge& (0+255),c
  7292  0032DA  0E00               	movlw	0
  7293  0032DC  1407               	andwf	___flge@ff1+1,w,c
  7294  0032DE  6E0F               	movwf	(??___flge+1)& (0+255),c
  7295  0032E0  0E80               	movlw	128
  7296  0032E2  1408               	andwf	___flge@ff1+2,w,c
  7297  0032E4  6E10               	movwf	(??___flge+2)& (0+255),c
  7298  0032E6  0E7F               	movlw	127
  7299  0032E8  1409               	andwf	___flge@ff1+3,w,c
  7300  0032EA  6E11               	movwf	(??___flge+3)& (0+255),c
  7301  0032EC  500E               	movf	??___flge,w,c
  7302  0032EE  100F               	iorwf	??___flge+1,w,c
  7303  0032F0  1010               	iorwf	??___flge+2,w,c
  7304  0032F2  1011               	iorwf	??___flge+3,w,c
  7305  0032F4  A4D8               	btfss	status,2,c
  7306  0032F6  D008               	goto	l7530
  7307  0032F8  0E00               	movlw	0
  7308  0032FA  6E06               	movwf	___flge@ff1,c
  7309  0032FC  0E00               	movlw	0
  7310  0032FE  6E07               	movwf	___flge@ff1+1,c
  7311  003300  0E00               	movlw	0
  7312  003302  6E08               	movwf	___flge@ff1+2,c
  7313  003304  0E00               	movlw	0
  7314  003306  6E09               	movwf	___flge@ff1+3,c
  7315  003308                     l7530:
  7316  003308  0E00               	movlw	0
  7317  00330A  140A               	andwf	___flge@ff2,w,c
  7318  00330C  6E0E               	movwf	??___flge& (0+255),c
  7319  00330E  0E00               	movlw	0
  7320  003310  140B               	andwf	___flge@ff2+1,w,c
  7321  003312  6E0F               	movwf	(??___flge+1)& (0+255),c
  7322  003314  0E80               	movlw	128
  7323  003316  140C               	andwf	___flge@ff2+2,w,c
  7324  003318  6E10               	movwf	(??___flge+2)& (0+255),c
  7325  00331A  0E7F               	movlw	127
  7326  00331C  140D               	andwf	___flge@ff2+3,w,c
  7327  00331E  6E11               	movwf	(??___flge+3)& (0+255),c
  7328  003320  500E               	movf	??___flge,w,c
  7329  003322  100F               	iorwf	??___flge+1,w,c
  7330  003324  1010               	iorwf	??___flge+2,w,c
  7331  003326  1011               	iorwf	??___flge+3,w,c
  7332  003328  A4D8               	btfss	status,2,c
  7333  00332A  D008               	goto	l7534
  7334  00332C  0E00               	movlw	0
  7335  00332E  6E0A               	movwf	___flge@ff2,c
  7336  003330  0E00               	movlw	0
  7337  003332  6E0B               	movwf	___flge@ff2+1,c
  7338  003334  0E00               	movlw	0
  7339  003336  6E0C               	movwf	___flge@ff2+2,c
  7340  003338  0E00               	movlw	0
  7341  00333A  6E0D               	movwf	___flge@ff2+3,c
  7342  00333C                     l7534:
  7343  00333C  AE09               	btfss	___flge@ff1+3,7,c
  7344  00333E  D009               	goto	l7538
  7345  003340  6C06               	negf	___flge@ff1,c
  7346  003342  1E07               	comf	___flge@ff1+1,f,c
  7347  003344  B0D8               	btfsc	status,0,c
  7348  003346  2A07               	incf	___flge@ff1+1,f,c
  7349  003348  1E08               	comf	___flge@ff1+2,f,c
  7350  00334A  B0D8               	btfsc	status,0,c
  7351  00334C  2A08               	incf	___flge@ff1+2,f,c
  7352  00334E  0E80               	movlw	128
  7353  003350  5609               	subfwb	___flge@ff1+3,f,c
  7354  003352                     l7538:
  7355  003352  AE0D               	btfss	___flge@ff2+3,7,c
  7356  003354  D009               	goto	l999
  7357  003356  6C0A               	negf	___flge@ff2,c
  7358  003358  1E0B               	comf	___flge@ff2+1,f,c
  7359  00335A  B0D8               	btfsc	status,0,c
  7360  00335C  2A0B               	incf	___flge@ff2+1,f,c
  7361  00335E  1E0C               	comf	___flge@ff2+2,f,c
  7362  003360  B0D8               	btfsc	status,0,c
  7363  003362  2A0C               	incf	___flge@ff2+2,f,c
  7364  003364  0E80               	movlw	128
  7365  003366  560D               	subfwb	___flge@ff2+3,f,c
  7366  003368                     l999:
  7367  003368  0E00               	movlw	0
  7368  00336A  1A06               	xorwf	___flge@ff1,f,c
  7369  00336C  0E00               	movlw	0
  7370  00336E  1A07               	xorwf	___flge@ff1+1,f,c
  7371  003370  0E00               	movlw	0
  7372  003372  1A08               	xorwf	___flge@ff1+2,f,c
  7373  003374  0E80               	movlw	128
  7374  003376  1A09               	xorwf	___flge@ff1+3,f,c
  7375  003378  0E00               	movlw	0
  7376  00337A  1A0A               	xorwf	___flge@ff2,f,c
  7377  00337C  0E00               	movlw	0
  7378  00337E  1A0B               	xorwf	___flge@ff2+1,f,c
  7379  003380  0E00               	movlw	0
  7380  003382  1A0C               	xorwf	___flge@ff2+2,f,c
  7381  003384  0E80               	movlw	128
  7382  003386  1A0D               	xorwf	___flge@ff2+3,f,c
  7383  003388  500A               	movf	___flge@ff2,w,c
  7384  00338A  5C06               	subwf	___flge@ff1,w,c
  7385  00338C  500B               	movf	___flge@ff2+1,w,c
  7386  00338E  5807               	subwfb	___flge@ff1+1,w,c
  7387  003390  500C               	movf	___flge@ff2+2,w,c
  7388  003392  5808               	subwfb	___flge@ff1+2,w,c
  7389  003394  500D               	movf	___flge@ff2+3,w,c
  7390  003396  5809               	subwfb	___flge@ff1+3,w,c
  7391  003398  B0D8               	btfsc	status,0,c
  7392  00339A  D002               	goto	l7544
  7393  00339C  90D8               	bcf	status,0,c
  7394  00339E  0012               	return	
  7395  0033A0                     l7544:
  7396  0033A0  80D8               	bsf	status,0,c
  7397  0033A2  0012               	return		;funcret
  7398  0033A4                     __end_of___flge:
  7399                           	opt callstack 0
  7400                           
  7401 ;; *************** function ___fldiv *****************
  7402 ;; Defined at:
  7403 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  b               4   44[COMRAM] unsigned char 
  7406 ;;  a               4   48[COMRAM] unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  grs             4   63[COMRAM] unsigned long 
  7409 ;;  rem             4   56[COMRAM] unsigned long 
  7410 ;;  new_exp         2   61[COMRAM] short 
  7411 ;;  aexp            1   68[COMRAM] unsigned char 
  7412 ;;  bexp            1   67[COMRAM] unsigned char 
  7413 ;;  sign            1   60[COMRAM] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  4   44[COMRAM] unsigned char 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7423 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;Total ram usage:       25 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    2
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_set_pwm_duty_cycle
  7434 ;;		_errorCorrectedMove
  7435 ;;		_PIDCorrectedMove
  7436 ;;		_errorCorrectedMoveAccelerate
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text28
  7441  001C60                     __ptext28:
  7442                           	opt callstack 0
  7443  001C60                     ___fldiv:
  7444                           	opt callstack 24
  7445                           
  7446                           ;incstack = 0
  7447  001C60  5030               	movf	___fldiv@b+3,w,c
  7448  001C62  0B80               	andlw	128
  7449  001C64  6E3D               	movwf	___fldiv@sign,c
  7450  001C66  5030               	movf	___fldiv@b+3,w,c
  7451  001C68  2430               	addwf	___fldiv@b+3,w,c
  7452  001C6A  6E44               	movwf	___fldiv@bexp,c
  7453  001C6C  BE2F               	btfsc	___fldiv@b+2,7,c
  7454  001C6E  8044               	bsf	___fldiv@bexp,0,c
  7455  001C70  5044               	movf	___fldiv@bexp,w,c
  7456  001C72  B4D8               	btfsc	status,2,c
  7457  001C74  D00D               	goto	l7274
  7458  001C76  2844               	incf	___fldiv@bexp,w,c
  7459  001C78  A4D8               	btfss	status,2,c
  7460  001C7A  D008               	goto	l7270
  7461  001C7C  0E00               	movlw	0
  7462  001C7E  6E2D               	movwf	___fldiv@b,c
  7463  001C80  0E00               	movlw	0
  7464  001C82  6E2E               	movwf	___fldiv@b+1,c
  7465  001C84  0E00               	movlw	0
  7466  001C86  6E2F               	movwf	___fldiv@b+2,c
  7467  001C88  0E00               	movlw	0
  7468  001C8A  6E30               	movwf	___fldiv@b+3,c
  7469  001C8C                     l7270:
  7470  001C8C  8E2F               	bsf	___fldiv@b+2,7,c
  7471  001C8E  D006               	goto	L12
  7472  001C90                     l7274:
  7473  001C90  0E00               	movlw	0
  7474  001C92  6E2D               	movwf	___fldiv@b,c
  7475  001C94  0E00               	movlw	0
  7476  001C96  6E2E               	movwf	___fldiv@b+1,c
  7477  001C98  0E00               	movlw	0
  7478  001C9A  6E2F               	movwf	___fldiv@b+2,c
  7479  001C9C                     L12:
  7480  001C9C  0E00               	movlw	0
  7481  001C9E  6E30               	movwf	___fldiv@b+3,c
  7482  001CA0  5034               	movf	___fldiv@a+3,w,c
  7483  001CA2  0B80               	andlw	128
  7484  001CA4  1A3D               	xorwf	___fldiv@sign,f,c
  7485  001CA6  5034               	movf	___fldiv@a+3,w,c
  7486  001CA8  2434               	addwf	___fldiv@a+3,w,c
  7487  001CAA  6E45               	movwf	___fldiv@aexp,c
  7488  001CAC  BE33               	btfsc	___fldiv@a+2,7,c
  7489  001CAE  8045               	bsf	___fldiv@aexp,0,c
  7490  001CB0  5045               	movf	___fldiv@aexp,w,c
  7491  001CB2  B4D8               	btfsc	status,2,c
  7492  001CB4  D00D               	goto	l7294
  7493  001CB6  2845               	incf	___fldiv@aexp,w,c
  7494  001CB8  A4D8               	btfss	status,2,c
  7495  001CBA  D008               	goto	l7290
  7496  001CBC  0E00               	movlw	0
  7497  001CBE  6E31               	movwf	___fldiv@a,c
  7498  001CC0  0E00               	movlw	0
  7499  001CC2  6E32               	movwf	___fldiv@a+1,c
  7500  001CC4  0E00               	movlw	0
  7501  001CC6  6E33               	movwf	___fldiv@a+2,c
  7502  001CC8  0E00               	movlw	0
  7503  001CCA  6E34               	movwf	___fldiv@a+3,c
  7504  001CCC                     l7290:
  7505  001CCC  8E33               	bsf	___fldiv@a+2,7,c
  7506  001CCE  D006               	goto	L13
  7507  001CD0                     l7294:
  7508  001CD0  0E00               	movlw	0
  7509  001CD2  6E31               	movwf	___fldiv@a,c
  7510  001CD4  0E00               	movlw	0
  7511  001CD6  6E32               	movwf	___fldiv@a+1,c
  7512  001CD8  0E00               	movlw	0
  7513  001CDA  6E33               	movwf	___fldiv@a+2,c
  7514  001CDC                     L13:
  7515  001CDC  0E00               	movlw	0
  7516  001CDE  6E34               	movwf	___fldiv@a+3,c
  7517  001CE0  5031               	movf	___fldiv@a,w,c
  7518  001CE2  1032               	iorwf	___fldiv@a+1,w,c
  7519  001CE4  1033               	iorwf	___fldiv@a+2,w,c
  7520  001CE6  1034               	iorwf	___fldiv@a+3,w,c
  7521  001CE8  A4D8               	btfss	status,2,c
  7522  001CEA  D017               	goto	l7308
  7523  001CEC  0E00               	movlw	0
  7524  001CEE  6E2D               	movwf	___fldiv@b,c
  7525  001CF0  0E00               	movlw	0
  7526  001CF2  6E2E               	movwf	___fldiv@b+1,c
  7527  001CF4  0E00               	movlw	0
  7528  001CF6  6E2F               	movwf	___fldiv@b+2,c
  7529  001CF8  0E00               	movlw	0
  7530  001CFA  6E30               	movwf	___fldiv@b+3,c
  7531  001CFC  0E80               	movlw	128
  7532  001CFE  122F               	iorwf	___fldiv@b+2,f,c
  7533  001D00  0E7F               	movlw	127
  7534  001D02  1230               	iorwf	___fldiv@b+3,f,c
  7535  001D04                     l7302:
  7536  001D04  503D               	movf	___fldiv@sign,w,c
  7537  001D06  1230               	iorwf	___fldiv@b+3,f,c
  7538  001D08  C02D  F02D         	movff	___fldiv@b,?___fldiv
  7539  001D0C  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  7540  001D10  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  7541  001D14  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  7542  001D18  0012               	return	
  7543  001D1A                     l7308:
  7544  001D1A  5044               	movf	___fldiv@bexp,w,c
  7545  001D1C  A4D8               	btfss	status,2,c
  7546  001D1E  D009               	goto	l7316
  7547  001D20  0E00               	movlw	0
  7548  001D22  6E2D               	movwf	?___fldiv,c
  7549  001D24  0E00               	movlw	0
  7550  001D26  6E2E               	movwf	?___fldiv+1,c
  7551  001D28  0E00               	movlw	0
  7552  001D2A  6E2F               	movwf	?___fldiv+2,c
  7553  001D2C  0E00               	movlw	0
  7554  001D2E  6E30               	movwf	?___fldiv+3,c
  7555  001D30  0012               	return	
  7556  001D32                     l7316:
  7557  001D32  5045               	movf	___fldiv@aexp,w,c
  7558  001D34  C044  F035         	movff	___fldiv@bexp,??___fldiv
  7559  001D38  6A36               	clrf	(??___fldiv+1)& (0+255),c
  7560  001D3A  5E35               	subwf	??___fldiv,f,c
  7561  001D3C  0E00               	movlw	0
  7562  001D3E  5A36               	subwfb	??___fldiv+1,f,c
  7563  001D40  0E7F               	movlw	127
  7564  001D42  2435               	addwf	??___fldiv,w,c
  7565  001D44  6E3E               	movwf	___fldiv@new_exp,c
  7566  001D46  0E00               	movlw	0
  7567  001D48  2036               	addwfc	??___fldiv+1,w,c
  7568  001D4A  6E3F               	movwf	___fldiv@new_exp+1,c
  7569  001D4C  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  7570  001D50  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  7571  001D54  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  7572  001D58  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  7573  001D5C  0E00               	movlw	0
  7574  001D5E  6E2D               	movwf	___fldiv@b,c
  7575  001D60  0E00               	movlw	0
  7576  001D62  6E2E               	movwf	___fldiv@b+1,c
  7577  001D64  0E00               	movlw	0
  7578  001D66  6E2F               	movwf	___fldiv@b+2,c
  7579  001D68  0E00               	movlw	0
  7580  001D6A  6E30               	movwf	___fldiv@b+3,c
  7581  001D6C  0E00               	movlw	0
  7582  001D6E  6E40               	movwf	___fldiv@grs,c
  7583  001D70  0E00               	movlw	0
  7584  001D72  6E41               	movwf	___fldiv@grs+1,c
  7585  001D74  0E00               	movlw	0
  7586  001D76  6E42               	movwf	___fldiv@grs+2,c
  7587  001D78  0E00               	movlw	0
  7588  001D7A  6E43               	movwf	___fldiv@grs+3,c
  7589  001D7C  0E00               	movlw	0
  7590  001D7E  6E45               	movwf	___fldiv@aexp,c
  7591  001D80  D028               	goto	l1318
  7592  001D82                     l7326:
  7593  001D82  5045               	movf	___fldiv@aexp,w,c
  7594  001D84  B4D8               	btfsc	status,2,c
  7595  001D86  D011               	goto	l7334
  7596  001D88  90D8               	bcf	status,0,c
  7597  001D8A  3639               	rlcf	___fldiv@rem,f,c
  7598  001D8C  363A               	rlcf	___fldiv@rem+1,f,c
  7599  001D8E  363B               	rlcf	___fldiv@rem+2,f,c
  7600  001D90  363C               	rlcf	___fldiv@rem+3,f,c
  7601  001D92  90D8               	bcf	status,0,c
  7602  001D94  362D               	rlcf	___fldiv@b,f,c
  7603  001D96  362E               	rlcf	___fldiv@b+1,f,c
  7604  001D98  362F               	rlcf	___fldiv@b+2,f,c
  7605  001D9A  3630               	rlcf	___fldiv@b+3,f,c
  7606  001D9C  BE43               	btfsc	___fldiv@grs+3,7,c
  7607  001D9E  802D               	bsf	___fldiv@b,0,c
  7608  001DA0  90D8               	bcf	status,0,c
  7609  001DA2  3640               	rlcf	___fldiv@grs,f,c
  7610  001DA4  3641               	rlcf	___fldiv@grs+1,f,c
  7611  001DA6  3642               	rlcf	___fldiv@grs+2,f,c
  7612  001DA8  3643               	rlcf	___fldiv@grs+3,f,c
  7613  001DAA                     l7334:
  7614  001DAA  5031               	movf	___fldiv@a,w,c
  7615  001DAC  5C39               	subwf	___fldiv@rem,w,c
  7616  001DAE  5032               	movf	___fldiv@a+1,w,c
  7617  001DB0  583A               	subwfb	___fldiv@rem+1,w,c
  7618  001DB2  5033               	movf	___fldiv@a+2,w,c
  7619  001DB4  583B               	subwfb	___fldiv@rem+2,w,c
  7620  001DB6  5034               	movf	___fldiv@a+3,w,c
  7621  001DB8  583C               	subwfb	___fldiv@rem+3,w,c
  7622  001DBA  A0D8               	btfss	status,0,c
  7623  001DBC  D009               	goto	l7340
  7624  001DBE  8C43               	bsf	___fldiv@grs+3,6,c
  7625  001DC0  5031               	movf	___fldiv@a,w,c
  7626  001DC2  5E39               	subwf	___fldiv@rem,f,c
  7627  001DC4  5032               	movf	___fldiv@a+1,w,c
  7628  001DC6  5A3A               	subwfb	___fldiv@rem+1,f,c
  7629  001DC8  5033               	movf	___fldiv@a+2,w,c
  7630  001DCA  5A3B               	subwfb	___fldiv@rem+2,f,c
  7631  001DCC  5034               	movf	___fldiv@a+3,w,c
  7632  001DCE  5A3C               	subwfb	___fldiv@rem+3,f,c
  7633  001DD0                     l7340:
  7634  001DD0  2A45               	incf	___fldiv@aexp,f,c
  7635  001DD2                     l1318:
  7636  001DD2  0E19               	movlw	25
  7637  001DD4  6445               	cpfsgt	___fldiv@aexp,c
  7638  001DD6  D7D5               	goto	l7326
  7639  001DD8  5039               	movf	___fldiv@rem,w,c
  7640  001DDA  103A               	iorwf	___fldiv@rem+1,w,c
  7641  001DDC  103B               	iorwf	___fldiv@rem+2,w,c
  7642  001DDE  103C               	iorwf	___fldiv@rem+3,w,c
  7643  001DE0  B4D8               	btfsc	status,2,c
  7644  001DE2  D011               	goto	l7352
  7645  001DE4  8040               	bsf	___fldiv@grs,0,c
  7646  001DE6  D00F               	goto	l7352
  7647  001DE8                     l7346:
  7648  001DE8  90D8               	bcf	status,0,c
  7649  001DEA  362D               	rlcf	___fldiv@b,f,c
  7650  001DEC  362E               	rlcf	___fldiv@b+1,f,c
  7651  001DEE  362F               	rlcf	___fldiv@b+2,f,c
  7652  001DF0  3630               	rlcf	___fldiv@b+3,f,c
  7653  001DF2  BE43               	btfsc	___fldiv@grs+3,7,c
  7654  001DF4  802D               	bsf	___fldiv@b,0,c
  7655  001DF6  90D8               	bcf	status,0,c
  7656  001DF8  3640               	rlcf	___fldiv@grs,f,c
  7657  001DFA  3641               	rlcf	___fldiv@grs+1,f,c
  7658  001DFC  3642               	rlcf	___fldiv@grs+2,f,c
  7659  001DFE  3643               	rlcf	___fldiv@grs+3,f,c
  7660  001E00  063E               	decf	___fldiv@new_exp,f,c
  7661  001E02  A0D8               	btfss	status,0,c
  7662  001E04  063F               	decf	___fldiv@new_exp+1,f,c
  7663  001E06                     l7352:
  7664  001E06  AE2F               	btfss	___fldiv@b+2,7,c
  7665  001E08  D7EF               	goto	l7346
  7666  001E0A  0E00               	movlw	0
  7667  001E0C  6E45               	movwf	___fldiv@aexp,c
  7668  001E0E  AE43               	btfss	___fldiv@grs+3,7,c
  7669  001E10  D017               	goto	l1329
  7670  001E12  0EFF               	movlw	255
  7671  001E14  1440               	andwf	___fldiv@grs,w,c
  7672  001E16  6E35               	movwf	??___fldiv& (0+255),c
  7673  001E18  0EFF               	movlw	255
  7674  001E1A  1441               	andwf	___fldiv@grs+1,w,c
  7675  001E1C  6E36               	movwf	(??___fldiv+1)& (0+255),c
  7676  001E1E  0EFF               	movlw	255
  7677  001E20  1442               	andwf	___fldiv@grs+2,w,c
  7678  001E22  6E37               	movwf	(??___fldiv+2)& (0+255),c
  7679  001E24  0E7F               	movlw	127
  7680  001E26  1443               	andwf	___fldiv@grs+3,w,c
  7681  001E28  6E38               	movwf	(??___fldiv+3)& (0+255),c
  7682  001E2A  5035               	movf	??___fldiv,w,c
  7683  001E2C  1036               	iorwf	??___fldiv+1,w,c
  7684  001E2E  1037               	iorwf	??___fldiv+2,w,c
  7685  001E30  1038               	iorwf	??___fldiv+3,w,c
  7686  001E32  B4D8               	btfsc	status,2,c
  7687  001E34  D003               	goto	l1330
  7688  001E36                     u7990:
  7689  001E36  0E01               	movlw	1
  7690  001E38  6E45               	movwf	___fldiv@aexp,c
  7691  001E3A  D002               	goto	l1329
  7692  001E3C                     l1330:
  7693  001E3C  B02D               	btfsc	___fldiv@b,0,c
  7694  001E3E  D7FB               	goto	u7990
  7695  001E40                     l1329:
  7696  001E40  5045               	movf	___fldiv@aexp,w,c
  7697  001E42  B4D8               	btfsc	status,2,c
  7698  001E44  D01F               	goto	l7372
  7699  001E46  0E01               	movlw	1
  7700  001E48  262D               	addwf	___fldiv@b,f,c
  7701  001E4A  0E00               	movlw	0
  7702  001E4C  222E               	addwfc	___fldiv@b+1,f,c
  7703  001E4E  222F               	addwfc	___fldiv@b+2,f,c
  7704  001E50  2230               	addwfc	___fldiv@b+3,f,c
  7705  001E52  A030               	btfss	___fldiv@b+3,0,c
  7706  001E54  D017               	goto	l7372
  7707  001E56  C02D  F035         	movff	___fldiv@b,??___fldiv
  7708  001E5A  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7709  001E5E  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7710  001E62  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7711  001E66  3438               	rlcf	??___fldiv+3,w,c
  7712  001E68  3238               	rrcf	??___fldiv+3,f,c
  7713  001E6A  3237               	rrcf	??___fldiv+2,f,c
  7714  001E6C  3236               	rrcf	??___fldiv+1,f,c
  7715  001E6E  3235               	rrcf	??___fldiv,f,c
  7716  001E70  C035  F02D         	movff	??___fldiv,___fldiv@b
  7717  001E74  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7718  001E78  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7719  001E7C  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7720  001E80  4A3E               	infsnz	___fldiv@new_exp,f,c
  7721  001E82  2A3F               	incf	___fldiv@new_exp+1,f,c
  7722  001E84                     l7372:
  7723  001E84  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7724  001E86  D010               	goto	l7376
  7725  001E88  503F               	movf	___fldiv@new_exp+1,w,c
  7726  001E8A  E103               	bnz	u8030
  7727  001E8C  283E               	incf	___fldiv@new_exp,w,c
  7728  001E8E  A0D8               	btfss	status,0,c
  7729  001E90  D00B               	goto	l7376
  7730  001E92                     u8030:
  7731  001E92  0E00               	movlw	0
  7732  001E94  6E3F               	movwf	___fldiv@new_exp+1,c
  7733  001E96  683E               	setf	___fldiv@new_exp,c
  7734  001E98  0E00               	movlw	0
  7735  001E9A  6E2D               	movwf	___fldiv@b,c
  7736  001E9C  0E00               	movlw	0
  7737  001E9E  6E2E               	movwf	___fldiv@b+1,c
  7738  001EA0  0E00               	movlw	0
  7739  001EA2  6E2F               	movwf	___fldiv@b+2,c
  7740  001EA4  0E00               	movlw	0
  7741  001EA6  6E30               	movwf	___fldiv@b+3,c
  7742  001EA8                     l7376:
  7743  001EA8  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7744  001EAA  D005               	goto	u8040
  7745  001EAC  503F               	movf	___fldiv@new_exp+1,w,c
  7746  001EAE  E111               	bnz	l7380
  7747  001EB0  043E               	decf	___fldiv@new_exp,w,c
  7748  001EB2  B0D8               	btfsc	status,0,c
  7749  001EB4  D00E               	goto	l7380
  7750  001EB6                     u8040:
  7751  001EB6  0E00               	movlw	0
  7752  001EB8  6E3F               	movwf	___fldiv@new_exp+1,c
  7753  001EBA  0E00               	movlw	0
  7754  001EBC  6E3E               	movwf	___fldiv@new_exp,c
  7755  001EBE  0E00               	movlw	0
  7756  001EC0  6E2D               	movwf	___fldiv@b,c
  7757  001EC2  0E00               	movlw	0
  7758  001EC4  6E2E               	movwf	___fldiv@b+1,c
  7759  001EC6  0E00               	movlw	0
  7760  001EC8  6E2F               	movwf	___fldiv@b+2,c
  7761  001ECA  0E00               	movlw	0
  7762  001ECC  6E30               	movwf	___fldiv@b+3,c
  7763  001ECE  0E00               	movlw	0
  7764  001ED0  6E3D               	movwf	___fldiv@sign,c
  7765  001ED2                     l7380:
  7766  001ED2  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7767  001ED6  A044               	btfss	___fldiv@bexp,0,c
  7768  001ED8  D002               	goto	l7386
  7769  001EDA  8E2F               	bsf	___fldiv@b+2,7,c
  7770  001EDC  D001               	goto	l7388
  7771  001EDE                     l7386:
  7772  001EDE  9E2F               	bcf	___fldiv@b+2,7,c
  7773  001EE0                     l7388:
  7774  001EE0  90D8               	bcf	status,0,c
  7775  001EE2  3044               	rrcf	___fldiv@bexp,w,c
  7776  001EE4  6E30               	movwf	___fldiv@b+3,c
  7777  001EE6  D70E               	goto	l7302
  7778  001EE8                     __end_of___fldiv:
  7779                           	opt callstack 0
  7780                           
  7781 ;; *************** function ___flsub *****************
  7782 ;; Defined at:
  7783 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  b               4   69[COMRAM] unsigned char 
  7786 ;;  a               4   73[COMRAM] unsigned char 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  4   69[COMRAM] unsigned char 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7798 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;Total ram usage:        8 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    3
  7805 ;; This function calls:
  7806 ;;		___fladd
  7807 ;; This function is called by:
  7808 ;;		_errorCorrectedMove
  7809 ;;		_PIDCorrectedMove
  7810 ;;		_errorCorrectedMoveAccelerate
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text29
  7815  003CFE                     __ptext29:
  7816                           	opt callstack 0
  7817  003CFE                     ___flsub:
  7818                           	opt callstack 24
  7819                           
  7820                           ;incstack = 0
  7821  003CFE  0E00               	movlw	0
  7822  003D00  1A4A               	xorwf	___flsub@a,f,c
  7823  003D02  0E00               	movlw	0
  7824  003D04  1A4B               	xorwf	___flsub@a+1,f,c
  7825  003D06  0E00               	movlw	0
  7826  003D08  1A4C               	xorwf	___flsub@a+2,f,c
  7827  003D0A  0E80               	movlw	128
  7828  003D0C  1A4D               	xorwf	___flsub@a+3,f,c
  7829  003D0E  C046  F02D         	movff	___flsub@b,___fladd@b
  7830  003D12  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  7831  003D16  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  7832  003D1A  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  7833  003D1E  C04A  F031         	movff	___flsub@a,___fladd@a
  7834  003D22  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  7835  003D26  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  7836  003D2A  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  7837  003D2E  ECAA  F00C         	call	___fladd	;wreg free
  7838  003D32  C02D  F046         	movff	?___fladd,?___flsub
  7839  003D36  C02E  F047         	movff	?___fladd+1,?___flsub+1
  7840  003D3A  C02F  F048         	movff	?___fladd+2,?___flsub+2
  7841  003D3E  C030  F049         	movff	?___fladd+3,?___flsub+3
  7842  003D42  0012               	return		;funcret
  7843  003D44                     __end_of___flsub:
  7844                           	opt callstack 0
  7845                           
  7846 ;; *************** function ___fladd *****************
  7847 ;; Defined at:
  7848 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  b               4   44[COMRAM] unsigned char 
  7851 ;;  a               4   48[COMRAM] unsigned char 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  grs             1   59[COMRAM] unsigned char 
  7854 ;;  bexp            1   58[COMRAM] unsigned char 
  7855 ;;  aexp            1   57[COMRAM] unsigned char 
  7856 ;;  signs           1   56[COMRAM] unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  4   44[COMRAM] unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7866 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;Total ram usage:       16 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    2
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_errorCorrectedMove
  7877 ;;		___flsub
  7878 ;;		_PIDCorrectedMove
  7879 ;;		_errorCorrectedMoveAccelerate
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text30
  7884  001954                     __ptext30:
  7885                           	opt callstack 0
  7886  001954                     ___fladd:
  7887                           	opt callstack 24
  7888                           
  7889                           ;incstack = 0
  7890  001954  5030               	movf	___fladd@b+3,w,c
  7891  001956  0B80               	andlw	128
  7892  001958  6E39               	movwf	___fladd@signs,c
  7893  00195A  5030               	movf	___fladd@b+3,w,c
  7894  00195C  2430               	addwf	___fladd@b+3,w,c
  7895  00195E  6E3B               	movwf	___fladd@bexp,c
  7896  001960  BE2F               	btfsc	___fladd@b+2,7,c
  7897  001962  803B               	bsf	___fladd@bexp,0,c
  7898  001964  503B               	movf	___fladd@bexp,w,c
  7899  001966  B4D8               	btfsc	status,2,c
  7900  001968  D00D               	goto	l5252
  7901  00196A  283B               	incf	___fladd@bexp,w,c
  7902  00196C  A4D8               	btfss	status,2,c
  7903  00196E  D008               	goto	l5248
  7904  001970  0E00               	movlw	0
  7905  001972  6E2D               	movwf	___fladd@b,c
  7906  001974  0E00               	movlw	0
  7907  001976  6E2E               	movwf	___fladd@b+1,c
  7908  001978  0E00               	movlw	0
  7909  00197A  6E2F               	movwf	___fladd@b+2,c
  7910  00197C  0E00               	movlw	0
  7911  00197E  6E30               	movwf	___fladd@b+3,c
  7912  001980                     l5248:
  7913  001980  8E2F               	bsf	___fladd@b+2,7,c
  7914  001982  D006               	goto	L14
  7915  001984                     l5252:
  7916  001984  0E00               	movlw	0
  7917  001986  6E2D               	movwf	___fladd@b,c
  7918  001988  0E00               	movlw	0
  7919  00198A  6E2E               	movwf	___fladd@b+1,c
  7920  00198C  0E00               	movlw	0
  7921  00198E  6E2F               	movwf	___fladd@b+2,c
  7922  001990                     L14:
  7923  001990  0E00               	movlw	0
  7924  001992  6E30               	movwf	___fladd@b+3,c
  7925  001994  5034               	movf	___fladd@a+3,w,c
  7926  001996  0B80               	andlw	128
  7927  001998  6E3A               	movwf	___fladd@aexp,c
  7928  00199A  5039               	movf	___fladd@signs,w,c
  7929  00199C  183A               	xorwf	___fladd@aexp,w,c
  7930  00199E  A4D8               	btfss	status,2,c
  7931  0019A0  8C39               	bsf	___fladd@signs,6,c
  7932  0019A2  5034               	movf	___fladd@a+3,w,c
  7933  0019A4  2434               	addwf	___fladd@a+3,w,c
  7934  0019A6  6E3A               	movwf	___fladd@aexp,c
  7935  0019A8  BE33               	btfsc	___fladd@a+2,7,c
  7936  0019AA  803A               	bsf	___fladd@aexp,0,c
  7937  0019AC  503A               	movf	___fladd@aexp,w,c
  7938  0019AE  B4D8               	btfsc	status,2,c
  7939  0019B0  D00D               	goto	l5276
  7940  0019B2  283A               	incf	___fladd@aexp,w,c
  7941  0019B4  A4D8               	btfss	status,2,c
  7942  0019B6  D008               	goto	l5272
  7943  0019B8  0E00               	movlw	0
  7944  0019BA  6E31               	movwf	___fladd@a,c
  7945  0019BC  0E00               	movlw	0
  7946  0019BE  6E32               	movwf	___fladd@a+1,c
  7947  0019C0  0E00               	movlw	0
  7948  0019C2  6E33               	movwf	___fladd@a+2,c
  7949  0019C4  0E00               	movlw	0
  7950  0019C6  6E34               	movwf	___fladd@a+3,c
  7951  0019C8                     l5272:
  7952  0019C8  8E33               	bsf	___fladd@a+2,7,c
  7953  0019CA  D006               	goto	L15
  7954  0019CC                     l5276:
  7955  0019CC  0E00               	movlw	0
  7956  0019CE  6E31               	movwf	___fladd@a,c
  7957  0019D0  0E00               	movlw	0
  7958  0019D2  6E32               	movwf	___fladd@a+1,c
  7959  0019D4  0E00               	movlw	0
  7960  0019D6  6E33               	movwf	___fladd@a+2,c
  7961  0019D8                     L15:
  7962  0019D8  0E00               	movlw	0
  7963  0019DA  6E34               	movwf	___fladd@a+3,c
  7964  0019DC  503B               	movf	___fladd@bexp,w,c
  7965  0019DE  5C3A               	subwf	___fladd@aexp,w,c
  7966  0019E0  B0D8               	btfsc	status,0,c
  7967  0019E2  D022               	goto	l5314
  7968  0019E4  AC39               	btfss	___fladd@signs,6,c
  7969  0019E6  D002               	goto	l5284
  7970  0019E8  0E80               	movlw	128
  7971  0019EA  1A39               	xorwf	___fladd@signs,f,c
  7972  0019EC                     l5284:
  7973  0019EC  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  7974  0019F0  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7975  0019F4  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  7976  0019F8  C02D  F03C         	movff	___fladd@b,___fladd@grs
  7977  0019FC  C031  F02D         	movff	___fladd@a,___fladd@b
  7978  001A00  C03C  F031         	movff	___fladd@grs,___fladd@a
  7979  001A04  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  7980  001A08  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  7981  001A0C  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  7982  001A10  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  7983  001A14  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  7984  001A18  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  7985  001A1C  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  7986  001A20  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  7987  001A24  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  7988  001A28                     l5314:
  7989  001A28  0E00               	movlw	0
  7990  001A2A  6E3C               	movwf	___fladd@grs,c
  7991  001A2C  503B               	movf	___fladd@bexp,w,c
  7992  001A2E  C03A  F035         	movff	___fladd@aexp,??___fladd
  7993  001A32  6A36               	clrf	(??___fladd+1)& (0+255),c
  7994  001A34  5E35               	subwf	??___fladd,f,c
  7995  001A36  0E00               	movlw	0
  7996  001A38  5A36               	subwfb	??___fladd+1,f,c
  7997  001A3A  BE36               	btfsc	??___fladd+1,7,c
  7998  001A3C  D02C               	goto	l1263
  7999  001A3E  5036               	movf	??___fladd+1,w,c
  8000  001A40  E104               	bnz	u5630
  8001  001A42  0E1A               	movlw	26
  8002  001A44  5C35               	subwf	??___fladd,w,c
  8003  001A46  A0D8               	btfss	status,0,c
  8004  001A48  D026               	goto	l1263
  8005  001A4A                     u5630:
  8006  001A4A  502D               	movf	___fladd@b,w,c
  8007  001A4C  102E               	iorwf	___fladd@b+1,w,c
  8008  001A4E  102F               	iorwf	___fladd@b+2,w,c
  8009  001A50  1030               	iorwf	___fladd@b+3,w,c
  8010  001A52  B4D8               	btfsc	status,2,c
  8011  001A54  D002               	goto	u5640
  8012  001A56  0E01               	movlw	1
  8013  001A58  D001               	goto	u5650
  8014  001A5A                     u5640:
  8015  001A5A  0E00               	movlw	0
  8016  001A5C                     u5650:
  8017  001A5C  6E3C               	movwf	___fladd@grs,c
  8018  001A5E  0E00               	movlw	0
  8019  001A60  6E2D               	movwf	___fladd@b,c
  8020  001A62  0E00               	movlw	0
  8021  001A64  6E2E               	movwf	___fladd@b+1,c
  8022  001A66  0E00               	movlw	0
  8023  001A68  6E2F               	movwf	___fladd@b+2,c
  8024  001A6A  0E00               	movlw	0
  8025  001A6C  6E30               	movwf	___fladd@b+3,c
  8026  001A6E  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  8027  001A72  D015               	goto	u5680
  8028  001A74                     l1264:
  8029  001A74  A03C               	btfss	___fladd@grs,0,c
  8030  001A76  D005               	goto	l5326
  8031  001A78  90D8               	bcf	status,0,c
  8032  001A7A  303C               	rrcf	___fladd@grs,w,c
  8033  001A7C  0901               	iorlw	1
  8034  001A7E  6E3C               	movwf	___fladd@grs,c
  8035  001A80  D002               	goto	l5328
  8036  001A82                     l5326:
  8037  001A82  90D8               	bcf	status,0,c
  8038  001A84  323C               	rrcf	___fladd@grs,f,c
  8039  001A86                     l5328:
  8040  001A86  B02D               	btfsc	___fladd@b,0,c
  8041  001A88  8E3C               	bsf	___fladd@grs,7,c
  8042  001A8A  3430               	rlcf	___fladd@b+3,w,c
  8043  001A8C  3230               	rrcf	___fladd@b+3,f,c
  8044  001A8E  322F               	rrcf	___fladd@b+2,f,c
  8045  001A90  322E               	rrcf	___fladd@b+1,f,c
  8046  001A92  322D               	rrcf	___fladd@b,f,c
  8047  001A94  2A3B               	incf	___fladd@bexp,f,c
  8048  001A96                     l1263:
  8049  001A96  503A               	movf	___fladd@aexp,w,c
  8050  001A98  5C3B               	subwf	___fladd@bexp,w,c
  8051  001A9A  A0D8               	btfss	status,0,c
  8052  001A9C  D7EB               	goto	l1264
  8053  001A9E                     u5680:
  8054  001A9E  BC39               	btfsc	___fladd@signs,6,c
  8055  001AA0  D028               	goto	l5360
  8056  001AA2  503B               	movf	___fladd@bexp,w,c
  8057  001AA4  A4D8               	btfss	status,2,c
  8058  001AA6  D009               	goto	l5342
  8059  001AA8  0E00               	movlw	0
  8060  001AAA  6E2D               	movwf	?___fladd,c
  8061  001AAC  0E00               	movlw	0
  8062  001AAE  6E2E               	movwf	?___fladd+1,c
  8063  001AB0  0E00               	movlw	0
  8064  001AB2  6E2F               	movwf	?___fladd+2,c
  8065  001AB4  0E00               	movlw	0
  8066  001AB6  6E30               	movwf	?___fladd+3,c
  8067  001AB8  0012               	return	
  8068  001ABA                     l5342:
  8069  001ABA  5031               	movf	___fladd@a,w,c
  8070  001ABC  262D               	addwf	___fladd@b,f,c
  8071  001ABE  5032               	movf	___fladd@a+1,w,c
  8072  001AC0  222E               	addwfc	___fladd@b+1,f,c
  8073  001AC2  5033               	movf	___fladd@a+2,w,c
  8074  001AC4  222F               	addwfc	___fladd@b+2,f,c
  8075  001AC6  5034               	movf	___fladd@a+3,w,c
  8076  001AC8  2230               	addwfc	___fladd@b+3,f,c
  8077  001ACA  A030               	btfss	___fladd@b+3,0,c
  8078  001ACC  D071               	goto	u5810
  8079  001ACE  A03C               	btfss	___fladd@grs,0,c
  8080  001AD0  D005               	goto	l5350
  8081  001AD2  90D8               	bcf	status,0,c
  8082  001AD4  303C               	rrcf	___fladd@grs,w,c
  8083  001AD6  0901               	iorlw	1
  8084  001AD8  6E3C               	movwf	___fladd@grs,c
  8085  001ADA  D002               	goto	l5352
  8086  001ADC                     l5350:
  8087  001ADC  90D8               	bcf	status,0,c
  8088  001ADE  323C               	rrcf	___fladd@grs,f,c
  8089  001AE0                     l5352:
  8090  001AE0  B02D               	btfsc	___fladd@b,0,c
  8091  001AE2  8E3C               	bsf	___fladd@grs,7,c
  8092  001AE4  3430               	rlcf	___fladd@b+3,w,c
  8093  001AE6  3230               	rrcf	___fladd@b+3,f,c
  8094  001AE8  322F               	rrcf	___fladd@b+2,f,c
  8095  001AEA  322E               	rrcf	___fladd@b+1,f,c
  8096  001AEC  322D               	rrcf	___fladd@b,f,c
  8097  001AEE  2A3B               	incf	___fladd@bexp,f,c
  8098  001AF0  D05F               	goto	u5810
  8099  001AF2                     l5360:
  8100  001AF2  5031               	movf	___fladd@a,w,c
  8101  001AF4  5C2D               	subwf	___fladd@b,w,c
  8102  001AF6  5032               	movf	___fladd@a+1,w,c
  8103  001AF8  582E               	subwfb	___fladd@b+1,w,c
  8104  001AFA  5033               	movf	___fladd@a+2,w,c
  8105  001AFC  582F               	subwfb	___fladd@b+2,w,c
  8106  001AFE  5030               	movf	___fladd@b+3,w,c
  8107  001B00  0A80               	xorlw	128
  8108  001B02  6E35               	movwf	??___fladd& (0+255),c
  8109  001B04  5034               	movf	___fladd@a+3,w,c
  8110  001B06  0A80               	xorlw	128
  8111  001B08  5835               	subwfb	??___fladd& (0+255),w,c
  8112  001B0A  B0D8               	btfsc	status,0,c
  8113  001B0C  D025               	goto	l5370
  8114  001B0E  502D               	movf	___fladd@b,w,c
  8115  001B10  5C31               	subwf	___fladd@a,w,c
  8116  001B12  6E35               	movwf	??___fladd& (0+255),c
  8117  001B14  502E               	movf	___fladd@b+1,w,c
  8118  001B16  5832               	subwfb	___fladd@a+1,w,c
  8119  001B18  6E36               	movwf	(??___fladd+1)& (0+255),c
  8120  001B1A  502F               	movf	___fladd@b+2,w,c
  8121  001B1C  5833               	subwfb	___fladd@a+2,w,c
  8122  001B1E  6E37               	movwf	(??___fladd+2)& (0+255),c
  8123  001B20  5030               	movf	___fladd@b+3,w,c
  8124  001B22  5834               	subwfb	___fladd@a+3,w,c
  8125  001B24  6E38               	movwf	(??___fladd+3)& (0+255),c
  8126  001B26  0EFF               	movlw	255
  8127  001B28  2435               	addwf	??___fladd,w,c
  8128  001B2A  6E2D               	movwf	___fladd@b,c
  8129  001B2C  0EFF               	movlw	255
  8130  001B2E  2036               	addwfc	??___fladd+1,w,c
  8131  001B30  6E2E               	movwf	___fladd@b+1,c
  8132  001B32  0EFF               	movlw	255
  8133  001B34  2037               	addwfc	??___fladd+2,w,c
  8134  001B36  6E2F               	movwf	___fladd@b+2,c
  8135  001B38  0EFF               	movlw	255
  8136  001B3A  2038               	addwfc	??___fladd+3,w,c
  8137  001B3C  6E30               	movwf	___fladd@b+3,c
  8138  001B3E  0E80               	movlw	128
  8139  001B40  1A39               	xorwf	___fladd@signs,f,c
  8140  001B42  6C3C               	negf	___fladd@grs,c
  8141  001B44  503C               	movf	___fladd@grs,w,c
  8142  001B46  A4D8               	btfss	status,2,c
  8143  001B48  D00F               	goto	l1279
  8144  001B4A  0E01               	movlw	1
  8145  001B4C  262D               	addwf	___fladd@b,f,c
  8146  001B4E  0E00               	movlw	0
  8147  001B50  222E               	addwfc	___fladd@b+1,f,c
  8148  001B52  222F               	addwfc	___fladd@b+2,f,c
  8149  001B54  2230               	addwfc	___fladd@b+3,f,c
  8150  001B56  D008               	goto	l1279
  8151  001B58                     l5370:
  8152  001B58  5031               	movf	___fladd@a,w,c
  8153  001B5A  5E2D               	subwf	___fladd@b,f,c
  8154  001B5C  5032               	movf	___fladd@a+1,w,c
  8155  001B5E  5A2E               	subwfb	___fladd@b+1,f,c
  8156  001B60  5033               	movf	___fladd@a+2,w,c
  8157  001B62  5A2F               	subwfb	___fladd@b+2,f,c
  8158  001B64  5034               	movf	___fladd@a+3,w,c
  8159  001B66  5A30               	subwfb	___fladd@b+3,f,c
  8160  001B68                     l1279:
  8161  001B68  502D               	movf	___fladd@b,w,c
  8162  001B6A  102E               	iorwf	___fladd@b+1,w,c
  8163  001B6C  102F               	iorwf	___fladd@b+2,w,c
  8164  001B6E  1030               	iorwf	___fladd@b+3,w,c
  8165  001B70  A4D8               	btfss	status,2,c
  8166  001B72  D01C               	goto	l5394
  8167  001B74  503C               	movf	___fladd@grs,w,c
  8168  001B76  A4D8               	btfss	status,2,c
  8169  001B78  D019               	goto	l5394
  8170  001B7A  0E00               	movlw	0
  8171  001B7C  6E2D               	movwf	?___fladd,c
  8172  001B7E  0E00               	movlw	0
  8173  001B80  6E2E               	movwf	?___fladd+1,c
  8174  001B82  0E00               	movlw	0
  8175  001B84  6E2F               	movwf	?___fladd+2,c
  8176  001B86  0E00               	movlw	0
  8177  001B88  6E30               	movwf	?___fladd+3,c
  8178  001B8A  0012               	return	
  8179  001B8C                     l5378:
  8180  001B8C  90D8               	bcf	status,0,c
  8181  001B8E  362D               	rlcf	___fladd@b,f,c
  8182  001B90  362E               	rlcf	___fladd@b+1,f,c
  8183  001B92  362F               	rlcf	___fladd@b+2,f,c
  8184  001B94  3630               	rlcf	___fladd@b+3,f,c
  8185  001B96  BE3C               	btfsc	___fladd@grs,7,c
  8186  001B98  802D               	bsf	___fladd@b,0,c
  8187  001B9A  A03C               	btfss	___fladd@grs,0,c
  8188  001B9C  D002               	goto	l5388
  8189  001B9E  80D8               	bsf	status,0,c
  8190  001BA0  D001               	goto	L16
  8191  001BA2                     l5388:
  8192  001BA2  90D8               	bcf	status,0,c
  8193  001BA4                     L16:
  8194  001BA4  363C               	rlcf	___fladd@grs,f,c
  8195  001BA6  503B               	movf	___fladd@bexp,w,c
  8196  001BA8  A4D8               	btfss	status,2,c
  8197  001BAA  063B               	decf	___fladd@bexp,f,c
  8198  001BAC                     l5394:
  8199  001BAC  AE2F               	btfss	___fladd@b+2,7,c
  8200  001BAE  D7EE               	goto	l5378
  8201  001BB0                     u5810:
  8202  001BB0  0E00               	movlw	0
  8203  001BB2  6E3A               	movwf	___fladd@aexp,c
  8204  001BB4  AE3C               	btfss	___fladd@grs,7,c
  8205  001BB6  D00B               	goto	l1288
  8206  001BB8  C03C  F035         	movff	___fladd@grs,??___fladd
  8207  001BBC  0E7F               	movlw	127
  8208  001BBE  1635               	andwf	??___fladd,f,c
  8209  001BC0  B4D8               	btfsc	status,2,c
  8210  001BC2  D003               	goto	l1289
  8211  001BC4                     u5830:
  8212  001BC4  0E01               	movlw	1
  8213  001BC6  6E3A               	movwf	___fladd@aexp,c
  8214  001BC8  D002               	goto	l1288
  8215  001BCA                     l1289:
  8216  001BCA  B02D               	btfsc	___fladd@b,0,c
  8217  001BCC  D7FB               	goto	u5830
  8218  001BCE                     l1288:
  8219  001BCE  503A               	movf	___fladd@aexp,w,c
  8220  001BD0  B4D8               	btfsc	status,2,c
  8221  001BD2  D020               	goto	l5414
  8222  001BD4  0E01               	movlw	1
  8223  001BD6  262D               	addwf	___fladd@b,f,c
  8224  001BD8  0E00               	movlw	0
  8225  001BDA  222E               	addwfc	___fladd@b+1,f,c
  8226  001BDC  222F               	addwfc	___fladd@b+2,f,c
  8227  001BDE  2230               	addwfc	___fladd@b+3,f,c
  8228  001BE0  A030               	btfss	___fladd@b+3,0,c
  8229  001BE2  D018               	goto	l5414
  8230  001BE4  C02D  F035         	movff	___fladd@b,??___fladd
  8231  001BE8  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  8232  001BEC  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  8233  001BF0  C030  F038         	movff	___fladd@b+3,??___fladd+3
  8234  001BF4  3438               	rlcf	??___fladd+3,w,c
  8235  001BF6  3238               	rrcf	??___fladd+3,f,c
  8236  001BF8  3237               	rrcf	??___fladd+2,f,c
  8237  001BFA  3236               	rrcf	??___fladd+1,f,c
  8238  001BFC  3235               	rrcf	??___fladd,f,c
  8239  001BFE  C035  F02D         	movff	??___fladd,___fladd@b
  8240  001C02  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  8241  001C06  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  8242  001C0A  C038  F030         	movff	??___fladd+3,___fladd@b+3
  8243  001C0E  283B               	incf	___fladd@bexp,w,c
  8244  001C10  A4D8               	btfss	status,2,c
  8245  001C12  2A3B               	incf	___fladd@bexp,f,c
  8246  001C14                     l5414:
  8247  001C14  283B               	incf	___fladd@bexp,w,c
  8248  001C16  B4D8               	btfsc	status,2,c
  8249  001C18  D003               	goto	u5890
  8250  001C1A  503B               	movf	___fladd@bexp,w,c
  8251  001C1C  A4D8               	btfss	status,2,c
  8252  001C1E  D00D               	goto	l5422
  8253  001C20                     u5890:
  8254  001C20  0E00               	movlw	0
  8255  001C22  6E2D               	movwf	___fladd@b,c
  8256  001C24  0E00               	movlw	0
  8257  001C26  6E2E               	movwf	___fladd@b+1,c
  8258  001C28  0E00               	movlw	0
  8259  001C2A  6E2F               	movwf	___fladd@b+2,c
  8260  001C2C  0E00               	movlw	0
  8261  001C2E  6E30               	movwf	___fladd@b+3,c
  8262  001C30  503B               	movf	___fladd@bexp,w,c
  8263  001C32  A4D8               	btfss	status,2,c
  8264  001C34  D002               	goto	l5422
  8265  001C36  0E00               	movlw	0
  8266  001C38  6E39               	movwf	___fladd@signs,c
  8267  001C3A                     l5422:
  8268  001C3A  A03B               	btfss	___fladd@bexp,0,c
  8269  001C3C  D002               	goto	l5426
  8270  001C3E  8E2F               	bsf	___fladd@b+2,7,c
  8271  001C40  D001               	goto	l5428
  8272  001C42                     l5426:
  8273  001C42  9E2F               	bcf	___fladd@b+2,7,c
  8274  001C44                     l5428:
  8275  001C44  90D8               	bcf	status,0,c
  8276  001C46  303B               	rrcf	___fladd@bexp,w,c
  8277  001C48  6E30               	movwf	___fladd@b+3,c
  8278  001C4A  BE39               	btfsc	___fladd@signs,7,c
  8279  001C4C  8E30               	bsf	___fladd@b+3,7,c
  8280  001C4E  C02D  F02D         	movff	___fladd@b,?___fladd
  8281  001C52  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  8282  001C56  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  8283  001C5A  C030  F030         	movff	___fladd@b+3,?___fladd+3
  8284  001C5E  0012               	return		;funcret
  8285  001C60                     __end_of___fladd:
  8286                           	opt callstack 0
  8287                           
  8288 ;; *************** function _init_motor_PWM *****************
  8289 ;; Defined at:
  8290 ;;		line 267 in file "main.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    2
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_doOperation
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text31
  8319  003FD0                     __ptext31:
  8320                           	opt callstack 0
  8321  003FD0                     _init_motor_PWM:
  8322                           	opt callstack 27
  8323                           
  8324                           ;main.c: 275:     TRISCbits.TRISC2 = 1;
  8325                           
  8326                           ;incstack = 0
  8327  003FD0  8494               	bsf	3988,2,c	;volatile
  8328                           
  8329                           ;main.c: 276:     TRISCbits.TRISC1 = 1;
  8330  003FD2  8294               	bsf	3988,1,c	;volatile
  8331                           
  8332                           ;main.c: 279:     const unsigned long FREQUENCY = 1000ul;;main.c: 280:     const unsigne
      +                          d char TIMER2_PRESCALER = 16;;main.c: 281:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2
      +                          _PRESCALER)) - 1;
  8333  003FD4  0E9B               	movlw	155
  8334  003FD6  6ECB               	movwf	4043,c	;volatile
  8335                           
  8336                           ;main.c: 284:     P1M1 = 0;
  8337  003FD8  9EBD               	bcf	4029,7,c	;volatile
  8338                           
  8339                           ;main.c: 285:     P1M0 = 0;
  8340  003FDA  9CBD               	bcf	4029,6,c	;volatile
  8341                           
  8342                           ;main.c: 286:     CCP1M3 = 1;
  8343  003FDC  86BD               	bsf	4029,3,c	;volatile
  8344                           
  8345                           ;main.c: 287:     CCP1M2 = 1;
  8346  003FDE  84BD               	bsf	4029,2,c	;volatile
  8347                           
  8348                           ;main.c: 288:     CCP1M1 = 0;
  8349  003FE0  92BD               	bcf	4029,1,c	;volatile
  8350                           
  8351                           ;main.c: 289:     CCP1M0 = 0;
  8352  003FE2  90BD               	bcf	4029,0,c	;volatile
  8353                           
  8354                           ;main.c: 291:     CCP2M3 = 1;
  8355  003FE4  86BA               	bsf	4026,3,c	;volatile
  8356                           
  8357                           ;main.c: 292:     CCP2M2 = 1;
  8358  003FE6  84BA               	bsf	4026,2,c	;volatile
  8359                           
  8360                           ;main.c: 293:     CCP2M1 = 0;
  8361  003FE8  92BA               	bcf	4026,1,c	;volatile
  8362                           
  8363                           ;main.c: 294:     CCP2M0 = 0;
  8364  003FEA  90BA               	bcf	4026,0,c	;volatile
  8365                           
  8366                           ;main.c: 297:     T2CKPS0 = 1;
  8367  003FEC  80CA               	bsf	4042,0,c	;volatile
  8368                           
  8369                           ;main.c: 298:     T2CKPS1 = 1;
  8370  003FEE  82CA               	bsf	4042,1,c	;volatile
  8371                           
  8372                           ;main.c: 301:     TMR2ON = 1;
  8373  003FF0  84CA               	bsf	4042,2,c	;volatile
  8374                           
  8375                           ;main.c: 304:     TRISCbits.TRISC2 = 0;
  8376  003FF2  9494               	bcf	3988,2,c	;volatile
  8377                           
  8378                           ;main.c: 305:     TRISCbits.TRISC1 = 0;
  8379  003FF4  9294               	bcf	3988,1,c	;volatile
  8380  003FF6  0012               	return		;funcret
  8381  003FF8                     __end_of_init_motor_PWM:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function ___awmod *****************
  8385 ;; Defined at:
  8386 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  dividend        2    5[COMRAM] int 
  8389 ;;  divisor         2    7[COMRAM] int 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  sign            1   10[COMRAM] unsigned char 
  8392 ;;  counter         1    9[COMRAM] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  2    5[COMRAM] int 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;Total ram usage:        6 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    2
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_doOperation
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text32
  8417  0038AA                     __ptext32:
  8418                           	opt callstack 0
  8419  0038AA                     ___awmod:
  8420                           	opt callstack 27
  8421                           
  8422                           ;incstack = 0
  8423  0038AA  0E00               	movlw	0
  8424  0038AC  6E0B               	movwf	___awmod@sign,c
  8425  0038AE  AE07               	btfss	___awmod@dividend+1,7,c
  8426  0038B0  D006               	goto	l5964
  8427  0038B2  6C06               	negf	___awmod@dividend,c
  8428  0038B4  1E07               	comf	___awmod@dividend+1,f,c
  8429  0038B6  B0D8               	btfsc	status,0,c
  8430  0038B8  2A07               	incf	___awmod@dividend+1,f,c
  8431  0038BA  0E01               	movlw	1
  8432  0038BC  6E0B               	movwf	___awmod@sign,c
  8433  0038BE                     l5964:
  8434  0038BE  AE09               	btfss	___awmod@divisor+1,7,c
  8435  0038C0  D004               	goto	l5968
  8436  0038C2  6C08               	negf	___awmod@divisor,c
  8437  0038C4  1E09               	comf	___awmod@divisor+1,f,c
  8438  0038C6  B0D8               	btfsc	status,0,c
  8439  0038C8  2A09               	incf	___awmod@divisor+1,f,c
  8440  0038CA                     l5968:
  8441  0038CA  5008               	movf	___awmod@divisor,w,c
  8442  0038CC  1009               	iorwf	___awmod@divisor+1,w,c
  8443  0038CE  B4D8               	btfsc	status,2,c
  8444  0038D0  D018               	goto	l5984
  8445  0038D2  0E01               	movlw	1
  8446  0038D4  6E0A               	movwf	___awmod@counter,c
  8447  0038D6  D004               	goto	l5974
  8448  0038D8                     l5972:
  8449  0038D8  90D8               	bcf	status,0,c
  8450  0038DA  3608               	rlcf	___awmod@divisor,f,c
  8451  0038DC  3609               	rlcf	___awmod@divisor+1,f,c
  8452  0038DE  2A0A               	incf	___awmod@counter,f,c
  8453  0038E0                     l5974:
  8454  0038E0  AE09               	btfss	___awmod@divisor+1,7,c
  8455  0038E2  D7FA               	goto	l5972
  8456  0038E4                     u6540:
  8457  0038E4  5008               	movf	___awmod@divisor,w,c
  8458  0038E6  5C06               	subwf	___awmod@dividend,w,c
  8459  0038E8  5009               	movf	___awmod@divisor+1,w,c
  8460  0038EA  5807               	subwfb	___awmod@dividend+1,w,c
  8461  0038EC  A0D8               	btfss	status,0,c
  8462  0038EE  D004               	goto	l5980
  8463  0038F0  5008               	movf	___awmod@divisor,w,c
  8464  0038F2  5E06               	subwf	___awmod@dividend,f,c
  8465  0038F4  5009               	movf	___awmod@divisor+1,w,c
  8466  0038F6  5A07               	subwfb	___awmod@dividend+1,f,c
  8467  0038F8                     l5980:
  8468  0038F8  90D8               	bcf	status,0,c
  8469  0038FA  3209               	rrcf	___awmod@divisor+1,f,c
  8470  0038FC  3208               	rrcf	___awmod@divisor,f,c
  8471  0038FE  2E0A               	decfsz	___awmod@counter,f,c
  8472  003900  D7F1               	goto	u6540
  8473  003902                     l5984:
  8474  003902  500B               	movf	___awmod@sign,w,c
  8475  003904  B4D8               	btfsc	status,2,c
  8476  003906  D004               	goto	l5988
  8477  003908  6C06               	negf	___awmod@dividend,c
  8478  00390A  1E07               	comf	___awmod@dividend+1,f,c
  8479  00390C  B0D8               	btfsc	status,0,c
  8480  00390E  2A07               	incf	___awmod@dividend+1,f,c
  8481  003910                     l5988:
  8482  003910  C006  F006         	movff	___awmod@dividend,?___awmod
  8483  003914  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  8484  003918  0012               	return		;funcret
  8485  00391A                     __end_of___awmod:
  8486                           	opt callstack 0
  8487                           
  8488 ;; *************** function _TIMER_INIT *****************
  8489 ;; Defined at:
  8490 ;;		line 220 in file "main.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;		None
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;Total ram usage:        0 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    2
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_doOperation
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text33
  8519  0040F2                     __ptext33:
  8520                           	opt callstack 0
  8521  0040F2                     _TIMER_INIT:
  8522                           	opt callstack 27
  8523                           
  8524                           ;main.c: 221:     T0CONbits.TMR0ON = 0;
  8525                           
  8526                           ;incstack = 0
  8527  0040F2  9ED5               	bcf	4053,7,c	;volatile
  8528                           
  8529                           ;main.c: 222:     T0CONbits.T08BIT = 0;
  8530  0040F4  9CD5               	bcf	4053,6,c	;volatile
  8531                           
  8532                           ;main.c: 223:     T0CONbits.T0CS = 0;
  8533  0040F6  9AD5               	bcf	4053,5,c	;volatile
  8534                           
  8535                           ;main.c: 224:     T0CONbits.PSA = 0;
  8536  0040F8  96D5               	bcf	4053,3,c	;volatile
  8537                           
  8538                           ;main.c: 225:     T0CONbits.T0PS = 0b000;
  8539  0040FA  0EF8               	movlw	-8
  8540  0040FC  16D5               	andwf	4053,f,c	;volatile
  8541                           
  8542                           ;main.c: 226:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  8543  0040FE  0EFB               	movlw	251
  8544  004100  6ED7               	movwf	4055,c	;volatile
  8545                           
  8546                           ;main.c: 227:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  8547  004102  0E1E               	movlw	30
  8548  004104  6ED6               	movwf	4054,c	;volatile
  8549                           
  8550                           ;main.c: 228:     T0CONbits.TMR0ON = 1;
  8551  004106  8ED5               	bsf	4053,7,c	;volatile
  8552                           
  8553                           ;main.c: 229:     INTCONbits.TMR0IE = 1;
  8554  004108  8AF2               	bsf	4082,5,c	;volatile
  8555                           
  8556                           ;main.c: 231:     INTCONbits.GIE = 1;
  8557  00410A  8EF2               	bsf	4082,7,c	;volatile
  8558                           
  8559                           ;main.c: 232:     INTCONbits.PEIE = 1;
  8560  00410C  8CF2               	bsf	4082,6,c	;volatile
  8561  00410E  0012               	return		;funcret
  8562  004110                     __end_of_TIMER_INIT:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _doDisplayLog *****************
  8566 ;; Defined at:
  8567 ;;		line 45 in file "main.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  logNumber       2   39[BANK0 ] int 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  keyValue        1  107[COMRAM] unsigned char 
  8572 ;;  keypress        1  105[COMRAM] unsigned char 
  8573 ;;  currentPole     2  108[COMRAM] int 
  8574 ;;  currentDispl    1  106[COMRAM] enum E3250
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Totals:        11       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;Total ram usage:       13 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:   13
  8591 ;; This function calls:
  8592 ;;		___wmul
  8593 ;;		_lcdInst
  8594 ;;		_printf
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text34
  8601  001266                     __ptext34:
  8602                           	opt callstack 0
  8603  001266                     _doDisplayLog:
  8604                           	opt callstack 17
  8605                           
  8606                           ;main.c: 46:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  8607                           
  8608                           ;incstack = 0
  8609  001266  0E80               	movlw	128
  8610  001268  ECB7  F020         	call	_lcdInst
  8611  00126C  0E07               	movlw	7
  8612  00126E  6E66               	movwf	??_doDisplayLog& (0+255),c
  8613  001270  0E7D               	movlw	125
  8614  001272                     u10467:
  8615  001272  2EE8               	decfsz	wreg,f,c
  8616  001274  D7FE               	bra	u10467
  8617  001276  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  8618  001278  D7FC               	bra	u10467
  8619  00127A  F000               	nop	
  8620                           
  8621                           ;main.c: 51:     int currentPole = 1;
  8622  00127C  0E00               	movlw	0
  8623  00127E  6E6E               	movwf	doDisplayLog@currentPole+1,c
  8624  001280  0E01               	movlw	1
  8625  001282  6E6D               	movwf	doDisplayLog@currentPole,c
  8626                           
  8627                           ;main.c: 53:     enum displayStates currentDisplayState = opTime;
  8628  001284  0E00               	movlw	0
  8629  001286  6E6B               	movwf	doDisplayLog@currentDisplayState,c
  8630  001288  D132               	goto	l8386
  8631  00128A                     l8338:
  8632                           
  8633                           ;main.c: 58:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8634  00128A  0E80               	movlw	128
  8635  00128C  ECB7  F020         	call	_lcdInst
  8636  001290  0E07               	movlw	7
  8637  001292  6E66               	movwf	??_doDisplayLog& (0+255),c
  8638  001294  0E7D               	movlw	125
  8639  001296                     u10477:
  8640  001296  2EE8               	decfsz	wreg,f,c
  8641  001298  D7FE               	bra	u10477
  8642  00129A  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  8643  00129C  D7FC               	bra	u10477
  8644  00129E  F000               	nop	
  8645                           
  8646                           ;main.c: 59:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8647  0012A0  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8648  0012A4  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8649  0012A8  0E00               	movlw	0
  8650  0012AA  6E09               	movwf	___wmul@multiplicand+1,c
  8651  0012AC  0E60               	movlw	96
  8652  0012AE  6E08               	movwf	___wmul@multiplicand,c
  8653  0012B0  EC10  F020         	call	___wmul	;wreg free
  8654  0012B4  0E81               	movlw	low _logs
  8655  0012B6  2406               	addwf	?___wmul,w,c
  8656  0012B8  6ED9               	movwf	fsr2l,c
  8657  0012BA  0E01               	movlw	high _logs
  8658  0012BC  2007               	addwfc	?___wmul+1,w,c
  8659  0012BE  6EDA               	movwf	fsr2h,c
  8660  0012C0  CFDE F06F          	movff	postinc2,_doDisplayLog$2301
  8661  0012C4  CFDD F070          	movff	postdec2,_doDisplayLog$2301+1
  8662                           
  8663                           ;main.c: 59:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8664  0012C8  0ED4               	movlw	low STR_1
  8665  0012CA  0100               	movlb	0	; () banked
  8666  0012CC  6F9D               	movwf	printf@fmt& (0+255),b
  8667  0012CE  0EFF               	movlw	high STR_1
  8668  0012D0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8669  0012D2  0E7F               	movlw	low STR_2
  8670  0012D4  6F9F               	movwf	(?_printf+2)& (0+255),b
  8671  0012D6  0EFF               	movlw	high STR_2
  8672  0012D8  6FA0               	movwf	(?_printf+3)& (0+255),b
  8673  0012DA  C06F  F0A1         	movff	_doDisplayLog$2301,?_printf+4
  8674  0012DE  C070  F0A2         	movff	_doDisplayLog$2301+1,?_printf+5
  8675  0012E2  0ED9               	movlw	low (STR_1+5)
  8676  0012E4  6FA3               	movwf	(?_printf+6)& (0+255),b
  8677  0012E6  0EFF               	movlw	high (STR_1+5)
  8678  0012E8  6FA4               	movwf	(?_printf+7)& (0+255),b
  8679  0012EA  ECFC  F01F         	call	_printf	;wreg free
  8680  0012EE  0EC0               	movlw	192
  8681  0012F0  ECB7  F020         	call	_lcdInst
  8682                           
  8683                           ;main.c: 61:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8684  0012F4  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8685  0012F8  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8686  0012FC  0E00               	movlw	0
  8687  0012FE  6E09               	movwf	___wmul@multiplicand+1,c
  8688  001300  0E60               	movlw	96
  8689  001302  6E08               	movwf	___wmul@multiplicand,c
  8690  001304  EC10  F020         	call	___wmul	;wreg free
  8691  001308  0E83               	movlw	low (_logs+2)
  8692  00130A  2406               	addwf	?___wmul,w,c
  8693  00130C  6ED9               	movwf	fsr2l,c
  8694  00130E  0E01               	movlw	high (_logs+2)
  8695  001310  2007               	addwfc	?___wmul+1,w,c
  8696  001312  6EDA               	movwf	fsr2h,c
  8697  001314  CFDE F06F          	movff	postinc2,_doDisplayLog$2301
  8698  001318  CFDD F070          	movff	postdec2,_doDisplayLog$2301+1
  8699                           
  8700                           ;main.c: 61:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8701  00131C  0ECF               	movlw	low (STR_10+4)
  8702  00131E  0100               	movlb	0	; () banked
  8703  001320  6F9D               	movwf	printf@fmt& (0+255),b
  8704  001322  0EFF               	movlw	high (STR_10+4)
  8705  001324  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8706  001326  0EC2               	movlw	low STR_5
  8707  001328  6F9F               	movwf	(?_printf+2)& (0+255),b
  8708  00132A  0EFE               	movlw	high STR_5
  8709  00132C  6FA0               	movwf	(?_printf+3)& (0+255),b
  8710  00132E  C06F  F0A1         	movff	_doDisplayLog$2301,?_printf+4
  8711  001332  C070  F0A2         	movff	_doDisplayLog$2301+1,?_printf+5
  8712  001336  ECFC  F01F         	call	_printf	;wreg free
  8713  00133A  0E90               	movlw	144
  8714  00133C  ECB7  F020         	call	_lcdInst
  8715                           
  8716                           ;main.c: 63:                 printf("%s","(1) POLE INFO");
  8717  001340  0ED8               	movlw	low (STR_1+4)
  8718  001342  0100               	movlb	0	; () banked
  8719  001344  6F9D               	movwf	printf@fmt& (0+255),b
  8720  001346  0EFF               	movlw	high (STR_1+4)
  8721  001348  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8722  00134A  0E0B               	movlw	low STR_7
  8723  00134C  6F9F               	movwf	(?_printf+2)& (0+255),b
  8724  00134E  0EFF               	movlw	high STR_7
  8725  001350  6FA0               	movwf	(?_printf+3)& (0+255),b
  8726  001352  ECFC  F01F         	call	_printf	;wreg free
  8727  001356  0ED0               	movlw	208
  8728  001358  ECB7  F020         	call	_lcdInst
  8729                           
  8730                           ;main.c: 65:                 printf("%s","(2) SAVE & EXIT");
  8731  00135C  0ED8               	movlw	low (STR_1+4)
  8732  00135E  0100               	movlb	0	; () banked
  8733  001360  6F9D               	movwf	printf@fmt& (0+255),b
  8734  001362  0EFF               	movlw	high (STR_1+4)
  8735  001364  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8736  001366  0EA2               	movlw	low STR_9
  8737  001368  6F9F               	movwf	(?_printf+2)& (0+255),b
  8738  00136A  0EFE               	movlw	high STR_9
  8739  00136C  6FA0               	movwf	(?_printf+3)& (0+255),b
  8740  00136E  ECFC  F01F         	call	_printf	;wreg free
  8741                           
  8742                           ;main.c: 66:                 break;
  8743  001372  D0CB               	goto	l8388
  8744  001374                     l8360:
  8745                           
  8746                           ;main.c: 68:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8747  001374  0E80               	movlw	128
  8748  001376  ECB7  F020         	call	_lcdInst
  8749  00137A  0E07               	movlw	7
  8750  00137C  6E66               	movwf	??_doDisplayLog& (0+255),c
  8751  00137E  0E7D               	movlw	125
  8752  001380                     u10487:
  8753  001380  2EE8               	decfsz	wreg,f,c
  8754  001382  D7FE               	bra	u10487
  8755  001384  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  8756  001386  D7FC               	bra	u10487
  8757  001388  F000               	nop	
  8758                           
  8759                           ;main.c: 69:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8760  00138A  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8761  00138E  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8762  001392  0E00               	movlw	0
  8763  001394  6E09               	movwf	___wmul@multiplicand+1,c
  8764  001396  0E60               	movlw	96
  8765  001398  6E08               	movwf	___wmul@multiplicand,c
  8766  00139A  EC10  F020         	call	___wmul	;wreg free
  8767  00139E  0E85               	movlw	low (_logs+4)
  8768  0013A0  2406               	addwf	?___wmul,w,c
  8769  0013A2  6ED9               	movwf	fsr2l,c
  8770  0013A4  0E01               	movlw	high (_logs+4)
  8771  0013A6  2007               	addwfc	?___wmul+1,w,c
  8772  0013A8  6EDA               	movwf	fsr2h,c
  8773  0013AA  CFDE F06F          	movff	postinc2,_doDisplayLog$2301
  8774  0013AE  CFDD F070          	movff	postdec2,_doDisplayLog$2301+1
  8775                           
  8776                           ;main.c: 69:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8777  0013B2  0ECB               	movlw	low STR_10
  8778  0013B4  0100               	movlb	0	; () banked
  8779  0013B6  6F9D               	movwf	printf@fmt& (0+255),b
  8780  0013B8  0EFF               	movlw	high STR_10
  8781  0013BA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8782  0013BC  0EDB               	movlw	low STR_11
  8783  0013BE  6F9F               	movwf	(?_printf+2)& (0+255),b
  8784  0013C0  0EFF               	movlw	high STR_11
  8785  0013C2  6FA0               	movwf	(?_printf+3)& (0+255),b
  8786  0013C4  C06D  F0A1         	movff	doDisplayLog@currentPole,?_printf+4
  8787  0013C8  C06E  F0A2         	movff	doDisplayLog@currentPole+1,?_printf+5
  8788  0013CC  0EFD               	movlw	low STR_12
  8789  0013CE  6FA3               	movwf	(?_printf+6)& (0+255),b
  8790  0013D0  0EFF               	movlw	high STR_12
  8791  0013D2  6FA4               	movwf	(?_printf+7)& (0+255),b
  8792  0013D4  C06F  F0A5         	movff	_doDisplayLog$2301,?_printf+8
  8793  0013D8  C070  F0A6         	movff	_doDisplayLog$2301+1,?_printf+9
  8794  0013DC  ECFC  F01F         	call	_printf	;wreg free
  8795  0013E0  0EC0               	movlw	192
  8796  0013E2  ECB7  F020         	call	_lcdInst
  8797                           
  8798                           ;main.c: 71:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8799  0013E6  C06D  F066         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8800  0013EA  C06E  F067         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8801  0013EE  90D8               	bcf	status,0,c
  8802  0013F0  3666               	rlcf	??_doDisplayLog,f,c
  8803  0013F2  3667               	rlcf	??_doDisplayLog+1,f,c
  8804  0013F4  90D8               	bcf	status,0,c
  8805  0013F6  3666               	rlcf	??_doDisplayLog,f,c
  8806  0013F8  3667               	rlcf	??_doDisplayLog+1,f,c
  8807  0013FA  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8808  0013FE  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8809  001402  0E00               	movlw	0
  8810  001404  6E09               	movwf	___wmul@multiplicand+1,c
  8811  001406  0E60               	movlw	96
  8812  001408  6E08               	movwf	___wmul@multiplicand,c
  8813  00140A  EC10  F020         	call	___wmul	;wreg free
  8814  00140E  0E81               	movlw	low _logs
  8815  001410  6E68               	movwf	(??_doDisplayLog+2)& (0+255),c
  8816  001412  0E01               	movlw	high _logs
  8817  001414  6E69               	movwf	(??_doDisplayLog+3)& (0+255),c
  8818  001416  0E02               	movlw	2
  8819  001418  2668               	addwf	??_doDisplayLog+2,f,c
  8820  00141A  0E00               	movlw	0
  8821  00141C  2269               	addwfc	??_doDisplayLog+3,f,c
  8822  00141E  5006               	movf	?___wmul,w,c
  8823  001420  2668               	addwf	??_doDisplayLog+2,f,c
  8824  001422  5007               	movf	?___wmul+1,w,c
  8825  001424  2269               	addwfc	??_doDisplayLog+3,f,c
  8826  001426  5066               	movf	??_doDisplayLog,w,c
  8827  001428  2468               	addwf	??_doDisplayLog+2,w,c
  8828  00142A  6ED9               	movwf	fsr2l,c
  8829  00142C  5067               	movf	??_doDisplayLog+1,w,c
  8830  00142E  2069               	addwfc	??_doDisplayLog+3,w,c
  8831  001430  6EDA               	movwf	fsr2h,c
  8832  001432  CFDE F06F          	movff	postinc2,_doDisplayLog$2301
  8833  001436  CFDD F070          	movff	postdec2,_doDisplayLog$2301+1
  8834                           
  8835                           ;main.c: 71:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8836  00143A  0ECF               	movlw	low (STR_10+4)
  8837  00143C  0100               	movlb	0	; () banked
  8838  00143E  6F9D               	movwf	printf@fmt& (0+255),b
  8839  001440  0EFF               	movlw	high (STR_10+4)
  8840  001442  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8841  001444  0EEF               	movlw	low STR_14
  8842  001446  6F9F               	movwf	(?_printf+2)& (0+255),b
  8843  001448  0EFE               	movlw	high STR_14
  8844  00144A  6FA0               	movwf	(?_printf+3)& (0+255),b
  8845  00144C  C06F  F0A1         	movff	_doDisplayLog$2301,?_printf+4
  8846  001450  C070  F0A2         	movff	_doDisplayLog$2301+1,?_printf+5
  8847  001454  ECFC  F01F         	call	_printf	;wreg free
  8848  001458  0E90               	movlw	144
  8849  00145A  ECB7  F020         	call	_lcdInst
  8850                           
  8851                           ;main.c: 73:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8852  00145E  C06D  F066         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8853  001462  C06E  F067         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8854  001466  90D8               	bcf	status,0,c
  8855  001468  3666               	rlcf	??_doDisplayLog,f,c
  8856  00146A  3667               	rlcf	??_doDisplayLog+1,f,c
  8857  00146C  90D8               	bcf	status,0,c
  8858  00146E  3666               	rlcf	??_doDisplayLog,f,c
  8859  001470  3667               	rlcf	??_doDisplayLog+1,f,c
  8860  001472  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8861  001476  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8862  00147A  0E00               	movlw	0
  8863  00147C  6E09               	movwf	___wmul@multiplicand+1,c
  8864  00147E  0E60               	movlw	96
  8865  001480  6E08               	movwf	___wmul@multiplicand,c
  8866  001482  EC10  F020         	call	___wmul	;wreg free
  8867  001486  0E81               	movlw	low _logs
  8868  001488  6E68               	movwf	(??_doDisplayLog+2)& (0+255),c
  8869  00148A  0E01               	movlw	high _logs
  8870  00148C  6E69               	movwf	(??_doDisplayLog+3)& (0+255),c
  8871  00148E  0E04               	movlw	4
  8872  001490  2668               	addwf	??_doDisplayLog+2,f,c
  8873  001492  0E00               	movlw	0
  8874  001494  2269               	addwfc	??_doDisplayLog+3,f,c
  8875  001496  5006               	movf	?___wmul,w,c
  8876  001498  2668               	addwf	??_doDisplayLog+2,f,c
  8877  00149A  5007               	movf	?___wmul+1,w,c
  8878  00149C  2269               	addwfc	??_doDisplayLog+3,f,c
  8879  00149E  5066               	movf	??_doDisplayLog,w,c
  8880  0014A0  2468               	addwf	??_doDisplayLog+2,w,c
  8881  0014A2  6ED9               	movwf	fsr2l,c
  8882  0014A4  5067               	movf	??_doDisplayLog+1,w,c
  8883  0014A6  2069               	addwfc	??_doDisplayLog+3,w,c
  8884  0014A8  6EDA               	movwf	fsr2h,c
  8885  0014AA  CFDE F06F          	movff	postinc2,_doDisplayLog$2301
  8886  0014AE  CFDD F070          	movff	postdec2,_doDisplayLog$2301+1
  8887                           
  8888                           ;main.c: 73:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8889  0014B2  0ECF               	movlw	low (STR_10+4)
  8890  0014B4  0100               	movlb	0	; () banked
  8891  0014B6  6F9D               	movwf	printf@fmt& (0+255),b
  8892  0014B8  0EFF               	movlw	high (STR_10+4)
  8893  0014BA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8894  0014BC  0E82               	movlw	low STR_16
  8895  0014BE  6F9F               	movwf	(?_printf+2)& (0+255),b
  8896  0014C0  0EFE               	movlw	high STR_16
  8897  0014C2  6FA0               	movwf	(?_printf+3)& (0+255),b
  8898  0014C4  C06F  F0A1         	movff	_doDisplayLog$2301,?_printf+4
  8899  0014C8  C070  F0A2         	movff	_doDisplayLog$2301+1,?_printf+5
  8900  0014CC  ECFC  F01F         	call	_printf	;wreg free
  8901  0014D0  0ED0               	movlw	208
  8902  0014D2  ECB7  F020         	call	_lcdInst
  8903                           
  8904                           ;main.c: 75:                 printf("%s","1<- 2-> 3MENU");
  8905  0014D6  0ED8               	movlw	low (STR_1+4)
  8906  0014D8  0100               	movlb	0	; () banked
  8907  0014DA  6F9D               	movwf	printf@fmt& (0+255),b
  8908  0014DC  0EFF               	movlw	high (STR_1+4)
  8909  0014DE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  8910  0014E0  0E27               	movlw	low STR_18
  8911  0014E2  6F9F               	movwf	(?_printf+2)& (0+255),b
  8912  0014E4  0EFF               	movlw	high STR_18
  8913  0014E6  6FA0               	movwf	(?_printf+3)& (0+255),b
  8914  0014E8  ECFC  F01F         	call	_printf	;wreg free
  8915                           
  8916                           ;main.c: 76:                 break;
  8917  0014EC  D00E               	goto	l8388
  8918  0014EE                     l8386:
  8919  0014EE  506B               	movf	doDisplayLog@currentDisplayState,w,c
  8920  0014F0  6E66               	movwf	??_doDisplayLog& (0+255),c
  8921  0014F2  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
  8922                           
  8923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8924                           ; Switch size 1, requested type "simple"
  8925                           ; Number of cases is 1, Range of values is 0 to 0
  8926                           ; switch strategies available:
  8927                           ; Name         Instructions Cycles
  8928                           ; simple_byte            4     3 (average)
  8929                           ;	Chosen strategy is simple_byte
  8930  0014F4  5067               	movf	??_doDisplayLog+1,w,c
  8931  0014F6  0A00               	xorlw	0	; case 0
  8932  0014F8  A4D8               	btfss	status,2,c
  8933  0014FA  D007               	goto	l8388
  8934                           
  8935                           ; Switch size 1, requested type "simple"
  8936                           ; Number of cases is 2, Range of values is 0 to 1
  8937                           ; switch strategies available:
  8938                           ; Name         Instructions Cycles
  8939                           ; simple_byte            7     4 (average)
  8940                           ;	Chosen strategy is simple_byte
  8941  0014FC  5066               	movf	??_doDisplayLog,w,c
  8942  0014FE  0A00               	xorlw	0	; case 0
  8943  001500  B4D8               	btfsc	status,2,c
  8944  001502  D6C3               	goto	l8338
  8945  001504  0A01               	xorlw	1	; case 1
  8946  001506  B4D8               	btfsc	status,2,c
  8947  001508  D735               	goto	l8360
  8948  00150A                     l8388:
  8949                           
  8950                           ;main.c: 79:         if(keyPressed){
  8951  00150A  0100               	movlb	0	; () banked
  8952  00150C  51EB               	movf	_keyPressed& (0+255),w,b	;volatile
  8953  00150E  B4D8               	btfsc	status,2,c
  8954  001510  D070               	goto	l8428
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;main.c: 82:             keyPressed = 0;
  8958  001512  0E00               	movlw	0
  8959  001514  6FEB               	movwf	_keyPressed& (0+255),b	;volatile
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;main.c: 85:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  8963  001516  3881               	swapf	3969,w,c	;volatile
  8964  001518  0B0F               	andlw	15
  8965  00151A  0B0F               	andlw	15
  8966  00151C  6E6A               	movwf	doDisplayLog@keypress,c
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;main.c: 86:             char keyValue = keys[keypress];
  8970  00151E  0E5F               	movlw	low _keys
  8971  001520  246A               	addwf	doDisplayLog@keypress,w,c
  8972  001522  6EF6               	movwf	tblptrl,c
  8973  001524  6AF7               	clrf	tblptrh,c
  8974  001526  0EFE               	movlw	high _keys
  8975  001528  22F7               	addwfc	tblptrh,f,c
  8976  00152A                     	if	0	;There are less than 3 active tblptr bytes
  8977  00152A                     	endif
  8978  00152A  0008               	tblrd		*
  8979  00152C  CFF5 F06C          	movff	tablat,doDisplayLog@keyValue
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;main.c: 87:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  8983  001530  0E01               	movlw	1
  8984  001532  ECB7  F020         	call	_lcdInst
  8985  001536  0E11               	movlw	17
  8986  001538  6E66               	movwf	??_doDisplayLog& (0+255),c
  8987  00153A  0E3A               	movlw	58
  8988  00153C                     u10497:
  8989  00153C  2EE8               	decfsz	wreg,f,c
  8990  00153E  D7FE               	bra	u10497
  8991  001540  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  8992  001542  D7FC               	bra	u10497
  8993  001544  D000               	nop2	
  8994                           
  8995                           ;main.c: 88:             switch (currentDisplayState){
  8996  001546  D047               	goto	l8426
  8997  001548                     l8400:
  8998                           
  8999                           ;main.c: 90:                     if (keyValue == '1'){
  9000  001548  0E31               	movlw	49
  9001  00154A  186C               	xorwf	doDisplayLog@keyValue,w,c
  9002  00154C  A4D8               	btfss	status,2,c
  9003  00154E  D003               	goto	l8404
  9004                           
  9005                           ;main.c: 91:                         currentDisplayState = pole;
  9006  001550  0E01               	movlw	1
  9007  001552  6E6B               	movwf	doDisplayLog@currentDisplayState,c
  9008                           
  9009                           ;main.c: 92:                     } else if (keyValue == '2'){
  9010  001554  D04E               	goto	l8428
  9011  001556                     l8404:
  9012  001556  0E32               	movlw	50
  9013  001558  186C               	xorwf	doDisplayLog@keyValue,w,c
  9014  00155A  B4D8               	btfsc	status,2,c
  9015  00155C  0012               	return	
  9016  00155E  D049               	goto	l8428
  9017  001560                     l8408:
  9018                           
  9019                           ;main.c: 97:                     if (keyValue == '3'){
  9020  001560  0E33               	movlw	51
  9021  001562  186C               	xorwf	doDisplayLog@keyValue,w,c
  9022  001564  A4D8               	btfss	status,2,c
  9023  001566  D007               	goto	l8412
  9024                           
  9025                           ;main.c: 98:                         currentDisplayState = opTime;
  9026  001568  0E00               	movlw	0
  9027  00156A  6E6B               	movwf	doDisplayLog@currentDisplayState,c
  9028                           
  9029                           ;main.c: 99:                         currentPole = 1;
  9030  00156C  0E00               	movlw	0
  9031  00156E  6E6E               	movwf	doDisplayLog@currentPole+1,c
  9032  001570  0E01               	movlw	1
  9033  001572  6E6D               	movwf	doDisplayLog@currentPole,c
  9034                           
  9035                           ;main.c: 101:                     } else if (keyValue == '2'){
  9036  001574  D03E               	goto	l8428
  9037  001576                     l8412:
  9038  001576  0E32               	movlw	50
  9039  001578  186C               	xorwf	doDisplayLog@keyValue,w,c
  9040  00157A  A4D8               	btfss	status,2,c
  9041  00157C  D01D               	goto	l8418
  9042                           
  9043                           ;main.c: 102:                         if(currentPole < logs[logNumber][2]){
  9044  00157E  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9045  001582  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9046  001586  0E00               	movlw	0
  9047  001588  6E09               	movwf	___wmul@multiplicand+1,c
  9048  00158A  0E60               	movlw	96
  9049  00158C  6E08               	movwf	___wmul@multiplicand,c
  9050  00158E  EC10  F020         	call	___wmul	;wreg free
  9051  001592  0E85               	movlw	low (_logs+4)
  9052  001594  2406               	addwf	?___wmul,w,c
  9053  001596  6ED9               	movwf	fsr2l,c
  9054  001598  0E01               	movlw	high (_logs+4)
  9055  00159A  2007               	addwfc	?___wmul+1,w,c
  9056  00159C  6EDA               	movwf	fsr2h,c
  9057  00159E  50DE               	movf	postinc2,w,c
  9058  0015A0  5C6D               	subwf	doDisplayLog@currentPole,w,c
  9059  0015A2  506E               	movf	doDisplayLog@currentPole+1,w,c
  9060  0015A4  0A80               	xorlw	128
  9061  0015A6  6E68               	movwf	(??_doDisplayLog+2)& (0+255),c
  9062  0015A8  50DE               	movf	postinc2,w,c
  9063  0015AA  0A80               	xorlw	128
  9064  0015AC  5868               	subwfb	(??_doDisplayLog+2)& (0+255),w,c
  9065  0015AE  B0D8               	btfsc	status,0,c
  9066  0015B0  D020               	goto	l8428
  9067                           
  9068                           ;main.c: 103:                             currentPole++;
  9069  0015B2  4A6D               	infsnz	doDisplayLog@currentPole,f,c
  9070  0015B4  2A6E               	incf	doDisplayLog@currentPole+1,f,c
  9071  0015B6  D01D               	goto	l8428
  9072  0015B8                     l8418:
  9073  0015B8  0E31               	movlw	49
  9074  0015BA  186C               	xorwf	doDisplayLog@keyValue,w,c
  9075  0015BC  B4D8               	btfsc	status,2,c
  9076                           
  9077                           ;main.c: 106:                         if (currentPole > 1){
  9078  0015BE  BE6E               	btfsc	doDisplayLog@currentPole+1,7,c
  9079  0015C0  D018               	goto	l8428
  9080  0015C2  506E               	movf	doDisplayLog@currentPole+1,w,c
  9081  0015C4  E104               	bnz	u9810
  9082  0015C6  0E02               	movlw	2
  9083  0015C8  5C6D               	subwf	doDisplayLog@currentPole,w,c
  9084  0015CA  A0D8               	btfss	status,0,c
  9085  0015CC  D012               	goto	l8428
  9086  0015CE                     u9810:
  9087                           
  9088                           ;main.c: 107:                             currentPole--;
  9089  0015CE  066D               	decf	doDisplayLog@currentPole,f,c
  9090  0015D0  A0D8               	btfss	status,0,c
  9091  0015D2  066E               	decf	doDisplayLog@currentPole+1,f,c
  9092  0015D4  D00E               	goto	l8428
  9093  0015D6                     l8426:
  9094  0015D6  506B               	movf	doDisplayLog@currentDisplayState,w,c
  9095  0015D8  6E66               	movwf	??_doDisplayLog& (0+255),c
  9096  0015DA  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
  9097                           
  9098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9099                           ; Switch size 1, requested type "simple"
  9100                           ; Number of cases is 1, Range of values is 0 to 0
  9101                           ; switch strategies available:
  9102                           ; Name         Instructions Cycles
  9103                           ; simple_byte            4     3 (average)
  9104                           ;	Chosen strategy is simple_byte
  9105  0015DC  5067               	movf	??_doDisplayLog+1,w,c
  9106  0015DE  0A00               	xorlw	0	; case 0
  9107  0015E0  A4D8               	btfss	status,2,c
  9108  0015E2  D007               	goto	l8428
  9109                           
  9110                           ; Switch size 1, requested type "simple"
  9111                           ; Number of cases is 2, Range of values is 0 to 1
  9112                           ; switch strategies available:
  9113                           ; Name         Instructions Cycles
  9114                           ; simple_byte            7     4 (average)
  9115                           ;	Chosen strategy is simple_byte
  9116  0015E4  5066               	movf	??_doDisplayLog,w,c
  9117  0015E6  0A00               	xorlw	0	; case 0
  9118  0015E8  B4D8               	btfsc	status,2,c
  9119  0015EA  D7AE               	goto	l8400
  9120  0015EC  0A01               	xorlw	1	; case 1
  9121  0015EE  B4D8               	btfsc	status,2,c
  9122  0015F0  D7B7               	goto	l8408
  9123  0015F2                     l8428:
  9124                           
  9125                           ;main.c: 115:     _delay((unsigned long)((1)*(10000000/4000.0)));
  9126  0015F2  0E04               	movlw	4
  9127  0015F4  6E66               	movwf	??_doDisplayLog& (0+255),c
  9128  0015F6  0E3E               	movlw	62
  9129  0015F8                     u10507:
  9130  0015F8  2EE8               	decfsz	wreg,f,c
  9131  0015FA  D7FE               	bra	u10507
  9132  0015FC  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  9133  0015FE  D7FC               	bra	u10507
  9134  001600  D776               	goto	l8386
  9135  001602                     __end_of_doDisplayLog:
  9136                           	opt callstack 0
  9137                           
  9138 ;; *************** function _printf *****************
  9139 ;; Defined at:
  9140 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  9143 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
  9144 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
  9145 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
  9146 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
  9147 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
  9148 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
  9149 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
  9150 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9151 ;;		 -> STR_4(5), STR_1(7), 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  ap              2   99[COMRAM] PTR void [1]
  9154 ;;		 -> ?_printf(2), 
  9155 ;;  ret             2    0        int 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  2   29[BANK0 ] int 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9165 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;Total ram usage:       14 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:   12
  9172 ;; This function calls:
  9173 ;;		_vfprintf
  9174 ;; This function is called by:
  9175 ;;		_doDisplayLog
  9176 ;;		_doOperation
  9177 ;;		_main
  9178 ;;		_mainEEPROM
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text35
  9183  003FF8                     __ptext35:
  9184                           	opt callstack 0
  9185  003FF8                     _printf:
  9186                           	opt callstack 18
  9187                           
  9188                           ;incstack = 0
  9189  003FF8  0E9F               	movlw	low (?_printf+2)
  9190  003FFA  6E64               	movwf	printf@ap,c
  9191  003FFC  0E00               	movlw	high (?_printf+2)
  9192  003FFE  6E65               	movwf	printf@ap+1,c
  9193  004000  0E00               	movlw	0
  9194  004002  0100               	movlb	0	; () banked
  9195  004004  6F97               	movwf	vfprintf@fp& (0+255),b
  9196  004006  0E00               	movlw	0
  9197  004008  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  9198  00400A  C09D  F099         	movff	printf@fmt,vfprintf@fmt
  9199  00400E  C09E  F09A         	movff	printf@fmt+1,vfprintf@fmt+1
  9200  004012  0E64               	movlw	low printf@ap
  9201  004014  6F9B               	movwf	vfprintf@ap& (0+255),b
  9202  004016  0E00               	movlw	high printf@ap
  9203  004018  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  9204  00401A  EC8B  F01D         	call	_vfprintf	;wreg free
  9205  00401E  0012               	return		;funcret
  9206  004020                     __end_of_printf:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _vfprintf *****************
  9210 ;; Defined at:
  9211 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  9214 ;;		 -> NULL(0), 
  9215 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  9216 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
  9217 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
  9218 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
  9219 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
  9220 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
  9221 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
  9222 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
  9223 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9224 ;;		 -> STR_4(5), STR_1(7), 
  9225 ;;  ap              2   27[BANK0 ] PTR PTR void 
  9226 ;;		 -> printf@ap(2), 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  cfmt            2   95[COMRAM] PTR unsigned char 
  9229 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
  9230 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
  9231 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
  9232 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
  9233 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
  9234 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
  9235 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
  9236 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9237 ;;		 -> STR_4(5), STR_1(7), 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  2   23[BANK0 ] int 
  9240 ;; Registers used:
  9241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9247 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;Total ram usage:        8 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:   11
  9254 ;; This function calls:
  9255 ;;		_vfpfcnvrt
  9256 ;; This function is called by:
  9257 ;;		_printf
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text36
  9262  003B16                     __ptext36:
  9263                           	opt callstack 0
  9264  003B16                     _vfprintf:
  9265                           	opt callstack 18
  9266                           
  9267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9268                           
  9269                           ;incstack = 0
  9270  003B16  C099  F060         	movff	vfprintf@fmt,vfprintf@cfmt
  9271  003B1A  C09A  F061         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9272                           
  9273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9274  003B1E  0E00               	movlw	0
  9275  003B20  0100               	movlb	0	; () banked
  9276  003B22  6FE0               	movwf	(_nout+1)& (0+255),b
  9277  003B24  0E00               	movlw	0
  9278  003B26  6FDF               	movwf	_nout& (0+255),b
  9279                           
  9280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9281  003B28  D013               	goto	l8214
  9282  003B2A                     l8212:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9286  003B2A  C097  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9287  003B2E  C098  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9288  003B32  0E60               	movlw	low vfprintf@cfmt
  9289  003B34  6E4E               	movwf	vfpfcnvrt@fmt,c
  9290  003B36  0E00               	movlw	high vfprintf@cfmt
  9291  003B38  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  9292  003B3A  C09B  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  9293  003B3E  C09C  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9294  003B42  EC09  F000         	call	_vfpfcnvrt	;wreg free
  9295  003B46  504C               	movf	?_vfpfcnvrt,w,c
  9296  003B48  0100               	movlb	0	; () banked
  9297  003B4A  27DF               	addwf	_nout& (0+255),f,b
  9298  003B4C  504D               	movf	?_vfpfcnvrt+1,w,c
  9299  003B4E  23E0               	addwfc	(_nout+1)& (0+255),f,b
  9300  003B50                     l8214:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9304  003B50  C060  FFF6         	movff	vfprintf@cfmt,tblptrl
  9305  003B54  C061  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9306  003B58                     	if	0	;tblptru may be non-zero
  9307  003B58                     	endif
  9308  003B58                     	if	0	;tblptru may be non-zero
  9309  003B58                     	endif
  9310  003B58  0008               	tblrd		*
  9311  003B5A  50F5               	movf	tablat,w,c
  9312  003B5C  0900               	iorlw	0
  9313  003B5E  A4D8               	btfss	status,2,c
  9314  003B60  D7E4               	goto	l8212
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9318  003B62  C0DF  F097         	movff	_nout,?_vfprintf
  9319  003B66  C0E0  F098         	movff	_nout+1,?_vfprintf+1
  9320                           
  9321                           ; BSR set to: 0
  9322  003B6A  0012               	return		;funcret
  9323  003B6C                     __end_of_vfprintf:
  9324                           	opt callstack 0
  9325                           
  9326 ;; *************** function _vfpfcnvrt *****************
  9327 ;; Defined at:
  9328 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  9331 ;;		 -> NULL(0), 
  9332 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  9333 ;;		 -> vfprintf@cfmt(2), 
  9334 ;;  ap              2   79[COMRAM] PTR PTR void 
  9335 ;;		 -> printf@ap(2), 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  llu             8   15[BANK0 ] unsigned long long 
  9338 ;;  ll              8    6[BANK0 ] long long 
  9339 ;;  f               4    0        long long 
  9340 ;;  vp              3    0        PTR void 
  9341 ;;  ct              3    0        unsigned char [3]
  9342 ;;  done            2    2[BANK0 ] int 
  9343 ;;  cp              2    0[BANK0 ] PTR unsigned char 
  9344 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  9345 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  9346 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  9347 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  9348 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9349 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9350 ;;  i               2    0        int 
  9351 ;;  c               1   14[BANK0 ] unsigned char 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  2   75[COMRAM] int 
  9354 ;; Registers used:
  9355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9361 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Totals:        20      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;Total ram usage:       43 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:   10
  9368 ;; This function calls:
  9369 ;;		_atoi
  9370 ;;		_ctoa
  9371 ;;		_dtoa
  9372 ;;		_fputc
  9373 ;;		_isdigit
  9374 ;;		_stoa
  9375 ;;		_strncmp
  9376 ;;		_utoa
  9377 ;;		_xtoa
  9378 ;; This function is called by:
  9379 ;;		_vfprintf
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text37
  9384  000012                     __ptext37:
  9385                           	opt callstack 0
  9386  000012                     _vfpfcnvrt:
  9387                           	opt callstack 18
  9388                           
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;incstack = 0
  9393  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9394  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9395  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  9396  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  9397  000022                     	if	0	;tblptru may be non-zero
  9398  000022                     	endif
  9399  000022                     	if	0	;tblptru may be non-zero
  9400  000022                     	endif
  9401  000022  0008               	tblrd		*
  9402  000024  50F5               	movf	tablat,w,c
  9403  000026  0A25               	xorlw	37
  9404  000028  A4D8               	btfss	status,2,c
  9405  00002A  D3D4               	goto	l8164
  9406                           
  9407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9408  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9409  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9410  000034  2ADE               	incf	postinc2,f,c
  9411  000036  0E00               	movlw	0
  9412  000038  22DD               	addwfc	postdec2,f,c
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9415  00003A  0E00               	movlw	0
  9416  00003C  0100               	movlb	0	; () banked
  9417  00003E  6FE2               	movwf	(_width+1)& (0+255),b
  9418  000040  0E00               	movlw	0
  9419  000042  6FE1               	movwf	_width& (0+255),b
  9420  000044  C0E1  F0E5         	movff	_width,_flags
  9421  000048  C0E2  F0E6         	movff	_width+1,_flags+1
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9425  00004C  69E3               	setf	_prec& (0+255),b
  9426  00004E  69E4               	setf	(_prec+1)& (0+255),b
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9430  000050  0E00               	movlw	0
  9431  000052  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9432  000054  0E00               	movlw	0
  9433  000056  D014               	goto	L17
  9434  000058                     l8020:
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9438  000058  81E5               	bsf	_flags& (0+255),0,b
  9439  00005A                     l8022:
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9443  00005A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9444  00005E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9445  000062  2ADE               	incf	postinc2,f,c
  9446  000064  0E00               	movlw	0
  9447  000066  22DD               	addwfc	postdec2,f,c
  9448                           
  9449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9450  000068  D02E               	goto	l8046
  9451  00006A                     l8024:
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9455  00006A  83E5               	bsf	_flags& (0+255),1,b
  9456  00006C  D7F6               	goto	l8022
  9457  00006E                     l8028:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9461  00006E  85E5               	bsf	_flags& (0+255),2,b
  9462  000070  D7F4               	goto	l8022
  9463  000072                     l8032:
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9467  000072  87E5               	bsf	_flags& (0+255),3,b
  9468  000074  D7F2               	goto	l8022
  9469  000076                     l8036:
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9473  000076  89E5               	bsf	_flags& (0+255),4,b
  9474  000078  D7F0               	goto	l8022
  9475  00007A                     l8040:
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9479  00007A  0E00               	movlw	0
  9480  00007C  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9481  00007E  0E01               	movlw	1
  9482  000080                     L17:
  9483  000080  6F82               	movwf	vfpfcnvrt@done& (0+255),b
  9484                           
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9486  000082  D021               	goto	l8046
  9487  000084                     l8044:
  9488                           
  9489                           ; BSR set to: 0
  9490  000084  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9491  000088  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9492  00008C  CFDE FFF6          	movff	postinc2,tblptrl
  9493  000090  CFDD FFF7          	movff	postdec2,tblptrh
  9494  000094                     	if	0	;tblptru may be non-zero
  9495  000094                     	endif
  9496  000094                     	if	0	;tblptru may be non-zero
  9497  000094                     	endif
  9498  000094  0008               	tblrd		*
  9499  000096  50F5               	movf	tablat,w,c
  9500  000098  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9501  00009A  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  9502                           
  9503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9504                           ; Switch size 1, requested type "simple"
  9505                           ; Number of cases is 1, Range of values is 0 to 0
  9506                           ; switch strategies available:
  9507                           ; Name         Instructions Cycles
  9508                           ; simple_byte            4     3 (average)
  9509                           ;	Chosen strategy is simple_byte
  9510  00009C  5053               	movf	??_vfpfcnvrt+1,w,c
  9511  00009E  0A00               	xorlw	0	; case 0
  9512  0000A0  A4D8               	btfss	status,2,c
  9513  0000A2  D7EB               	goto	l8040
  9514                           
  9515                           ; BSR set to: 0
  9516                           ; Switch size 1, requested type "simple"
  9517                           ; Number of cases is 5, Range of values is 32 to 48
  9518                           ; switch strategies available:
  9519                           ; Name         Instructions Cycles
  9520                           ; simple_byte           16     9 (average)
  9521                           ;	Chosen strategy is simple_byte
  9522  0000A4  5052               	movf	??_vfpfcnvrt,w,c
  9523  0000A6  0A20               	xorlw	32	; case 32
  9524  0000A8  B4D8               	btfsc	status,2,c
  9525  0000AA  D7E3               	goto	l8032
  9526  0000AC  0A03               	xorlw	3	; case 35
  9527  0000AE  B4D8               	btfsc	status,2,c
  9528  0000B0  D7E2               	goto	l8036
  9529  0000B2  0A08               	xorlw	8	; case 43
  9530  0000B4  B4D8               	btfsc	status,2,c
  9531  0000B6  D7DB               	goto	l8028
  9532  0000B8  0A06               	xorlw	6	; case 45
  9533  0000BA  B4D8               	btfsc	status,2,c
  9534  0000BC  D7CD               	goto	l8020
  9535  0000BE  0A1D               	xorlw	29	; case 48
  9536  0000C0  B4D8               	btfsc	status,2,c
  9537  0000C2  D7D3               	goto	l8024
  9538  0000C4  D7DA               	goto	l8040
  9539  0000C6                     l8046:
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9543  0000C6  5182               	movf	vfpfcnvrt@done& (0+255),w,b
  9544  0000C8  1183               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9545  0000CA  B4D8               	btfsc	status,2,c
  9546  0000CC  D7DB               	goto	l8044
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9550  0000CE  B1E5               	btfsc	_flags& (0+255),0,b
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9554  0000D0  93E5               	bcf	_flags& (0+255),1,b
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9558  0000D2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9559  0000D6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9560  0000DA  CFDE FFF6          	movff	postinc2,tblptrl
  9561  0000DE  CFDD FFF7          	movff	postdec2,tblptrh
  9562  0000E2                     	if	0	;tblptru may be non-zero
  9563  0000E2                     	endif
  9564  0000E2                     	if	0	;tblptru may be non-zero
  9565  0000E2                     	endif
  9566  0000E2  0008               	tblrd		*
  9567  0000E4  50F5               	movf	tablat,w,c
  9568  0000E6  0A2A               	xorlw	42
  9569  0000E8  A4D8               	btfss	status,2,c
  9570  0000EA  D023               	goto	l8058
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9574  0000EC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9575  0000F0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9576  0000F4  2ADE               	incf	postinc2,f,c
  9577  0000F6  0E00               	movlw	0
  9578  0000F8  22DD               	addwfc	postdec2,f,c
  9579                           
  9580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9581  0000FA  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9582  0000FE  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9583  000102  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9584  000106  0E02               	movlw	2
  9585  000108  26DE               	addwf	postinc2,f,c
  9586  00010A  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9587  00010E  0E00               	movlw	0
  9588  000110  22DD               	addwfc	postdec2,f,c
  9589  000112  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9590  000116  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9591  00011A  CFDE F0E1          	movff	postinc2,_width
  9592  00011E  CFDD F0E2          	movff	postdec2,_width+1
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9596  000122  AFE2               	btfss	(_width+1)& (0+255),7,b
  9597  000124  D040               	goto	u9350
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9601  000126  81E5               	bsf	_flags& (0+255),0,b
  9602                           
  9603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9604  000128  6DE1               	negf	_width& (0+255),b
  9605  00012A  1FE2               	comf	(_width+1)& (0+255),f,b
  9606  00012C  B0D8               	btfsc	status,0,c
  9607  00012E  2BE2               	incf	(_width+1)& (0+255),f,b
  9608  000130  D03A               	goto	u9350
  9609  000132                     l8058:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9613  000132  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9614  000136  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9615  00013A  CFDE F00D          	movff	postinc2,atoi@s
  9616  00013E  CFDD F00E          	movff	postdec2,atoi@s+1
  9617  000142  ECC1  F017         	call	_atoi	;wreg free
  9618  000146  C00D  F0E1         	movff	?_atoi,_width
  9619  00014A  C00E  F0E2         	movff	?_atoi+1,_width+1
  9620                           
  9621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9622  00014E  D007               	goto	l8062
  9623  000150                     l8060:
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9627  000150  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9628  000154  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9629  000158  2ADE               	incf	postinc2,f,c
  9630  00015A  0E00               	movlw	0
  9631  00015C  22DD               	addwfc	postdec2,f,c
  9632  00015E                     l8062:
  9633  00015E  0ED0               	movlw	208
  9634  000160  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9635  000162  0EFF               	movlw	255
  9636  000164  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  9637  000166  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9638  00016A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9639  00016E  CFDE FFF6          	movff	postinc2,tblptrl
  9640  000172  CFDD FFF7          	movff	postdec2,tblptrh
  9641  000176                     	if	0	;tblptru may be non-zero
  9642  000176                     	endif
  9643  000176                     	if	0	;tblptru may be non-zero
  9644  000176                     	endif
  9645  000176  0008               	tblrd		*
  9646  000178  50F5               	movf	tablat,w,c
  9647  00017A  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  9648  00017C  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  9649  00017E  5052               	movf	??_vfpfcnvrt,w,c
  9650  000180  2654               	addwf	??_vfpfcnvrt+2,f,c
  9651  000182  5053               	movf	??_vfpfcnvrt+1,w,c
  9652  000184  2255               	addwfc	??_vfpfcnvrt+3,f,c
  9653  000186  5055               	movf	??_vfpfcnvrt+3,w,c
  9654  000188  E106               	bnz	u9330
  9655  00018A  0E0A               	movlw	10
  9656  00018C  5C54               	subwf	??_vfpfcnvrt+2,w,c
  9657  00018E  B0D8               	btfsc	status,0,c
  9658  000190  D002               	goto	u9330
  9659  000192  0E01               	movlw	1
  9660  000194  D001               	goto	u9340
  9661  000196                     u9330:
  9662  000196  0E00               	movlw	0
  9663  000198                     u9340:
  9664  000198  0100               	movlb	0	; () banked
  9665  00019A  6F84               	movwf	_vfpfcnvrt$1408& (0+255),b
  9666  00019C  6B85               	clrf	(_vfpfcnvrt$1408+1)& (0+255),b
  9667                           
  9668                           ; BSR set to: 0
  9669  00019E  5184               	movf	_vfpfcnvrt$1408& (0+255),w,b
  9670  0001A0  1185               	iorwf	(_vfpfcnvrt$1408+1)& (0+255),w,b
  9671  0001A2  A4D8               	btfss	status,2,c
  9672  0001A4  D7D5               	goto	l8060
  9673  0001A6                     u9350:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  9677  0001A6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9678  0001AA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9679  0001AE  CFDE FFF6          	movff	postinc2,tblptrl
  9680  0001B2  CFDD FFF7          	movff	postdec2,tblptrh
  9681  0001B6                     	if	0	;tblptru may be non-zero
  9682  0001B6                     	endif
  9683  0001B6                     	if	0	;tblptru may be non-zero
  9684  0001B6                     	endif
  9685  0001B6  0008               	tblrd		*
  9686  0001B8  50F5               	movf	tablat,w,c
  9687  0001BA  0A63               	xorlw	99
  9688  0001BC  A4D8               	btfss	status,2,c
  9689  0001BE  D026               	goto	l8076
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  9693  0001C0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9694  0001C4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9695  0001C8  2ADE               	incf	postinc2,f,c
  9696  0001CA  0E00               	movlw	0
  9697  0001CC  22DD               	addwfc	postdec2,f,c
  9698                           
  9699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9700  0001CE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9701  0001D2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9702  0001D6  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9703  0001DA  0E02               	movlw	2
  9704  0001DC  26DE               	addwf	postinc2,f,c
  9705  0001DE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9706  0001E2  0E00               	movlw	0
  9707  0001E4  22DD               	addwfc	postdec2,f,c
  9708  0001E6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9709  0001EA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9710  0001EE  50DF               	movf	indf2,w,c
  9711  0001F0  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  9715  0001F2  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  9716  0001F6  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9717  0001FA  C08E  F027         	movff	vfpfcnvrt@c,ctoa@c
  9718  0001FE  EC0C  F01E         	call	_ctoa	;wreg free
  9719  000202  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  9720  000206  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9721  00020A  0012               	return	
  9722  00020C                     l8076:
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9726  00020C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9727  000210  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9728  000214  CFDE FFF6          	movff	postinc2,tblptrl
  9729  000218  CFDD FFF7          	movff	postdec2,tblptrh
  9730  00021C                     	if	0	;tblptru may be non-zero
  9731  00021C                     	endif
  9732  00021C                     	if	0	;tblptru may be non-zero
  9733  00021C                     	endif
  9734  00021C  0008               	tblrd		*
  9735  00021E  50F5               	movf	tablat,w,c
  9736  000220  0A64               	xorlw	100
  9737  000222  B4D8               	btfsc	status,2,c
  9738  000224  D00D               	goto	u9380
  9739                           
  9740                           ; BSR set to: 0
  9741  000226  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9742  00022A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9743  00022E  CFDE FFF6          	movff	postinc2,tblptrl
  9744  000232  CFDD FFF7          	movff	postdec2,tblptrh
  9745  000236                     	if	0	;tblptru may be non-zero
  9746  000236                     	endif
  9747  000236                     	if	0	;tblptru may be non-zero
  9748  000236                     	endif
  9749  000236  0008               	tblrd		*
  9750  000238  50F5               	movf	tablat,w,c
  9751  00023A  0A69               	xorlw	105
  9752  00023C  A4D8               	btfss	status,2,c
  9753  00023E  D03F               	goto	l8086
  9754  000240                     u9380:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9758  000240  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9759  000244  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9760  000248  2ADE               	incf	postinc2,f,c
  9761  00024A  0E00               	movlw	0
  9762  00024C  22DD               	addwfc	postdec2,f,c
  9763                           
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9765  00024E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9766  000252  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9767  000256  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9768  00025A  0E02               	movlw	2
  9769  00025C  26DE               	addwf	postinc2,f,c
  9770  00025E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9771  000262  0E00               	movlw	0
  9772  000264  22DD               	addwfc	postdec2,f,c
  9773  000266  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9774  00026A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9775  00026E  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
  9776  000272  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
  9777  000276  0E00               	movlw	0
  9778  000278  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9779  00027A  0EFF               	movlw	-1
  9780  00027C  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9781  00027E  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9782  000280  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9783  000282  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9784  000284  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9785  000286  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9789  000288  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9790  00028C  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9791  000290  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9792  000294  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9793  000298  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9794  00029C  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9795  0002A0  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9796  0002A4  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9797  0002A8  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9798  0002AC  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9799  0002B0  ECA2  F010         	call	_dtoa	;wreg free
  9800  0002B4  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9801  0002B8  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9802  0002BC  0012               	return	
  9803  0002BE                     l8086:
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
  9807  0002BE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9808  0002C2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9809  0002C6  CFDE F006          	movff	postinc2,strncmp@_l
  9810  0002CA  CFDD F007          	movff	postdec2,strncmp@_l+1
  9811  0002CE  0EF4               	movlw	low STR_57
  9812  0002D0  6E08               	movwf	strncmp@_r,c
  9813  0002D2  0EFF               	movlw	high STR_57
  9814  0002D4  6E09               	movwf	strncmp@_r+1,c
  9815  0002D6  0E00               	movlw	0
  9816  0002D8  6E0B               	movwf	strncmp@n+1,c
  9817  0002DA  0E02               	movlw	2
  9818  0002DC  6E0A               	movwf	strncmp@n,c
  9819  0002DE  ECED  F01A         	call	_strncmp	;wreg free
  9820  0002E2  5006               	movf	?_strncmp,w,c
  9821  0002E4  1007               	iorwf	?_strncmp+1,w,c
  9822  0002E6  B4D8               	btfsc	status,2,c
  9823  0002E8  D016               	goto	u9400
  9824  0002EA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9825  0002EE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9826  0002F2  CFDE F006          	movff	postinc2,strncmp@_l
  9827  0002F6  CFDD F007          	movff	postdec2,strncmp@_l+1
  9828  0002FA  0EF7               	movlw	low STR_61
  9829  0002FC  6E08               	movwf	strncmp@_r,c
  9830  0002FE  0EFF               	movlw	high STR_61
  9831  000300  6E09               	movwf	strncmp@_r+1,c
  9832  000302  0E00               	movlw	0
  9833  000304  6E0B               	movwf	strncmp@n+1,c
  9834  000306  0E02               	movlw	2
  9835  000308  6E0A               	movwf	strncmp@n,c
  9836  00030A  ECED  F01A         	call	_strncmp	;wreg free
  9837  00030E  5006               	movf	?_strncmp,w,c
  9838  000310  1007               	iorwf	?_strncmp+1,w,c
  9839  000312  A4D8               	btfss	status,2,c
  9840  000314  D05C               	goto	l8096
  9841  000316                     u9400:
  9842                           
  9843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
  9844  000316  0E02               	movlw	2
  9845  000318  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9846  00031C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9847  000320  26DE               	addwf	postinc2,f,c
  9848  000322  0E00               	movlw	0
  9849  000324  22DD               	addwfc	postdec2,f,c
  9850                           
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  9852  000326  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9853  00032A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9854  00032E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9855  000332  0E04               	movlw	4
  9856  000334  26DE               	addwf	postinc2,f,c
  9857  000336  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9858  00033A  0E00               	movlw	0
  9859  00033C  22DD               	addwfc	postdec2,f,c
  9860  00033E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9861  000342  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9862  000346  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  9863  00034A  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
  9864  00034E  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
  9865  000352  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
  9866  000356  C054  F058         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  9867  00035A  C055  F059         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  9868  00035E  C056  F05A         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  9869  000362  C057  F05B         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  9870  000366  6A5C               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  9871  000368  BE5B               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  9872  00036A  685C               	setf	(??_vfpfcnvrt+10)& (0+255),c
  9873  00036C  C05C  F05D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  9874  000370  C05C  F05E         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  9875  000374  C05C  F05F         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  9876  000378  C058  F086         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  9877  00037C  C059  F087         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  9878  000380  C05A  F088         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  9879  000384  C05B  F089         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  9880  000388  C05C  F08A         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  9881  00038C  C05D  F08B         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  9882  000390  C05E  F08C         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  9883  000394  C05F  F08D         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  9884                           
  9885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
  9886  000398  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9887  00039C  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9888  0003A0  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9889  0003A4  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9890  0003A8  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9891  0003AC  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9892  0003B0  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9893  0003B4  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9894  0003B8  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9895  0003BC  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9896  0003C0  ECA2  F010         	call	_dtoa	;wreg free
  9897  0003C4  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9898  0003C8  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9899  0003CC  0012               	return	
  9900  0003CE                     l8096:
  9901                           
  9902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9903  0003CE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9904  0003D2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9905  0003D6  CFDE FFF6          	movff	postinc2,tblptrl
  9906  0003DA  CFDD FFF7          	movff	postdec2,tblptrh
  9907  0003DE                     	if	0	;tblptru may be non-zero
  9908  0003DE                     	endif
  9909  0003DE                     	if	0	;tblptru may be non-zero
  9910  0003DE                     	endif
  9911  0003DE  0008               	tblrd		*
  9912  0003E0  50F5               	movf	tablat,w,c
  9913  0003E2  0A73               	xorlw	115
  9914  0003E4  A4D8               	btfss	status,2,c
  9915  0003E6  D02A               	goto	l8104
  9916                           
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9918  0003E8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9919  0003EC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9920  0003F0  2ADE               	incf	postinc2,f,c
  9921  0003F2  0E00               	movlw	0
  9922  0003F4  22DD               	addwfc	postdec2,f,c
  9923                           
  9924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9925  0003F6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9926  0003FA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9927  0003FE  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9928  000402  0E02               	movlw	2
  9929  000404  26DE               	addwf	postinc2,f,c
  9930  000406  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9931  00040A  0E00               	movlw	0
  9932  00040C  22DD               	addwfc	postdec2,f,c
  9933  00040E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9934  000412  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9935  000416  CFDE F080          	movff	postinc2,vfpfcnvrt@cp
  9936  00041A  CFDD F081          	movff	postdec2,vfpfcnvrt@cp+1
  9937                           
  9938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9939  00041E  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  9940  000422  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9941  000426  C080  F015         	movff	vfpfcnvrt@cp,stoa@s
  9942  00042A  C081  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9943  00042E  EC7F  F016         	call	_stoa	;wreg free
  9944  000432  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  9945  000436  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  9946  00043A  0012               	return	
  9947  00043C                     l8104:
  9948                           
  9949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  9950  00043C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9951  000440  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9952  000444  CFDE FFF6          	movff	postinc2,tblptrl
  9953  000448  CFDD FFF7          	movff	postdec2,tblptrh
  9954  00044C                     	if	0	;tblptru may be non-zero
  9955  00044C                     	endif
  9956  00044C                     	if	0	;tblptru may be non-zero
  9957  00044C                     	endif
  9958  00044C  0008               	tblrd		*
  9959  00044E  50F5               	movf	tablat,w,c
  9960  000450  0A75               	xorlw	117
  9961  000452  A4D8               	btfss	status,2,c
  9962  000454  D041               	goto	l8112
  9963                           
  9964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  9965  000456  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9966  00045A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9967  00045E  2ADE               	incf	postinc2,f,c
  9968  000460  0E00               	movlw	0
  9969  000462  22DD               	addwfc	postdec2,f,c
  9970                           
  9971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9972  000464  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9973  000468  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9974  00046C  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9975  000470  0E02               	movlw	2
  9976  000472  26DE               	addwf	postinc2,f,c
  9977  000474  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9978  000478  0E00               	movlw	0
  9979  00047A  22DD               	addwfc	postdec2,f,c
  9980  00047C  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9981  000480  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9982  000484  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  9983  000488  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  9984  00048C  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9985  000490  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9986  000494  0100               	movlb	0	; () banked
  9987  000496  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9988  000498  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9989  00049A  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9990  00049C  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9991  00049E  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9992  0004A0  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  9996  0004A2  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
  9997  0004A6  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  9998  0004AA  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
  9999  0004AE  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10000  0004B2  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10001  0004B6  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10002  0004BA  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10003  0004BE  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10004  0004C2  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10005  0004C6  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10006  0004CA  EC02  F015         	call	_utoa	;wreg free
 10007  0004CE  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 10008  0004D2  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 10009  0004D6  0012               	return	
 10010  0004D8                     l8112:
 10011                           
 10012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 10013  0004D8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10014  0004DC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10015  0004E0  CFDE F006          	movff	postinc2,strncmp@_l
 10016  0004E4  CFDD F007          	movff	postdec2,strncmp@_l+1
 10017  0004E8  0EEE               	movlw	low (STR_19+1)
 10018  0004EA  6E08               	movwf	strncmp@_r,c
 10019  0004EC  0EFF               	movlw	high (STR_19+1)
 10020  0004EE  6E09               	movwf	strncmp@_r+1,c
 10021  0004F0  0E00               	movlw	0
 10022  0004F2  6E0B               	movwf	strncmp@n+1,c
 10023  0004F4  0E02               	movlw	2
 10024  0004F6  6E0A               	movwf	strncmp@n,c
 10025  0004F8  ECED  F01A         	call	_strncmp	;wreg free
 10026  0004FC  5006               	movf	?_strncmp,w,c
 10027  0004FE  1007               	iorwf	?_strncmp+1,w,c
 10028  000500  A4D8               	btfss	status,2,c
 10029  000502  D048               	goto	l8120
 10030                           
 10031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 10032  000504  0E02               	movlw	2
 10033  000506  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10034  00050A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10035  00050E  26DE               	addwf	postinc2,f,c
 10036  000510  0E00               	movlw	0
 10037  000512  22DD               	addwfc	postdec2,f,c
 10038                           
 10039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 10040  000514  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10041  000518  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10042  00051C  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10043  000520  0E04               	movlw	4
 10044  000522  26DE               	addwf	postinc2,f,c
 10045  000524  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10046  000528  0E00               	movlw	0
 10047  00052A  22DD               	addwfc	postdec2,f,c
 10048  00052C  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10049  000530  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10050  000534  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 10051  000538  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 10052  00053C  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 10053  000540  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 10054  000544  5054               	movf	??_vfpfcnvrt+2,w,c
 10055  000546  0100               	movlb	0	; () banked
 10056  000548  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 10057  00054A  5055               	movf	??_vfpfcnvrt+3,w,c
 10058  00054C  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 10059  00054E  5056               	movf	??_vfpfcnvrt+4,w,c
 10060  000550  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 10061  000552  5057               	movf	??_vfpfcnvrt+5,w,c
 10062  000554  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 10063  000556  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10064  000558  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10065  00055A  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10066  00055C  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 10070  00055E  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
 10071  000562  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10072  000566  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
 10073  00056A  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10074  00056E  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10075  000572  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10076  000576  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10077  00057A  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10078  00057E  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10079  000582  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10080  000586  EC02  F015         	call	_utoa	;wreg free
 10081  00058A  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 10082  00058E  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 10083  000592  0012               	return	
 10084  000594                     l8120:
 10085                           
 10086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10087  000594  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10088  000598  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10089  00059C  CFDE FFF6          	movff	postinc2,tblptrl
 10090  0005A0  CFDD FFF7          	movff	postdec2,tblptrh
 10091  0005A4                     	if	0	;tblptru may be non-zero
 10092  0005A4                     	endif
 10093  0005A4                     	if	0	;tblptru may be non-zero
 10094  0005A4                     	endif
 10095  0005A4  0008               	tblrd		*
 10096  0005A6  50F5               	movf	tablat,w,c
 10097  0005A8  0A78               	xorlw	120
 10098  0005AA  B4D8               	btfsc	status,2,c
 10099  0005AC  D00D               	goto	u9450
 10100  0005AE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10101  0005B2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10102  0005B6  CFDE FFF6          	movff	postinc2,tblptrl
 10103  0005BA  CFDD FFF7          	movff	postdec2,tblptrh
 10104  0005BE                     	if	0	;tblptru may be non-zero
 10105  0005BE                     	endif
 10106  0005BE                     	if	0	;tblptru may be non-zero
 10107  0005BE                     	endif
 10108  0005BE  0008               	tblrd		*
 10109  0005C0  50F5               	movf	tablat,w,c
 10110  0005C2  0A58               	xorlw	88
 10111  0005C4  A4D8               	btfss	status,2,c
 10112  0005C6  D04E               	goto	l8134
 10113  0005C8                     u9450:
 10114                           
 10115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 10116  0005C8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10117  0005CC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10118  0005D0  CFDE FFF6          	movff	postinc2,tblptrl
 10119  0005D4  CFDD FFF7          	movff	postdec2,tblptrh
 10120  0005D8                     	if	0	;tblptru may be non-zero
 10121  0005D8                     	endif
 10122  0005D8                     	if	0	;tblptru may be non-zero
 10123  0005D8                     	endif
 10124  0005D8  0008               	tblrd		*
 10125  0005DA  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 10126                           
 10127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 10128  0005DE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10129  0005E2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10130  0005E6  2ADE               	incf	postinc2,f,c
 10131  0005E8  0E00               	movlw	0
 10132  0005EA  22DD               	addwfc	postdec2,f,c
 10133                           
 10134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 10135  0005EC  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10136  0005F0  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10137  0005F4  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10138  0005F8  0E02               	movlw	2
 10139  0005FA  26DE               	addwf	postinc2,f,c
 10140  0005FC  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10141  000600  0E00               	movlw	0
 10142  000602  22DD               	addwfc	postdec2,f,c
 10143  000604  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10144  000608  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10145  00060C  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 10146  000610  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 10147  000614  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10148  000618  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10149  00061C  0100               	movlb	0	; () banked
 10150  00061E  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10151  000620  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10152  000622  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10153  000624  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10154  000626  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10155  000628  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10159  00062A  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 10160  00062E  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10161  000632  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 10162  000636  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10163  00063A  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10164  00063E  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10165  000642  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10166  000646  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10167  00064A  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10168  00064E  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10169  000652  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 10170  000656  ECE8  F012         	call	_xtoa	;wreg free
 10171  00065A  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 10172  00065E  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10173  000662  0012               	return	
 10174  000664                     l8134:
 10175                           
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 10177  000664  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10178  000668  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10179  00066C  CFDE F006          	movff	postinc2,strncmp@_l
 10180  000670  CFDD F007          	movff	postdec2,strncmp@_l+1
 10181  000674  0EFA               	movlw	low STR_71
 10182  000676  6E08               	movwf	strncmp@_r,c
 10183  000678  0EFF               	movlw	high STR_71
 10184  00067A  6E09               	movwf	strncmp@_r+1,c
 10185  00067C  0E00               	movlw	0
 10186  00067E  6E0B               	movwf	strncmp@n+1,c
 10187  000680  0E02               	movlw	2
 10188  000682  6E0A               	movwf	strncmp@n,c
 10189  000684  ECED  F01A         	call	_strncmp	;wreg free
 10190  000688  5006               	movf	?_strncmp,w,c
 10191  00068A  1007               	iorwf	?_strncmp+1,w,c
 10192  00068C  B4D8               	btfsc	status,2,c
 10193  00068E  D016               	goto	u9470
 10194  000690  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10195  000694  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10196  000698  CFDE F006          	movff	postinc2,strncmp@_l
 10197  00069C  CFDD F007          	movff	postdec2,strncmp@_l+1
 10198  0006A0  0EF1               	movlw	low STR_75
 10199  0006A2  6E08               	movwf	strncmp@_r,c
 10200  0006A4  0EFF               	movlw	high STR_75
 10201  0006A6  6E09               	movwf	strncmp@_r+1,c
 10202  0006A8  0E00               	movlw	0
 10203  0006AA  6E0B               	movwf	strncmp@n+1,c
 10204  0006AC  0E02               	movlw	2
 10205  0006AE  6E0A               	movwf	strncmp@n,c
 10206  0006B0  ECED  F01A         	call	_strncmp	;wreg free
 10207  0006B4  5006               	movf	?_strncmp,w,c
 10208  0006B6  1007               	iorwf	?_strncmp+1,w,c
 10209  0006B8  A4D8               	btfss	status,2,c
 10210  0006BA  D05D               	goto	l8148
 10211  0006BC                     u9470:
 10212                           
 10213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 10214  0006BC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10215  0006C0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10216  0006C4  CFDE F052          	movff	postinc2,??_vfpfcnvrt
 10217  0006C8  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
 10218  0006CC  0E01               	movlw	1
 10219  0006CE  2652               	addwf	??_vfpfcnvrt,f,c
 10220  0006D0  0E00               	movlw	0
 10221  0006D2  2253               	addwfc	??_vfpfcnvrt+1,f,c
 10222  0006D4  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10223  0006D8  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10224  0006DC                     	if	0	;tblptru may be non-zero
 10225  0006DC                     	endif
 10226  0006DC                     	if	0	;tblptru may be non-zero
 10227  0006DC                     	endif
 10228  0006DC  0008               	tblrd		*
 10229  0006DE  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 10230                           
 10231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 10232  0006E2  0E02               	movlw	2
 10233  0006E4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10234  0006E8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10235  0006EC  26DE               	addwf	postinc2,f,c
 10236  0006EE  0E00               	movlw	0
 10237  0006F0  22DD               	addwfc	postdec2,f,c
 10238                           
 10239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 10240  0006F2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10241  0006F6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10242  0006FA  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10243  0006FE  0E04               	movlw	4
 10244  000700  26DE               	addwf	postinc2,f,c
 10245  000702  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10246  000706  0E00               	movlw	0
 10247  000708  22DD               	addwfc	postdec2,f,c
 10248  00070A  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10249  00070E  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10250  000712  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 10251  000716  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 10252  00071A  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 10253  00071E  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 10254  000722  5054               	movf	??_vfpfcnvrt+2,w,c
 10255  000724  0100               	movlb	0	; () banked
 10256  000726  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 10257  000728  5055               	movf	??_vfpfcnvrt+3,w,c
 10258  00072A  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 10259  00072C  5056               	movf	??_vfpfcnvrt+4,w,c
 10260  00072E  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 10261  000730  5057               	movf	??_vfpfcnvrt+5,w,c
 10262  000732  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 10263  000734  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10264  000736  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10265  000738  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10266  00073A  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 10270  00073C  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 10271  000740  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10272  000744  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 10273  000748  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10274  00074C  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10275  000750  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10276  000754  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10277  000758  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10278  00075C  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10279  000760  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10280  000764  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 10281  000768  ECE8  F012         	call	_xtoa	;wreg free
 10282  00076C  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 10283  000770  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10284  000774  0012               	return	
 10285  000776                     l8148:
 10286                           
 10287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10288  000776  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10289  00077A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10290  00077E  CFDE FFF6          	movff	postinc2,tblptrl
 10291  000782  CFDD FFF7          	movff	postdec2,tblptrh
 10292  000786                     	if	0	;tblptru may be non-zero
 10293  000786                     	endif
 10294  000786                     	if	0	;tblptru may be non-zero
 10295  000786                     	endif
 10296  000786  0008               	tblrd		*
 10297  000788  50F5               	movf	tablat,w,c
 10298  00078A  0A25               	xorlw	37
 10299  00078C  A4D8               	btfss	status,2,c
 10300  00078E  D016               	goto	l8158
 10301                           
 10302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10303  000790  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10304  000794  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10305  000798  2ADE               	incf	postinc2,f,c
 10306  00079A  0E00               	movlw	0
 10307  00079C  22DD               	addwfc	postdec2,f,c
 10308                           
 10309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10310  00079E  0E00               	movlw	0
 10311  0007A0  6E0B               	movwf	fputc@c+1,c
 10312  0007A2  0E25               	movlw	37
 10313  0007A4  6E0A               	movwf	fputc@c,c
 10314  0007A6  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 10315  0007AA  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10316  0007AE  EC8D  F01C         	call	_fputc	;wreg free
 10317  0007B2                     l8154:
 10318                           
 10319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10320  0007B2  0E00               	movlw	0
 10321  0007B4  6E4D               	movwf	?_vfpfcnvrt+1,c
 10322  0007B6  0E01               	movlw	1
 10323  0007B8  6E4C               	movwf	?_vfpfcnvrt,c
 10324  0007BA  0012               	return	
 10325  0007BC                     l8158:
 10326                           
 10327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10328  0007BC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10329  0007C0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10330  0007C4  2ADE               	incf	postinc2,f,c
 10331  0007C6  0E00               	movlw	0
 10332  0007C8  22DD               	addwfc	postdec2,f,c
 10333                           
 10334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10335  0007CA  0E00               	movlw	0
 10336  0007CC  6E4D               	movwf	?_vfpfcnvrt+1,c
 10337  0007CE  0E00               	movlw	0
 10338  0007D0  6E4C               	movwf	?_vfpfcnvrt,c
 10339  0007D2  0012               	return	
 10340  0007D4                     l8164:
 10341                           
 10342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10343  0007D4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10344  0007D8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10345  0007DC  CFDE FFF6          	movff	postinc2,tblptrl
 10346  0007E0  CFDD FFF7          	movff	postdec2,tblptrh
 10347  0007E4                     	if	0	;tblptru may be non-zero
 10348  0007E4                     	endif
 10349  0007E4                     	if	0	;tblptru may be non-zero
 10350  0007E4                     	endif
 10351  0007E4  0008               	tblrd		*
 10352  0007E6  50F5               	movf	tablat,w,c
 10353  0007E8  6E0A               	movwf	fputc@c,c
 10354  0007EA  6A0B               	clrf	fputc@c+1,c
 10355  0007EC  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 10356  0007F0  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10357  0007F4  EC8D  F01C         	call	_fputc	;wreg free
 10358                           
 10359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10360  0007F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10361  0007FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10362  000800  2ADE               	incf	postinc2,f,c
 10363  000802  0E00               	movlw	0
 10364  000804  22DD               	addwfc	postdec2,f,c
 10365  000806  D7D5               	goto	l8154
 10366  000808                     __end_of_vfpfcnvrt:
 10367                           	opt callstack 0
 10368                           
 10369 ;; *************** function _xtoa *****************
 10370 ;; Defined at:
 10371 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10374 ;;		 -> NULL(0), 
 10375 ;;  d               8   38[COMRAM] unsigned long long 
 10376 ;;  x               1   46[COMRAM] unsigned char 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  n               8   63[COMRAM] unsigned long long 
 10379 ;;  c               2   73[COMRAM] int 
 10380 ;;  i               2   71[COMRAM] int 
 10381 ;;  w               2   61[COMRAM] int 
 10382 ;;  p               2   59[COMRAM] int 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  2   36[COMRAM] int 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10392 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:       39 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    9
 10399 ;; This function calls:
 10400 ;;		_isalpha
 10401 ;;		_isupper
 10402 ;;		_pad
 10403 ;;		_toupper
 10404 ;; This function is called by:
 10405 ;;		_vfpfcnvrt
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text38
 10410  0025D0                     __ptext38:
 10411                           	opt callstack 0
 10412  0025D0                     _xtoa:
 10413                           	opt callstack 18
 10414                           
 10415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10416                           
 10417                           ;incstack = 0
 10418  0025D0  0100               	movlb	0	; () banked
 10419  0025D2  AFE4               	btfss	(_prec+1)& (0+255),7,b
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10423  0025D4  93E5               	bcf	_flags& (0+255),1,b
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10427  0025D6  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 10428  0025D8  D005               	goto	u8980
 10429  0025DA  51E4               	movf	(_prec+1)& (0+255),w,b
 10430  0025DC  E108               	bnz	l657
 10431  0025DE  05E3               	decf	_prec& (0+255),w,b
 10432  0025E0  B0D8               	btfsc	status,0,c
 10433  0025E2  D005               	goto	l657
 10434  0025E4                     u8980:
 10435                           
 10436                           ; BSR set to: 0
 10437  0025E4  0E00               	movlw	0
 10438  0025E6  6E3D               	movwf	xtoa@p+1,c
 10439  0025E8  0E01               	movlw	1
 10440  0025EA  6E3C               	movwf	xtoa@p,c
 10441  0025EC  D004               	goto	l659
 10442  0025EE                     l657:
 10443                           
 10444                           ; BSR set to: 0
 10445  0025EE  C0E3  F03C         	movff	_prec,xtoa@p
 10446  0025F2  C0E4  F03D         	movff	_prec+1,xtoa@p+1
 10447  0025F6                     l659:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10451  0025F6  C0E1  F03E         	movff	_width,xtoa@w
 10452  0025FA  C0E2  F03F         	movff	_width+1,xtoa@w+1
 10453                           
 10454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10455  0025FE  A9E5               	btfss	_flags& (0+255),4,b
 10456  002600  D004               	goto	l7878
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10460  002602  0EFE               	movlw	254
 10461  002604  263E               	addwf	xtoa@w,f,c
 10462  002606  0EFF               	movlw	255
 10463  002608  223F               	addwfc	xtoa@w+1,f,c
 10464  00260A                     l7878:
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10468  00260A  C027  F040         	movff	xtoa@d,xtoa@n
 10469  00260E  C028  F041         	movff	xtoa@d+1,xtoa@n+1
 10470  002612  C029  F042         	movff	xtoa@d+2,xtoa@n+2
 10471  002616  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
 10472  00261A  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
 10473  00261E  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
 10474  002622  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
 10475  002626  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10479  00262A  0E00               	movlw	0
 10480  00262C  6E49               	movwf	xtoa@i+1,c
 10481  00262E  0E1F               	movlw	31
 10482  002630  6E48               	movwf	xtoa@i,c
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10486  002632  0E00               	movlw	0
 10487  002634  0101               	movlb	1	; () banked
 10488  002636  6F80               	movwf	(_dbuf+31)& (0+255),b
 10489                           
 10490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10491  002638  D093               	goto	l7914
 10492  00263A                     l7884:
 10493                           
 10494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10495  00263A  0648               	decf	xtoa@i,f,c
 10496  00263C  A0D8               	btfss	status,0,c
 10497  00263E  0649               	decf	xtoa@i+1,f,c
 10498                           
 10499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10500  002640  0E0F               	movlw	15
 10501  002642  1440               	andwf	xtoa@n,w,c
 10502  002644  6E4A               	movwf	xtoa@c,c
 10503  002646  6A4B               	clrf	xtoa@c+1,c
 10504                           
 10505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10506  002648  BE4B               	btfsc	xtoa@c+1,7,c
 10507  00264A  D008               	goto	l7892
 10508  00264C  504B               	movf	xtoa@c+1,w,c
 10509  00264E  E104               	bnz	u9000
 10510  002650  0E0A               	movlw	10
 10511  002652  5C4A               	subwf	xtoa@c,w,c
 10512  002654  A0D8               	btfss	status,0,c
 10513  002656  D002               	goto	l7892
 10514  002658                     u9000:
 10515  002658  0E57               	movlw	87
 10516  00265A  D001               	goto	L18
 10517  00265C                     l7892:
 10518  00265C  0E30               	movlw	48
 10519  00265E                     L18:
 10520  00265E  244A               	addwf	xtoa@c,w,c
 10521  002660  6E4A               	movwf	xtoa@c,c
 10522  002662  0E00               	movlw	0
 10523  002664  204B               	addwfc	xtoa@c+1,w,c
 10524  002666  6E4B               	movwf	xtoa@c+1,c
 10525                           
 10526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 10527  002668  0EBF               	movlw	191
 10528  00266A  6E30               	movwf	??_xtoa& (0+255),c
 10529  00266C  0EFF               	movlw	255
 10530  00266E  6E31               	movwf	(??_xtoa+1)& (0+255),c
 10531  002670  502F               	movf	xtoa@x,w,c
 10532  002672  6E32               	movwf	(??_xtoa+2)& (0+255),c
 10533  002674  6A33               	clrf	(??_xtoa+3)& (0+255),c
 10534  002676  5030               	movf	??_xtoa,w,c
 10535  002678  2632               	addwf	??_xtoa+2,f,c
 10536  00267A  5031               	movf	??_xtoa+1,w,c
 10537  00267C  2233               	addwfc	??_xtoa+3,f,c
 10538  00267E  5033               	movf	??_xtoa+3,w,c
 10539  002680  E106               	bnz	u9010
 10540  002682  0E1A               	movlw	26
 10541  002684  5C32               	subwf	??_xtoa+2,w,c
 10542  002686  B0D8               	btfsc	status,0,c
 10543  002688  D002               	goto	u9010
 10544  00268A  0E01               	movlw	1
 10545  00268C  D001               	goto	u9020
 10546  00268E                     u9010:
 10547  00268E  0E00               	movlw	0
 10548  002690                     u9020:
 10549  002690  6E38               	movwf	_xtoa$1393,c
 10550  002692  6A39               	clrf	_xtoa$1393+1,c
 10551  002694  5038               	movf	_xtoa$1393,w,c
 10552  002696  1039               	iorwf	_xtoa$1393+1,w,c
 10553  002698  B4D8               	btfsc	status,2,c
 10554  00269A  D027               	goto	l7906
 10555  00269C  0E9F               	movlw	159
 10556  00269E  6E30               	movwf	??_xtoa& (0+255),c
 10557  0026A0  0EFF               	movlw	255
 10558  0026A2  6E31               	movwf	(??_xtoa+1)& (0+255),c
 10559  0026A4  0E20               	movlw	32
 10560  0026A6  104A               	iorwf	xtoa@c,w,c
 10561  0026A8  6E32               	movwf	(??_xtoa+2)& (0+255),c
 10562  0026AA  0E00               	movlw	0
 10563  0026AC  104B               	iorwf	xtoa@c+1,w,c
 10564  0026AE  6E33               	movwf	(??_xtoa+3)& (0+255),c
 10565  0026B0  5030               	movf	??_xtoa,w,c
 10566  0026B2  2632               	addwf	??_xtoa+2,f,c
 10567  0026B4  5031               	movf	??_xtoa+1,w,c
 10568  0026B6  2233               	addwfc	??_xtoa+3,f,c
 10569  0026B8  5033               	movf	??_xtoa+3,w,c
 10570  0026BA  E106               	bnz	u9040
 10571  0026BC  0E1A               	movlw	26
 10572  0026BE  5C32               	subwf	??_xtoa+2,w,c
 10573  0026C0  B0D8               	btfsc	status,0,c
 10574  0026C2  D002               	goto	u9040
 10575  0026C4  0E01               	movlw	1
 10576  0026C6  D001               	goto	u9050
 10577  0026C8                     u9040:
 10578  0026C8  0E00               	movlw	0
 10579  0026CA                     u9050:
 10580  0026CA  6E3A               	movwf	_xtoa$1394,c
 10581  0026CC  6A3B               	clrf	_xtoa$1394+1,c
 10582  0026CE  503A               	movf	_xtoa$1394,w,c
 10583  0026D0  103B               	iorwf	_xtoa$1394+1,w,c
 10584  0026D2  B4D8               	btfsc	status,2,c
 10585  0026D4  D00A               	goto	l7906
 10586                           
 10587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10588  0026D6  C04A  F00C         	movff	xtoa@c,toupper@c
 10589  0026DA  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
 10590  0026DE  EC5A  F01E         	call	_toupper	;wreg free
 10591  0026E2  C00C  F04A         	movff	?_toupper,xtoa@c
 10592  0026E6  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
 10593  0026EA                     l7906:
 10594                           
 10595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10596  0026EA  0E61               	movlw	low _dbuf
 10597  0026EC  2448               	addwf	xtoa@i,w,c
 10598  0026EE  6ED9               	movwf	fsr2l,c
 10599  0026F0  0E01               	movlw	high _dbuf
 10600  0026F2  2049               	addwfc	xtoa@i+1,w,c
 10601  0026F4  6EDA               	movwf	fsr2h,c
 10602  0026F6  C04A  FFDF         	movff	xtoa@c,indf2
 10603                           
 10604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10605  0026FA  063C               	decf	xtoa@p,f,c
 10606  0026FC  A0D8               	btfss	status,0,c
 10607  0026FE  063D               	decf	xtoa@p+1,f,c
 10608                           
 10609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10610  002700  063E               	decf	xtoa@w,f,c
 10611  002702  A0D8               	btfss	status,0,c
 10612  002704  063F               	decf	xtoa@w+1,f,c
 10613                           
 10614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10615  002706  C040  F030         	movff	xtoa@n,??_xtoa
 10616  00270A  C041  F031         	movff	xtoa@n+1,??_xtoa+1
 10617  00270E  C042  F032         	movff	xtoa@n+2,??_xtoa+2
 10618  002712  C043  F033         	movff	xtoa@n+3,??_xtoa+3
 10619  002716  C044  F034         	movff	xtoa@n+4,??_xtoa+4
 10620  00271A  C045  F035         	movff	xtoa@n+5,??_xtoa+5
 10621  00271E  C046  F036         	movff	xtoa@n+6,??_xtoa+6
 10622  002722  C047  F037         	movff	xtoa@n+7,??_xtoa+7
 10623  002726  0E05               	movlw	5
 10624  002728  D009               	goto	u9070
 10625  00272A                     u9075:
 10626  00272A  90D8               	bcf	status,0,c
 10627  00272C  3237               	rrcf	??_xtoa+7,f,c
 10628  00272E  3236               	rrcf	??_xtoa+6,f,c
 10629  002730  3235               	rrcf	??_xtoa+5,f,c
 10630  002732  3234               	rrcf	??_xtoa+4,f,c
 10631  002734  3233               	rrcf	??_xtoa+3,f,c
 10632  002736  3232               	rrcf	??_xtoa+2,f,c
 10633  002738  3231               	rrcf	??_xtoa+1,f,c
 10634  00273A  3230               	rrcf	??_xtoa,f,c
 10635  00273C                     u9070:
 10636  00273C  2EE8               	decfsz	wreg,f,c
 10637  00273E  D7F5               	goto	u9075
 10638  002740  C030  F040         	movff	??_xtoa,xtoa@n
 10639  002744  C031  F041         	movff	??_xtoa+1,xtoa@n+1
 10640  002748  C032  F042         	movff	??_xtoa+2,xtoa@n+2
 10641  00274C  C033  F043         	movff	??_xtoa+3,xtoa@n+3
 10642  002750  C034  F044         	movff	??_xtoa+4,xtoa@n+4
 10643  002754  C035  F045         	movff	??_xtoa+5,xtoa@n+5
 10644  002758  C036  F046         	movff	??_xtoa+6,xtoa@n+6
 10645  00275C  C037  F047         	movff	??_xtoa+7,xtoa@n+7
 10646  002760                     l7914:
 10647                           
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10649  002760  BE49               	btfsc	xtoa@i+1,7,c
 10650  002762  D021               	goto	u9120
 10651  002764  5049               	movf	xtoa@i+1,w,c
 10652  002766  E104               	bnz	u9080
 10653  002768  0E02               	movlw	2
 10654  00276A  5C48               	subwf	xtoa@i,w,c
 10655  00276C  A0D8               	btfss	status,0,c
 10656  00276E  D01B               	goto	u9120
 10657  002770                     u9080:
 10658  002770  5040               	movf	xtoa@n,w,c
 10659  002772  1041               	iorwf	xtoa@n+1,w,c
 10660  002774  1042               	iorwf	xtoa@n+2,w,c
 10661  002776  1043               	iorwf	xtoa@n+3,w,c
 10662  002778  1044               	iorwf	xtoa@n+4,w,c
 10663  00277A  1045               	iorwf	xtoa@n+5,w,c
 10664  00277C  1046               	iorwf	xtoa@n+6,w,c
 10665  00277E  1047               	iorwf	xtoa@n+7,w,c
 10666  002780  A4D8               	btfss	status,2,c
 10667  002782  D75B               	goto	l7884
 10668  002784  BE3D               	btfsc	xtoa@p+1,7,c
 10669  002786  D005               	goto	u9100
 10670  002788  503D               	movf	xtoa@p+1,w,c
 10671  00278A  E102               	bnz	u9101
 10672  00278C  043C               	decf	xtoa@p,w,c
 10673  00278E  B0D8               	btfsc	status,0,c
 10674  002790                     u9101:
 10675  002790  D754               	goto	l7884
 10676  002792                     u9100:
 10677  002792  BE3F               	btfsc	xtoa@w+1,7,c
 10678  002794  D008               	goto	u9120
 10679  002796  503F               	movf	xtoa@w+1,w,c
 10680  002798  E103               	bnz	u9110
 10681  00279A  043E               	decf	xtoa@w,w,c
 10682  00279C  A0D8               	btfss	status,0,c
 10683  00279E  D003               	goto	u9120
 10684  0027A0                     u9110:
 10685  0027A0  0100               	movlb	0	; () banked
 10686  0027A2  B3E5               	btfsc	_flags& (0+255),1,b
 10687  0027A4  D74A               	goto	l7884
 10688  0027A6                     u9120:
 10689                           
 10690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10691  0027A6  0100               	movlb	0	; () banked
 10692  0027A8  A9E5               	btfss	_flags& (0+255),4,b
 10693  0027AA  D016               	goto	l7930
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10697  0027AC  0648               	decf	xtoa@i,f,c
 10698  0027AE  A0D8               	btfss	status,0,c
 10699  0027B0  0649               	decf	xtoa@i+1,f,c
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10703  0027B2  0E61               	movlw	low _dbuf
 10704  0027B4  2448               	addwf	xtoa@i,w,c
 10705  0027B6  6ED9               	movwf	fsr2l,c
 10706  0027B8  0E01               	movlw	high _dbuf
 10707  0027BA  2049               	addwfc	xtoa@i+1,w,c
 10708  0027BC  6EDA               	movwf	fsr2h,c
 10709  0027BE  C02F  FFDF         	movff	xtoa@x,indf2
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10713  0027C2  0648               	decf	xtoa@i,f,c
 10714  0027C4  A0D8               	btfss	status,0,c
 10715  0027C6  0649               	decf	xtoa@i+1,f,c
 10716                           
 10717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10718  0027C8  0E61               	movlw	low _dbuf
 10719  0027CA  2448               	addwf	xtoa@i,w,c
 10720  0027CC  6ED9               	movwf	fsr2l,c
 10721  0027CE  0E01               	movlw	high _dbuf
 10722  0027D0  2049               	addwfc	xtoa@i+1,w,c
 10723  0027D2  6EDA               	movwf	fsr2h,c
 10724  0027D4  0E30               	movlw	48
 10725  0027D6  6EDF               	movwf	indf2,c
 10726  0027D8                     l7930:
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10730  0027D8  C025  F01A         	movff	xtoa@fp,pad@fp
 10731  0027DC  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 10732  0027E0  0E61               	movlw	low _dbuf
 10733  0027E2  2448               	addwf	xtoa@i,w,c
 10734  0027E4  6E1C               	movwf	pad@buf,c
 10735  0027E6  0E01               	movlw	high _dbuf
 10736  0027E8  2049               	addwfc	xtoa@i+1,w,c
 10737  0027EA  6E1D               	movwf	pad@buf+1,c
 10738  0027EC  C03E  F01E         	movff	xtoa@w,pad@p
 10739  0027F0  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 10740  0027F4  EC42  F01B         	call	_pad	;wreg free
 10741  0027F8  C01A  F025         	movff	?_pad,?_xtoa
 10742  0027FC  C01B  F026         	movff	?_pad+1,?_xtoa+1
 10743  002800  0012               	return		;funcret
 10744  002802                     __end_of_xtoa:
 10745                           	opt callstack 0
 10746                           
 10747 ;; *************** function _toupper *****************
 10748 ;; Defined at:
 10749 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  c               2   11[COMRAM] int 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  2   11[COMRAM] int 
 10756 ;; Registers used:
 10757 ;;		wreg, status,2, status,0
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;Total ram usage:        8 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    3
 10770 ;; This function calls:
 10771 ;;		_islower
 10772 ;; This function is called by:
 10773 ;;		_xtoa
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text39
 10778  003CB4                     __ptext39:
 10779                           	opt callstack 0
 10780  003CB4                     _toupper:
 10781                           	opt callstack 23
 10782                           
 10783                           ;incstack = 0
 10784  003CB4  0E9F               	movlw	159
 10785  003CB6  6E0E               	movwf	??_toupper& (0+255),c
 10786  003CB8  0EFF               	movlw	255
 10787  003CBA  6E0F               	movwf	(??_toupper+1)& (0+255),c
 10788  003CBC  C00C  F010         	movff	toupper@c,??_toupper+2
 10789  003CC0  C00D  F011         	movff	toupper@c+1,??_toupper+3
 10790  003CC4  500E               	movf	??_toupper,w,c
 10791  003CC6  2610               	addwf	??_toupper+2,f,c
 10792  003CC8  500F               	movf	??_toupper+1,w,c
 10793  003CCA  2211               	addwfc	??_toupper+3,f,c
 10794  003CCC  5011               	movf	??_toupper+3,w,c
 10795  003CCE  E106               	bnz	u7650
 10796  003CD0  0E1A               	movlw	26
 10797  003CD2  5C10               	subwf	??_toupper+2,w,c
 10798  003CD4  B0D8               	btfsc	status,0,c
 10799  003CD6  D002               	goto	u7650
 10800  003CD8  0E01               	movlw	1
 10801  003CDA  D001               	goto	u7660
 10802  003CDC                     u7650:
 10803  003CDC  0E00               	movlw	0
 10804  003CDE                     u7660:
 10805  003CDE  6E12               	movwf	_toupper$1989,c
 10806  003CE0  6A13               	clrf	_toupper$1989+1,c
 10807  003CE2  5012               	movf	_toupper$1989,w,c
 10808  003CE4  1013               	iorwf	_toupper$1989+1,w,c
 10809  003CE6  B4D8               	btfsc	status,2,c
 10810  003CE8  D005               	goto	l1516
 10811  003CEA  0E5F               	movlw	95
 10812  003CEC  140C               	andwf	toupper@c,w,c
 10813  003CEE  6E0C               	movwf	?_toupper,c
 10814  003CF0  6A0D               	clrf	?_toupper+1,c
 10815  003CF2  0012               	return	
 10816  003CF4                     l1516:
 10817  003CF4  C00C  F00C         	movff	toupper@c,?_toupper
 10818  003CF8  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 10819  003CFC  0012               	return		;funcret
 10820  003CFE                     __end_of_toupper:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function _islower *****************
 10824 ;; Defined at:
 10825 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  c               2    5[COMRAM] int 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  2    5[COMRAM] int 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;Total ram usage:        6 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    2
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_toupper
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           	psect	text40
 10854  003EEA                     __ptext40:
 10855                           	opt callstack 0
 10856  003EEA                     _islower:
 10857                           	opt callstack 23
 10858                           
 10859                           ;incstack = 0
 10860  003EEA  0E9F               	movlw	159
 10861  003EEC  6E08               	movwf	??_islower& (0+255),c
 10862  003EEE  0EFF               	movlw	255
 10863  003EF0  6E09               	movwf	(??_islower+1)& (0+255),c
 10864  003EF2  C006  F00A         	movff	islower@c,??_islower+2
 10865  003EF6  C007  F00B         	movff	islower@c+1,??_islower+3
 10866  003EFA  5008               	movf	??_islower,w,c
 10867  003EFC  260A               	addwf	??_islower+2,f,c
 10868  003EFE  5009               	movf	??_islower+1,w,c
 10869  003F00  220B               	addwfc	??_islower+3,f,c
 10870  003F02  500B               	movf	??_islower+3,w,c
 10871  003F04  E106               	bnz	u7540
 10872  003F06  0E1A               	movlw	26
 10873  003F08  5C0A               	subwf	??_islower+2,w,c
 10874  003F0A  B0D8               	btfsc	status,0,c
 10875  003F0C  D002               	goto	u7540
 10876  003F0E  0E01               	movlw	1
 10877  003F10  D001               	goto	u7550
 10878  003F12                     u7540:
 10879  003F12  0E00               	movlw	0
 10880  003F14                     u7550:
 10881  003F14  6E06               	movwf	?_islower,c
 10882  003F16  6A07               	clrf	?_islower+1,c
 10883  003F18  0012               	return		;funcret
 10884  003F1A                     __end_of_islower:
 10885                           	opt callstack 0
 10886                           
 10887 ;; *************** function _isupper *****************
 10888 ;; Defined at:
 10889 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  c               2    5[COMRAM] int 
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;		None
 10894 ;; Return value:  Size  Location     Type
 10895 ;;                  2    5[COMRAM] int 
 10896 ;; Registers used:
 10897 ;;		wreg, status,2, status,0
 10898 ;; Tracked objects:
 10899 ;;		On entry : 0/0
 10900 ;;		On exit  : 0/0
 10901 ;;		Unchanged: 0/0
 10902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;Total ram usage:        6 bytes
 10908 ;; Hardware stack levels used:    1
 10909 ;; Hardware stack levels required when called:    2
 10910 ;; This function calls:
 10911 ;;		Nothing
 10912 ;; This function is called by:
 10913 ;;		_xtoa
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           	psect	text41
 10918  003F1A                     __ptext41:
 10919                           	opt callstack 0
 10920  003F1A                     _isupper:
 10921                           	opt callstack 24
 10922                           
 10923                           ;incstack = 0
 10924  003F1A  0EBF               	movlw	191
 10925  003F1C  6E08               	movwf	??_isupper& (0+255),c
 10926  003F1E  0EFF               	movlw	255
 10927  003F20  6E09               	movwf	(??_isupper+1)& (0+255),c
 10928  003F22  C006  F00A         	movff	isupper@c,??_isupper+2
 10929  003F26  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10930  003F2A  5008               	movf	??_isupper,w,c
 10931  003F2C  260A               	addwf	??_isupper+2,f,c
 10932  003F2E  5009               	movf	??_isupper+1,w,c
 10933  003F30  220B               	addwfc	??_isupper+3,f,c
 10934  003F32  500B               	movf	??_isupper+3,w,c
 10935  003F34  E106               	bnz	u7610
 10936  003F36  0E1A               	movlw	26
 10937  003F38  5C0A               	subwf	??_isupper+2,w,c
 10938  003F3A  B0D8               	btfsc	status,0,c
 10939  003F3C  D002               	goto	u7610
 10940  003F3E  0E01               	movlw	1
 10941  003F40  D001               	goto	u7620
 10942  003F42                     u7610:
 10943  003F42  0E00               	movlw	0
 10944  003F44                     u7620:
 10945  003F44  6E06               	movwf	?_isupper,c
 10946  003F46  6A07               	clrf	?_isupper+1,c
 10947  003F48  0012               	return		;funcret
 10948  003F4A                     __end_of_isupper:
 10949                           	opt callstack 0
 10950                           
 10951 ;; *************** function _isalpha *****************
 10952 ;; Defined at:
 10953 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  c               2    5[COMRAM] int 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;		None
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  2    5[COMRAM] int 
 10960 ;; Registers used:
 10961 ;;		wreg, status,2, status,0
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/0
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;Total ram usage:        6 bytes
 10972 ;; Hardware stack levels used:    1
 10973 ;; Hardware stack levels required when called:    2
 10974 ;; This function calls:
 10975 ;;		Nothing
 10976 ;; This function is called by:
 10977 ;;		_xtoa
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text42
 10982  003E84                     __ptext42:
 10983                           	opt callstack 0
 10984  003E84                     _isalpha:
 10985                           	opt callstack 24
 10986                           
 10987                           ;incstack = 0
 10988  003E84  0E9F               	movlw	159
 10989  003E86  6E08               	movwf	??_isalpha& (0+255),c
 10990  003E88  0EFF               	movlw	255
 10991  003E8A  6E09               	movwf	(??_isalpha+1)& (0+255),c
 10992  003E8C  0E20               	movlw	32
 10993  003E8E  1006               	iorwf	isalpha@c,w,c
 10994  003E90  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 10995  003E92  0E00               	movlw	0
 10996  003E94  1007               	iorwf	isalpha@c+1,w,c
 10997  003E96  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 10998  003E98  5008               	movf	??_isalpha,w,c
 10999  003E9A  260A               	addwf	??_isalpha+2,f,c
 11000  003E9C  5009               	movf	??_isalpha+1,w,c
 11001  003E9E  220B               	addwfc	??_isalpha+3,f,c
 11002  003EA0  500B               	movf	??_isalpha+3,w,c
 11003  003EA2  E106               	bnz	u7630
 11004  003EA4  0E1A               	movlw	26
 11005  003EA6  5C0A               	subwf	??_isalpha+2,w,c
 11006  003EA8  B0D8               	btfsc	status,0,c
 11007  003EAA  D002               	goto	u7630
 11008  003EAC  0E01               	movlw	1
 11009  003EAE  D001               	goto	u7640
 11010  003EB0                     u7630:
 11011  003EB0  0E00               	movlw	0
 11012  003EB2                     u7640:
 11013  003EB2  6E06               	movwf	?_isalpha,c
 11014  003EB4  6A07               	clrf	?_isalpha+1,c
 11015  003EB6  0012               	return		;funcret
 11016  003EB8                     __end_of_isalpha:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function _utoa *****************
 11020 ;; Defined at:
 11021 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11024 ;;		 -> NULL(0), 
 11025 ;;  d               8   38[COMRAM] unsigned long long 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  n               8   58[COMRAM] unsigned long long 
 11028 ;;  i               2   66[COMRAM] int 
 11029 ;;  w               2   56[COMRAM] int 
 11030 ;;  p               2   54[COMRAM] int 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  2   36[COMRAM] int 
 11033 ;; Registers used:
 11034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11040 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11043 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11044 ;;Total ram usage:       32 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    9
 11047 ;; This function calls:
 11048 ;;		___lodiv
 11049 ;;		___lomod
 11050 ;;		_pad
 11051 ;; This function is called by:
 11052 ;;		_vfpfcnvrt
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text43
 11057  002A04                     __ptext43:
 11058                           	opt callstack 0
 11059  002A04                     _utoa:
 11060                           	opt callstack 18
 11061                           
 11062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11063                           
 11064                           ;incstack = 0
 11065  002A04  0100               	movlb	0	; () banked
 11066  002A06  AFE4               	btfss	(_prec+1)& (0+255),7,b
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 11070  002A08  93E5               	bcf	_flags& (0+255),1,b
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 11074  002A0A  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 11075  002A0C  D005               	goto	u8910
 11076  002A0E  51E4               	movf	(_prec+1)& (0+255),w,b
 11077  002A10  E108               	bnz	l642
 11078  002A12  05E3               	decf	_prec& (0+255),w,b
 11079  002A14  B0D8               	btfsc	status,0,c
 11080  002A16  D005               	goto	l642
 11081  002A18                     u8910:
 11082                           
 11083                           ; BSR set to: 0
 11084  002A18  0E00               	movlw	0
 11085  002A1A  6E38               	movwf	utoa@p+1,c
 11086  002A1C  0E01               	movlw	1
 11087  002A1E  6E37               	movwf	utoa@p,c
 11088  002A20  D004               	goto	l644
 11089  002A22                     l642:
 11090                           
 11091                           ; BSR set to: 0
 11092  002A22  C0E3  F037         	movff	_prec,utoa@p
 11093  002A26  C0E4  F038         	movff	_prec+1,utoa@p+1
 11094  002A2A                     l644:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 11098  002A2A  C0E1  F039         	movff	_width,utoa@w
 11099  002A2E  C0E2  F03A         	movff	_width+1,utoa@w+1
 11100                           
 11101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 11102  002A32  C027  F03B         	movff	utoa@d,utoa@n
 11103  002A36  C028  F03C         	movff	utoa@d+1,utoa@n+1
 11104  002A3A  C029  F03D         	movff	utoa@d+2,utoa@n+2
 11105  002A3E  C02A  F03E         	movff	utoa@d+3,utoa@n+3
 11106  002A42  C02B  F03F         	movff	utoa@d+4,utoa@n+4
 11107  002A46  C02C  F040         	movff	utoa@d+5,utoa@n+5
 11108  002A4A  C02D  F041         	movff	utoa@d+6,utoa@n+6
 11109  002A4E  C02E  F042         	movff	utoa@d+7,utoa@n+7
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 11113  002A52  0E00               	movlw	0
 11114  002A54  6E44               	movwf	utoa@i+1,c
 11115  002A56  0E1F               	movlw	31
 11116  002A58  6E43               	movwf	utoa@i,c
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 11120  002A5A  0E00               	movlw	0
 11121  002A5C  0101               	movlb	1	; () banked
 11122  002A5E  6F80               	movwf	(_dbuf+31)& (0+255),b
 11123                           
 11124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11125  002A60  D076               	goto	l7854
 11126  002A62                     l7844:
 11127                           
 11128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 11129  002A62  0643               	decf	utoa@i,f,c
 11130  002A64  A0D8               	btfss	status,0,c
 11131  002A66  0644               	decf	utoa@i+1,f,c
 11132                           
 11133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 11134  002A68  0E61               	movlw	low _dbuf
 11135  002A6A  2443               	addwf	utoa@i,w,c
 11136  002A6C  6ED9               	movwf	fsr2l,c
 11137  002A6E  0E01               	movlw	high _dbuf
 11138  002A70  2044               	addwfc	utoa@i+1,w,c
 11139  002A72  6EDA               	movwf	fsr2h,c
 11140  002A74  C03B  F006         	movff	utoa@n,___lomod@dividend
 11141  002A78  C03C  F007         	movff	utoa@n+1,___lomod@dividend+1
 11142  002A7C  C03D  F008         	movff	utoa@n+2,___lomod@dividend+2
 11143  002A80  C03E  F009         	movff	utoa@n+3,___lomod@dividend+3
 11144  002A84  C03F  F00A         	movff	utoa@n+4,___lomod@dividend+4
 11145  002A88  C040  F00B         	movff	utoa@n+5,___lomod@dividend+5
 11146  002A8C  C041  F00C         	movff	utoa@n+6,___lomod@dividend+6
 11147  002A90  C042  F00D         	movff	utoa@n+7,___lomod@dividend+7
 11148  002A94  0E0A               	movlw	10
 11149  002A96  6E0E               	movwf	___lomod@divisor,c
 11150  002A98  0E00               	movlw	0
 11151  002A9A  6E0F               	movwf	___lomod@divisor+1,c
 11152  002A9C  0E00               	movlw	0
 11153  002A9E  6E10               	movwf	___lomod@divisor+2,c
 11154  002AA0  0E00               	movlw	0
 11155  002AA2  6E11               	movwf	___lomod@divisor+3,c
 11156  002AA4  0E00               	movlw	0
 11157  002AA6  6E12               	movwf	___lomod@divisor+4,c
 11158  002AA8  0E00               	movlw	0
 11159  002AAA  6E13               	movwf	___lomod@divisor+5,c
 11160  002AAC  0E00               	movlw	0
 11161  002AAE  6E14               	movwf	___lomod@divisor+6,c
 11162  002AB0  0E00               	movlw	0
 11163  002AB2  6E15               	movwf	___lomod@divisor+7,c
 11164  002AB4  EC96  F01A         	call	___lomod	;wreg free
 11165  002AB8  C006  F02F         	movff	?___lomod,??_utoa
 11166  002ABC  C007  F030         	movff	?___lomod+1,??_utoa+1
 11167  002AC0  C008  F031         	movff	?___lomod+2,??_utoa+2
 11168  002AC4  C009  F032         	movff	?___lomod+3,??_utoa+3
 11169  002AC8  C00A  F033         	movff	?___lomod+4,??_utoa+4
 11170  002ACC  C00B  F034         	movff	?___lomod+5,??_utoa+5
 11171  002AD0  C00C  F035         	movff	?___lomod+6,??_utoa+6
 11172  002AD4  C00D  F036         	movff	?___lomod+7,??_utoa+7
 11173  002AD8  502F               	movf	??_utoa,w,c
 11174  002ADA  0F30               	addlw	48
 11175  002ADC  6EDF               	movwf	indf2,c
 11176                           
 11177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 11178  002ADE  0637               	decf	utoa@p,f,c
 11179  002AE0  A0D8               	btfss	status,0,c
 11180  002AE2  0638               	decf	utoa@p+1,f,c
 11181                           
 11182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 11183  002AE4  0639               	decf	utoa@w,f,c
 11184  002AE6  A0D8               	btfss	status,0,c
 11185  002AE8  063A               	decf	utoa@w+1,f,c
 11186                           
 11187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 11188  002AEA  C03B  F006         	movff	utoa@n,___lodiv@dividend
 11189  002AEE  C03C  F007         	movff	utoa@n+1,___lodiv@dividend+1
 11190  002AF2  C03D  F008         	movff	utoa@n+2,___lodiv@dividend+2
 11191  002AF6  C03E  F009         	movff	utoa@n+3,___lodiv@dividend+3
 11192  002AFA  C03F  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 11193  002AFE  C040  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 11194  002B02  C041  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 11195  002B06  C042  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 11196  002B0A  0E0A               	movlw	10
 11197  002B0C  6E0E               	movwf	___lodiv@divisor,c
 11198  002B0E  0E00               	movlw	0
 11199  002B10  6E0F               	movwf	___lodiv@divisor+1,c
 11200  002B12  0E00               	movlw	0
 11201  002B14  6E10               	movwf	___lodiv@divisor+2,c
 11202  002B16  0E00               	movlw	0
 11203  002B18  6E11               	movwf	___lodiv@divisor+3,c
 11204  002B1A  0E00               	movlw	0
 11205  002B1C  6E12               	movwf	___lodiv@divisor+4,c
 11206  002B1E  0E00               	movlw	0
 11207  002B20  6E13               	movwf	___lodiv@divisor+5,c
 11208  002B22  0E00               	movlw	0
 11209  002B24  6E14               	movwf	___lodiv@divisor+6,c
 11210  002B26  0E00               	movlw	0
 11211  002B28  6E15               	movwf	___lodiv@divisor+7,c
 11212  002B2A  ECD2  F019         	call	___lodiv	;wreg free
 11213  002B2E  C006  F03B         	movff	?___lodiv,utoa@n
 11214  002B32  C007  F03C         	movff	?___lodiv+1,utoa@n+1
 11215  002B36  C008  F03D         	movff	?___lodiv+2,utoa@n+2
 11216  002B3A  C009  F03E         	movff	?___lodiv+3,utoa@n+3
 11217  002B3E  C00A  F03F         	movff	?___lodiv+4,utoa@n+4
 11218  002B42  C00B  F040         	movff	?___lodiv+5,utoa@n+5
 11219  002B46  C00C  F041         	movff	?___lodiv+6,utoa@n+6
 11220  002B4A  C00D  F042         	movff	?___lodiv+7,utoa@n+7
 11221  002B4E                     l7854:
 11222                           
 11223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11224  002B4E  5043               	movf	utoa@i,w,c
 11225  002B50  1044               	iorwf	utoa@i+1,w,c
 11226  002B52  B4D8               	btfsc	status,2,c
 11227  002B54  D01B               	goto	u8960
 11228  002B56  503B               	movf	utoa@n,w,c
 11229  002B58  103C               	iorwf	utoa@n+1,w,c
 11230  002B5A  103D               	iorwf	utoa@n+2,w,c
 11231  002B5C  103E               	iorwf	utoa@n+3,w,c
 11232  002B5E  103F               	iorwf	utoa@n+4,w,c
 11233  002B60  1040               	iorwf	utoa@n+5,w,c
 11234  002B62  1041               	iorwf	utoa@n+6,w,c
 11235  002B64  1042               	iorwf	utoa@n+7,w,c
 11236  002B66  A4D8               	btfss	status,2,c
 11237  002B68  D77C               	goto	l7844
 11238  002B6A  BE38               	btfsc	utoa@p+1,7,c
 11239  002B6C  D005               	goto	u8940
 11240  002B6E  5038               	movf	utoa@p+1,w,c
 11241  002B70  E102               	bnz	u8941
 11242  002B72  0437               	decf	utoa@p,w,c
 11243  002B74  B0D8               	btfsc	status,0,c
 11244  002B76                     u8941:
 11245  002B76  D775               	goto	l7844
 11246  002B78                     u8940:
 11247  002B78  BE3A               	btfsc	utoa@w+1,7,c
 11248  002B7A  D008               	goto	u8960
 11249  002B7C  503A               	movf	utoa@w+1,w,c
 11250  002B7E  E103               	bnz	u8950
 11251  002B80  0439               	decf	utoa@w,w,c
 11252  002B82  A0D8               	btfss	status,0,c
 11253  002B84  D003               	goto	u8960
 11254  002B86                     u8950:
 11255  002B86  0100               	movlb	0	; () banked
 11256  002B88  B3E5               	btfsc	_flags& (0+255),1,b
 11257  002B8A  D76B               	goto	l7844
 11258  002B8C                     u8960:
 11259                           
 11260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 11261  002B8C  C025  F01A         	movff	utoa@fp,pad@fp
 11262  002B90  C026  F01B         	movff	utoa@fp+1,pad@fp+1
 11263  002B94  0E61               	movlw	low _dbuf
 11264  002B96  2443               	addwf	utoa@i,w,c
 11265  002B98  6E1C               	movwf	pad@buf,c
 11266  002B9A  0E01               	movlw	high _dbuf
 11267  002B9C  2044               	addwfc	utoa@i+1,w,c
 11268  002B9E  6E1D               	movwf	pad@buf+1,c
 11269  002BA0  C039  F01E         	movff	utoa@w,pad@p
 11270  002BA4  C03A  F01F         	movff	utoa@w+1,pad@p+1
 11271  002BA8  EC42  F01B         	call	_pad	;wreg free
 11272  002BAC  C01A  F025         	movff	?_pad,?_utoa
 11273  002BB0  C01B  F026         	movff	?_pad+1,?_utoa+1
 11274  002BB4  0012               	return		;funcret
 11275  002BB6                     __end_of_utoa:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function ___lomod *****************
 11279 ;; Defined at:
 11280 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  dividend        8    5[COMRAM] unsigned long long 
 11283 ;;  divisor         8   13[COMRAM] unsigned long long 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  counter         1   21[COMRAM] unsigned char 
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  8    5[COMRAM] unsigned long long 
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11295 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11299 ;;Total ram usage:       17 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:    2
 11302 ;; This function calls:
 11303 ;;		Nothing
 11304 ;; This function is called by:
 11305 ;;		_utoa
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text44
 11310  00352C                     __ptext44:
 11311                           	opt callstack 0
 11312  00352C                     ___lomod:
 11313                           	opt callstack 24
 11314                           
 11315                           ;incstack = 0
 11316  00352C  500E               	movf	___lomod@divisor,w,c
 11317  00352E  100F               	iorwf	___lomod@divisor+1,w,c
 11318  003530  1010               	iorwf	___lomod@divisor+2,w,c
 11319  003532  1011               	iorwf	___lomod@divisor+3,w,c
 11320  003534  1012               	iorwf	___lomod@divisor+4,w,c
 11321  003536  1013               	iorwf	___lomod@divisor+5,w,c
 11322  003538  1014               	iorwf	___lomod@divisor+6,w,c
 11323  00353A  1015               	iorwf	___lomod@divisor+7,w,c
 11324  00353C  B4D8               	btfsc	status,2,c
 11325  00353E  D03C               	goto	l1182
 11326  003540  0E01               	movlw	1
 11327  003542  6E16               	movwf	___lomod@counter,c
 11328  003544  D00A               	goto	l7620
 11329  003546                     l7618:
 11330  003546  90D8               	bcf	status,0,c
 11331  003548  360E               	rlcf	___lomod@divisor,f,c
 11332  00354A  360F               	rlcf	___lomod@divisor+1,f,c
 11333  00354C  3610               	rlcf	___lomod@divisor+2,f,c
 11334  00354E  3611               	rlcf	___lomod@divisor+3,f,c
 11335  003550  3612               	rlcf	___lomod@divisor+4,f,c
 11336  003552  3613               	rlcf	___lomod@divisor+5,f,c
 11337  003554  3614               	rlcf	___lomod@divisor+6,f,c
 11338  003556  3615               	rlcf	___lomod@divisor+7,f,c
 11339  003558  2A16               	incf	___lomod@counter,f,c
 11340  00355A                     l7620:
 11341  00355A  AE15               	btfss	___lomod@divisor+7,7,c
 11342  00355C  D7F4               	goto	l7618
 11343  00355E                     u8420:
 11344  00355E  500E               	movf	___lomod@divisor,w,c
 11345  003560  5C06               	subwf	___lomod@dividend,w,c
 11346  003562  500F               	movf	___lomod@divisor+1,w,c
 11347  003564  5807               	subwfb	___lomod@dividend+1,w,c
 11348  003566  5010               	movf	___lomod@divisor+2,w,c
 11349  003568  5808               	subwfb	___lomod@dividend+2,w,c
 11350  00356A  5011               	movf	___lomod@divisor+3,w,c
 11351  00356C  5809               	subwfb	___lomod@dividend+3,w,c
 11352  00356E  5012               	movf	___lomod@divisor+4,w,c
 11353  003570  580A               	subwfb	___lomod@dividend+4,w,c
 11354  003572  5013               	movf	___lomod@divisor+5,w,c
 11355  003574  580B               	subwfb	___lomod@dividend+5,w,c
 11356  003576  5014               	movf	___lomod@divisor+6,w,c
 11357  003578  580C               	subwfb	___lomod@dividend+6,w,c
 11358  00357A  5015               	movf	___lomod@divisor+7,w,c
 11359  00357C  580D               	subwfb	___lomod@dividend+7,w,c
 11360  00357E  A0D8               	btfss	status,0,c
 11361  003580  D010               	goto	l7626
 11362  003582  500E               	movf	___lomod@divisor,w,c
 11363  003584  5E06               	subwf	___lomod@dividend,f,c
 11364  003586  500F               	movf	___lomod@divisor+1,w,c
 11365  003588  5A07               	subwfb	___lomod@dividend+1,f,c
 11366  00358A  5010               	movf	___lomod@divisor+2,w,c
 11367  00358C  5A08               	subwfb	___lomod@dividend+2,f,c
 11368  00358E  5011               	movf	___lomod@divisor+3,w,c
 11369  003590  5A09               	subwfb	___lomod@dividend+3,f,c
 11370  003592  5012               	movf	___lomod@divisor+4,w,c
 11371  003594  5A0A               	subwfb	___lomod@dividend+4,f,c
 11372  003596  5013               	movf	___lomod@divisor+5,w,c
 11373  003598  5A0B               	subwfb	___lomod@dividend+5,f,c
 11374  00359A  5014               	movf	___lomod@divisor+6,w,c
 11375  00359C  5A0C               	subwfb	___lomod@dividend+6,f,c
 11376  00359E  5015               	movf	___lomod@divisor+7,w,c
 11377  0035A0  5A0D               	subwfb	___lomod@dividend+7,f,c
 11378  0035A2                     l7626:
 11379  0035A2  90D8               	bcf	status,0,c
 11380  0035A4  3215               	rrcf	___lomod@divisor+7,f,c
 11381  0035A6  3214               	rrcf	___lomod@divisor+6,f,c
 11382  0035A8  3213               	rrcf	___lomod@divisor+5,f,c
 11383  0035AA  3212               	rrcf	___lomod@divisor+4,f,c
 11384  0035AC  3211               	rrcf	___lomod@divisor+3,f,c
 11385  0035AE  3210               	rrcf	___lomod@divisor+2,f,c
 11386  0035B0  320F               	rrcf	___lomod@divisor+1,f,c
 11387  0035B2  320E               	rrcf	___lomod@divisor,f,c
 11388  0035B4  2E16               	decfsz	___lomod@counter,f,c
 11389  0035B6  D7D3               	goto	u8420
 11390  0035B8                     l1182:
 11391  0035B8  C006  F006         	movff	___lomod@dividend,?___lomod
 11392  0035BC  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 11393  0035C0  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 11394  0035C4  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 11395  0035C8  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 11396  0035CC  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 11397  0035D0  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 11398  0035D4  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 11399  0035D8  0012               	return		;funcret
 11400  0035DA                     __end_of___lomod:
 11401                           	opt callstack 0
 11402                           
 11403 ;; *************** function ___lodiv *****************
 11404 ;; Defined at:
 11405 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  dividend        8    5[COMRAM] unsigned long long 
 11408 ;;  divisor         8   13[COMRAM] unsigned long long 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  quotient        8   21[COMRAM] unsigned long long 
 11411 ;;  counter         1   29[COMRAM] unsigned char 
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  8    5[COMRAM] unsigned long long 
 11414 ;; Registers used:
 11415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11421 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;Total ram usage:       25 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    2
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_utoa
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           	psect	text45
 11436  0033A4                     __ptext45:
 11437                           	opt callstack 0
 11438  0033A4                     ___lodiv:
 11439                           	opt callstack 24
 11440                           
 11441                           ;incstack = 0
 11442  0033A4  EE20  F016         	lfsr	2,___lodiv@quotient
 11443  0033A8  0E07               	movlw	7
 11444  0033AA                     u8371:
 11445  0033AA  6ADE               	clrf	postinc2,c
 11446  0033AC  06E8               	decf	wreg,f,c
 11447  0033AE  E2FD               	bc	u8371
 11448  0033B0  500E               	movf	___lodiv@divisor,w,c
 11449  0033B2  100F               	iorwf	___lodiv@divisor+1,w,c
 11450  0033B4  1010               	iorwf	___lodiv@divisor+2,w,c
 11451  0033B6  1011               	iorwf	___lodiv@divisor+3,w,c
 11452  0033B8  1012               	iorwf	___lodiv@divisor+4,w,c
 11453  0033BA  1013               	iorwf	___lodiv@divisor+5,w,c
 11454  0033BC  1014               	iorwf	___lodiv@divisor+6,w,c
 11455  0033BE  1015               	iorwf	___lodiv@divisor+7,w,c
 11456  0033C0  B4D8               	btfsc	status,2,c
 11457  0033C2  D046               	goto	l1172
 11458  0033C4  0E01               	movlw	1
 11459  0033C6  6E1E               	movwf	___lodiv@counter,c
 11460  0033C8  D00A               	goto	l7600
 11461  0033CA                     l7598:
 11462  0033CA  90D8               	bcf	status,0,c
 11463  0033CC  360E               	rlcf	___lodiv@divisor,f,c
 11464  0033CE  360F               	rlcf	___lodiv@divisor+1,f,c
 11465  0033D0  3610               	rlcf	___lodiv@divisor+2,f,c
 11466  0033D2  3611               	rlcf	___lodiv@divisor+3,f,c
 11467  0033D4  3612               	rlcf	___lodiv@divisor+4,f,c
 11468  0033D6  3613               	rlcf	___lodiv@divisor+5,f,c
 11469  0033D8  3614               	rlcf	___lodiv@divisor+6,f,c
 11470  0033DA  3615               	rlcf	___lodiv@divisor+7,f,c
 11471  0033DC  2A1E               	incf	___lodiv@counter,f,c
 11472  0033DE                     l7600:
 11473  0033DE  AE15               	btfss	___lodiv@divisor+7,7,c
 11474  0033E0  D7F4               	goto	l7598
 11475  0033E2                     u8390:
 11476  0033E2  90D8               	bcf	status,0,c
 11477  0033E4  3616               	rlcf	___lodiv@quotient,f,c
 11478  0033E6  3617               	rlcf	___lodiv@quotient+1,f,c
 11479  0033E8  3618               	rlcf	___lodiv@quotient+2,f,c
 11480  0033EA  3619               	rlcf	___lodiv@quotient+3,f,c
 11481  0033EC  361A               	rlcf	___lodiv@quotient+4,f,c
 11482  0033EE  361B               	rlcf	___lodiv@quotient+5,f,c
 11483  0033F0  361C               	rlcf	___lodiv@quotient+6,f,c
 11484  0033F2  361D               	rlcf	___lodiv@quotient+7,f,c
 11485  0033F4  500E               	movf	___lodiv@divisor,w,c
 11486  0033F6  5C06               	subwf	___lodiv@dividend,w,c
 11487  0033F8  500F               	movf	___lodiv@divisor+1,w,c
 11488  0033FA  5807               	subwfb	___lodiv@dividend+1,w,c
 11489  0033FC  5010               	movf	___lodiv@divisor+2,w,c
 11490  0033FE  5808               	subwfb	___lodiv@dividend+2,w,c
 11491  003400  5011               	movf	___lodiv@divisor+3,w,c
 11492  003402  5809               	subwfb	___lodiv@dividend+3,w,c
 11493  003404  5012               	movf	___lodiv@divisor+4,w,c
 11494  003406  580A               	subwfb	___lodiv@dividend+4,w,c
 11495  003408  5013               	movf	___lodiv@divisor+5,w,c
 11496  00340A  580B               	subwfb	___lodiv@dividend+5,w,c
 11497  00340C  5014               	movf	___lodiv@divisor+6,w,c
 11498  00340E  580C               	subwfb	___lodiv@dividend+6,w,c
 11499  003410  5015               	movf	___lodiv@divisor+7,w,c
 11500  003412  580D               	subwfb	___lodiv@dividend+7,w,c
 11501  003414  A0D8               	btfss	status,0,c
 11502  003416  D011               	goto	l7610
 11503  003418  500E               	movf	___lodiv@divisor,w,c
 11504  00341A  5E06               	subwf	___lodiv@dividend,f,c
 11505  00341C  500F               	movf	___lodiv@divisor+1,w,c
 11506  00341E  5A07               	subwfb	___lodiv@dividend+1,f,c
 11507  003420  5010               	movf	___lodiv@divisor+2,w,c
 11508  003422  5A08               	subwfb	___lodiv@dividend+2,f,c
 11509  003424  5011               	movf	___lodiv@divisor+3,w,c
 11510  003426  5A09               	subwfb	___lodiv@dividend+3,f,c
 11511  003428  5012               	movf	___lodiv@divisor+4,w,c
 11512  00342A  5A0A               	subwfb	___lodiv@dividend+4,f,c
 11513  00342C  5013               	movf	___lodiv@divisor+5,w,c
 11514  00342E  5A0B               	subwfb	___lodiv@dividend+5,f,c
 11515  003430  5014               	movf	___lodiv@divisor+6,w,c
 11516  003432  5A0C               	subwfb	___lodiv@dividend+6,f,c
 11517  003434  5015               	movf	___lodiv@divisor+7,w,c
 11518  003436  5A0D               	subwfb	___lodiv@dividend+7,f,c
 11519  003438  8016               	bsf	___lodiv@quotient,0,c
 11520  00343A                     l7610:
 11521  00343A  90D8               	bcf	status,0,c
 11522  00343C  3215               	rrcf	___lodiv@divisor+7,f,c
 11523  00343E  3214               	rrcf	___lodiv@divisor+6,f,c
 11524  003440  3213               	rrcf	___lodiv@divisor+5,f,c
 11525  003442  3212               	rrcf	___lodiv@divisor+4,f,c
 11526  003444  3211               	rrcf	___lodiv@divisor+3,f,c
 11527  003446  3210               	rrcf	___lodiv@divisor+2,f,c
 11528  003448  320F               	rrcf	___lodiv@divisor+1,f,c
 11529  00344A  320E               	rrcf	___lodiv@divisor,f,c
 11530  00344C  2E1E               	decfsz	___lodiv@counter,f,c
 11531  00344E  D7C9               	goto	u8390
 11532  003450                     l1172:
 11533  003450  C016  F006         	movff	___lodiv@quotient,?___lodiv
 11534  003454  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 11535  003458  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 11536  00345C  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 11537  003460  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 11538  003464  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 11539  003468  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 11540  00346C  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 11541  003470  0012               	return		;funcret
 11542  003472                     __end_of___lodiv:
 11543                           	opt callstack 0
 11544                           
 11545 ;; *************** function _strncmp *****************
 11546 ;; Defined at:
 11547 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 11550 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
 11551 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
 11552 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 11553 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
 11554 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
 11555 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
 11556 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
 11557 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 11558 ;;		 -> STR_4(5), STR_1(7), 
 11559 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 11560 ;;		 -> STR_77(3), STR_73(3), STR_68(3), STR_63(3), 
 11561 ;;		 -> STR_59(3), 
 11562 ;;  n               2    9[COMRAM] unsigned int 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  r               2   14[COMRAM] PTR const unsigned char 
 11565 ;;		 -> STR_77(3), STR_73(3), STR_68(3), STR_63(3), 
 11566 ;;		 -> STR_59(3), 
 11567 ;;  l               2   12[COMRAM] PTR const unsigned char 
 11568 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
 11569 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
 11570 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 11571 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
 11572 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
 11573 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
 11574 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
 11575 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 11576 ;;		 -> STR_4(5), STR_1(7), 
 11577 ;; Return value:  Size  Location     Type
 11578 ;;                  2    5[COMRAM] int 
 11579 ;; Registers used:
 11580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11581 ;; Tracked objects:
 11582 ;;		On entry : 0/0
 11583 ;;		On exit  : 0/0
 11584 ;;		Unchanged: 0/0
 11585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11586 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11587 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11589 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11590 ;;Total ram usage:       11 bytes
 11591 ;; Hardware stack levels used:    1
 11592 ;; Hardware stack levels required when called:    2
 11593 ;; This function calls:
 11594 ;;		Nothing
 11595 ;; This function is called by:
 11596 ;;		_vfpfcnvrt
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text46
 11601  0035DA                     __ptext46:
 11602                           	opt callstack 0
 11603  0035DA                     _strncmp:
 11604                           	opt callstack 25
 11605                           
 11606                           ;incstack = 0
 11607  0035DA  C006  F00D         	movff	strncmp@_l,strncmp@l
 11608  0035DE  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 11609  0035E2  C008  F00F         	movff	strncmp@_r,strncmp@r
 11610  0035E6  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 11611  0035EA  060A               	decf	strncmp@n,f,c
 11612  0035EC  A0D8               	btfss	status,0,c
 11613  0035EE  060B               	decf	strncmp@n+1,f,c
 11614  0035F0  280A               	incf	strncmp@n,w,c
 11615  0035F2  E10F               	bnz	l7984
 11616  0035F4  280B               	incf	strncmp@n+1,w,c
 11617  0035F6  A4D8               	btfss	status,2,c
 11618  0035F8  D00C               	goto	l7984
 11619  0035FA  0E00               	movlw	0
 11620  0035FC  6E07               	movwf	?_strncmp+1,c
 11621  0035FE  0E00               	movlw	0
 11622  003600  6E06               	movwf	?_strncmp,c
 11623  003602  0012               	return	
 11624  003604                     l7982:
 11625  003604  4A0D               	infsnz	strncmp@l,f,c
 11626  003606  2A0E               	incf	strncmp@l+1,f,c
 11627  003608  4A0F               	infsnz	strncmp@r,f,c
 11628  00360A  2A10               	incf	strncmp@r+1,f,c
 11629  00360C  060A               	decf	strncmp@n,f,c
 11630  00360E  A0D8               	btfss	status,0,c
 11631  003610  060B               	decf	strncmp@n+1,f,c
 11632  003612                     l7984:
 11633  003612  C00D  FFF6         	movff	strncmp@l,tblptrl
 11634  003616  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 11635  00361A                     	if	0	;tblptru may be non-zero
 11636  00361A                     	endif
 11637  00361A                     	if	0	;tblptru may be non-zero
 11638  00361A                     	endif
 11639  00361A  0008               	tblrd		*
 11640  00361C  50F5               	movf	tablat,w,c
 11641  00361E  0900               	iorlw	0
 11642  003620  B4D8               	btfsc	status,2,c
 11643  003622  D01D               	goto	u9250
 11644  003624  C00F  FFF6         	movff	strncmp@r,tblptrl
 11645  003628  C010  FFF7         	movff	strncmp@r+1,tblptrh
 11646  00362C                     	if	0	;tblptru may be non-zero
 11647  00362C                     	endif
 11648  00362C                     	if	0	;tblptru may be non-zero
 11649  00362C                     	endif
 11650  00362C  0008               	tblrd		*
 11651  00362E  50F5               	movf	tablat,w,c
 11652  003630  0900               	iorlw	0
 11653  003632  B4D8               	btfsc	status,2,c
 11654  003634  D014               	goto	u9250
 11655  003636  500A               	movf	strncmp@n,w,c
 11656  003638  100B               	iorwf	strncmp@n+1,w,c
 11657  00363A  B4D8               	btfsc	status,2,c
 11658  00363C  D010               	goto	u9250
 11659  00363E  C00D  FFF6         	movff	strncmp@l,tblptrl
 11660  003642  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 11661  003646                     	if	0	;tblptru may be non-zero
 11662  003646                     	endif
 11663  003646                     	if	0	;tblptru may be non-zero
 11664  003646                     	endif
 11665  003646  0008               	tblrd		*
 11666  003648  CFF5 F00C          	movff	tablat,??_strncmp
 11667  00364C  C00F  FFF6         	movff	strncmp@r,tblptrl
 11668  003650  C010  FFF7         	movff	strncmp@r+1,tblptrh
 11669  003654                     	if	0	;tblptru may be non-zero
 11670  003654                     	endif
 11671  003654                     	if	0	;tblptru may be non-zero
 11672  003654                     	endif
 11673  003654  0008               	tblrd		*
 11674  003656  50F5               	movf	tablat,w,c
 11675  003658  180C               	xorwf	??_strncmp,w,c
 11676  00365A  B4D8               	btfsc	status,2,c
 11677  00365C  D7D3               	goto	l7982
 11678  00365E                     u9250:
 11679  00365E  C00D  FFF6         	movff	strncmp@l,tblptrl
 11680  003662  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 11681  003666                     	if	0	;tblptru may be non-zero
 11682  003666                     	endif
 11683  003666                     	if	0	;tblptru may be non-zero
 11684  003666                     	endif
 11685  003666  0008               	tblrd		*
 11686  003668  CFF5 F00C          	movff	tablat,??_strncmp
 11687  00366C  C00F  FFF6         	movff	strncmp@r,tblptrl
 11688  003670  C010  FFF7         	movff	strncmp@r+1,tblptrh
 11689  003674                     	if	0	;tblptru may be non-zero
 11690  003674                     	endif
 11691  003674                     	if	0	;tblptru may be non-zero
 11692  003674                     	endif
 11693  003674  0008               	tblrd		*
 11694  003676  50F5               	movf	tablat,w,c
 11695  003678  5C0C               	subwf	??_strncmp,w,c
 11696  00367A  6E06               	movwf	?_strncmp,c
 11697  00367C  6A07               	clrf	?_strncmp+1,c
 11698  00367E  A0D8               	btfss	status,0,c
 11699  003680  0607               	decf	?_strncmp+1,f,c
 11700  003682  0012               	return		;funcret
 11701  003684                     __end_of_strncmp:
 11702                           	opt callstack 0
 11703                           
 11704 ;; *************** function _stoa *****************
 11705 ;; Defined at:
 11706 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 11709 ;;		 -> NULL(0), 
 11710 ;;  s               2   20[COMRAM] PTR unsigned char 
 11711 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
 11712 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
 11713 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
 11714 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
 11715 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 11716 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;  nuls            7   23[COMRAM] unsigned char [7]
 11719 ;;  l               2   38[COMRAM] int 
 11720 ;;  p               2   36[COMRAM] int 
 11721 ;;  cp              2   34[COMRAM] PTR unsigned char 
 11722 ;;		 -> ?_printf(2), stoa@nuls(7), STR_51(16), STR_49(14), 
 11723 ;;		 -> STR_47(11), STR_45(9), STR_43(16), STR_41(13), 
 11724 ;;		 -> STR_39(13), STR_37(9), STR_35(13), STR_33(14), 
 11725 ;;		 -> STR_31(10), STR_27(9), STR_18(14), STR_16(16), 
 11726 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
 11727 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 11728 ;;  w               2   32[COMRAM] int 
 11729 ;;  i               2   30[COMRAM] int 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  2   18[COMRAM] int 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11740 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;Total ram usage:       22 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    7
 11746 ;; This function calls:
 11747 ;;		_fputc
 11748 ;;		_strlen
 11749 ;; This function is called by:
 11750 ;;		_vfpfcnvrt
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text47
 11755  002CFE                     __ptext47:
 11756                           	opt callstack 0
 11757  002CFE                     _stoa:
 11758                           	opt callstack 20
 11759                           
 11760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11761                           
 11762                           ;incstack = 0
 11763  002CFE  EE20  F0EC         	lfsr	2,stoa@F1144
 11764  002D02  EE10  F018         	lfsr	1,stoa@nuls
 11765  002D06  0E06               	movlw	6
 11766  002D08                     u8801:
 11767  002D08  CFDB FFE3          	movff	plusw2,plusw1
 11768  002D0C  06E8               	decf	wreg,f,c
 11769  002D0E  E2FC               	bc	u8801
 11770                           
 11771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11772  002D10  C015  F023         	movff	stoa@s,stoa@cp
 11773  002D14  C016  F024         	movff	stoa@s+1,stoa@cp+1
 11774                           
 11775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11776  002D18  5023               	movf	stoa@cp,w,c
 11777  002D1A  1024               	iorwf	stoa@cp+1,w,c
 11778  002D1C  A4D8               	btfss	status,2,c
 11779  002D1E  D004               	goto	l7798
 11780                           
 11781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11782  002D20  0E18               	movlw	low stoa@nuls
 11783  002D22  6E23               	movwf	stoa@cp,c
 11784  002D24  0E00               	movlw	high stoa@nuls
 11785  002D26  6E24               	movwf	stoa@cp+1,c
 11786  002D28                     l7798:
 11787                           
 11788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11789  002D28  C023  F006         	movff	stoa@cp,strlen@s
 11790  002D2C  C024  F007         	movff	stoa@cp+1,strlen@s+1
 11791  002D30  ECC5  F01E         	call	_strlen	;wreg free
 11792  002D34  C006  F027         	movff	?_strlen,stoa@l
 11793  002D38  C007  F028         	movff	?_strlen+1,stoa@l+1
 11794                           
 11795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11796  002D3C  C0E3  F025         	movff	_prec,stoa@p
 11797  002D40  C0E4  F026         	movff	_prec+1,stoa@p+1
 11798                           
 11799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11800  002D44  BE26               	btfsc	stoa@p+1,7,c
 11801  002D46  D00E               	goto	l623
 11802  002D48  5027               	movf	stoa@l,w,c
 11803  002D4A  5C25               	subwf	stoa@p,w,c
 11804  002D4C  5026               	movf	stoa@p+1,w,c
 11805  002D4E  0A80               	xorlw	128
 11806  002D50  6E17               	movwf	??_stoa& (0+255),c
 11807  002D52  5028               	movf	stoa@l+1,w,c
 11808  002D54  0A80               	xorlw	128
 11809  002D56  5817               	subwfb	??_stoa& (0+255),w,c
 11810  002D58  B0D8               	btfsc	status,0,c
 11811  002D5A  D004               	goto	l623
 11812  002D5C  C025  F027         	movff	stoa@p,stoa@l
 11813  002D60  C026  F028         	movff	stoa@p+1,stoa@l+1
 11814  002D64                     l623:
 11815                           
 11816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11817  002D64  C027  F025         	movff	stoa@l,stoa@p
 11818  002D68  C028  F026         	movff	stoa@l+1,stoa@p+1
 11819                           
 11820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11821  002D6C  C0E1  F021         	movff	_width,stoa@w
 11822  002D70  C0E2  F022         	movff	_width+1,stoa@w+1
 11823                           
 11824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11825  002D74  0100               	movlb	0	; () banked
 11826  002D76  A1E5               	btfss	_flags& (0+255),0,b
 11827  002D78  D00D               	goto	l7812
 11828  002D7A  D016               	goto	u8850
 11829  002D7C                     l7808:
 11830                           
 11831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11832  002D7C  0E00               	movlw	0
 11833  002D7E  6E0B               	movwf	fputc@c+1,c
 11834  002D80  0E20               	movlw	32
 11835  002D82  6E0A               	movwf	fputc@c,c
 11836  002D84  C013  F00C         	movff	stoa@fp,fputc@fp
 11837  002D88  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 11838  002D8C  EC8D  F01C         	call	_fputc	;wreg free
 11839                           
 11840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11841  002D90  4A27               	infsnz	stoa@l,f,c
 11842  002D92  2A28               	incf	stoa@l+1,f,c
 11843  002D94                     l7812:
 11844                           
 11845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11846  002D94  5021               	movf	stoa@w,w,c
 11847  002D96  5C27               	subwf	stoa@l,w,c
 11848  002D98  5028               	movf	stoa@l+1,w,c
 11849  002D9A  0A80               	xorlw	128
 11850  002D9C  6E17               	movwf	??_stoa& (0+255),c
 11851  002D9E  5022               	movf	stoa@w+1,w,c
 11852  002DA0  0A80               	xorlw	128
 11853  002DA2  5817               	subwfb	??_stoa& (0+255),w,c
 11854  002DA4  A0D8               	btfss	status,0,c
 11855  002DA6  D7EA               	goto	l7808
 11856  002DA8                     u8850:
 11857                           
 11858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11859  002DA8  0E00               	movlw	0
 11860  002DAA  6E20               	movwf	stoa@i+1,c
 11861  002DAC  0E00               	movlw	0
 11862  002DAE  6E1F               	movwf	stoa@i,c
 11863                           
 11864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11865  002DB0  D01F               	goto	l7822
 11866  002DB2                     l7816:
 11867                           
 11868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11869  002DB2  C023  FFF6         	movff	stoa@cp,tblptrl
 11870  002DB6  C024  FFF7         	movff	stoa@cp+1,tblptrh
 11871  002DBA  0E00               	movlw	low (__mediumconst shr (0+16))
 11872  002DBC  6EF8               	movwf	tblptru,c
 11873  002DBE  0E0F               	movlw	(high __ramtop+-1)
 11874  002DC0  64F7               	cpfsgt	tblptrh,c
 11875  002DC2  D003               	bra	u8867
 11876  002DC4  0008               	tblrd		*
 11877  002DC6  50F5               	movf	tablat,w,c
 11878  002DC8  D005               	bra	u8860
 11879  002DCA                     u8867:
 11880  002DCA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11881  002DCE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11882  002DD2  50E7               	movf	indf1,w,c
 11883  002DD4                     u8860:
 11884  002DD4  6E17               	movwf	??_stoa& (0+255),c
 11885  002DD6  5017               	movf	??_stoa,w,c
 11886  002DD8  6E0A               	movwf	fputc@c,c
 11887  002DDA  6A0B               	clrf	fputc@c+1,c
 11888  002DDC  C013  F00C         	movff	stoa@fp,fputc@fp
 11889  002DE0  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 11890  002DE4  EC8D  F01C         	call	_fputc	;wreg free
 11891                           
 11892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11893  002DE8  4A23               	infsnz	stoa@cp,f,c
 11894  002DEA  2A24               	incf	stoa@cp+1,f,c
 11895                           
 11896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11897  002DEC  4A1F               	infsnz	stoa@i,f,c
 11898  002DEE  2A20               	incf	stoa@i+1,f,c
 11899  002DF0                     l7822:
 11900                           
 11901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11902  002DF0  5025               	movf	stoa@p,w,c
 11903  002DF2  5C1F               	subwf	stoa@i,w,c
 11904  002DF4  5020               	movf	stoa@i+1,w,c
 11905  002DF6  0A80               	xorlw	128
 11906  002DF8  6E17               	movwf	??_stoa& (0+255),c
 11907  002DFA  5026               	movf	stoa@p+1,w,c
 11908  002DFC  0A80               	xorlw	128
 11909  002DFE  5817               	subwfb	??_stoa& (0+255),w,c
 11910  002E00  A0D8               	btfss	status,0,c
 11911  002E02  D7D7               	goto	l7816
 11912                           
 11913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11914  002E04  0100               	movlb	0	; () banked
 11915  002E06  B1E5               	btfsc	_flags& (0+255),0,b
 11916  002E08  D00D               	goto	l7830
 11917  002E0A  D016               	goto	u8890
 11918  002E0C                     l7826:
 11919                           
 11920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11921  002E0C  0E00               	movlw	0
 11922  002E0E  6E0B               	movwf	fputc@c+1,c
 11923  002E10  0E20               	movlw	32
 11924  002E12  6E0A               	movwf	fputc@c,c
 11925  002E14  C013  F00C         	movff	stoa@fp,fputc@fp
 11926  002E18  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 11927  002E1C  EC8D  F01C         	call	_fputc	;wreg free
 11928                           
 11929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11930  002E20  4A27               	infsnz	stoa@l,f,c
 11931  002E22  2A28               	incf	stoa@l+1,f,c
 11932  002E24                     l7830:
 11933                           
 11934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11935  002E24  5021               	movf	stoa@w,w,c
 11936  002E26  5C27               	subwf	stoa@l,w,c
 11937  002E28  5028               	movf	stoa@l+1,w,c
 11938  002E2A  0A80               	xorlw	128
 11939  002E2C  6E17               	movwf	??_stoa& (0+255),c
 11940  002E2E  5022               	movf	stoa@w+1,w,c
 11941  002E30  0A80               	xorlw	128
 11942  002E32  5817               	subwfb	??_stoa& (0+255),w,c
 11943  002E34  A0D8               	btfss	status,0,c
 11944  002E36  D7EA               	goto	l7826
 11945  002E38                     u8890:
 11946                           
 11947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11948                           
 11949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 11950  002E38  C027  F013         	movff	stoa@l,?_stoa
 11951  002E3C  C028  F014         	movff	stoa@l+1,?_stoa+1
 11952  002E40  0012               	return		;funcret
 11953  002E42                     __end_of_stoa:
 11954                           	opt callstack 0
 11955                           
 11956 ;; *************** function _dtoa *****************
 11957 ;; Defined at:
 11958 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11961 ;;		 -> NULL(0), 
 11962 ;;  d               8   38[COMRAM] long long 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  n               8   62[COMRAM] long long 
 11965 ;;  i               2   70[COMRAM] int 
 11966 ;;  s               2   60[COMRAM] int 
 11967 ;;  w               2   58[COMRAM] int 
 11968 ;;  p               2   56[COMRAM] int 
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  2   36[COMRAM] int 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11978 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;Total ram usage:       36 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    9
 11985 ;; This function calls:
 11986 ;;		___aodiv
 11987 ;;		___aomod
 11988 ;;		_abs
 11989 ;;		_pad
 11990 ;; This function is called by:
 11991 ;;		_vfpfcnvrt
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text48
 11996  002144                     __ptext48:
 11997                           	opt callstack 0
 11998  002144                     _dtoa:
 11999                           	opt callstack 18
 12000                           
 12001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12002                           
 12003                           ;incstack = 0
 12004  002144  C027  F03F         	movff	dtoa@d,dtoa@n
 12005  002148  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 12006  00214C  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 12007  002150  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 12008  002154  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 12009  002158  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 12010  00215C  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 12011  002160  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 12012                           
 12013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12014  002164  AE46               	btfss	dtoa@n+7,7,c
 12015  002166  D002               	goto	u8650
 12016  002168  0E01               	movlw	1
 12017  00216A  D001               	goto	u8660
 12018  00216C                     u8650:
 12019  00216C  0E00               	movlw	0
 12020  00216E                     u8660:
 12021  00216E  6E3D               	movwf	dtoa@s,c
 12022  002170  6A3E               	clrf	dtoa@s+1,c
 12023                           
 12024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12025  002172  503D               	movf	dtoa@s,w,c
 12026  002174  103E               	iorwf	dtoa@s+1,w,c
 12027  002176  B4D8               	btfsc	status,2,c
 12028  002178  D010               	goto	l7734
 12029                           
 12030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12031  00217A  1E46               	comf	dtoa@n+7,f,c
 12032  00217C  1E45               	comf	dtoa@n+6,f,c
 12033  00217E  1E44               	comf	dtoa@n+5,f,c
 12034  002180  1E43               	comf	dtoa@n+4,f,c
 12035  002182  1E42               	comf	dtoa@n+3,f,c
 12036  002184  1E41               	comf	dtoa@n+2,f,c
 12037  002186  1E40               	comf	dtoa@n+1,f,c
 12038  002188  6C3F               	negf	dtoa@n,c
 12039  00218A  0E00               	movlw	0
 12040  00218C  2240               	addwfc	dtoa@n+1,f,c
 12041  00218E  2241               	addwfc	dtoa@n+2,f,c
 12042  002190  2242               	addwfc	dtoa@n+3,f,c
 12043  002192  2243               	addwfc	dtoa@n+4,f,c
 12044  002194  2244               	addwfc	dtoa@n+5,f,c
 12045  002196  2245               	addwfc	dtoa@n+6,f,c
 12046  002198  2246               	addwfc	dtoa@n+7,f,c
 12047  00219A                     l7734:
 12048                           
 12049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12050  00219A  0100               	movlb	0	; () banked
 12051  00219C  AFE4               	btfss	(_prec+1)& (0+255),7,b
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12055  00219E  93E5               	bcf	_flags& (0+255),1,b
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12059  0021A0  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 12060  0021A2  D005               	goto	u8690
 12061  0021A4  51E4               	movf	(_prec+1)& (0+255),w,b
 12062  0021A6  E108               	bnz	l594
 12063  0021A8  05E3               	decf	_prec& (0+255),w,b
 12064  0021AA  B0D8               	btfsc	status,0,c
 12065  0021AC  D005               	goto	l594
 12066  0021AE                     u8690:
 12067                           
 12068                           ; BSR set to: 0
 12069  0021AE  0E00               	movlw	0
 12070  0021B0  6E3A               	movwf	dtoa@p+1,c
 12071  0021B2  0E01               	movlw	1
 12072  0021B4  6E39               	movwf	dtoa@p,c
 12073  0021B6  D004               	goto	l596
 12074  0021B8                     l594:
 12075                           
 12076                           ; BSR set to: 0
 12077  0021B8  C0E3  F039         	movff	_prec,dtoa@p
 12078  0021BC  C0E4  F03A         	movff	_prec+1,dtoa@p+1
 12079  0021C0                     l596:
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12083  0021C0  C0E1  F03B         	movff	_width,dtoa@w
 12084  0021C4  C0E2  F03C         	movff	_width+1,dtoa@w+1
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12088  0021C8  503D               	movf	dtoa@s,w,c
 12089  0021CA  103E               	iorwf	dtoa@s+1,w,c
 12090  0021CC  A4D8               	btfss	status,2,c
 12091  0021CE  D002               	goto	u8710
 12092                           
 12093                           ; BSR set to: 0
 12094  0021D0  A5E5               	btfss	_flags& (0+255),2,b
 12095  0021D2  D003               	goto	l7748
 12096  0021D4                     u8710:
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12100  0021D4  063B               	decf	dtoa@w,f,c
 12101  0021D6  A0D8               	btfss	status,0,c
 12102  0021D8  063C               	decf	dtoa@w+1,f,c
 12103  0021DA                     l7748:
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12107  0021DA  0E00               	movlw	0
 12108  0021DC  6E48               	movwf	dtoa@i+1,c
 12109  0021DE  0E1F               	movlw	31
 12110  0021E0  6E47               	movwf	dtoa@i,c
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12114  0021E2  0E00               	movlw	0
 12115  0021E4  0101               	movlb	1	; () banked
 12116  0021E6  6F80               	movwf	(_dbuf+31)& (0+255),b
 12117                           
 12118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12119  0021E8  D07C               	goto	l7762
 12120  0021EA                     l7752:
 12121                           
 12122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12123  0021EA  0647               	decf	dtoa@i,f,c
 12124  0021EC  A0D8               	btfss	status,0,c
 12125  0021EE  0648               	decf	dtoa@i+1,f,c
 12126                           
 12127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12128  0021F0  0E61               	movlw	low _dbuf
 12129  0021F2  2447               	addwf	dtoa@i,w,c
 12130  0021F4  6ED9               	movwf	fsr2l,c
 12131  0021F6  0E01               	movlw	high _dbuf
 12132  0021F8  2048               	addwfc	dtoa@i+1,w,c
 12133  0021FA  6EDA               	movwf	fsr2h,c
 12134  0021FC  C03F  F006         	movff	dtoa@n,___aomod@dividend
 12135  002200  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 12136  002204  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 12137  002208  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 12138  00220C  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 12139  002210  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 12140  002214  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 12141  002218  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 12142  00221C  0E0A               	movlw	10
 12143  00221E  6E0E               	movwf	___aomod@divisor,c
 12144  002220  0E00               	movlw	0
 12145  002222  6E0F               	movwf	___aomod@divisor+1,c
 12146  002224  0E00               	movlw	0
 12147  002226  6E10               	movwf	___aomod@divisor+2,c
 12148  002228  0E00               	movlw	0
 12149  00222A  6E11               	movwf	___aomod@divisor+3,c
 12150  00222C  0E00               	movlw	0
 12151  00222E  6E12               	movwf	___aomod@divisor+4,c
 12152  002230  0E00               	movlw	0
 12153  002232  6E13               	movwf	___aomod@divisor+5,c
 12154  002234  0E00               	movlw	0
 12155  002236  6E14               	movwf	___aomod@divisor+6,c
 12156  002238  0E00               	movlw	0
 12157  00223A  6E15               	movwf	___aomod@divisor+7,c
 12158  00223C  EC61  F018         	call	___aomod	;wreg free
 12159  002240  C006  F02F         	movff	?___aomod,??_dtoa
 12160  002244  C007  F030         	movff	?___aomod+1,??_dtoa+1
 12161  002248  C008  F031         	movff	?___aomod+2,??_dtoa+2
 12162  00224C  C009  F032         	movff	?___aomod+3,??_dtoa+3
 12163  002250  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 12164  002254  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 12165  002258  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 12166  00225C  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 12167  002260  C02F  F018         	movff	??_dtoa,abs@a
 12168  002264  C031  F019         	movff	??_dtoa+2,abs@a+1
 12169  002268  EC5C  F01F         	call	_abs	;wreg free
 12170  00226C  5018               	movf	?_abs,w,c
 12171  00226E  0F30               	addlw	48
 12172  002270  6EDF               	movwf	indf2,c
 12173                           
 12174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12175  002272  0639               	decf	dtoa@p,f,c
 12176  002274  A0D8               	btfss	status,0,c
 12177  002276  063A               	decf	dtoa@p+1,f,c
 12178                           
 12179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12180  002278  063B               	decf	dtoa@w,f,c
 12181  00227A  A0D8               	btfss	status,0,c
 12182  00227C  063C               	decf	dtoa@w+1,f,c
 12183                           
 12184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12185  00227E  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 12186  002282  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 12187  002286  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 12188  00228A  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 12189  00228E  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 12190  002292  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 12191  002296  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 12192  00229A  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 12193  00229E  0E0A               	movlw	10
 12194  0022A0  6E0E               	movwf	___aodiv@divisor,c
 12195  0022A2  0E00               	movlw	0
 12196  0022A4  6E0F               	movwf	___aodiv@divisor+1,c
 12197  0022A6  0E00               	movlw	0
 12198  0022A8  6E10               	movwf	___aodiv@divisor+2,c
 12199  0022AA  0E00               	movlw	0
 12200  0022AC  6E11               	movwf	___aodiv@divisor+3,c
 12201  0022AE  0E00               	movlw	0
 12202  0022B0  6E12               	movwf	___aodiv@divisor+4,c
 12203  0022B2  0E00               	movlw	0
 12204  0022B4  6E13               	movwf	___aodiv@divisor+5,c
 12205  0022B6  0E00               	movlw	0
 12206  0022B8  6E14               	movwf	___aodiv@divisor+6,c
 12207  0022BA  0E00               	movlw	0
 12208  0022BC  6E15               	movwf	___aodiv@divisor+7,c
 12209  0022BE  ECDB  F015         	call	___aodiv	;wreg free
 12210  0022C2  C006  F03F         	movff	?___aodiv,dtoa@n
 12211  0022C6  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 12212  0022CA  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 12213  0022CE  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 12214  0022D2  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 12215  0022D6  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 12216  0022DA  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 12217  0022DE  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 12218  0022E2                     l7762:
 12219                           
 12220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12221  0022E2  BE48               	btfsc	dtoa@i+1,7,c
 12222  0022E4  D020               	goto	u8760
 12223  0022E6  5048               	movf	dtoa@i+1,w,c
 12224  0022E8  E103               	bnz	u8720
 12225  0022EA  0447               	decf	dtoa@i,w,c
 12226  0022EC  A0D8               	btfss	status,0,c
 12227  0022EE  D01B               	goto	u8760
 12228  0022F0                     u8720:
 12229  0022F0  503F               	movf	dtoa@n,w,c
 12230  0022F2  1040               	iorwf	dtoa@n+1,w,c
 12231  0022F4  1041               	iorwf	dtoa@n+2,w,c
 12232  0022F6  1042               	iorwf	dtoa@n+3,w,c
 12233  0022F8  1043               	iorwf	dtoa@n+4,w,c
 12234  0022FA  1044               	iorwf	dtoa@n+5,w,c
 12235  0022FC  1045               	iorwf	dtoa@n+6,w,c
 12236  0022FE  1046               	iorwf	dtoa@n+7,w,c
 12237  002300  A4D8               	btfss	status,2,c
 12238  002302  D773               	goto	l7752
 12239  002304  BE3A               	btfsc	dtoa@p+1,7,c
 12240  002306  D005               	goto	u8740
 12241  002308  503A               	movf	dtoa@p+1,w,c
 12242  00230A  E102               	bnz	u8741
 12243  00230C  0439               	decf	dtoa@p,w,c
 12244  00230E  B0D8               	btfsc	status,0,c
 12245  002310                     u8741:
 12246  002310  D76C               	goto	l7752
 12247  002312                     u8740:
 12248  002312  BE3C               	btfsc	dtoa@w+1,7,c
 12249  002314  D008               	goto	u8760
 12250  002316  503C               	movf	dtoa@w+1,w,c
 12251  002318  E103               	bnz	u8750
 12252  00231A  043B               	decf	dtoa@w,w,c
 12253  00231C  A0D8               	btfss	status,0,c
 12254  00231E  D003               	goto	u8760
 12255  002320                     u8750:
 12256  002320  0100               	movlb	0	; () banked
 12257  002322  B3E5               	btfsc	_flags& (0+255),1,b
 12258  002324  D762               	goto	l7752
 12259  002326                     u8760:
 12260                           
 12261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12262  002326  503D               	movf	dtoa@s,w,c
 12263  002328  103E               	iorwf	dtoa@s+1,w,c
 12264  00232A  A4D8               	btfss	status,2,c
 12265  00232C  D003               	goto	u8780
 12266  00232E  0100               	movlb	0	; () banked
 12267  002330  A5E5               	btfss	_flags& (0+255),2,b
 12268  002332  D017               	goto	l7786
 12269  002334                     u8780:
 12270                           
 12271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12272  002334  0647               	decf	dtoa@i,f,c
 12273  002336  A0D8               	btfss	status,0,c
 12274  002338  0648               	decf	dtoa@i+1,f,c
 12275                           
 12276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12277  00233A  503D               	movf	dtoa@s,w,c
 12278  00233C  103E               	iorwf	dtoa@s+1,w,c
 12279  00233E  A4D8               	btfss	status,2,c
 12280  002340  D004               	goto	l7782
 12281  002342  0E00               	movlw	0
 12282  002344  6E38               	movwf	_dtoa$1365+1,c
 12283  002346  0E2B               	movlw	43
 12284  002348  D003               	goto	L19
 12285  00234A                     l7782:
 12286  00234A  0E00               	movlw	0
 12287  00234C  6E38               	movwf	_dtoa$1365+1,c
 12288  00234E  0E2D               	movlw	45
 12289  002350                     L19:
 12290  002350  6E37               	movwf	_dtoa$1365,c
 12291  002352  0E61               	movlw	low _dbuf
 12292  002354  2447               	addwf	dtoa@i,w,c
 12293  002356  6ED9               	movwf	fsr2l,c
 12294  002358  0E01               	movlw	high _dbuf
 12295  00235A  2048               	addwfc	dtoa@i+1,w,c
 12296  00235C  6EDA               	movwf	fsr2h,c
 12297  00235E  C037  FFDF         	movff	_dtoa$1365,indf2
 12298  002362                     l7786:
 12299                           
 12300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12301  002362  C025  F01A         	movff	dtoa@fp,pad@fp
 12302  002366  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 12303  00236A  0E61               	movlw	low _dbuf
 12304  00236C  2447               	addwf	dtoa@i,w,c
 12305  00236E  6E1C               	movwf	pad@buf,c
 12306  002370  0E01               	movlw	high _dbuf
 12307  002372  2048               	addwfc	dtoa@i+1,w,c
 12308  002374  6E1D               	movwf	pad@buf+1,c
 12309  002376  C03B  F01E         	movff	dtoa@w,pad@p
 12310  00237A  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 12311  00237E  EC42  F01B         	call	_pad	;wreg free
 12312  002382  C01A  F025         	movff	?_pad,?_dtoa
 12313  002386  C01B  F026         	movff	?_pad+1,?_dtoa+1
 12314  00238A  0012               	return		;funcret
 12315  00238C                     __end_of_dtoa:
 12316                           	opt callstack 0
 12317                           
 12318 ;; *************** function _abs *****************
 12319 ;; Defined at:
 12320 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;  a               2   23[COMRAM] int 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  2   23[COMRAM] int 
 12327 ;; Registers used:
 12328 ;;		wreg, status,2, status,0
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;Total ram usage:        4 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    2
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_tirePositioning
 12345 ;;		_opErrorCorrectionDegrees
 12346 ;;		_dtoa
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text49
 12351  003EB8                     __ptext49:
 12352                           	opt callstack 0
 12353  003EB8                     _abs:
 12354                           	opt callstack 24
 12355                           
 12356                           ;incstack = 0
 12357  003EB8  BE19               	btfsc	abs@a+1,7,c
 12358  003EBA  D005               	goto	u7560
 12359  003EBC  5019               	movf	abs@a+1,w,c
 12360  003EBE  E110               	bnz	l1409
 12361  003EC0  0418               	decf	abs@a,w,c
 12362  003EC2  B0D8               	btfsc	status,0,c
 12363  003EC4  D00D               	goto	l1409
 12364  003EC6                     u7560:
 12365  003EC6  C018  F01A         	movff	abs@a,??_abs
 12366  003ECA  C019  F01B         	movff	abs@a+1,??_abs+1
 12367  003ECE  1E1A               	comf	??_abs,f,c
 12368  003ED0  1E1B               	comf	??_abs+1,f,c
 12369  003ED2  4A1A               	infsnz	??_abs,f,c
 12370  003ED4  2A1B               	incf	??_abs+1,f,c
 12371  003ED6  C01A  F018         	movff	??_abs,?_abs
 12372  003EDA  C01B  F019         	movff	??_abs+1,?_abs+1
 12373  003EDE  0012               	return	
 12374  003EE0                     l1409:
 12375  003EE0  C018  F018         	movff	abs@a,?_abs
 12376  003EE4  C019  F019         	movff	abs@a+1,?_abs+1
 12377  003EE8  0012               	return		;funcret
 12378  003EEA                     __end_of_abs:
 12379                           	opt callstack 0
 12380                           
 12381 ;; *************** function ___aomod *****************
 12382 ;; Defined at:
 12383 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  dividend        8    5[COMRAM] long long 
 12386 ;;  divisor         8   13[COMRAM] long long 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  sign            1   22[COMRAM] unsigned char 
 12389 ;;  counter         1   21[COMRAM] unsigned char 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  8    5[COMRAM] long long 
 12392 ;; Registers used:
 12393 ;;		wreg, status,2, status,0
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12399 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12402 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;Total ram usage:       18 bytes
 12404 ;; Hardware stack levels used:    1
 12405 ;; Hardware stack levels required when called:    2
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_dtoa
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           	psect	text50
 12414  0030C2                     __ptext50:
 12415                           	opt callstack 0
 12416  0030C2                     ___aomod:
 12417                           	opt callstack 24
 12418                           
 12419                           ;incstack = 0
 12420  0030C2  0E00               	movlw	0
 12421  0030C4  6E17               	movwf	___aomod@sign,c
 12422  0030C6  AE0D               	btfss	___aomod@dividend+7,7,c
 12423  0030C8  D012               	goto	l7230
 12424  0030CA  1E0D               	comf	___aomod@dividend+7,f,c
 12425  0030CC  1E0C               	comf	___aomod@dividend+6,f,c
 12426  0030CE  1E0B               	comf	___aomod@dividend+5,f,c
 12427  0030D0  1E0A               	comf	___aomod@dividend+4,f,c
 12428  0030D2  1E09               	comf	___aomod@dividend+3,f,c
 12429  0030D4  1E08               	comf	___aomod@dividend+2,f,c
 12430  0030D6  1E07               	comf	___aomod@dividend+1,f,c
 12431  0030D8  6C06               	negf	___aomod@dividend,c
 12432  0030DA  0E00               	movlw	0
 12433  0030DC  2207               	addwfc	___aomod@dividend+1,f,c
 12434  0030DE  2208               	addwfc	___aomod@dividend+2,f,c
 12435  0030E0  2209               	addwfc	___aomod@dividend+3,f,c
 12436  0030E2  220A               	addwfc	___aomod@dividend+4,f,c
 12437  0030E4  220B               	addwfc	___aomod@dividend+5,f,c
 12438  0030E6  220C               	addwfc	___aomod@dividend+6,f,c
 12439  0030E8  220D               	addwfc	___aomod@dividend+7,f,c
 12440  0030EA  0E01               	movlw	1
 12441  0030EC  6E17               	movwf	___aomod@sign,c
 12442  0030EE                     l7230:
 12443  0030EE  AE15               	btfss	___aomod@divisor+7,7,c
 12444  0030F0  D010               	goto	l7234
 12445  0030F2  1E15               	comf	___aomod@divisor+7,f,c
 12446  0030F4  1E14               	comf	___aomod@divisor+6,f,c
 12447  0030F6  1E13               	comf	___aomod@divisor+5,f,c
 12448  0030F8  1E12               	comf	___aomod@divisor+4,f,c
 12449  0030FA  1E11               	comf	___aomod@divisor+3,f,c
 12450  0030FC  1E10               	comf	___aomod@divisor+2,f,c
 12451  0030FE  1E0F               	comf	___aomod@divisor+1,f,c
 12452  003100  6C0E               	negf	___aomod@divisor,c
 12453  003102  0E00               	movlw	0
 12454  003104  220F               	addwfc	___aomod@divisor+1,f,c
 12455  003106  2210               	addwfc	___aomod@divisor+2,f,c
 12456  003108  2211               	addwfc	___aomod@divisor+3,f,c
 12457  00310A  2212               	addwfc	___aomod@divisor+4,f,c
 12458  00310C  2213               	addwfc	___aomod@divisor+5,f,c
 12459  00310E  2214               	addwfc	___aomod@divisor+6,f,c
 12460  003110  2215               	addwfc	___aomod@divisor+7,f,c
 12461  003112                     l7234:
 12462  003112  500E               	movf	___aomod@divisor,w,c
 12463  003114  100F               	iorwf	___aomod@divisor+1,w,c
 12464  003116  1010               	iorwf	___aomod@divisor+2,w,c
 12465  003118  1011               	iorwf	___aomod@divisor+3,w,c
 12466  00311A  1012               	iorwf	___aomod@divisor+4,w,c
 12467  00311C  1013               	iorwf	___aomod@divisor+5,w,c
 12468  00311E  1014               	iorwf	___aomod@divisor+6,w,c
 12469  003120  1015               	iorwf	___aomod@divisor+7,w,c
 12470  003122  B4D8               	btfsc	status,2,c
 12471  003124  D03C               	goto	l7250
 12472  003126  0E01               	movlw	1
 12473  003128  6E16               	movwf	___aomod@counter,c
 12474  00312A  D00A               	goto	l7240
 12475  00312C                     l7238:
 12476  00312C  90D8               	bcf	status,0,c
 12477  00312E  360E               	rlcf	___aomod@divisor,f,c
 12478  003130  360F               	rlcf	___aomod@divisor+1,f,c
 12479  003132  3610               	rlcf	___aomod@divisor+2,f,c
 12480  003134  3611               	rlcf	___aomod@divisor+3,f,c
 12481  003136  3612               	rlcf	___aomod@divisor+4,f,c
 12482  003138  3613               	rlcf	___aomod@divisor+5,f,c
 12483  00313A  3614               	rlcf	___aomod@divisor+6,f,c
 12484  00313C  3615               	rlcf	___aomod@divisor+7,f,c
 12485  00313E  2A16               	incf	___aomod@counter,f,c
 12486  003140                     l7240:
 12487  003140  AE15               	btfss	___aomod@divisor+7,7,c
 12488  003142  D7F4               	goto	l7238
 12489  003144                     u7800:
 12490  003144  500E               	movf	___aomod@divisor,w,c
 12491  003146  5C06               	subwf	___aomod@dividend,w,c
 12492  003148  500F               	movf	___aomod@divisor+1,w,c
 12493  00314A  5807               	subwfb	___aomod@dividend+1,w,c
 12494  00314C  5010               	movf	___aomod@divisor+2,w,c
 12495  00314E  5808               	subwfb	___aomod@dividend+2,w,c
 12496  003150  5011               	movf	___aomod@divisor+3,w,c
 12497  003152  5809               	subwfb	___aomod@dividend+3,w,c
 12498  003154  5012               	movf	___aomod@divisor+4,w,c
 12499  003156  580A               	subwfb	___aomod@dividend+4,w,c
 12500  003158  5013               	movf	___aomod@divisor+5,w,c
 12501  00315A  580B               	subwfb	___aomod@dividend+5,w,c
 12502  00315C  5014               	movf	___aomod@divisor+6,w,c
 12503  00315E  580C               	subwfb	___aomod@dividend+6,w,c
 12504  003160  5015               	movf	___aomod@divisor+7,w,c
 12505  003162  580D               	subwfb	___aomod@dividend+7,w,c
 12506  003164  A0D8               	btfss	status,0,c
 12507  003166  D010               	goto	l7246
 12508  003168  500E               	movf	___aomod@divisor,w,c
 12509  00316A  5E06               	subwf	___aomod@dividend,f,c
 12510  00316C  500F               	movf	___aomod@divisor+1,w,c
 12511  00316E  5A07               	subwfb	___aomod@dividend+1,f,c
 12512  003170  5010               	movf	___aomod@divisor+2,w,c
 12513  003172  5A08               	subwfb	___aomod@dividend+2,f,c
 12514  003174  5011               	movf	___aomod@divisor+3,w,c
 12515  003176  5A09               	subwfb	___aomod@dividend+3,f,c
 12516  003178  5012               	movf	___aomod@divisor+4,w,c
 12517  00317A  5A0A               	subwfb	___aomod@dividend+4,f,c
 12518  00317C  5013               	movf	___aomod@divisor+5,w,c
 12519  00317E  5A0B               	subwfb	___aomod@dividend+5,f,c
 12520  003180  5014               	movf	___aomod@divisor+6,w,c
 12521  003182  5A0C               	subwfb	___aomod@dividend+6,f,c
 12522  003184  5015               	movf	___aomod@divisor+7,w,c
 12523  003186  5A0D               	subwfb	___aomod@dividend+7,f,c
 12524  003188                     l7246:
 12525  003188  90D8               	bcf	status,0,c
 12526  00318A  3215               	rrcf	___aomod@divisor+7,f,c
 12527  00318C  3214               	rrcf	___aomod@divisor+6,f,c
 12528  00318E  3213               	rrcf	___aomod@divisor+5,f,c
 12529  003190  3212               	rrcf	___aomod@divisor+4,f,c
 12530  003192  3211               	rrcf	___aomod@divisor+3,f,c
 12531  003194  3210               	rrcf	___aomod@divisor+2,f,c
 12532  003196  320F               	rrcf	___aomod@divisor+1,f,c
 12533  003198  320E               	rrcf	___aomod@divisor,f,c
 12534  00319A  2E16               	decfsz	___aomod@counter,f,c
 12535  00319C  D7D3               	goto	u7800
 12536  00319E                     l7250:
 12537  00319E  5017               	movf	___aomod@sign,w,c
 12538  0031A0  B4D8               	btfsc	status,2,c
 12539  0031A2  D010               	goto	l7254
 12540  0031A4  1E0D               	comf	___aomod@dividend+7,f,c
 12541  0031A6  1E0C               	comf	___aomod@dividend+6,f,c
 12542  0031A8  1E0B               	comf	___aomod@dividend+5,f,c
 12543  0031AA  1E0A               	comf	___aomod@dividend+4,f,c
 12544  0031AC  1E09               	comf	___aomod@dividend+3,f,c
 12545  0031AE  1E08               	comf	___aomod@dividend+2,f,c
 12546  0031B0  1E07               	comf	___aomod@dividend+1,f,c
 12547  0031B2  6C06               	negf	___aomod@dividend,c
 12548  0031B4  0E00               	movlw	0
 12549  0031B6  2207               	addwfc	___aomod@dividend+1,f,c
 12550  0031B8  2208               	addwfc	___aomod@dividend+2,f,c
 12551  0031BA  2209               	addwfc	___aomod@dividend+3,f,c
 12552  0031BC  220A               	addwfc	___aomod@dividend+4,f,c
 12553  0031BE  220B               	addwfc	___aomod@dividend+5,f,c
 12554  0031C0  220C               	addwfc	___aomod@dividend+6,f,c
 12555  0031C2  220D               	addwfc	___aomod@dividend+7,f,c
 12556  0031C4                     l7254:
 12557  0031C4  C006  F006         	movff	___aomod@dividend,?___aomod
 12558  0031C8  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 12559  0031CC  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 12560  0031D0  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 12561  0031D4  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 12562  0031D8  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 12563  0031DC  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 12564  0031E0  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 12565  0031E4  0012               	return		;funcret
 12566  0031E6                     __end_of___aomod:
 12567                           	opt callstack 0
 12568                           
 12569 ;; *************** function ___aodiv *****************
 12570 ;; Defined at:
 12571 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  dividend        8    5[COMRAM] long long 
 12574 ;;  divisor         8   13[COMRAM] long long 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  quotient        8   23[COMRAM] long long 
 12577 ;;  sign            1   22[COMRAM] unsigned char 
 12578 ;;  counter         1   21[COMRAM] unsigned char 
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  8    5[COMRAM] long long 
 12581 ;; Registers used:
 12582 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12588 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12589 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12591 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;Total ram usage:       26 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    2
 12595 ;; This function calls:
 12596 ;;		Nothing
 12597 ;; This function is called by:
 12598 ;;		_dtoa
 12599 ;; This function uses a non-reentrant model
 12600 ;;
 12601                           
 12602                           	psect	text51
 12603  002BB6                     __ptext51:
 12604                           	opt callstack 0
 12605  002BB6                     ___aodiv:
 12606                           	opt callstack 24
 12607                           
 12608                           ;incstack = 0
 12609  002BB6  0E00               	movlw	0
 12610  002BB8  6E17               	movwf	___aodiv@sign,c
 12611  002BBA  AE15               	btfss	___aodiv@divisor+7,7,c
 12612  002BBC  D012               	goto	l7186
 12613  002BBE  1E15               	comf	___aodiv@divisor+7,f,c
 12614  002BC0  1E14               	comf	___aodiv@divisor+6,f,c
 12615  002BC2  1E13               	comf	___aodiv@divisor+5,f,c
 12616  002BC4  1E12               	comf	___aodiv@divisor+4,f,c
 12617  002BC6  1E11               	comf	___aodiv@divisor+3,f,c
 12618  002BC8  1E10               	comf	___aodiv@divisor+2,f,c
 12619  002BCA  1E0F               	comf	___aodiv@divisor+1,f,c
 12620  002BCC  6C0E               	negf	___aodiv@divisor,c
 12621  002BCE  0E00               	movlw	0
 12622  002BD0  220F               	addwfc	___aodiv@divisor+1,f,c
 12623  002BD2  2210               	addwfc	___aodiv@divisor+2,f,c
 12624  002BD4  2211               	addwfc	___aodiv@divisor+3,f,c
 12625  002BD6  2212               	addwfc	___aodiv@divisor+4,f,c
 12626  002BD8  2213               	addwfc	___aodiv@divisor+5,f,c
 12627  002BDA  2214               	addwfc	___aodiv@divisor+6,f,c
 12628  002BDC  2215               	addwfc	___aodiv@divisor+7,f,c
 12629  002BDE  0E01               	movlw	1
 12630  002BE0  6E17               	movwf	___aodiv@sign,c
 12631  002BE2                     l7186:
 12632  002BE2  AE0D               	btfss	___aodiv@dividend+7,7,c
 12633  002BE4  D012               	goto	l7192
 12634  002BE6  1E0D               	comf	___aodiv@dividend+7,f,c
 12635  002BE8  1E0C               	comf	___aodiv@dividend+6,f,c
 12636  002BEA  1E0B               	comf	___aodiv@dividend+5,f,c
 12637  002BEC  1E0A               	comf	___aodiv@dividend+4,f,c
 12638  002BEE  1E09               	comf	___aodiv@dividend+3,f,c
 12639  002BF0  1E08               	comf	___aodiv@dividend+2,f,c
 12640  002BF2  1E07               	comf	___aodiv@dividend+1,f,c
 12641  002BF4  6C06               	negf	___aodiv@dividend,c
 12642  002BF6  0E00               	movlw	0
 12643  002BF8  2207               	addwfc	___aodiv@dividend+1,f,c
 12644  002BFA  2208               	addwfc	___aodiv@dividend+2,f,c
 12645  002BFC  2209               	addwfc	___aodiv@dividend+3,f,c
 12646  002BFE  220A               	addwfc	___aodiv@dividend+4,f,c
 12647  002C00  220B               	addwfc	___aodiv@dividend+5,f,c
 12648  002C02  220C               	addwfc	___aodiv@dividend+6,f,c
 12649  002C04  220D               	addwfc	___aodiv@dividend+7,f,c
 12650  002C06  0E01               	movlw	1
 12651  002C08  1A17               	xorwf	___aodiv@sign,f,c
 12652  002C0A                     l7192:
 12653  002C0A  EE20  F018         	lfsr	2,___aodiv@quotient
 12654  002C0E  0E07               	movlw	7
 12655  002C10                     u7721:
 12656  002C10  6ADE               	clrf	postinc2,c
 12657  002C12  06E8               	decf	wreg,f,c
 12658  002C14  E2FD               	bc	u7721
 12659  002C16  500E               	movf	___aodiv@divisor,w,c
 12660  002C18  100F               	iorwf	___aodiv@divisor+1,w,c
 12661  002C1A  1010               	iorwf	___aodiv@divisor+2,w,c
 12662  002C1C  1011               	iorwf	___aodiv@divisor+3,w,c
 12663  002C1E  1012               	iorwf	___aodiv@divisor+4,w,c
 12664  002C20  1013               	iorwf	___aodiv@divisor+5,w,c
 12665  002C22  1014               	iorwf	___aodiv@divisor+6,w,c
 12666  002C24  1015               	iorwf	___aodiv@divisor+7,w,c
 12667  002C26  B4D8               	btfsc	status,2,c
 12668  002C28  D046               	goto	l7214
 12669  002C2A  0E01               	movlw	1
 12670  002C2C  6E16               	movwf	___aodiv@counter,c
 12671  002C2E  D00A               	goto	l7200
 12672  002C30                     l7198:
 12673  002C30  90D8               	bcf	status,0,c
 12674  002C32  360E               	rlcf	___aodiv@divisor,f,c
 12675  002C34  360F               	rlcf	___aodiv@divisor+1,f,c
 12676  002C36  3610               	rlcf	___aodiv@divisor+2,f,c
 12677  002C38  3611               	rlcf	___aodiv@divisor+3,f,c
 12678  002C3A  3612               	rlcf	___aodiv@divisor+4,f,c
 12679  002C3C  3613               	rlcf	___aodiv@divisor+5,f,c
 12680  002C3E  3614               	rlcf	___aodiv@divisor+6,f,c
 12681  002C40  3615               	rlcf	___aodiv@divisor+7,f,c
 12682  002C42  2A16               	incf	___aodiv@counter,f,c
 12683  002C44                     l7200:
 12684  002C44  AE15               	btfss	___aodiv@divisor+7,7,c
 12685  002C46  D7F4               	goto	l7198
 12686  002C48                     u7740:
 12687  002C48  90D8               	bcf	status,0,c
 12688  002C4A  3618               	rlcf	___aodiv@quotient,f,c
 12689  002C4C  3619               	rlcf	___aodiv@quotient+1,f,c
 12690  002C4E  361A               	rlcf	___aodiv@quotient+2,f,c
 12691  002C50  361B               	rlcf	___aodiv@quotient+3,f,c
 12692  002C52  361C               	rlcf	___aodiv@quotient+4,f,c
 12693  002C54  361D               	rlcf	___aodiv@quotient+5,f,c
 12694  002C56  361E               	rlcf	___aodiv@quotient+6,f,c
 12695  002C58  361F               	rlcf	___aodiv@quotient+7,f,c
 12696  002C5A  500E               	movf	___aodiv@divisor,w,c
 12697  002C5C  5C06               	subwf	___aodiv@dividend,w,c
 12698  002C5E  500F               	movf	___aodiv@divisor+1,w,c
 12699  002C60  5807               	subwfb	___aodiv@dividend+1,w,c
 12700  002C62  5010               	movf	___aodiv@divisor+2,w,c
 12701  002C64  5808               	subwfb	___aodiv@dividend+2,w,c
 12702  002C66  5011               	movf	___aodiv@divisor+3,w,c
 12703  002C68  5809               	subwfb	___aodiv@dividend+3,w,c
 12704  002C6A  5012               	movf	___aodiv@divisor+4,w,c
 12705  002C6C  580A               	subwfb	___aodiv@dividend+4,w,c
 12706  002C6E  5013               	movf	___aodiv@divisor+5,w,c
 12707  002C70  580B               	subwfb	___aodiv@dividend+5,w,c
 12708  002C72  5014               	movf	___aodiv@divisor+6,w,c
 12709  002C74  580C               	subwfb	___aodiv@dividend+6,w,c
 12710  002C76  5015               	movf	___aodiv@divisor+7,w,c
 12711  002C78  580D               	subwfb	___aodiv@dividend+7,w,c
 12712  002C7A  A0D8               	btfss	status,0,c
 12713  002C7C  D011               	goto	l7210
 12714  002C7E  500E               	movf	___aodiv@divisor,w,c
 12715  002C80  5E06               	subwf	___aodiv@dividend,f,c
 12716  002C82  500F               	movf	___aodiv@divisor+1,w,c
 12717  002C84  5A07               	subwfb	___aodiv@dividend+1,f,c
 12718  002C86  5010               	movf	___aodiv@divisor+2,w,c
 12719  002C88  5A08               	subwfb	___aodiv@dividend+2,f,c
 12720  002C8A  5011               	movf	___aodiv@divisor+3,w,c
 12721  002C8C  5A09               	subwfb	___aodiv@dividend+3,f,c
 12722  002C8E  5012               	movf	___aodiv@divisor+4,w,c
 12723  002C90  5A0A               	subwfb	___aodiv@dividend+4,f,c
 12724  002C92  5013               	movf	___aodiv@divisor+5,w,c
 12725  002C94  5A0B               	subwfb	___aodiv@dividend+5,f,c
 12726  002C96  5014               	movf	___aodiv@divisor+6,w,c
 12727  002C98  5A0C               	subwfb	___aodiv@dividend+6,f,c
 12728  002C9A  5015               	movf	___aodiv@divisor+7,w,c
 12729  002C9C  5A0D               	subwfb	___aodiv@dividend+7,f,c
 12730  002C9E  8018               	bsf	___aodiv@quotient,0,c
 12731  002CA0                     l7210:
 12732  002CA0  90D8               	bcf	status,0,c
 12733  002CA2  3215               	rrcf	___aodiv@divisor+7,f,c
 12734  002CA4  3214               	rrcf	___aodiv@divisor+6,f,c
 12735  002CA6  3213               	rrcf	___aodiv@divisor+5,f,c
 12736  002CA8  3212               	rrcf	___aodiv@divisor+4,f,c
 12737  002CAA  3211               	rrcf	___aodiv@divisor+3,f,c
 12738  002CAC  3210               	rrcf	___aodiv@divisor+2,f,c
 12739  002CAE  320F               	rrcf	___aodiv@divisor+1,f,c
 12740  002CB0  320E               	rrcf	___aodiv@divisor,f,c
 12741  002CB2  2E16               	decfsz	___aodiv@counter,f,c
 12742  002CB4  D7C9               	goto	u7740
 12743  002CB6                     l7214:
 12744  002CB6  5017               	movf	___aodiv@sign,w,c
 12745  002CB8  B4D8               	btfsc	status,2,c
 12746  002CBA  D010               	goto	l7218
 12747  002CBC  1E1F               	comf	___aodiv@quotient+7,f,c
 12748  002CBE  1E1E               	comf	___aodiv@quotient+6,f,c
 12749  002CC0  1E1D               	comf	___aodiv@quotient+5,f,c
 12750  002CC2  1E1C               	comf	___aodiv@quotient+4,f,c
 12751  002CC4  1E1B               	comf	___aodiv@quotient+3,f,c
 12752  002CC6  1E1A               	comf	___aodiv@quotient+2,f,c
 12753  002CC8  1E19               	comf	___aodiv@quotient+1,f,c
 12754  002CCA  6C18               	negf	___aodiv@quotient,c
 12755  002CCC  0E00               	movlw	0
 12756  002CCE  2219               	addwfc	___aodiv@quotient+1,f,c
 12757  002CD0  221A               	addwfc	___aodiv@quotient+2,f,c
 12758  002CD2  221B               	addwfc	___aodiv@quotient+3,f,c
 12759  002CD4  221C               	addwfc	___aodiv@quotient+4,f,c
 12760  002CD6  221D               	addwfc	___aodiv@quotient+5,f,c
 12761  002CD8  221E               	addwfc	___aodiv@quotient+6,f,c
 12762  002CDA  221F               	addwfc	___aodiv@quotient+7,f,c
 12763  002CDC                     l7218:
 12764  002CDC  C018  F006         	movff	___aodiv@quotient,?___aodiv
 12765  002CE0  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 12766  002CE4  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 12767  002CE8  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 12768  002CEC  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 12769  002CF0  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 12770  002CF4  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 12771  002CF8  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 12772  002CFC  0012               	return		;funcret
 12773  002CFE                     __end_of___aodiv:
 12774                           	opt callstack 0
 12775                           
 12776 ;; *************** function _ctoa *****************
 12777 ;; Defined at:
 12778 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12781 ;;		 -> NULL(0), 
 12782 ;;  c               1   38[COMRAM] unsigned char 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;  w               2   39[COMRAM] int 
 12785 ;;  l               2    0        int 
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  2   36[COMRAM] int 
 12788 ;; Registers used:
 12789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12795 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12798 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;Total ram usage:        5 bytes
 12800 ;; Hardware stack levels used:    1
 12801 ;; Hardware stack levels required when called:    9
 12802 ;; This function calls:
 12803 ;;		_pad
 12804 ;; This function is called by:
 12805 ;;		_vfpfcnvrt
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text52
 12810  003C18                     __ptext52:
 12811                           	opt callstack 0
 12812  003C18                     _ctoa:
 12813                           	opt callstack 18
 12814                           
 12815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12816                           
 12817                           ;incstack = 0
 12818  003C18  0100               	movlb	0	; () banked
 12819  003C1A  51E1               	movf	_width& (0+255),w,b
 12820  003C1C  11E2               	iorwf	(_width+1)& (0+255),w,b
 12821  003C1E  A4D8               	btfss	status,2,c
 12822  003C20  D005               	goto	l7718
 12823                           
 12824                           ; BSR set to: 0
 12825  003C22  C0E1  F028         	movff	_width,ctoa@w
 12826  003C26  C0E2  F029         	movff	_width+1,ctoa@w+1
 12827  003C2A  D006               	goto	l7720
 12828  003C2C                     l7718:
 12829                           
 12830                           ; BSR set to: 0
 12831  003C2C  0EFF               	movlw	255
 12832  003C2E  25E1               	addwf	_width& (0+255),w,b
 12833  003C30  6E28               	movwf	ctoa@w,c
 12834  003C32  0EFF               	movlw	255
 12835  003C34  21E2               	addwfc	(_width+1)& (0+255),w,b
 12836  003C36  6E29               	movwf	ctoa@w+1,c
 12837  003C38                     l7720:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12841  003C38  C027  F161         	movff	ctoa@c,_dbuf
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12845  003C3C  0E00               	movlw	0
 12846  003C3E  0101               	movlb	1	; () banked
 12847  003C40  6F62               	movwf	(_dbuf+1)& (0+255),b
 12848                           
 12849                           ; BSR set to: 1
 12850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 12851  003C42  C025  F01A         	movff	ctoa@fp,pad@fp
 12852  003C46  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 12853  003C4A  0E61               	movlw	low _dbuf
 12854  003C4C  6E1C               	movwf	pad@buf,c
 12855  003C4E  0E01               	movlw	high _dbuf
 12856  003C50  6E1D               	movwf	pad@buf+1,c
 12857  003C52  C028  F01E         	movff	ctoa@w,pad@p
 12858  003C56  C029  F01F         	movff	ctoa@w+1,pad@p+1
 12859  003C5A  EC42  F01B         	call	_pad	;wreg free
 12860  003C5E  C01A  F025         	movff	?_pad,?_ctoa
 12861  003C62  C01B  F026         	movff	?_pad+1,?_ctoa+1
 12862  003C66  0012               	return		;funcret
 12863  003C68                     __end_of_ctoa:
 12864                           	opt callstack 0
 12865                           
 12866 ;; *************** function _pad *****************
 12867 ;; Defined at:
 12868 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 12871 ;;		 -> NULL(0), 
 12872 ;;  buf             2   27[COMRAM] PTR unsigned char 
 12873 ;;		 -> dbuf(32), 
 12874 ;;  p               2   29[COMRAM] int 
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;  w               2   34[COMRAM] int 
 12877 ;;  i               2   32[COMRAM] int 
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  2   25[COMRAM] int 
 12880 ;; Registers used:
 12881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12887 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;Total ram usage:       11 bytes
 12892 ;; Hardware stack levels used:    1
 12893 ;; Hardware stack levels required when called:    8
 12894 ;; This function calls:
 12895 ;;		_fputc
 12896 ;;		_fputs
 12897 ;;		_strlen
 12898 ;; This function is called by:
 12899 ;;		_ctoa
 12900 ;;		_dtoa
 12901 ;;		_utoa
 12902 ;;		_xtoa
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text53
 12907  003684                     __ptext53:
 12908                           	opt callstack 0
 12909  003684                     _pad:
 12910                           	opt callstack 18
 12911                           
 12912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12913                           
 12914                           ;incstack = 0
 12915  003684  0100               	movlb	0	; () banked
 12916  003686  A1E5               	btfss	_flags& (0+255),0,b
 12917  003688  D00A               	goto	l7132
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12921  00368A  C01C  F013         	movff	pad@buf,fputs@s
 12922  00368E  C01D  F014         	movff	pad@buf+1,fputs@s+1
 12923  003692  C01A  F015         	movff	pad@fp,fputs@fp
 12924  003696  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 12925  00369A  EC26  F01F         	call	_fputs	;wreg free
 12926  00369E                     l7132:
 12927                           
 12928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12929  00369E  BE1F               	btfsc	pad@p+1,7,c
 12930  0036A0  D005               	goto	l7136
 12931  0036A2  C01E  F023         	movff	pad@p,pad@w
 12932  0036A6  C01F  F024         	movff	pad@p+1,pad@w+1
 12933  0036AA  D004               	goto	l576
 12934  0036AC                     l7136:
 12935  0036AC  0E00               	movlw	0
 12936  0036AE  6E24               	movwf	pad@w+1,c
 12937  0036B0  0E00               	movlw	0
 12938  0036B2  6E23               	movwf	pad@w,c
 12939  0036B4                     l576:
 12940                           
 12941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12942  0036B4  0E00               	movlw	0
 12943  0036B6  6E22               	movwf	pad@i+1,c
 12944  0036B8  0E00               	movlw	0
 12945  0036BA  6E21               	movwf	pad@i,c
 12946                           
 12947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12948  0036BC  D00C               	goto	l7142
 12949  0036BE                     l7138:
 12950                           
 12951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12952  0036BE  0E00               	movlw	0
 12953  0036C0  6E0B               	movwf	fputc@c+1,c
 12954  0036C2  0E20               	movlw	32
 12955  0036C4  6E0A               	movwf	fputc@c,c
 12956  0036C6  C01A  F00C         	movff	pad@fp,fputc@fp
 12957  0036CA  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 12958  0036CE  EC8D  F01C         	call	_fputc	;wreg free
 12959                           
 12960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12961  0036D2  4A21               	infsnz	pad@i,f,c
 12962  0036D4  2A22               	incf	pad@i+1,f,c
 12963  0036D6                     l7142:
 12964                           
 12965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12966  0036D6  5023               	movf	pad@w,w,c
 12967  0036D8  5C21               	subwf	pad@i,w,c
 12968  0036DA  5022               	movf	pad@i+1,w,c
 12969  0036DC  0A80               	xorlw	128
 12970  0036DE  6E20               	movwf	??_pad& (0+255),c
 12971  0036E0  5024               	movf	pad@w+1,w,c
 12972  0036E2  0A80               	xorlw	128
 12973  0036E4  5820               	subwfb	??_pad& (0+255),w,c
 12974  0036E6  A0D8               	btfss	status,0,c
 12975  0036E8  D7EA               	goto	l7138
 12976                           
 12977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12978  0036EA  0100               	movlb	0	; () banked
 12979  0036EC  B1E5               	btfsc	_flags& (0+255),0,b
 12980  0036EE  D00A               	goto	l7146
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12984  0036F0  C01C  F013         	movff	pad@buf,fputs@s
 12985  0036F4  C01D  F014         	movff	pad@buf+1,fputs@s+1
 12986  0036F8  C01A  F015         	movff	pad@fp,fputs@fp
 12987  0036FC  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 12988  003700  EC26  F01F         	call	_fputs	;wreg free
 12989  003704                     l7146:
 12990                           
 12991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12992  003704  C01C  F006         	movff	pad@buf,strlen@s
 12993  003708  C01D  F007         	movff	pad@buf+1,strlen@s+1
 12994  00370C  ECC5  F01E         	call	_strlen	;wreg free
 12995  003710  5023               	movf	pad@w,w,c
 12996  003712  2406               	addwf	?_strlen,w,c
 12997  003714  6E1A               	movwf	?_pad,c
 12998  003716  5024               	movf	pad@w+1,w,c
 12999  003718  2007               	addwfc	?_strlen+1,w,c
 13000  00371A  6E1B               	movwf	?_pad+1,c
 13001  00371C  0012               	return		;funcret
 13002  00371E                     __end_of_pad:
 13003                           	opt callstack 0
 13004                           
 13005 ;; *************** function _strlen *****************
 13006 ;; Defined at:
 13007 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  s               2    5[COMRAM] PTR const unsigned char 
 13010 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 13011 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 13012 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 13013 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 13014 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 13015 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 13016 ;;		 -> STR_2(10), 
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;  a               2    7[COMRAM] PTR const unsigned char 
 13019 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 13020 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 13021 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 13022 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 13023 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 13024 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 13025 ;;		 -> STR_2(10), 
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  2    5[COMRAM] unsigned int 
 13028 ;; Registers used:
 13029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;Total ram usage:        4 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    2
 13042 ;; This function calls:
 13043 ;;		Nothing
 13044 ;; This function is called by:
 13045 ;;		_pad
 13046 ;;		_stoa
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text54
 13051  003D8A                     __ptext54:
 13052                           	opt callstack 0
 13053  003D8A                     _strlen:
 13054                           	opt callstack 23
 13055                           
 13056                           ;incstack = 0
 13057  003D8A  C006  F008         	movff	strlen@s,strlen@a
 13058  003D8E  C007  F009         	movff	strlen@s+1,strlen@a+1
 13059  003D92  D002               	goto	l7114
 13060  003D94                     l7112:
 13061  003D94  4A06               	infsnz	strlen@s,f,c
 13062  003D96  2A07               	incf	strlen@s+1,f,c
 13063  003D98                     l7114:
 13064  003D98  C006  FFF6         	movff	strlen@s,tblptrl
 13065  003D9C  C007  FFF7         	movff	strlen@s+1,tblptrh
 13066  003DA0  0E00               	movlw	low (__mediumconst shr (0+16))
 13067  003DA2  6EF8               	movwf	tblptru,c
 13068  003DA4  0E0F               	movlw	(high __ramtop+-1)
 13069  003DA6  64F7               	cpfsgt	tblptrh,c
 13070  003DA8  D003               	bra	u7527
 13071  003DAA  0008               	tblrd		*
 13072  003DAC  50F5               	movf	tablat,w,c
 13073  003DAE  D005               	bra	u7520
 13074  003DB0                     u7527:
 13075  003DB0  CFF6 FFE1          	movff	tblptrl,fsr1l
 13076  003DB4  CFF7 FFE2          	movff	tblptrh,fsr1h
 13077  003DB8  50E7               	movf	indf1,w,c
 13078  003DBA                     u7520:
 13079  003DBA  0900               	iorlw	0
 13080  003DBC  A4D8               	btfss	status,2,c
 13081  003DBE  D7EA               	goto	l7112
 13082  003DC0  5008               	movf	strlen@a,w,c
 13083  003DC2  5C06               	subwf	strlen@s,w,c
 13084  003DC4  6E06               	movwf	?_strlen,c
 13085  003DC6  5009               	movf	strlen@a+1,w,c
 13086  003DC8  5807               	subwfb	strlen@s+1,w,c
 13087  003DCA  6E07               	movwf	?_strlen+1,c
 13088  003DCC  0012               	return		;funcret
 13089  003DCE                     __end_of_strlen:
 13090                           	opt callstack 0
 13091                           
 13092 ;; *************** function _fputs *****************
 13093 ;; Defined at:
 13094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 13095 ;; Parameters:    Size  Location     Type
 13096 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13097 ;;		 -> dbuf(32), 
 13098 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 13099 ;;		 -> NULL(0), 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  i               2   23[COMRAM] int 
 13102 ;;  c               1   22[COMRAM] unsigned char 
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  2   18[COMRAM] int 
 13105 ;; Registers used:
 13106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;Total ram usage:        7 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    7
 13119 ;; This function calls:
 13120 ;;		_fputc
 13121 ;; This function is called by:
 13122 ;;		_pad
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text55
 13127  003E4C                     __ptext55:
 13128                           	opt callstack 0
 13129  003E4C                     _fputs:
 13130                           	opt callstack 18
 13131                           
 13132                           ;incstack = 0
 13133  003E4C  0E00               	movlw	0
 13134  003E4E  6E19               	movwf	fputs@i+1,c
 13135  003E50  0E00               	movlw	0
 13136  003E52  6E18               	movwf	fputs@i,c
 13137  003E54  D00B               	goto	l7108
 13138  003E56                     l7104:
 13139  003E56  C017  F00A         	movff	fputs@c,fputc@c
 13140  003E5A  6A0B               	clrf	fputc@c+1,c
 13141  003E5C  C015  F00C         	movff	fputs@fp,fputc@fp
 13142  003E60  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 13143  003E64  EC8D  F01C         	call	_fputc	;wreg free
 13144  003E68  4A18               	infsnz	fputs@i,f,c
 13145  003E6A  2A19               	incf	fputs@i+1,f,c
 13146  003E6C                     l7108:
 13147  003E6C  5018               	movf	fputs@i,w,c
 13148  003E6E  2413               	addwf	fputs@s,w,c
 13149  003E70  6ED9               	movwf	fsr2l,c
 13150  003E72  5019               	movf	fputs@i+1,w,c
 13151  003E74  2014               	addwfc	fputs@s+1,w,c
 13152  003E76  6EDA               	movwf	fsr2h,c
 13153  003E78  50DF               	movf	indf2,w,c
 13154  003E7A  6E17               	movwf	fputs@c,c
 13155  003E7C  5017               	movf	fputs@c,w,c
 13156  003E7E  B4D8               	btfsc	status,2,c
 13157  003E80  0012               	return	
 13158  003E82  D7E9               	goto	l7104
 13159  003E84                     __end_of_fputs:
 13160                           	opt callstack 0
 13161                           
 13162 ;; *************** function _fputc *****************
 13163 ;; Defined at:
 13164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  c               2    9[COMRAM] int 
 13167 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13168 ;;		 -> NULL(0), 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;		None
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  2    9[COMRAM] int 
 13173 ;; Registers used:
 13174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;Total ram usage:        9 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    6
 13187 ;; This function calls:
 13188 ;;		_putch
 13189 ;; This function is called by:
 13190 ;;		_pad
 13191 ;;		_stoa
 13192 ;;		_vfpfcnvrt
 13193 ;;		_fputs
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           	psect	text56
 13198  00391A                     __ptext56:
 13199                           	opt callstack 0
 13200  00391A                     _fputc:
 13201                           	opt callstack 18
 13202                           
 13203                           ;incstack = 0
 13204  00391A  500C               	movf	fputc@fp,w,c
 13205  00391C  100D               	iorwf	fputc@fp+1,w,c
 13206  00391E  B4D8               	btfsc	status,2,c
 13207  003920  D004               	goto	u7480
 13208  003922  500C               	movf	fputc@fp,w,c
 13209  003924  100D               	iorwf	fputc@fp+1,w,c
 13210  003926  A4D8               	btfss	status,2,c
 13211  003928  D004               	goto	l7094
 13212  00392A                     u7480:
 13213  00392A  500A               	movf	fputc@c,w,c
 13214  00392C  ECB1  F020         	call	_putch
 13215  003930  0012               	return	
 13216  003932                     l7094:
 13217  003932  EE20 F004          	lfsr	2,4
 13218  003936  500C               	movf	fputc@fp,w,c
 13219  003938  26D9               	addwf	fsr2l,f,c
 13220  00393A  500D               	movf	fputc@fp+1,w,c
 13221  00393C  22DA               	addwfc	fsr2h,f,c
 13222  00393E  50DE               	movf	postinc2,w,c
 13223  003940  10DE               	iorwf	postinc2,w,c
 13224  003942  B4D8               	btfsc	status,2,c
 13225  003944  D016               	goto	u7500
 13226  003946  EE20 F004          	lfsr	2,4
 13227  00394A  500C               	movf	fputc@fp,w,c
 13228  00394C  26D9               	addwf	fsr2l,f,c
 13229  00394E  500D               	movf	fputc@fp+1,w,c
 13230  003950  22DA               	addwfc	fsr2h,f,c
 13231  003952  EE10 F002          	lfsr	1,2
 13232  003956  500C               	movf	fputc@fp,w,c
 13233  003958  26E1               	addwf	fsr1l,f,c
 13234  00395A  500D               	movf	fputc@fp+1,w,c
 13235  00395C  22E2               	addwfc	fsr1h,f,c
 13236  00395E  50DE               	movf	postinc2,w,c
 13237  003960  5CE6               	subwf	postinc1,w,c
 13238  003962  50E6               	movf	postinc1,w,c
 13239  003964  0A80               	xorlw	128
 13240  003966  6E12               	movwf	(??_fputc+4)& (0+255),c
 13241  003968  50DE               	movf	postinc2,w,c
 13242  00396A  0A80               	xorlw	128
 13243  00396C  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 13244  00396E  B0D8               	btfsc	status,0,c
 13245  003970  0012               	return	
 13246  003972                     u7500:
 13247  003972  EE20 F002          	lfsr	2,2
 13248  003976  500C               	movf	fputc@fp,w,c
 13249  003978  26D9               	addwf	fsr2l,f,c
 13250  00397A  500D               	movf	fputc@fp+1,w,c
 13251  00397C  22DA               	addwfc	fsr2h,f,c
 13252  00397E  2ADE               	incf	postinc2,f,c
 13253  003980  0E00               	movlw	0
 13254  003982  22DD               	addwfc	postdec2,f,c
 13255  003984  0012               	return		;funcret
 13256  003986                     __end_of_fputc:
 13257                           	opt callstack 0
 13258                           
 13259 ;; *************** function _putch *****************
 13260 ;; Defined at:
 13261 ;;		line 102 in file "lcd.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;  data            1    wreg     unsigned char 
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;  data            1    8[COMRAM] unsigned char 
 13266 ;; Return value:  Size  Location     Type
 13267 ;;                  1    wreg      void 
 13268 ;; Registers used:
 13269 ;;		wreg, status,2, status,0, cstack
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;Total ram usage:        1 bytes
 13280 ;; Hardware stack levels used:    1
 13281 ;; Hardware stack levels required when called:    5
 13282 ;; This function calls:
 13283 ;;		_send_byte
 13284 ;; This function is called by:
 13285 ;;		_fputc
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text57
 13290  004162                     __ptext57:
 13291                           	opt callstack 0
 13292  004162                     _putch:
 13293                           	opt callstack 18
 13294                           
 13295                           ;incstack = 0
 13296                           ;putch@data stored from wreg
 13297  004162  6E09               	movwf	putch@data,c
 13298                           
 13299                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 13300  004164  848C               	bsf	3980,2,c	;volatile
 13301                           
 13302                           ;lcd.c: 104:     send_byte((unsigned char)data);
 13303  004166  5009               	movf	putch@data,w,c
 13304  004168  ECA8  F020         	call	_send_byte
 13305  00416C  0012               	return		;funcret
 13306  00416E                     __end_of_putch:
 13307                           	opt callstack 0
 13308                           
 13309 ;; *************** function _atoi *****************
 13310 ;; Defined at:
 13311 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  s               2   12[COMRAM] PTR const unsigned char 
 13314 ;;		 -> STR_56(3), STR_55(9), STR_54(9), STR_53(10), 
 13315 ;;		 -> STR_52(10), STR_50(3), STR_48(3), STR_46(3), 
 13316 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 13317 ;;		 -> STR_36(3), STR_34(3), STR_32(3), STR_30(3), 
 13318 ;;		 -> STR_29(15), STR_28(15), STR_26(3), STR_25(13), 
 13319 ;;		 -> STR_24(11), STR_23(10), STR_22(6), STR_21(6), 
 13320 ;;		 -> STR_20(3), STR_19(4), STR_17(3), STR_15(5), 
 13321 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 13322 ;;		 -> STR_4(5), STR_1(7), 
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;  n               2   25[COMRAM] int 
 13325 ;;  neg             2   18[COMRAM] int 
 13326 ;; Return value:  Size  Location     Type
 13327 ;;                  2   12[COMRAM] int 
 13328 ;; Registers used:
 13329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13330 ;; Tracked objects:
 13331 ;;		On entry : 0/0
 13332 ;;		On exit  : 0/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13336 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13338 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;Total ram usage:       15 bytes
 13340 ;; Hardware stack levels used:    1
 13341 ;; Hardware stack levels required when called:    3
 13342 ;; This function calls:
 13343 ;;		___wmul
 13344 ;;		_isdigit
 13345 ;;		_isspace
 13346 ;; This function is called by:
 13347 ;;		_vfpfcnvrt
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text58
 13352  002F82                     __ptext58:
 13353                           	opt callstack 0
 13354  002F82                     _atoi:
 13355                           	opt callstack 24
 13356                           
 13357                           ;incstack = 0
 13358  002F82  0E00               	movlw	0
 13359  002F84  6E1B               	movwf	atoi@n+1,c
 13360  002F86  0E00               	movlw	0
 13361  002F88  6E1A               	movwf	atoi@n,c
 13362  002F8A  0E00               	movlw	0
 13363  002F8C  6E14               	movwf	atoi@neg+1,c
 13364  002F8E  0E00               	movlw	0
 13365  002F90  6E13               	movwf	atoi@neg,c
 13366  002F92  D002               	goto	l7938
 13367  002F94                     l7936:
 13368  002F94  4A0D               	infsnz	atoi@s,f,c
 13369  002F96  2A0E               	incf	atoi@s+1,f,c
 13370  002F98                     l7938:
 13371  002F98  0E01               	movlw	1
 13372  002F9A  6E19               	movwf	_atoi$1893,c
 13373  002F9C  C00D  FFF6         	movff	atoi@s,tblptrl
 13374  002FA0  C00E  FFF7         	movff	atoi@s+1,tblptrh
 13375  002FA4                     	if	0	;tblptru may be non-zero
 13376  002FA4                     	endif
 13377  002FA4                     	if	0	;tblptru may be non-zero
 13378  002FA4                     	endif
 13379  002FA4  0008               	tblrd		*
 13380  002FA6  50F5               	movf	tablat,w,c
 13381  002FA8  0A20               	xorlw	32
 13382  002FAA  B4D8               	btfsc	status,2,c
 13383  002FAC  D018               	goto	l7946
 13384  002FAE  0EF7               	movlw	247
 13385  002FB0  6E0F               	movwf	??_atoi& (0+255),c
 13386  002FB2  0EFF               	movlw	255
 13387  002FB4  6E10               	movwf	(??_atoi+1)& (0+255),c
 13388  002FB6  C00D  FFF6         	movff	atoi@s,tblptrl
 13389  002FBA  C00E  FFF7         	movff	atoi@s+1,tblptrh
 13390  002FBE                     	if	0	;tblptru may be non-zero
 13391  002FBE                     	endif
 13392  002FBE                     	if	0	;tblptru may be non-zero
 13393  002FBE                     	endif
 13394  002FBE  0008               	tblrd		*
 13395  002FC0  50F5               	movf	tablat,w,c
 13396  002FC2  6E11               	movwf	(??_atoi+2)& (0+255),c
 13397  002FC4  6A12               	clrf	(??_atoi+3)& (0+255),c
 13398  002FC6  500F               	movf	??_atoi,w,c
 13399  002FC8  2611               	addwf	??_atoi+2,f,c
 13400  002FCA  5010               	movf	??_atoi+1,w,c
 13401  002FCC  2212               	addwfc	??_atoi+3,f,c
 13402  002FCE  5012               	movf	??_atoi+3,w,c
 13403  002FD0  E104               	bnz	u9150
 13404  002FD2  0E05               	movlw	5
 13405  002FD4  5C11               	subwf	??_atoi+2,w,c
 13406  002FD6  A0D8               	btfss	status,0,c
 13407  002FD8  D002               	goto	l7946
 13408  002FDA                     u9150:
 13409  002FDA  0E00               	movlw	0
 13410  002FDC  6E19               	movwf	_atoi$1893,c
 13411  002FDE                     l7946:
 13412  002FDE  C019  F015         	movff	_atoi$1893,_atoi$1892
 13413  002FE2  6A16               	clrf	_atoi$1892+1,c
 13414  002FE4  5015               	movf	_atoi$1892,w,c
 13415  002FE6  1016               	iorwf	_atoi$1892+1,w,c
 13416  002FE8  B4D8               	btfsc	status,2,c
 13417  002FEA  D008               	goto	l7956
 13418  002FEC  D7D3               	goto	l7936
 13419  002FEE                     l7952:
 13420  002FEE  0E00               	movlw	0
 13421  002FF0  6E14               	movwf	atoi@neg+1,c
 13422  002FF2  0E01               	movlw	1
 13423  002FF4  6E13               	movwf	atoi@neg,c
 13424  002FF6                     l7954:
 13425  002FF6  4A0D               	infsnz	atoi@s,f,c
 13426  002FF8  2A0E               	incf	atoi@s+1,f,c
 13427  002FFA  D02E               	goto	l7962
 13428  002FFC                     l7956:
 13429  002FFC  C00D  FFF6         	movff	atoi@s,tblptrl
 13430  003000  C00E  FFF7         	movff	atoi@s+1,tblptrh
 13431  003004                     	if	0	;tblptru may be non-zero
 13432  003004                     	endif
 13433  003004                     	if	0	;tblptru may be non-zero
 13434  003004                     	endif
 13435  003004  0008               	tblrd		*
 13436  003006  50F5               	movf	tablat,w,c
 13437  003008  6E0F               	movwf	??_atoi& (0+255),c
 13438  00300A  6A10               	clrf	(??_atoi+1)& (0+255),c
 13439                           
 13440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13441                           ; Switch size 1, requested type "simple"
 13442                           ; Number of cases is 1, Range of values is 0 to 0
 13443                           ; switch strategies available:
 13444                           ; Name         Instructions Cycles
 13445                           ; simple_byte            4     3 (average)
 13446                           ;	Chosen strategy is simple_byte
 13447  00300C  5010               	movf	??_atoi+1,w,c
 13448  00300E  0A00               	xorlw	0	; case 0
 13449  003010  A4D8               	btfss	status,2,c
 13450  003012  D022               	goto	l7962
 13451                           
 13452                           ; Switch size 1, requested type "simple"
 13453                           ; Number of cases is 2, Range of values is 43 to 45
 13454                           ; switch strategies available:
 13455                           ; Name         Instructions Cycles
 13456                           ; simple_byte            7     4 (average)
 13457                           ;	Chosen strategy is simple_byte
 13458  003014  500F               	movf	??_atoi,w,c
 13459  003016  0A2B               	xorlw	43	; case 43
 13460  003018  B4D8               	btfsc	status,2,c
 13461  00301A  D7ED               	goto	l7954
 13462  00301C  0A06               	xorlw	6	; case 45
 13463  00301E  B4D8               	btfsc	status,2,c
 13464  003020  D7E6               	goto	l7952
 13465  003022  D01A               	goto	l7962
 13466  003024                     l7958:
 13467  003024  C01A  F006         	movff	atoi@n,___wmul@multiplier
 13468  003028  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 13469  00302C  0E00               	movlw	0
 13470  00302E  6E09               	movwf	___wmul@multiplicand+1,c
 13471  003030  0E0A               	movlw	10
 13472  003032  6E08               	movwf	___wmul@multiplicand,c
 13473  003034  EC10  F020         	call	___wmul	;wreg free
 13474  003038  C00D  FFF6         	movff	atoi@s,tblptrl
 13475  00303C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 13476  003040                     	if	0	;tblptru may be non-zero
 13477  003040                     	endif
 13478  003040                     	if	0	;tblptru may be non-zero
 13479  003040                     	endif
 13480  003040  0008               	tblrd		*
 13481  003042  50F5               	movf	tablat,w,c
 13482  003044  5E06               	subwf	?___wmul,f,c
 13483  003046  0E00               	movlw	0
 13484  003048  5A07               	subwfb	?___wmul+1,f,c
 13485  00304A  0E30               	movlw	48
 13486  00304C  2406               	addwf	?___wmul,w,c
 13487  00304E  6E1A               	movwf	atoi@n,c
 13488  003050  0E00               	movlw	0
 13489  003052  2007               	addwfc	?___wmul+1,w,c
 13490  003054  6E1B               	movwf	atoi@n+1,c
 13491  003056  D7CF               	goto	l7954
 13492  003058                     l7962:
 13493  003058  0ED0               	movlw	208
 13494  00305A  6E0F               	movwf	??_atoi& (0+255),c
 13495  00305C  0EFF               	movlw	255
 13496  00305E  6E10               	movwf	(??_atoi+1)& (0+255),c
 13497  003060  C00D  FFF6         	movff	atoi@s,tblptrl
 13498  003064  C00E  FFF7         	movff	atoi@s+1,tblptrh
 13499  003068                     	if	0	;tblptru may be non-zero
 13500  003068                     	endif
 13501  003068                     	if	0	;tblptru may be non-zero
 13502  003068                     	endif
 13503  003068  0008               	tblrd		*
 13504  00306A  50F5               	movf	tablat,w,c
 13505  00306C  6E11               	movwf	(??_atoi+2)& (0+255),c
 13506  00306E  6A12               	clrf	(??_atoi+3)& (0+255),c
 13507  003070  500F               	movf	??_atoi,w,c
 13508  003072  2611               	addwf	??_atoi+2,f,c
 13509  003074  5010               	movf	??_atoi+1,w,c
 13510  003076  2212               	addwfc	??_atoi+3,f,c
 13511  003078  5012               	movf	??_atoi+3,w,c
 13512  00307A  E106               	bnz	u9170
 13513  00307C  0E0A               	movlw	10
 13514  00307E  5C11               	subwf	??_atoi+2,w,c
 13515  003080  B0D8               	btfsc	status,0,c
 13516  003082  D002               	goto	u9170
 13517  003084  0E01               	movlw	1
 13518  003086  D001               	goto	u9180
 13519  003088                     u9170:
 13520  003088  0E00               	movlw	0
 13521  00308A                     u9180:
 13522  00308A  6E17               	movwf	_atoi$1894,c
 13523  00308C  6A18               	clrf	_atoi$1894+1,c
 13524  00308E  5017               	movf	_atoi$1894,w,c
 13525  003090  1018               	iorwf	_atoi$1894+1,w,c
 13526  003092  A4D8               	btfss	status,2,c
 13527  003094  D7C7               	goto	l7958
 13528  003096  5013               	movf	atoi@neg,w,c
 13529  003098  1014               	iorwf	atoi@neg+1,w,c
 13530  00309A  A4D8               	btfss	status,2,c
 13531  00309C  D00D               	goto	l1440
 13532  00309E  C01A  F00F         	movff	atoi@n,??_atoi
 13533  0030A2  C01B  F010         	movff	atoi@n+1,??_atoi+1
 13534  0030A6  1E0F               	comf	??_atoi,f,c
 13535  0030A8  1E10               	comf	??_atoi+1,f,c
 13536  0030AA  4A0F               	infsnz	??_atoi,f,c
 13537  0030AC  2A10               	incf	??_atoi+1,f,c
 13538  0030AE  C00F  F00D         	movff	??_atoi,?_atoi
 13539  0030B2  C010  F00E         	movff	??_atoi+1,?_atoi+1
 13540  0030B6  0012               	return	
 13541  0030B8                     l1440:
 13542  0030B8  C01A  F00D         	movff	atoi@n,?_atoi
 13543  0030BC  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 13544  0030C0  0012               	return		;funcret
 13545  0030C2                     __end_of_atoi:
 13546                           	opt callstack 0
 13547                           
 13548 ;; *************** function _isspace *****************
 13549 ;; Defined at:
 13550 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  c               2    5[COMRAM] int 
 13553 ;; Auto vars:     Size  Location     Type
 13554 ;;		None
 13555 ;; Return value:  Size  Location     Type
 13556 ;;                  2    5[COMRAM] int 
 13557 ;; Registers used:
 13558 ;;		wreg, status,2, status,0
 13559 ;; Tracked objects:
 13560 ;;		On entry : 0/0
 13561 ;;		On exit  : 0/0
 13562 ;;		Unchanged: 0/0
 13563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;Total ram usage:        7 bytes
 13569 ;; Hardware stack levels used:    1
 13570 ;; Hardware stack levels required when called:    2
 13571 ;; This function calls:
 13572 ;;		Nothing
 13573 ;; This function is called by:
 13574 ;;		_atoi
 13575 ;; This function uses a non-reentrant model
 13576 ;;
 13577                           
 13578                           	psect	text59
 13579  003E0E                     __ptext59:
 13580                           	opt callstack 0
 13581  003E0E                     _isspace:
 13582                           	opt callstack 24
 13583                           
 13584                           ;incstack = 0
 13585  003E0E  0E01               	movlw	1
 13586  003E10  6E0C               	movwf	_isspace$1919,c
 13587  003E12  0E20               	movlw	32
 13588  003E14  1806               	xorwf	isspace@c,w,c
 13589  003E16  1007               	iorwf	isspace@c+1,w,c
 13590  003E18  B4D8               	btfsc	status,2,c
 13591  003E1A  D014               	goto	l7684
 13592  003E1C  0EF7               	movlw	247
 13593  003E1E  6E08               	movwf	??_isspace& (0+255),c
 13594  003E20  0EFF               	movlw	255
 13595  003E22  6E09               	movwf	(??_isspace+1)& (0+255),c
 13596  003E24  C006  F00A         	movff	isspace@c,??_isspace+2
 13597  003E28  C007  F00B         	movff	isspace@c+1,??_isspace+3
 13598  003E2C  5008               	movf	??_isspace,w,c
 13599  003E2E  260A               	addwf	??_isspace+2,f,c
 13600  003E30  5009               	movf	??_isspace+1,w,c
 13601  003E32  220B               	addwfc	??_isspace+3,f,c
 13602  003E34  500B               	movf	??_isspace+3,w,c
 13603  003E36  E104               	bnz	u8550
 13604  003E38  0E05               	movlw	5
 13605  003E3A  5C0A               	subwf	??_isspace+2,w,c
 13606  003E3C  A0D8               	btfss	status,0,c
 13607  003E3E  D002               	goto	l7684
 13608  003E40                     u8550:
 13609  003E40  0E00               	movlw	0
 13610  003E42  6E0C               	movwf	_isspace$1919,c
 13611  003E44                     l7684:
 13612  003E44  C00C  F006         	movff	_isspace$1919,?_isspace
 13613  003E48  6A07               	clrf	?_isspace+1,c
 13614  003E4A  0012               	return		;funcret
 13615  003E4C                     __end_of_isspace:
 13616                           	opt callstack 0
 13617                           
 13618 ;; *************** function _isdigit *****************
 13619 ;; Defined at:
 13620 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;  c               2    5[COMRAM] int 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  2    5[COMRAM] int 
 13627 ;; Registers used:
 13628 ;;		wreg, status,2, status,0
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        6 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    2
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_vfpfcnvrt
 13645 ;;		_atoi
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text60
 13650  003F4A                     __ptext60:
 13651                           	opt callstack 0
 13652  003F4A                     _isdigit:
 13653                           	opt callstack 25
 13654                           
 13655                           ;incstack = 0
 13656  003F4A  0ED0               	movlw	208
 13657  003F4C  6E08               	movwf	??_isdigit& (0+255),c
 13658  003F4E  0EFF               	movlw	255
 13659  003F50  6E09               	movwf	(??_isdigit+1)& (0+255),c
 13660  003F52  C006  F00A         	movff	isdigit@c,??_isdigit+2
 13661  003F56  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 13662  003F5A  5008               	movf	??_isdigit,w,c
 13663  003F5C  260A               	addwf	??_isdigit+2,f,c
 13664  003F5E  5009               	movf	??_isdigit+1,w,c
 13665  003F60  220B               	addwfc	??_isdigit+3,f,c
 13666  003F62  500B               	movf	??_isdigit+3,w,c
 13667  003F64  E106               	bnz	u7680
 13668  003F66  0E0A               	movlw	10
 13669  003F68  5C0A               	subwf	??_isdigit+2,w,c
 13670  003F6A  B0D8               	btfsc	status,0,c
 13671  003F6C  D002               	goto	u7680
 13672  003F6E  0E01               	movlw	1
 13673  003F70  D001               	goto	u7690
 13674  003F72                     u7680:
 13675  003F72  0E00               	movlw	0
 13676  003F74                     u7690:
 13677  003F74  6E06               	movwf	?_isdigit,c
 13678  003F76  6A07               	clrf	?_isdigit+1,c
 13679  003F78  0012               	return		;funcret
 13680  003F7A                     __end_of_isdigit:
 13681                           	opt callstack 0
 13682                           
 13683 ;; *************** function ___wmul *****************
 13684 ;; Defined at:
 13685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  multiplier      2    5[COMRAM] unsigned int 
 13688 ;;  multiplicand    2    7[COMRAM] unsigned int 
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;  product         2    9[COMRAM] unsigned int 
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  2    5[COMRAM] unsigned int 
 13693 ;; Registers used:
 13694 ;;		wreg, status,2, status,0, prodl, prodh
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/0
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;Total ram usage:        6 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    2
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_doDisplayLog
 13711 ;;		_atoi
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           	psect	text61
 13716  004020                     __ptext61:
 13717                           	opt callstack 0
 13718  004020                     ___wmul:
 13719                           	opt callstack 24
 13720                           
 13721                           ;incstack = 0
 13722  004020  5006               	movf	___wmul@multiplier,w,c
 13723  004022  0208               	mulwf	___wmul@multiplicand,c
 13724  004024  CFF3 F00A          	movff	prodl,___wmul@product
 13725  004028  CFF4 F00B          	movff	prodh,___wmul@product+1
 13726  00402C  5006               	movf	___wmul@multiplier,w,c
 13727  00402E  0209               	mulwf	___wmul@multiplicand+1,c
 13728  004030  50F3               	movf	prodl,w,c
 13729  004032  260B               	addwf	___wmul@product+1,f,c
 13730  004034  5007               	movf	___wmul@multiplier+1,w,c
 13731  004036  0208               	mulwf	___wmul@multiplicand,c
 13732  004038  50F3               	movf	prodl,w,c
 13733  00403A  260B               	addwf	___wmul@product+1,f,c
 13734  00403C  C00A  F006         	movff	___wmul@product,?___wmul
 13735  004040  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 13736  004044  0012               	return		;funcret
 13737  004046                     __end_of___wmul:
 13738                           	opt callstack 0
 13739                           
 13740 ;; *************** function _lcdInst *****************
 13741 ;; Defined at:
 13742 ;;		line 64 in file "lcd.c"
 13743 ;; Parameters:    Size  Location     Type
 13744 ;;  data            1    wreg     unsigned char 
 13745 ;; Auto vars:     Size  Location     Type
 13746 ;;  data            1    8[COMRAM] unsigned char 
 13747 ;; Return value:  Size  Location     Type
 13748 ;;                  1    wreg      void 
 13749 ;; Registers used:
 13750 ;;		wreg, status,2, status,0, cstack
 13751 ;; Tracked objects:
 13752 ;;		On entry : 0/0
 13753 ;;		On exit  : 0/0
 13754 ;;		Unchanged: 0/0
 13755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13760 ;;Total ram usage:        1 bytes
 13761 ;; Hardware stack levels used:    1
 13762 ;; Hardware stack levels required when called:    5
 13763 ;; This function calls:
 13764 ;;		_send_byte
 13765 ;; This function is called by:
 13766 ;;		_doDisplayLog
 13767 ;;		_tirePositioning
 13768 ;;		_doOperation
 13769 ;;		_main
 13770 ;;		_initLCD
 13771 ;;		_mainEEPROM
 13772 ;;		_lcd_shift_cursor
 13773 ;;		_lcd_shift_display
 13774 ;; This function uses a non-reentrant model
 13775 ;;
 13776                           
 13777                           	psect	text62
 13778  00416E                     __ptext62:
 13779                           	opt callstack 0
 13780  00416E                     _lcdInst:
 13781                           	opt callstack 23
 13782                           
 13783                           ;incstack = 0
 13784                           ;lcdInst@data stored from wreg
 13785  00416E  6E09               	movwf	lcdInst@data,c
 13786                           
 13787                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 13788  004170  948C               	bcf	3980,2,c	;volatile
 13789                           
 13790                           ;lcd.c: 66:     send_byte(data);
 13791  004172  5009               	movf	lcdInst@data,w,c
 13792  004174  ECA8  F020         	call	_send_byte
 13793  004178  0012               	return		;funcret
 13794  00417A                     __end_of_lcdInst:
 13795                           	opt callstack 0
 13796                           
 13797 ;; *************** function _send_byte *****************
 13798 ;; Defined at:
 13799 ;;		line 55 in file "lcd.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;  data            1    wreg     unsigned char 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;  data            1    7[COMRAM] unsigned char 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1    wreg      void 
 13806 ;; Registers used:
 13807 ;;		wreg, status,2, status,0, cstack
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;Total ram usage:        1 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; Hardware stack levels required when called:    4
 13820 ;; This function calls:
 13821 ;;		_send_nibble
 13822 ;; This function is called by:
 13823 ;;		_lcdInst
 13824 ;;		_initLCD
 13825 ;;		_putch
 13826 ;; This function uses a non-reentrant model
 13827 ;;
 13828                           
 13829                           	psect	text63
 13830  004150                     __ptext63:
 13831                           	opt callstack 0
 13832  004150                     _send_byte:
 13833                           	opt callstack 24
 13834                           
 13835                           ;incstack = 0
 13836                           ;send_byte@data stored from wreg
 13837  004150  6E08               	movwf	send_byte@data,c
 13838                           
 13839                           ;lcd.c: 57:     send_nibble(data >> 4);
 13840  004152  3808               	swapf	send_byte@data,w,c
 13841  004154  0B0F               	andlw	15
 13842  004156  EC94  F020         	call	_send_nibble
 13843                           
 13844                           ;lcd.c: 60:     send_nibble(data);
 13845  00415A  5008               	movf	send_byte@data,w,c
 13846  00415C  EC94  F020         	call	_send_nibble
 13847  004160  0012               	return		;funcret
 13848  004162                     __end_of_send_byte:
 13849                           	opt callstack 0
 13850                           
 13851 ;; *************** function _send_nibble *****************
 13852 ;; Defined at:
 13853 ;;		line 44 in file "lcd.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  data            1    wreg     unsigned char 
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;  data            1    6[COMRAM] unsigned char 
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  1    wreg      void 
 13860 ;; Registers used:
 13861 ;;		wreg, status,2, status,0, cstack
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;Total ram usage:        1 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; Hardware stack levels required when called:    3
 13874 ;; This function calls:
 13875 ;;		_pulse_e
 13876 ;; This function is called by:
 13877 ;;		_send_byte
 13878 ;;		_initLCD
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882                           	psect	text64
 13883  004128                     __ptext64:
 13884                           	opt callstack 0
 13885  004128                     _send_nibble:
 13886                           	opt callstack 25
 13887                           
 13888                           ;incstack = 0
 13889                           ;send_nibble@data stored from wreg
 13890  004128  6E07               	movwf	send_nibble@data,c
 13891                           
 13892                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 13893  00412A  508C               	movf	3980,w,c	;volatile
 13894  00412C  0B0F               	andlw	15
 13895  00412E  6E8C               	movwf	3980,c	;volatile
 13896                           
 13897                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 13898  004130  3807               	swapf	send_nibble@data,w,c
 13899  004132  0BF0               	andlw	240
 13900  004134  108C               	iorwf	3980,w,c	;volatile
 13901  004136  6E8C               	movwf	3980,c	;volatile
 13902                           
 13903                           ;lcd.c: 48:     pulse_e();
 13904  004138  ECD3  F01F         	call	_pulse_e	;wreg free
 13905  00413C  0012               	return		;funcret
 13906  00413E                     __end_of_send_nibble:
 13907                           	opt callstack 0
 13908                           
 13909 ;; *************** function _pulse_e *****************
 13910 ;; Defined at:
 13911 ;;		line 28 in file "lcd.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;		None
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;  interruptSta    1    5[COMRAM] unsigned char 
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  1    wreg      void 
 13918 ;; Registers used:
 13919 ;;		wreg
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/0
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13929 ;;Total ram usage:        1 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:    2
 13932 ;; This function calls:
 13933 ;;		Nothing
 13934 ;; This function is called by:
 13935 ;;		_send_nibble
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text65
 13940  003FA6                     __ptext65:
 13941                           	opt callstack 0
 13942  003FA6                     _pulse_e:
 13943                           	opt callstack 25
 13944                           
 13945                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 13946                           
 13947                           ;incstack = 0
 13948  003FA6  0E00               	movlw	0
 13949  003FA8  BEF2               	btfsc	4082,7,c	;volatile
 13950  003FAA  0E01               	movlw	1
 13951  003FAC  6E06               	movwf	pulse_e@interruptState,c
 13952                           
 13953                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 13954  003FAE  9EF2               	bcf	4082,7,c	;volatile
 13955                           
 13956                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 13957  003FB0  868C               	bsf	3980,3,c	;volatile
 13958                           
 13959                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 13960  003FB2  0E14               	movlw	20
 13961  003FB4                     u10517:
 13962  003FB4  2EE8               	decfsz	wreg,f,c
 13963  003FB6  D7FE               	bra	u10517
 13964  003FB8  D000               	nop2	
 13965                           
 13966                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 13967  003FBA  968C               	bcf	3980,3,c	;volatile
 13968                           
 13969                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 13970  003FBC  0E53               	movlw	83
 13971  003FBE                     u10527:
 13972  003FBE  2EE8               	decfsz	wreg,f,c
 13973  003FC0  D7FE               	bra	u10527
 13974  003FC2  F000               	nop	
 13975                           
 13976                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 13977  003FC4  B006               	btfsc	pulse_e@interruptState,0,c
 13978  003FC6  D002               	bra	u7465
 13979  003FC8  9EF2               	bcf	4082,7,c	;volatile
 13980  003FCA  D001               	bra	u7466
 13981  003FCC                     u7465:
 13982  003FCC  8EF2               	bsf	4082,7,c	;volatile
 13983  003FCE                     u7466:
 13984  003FCE  0012               	return		;funcret
 13985  003FD0                     __end_of_pulse_e:
 13986                           	opt callstack 0
 13987                           
 13988 ;; *************** function ___llmod *****************
 13989 ;; Defined at:
 13990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;  dividend        4    5[COMRAM] unsigned long 
 13993 ;;  divisor         4    9[COMRAM] unsigned long 
 13994 ;; Auto vars:     Size  Location     Type
 13995 ;;  counter         1   13[COMRAM] unsigned char 
 13996 ;; Return value:  Size  Location     Type
 13997 ;;                  4    5[COMRAM] unsigned long 
 13998 ;; Registers used:
 13999 ;;		wreg, status,2, status,0
 14000 ;; Tracked objects:
 14001 ;;		On entry : 0/0
 14002 ;;		On exit  : 0/0
 14003 ;;		Unchanged: 0/0
 14004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14005 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;Total ram usage:        9 bytes
 14010 ;; Hardware stack levels used:    1
 14011 ;; Hardware stack levels required when called:    2
 14012 ;; This function calls:
 14013 ;;		Nothing
 14014 ;; This function is called by:
 14015 ;;		_main
 14016 ;; This function uses a non-reentrant model
 14017 ;;
 14018                           
 14019                           	psect	text66
 14020  0039F0                     __ptext66:
 14021                           	opt callstack 0
 14022  0039F0                     ___llmod:
 14023                           	opt callstack 28
 14024                           
 14025                           ;incstack = 0
 14026  0039F0  500A               	movf	___llmod@divisor,w,c
 14027  0039F2  100B               	iorwf	___llmod@divisor+1,w,c
 14028  0039F4  100C               	iorwf	___llmod@divisor+2,w,c
 14029  0039F6  100D               	iorwf	___llmod@divisor+3,w,c
 14030  0039F8  B4D8               	btfsc	status,2,c
 14031  0039FA  D024               	goto	l1154
 14032  0039FC  0E01               	movlw	1
 14033  0039FE  6E0E               	movwf	___llmod@counter,c
 14034  003A00  D006               	goto	l6436
 14035  003A02                     l6434:
 14036  003A02  90D8               	bcf	status,0,c
 14037  003A04  360A               	rlcf	___llmod@divisor,f,c
 14038  003A06  360B               	rlcf	___llmod@divisor+1,f,c
 14039  003A08  360C               	rlcf	___llmod@divisor+2,f,c
 14040  003A0A  360D               	rlcf	___llmod@divisor+3,f,c
 14041  003A0C  2A0E               	incf	___llmod@counter,f,c
 14042  003A0E                     l6436:
 14043  003A0E  AE0D               	btfss	___llmod@divisor+3,7,c
 14044  003A10  D7F8               	goto	l6434
 14045  003A12                     u6930:
 14046  003A12  500A               	movf	___llmod@divisor,w,c
 14047  003A14  5C06               	subwf	___llmod@dividend,w,c
 14048  003A16  500B               	movf	___llmod@divisor+1,w,c
 14049  003A18  5807               	subwfb	___llmod@dividend+1,w,c
 14050  003A1A  500C               	movf	___llmod@divisor+2,w,c
 14051  003A1C  5808               	subwfb	___llmod@dividend+2,w,c
 14052  003A1E  500D               	movf	___llmod@divisor+3,w,c
 14053  003A20  5809               	subwfb	___llmod@dividend+3,w,c
 14054  003A22  A0D8               	btfss	status,0,c
 14055  003A24  D008               	goto	l6442
 14056  003A26  500A               	movf	___llmod@divisor,w,c
 14057  003A28  5E06               	subwf	___llmod@dividend,f,c
 14058  003A2A  500B               	movf	___llmod@divisor+1,w,c
 14059  003A2C  5A07               	subwfb	___llmod@dividend+1,f,c
 14060  003A2E  500C               	movf	___llmod@divisor+2,w,c
 14061  003A30  5A08               	subwfb	___llmod@dividend+2,f,c
 14062  003A32  500D               	movf	___llmod@divisor+3,w,c
 14063  003A34  5A09               	subwfb	___llmod@dividend+3,f,c
 14064  003A36                     l6442:
 14065  003A36  90D8               	bcf	status,0,c
 14066  003A38  320D               	rrcf	___llmod@divisor+3,f,c
 14067  003A3A  320C               	rrcf	___llmod@divisor+2,f,c
 14068  003A3C  320B               	rrcf	___llmod@divisor+1,f,c
 14069  003A3E  320A               	rrcf	___llmod@divisor,f,c
 14070  003A40  2E0E               	decfsz	___llmod@counter,f,c
 14071  003A42  D7E7               	goto	u6930
 14072  003A44                     l1154:
 14073  003A44  C006  F006         	movff	___llmod@dividend,?___llmod
 14074  003A48  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 14075  003A4C  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 14076  003A50  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 14077  003A54  0012               	return		;funcret
 14078  003A56                     __end_of___llmod:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function _interruptHandler *****************
 14082 ;; Defined at:
 14083 ;;		line 1308 in file "main.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;		None
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0, cstack
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:    1
 14104 ;; This function calls:
 14105 ;;		_updateMotorAEncoder
 14106 ;;		_updateMotorBEncoder
 14107 ;; This function is called by:
 14108 ;;		Interrupt level 2
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           	psect	intcode
 14113  000008                     __pintcode:
 14114                           	opt callstack 0
 14115  000008                     _interruptHandler:
 14116                           	opt callstack 17
 14117                           
 14118                           ;incstack = 0
 14119  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14120  00000A  EDA2  F01E         	call	int_func,f	;refresh shadow registers
 14121                           
 14122                           	psect	intcode_body
 14123  003D44                     __pintcode_body:
 14124                           	opt callstack 17
 14125  003D44                     int_func:
 14126                           	opt callstack 17
 14127  003D44  0006               	pop		; remove dummy address from shadow register refresh
 14128                           
 14129                           ;main.c: 1310:     if(INT1IF){
 14130  003D46  A0F0               	btfss	4080,0,c	;volatile
 14131  003D48  D005               	goto	i2l439
 14132                           
 14133                           ;main.c: 1313:         keyPressed = 1;
 14134  003D4A  0E01               	movlw	1
 14135  003D4C  0100               	movlb	0	; () banked
 14136  003D4E  6FEB               	movwf	_keyPressed& (0+255),b	;volatile
 14137                           
 14138                           ; BSR set to: 0
 14139                           ;main.c: 1314:         INT1IF = 0;
 14140  003D50  90F0               	bcf	4080,0,c	;volatile
 14141                           
 14142                           ;main.c: 1315:     } else if (TMR0IF) {
 14143  003D52  D019               	goto	i2l442
 14144  003D54                     i2l439:
 14145  003D54  A4F2               	btfss	4082,2,c	;volatile
 14146  003D56  D00C               	goto	i2l441
 14147                           
 14148                           ;main.c: 1316:     INTCONbits.TMR0IF = 0;
 14149  003D58  94F2               	bcf	4082,2,c	;volatile
 14150                           
 14151                           ;main.c: 1317:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 14152  003D5A  0EFB               	movlw	251
 14153  003D5C  6ED7               	movwf	4055,c	;volatile
 14154                           
 14155                           ;main.c: 1318:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 14156  003D5E  0E1E               	movlw	30
 14157  003D60  6ED6               	movwf	4054,c	;volatile
 14158                           
 14159                           ;main.c: 1319:     millisecondsMeasured++;
 14160  003D62  0E01               	movlw	1
 14161  003D64  2675               	addwf	_millisecondsMeasured,f,c	;volatile
 14162  003D66  0E00               	movlw	0
 14163  003D68  2276               	addwfc	_millisecondsMeasured+1,f,c	;volatile
 14164  003D6A  2277               	addwfc	_millisecondsMeasured+2,f,c	;volatile
 14165  003D6C  2278               	addwfc	_millisecondsMeasured+3,f,c	;volatile
 14166                           
 14167                           ;main.c: 1320:    } else if (INT2IF){
 14168  003D6E  D00B               	goto	i2l442
 14169  003D70                     i2l441:
 14170  003D70  A2F0               	btfss	4080,1,c	;volatile
 14171  003D72  D004               	goto	i2l443
 14172                           
 14173                           ;main.c: 1321:        INT2IF = 0;
 14174  003D74  92F0               	bcf	4080,1,c	;volatile
 14175                           
 14176                           ;main.c: 1322:        updateMotorBEncoder();
 14177  003D76  ECB6  F01D         	call	_updateMotorBEncoder	;wreg free
 14178                           
 14179                           ;main.c: 1323:    } else if (INT0IF){
 14180  003D7A  D005               	goto	i2l442
 14181  003D7C                     i2l443:
 14182  003D7C  A2F2               	btfss	4082,1,c	;volatile
 14183  003D7E  D003               	goto	i2l442
 14184                           
 14185                           ;main.c: 1324:        INT0IF = 0;
 14186  003D80  92F2               	bcf	4082,1,c	;volatile
 14187                           
 14188                           ;main.c: 1325:        updateMotorAEncoder();
 14189  003D82  ECE1  F01D         	call	_updateMotorAEncoder	;wreg free
 14190  003D86                     i2l442:
 14191  003D86  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14192  003D88  0011               	retfie		f
 14193  003D8A                     __end_of_interruptHandler:
 14194                           	opt callstack 0
 14195                           
 14196 ;; *************** function _updateMotorBEncoder *****************
 14197 ;; Defined at:
 14198 ;;		line 151 in file "main.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;  directionPin    2    3[COMRAM] int 
 14203 ;;  interruptPin    2    1[COMRAM] int 
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		wreg, status,2, status,0
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14217 ;;Total ram usage:        5 bytes
 14218 ;; Hardware stack levels used:    1
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_interruptHandler
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text68
 14227  003B6C                     __ptext68:
 14228                           	opt callstack 0
 14229  003B6C                     _updateMotorBEncoder:
 14230                           	opt callstack 17
 14231                           
 14232                           ;main.c: 152:   int interruptPinState = PORTBbits.RB2;
 14233                           
 14234                           ;incstack = 0
 14235  003B6C  A481               	btfss	3969,2,c	;volatile
 14236  003B6E  D003               	goto	i2u665_40
 14237  003B70  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 14238  003B72  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 14239  003B74  D001               	goto	i2u665_48
 14240  003B76                     i2u665_40:
 14241  003B76  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 14242  003B78                     i2u665_48:
 14243  003B78  5001               	movf	??_updateMotorBEncoder,w,c
 14244  003B7A  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 14245  003B7C  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 14246                           
 14247                           ;main.c: 153:   int directionPin = PORTCbits.RC0;
 14248  003B7E  A082               	btfss	3970,0,c	;volatile
 14249  003B80  D003               	goto	i2u666_40
 14250  003B82  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 14251  003B84  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 14252  003B86  D001               	goto	i2u666_48
 14253  003B88                     i2u666_40:
 14254  003B88  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 14255  003B8A                     i2u666_48:
 14256  003B8A  5001               	movf	??_updateMotorBEncoder,w,c
 14257  003B8C  6E04               	movwf	updateMotorBEncoder@directionPin,c
 14258  003B8E  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 14259                           
 14260                           ;main.c: 154:   if(directionPin == interruptPinState){
 14261  003B90  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 14262  003B92  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 14263  003B94  E10E               	bnz	i2l6110
 14264  003B96  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 14265  003B98  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 14266  003B9A  A4D8               	btfss	status,2,c
 14267  003B9C  D00A               	goto	i2l6110
 14268                           
 14269                           ;main.c: 155:     motorBDistance--;
 14270  003B9E  0EFF               	movlw	255
 14271  003BA0  0100               	movlb	0	; () banked
 14272  003BA2  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 14273  003BA4  0EFF               	movlw	255
 14274  003BA6  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 14275  003BA8  0EFF               	movlw	255
 14276  003BAA  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 14277  003BAC  0EFF               	movlw	255
 14278  003BAE  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 14279                           
 14280                           ;main.c: 156:   } else {
 14281  003BB0  0012               	return	
 14282  003BB2                     i2l6110:
 14283                           
 14284                           ;main.c: 157:     motorBDistance++;
 14285  003BB2  0E01               	movlw	1
 14286  003BB4  0100               	movlb	0	; () banked
 14287  003BB6  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 14288  003BB8  0E00               	movlw	0
 14289  003BBA  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 14290  003BBC  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 14291  003BBE  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 14292                           
 14293                           ; BSR set to: 0
 14294  003BC0  0012               	return		;funcret
 14295  003BC2                     __end_of_updateMotorBEncoder:
 14296                           	opt callstack 0
 14297                           
 14298 ;; *************** function _updateMotorAEncoder *****************
 14299 ;; Defined at:
 14300 ;;		line 182 in file "main.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;		None
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;  directionPin    2    3[COMRAM] int 
 14305 ;;  interruptPin    2    1[COMRAM] int 
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  1    wreg      void 
 14308 ;; Registers used:
 14309 ;;		wreg, status,2, status,0
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/0
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14318 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;Total ram usage:        5 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; This function calls:
 14322 ;;		Nothing
 14323 ;; This function is called by:
 14324 ;;		_interruptHandler
 14325 ;; This function uses a non-reentrant model
 14326 ;;
 14327                           
 14328                           	psect	text69
 14329  003BC2                     __ptext69:
 14330                           	opt callstack 0
 14331  003BC2                     _updateMotorAEncoder:
 14332                           	opt callstack 17
 14333                           
 14334                           ;main.c: 183:   int interruptPinState = PORTBbits.RB0;
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;incstack = 0
 14338  003BC2  A081               	btfss	3969,0,c	;volatile
 14339  003BC4  D003               	goto	i2u668_40
 14340  003BC6  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 14341  003BC8  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 14342  003BCA  D001               	goto	i2u668_48
 14343  003BCC                     i2u668_40:
 14344  003BCC  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 14345  003BCE                     i2u668_48:
 14346  003BCE  5001               	movf	??_updateMotorAEncoder,w,c
 14347  003BD0  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 14348  003BD2  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 14349                           
 14350                           ;main.c: 184:   int directionPin = PORTEbits.RE1;
 14351  003BD4  A284               	btfss	3972,1,c	;volatile
 14352  003BD6  D003               	goto	i2u669_40
 14353  003BD8  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 14354  003BDA  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 14355  003BDC  D001               	goto	i2u669_48
 14356  003BDE                     i2u669_40:
 14357  003BDE  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 14358  003BE0                     i2u669_48:
 14359  003BE0  5001               	movf	??_updateMotorAEncoder,w,c
 14360  003BE2  6E04               	movwf	updateMotorAEncoder@directionPin,c
 14361  003BE4  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 14362                           
 14363                           ;main.c: 185:   if(directionPin == interruptPinState){
 14364  003BE6  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 14365  003BE8  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 14366  003BEA  E10C               	bnz	i2l6118
 14367  003BEC  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 14368  003BEE  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 14369  003BF0  A4D8               	btfss	status,2,c
 14370  003BF2  D008               	goto	i2l6118
 14371                           
 14372                           ;main.c: 186:     motorADistance++;
 14373  003BF4  0E01               	movlw	1
 14374  003BF6  0100               	movlb	0	; () banked
 14375  003BF8  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 14376  003BFA  0E00               	movlw	0
 14377  003BFC  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 14378  003BFE  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 14379  003C00  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 14380                           
 14381                           ;main.c: 187:   } else {
 14382  003C02  0012               	return	
 14383  003C04                     i2l6118:
 14384                           
 14385                           ;main.c: 188:     motorADistance--;
 14386  003C04  0EFF               	movlw	255
 14387  003C06  0100               	movlb	0	; () banked
 14388  003C08  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 14389  003C0A  0EFF               	movlw	255
 14390  003C0C  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 14391  003C0E  0EFF               	movlw	255
 14392  003C10  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 14393  003C12  0EFF               	movlw	255
 14394  003C14  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 14395                           
 14396                           ; BSR set to: 0
 14397  003C16  0012               	return		;funcret
 14398  003C18                     __end_of_updateMotorAEncoder:
 14399                           	opt callstack 0
 14400                           
 14401                           	psect	rparam
 14402  0000                     
 14403                           	psect	temp
 14404  00007A                     btemp:
 14405                           	opt callstack 0
 14406  00007A                     	ds	1
 14407  0000                     int$flags	set	btemp
 14408  0000                     wtemp8	set	btemp+1
 14409  0000                     ttemp5	set	btemp+1
 14410  0000                     ttemp6	set	btemp+4
 14411  0000                     ttemp7	set	btemp+8
 14412                           tosu	equ	0xFFF
 14413                           tosh	equ	0xFFE
 14414                           tosl	equ	0xFFD
 14415                           stkptr	equ	0xFFC
 14416                           pclatu	equ	0xFFB
 14417                           pclath	equ	0xFFA
 14418                           pcl	equ	0xFF9
 14419                           tblptru	equ	0xFF8
 14420                           tblptrh	equ	0xFF7
 14421                           tblptrl	equ	0xFF6
 14422                           tablat	equ	0xFF5
 14423                           prodh	equ	0xFF4
 14424                           prodl	equ	0xFF3
 14425                           indf0	equ	0xFEF
 14426                           postinc0	equ	0xFEE
 14427                           postdec0	equ	0xFED
 14428                           preinc0	equ	0xFEC
 14429                           plusw0	equ	0xFEB
 14430                           fsr0h	equ	0xFEA
 14431                           fsr0l	equ	0xFE9
 14432                           wreg	equ	0xFE8
 14433                           indf1	equ	0xFE7
 14434                           postinc1	equ	0xFE6
 14435                           postdec1	equ	0xFE5
 14436                           preinc1	equ	0xFE4
 14437                           plusw1	equ	0xFE3
 14438                           fsr1h	equ	0xFE2
 14439                           fsr1l	equ	0xFE1
 14440                           bsr	equ	0xFE0
 14441                           indf2	equ	0xFDF
 14442                           postinc2	equ	0xFDE
 14443                           postdec2	equ	0xFDD
 14444                           preinc2	equ	0xFDC
 14445                           plusw2	equ	0xFDB
 14446                           fsr2h	equ	0xFDA
 14447                           fsr2l	equ	0xFD9
 14448                           status	equ	0xFD8


Data Sizes:
    Strings     381
    Constant    35
    Data        9
    BSS         545
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128     87     116
    BANK1           256     89     129
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_77(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[3]), 
		 -> STR_59(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_77(CODE[3]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[3]), 
		 -> STR_59(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1932_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_56(CODE[3]), STR_55(CODE[9]), STR_54(CODE[9]), STR_53(CODE[10]), 
		 -> STR_52(CODE[10]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), 
		 -> STR_24(CODE[11]), STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_51(CODE[16]), STR_49(CODE[14]), 
		 -> STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), 
		 -> STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), 
		 -> STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _sendArduinoStandbyClampRequest->_I2C_Master_Write
    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_tirePositioning
    _tirePositioning->_setMotorSpeeds
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _sendArduinoAbortOperationMessage->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_opErrorCorrectionDegrees
    _tirePositioning->_setMotorSpeeds
    _opErrorCorrectionDegrees->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doOperation

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  275309
                                            114 COMRAM     2     2      0
                                             71 BANK0     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
     _sendArduinoStandbyClampRequest
 ---------------------------------------------------------------------------------
 (1) _sendArduinoStandbyClampRequest                       1     1      0    1489
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     762
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0      90
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         97    97      0  177864
                                             67 BANK0      4     4      0
                                              0 BANK1     89    89      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
           _opErrorCorrectionDegrees
                             _printf
              _requestIsTireDropDone
   _sendArduinoAbortOperationMessage
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     29    25      4   20882
                                            113 COMRAM     1     1      0
                                              8 BANK0     28    24      4
                                _abs
                            _lcdInst
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                             18    12      6     219
                                              5 COMRAM    18    12      6
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1489
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1489
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoAbortOperationMessage                     1     1      0    1489
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1534
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1466
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _opErrorCorrectionDegrees                            33    17     16   43880
                                             34 BANK0     33    17     16
                           ___xxtofl
                                _abs
                 _errorCorrectedMove
 ---------------------------------------------------------------------------------
 (3) _errorCorrectedMove                                  26     8     18   39873
                                              8 BANK0     26     8     18
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   19312
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   13424
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    2816
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1417
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5033
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3953
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   47552
                                            101 COMRAM    11    11      0
                                             39 BANK0      2     0      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   44676
                                             97 COMRAM     4     4      0
                                             29 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   41487
                                             95 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           55    49      6   40879
                                             75 COMRAM    20    14      6
                                              0 BANK0     23    23      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7827
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7119
                                             36 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8243
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5806
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5527
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2945
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1842
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opErrorCorrectionDegrees
       ___xxtofl
       _abs
         ___aomod (ARG)
       _errorCorrectedMove
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _setMotorSpeeds
           ___xxtofl
           _set_pwm_duty_cycle
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoAbortOperationMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       _abs
         ___aomod (ARG)
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
   _sendArduinoStandbyClampRequest
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     1E0      37       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      81       7       50.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     57      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      34        0.0%
DATA                 0      0     34E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 05:03:26 2019

                                 ___fldiv@aexp 0045                                   ___fldiv@bexp 0044  
                                 ___fldiv@sign 003D                                    __CFG_CPD$ON 000000  
                          ___wmul@multiplicand 0008                                    __CFG_BORV$3 000000  
               doOperation@motorBStartDistance 0139                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                                    __CFG_OSC$HS 000000  
             __end_of_opErrorCorrectionDegrees 32D4                                            l252 372A  
                                          l254 373A                                            l350 0D8C  
                                          l416 1248                                            l265 249C  
                                          l623 2D64                                            l642 2A22  
                                          l644 2A2A                                            l576 36B4  
                                          l657 25EE                                            l761 3824  
                                          l594 21B8                                            l659 25F6  
                                          l596 21C0                                            l999 3368  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                          _PSA 007EAB                                            _abs 3EB8  
                                          _pad 3684                                   ___awmod@sign 000B  
                             ??_init_motor_PWM 0006                                            wreg 000FE8  
                                 ___flmul@aexp 0021                                   ___flmul@bexp 0026  
                                 ___flmul@sign 0020                                   ___flmul@temp 002B  
                            _doDisplayLog$2301 006F                                   ___flmul@prod 0027  
                   __end_of_errorCorrectedMove 2144                                   __CFG_LVP$OFF 000000  
                                 ___fltol@exp1 0057                                   __CFG_WDT$OFF 000000  
                                         ?_abs 0018                                           l1154 3A44  
                                         l1330 1E3C                                           l1172 3450  
                                         l1182 35B8                                           l1318 1DD2  
                                         l1263 1A96                                           l1440 30B8  
                                         l1264 1A74                                           l1409 3EE0  
                                         l1329 1E40                                           l1516 3CF4  
                                         l1348 1682                                           l1365 1920  
                                         l1357 189A                                           l1358 1896  
                                         l1279 1B68                                           l1288 1BCE  
                                         l1289 1BCA                                           l1396 2EFE  
                                         l1389 2E80                                           l5314 1A28  
                                         l5252 1984                                           l5422 1C3A  
                                         l5414 1C14                                           l5350 1ADC  
                                         l5342 1ABA                                           l5326 1A82  
                                         ?_pad 001A                                           l7104 3E56  
                                         l7112 3D94                                           l7200 2C44  
                                         l5352 1AE0                                           l5360 1AF2  
                                         l5328 1A86                                           l5272 19C8  
                                         l5248 1980                                           l8000 372E  
                                         l7114 3D98                                           l7210 2CA0  
                                         l5426 1C42                                           l5370 1B58  
                                         l7108 3E6C                                           l7132 369E  
                                         l8020 0058                                           l5428 1C44  
                                         l5284 19EC                                           l5276 19CC  
                                         l8004 373E                                           l7142 36D6  
                                         l7214 2CB6                                           l7230 30EE  
                                         l8022 005A                                           l7302 1D04  
                                         l7136 36AC                                           l7240 3140  
                                         l8120 0594                                           l8112 04D8  
                                         l8104 043C                                           l8040 007A  
                                         l8032 0072                                           l8024 006A  
                                         l8200 211A                                           l6424 3C70  
                                         l6442 3A36                                           l6434 3A02  
                                         l7146 3704                                           l7138 36BE  
                                         l7218 2CDC                                           l7250 319E  
                                         l7234 3112                                           l5378 1B8C  
                                         l5394 1BAC                                           l7410 1632  
                                         l5706 37D6                                           l6436 3A0E  
                                         l8060 0150                                           l8044 0084  
                                         l8036 0076                                           l8028 006E  
                                         l8212 3B2A                                           l5388 1BA2  
                                         l7340 1DD0                                           l7316 1D32  
                                         l7308 1D1A                                           l7412 1642  
                                         l8204 2126                                           l5636 3A66  
                                         l5708 37E2                                           l7094 3932  
                                         l7254 31C4                                           l7246 3188  
                                         l7238 312C                                           l8134 0664  
                                         l8062 015E                                           l8046 00C6  
                                         l8214 3B50                                           l7334 1DAA  
                                         l7326 1D82                                           l7270 1C8C  
                                         l8302 3208                                           l5718 3816  
                                         l7192 2C0A                                           l7600 33DE  
                                         l8400 1548                                           l7352 1E06  
                                         l7520 193E                                           l7504 18DE  
                                         l7408 162E                                           l5912 3FA2  
                                         l8240 2414                                           l8232 23CC  
                                         l7186 2BE2                                           l7610 343A  
                                         l8154 07B2                                           l8058 0132  
                                         l7346 1DE8                                           l7290 1CCC  
                                         l7274 1C90                                           l7530 3308  
                                         l7426 166E                                           l8306 327C  
                                         l8250 2460                                           l7620 355A  
                                         l8148 0776                                           l8076 020C  
                                         l8164 07D4                                           l8412 1576  
                                         l8404 1556                                           l7380 1ED2  
                                         l7372 1E84                                           l7508 18FC  
                                         l7436 16A0                                           l7428 1672  
                                         l8260 24AC                                           l7198 2C30  
                                         l8158 07BC                                           l8086 02BE  
                                         l7294 1CD0                                           l7534 333C  
                                         l8270 252A                                           l8254 248C  
                                         l8246 2434                                           l7720 3C38  
                                         l8096 03CE                                           l8408 1560  
                                         l8360 1374                                           l7376 1EA8  
                                         l7544 33A0                                           l8192 20F6  
                                         l8520 097A                                           l8512 0918  
                                         l7626 35A2                                           l7618 3546  
                                         l8418 15B8                                           l8426 15D6  
                                         l8338 128A                                           l7386 1EDE  
                                         l7538 3352                                           l7570 34DA  
                                         l7554 3490                                           l7642 2EAE  
                                         l8602 0C1A                                           l8530 09A2  
                                         l7812 2D94                                           l8428 15F2  
                                         l5980 38F8                                           l5972 38D8  
                                         l5964 38BE                                           l7388 1EE0  
                                         l7484 1860                                           l7580 34F2  
                                         l7644 2EB4                                           l7636 2E90  
                                         l8196 2102                                           l8268 250E  
                                         l8276 2560                                           l8604 0C20  
                                         l7718 3C2C                                           l7734 219A  
                                         l7830 2E24                                           l7822 2DF0  
                                         l5974 38E0                                           l7478 1842  
                                         l7582 34FE                                           l7574 34EA  
                                         l7654 2F24                                           l7646 2EC0  
                                         l8286 2594                                           l8606 0C28  
                                         l7752 21EA                                           l7816 2DB2  
                                         l7808 2D7C                                           l5984 3902  
                                         l5968 38CA                                           l7672 2F70  
                                         l7656 2F30                                           l7648 2EE6  
                                         l8296 25C6                                           l8552 0A6C  
                                         l7762 22E2                                           l7826 2E0C  
                                         l7930 27D8                                           l7906 26EA  
                                         l7914 2760                                           l8386 14EE  
                                         l7684 3E44                                           l7748 21DA  
                                         l7844 2A62                                           l8388 150A  
                                         l5988 3910                                           l7588 351A  
                                         l8644 0D5C                                           l8660 0DCC  
                                         l7782 234A                                           l7598 33CA  
                                         l7854 2B4E                                           l8638 0D32  
                                         l8558 0AFC                                           l7952 2FEE  
                                         l7936 2F94                                           l8672 0E06  
                                         l8664 0DE8                                           l8680 0E18  
                                         l8648 0D6C                                           l8816 0F04  
                                         l8808 0ED6                                           l8904 113C  
                                         l7962 3058                                           l7954 2FF6  
                                         l7946 2FDE                                           l7938 2F98  
                                         l7786 2362                                           l8658 0D90  
                                         l8930 11D0                                           l8922 11B6  
                                         l8906 116C                                           l7956 2FFC  
                                         l7892 265C                                           l7884 263A  
                                         l8676 0E12                                           l8588 0BDC  
                                         l8836 0FB0                                           l7958 3024  
                                         l7798 2D28                                           l7982 3604  
                                         l7878 260A                                           l8950 120E  
                                         l8942 11F6                                           l8934 11DC  
                                         l8926 11C2                                           l8918 11AA  
                                         l8854 1016                                           _P1M0 007DEE  
                                         _P1M1 007DEF                                           l7984 3612  
                                         l8946 1202                                           l8938 11EA  
                                         l8874 109E                                           l8958 121C  
                                         l8894 1114                                           l8798 0E70  
                                         STR_1 FFD4                                           l8888 1104  
                                         STR_2 FF7F                                           STR_3 FFD9  
                                         STR_4 FFCF                                           STR_5 FEC2  
                                         STR_6 FFD8                                           STR_7 FF0B  
                                         STR_8 FFD8                                           STR_9 FEA2  
                                         _LATB 000F8A                                           _LATD 000F8C  
                                         u6205 4062                                           u6206 4064  
                                         u5630 1A4A                                           u8030 1E92  
                                         u6270 37E6                                           u9000 2658  
                                         u5640 1A5A                                           u8040 1EB6  
                                         u6505 3AE2                                           u9010 268E  
                                         u5810 1BB0                                           u5650 1A5C  
                                         u8130 168E                                           u7500 3972  
                                         u9100 2792                                           u9020 2690  
                                         u6540 38E4                                           u8220 18EC  
                                         u8140 1804                                           u8300 347E  
                                         u9101 2790                                           u9110 27A0  
                                         u5830 1BC4                                           u8230 190A  
                                         u8310 34AE                                           u7520 3DBA  
                                         u9120 27A6                                           u9040 26C8  
                                         u5680 1A9E                                           u8145 17FA  
                                         u7610 3F42                                           u9050 26CA  
                                         u8315 34A4                                           u8420 355E  
                                         u7620 3F44                                           u7540 3F12  
                                         u8180 1890                                           u8500 2F3A  
                                         u9150 2FDA                                           u7630 3EB0  
                                         u7550 3F14                                           u9070 273C  
                                         u8350 3504                                           u6910 3CB2  
                                         u7527 3DB0                                           u7480 392A  
                                         u7800 3144                                           u7560 3EC6  
                                         u7640 3EB2                                           u9080 2770  
                                         u9400 0316                                           u8600 29C4  
                                         u7465 3FCC                                           u7721 2C10  
                                         u6930 3A12                                           u7466 3FCE  
                                         u9170 3088                                           u9250 365E  
                                         u7650 3CDC                                           u9330 0196  
                                         u5890 1C20                                           u8371 33AA  
                                         u9075 272A                                           u9180 308A  
                                         u7740 2C48                                           u7660 3CDE  
                                         u9340 0198                                           u8620 29E8  
                                         u8550 3E40                                           u8710 21D4  
                                         u8390 33E2                                           u9350 01A6  
                                         u9510 2112                                           u8615 29C6  
                                         u7680 3F72                                           u8720 22F0  
                                         u8801 2D08                                           u7690 3F74  
                                         u8650 216C                                           u9450 05C8  
                                         u8635 29EA                                           u8740 2312  
                                         u8660 216E                                           u9380 0240  
                                         u9700 25A8                                           u9540 23D6  
                                         u8741 2310                                           u8750 2320  
                                         u8910 2A18                                           u9470 06BC  
                                         u9710 25BC                                           u9550 23EA  
                                         u8760 2326                                           u9640 24C0  
                                         u8690 21AE                                           u8850 2DA8  
                                         u9810 15CE                                           u9490 20EE  
                                         u9650 24D4                                           u8780 2334  
                                         u8860 2DD4                                           u8940 2B78  
                                         u9548 23D8                                           u8941 2B76  
                                         u9821 0890                                           u8950 2B86  
                                         u7990 1E36                                           u9670 2544  
                                         u9558 23EC                                           u8960 2B8C  
                                         u9680 2576                                           u9920 0D08  
                                         u9840 095C                                           u8890 2E38  
                                         u9690 258A                                           u9930 0D14  
                                         u9850 096E                                           u8867 2DCA  
                                         u8980 25E4                                           u9940 0D20  
                                         u9860 098C                                           u9950 0D2C  
                                         u9926 0D0A                                           u9870 099C  
                                         u9846 095E                                           u9936 0D16  
                                         u9856 0970                                           u9946 0D22  
                                         u9890 0AF8                                           u9866 098E  
                                         u9956 0D2E                                           u9876 099E  
                                         u9990 0DFA                                   __CFG_PWRT$ON 000000  
                                         abs@a 0018                                           _dbuf 0161  
                                         _atoi 2F82                                           _ctoa 3C18  
                                         _main 0E52                                           _dtoa 2144  
                     __end_of_interruptHandler 3D8A                                           _keys FE5F  
                                         _logs 0181                                           _prec 00E3  
                                         _nout 00DF                                           pad@i 0021  
                                         pad@p 001E                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0023                                           fsr2l 000FD9  
                                         _stoa 2CFE                                           btemp 007A  
                                         _utoa 2A04                                           _xtoa 25D0  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 000E                                  __CFG_IESO$OFF 000000  
                      __size_of_setMotorSpeeds 0096                                ___fldiv@new_exp 003E  
                          __end_of_EncoderInit 4128                                  __CFG_MCLRE$ON 000000  
           tirePositioning@bottomPreviousState 0096                                   ___param_bank 000000  
                                        ??_abs 001A                                          ??_pad 0020  
                     __size_of_tirePositioning 0244                          I2C_Master_Read@ackBit 0007  
                             ?_I2C_Master_Init 0013                               ?_I2C_Master_Read 0001  
                             ?_I2C_Master_Wait 0001                               ?_I2C_Master_Stop 0001  
                               replaceOldLog@i 0006                      doOperation@distanceToPole 013D  
                                ___fltol@sign1 0056                                    ?_TIMER_INIT 0001  
                              __end_of___aodiv 2CFE                                          ?_atoi 000D  
                                        ?_ctoa 0025                                __end_of___fladd 1C60  
                                        ?_main 0001                                          ?_dtoa 0025  
                              __end_of___aomod 31E6                                          _CCP1X 007DED  
                              __end_of___fldiv 1EE8                                          _CCP1Y 007DEC  
                                        _CCP2X 007DD5                                          _CCP2Y 007DD4  
                                        _EEADR 000FA9                                          STR_10 FFCB  
                                        STR_11 FFDB                                          STR_20 FFE4  
                                        STR_12 FFFD                                          STR_13 FFCF  
                                        STR_21 FFE7                                          STR_30 FFD8  
                                        STR_22 FFE1                                          STR_14 FEEF  
                                        STR_15 FFCF                                          STR_31 FF93  
                                        STR_23 FF89                                          STR_40 FFD8  
                                        STR_32 FFD8                                          STR_24 FF74  
                                        STR_16 FE82                                          STR_17 FFD8  
                                        STR_25 FF5C                                          STR_41 FF42  
                                        STR_33 FF19                                          STR_50 FFD8  
                                        STR_42 FFD8                                          STR_34 FFD8  
                                        STR_26 FFD8                                          STR_18 FF27  
                                        STR_19 FFED                                          STR_27 FFA7  
                                        STR_35 FF4F                                          STR_43 FEB2  
                                        STR_51 FE92                                          STR_44 FFD8  
                                        STR_36 FFD8                                          STR_52 FF9D  
                                        STR_28 FED1                                __end_of___awmod 391A  
                                        STR_61 FFF7                                          STR_37 FFB9  
                                        STR_45 FFB0                                          STR_29 FEE0  
                                        STR_46 FFD8                                          STR_38 FFD8  
                                        STR_54 FFC2                                          STR_63 FFF7  
                                        STR_71 FFFA                                          STR_47 FF69  
                                        STR_39 FF35                                          STR_48 FFD8  
                                        STR_73 FFFA                                          STR_57 FFF4  
                                        STR_49 FEFD                                          STR_59 FFF4  
                                        STR_75 FFF1                                          STR_68 FFEE  
                                        STR_77 FFF1                                __end_of___flmul 1954  
                              __end_of___flsub 3D44                                __end_of___fltol 352C  
                                        ?_stoa 0013                                __end_of___lldiv 3836  
                                        ?_utoa 0025                                          u10307 10AA  
                                        u10180 11D8                                          u10317 112A  
                                        u10407 0B64                                          u10327 119E  
                                        u10417 0B7C                                          u10337 125C  
                              __end_of___lodiv 3472                                          u10507 15F8  
                                        u10427 0C36                                          u10347 398C  
                                        u10267 0F10                                          u10517 3FB4  
                                        u10437 0C4E                                          u10357 39A4  
                                        u10277 0FBC                                          u10527 3FBE  
                                        u10447 2398                                          u10367 39B6  
                                        u10287 1008                                          ?_xtoa 0025  
                              __end_of___llmod 3A56                                          u10457 23AE  
                                        u10377 39D8                                          u10297 1022  
                                        u10467 1272                                          u10387 09CC  
                                        u10477 1296                                          u10397 09E4  
                                        u10487 1380                                          u10497 153C  
                                        _T0PS0 007EA8                                          _T0PS1 007EA9  
                                        _T0PS2 007EAA                                __end_of___lomod 35DA  
                                        i2l441 3D70                                          i2l442 3D86  
                                        i2l443 3D7C                                          i2l439 3D54  
                                 main@keyValue 00D6                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 008F  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 417A  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 00D2                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0064  
                  set_pwm_duty_cycle@duty_valB 0066                                __end_of_opDelay 3ABA  
                              __end_of_initLCD 39F0                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 0094                                          _flags 00E5  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FE7B                 init_motor_PWM@TIMER2_PRESCALER FE7A  
                                        _fputc 391A                                __end_of_isalpha 3EB8  
                                        _fputs 3E4C                                __end_of_isdigit 3F7A  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 00E1  
                                        ctoa@c 0027                                          _putch 4162  
                                        ctoa@w 0028                                          main@i 00D3  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 3F1A                                __end_of_isspace 3E4C  
                              __end_of_isupper 3F4A                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 3C18                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 064A                    __end_of_updateMotorBEncoder 3BC2  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 3FD0  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          utoa@d 0027  
                                        utoa@i 0043                                          utoa@n 003B  
                                        utoa@p 0037                                          utoa@w 0039  
                                        status 000FD8                    I2C_Master_Read@receivedByte 0008  
                    requestIsTireDropDone@data 0009                                          wtemp8 007B  
                                        xtoa@c 004A                                          xtoa@d 0027  
                                        xtoa@i 0048                                          xtoa@n 0040  
                                        xtoa@p 003C                                          xtoa@w 003E  
                                        xtoa@x 002F                                __end_of_strncmp 3684  
                              __end_of_toupper 3CFE                       errorCorrectedMove@ASpeed 009E  
                             ___lodiv@dividend 0006                       errorCorrectedMove@BSpeed 00A0  
                               __CFG_PBADEN$ON 000000                                   _toupper$1989 0012  
                              __initialization 3836                            main@currentLogState 00D4  
                                 __end_of_atoi 30C2                                   __end_of_ctoa 3C68  
                                 __end_of_main 1266                                   __end_of_dtoa 238C  
                                 __end_of_keys FE70                                   __end_of_stoa 2E42  
                        __size_of_doDisplayLog 039C                                   __end_of_utoa 2BB6  
                                 __end_of_xtoa 2802                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 0073  
                                       ??_dtoa 002F                               opDelay@startTime 0014  
                                       ??_stoa 0017                                         ??_utoa 002F  
                                       ??_xtoa 0030                                  __activetblptr 000002  
                      set_pwm_duty_cycle@dutyA 0058                        set_pwm_duty_cycle@dutyB 005C  
                            ?_I2C_Master_Start 0001                               ___lodiv@quotient 0016  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 3CB4  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0075  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                         doOperation@tiresOnPole 0148  
                                       ?_putch 0001                         doOperation@tiresToDrop 0144  
                                       _INT0IE 007F94                                         _INT0IF 007F91  
                                       _INT1IE 007F83                                         _INT1IF 007F80  
                                       _INT2IE 007F84                                         _INT2IF 007F81  
                                       i2l6110 3BB2                                         i2l6118 3C04  
                           _set_pwm_duty_cycle 2802                                    _EncoderInit 4110  
                                vfpfcnvrt@done 0082                                         _TMR0IE 007F95  
                                       _TMR0IF 007F92                                         _TMR0ON 007EAF  
                                       _TMR2ON 007E52                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                               __end_of___xxtofl 2F82  
            __size_of_opErrorCorrectionDegrees 00EE                                   _doDisplayLog 1266  
                          __size_of_TIMER_INIT 001E                      ?_opErrorCorrectionDegrees 00A2  
     opErrorCorrectionDegrees@maxOperationTime 00AE                            ?_set_pwm_duty_cycle 0058  
                               __CFG_XINST$OFF 000000                          _encoderAInterruptLast 00E7  
                                 vfprintf@cfmt 0060                                         ___flge 32D4  
                                    ??___aodiv 0016                                      ??___fladd 0035  
                                    ??___aomod 0016                                         ___wmul 4020  
                                    ??___fldiv 0035                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 000A                                      ??___flmul 001C  
                                    ??___flsub 004E                                      ??___fltol 0052  
                                    ??___lldiv 000E                                      ??___lodiv 0016  
                                    ??___llmod 000E                                      ??___lomod 0016  
                             doOperation@F3391 0159                                         clear_0 3870  
                                       clear_1 3882                                         clear_2 388E  
                              ___awmod@divisor 0008                                ___awmod@counter 000A  
                                    ??_lcdInst 0009                                         _printf 3FF8  
                                       pad@buf 001C                                         ctoa@fp 0025  
                  ?_sendArduinoTireDropRequest 0001                                         dtoa@fp 0025  
              updateMotorBEncoder@directionPin 0004                                         _strlen 3D8A  
                                    ??_opDelay 000C                                      ??_initLCD 000A  
                                       fputc@c 000A                                         fputs@c 0017  
                                       fputs@i 0018                                   __pdataCOMRAM 0079  
                                       fputs@s 0013                                      ??_isalpha 0008  
                                    ??_isdigit 0008                          _requestIsTireDropDone 3F7A  
                         ??_set_pwm_duty_cycle 0060                              ??_tirePositioning 0072  
                                    ??_islower 0008                                   __mediumconst FE5E  
                                    ??_isspace 0008               doOperation@currentOperationState 0156  
                _opErrorCorrectionDegrees$2306 00BB                                         tblptrh 000FF7  
                                    ??_isupper 0008                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0023  
                                       stoa@fp 0013                               __end_of_vfprintf 3B6C  
                                    ??_pulse_e 0006                                         utoa@fp 0025  
                                       xtoa@fp 0025                                      ??_strncmp 000C  
                                    ??_toupper 000E                                     ___flge@ff1 0006  
                                   ___flge@ff2 000A                                   ___xxtofl@arg 0010  
                        pulse_e@interruptState 0006                                   ___xxtofl@exp 000F  
                                 ___xxtofl@val 0006                                     __accesstop 0080  
                      __end_of__initialization 389C                            _setMotorSpeeds$2303 0080  
                          _setMotorSpeeds$2304 0084                                  ___rparam_used 000001  
                               _setMotorSpeeds 371E                  doOperation@tiresOnPoleAfterOp 0122  
                                   ___fltol@f1 004E                           __end_of_happynewyear FE77  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 4184  
                      opDelay@maxOperationTime 0008                                  __end_of_fputc 3986  
                                __end_of_fputs 3E84                                  __end_of_putch 416E  
                                      ??_fputc 000E                                        ??_fputs 0017  
                                      ??_putch 0009                                     __pbssBANK0 00D7  
                                   __pbssBANK1 0159                         __end_of_setMotorSpeeds 37B4  
     __end_of_sendArduinoAbortOperationMessage 40F2      __size_of_sendArduinoAbortOperationMessage 0022  
           ??_sendArduinoAbortOperationMessage 0009              ?_sendArduinoAbortOperationMessage 0001  
             _sendArduinoAbortOperationMessage 40D0                              ?_interruptHandler 0001  
                           _errorCorrectedMove 1EE8                             ??_interruptHandler 0006  
                        _encoderBInterruptLast 00E8                                        ?___flge 0006  
                                      ?___wmul 0006             tirePositioning@distanceRecordedTop 009C  
                          ?_errorCorrectedMove 0088                             __size_of_send_byte 0012  
                                 ??_TIMER_INIT 0006                                        ?_printf 009D  
                                      ?_strlen 0006                                        _T2CKPS0 007E50  
                                      _T2CKPS1 007E51                    tirePositioning@topBreakbeam 00A0  
                       ?_requestIsTireDropDone 0001                             __size_of_robotInit 0040  
                                    ?___xxtofl 0006         __end_of_sendArduinoStandbyClampRequest 408C  
      __size_of_sendArduinoStandbyClampRequest 0022                 _sendArduinoStandbyClampRequest 406A  
                           __size_of_vfpfcnvrt 07F6        opErrorCorrectionDegrees@distanceDegrees 00AA  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                           ??_errorCorrectedMove 0072  
                             ___lomod@dividend 0006                           __size_of_send_nibble 0016  
                              ?_setMotorSpeeds 006C    opErrorCorrectionDegrees@motorAStartDistance 00BF  
                                opDelay@millis 0006                             __end_of_TIMER_INIT 4110  
                                      __Hparam 0000                                     _keyPressed 00EB  
                                      __Lparam 0000                tirePositioning@maxOperationTime 0088  
                              __size_of___flge 00D0                                        ___aodiv 2BB6  
                                      ___fladd 1954                                        ___aomod 30C2  
                                      ___fldiv 1C60                                        ___awmod 38AA  
                                      ___flmul 1602                                        ___flsub 3CFE  
                                      ___fltol 3472                                        ___lldiv 37B4  
                              __size_of___wmul 0026                                        ___lodiv 33A4  
                                      ___llmod 39F0                                        ___lomod 352C  
                                    ?_vfprintf 0097                                        __pcinit 3836  
                                      __ramtop 1000                                        _lcdInst 416E  
                                      __ptext0 0E52                                        __ptext1 406A  
                                      __ptext2 3DCE                                        __ptext3 3986  
                                      __ptext4 3ABA                                        __ptext5 37B4  
                                      __ptext6 4110                                        __ptext7 3C68  
                                      __ptext8 0808                                        __ptext9 238C  
                              __size_of_printf 0028                                      _T0CONbits 000FD5  
                                      _opDelay 3A56                                __size_of_strlen 0044  
                                      _initLCD 3986                                 _motorADistance 00DB  
                                 __size_of_abs 0032                                   __size_of_pad 009A  
                                      _isalpha 3E84                                        _isdigit 3F4A  
                                   ??___xxtofl 000A                               ___awmod@dividend 0006  
                               _motorBDistance 00D7                                        _islower 3EEA  
                                      _isspace 3E0E                        doOperation@startedDistA 0108  
                      doOperation@startedDistB 010C                                        _isupper 3F1A  
                     __size_of_I2C_Master_Init 005C                       __size_of_I2C_Master_Read 0024  
                     __size_of_I2C_Master_Wait 0012                       __size_of_I2C_Master_Stop 0008  
                                      atoi@neg 0013                                        _pulse_e 3FA6  
                                ??_doOperation 00C3              opErrorCorrectionDegrees@goalSpeed 00A2  
                                      _strncmp 35DA                                 __pintcode_body 3D44  
                                      _toupper 3CB4                    _topBreakBeamTriggeredChange 00EA  
                         end_of_initialization 389C                          __end_of_LCD_SIZE_HORZ FE7A  
                            __end_of_send_byte 4162                          __end_of_LCD_SIZE_VERT FE79  
                                 ?_EncoderInit 0001                          doOperation@isDoneDrop 0141  
                                      fputc@fp 000C                                  __Lmediumconst FE5E  
                                      int_func 3D44                                        fputs@fp 0015  
                      __size_of_init_motor_PWM 0028                              __end_of_robotInit 3E0E  
                    __size_of_I2C_Master_Start 0008                      __size_of_I2C_Master_Write 000A  
                              ___lldiv@divisor 000A                                ___lldiv@counter 0012  
                 __size_of_updateMotorAEncoder 0056                              __end_of_vfpfcnvrt 0808  
           tirePositioning@startDistanceBottom 0090                   __size_of_updateMotorBEncoder 0056  
                         doDisplayLog@keyValue 006C                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                              _tirePositioning 238C                                     ??_vfprintf 0060  
                         doDisplayLog@keypress 006A                                        strlen@a 0008  
                                      strlen@s 0006                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82                                      _PORTEbits 000F84  
         updateMotorBEncoder@interruptPinState 0002                                    ___fladd@grs 003C  
                                ___xxtofl@sign 000E                                      _TRISAbits 000F92  
                  doOperation@bottomLaserState 0157                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISEbits 000F96  
                                  ___fldiv@grs 0040                                    ___fldiv@rem 0039  
                                 _happynewyear FE70                                    ___flmul@grs 0022  
  opErrorCorrectionDegrees@motorBStartDistance 00B7                  doOperation@totalTiresSupplied 0133  
                                send_byte@data 0008                            __end_of_doOperation 0E52  
            opErrorCorrectionDegrees@turnRatio 00A4                         __size_of_replaceOldLog 004C  
                               __end_of___flge 33A4                                    vfpfcnvrt@ap 0050  
                                  vfpfcnvrt@cp 0080                                    vfpfcnvrt@fp 004C  
                                  vfpfcnvrt@ll 0086                                 __end_of___wmul 4046  
                                __pidataCOMRAM 419C                          doOperation@poleNumber 0131  
                               __end_of_printf 4020                                 __end_of_strlen 3DCE  
                          start_initialization 3836                                ___lodiv@divisor 000E  
                  __size_of_set_pwm_duty_cycle 0202                                ___lodiv@counter 001E  
                    setMotorSpeeds@motorASpeed 006C                      setMotorSpeeds@motorBSpeed 0070  
                                  __end_of_abs 3EEA                                    __end_of_pad 371E  
                      errorCorrectedMove@error 009A                       _opErrorCorrectionDegrees 31E6  
                            ??_I2C_Master_Init 0017                              ??_I2C_Master_Read 0007  
                            ??_I2C_Master_Wait 0006                              ??_I2C_Master_Stop 0007  
                              ___llmod@divisor 000A                                ___llmod@counter 000E  
                      __end_of_tirePositioning 25D0                                    vfprintf@fmt 0099  
                                     ??___flge 000E                                       ??___wmul 000A  
                        main@currentRobotState 00D5                       I2C_Master_Init@clockFreq 0013  
                                  __pdataBANK0 00EC                        ??_requestIsTireDropDone 0009  
                             __CFG_LPT1OSC$OFF 000000                 doOperation@tiresDeployedOnPole 0146  
              tirePositioning@startDistanceTop 008C                                doOperation@send 012C  
                                     ??_printf 0062                      __size_of_interruptHandler 3D82  
                                     ??_strlen 0008                                      ___fladd@a 0031  
                                    ___fladd@b 002D                                      ___fldiv@a 0031  
                                    ___fldiv@b 002D                                    __pbssBIGRAM 0181  
                                    ___flmul@a 0018                                      ___flmul@b 0014  
                                  __pbssCOMRAM 0075                                      ___flsub@a 004A  
                                    ___flsub@b 0046                                  __pcstackBANK0 0080  
                                __pcstackBANK1 0100                               ___aodiv@dividend 0006  
                                _replaceOldLog 3C68                               ??_setMotorSpeeds 0072  
                            __size_of___xxtofl 0140                                    _doOperation 0808  
                       setMotorSpeeds@Aforward 006E                         setMotorSpeeds@Bforward 006F  
                               _init_motor_PWM 3FD0                                      _atoi$1892 0015  
                                    _atoi$1893 0019                                      _atoi$1894 0017  
                         __size_of_EncoderInit 0018                               _I2C_Master_Start 4194  
             ??_sendArduinoStandbyClampRequest 0009                ?_sendArduinoStandbyClampRequest 0001  
                             _I2C_Master_Write 417A                       doOperation@topLaserState 0158  
                                    _dtoa$1365 0037                              __CFG_CCP2MX$PORTC 000000  
                                    __pintcode 0008                                  __pmediumconst FE5E  
                                     ?___aodiv 0006                                       ?___fladd 002D  
                                     ?___aomod 0006                                       ?___fldiv 002D  
                             ___aodiv@quotient 0018                                       ?___awmod 0006  
                                     ?___flmul 0014                                       ?___flsub 0046  
                                     ?___fltol 004E                                       ?___lldiv 0006  
                                     ?___lodiv 0006          errorCorrectedMove@motorAStartDistance 008E  
                                     ?___llmod 0006                                       ?___lomod 0006  
                                     ?_lcdInst 0001                              __size_of_vfprintf 0056  
                                     ?_opDelay 0006                                ___lomod@divisor 000E  
                                     ?_initLCD 0001                         doOperation@badCountBot 012F  
                              ___lomod@counter 0016                                       ?_isalpha 0006  
                                     ?_isdigit 0006                                       ?_islower 0006  
                                     ?_isspace 0006                                 ?_replaceOldLog 0001  
                                     ?_isupper 0006                            _updateMotorAEncoder 3BC2  
                                 doOperation@i 0154                            _updateMotorBEncoder 3B6C  
                                ??_send_nibble 0007                                       ?_pulse_e 0001  
                               __size_of_fputc 006C                                 __size_of_fputs 0038  
                                     ?_strncmp 0006                                       ?_toupper 000C  
                       __end_of_init_motor_PWM 3FF8                   doOperation@topLaserStatePrev 014E  
                               __size_of_putch 000C                    __size_of_errorCorrectedMove 025C  
                               ___wmul@product 000A                                       _LATAbits 000F89  
                                ?_doDisplayLog 00A7                                       _LATDbits 000F8C  
                             ?_tirePositioning 0088                                      _send_byte 4150  
                  errorCorrectedMove@goalSpeed 0088                                 _LCD_LINE1_ADDR FE77  
                               _LCD_LINE2_ADDR FE81                                 _LCD_LINE3_ADDR FE80  
                               _LCD_LINE4_ADDR FE7F                     doOperation@timeInOperation 0150  
                      init_motor_PWM@FREQUENCY FE7B                           ?_updateMotorAEncoder 0001  
                                     i2u665_40 3B76                                       i2u666_40 3B88  
                                     i2u665_48 3B78                                       i2u666_48 3B8A  
                                     i2u668_40 3BCC                                       i2u669_40 3BDE  
                                     i2u668_48 3BCE                                       i2u669_48 3BE0  
                         ?_updateMotorBEncoder 0001                      doOperation@motorStartTime 0124  
                             __CFG_WDTPS$32768 000000                                      _robotInit 3DCE  
                                    _vfpfcnvrt 0012                                      _xtoa$1393 0038  
                                    _xtoa$1394 003A                              ___wmul@multiplier 0006  
                 ??_sendArduinoTireDropRequest 0009                                   _isspace$1919 000C  
                                   vfpfcnvrt@c 008E                                      copy_data0 384A  
                      _set_pwm_duty_cycle$2302 0068                                ?_init_motor_PWM 0001  
                               ??_doDisplayLog 0066                           doOperation@timeStart 0135  
                       __end_of_LCD_LINE1_ADDR FE78                         __end_of_LCD_LINE2_ADDR FE82  
                       __end_of_LCD_LINE3_ADDR FE81                         __end_of_LCD_LINE4_ADDR FE80  
                          __end_of_send_nibble 413E                                     _EECON1bits 000FA6  
                                   ?_send_byte 0001                                       __Hrparam 0000  
                        ??_updateMotorAEncoder 0001                          ??_updateMotorBEncoder 0001  
                      doDisplayLog@currentPole 006D                doDisplayLog@currentDisplayState 006B  
                                   vfprintf@ap 009B                                       __Lrparam 0000  
                                   vfprintf@fp 0097                             __CFG_BOREN$SBORDIS 000000  
          __size_of_sendArduinoTireDropRequest 0022                                     ?_robotInit 0001  
         updateMotorAEncoder@interruptPinState 0002                               __size_of___aodiv 0148  
                             __size_of___fladd 030C          errorCorrectedMove@motorBStartDistance 0092  
                             __size_of___aomod 0124                               __size_of___fldiv 0288  
                             __size_of___awmod 0070                               __size_of___flmul 0352  
                             __size_of___flsub 0046                               __size_of___fltol 00BA  
                             __size_of___lldiv 0082                               __size_of___lodiv 00CE  
                             __size_of___llmod 0066                    errorCorrectedMove@turnRatio 008A  
                             __size_of___lomod 00AE                                     ?_vfpfcnvrt 004C  
                              ___aodiv@divisor 000E                               _interruptHandler 0008  
                              ___aodiv@counter 0016                               __size_of_lcdInst 000C  
                              ??_replaceOldLog 0006                     ??_opErrorCorrectionDegrees 00B2  
                             __size_of_opDelay 0064                                _I2C_Master_Init 3ABA  
                              _I2C_Master_Read 4046                               __size_of_initLCD 006A  
                                     ___xxtofl 2E42                                _I2C_Master_Wait 413E  
                              _I2C_Master_Stop 418C                               __size_of_isalpha 0034  
                             __size_of_isdigit 0030                               __size_of_islower 0030  
                             __size_of_isspace 003E                            doOperation@badCount 012D  
                                     __ptext10 3A56                                       __ptext11 408C  
                                     __ptext20 31E6                                       __ptext12 40AE  
                                     __ptext21 1EE8                                       __ptext13 40D0  
                                     __ptext30 1954                                       __ptext22 371E  
                                     __ptext14 3F7A                                       __ptext31 3FD0  
                                     __ptext23 2802                                       __ptext15 417A  
                                     __ptext40 3EEA                                       __ptext32 38AA  
                                     __ptext24 2E42                                       __ptext16 418C  
                                     __ptext41 3F1A                                       __ptext33 40F2  
                                     __ptext25 3472                                       __ptext17 4194  
                                     __ptext50 30C2                                       __ptext42 3E84  
                                     __ptext34 1266                                       __ptext26 1602  
                                     __ptext18 4046                                       __ptext51 2BB6  
                                     __ptext43 2A04                                       __ptext35 3FF8  
                                     __ptext27 32D4                                       __ptext19 413E  
                                     __ptext60 3F4A                                       __ptext52 3C18  
                                     __ptext44 352C                                       __ptext36 3B16  
                                     __ptext28 1C60                                       __ptext61 4020  
                                     __ptext53 3684                                       __ptext45 33A4  
                                     __ptext37 0012                                       __ptext29 3CFE  
                                     __ptext62 416E                                       __ptext54 3D8A  
                                     __ptext46 35DA                                       __ptext38 25D0  
                                     __ptext63 4150                                       __ptext55 3E4C  
                                     __ptext47 2CFE                                       __ptext39 3CB4  
                                     __ptext64 4128                                       __ptext56 391A  
                                     __ptext48 2144                                       __ptext65 3FA6  
                                     __ptext57 4162                                       __ptext49 3EB8  
                                     __ptext66 39F0                                       __ptext58 2F82  
                                     __ptext59 3E0E                                       __ptext68 3B6C  
                                     __ptext69 3BC2                               __size_of_isupper 0030  
                             __size_of_pulse_e 002A                                _motorADirection 00F3  
                             __size_of_strncmp 00AA                               __size_of_toupper 004A  
                                __size_of_atoi 0140                                  __size_of_ctoa 0050  
                                __size_of_main 0414                                _motorBDirection 0079  
                                __size_of_dtoa 0248                                  __size_of_stoa 0144  
                                __size_of_utoa 01B2                                  __size_of_xtoa 0232  
                                    stoa@F1144 00EC                doOperation@distanceFromLastPole 0128  
               set_pwm_duty_cycle@max_duty_val 0062                                       int$flags 007A  
                           doOperation@PIDData 0100                                       _vfprintf 3B16  
                                    printf@fmt 009D                 doOperation@motorAStartDistance 014A  
                                     main@tick 00CE                                       main@time 00C7  
               __size_of_requestIsTireDropDone 002C                  __end_of_requestIsTireDropDone 3FA6  
                  I2C_Master_Write@byteToWrite 0007   __end_of_sendArduinoTireOperationStartMessage 40AE  
__size_of_sendArduinoTireOperationStartMessage 0022         ??_sendArduinoTireOperationStartMessage 0009  
        ?_sendArduinoTireOperationStartMessage 0001           _sendArduinoTireOperationStartMessage 408C  
              updateMotorAEncoder@directionPin 0004                               ___aomod@dividend 0006  
                   __end_of_set_pwm_duty_cycle 2A04                                      putch@data 0009  
                     __end_of_I2C_Master_Start 419C                                 _vfpfcnvrt$1408 0084  
                     __end_of_I2C_Master_Write 4184                                     _INTCONbits 000FF2  
        tirePositioning@distanceRecordedBottom 0098                                       isalpha@c 0006  
                                     isdigit@c 0006                                    _send_nibble 4128  
                                 ?_doOperation 0001                 _bottomBreakBeamTriggeredChange 00E9  
                                     intlevel2 0000                                  _LCD_SIZE_HORZ FE79  
                                     islower@c 0006           errorCorrectedMove@correctionConstant 0096  
                                _LCD_SIZE_VERT FE78                                       isspace@c 0006  
                             ___lldiv@dividend 0006                                    ??_send_byte 0008  
                                     isupper@c 0006                                      strncmp@_l 0006  
                                    strncmp@_r 0008                doOperation@bottomLaserStatePrev 014F  
                                   _OSCCONbits 000FD3                             doOperation@counted 0142  
                                  ??_robotInit 001B                                       printf@ap 0064  
                      __end_of_I2C_Master_Init 3B16                                ___aomod@divisor 000E  
                      __end_of_I2C_Master_Read 406A                        __end_of_I2C_Master_Wait 4150  
                      __end_of_I2C_Master_Stop 4194                                    ??_vfpfcnvrt 0052  
                                  lcdInst@data 0009                                       stoa@nuls 0018  
                              ___aomod@counter 0016                          doDisplayLog@logNumber 00A7  
           __end_of_sendArduinoTireDropRequest 40D0                     _sendArduinoTireDropRequest 40AE  
                                   _TIMER_INIT 40F2                __end_ofinit_motor_PWM@FREQUENCY FE7F  
                         __end_of_doDisplayLog 1602                   doOperation@accelerationDelay 0120  
               tirePositioning@bottomBreakbeam 00A2                               ___lldiv@quotient 000E  
                                     strncmp@l 000D                                       strncmp@n 000A  
                                     strncmp@r 000F                                       toupper@c 000C  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                                ___fladd@signs 0039     opErrorCorrectionDegrees@correctionConstant 00A6  
                                 ___aodiv@sign 0017                                  ??_EncoderInit 0006  
                                 ___fladd@aexp 003A                                   ___fladd@bexp 003B  
                                 ___aomod@sign 0017  
