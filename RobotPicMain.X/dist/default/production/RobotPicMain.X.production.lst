

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 26 14:38:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 2.05
    90                           ; Generated 20/12/2018 GMT
    91                           ; 
    92                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4620 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataCOMRAM
   125  0038DD                     __pidataCOMRAM:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _motorBDirection
   129  0038DD  01                 	db	1
   130                           
   131                           	psect	idataBANK0
   132  0038DE                     __pidataBANK0:
   133                           	opt callstack 0
   134                           
   135                           ;initializer for _motorADirection
   136  0038DE  01                 	db	1
   137                           
   138                           	psect	idataBANK1
   139  0038D6                     __pidataBANK1:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for stoa@F1144
   143  0038D6  28                 	db	40
   144  0038D7  6E                 	db	110
   145  0038D8  75                 	db	117
   146  0038D9  6C                 	db	108
   147  0038DA  6C                 	db	108
   148  0038DB  29                 	db	41
   149  0038DC  00                 	db	0
   150                           
   151                           	psect	mediumconst
   152  00FE60                     __pmediumconst:
   153                           	opt callstack 0
   154  00FE60  00                 	db	0
   155  00FE61                     _keys:
   156                           	opt callstack 0
   157  00FE61  31                 	db	49
   158  00FE62  32                 	db	50
   159  00FE63  33                 	db	51
   160  00FE64  41                 	db	65
   161  00FE65  34                 	db	52
   162  00FE66  35                 	db	53
   163  00FE67  36                 	db	54
   164  00FE68  42                 	db	66
   165  00FE69  37                 	db	55
   166  00FE6A  38                 	db	56
   167  00FE6B  39                 	db	57
   168  00FE6C  43                 	db	67
   169  00FE6D  2A                 	db	42
   170  00FE6E  30                 	db	48
   171  00FE6F  23                 	db	35
   172  00FE70  44                 	db	68
   173  00FE71  00                 	db	0
   174  00FE72                     __end_of_keys:
   175                           	opt callstack 0
   176  00FE72                     _happynewyear:
   177                           	opt callstack 0
   178  00FE72  00                 	db	0
   179  00FE73  37                 	db	55
   180  00FE74  0E                 	db	14
   181  00FE75  02                 	db	2
   182  00FE76  13                 	db	19
   183  00FE77  02                 	db	2
   184  00FE78  13                 	db	19
   185  00FE79                     __end_of_happynewyear:
   186                           	opt callstack 0
   187  00FE79                     _LCD_LINE1_ADDR:
   188                           	opt callstack 0
   189  00FE79  00                 	db	0
   190  00FE7A                     __end_of_LCD_LINE1_ADDR:
   191                           	opt callstack 0
   192  00FE7A                     _LCD_SIZE_VERT:
   193                           	opt callstack 0
   194  00FE7A  04                 	db	4
   195  00FE7B                     __end_of_LCD_SIZE_VERT:
   196                           	opt callstack 0
   197  00FE7B                     _LCD_SIZE_HORZ:
   198                           	opt callstack 0
   199  00FE7B  10                 	db	16
   200  00FE7C                     __end_of_LCD_SIZE_HORZ:
   201                           	opt callstack 0
   202  00FE7C  10                 	db	16
   203  00FE7D                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   204                           	opt callstack 0
   205  00FE7D  03E8               	dw	1000
   206  00FE7F  0000               	dw	0
   207  00FE81                     __end_ofinit_motor_PWM@FREQUENCY:
   208                           	opt callstack 0
   209  00FE81  50                 	db	80
   210  00FE82                     __end_of_LCD_LINE4_ADDR:
   211                           	opt callstack 0
   212  00FE82  10                 	db	16
   213  00FE83                     __end_of_LCD_LINE3_ADDR:
   214                           	opt callstack 0
   215  00FE83  40                 	db	64
   216  00FE84                     __end_of_LCD_LINE2_ADDR:
   217                           	opt callstack 0
   218  0000                     _SSPBUF	set	4041
   219  0000                     _SSPCON2bits	set	4037
   220  0000                     _SSPCON1	set	4038
   221  0000                     _SSPADD	set	4040
   222  0000                     _SSPCON1bits	set	4038
   223  0000                     _SSPCON2	set	4037
   224  0000                     _SSPSTAT	set	4039
   225  0000                     _LATDbits	set	3980
   226  0000                     _ADCON1	set	4033
   227  0000                     _LATB	set	3978
   228  0000                     _TRISD	set	3989
   229  0000                     _LATD	set	3980
   230  0000                     _EECON2	set	4007
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _EEDATA	set	4008
   234  0000                     _TRISAbits	set	3986
   235  0000                     _LATAbits	set	3977
   236  0000                     _CCPR2L	set	4027
   237  0000                     _CCPR1L	set	4030
   238  0000                     _PR2	set	4043
   239  0000                     _INTCONbits	set	4082
   240  0000                     _TMR0L	set	4054
   241  0000                     _TMR0H	set	4055
   242  0000                     _T0CONbits	set	4053
   243  0000                     _OSCCONbits	set	4051
   244  0000                     _TRISBbits	set	3987
   245  0000                     _TRISEbits	set	3990
   246  0000                     _TRISCbits	set	3988
   247  0000                     _PORTCbits	set	3970
   248  0000                     _PORTEbits	set	3972
   249  0000                     _PORTBbits	set	3969
   250  0000                     _PORTB	set	3969
   251  0000                     _INT0IF	set	32657
   252  0000                     _INT2IF	set	32641
   253  0000                     _TMR0IF	set	32658
   254  0000                     _INT1IF	set	32640
   255  0000                     _INT1IE	set	32643
   256  0000                     _CCP2Y	set	32212
   257  0000                     _CCP2X	set	32213
   258  0000                     _CCP1Y	set	32236
   259  0000                     _CCP1X	set	32237
   260  0000                     _TMR2ON	set	32338
   261  0000                     _T2CKPS1	set	32337
   262  0000                     _T2CKPS0	set	32336
   263  0000                     _CCP2M0	set	32208
   264  0000                     _CCP2M1	set	32209
   265  0000                     _CCP2M2	set	32210
   266  0000                     _CCP2M3	set	32211
   267  0000                     _CCP1M0	set	32232
   268  0000                     _CCP1M1	set	32233
   269  0000                     _CCP1M2	set	32234
   270  0000                     _CCP1M3	set	32235
   271  0000                     _P1M0	set	32238
   272  0000                     _P1M1	set	32239
   273  0000                     _TMR0ON	set	32431
   274  0000                     _TMR0IE	set	32661
   275  0000                     _PSA	set	32427
   276  0000                     _T0PS0	set	32424
   277  0000                     _T0PS1	set	32425
   278  0000                     _T0PS2	set	32426
   279  0000                     _T08BIT	set	32430
   280  0000                     _INT0IE	set	32660
   281  0000                     _INT2IE	set	32644
   282  00FE84                     STR_16:
   283  00FE84  54                 	db	84	;'T'
   284  00FE85  49                 	db	73	;'I'
   285  00FE86  52                 	db	82	;'R'
   286  00FE87  45                 	db	69	;'E'
   287  00FE88  2E                 	db	46
   288  00FE89  20                 	db	32
   289  00FE8A  4F                 	db	79	;'O'
   290  00FE8B  4E                 	db	78	;'N'
   291  00FE8C  20                 	db	32
   292  00FE8D  50                 	db	80	;'P'
   293  00FE8E  4F                 	db	79	;'O'
   294  00FE8F  4C                 	db	76	;'L'
   295  00FE90  45                 	db	69	;'E'
   296  00FE91  3A                 	db	58	;':'
   297  00FE92  20                 	db	32
   298  00FE93  00                 	db	0
   299  00FE94                     STR_50:
   300  00FE94  28                 	db	40
   301  00FE95  31                 	db	49	;'1'
   302  00FE96  29                 	db	41
   303  00FE97  20                 	db	32
   304  00FE98  28                 	db	40
   305  00FE99  32                 	db	50	;'2'
   306  00FE9A  29                 	db	41
   307  00FE9B  20                 	db	32
   308  00FE9C  28                 	db	40
   309  00FE9D  33                 	db	51	;'3'
   310  00FE9E  29                 	db	41
   311  00FE9F  20                 	db	32
   312  00FEA0  28                 	db	40
   313  00FEA1  34                 	db	52	;'4'
   314  00FEA2  29                 	db	41
   315  00FEA3  00                 	db	0
   316  00FEA4                     STR_9:
   317  00FEA4  28                 	db	40
   318  00FEA5  32                 	db	50	;'2'
   319  00FEA6  29                 	db	41
   320  00FEA7  20                 	db	32
   321  00FEA8  53                 	db	83	;'S'
   322  00FEA9  41                 	db	65	;'A'
   323  00FEAA  56                 	db	86	;'V'
   324  00FEAB  45                 	db	69	;'E'
   325  00FEAC  20                 	db	32
   326  00FEAD  26                 	db	38
   327  00FEAE  20                 	db	32
   328  00FEAF  45                 	db	69	;'E'
   329  00FEB0  58                 	db	88	;'X'
   330  00FEB1  49                 	db	73	;'I'
   331  00FEB2  54                 	db	84	;'T'
   332  00FEB3  00                 	db	0
   333  00FEB4                     STR_42:
   334  00FEB4  28                 	db	40
   335  00FEB5  32                 	db	50	;'2'
   336  00FEB6  29                 	db	41
   337  00FEB7  20                 	db	32
   338  00FEB8  51                 	db	81	;'Q'
   339  00FEB9  55                 	db	85	;'U'
   340  00FEBA  49                 	db	73	;'I'
   341  00FEBB  54                 	db	84	;'T'
   342  00FEBC  20                 	db	32
   343  00FEBD  44                 	db	68	;'D'
   344  00FEBE  4F                 	db	79	;'O'
   345  00FEBF  20                 	db	32
   346  00FEC0  4E                 	db	78	;'N'
   347  00FEC1  4F                 	db	79	;'O'
   348  00FEC2  54                 	db	84	;'T'
   349  00FEC3  00                 	db	0
   350  00FEC4                     STR_5:
   351  00FEC4  54                 	db	84	;'T'
   352  00FEC5  49                 	db	73	;'I'
   353  00FEC6  52                 	db	82	;'R'
   354  00FEC7  2E                 	db	46
   355  00FEC8  20                 	db	32
   356  00FEC9  53                 	db	83	;'S'
   357  00FECA  55                 	db	85	;'U'
   358  00FECB  50                 	db	80	;'P'
   359  00FECC  50                 	db	80	;'P'
   360  00FECD  4C                 	db	76	;'L'
   361  00FECE  49                 	db	73	;'I'
   362  00FECF  45                 	db	69	;'E'
   363  00FED0  44                 	db	68	;'D'
   364  00FED1  20                 	db	32
   365  00FED2  00                 	db	0
   366  00FED3                     STR_27:
   367  00FED3  25                 	db	37
   368  00FED4  30                 	db	48	;'0'
   369  00FED5  32                 	db	50	;'2'
   370  00FED6  78                 	db	120	;'x'
   371  00FED7  2F                 	db	47
   372  00FED8  25                 	db	37
   373  00FED9  30                 	db	48	;'0'
   374  00FEDA  32                 	db	50	;'2'
   375  00FEDB  78                 	db	120	;'x'
   376  00FEDC  2F                 	db	47
   377  00FEDD  25                 	db	37
   378  00FEDE  30                 	db	48	;'0'
   379  00FEDF  32                 	db	50	;'2'
   380  00FEE0  78                 	db	120	;'x'
   381  00FEE1  00                 	db	0
   382  00FEE2                     STR_28:
   383  00FEE2  25                 	db	37
   384  00FEE3  30                 	db	48	;'0'
   385  00FEE4  32                 	db	50	;'2'
   386  00FEE5  78                 	db	120	;'x'
   387  00FEE6  3A                 	db	58	;':'
   388  00FEE7  25                 	db	37
   389  00FEE8  30                 	db	48	;'0'
   390  00FEE9  32                 	db	50	;'2'
   391  00FEEA  78                 	db	120	;'x'
   392  00FEEB  3A                 	db	58	;':'
   393  00FEEC  25                 	db	37
   394  00FEED  30                 	db	48	;'0'
   395  00FEEE  32                 	db	50	;'2'
   396  00FEEF  78                 	db	120	;'x'
   397  00FEF0  00                 	db	0
   398  00FEF1                     STR_14:
   399  00FEF1  54                 	db	84	;'T'
   400  00FEF2  49                 	db	73	;'I'
   401  00FEF3  52                 	db	82	;'R'
   402  00FEF4  2E                 	db	46
   403  00FEF5  20                 	db	32
   404  00FEF6  44                 	db	68	;'D'
   405  00FEF7  45                 	db	69	;'E'
   406  00FEF8  50                 	db	80	;'P'
   407  00FEF9  4C                 	db	76	;'L'
   408  00FEFA  4F                 	db	79	;'O'
   409  00FEFB  59                 	db	89	;'Y'
   410  00FEFC  3A                 	db	58	;':'
   411  00FEFD  20                 	db	32
   412  00FEFE  00                 	db	0
   413  00FEFF                     STR_48:
   414  00FEFF  28                 	db	40
   415  00FF00  31                 	db	49	;'1'
   416  00FF01  20                 	db	32
   417  00FF02  49                 	db	73	;'I'
   418  00FF03  53                 	db	83	;'S'
   419  00FF04  20                 	db	32
   420  00FF05  4F                 	db	79	;'O'
   421  00FF06  4C                 	db	76	;'L'
   422  00FF07  44                 	db	68	;'D'
   423  00FF08  45                 	db	69	;'E'
   424  00FF09  53                 	db	83	;'S'
   425  00FF0A  54                 	db	84	;'T'
   426  00FF0B  29                 	db	41
   427  00FF0C  00                 	db	0
   428  00FF0D                     STR_7:
   429  00FF0D  28                 	db	40
   430  00FF0E  31                 	db	49	;'1'
   431  00FF0F  29                 	db	41
   432  00FF10  20                 	db	32
   433  00FF11  50                 	db	80	;'P'
   434  00FF12  4F                 	db	79	;'O'
   435  00FF13  4C                 	db	76	;'L'
   436  00FF14  45                 	db	69	;'E'
   437  00FF15  20                 	db	32
   438  00FF16  49                 	db	73	;'I'
   439  00FF17  4E                 	db	78	;'N'
   440  00FF18  46                 	db	70	;'F'
   441  00FF19  4F                 	db	79	;'O'
   442  00FF1A  00                 	db	0
   443  00FF1B                     STR_32:
   444  00FF1B  28                 	db	40
   445  00FF1C  32                 	db	50	;'2'
   446  00FF1D  29                 	db	41
   447  00FF1E  20                 	db	32
   448  00FF1F  56                 	db	86	;'V'
   449  00FF20  49                 	db	73	;'I'
   450  00FF21  45                 	db	69	;'E'
   451  00FF22  57                 	db	87	;'W'
   452  00FF23  20                 	db	32
   453  00FF24  4C                 	db	76	;'L'
   454  00FF25  4F                 	db	79	;'O'
   455  00FF26  47                 	db	71	;'G'
   456  00FF27  53                 	db	83	;'S'
   457  00FF28  00                 	db	0
   458  00FF29                     STR_18:
   459  00FF29  31                 	db	49	;'1'
   460  00FF2A  3C                 	db	60	;'<'
   461  00FF2B  2D                 	db	45
   462  00FF2C  20                 	db	32
   463  00FF2D  32                 	db	50	;'2'
   464  00FF2E  2D                 	db	45
   465  00FF2F  3E                 	db	62	;'>'
   466  00FF30  20                 	db	32
   467  00FF31  33                 	db	51	;'3'
   468  00FF32  4D                 	db	77	;'M'
   469  00FF33  45                 	db	69	;'E'
   470  00FF34  4E                 	db	78	;'N'
   471  00FF35  55                 	db	85	;'U'
   472  00FF36  00                 	db	0
   473  00FF37                     STR_38:
   474  00FF37  4F                 	db	79	;'O'
   475  00FF38  50                 	db	80	;'P'
   476  00FF39  2E                 	db	46
   477  00FF3A  20                 	db	32
   478  00FF3B  43                 	db	67	;'C'
   479  00FF3C  4F                 	db	79	;'O'
   480  00FF3D  4D                 	db	77	;'M'
   481  00FF3E  50                 	db	80	;'P'
   482  00FF3F  4C                 	db	76	;'L'
   483  00FF40  45                 	db	69	;'E'
   484  00FF41  54                 	db	84	;'T'
   485  00FF42  45                 	db	69	;'E'
   486  00FF43  00                 	db	0
   487  00FF44                     STR_40:
   488  00FF44  28                 	db	40
   489  00FF45  31                 	db	49	;'1'
   490  00FF46  29                 	db	41
   491  00FF47  20                 	db	32
   492  00FF48  56                 	db	86	;'V'
   493  00FF49  49                 	db	73	;'I'
   494  00FF4A  45                 	db	69	;'E'
   495  00FF4B  57                 	db	87	;'W'
   496  00FF4C  20                 	db	32
   497  00FF4D  4C                 	db	76	;'L'
   498  00FF4E  4F                 	db	79	;'O'
   499  00FF4F  47                 	db	71	;'G'
   500  00FF50  00                 	db	0
   501  00FF51                     STR_34:
   502  00FF51  4F                 	db	79	;'O'
   503  00FF52  50                 	db	80	;'P'
   504  00FF53  45                 	db	69	;'E'
   505  00FF54  52                 	db	82	;'R'
   506  00FF55  41                 	db	65	;'A'
   507  00FF56  54                 	db	84	;'T'
   508  00FF57  49                 	db	73	;'I'
   509  00FF58  4F                 	db	79	;'O'
   510  00FF59  4E                 	db	78	;'N'
   511  00FF5A  20                 	db	32
   512  00FF5B  49                 	db	73	;'I'
   513  00FF5C  4E                 	db	78	;'N'
   514  00FF5D  00                 	db	0
   515  00FF5E  45                 	db	69	;'E'
   516  00FF5F  45                 	db	69	;'E'
   517  00FF60  50                 	db	80	;'P'
   518  00FF61  52                 	db	82	;'R'
   519  00FF62  4F                 	db	79	;'O'
   520  00FF63  4D                 	db	77	;'M'
   521  00FF64  2D                 	db	45
   522  00FF65  44                 	db	68	;'D'
   523  00FF66  65                 	db	101	;'e'
   524  00FF67  6D                 	db	109	;'m'
   525  00FF68  6F                 	db	111	;'o'
   526  00FF69  6E                 	db	110	;'n'
   527  00FF6A  00                 	db	0
   528  00FF6B                     STR_46:
   529  00FF6B  53                 	db	83	;'S'
   530  00FF6C  45                 	db	69	;'E'
   531  00FF6D  4C                 	db	76	;'L'
   532  00FF6E  45                 	db	69	;'E'
   533  00FF6F  43                 	db	67	;'C'
   534  00FF70  54                 	db	84	;'T'
   535  00FF71  20                 	db	32
   536  00FF72  4C                 	db	76	;'L'
   537  00FF73  4F                 	db	79	;'O'
   538  00FF74  47                 	db	71	;'G'
   539  00FF75  00                 	db	0
   540  00FF76                     STR_24:
   541  00FF76  25                 	db	37
   542  00FF77  64                 	db	100	;'d'
   543  00FF78  20                 	db	32
   544  00FF79  6F                 	db	111	;'o'
   545  00FF7A  6E                 	db	110	;'n'
   546  00FF7B  20                 	db	32
   547  00FF7C  70                 	db	112	;'p'
   548  00FF7D  6F                 	db	111	;'o'
   549  00FF7E  6C                 	db	108	;'l'
   550  00FF7F  65                 	db	101	;'e'
   551  00FF80  00                 	db	0
   552  00FF81  77                 	db	119	;'w'
   553  00FF82  72                 	db	114	;'r'
   554  00FF83  6F                 	db	111	;'o'
   555  00FF84  74                 	db	116	;'t'
   556  00FF85  65                 	db	101	;'e'
   557  00FF86  3A                 	db	58	;':'
   558  00FF87  20                 	db	32
   559  00FF88  25                 	db	37
   560  00FF89  63                 	db	99	;'c'
   561  00FF8A  6E                 	db	110	;'n'
   562  00FF8B  00                 	db	0
   563  00FF8C  72                 	db	114	;'r'
   564  00FF8D  65                 	db	101	;'e'
   565  00FF8E  61                 	db	97	;'a'
   566  00FF8F  64                 	db	100	;'d'
   567  00FF90  3A                 	db	58	;':'
   568  00FF91  20                 	db	32
   569  00FF92  25                 	db	37
   570  00FF93  63                 	db	99	;'c'
   571  00FF94  6E                 	db	110	;'n'
   572  00FF95  6E                 	db	110	;'n'
   573  00FF96  00                 	db	0
   574  00FF97                     STR_2:
   575  00FF97  4F                 	db	79	;'O'
   576  00FF98  50                 	db	80	;'P'
   577  00FF99  2E                 	db	46
   578  00FF9A  20                 	db	32
   579  00FF9B  54                 	db	84	;'T'
   580  00FF9C  49                 	db	73	;'I'
   581  00FF9D  4D                 	db	77	;'M'
   582  00FF9E  45                 	db	69	;'E'
   583  00FF9F  20                 	db	32
   584  00FFA0  00                 	db	0
   585  00FFA1                     STR_23:
   586  00FFA1  54                 	db	84	;'T'
   587  00FFA2  49                 	db	73	;'I'
   588  00FFA3  52                 	db	82	;'R'
   589  00FFA4  45                 	db	69	;'E'
   590  00FFA5  20                 	db	32
   591  00FFA6  44                 	db	68	;'D'
   592  00FFA7  52                 	db	82	;'R'
   593  00FFA8  4F                 	db	79	;'O'
   594  00FFA9  50                 	db	80	;'P'
   595  00FFAA  00                 	db	0
   596  00FFAB                     STR_30:
   597  00FFAB  28                 	db	40
   598  00FFAC  31                 	db	49	;'1'
   599  00FFAD  29                 	db	41
   600  00FFAE  20                 	db	32
   601  00FFAF  53                 	db	83	;'S'
   602  00FFB0  54                 	db	84	;'T'
   603  00FFB1  41                 	db	65	;'A'
   604  00FFB2  52                 	db	82	;'R'
   605  00FFB3  54                 	db	84	;'T'
   606  00FFB4  00                 	db	0
   607  00FFB5  72                 	db	114	;'r'
   608  00FFB6  65                 	db	101	;'e'
   609  00FFB7  61                 	db	97	;'a'
   610  00FFB8  64                 	db	100	;'d'
   611  00FFB9  3A                 	db	58	;':'
   612  00FFBA  20                 	db	32
   613  00FFBB  25                 	db	37
   614  00FFBC  63                 	db	99	;'c'
   615  00FFBD  6E                 	db	110	;'n'
   616  00FFBE  00                 	db	0
   617  00FFBF                     STR_26:
   618  00FFBF  57                 	db	87	;'W'
   619  00FFC0  45                 	db	69	;'E'
   620  00FFC1  4C                 	db	76	;'L'
   621  00FFC2  43                 	db	67	;'C'
   622  00FFC3  4F                 	db	79	;'O'
   623  00FFC4  4D                 	db	77	;'M'
   624  00FFC5  45                 	db	69	;'E'
   625  00FFC6  20                 	db	32
   626  00FFC7  00                 	db	0
   627  00FFC8                     STR_44:
   628  00FFC8  53                 	db	83	;'S'
   629  00FFC9  41                 	db	65	;'A'
   630  00FFCA  56                 	db	86	;'V'
   631  00FFCB  45                 	db	69	;'E'
   632  00FFCC  20                 	db	32
   633  00FFCD  4C                 	db	76	;'L'
   634  00FFCE  4F                 	db	79	;'O'
   635  00FFCF  47                 	db	71	;'G'
   636  00FFD0  00                 	db	0
   637  00FFD1                     STR_36:
   638  00FFD1  50                 	db	80	;'P'
   639  00FFD2  52                 	db	82	;'R'
   640  00FFD3  4F                 	db	79	;'O'
   641  00FFD4  47                 	db	71	;'G'
   642  00FFD5  52                 	db	82	;'R'
   643  00FFD6  45                 	db	69	;'E'
   644  00FFD7  53                 	db	83	;'S'
   645  00FFD8  53                 	db	83	;'S'
   646  00FFD9  00                 	db	0
   647  00FFDA                     STR_10:
   648  00FFDA  25                 	db	37
   649  00FFDB  73                 	db	115	;'s'
   650  00FFDC  25                 	db	37
   651  00FFDD  64                 	db	100	;'d'
   652  00FFDE  25                 	db	37
   653  00FFDF  73                 	db	115	;'s'
   654  00FFE0  25                 	db	37
   655  00FFE1  64                 	db	100	;'d'
   656  00FFE2  00                 	db	0
   657  00FFE3                     STR_1:
   658  00FFE3  25                 	db	37
   659  00FFE4  73                 	db	115	;'s'
   660  00FFE5  25                 	db	37
   661  00FFE6  64                 	db	100	;'d'
   662  00FFE7  25                 	db	37
   663  00FFE8  73                 	db	115	;'s'
   664  00FFE9  00                 	db	0
   665  00FFEA                     STR_11:
   666  00FFEA  50                 	db	80	;'P'
   667  00FFEB  4F                 	db	79	;'O'
   668  00FFEC  4C                 	db	76	;'L'
   669  00FFED  45                 	db	69	;'E'
   670  00FFEE  20                 	db	32
   671  00FFEF  00                 	db	0
   672  00FFF0                     STR_22:
   673  00FFF0  41                 	db	65	;'A'
   674  00FFF1  3A                 	db	58	;':'
   675  00FFF2  20                 	db	32
   676  00FFF3  25                 	db	37
   677  00FFF4  64                 	db	100	;'d'
   678  00FFF5  00                 	db	0
   679  00FFF6                     STR_21:
   680  00FFF6  42                 	db	66	;'B'
   681  00FFF7  3A                 	db	58	;':'
   682  00FFF8  20                 	db	32
   683  00FFF9  25                 	db	37
   684  00FFFA  64                 	db	100	;'d'
   685  00FFFB  00                 	db	0
   686  00FFFC                     STR_12:
   687  00FFFC  2F                 	db	47
   688  00FFFD  00                 	db	0
   689  0000                     
   690                           ; #config settings
   691  00FFFE  00                 	db	0	; dummy byte at the end
   692  0000                     
   693                           	psect	cinit
   694  00300E                     __pcinit:
   695                           	opt callstack 0
   696  00300E                     start_initialization:
   697                           	opt callstack 0
   698  00300E                     __initialization:
   699                           	opt callstack 0
   700                           
   701                           ; Initialize objects allocated to BANK1 (7 bytes)
   702                           ; load TBLPTR registers with __pidataBANK1
   703  00300E  0ED6               	movlw	low __pidataBANK1
   704  003010  6EF6               	movwf	tblptrl,c
   705  003012  0E38               	movlw	high __pidataBANK1
   706  003014  6EF7               	movwf	tblptrh,c
   707  003016  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   708  003018  6EF8               	movwf	tblptru,c
   709  00301A  EE01  F043         	lfsr	0,__pdataBANK1
   710  00301E  EE10 F007          	lfsr	1,7
   711  003022                     copy_data0:
   712  003022  0009               	tblrd		*+
   713  003024  CFF5 FFEE          	movff	tablat,postinc0
   714  003028  50E5               	movf	postdec1,w,c
   715  00302A  50E1               	movf	fsr1l,w,c
   716  00302C  E1FA               	bnz	copy_data0
   717                           
   718                           ; Initialize objects allocated to BANK0 (1 bytes)
   719                           ; load TBLPTR registers with __pidataBANK0
   720  00302E  0EDE               	movlw	low __pidataBANK0
   721  003030  6EF6               	movwf	tblptrl,c
   722  003032  0E38               	movlw	high __pidataBANK0
   723  003034  6EF7               	movwf	tblptrh,c
   724  003036  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   725  003038  6EF8               	movwf	tblptru,c
   726  00303A  0009               	tblrd		*+	;fetch initializer
   727  00303C  CFF5 F0F6          	movff	tablat,__pdataBANK0
   728                           
   729                           ; Initialize objects allocated to COMRAM (1 bytes)
   730                           ; load TBLPTR registers with __pidataCOMRAM
   731  003040  0EDD               	movlw	low __pidataCOMRAM
   732  003042  6EF6               	movwf	tblptrl,c
   733  003044  0E38               	movlw	high __pidataCOMRAM
   734  003046  6EF7               	movwf	tblptrh,c
   735  003048  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   736  00304A  6EF8               	movwf	tblptru,c
   737  00304C  0009               	tblrd		*+	;fetch initializer
   738  00304E  CFF5 F079          	movff	tablat,__pdataCOMRAM
   739                           
   740                           ; Clear objects allocated to BIGRAM (480 bytes)
   741  003052  EE01  F04A         	lfsr	0,__pbssBIGRAM
   742  003056  EE11 F0E0          	lfsr	1,480
   743  00305A                     clear_0:
   744  00305A  6AEE               	clrf	postinc0,c
   745  00305C  50E5               	movf	postdec1,w,c
   746  00305E  50E1               	movf	fsr1l,w,c
   747  003060  E1FC               	bnz	clear_0
   748  003062  50E2               	movf	fsr1h,w,c
   749  003064  E1FA               	bnz	clear_0
   750                           
   751                           ; Clear objects allocated to BANK1 (51 bytes)
   752  003066  EE01  F000         	lfsr	0,__pbssBANK1
   753  00306A  0E33               	movlw	51
   754  00306C                     clear_1:
   755  00306C  6AEE               	clrf	postinc0,c
   756  00306E  06E8               	decf	wreg,f,c
   757  003070  E1FD               	bnz	clear_1
   758                           
   759                           ; Clear objects allocated to COMRAM (4 bytes)
   760  003072  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   761  003074  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   762  003076  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   763  003078  6A75               	clrf	__pbssCOMRAM& (0+255),c
   764  00307A                     end_of_initialization:
   765                           	opt callstack 0
   766  00307A                     __end_of__initialization:
   767                           	opt callstack 0
   768  00307A  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   769  00307C  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   770  00307E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   771  003080  6EF8               	movwf	tblptru,c
   772  003082  0100               	movlb	0
   773  003084  EF87  F004         	goto	_main	;jump to C main() function
   774                           
   775                           	psect	bssCOMRAM
   776  000075                     __pbssCOMRAM:
   777                           	opt callstack 0
   778  000075                     _millisecondsMeasured:
   779                           	opt callstack 0
   780  000075                     	ds	2
   781  000077                     _motorADistance:
   782                           	opt callstack 0
   783  000077                     	ds	2
   784                           
   785                           	psect	dataCOMRAM
   786  000079                     __pdataCOMRAM:
   787                           	opt callstack 0
   788  000079                     _motorBDirection:
   789                           	opt callstack 0
   790  000079                     	ds	1
   791                           
   792                           	psect	dataBANK0
   793  0000F6                     __pdataBANK0:
   794                           	opt callstack 0
   795  0000F6                     _motorADirection:
   796                           	opt callstack 0
   797  0000F6                     	ds	1
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	opt callstack 0
   802  000100                     	ds	4
   803  000104                     _nout:
   804                           	opt callstack 0
   805  000104                     	ds	2
   806  000106                     _width:
   807                           	opt callstack 0
   808  000106                     	ds	2
   809  000108                     _prec:
   810                           	opt callstack 0
   811  000108                     	ds	2
   812  00010A                     _flags:
   813                           	opt callstack 0
   814  00010A                     	ds	2
   815  00010C                     _motorBDistance:
   816                           	opt callstack 0
   817  00010C                     	ds	2
   818  00010E                     _encoderAInterruptLast:
   819                           	opt callstack 0
   820  00010E                     	ds	1
   821  00010F                     _encoderBInterruptLast:
   822                           	opt callstack 0
   823  00010F                     	ds	1
   824  000110                     _bottomBreakBeamTriggeredChange:
   825                           	opt callstack 0
   826  000110                     	ds	1
   827  000111                     _topBreakBeamTriggeredChange:
   828                           	opt callstack 0
   829  000111                     	ds	1
   830  000112                     _keyPressed:
   831                           	opt callstack 0
   832  000112                     	ds	1
   833  000113                     _dbuf:
   834                           	opt callstack 0
   835  000113                     	ds	32
   836                           
   837                           	psect	dataBANK1
   838  000143                     __pdataBANK1:
   839                           	opt callstack 0
   840  000143                     stoa@F1144:
   841                           	opt callstack 0
   842  000143                     	ds	7
   843                           
   844                           	psect	bssBIGRAM
   845  00014A                     __pbssBIGRAM:
   846                           	opt callstack 0
   847  00014A                     _logs:
   848                           	opt callstack 0
   849  00014A                     	ds	480
   850                           
   851                           	psect	cstackBANK1
   852  000133                     __pcstackBANK1:
   853                           	opt callstack 0
   854  000133                     main@time:
   855                           	opt callstack 0
   856                           
   857                           ; 7 bytes @ 0x0
   858  000133                     	ds	7
   859  00013A                     main@tick:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x7
   863  00013A                     	ds	4
   864  00013E                     main@keypress:
   865                           	opt callstack 0
   866                           
   867                           ; 1 bytes @ 0xB
   868  00013E                     	ds	1
   869  00013F                     main@i:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0xC
   873  00013F                     	ds	1
   874  000140                     main@currentLogState:
   875                           	opt callstack 0
   876                           
   877                           ; 1 bytes @ 0xD
   878  000140                     	ds	1
   879  000141                     main@currentRobotState:
   880                           	opt callstack 0
   881                           
   882                           ; 1 bytes @ 0xE
   883  000141                     	ds	1
   884  000142                     main@keyValue:
   885                           	opt callstack 0
   886                           
   887                           ; 1 bytes @ 0xF
   888  000142                     	ds	1
   889                           
   890                           	psect	cstackBANK0
   891  000080                     __pcstackBANK0:
   892                           	opt callstack 0
   893  000080                     ?_printf:
   894                           	opt callstack 0
   895  000080                     printf@fmt:
   896                           	opt callstack 0
   897  000080                     _setMotorSpeeds$2218:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x0
   901  000080                     	ds	4
   902  000084                     _setMotorSpeeds$2219:
   903                           	opt callstack 0
   904                           
   905                           ; 4 bytes @ 0x4
   906  000084                     	ds	4
   907  000088                     ?_tirePositioning:
   908                           	opt callstack 0
   909  000088                     tirePositioning@maxOperationTime:
   910                           	opt callstack 0
   911  000088                     errorCorrectedMove@goalSpeed:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x8
   915  000088                     	ds	2
   916  00008A                     tirePositioning@startDistanceTop:
   917                           	opt callstack 0
   918  00008A                     errorCorrectedMove@turnRatio:
   919                           	opt callstack 0
   920                           
   921                           ; 4 bytes @ 0xA
   922  00008A                     	ds	2
   923  00008C                     tirePositioning@startDistanceBottom:
   924                           	opt callstack 0
   925  00008C                     printf@ap:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0xC
   929  00008C                     	ds	2
   930  00008E                     doDisplayLog@logNumber:
   931                           	opt callstack 0
   932  00008E                     tirePositioning@startDistance:
   933                           	opt callstack 0
   934  00008E                     errorCorrectedMove@motorAStartDistance:
   935                           	opt callstack 0
   936                           
   937                           ; 2 bytes @ 0xE
   938  00008E                     	ds	2
   939  000090                     ??_doDisplayLog:
   940  000090                     tirePositioning@topPreviousState:
   941                           	opt callstack 0
   942  000090                     errorCorrectedMove@motorBStartDistance:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x10
   946  000090                     	ds	2
   947  000092                     tirePositioning@bottomPreviousState:
   948                           	opt callstack 0
   949  000092                     errorCorrectedMove@correctionConstant:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x12
   953  000092                     	ds	2
   954  000094                     doDisplayLog@keypress:
   955                           	opt callstack 0
   956  000094                     tirePositioning@distanceRecordedTop:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x14
   960  000094                     	ds	1
   961  000095                     doDisplayLog@currentDisplayState:
   962                           	opt callstack 0
   963                           
   964                           ; 1 bytes @ 0x15
   965  000095                     	ds	1
   966  000096                     ??_errorCorrectedMove:
   967  000096                     doDisplayLog@keyValue:
   968                           	opt callstack 0
   969  000096                     tirePositioning@distanceRecordedBottom:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x16
   973  000096                     	ds	1
   974  000097                     doDisplayLog@currentPole:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x17
   978  000097                     	ds	1
   979  000098                     tirePositioning@topBreakbeam:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x18
   983  000098                     	ds	1
   984  000099                     _doDisplayLog$2216:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x19
   988  000099                     	ds	1
   989  00009A                     tirePositioning@bottomBreakbeam:
   990                           	opt callstack 0
   991  00009A                     errorCorrectedMove@error:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x1A
   995  00009A                     	ds	2
   996  00009C                     errorCorrectedMove@ASpeed:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x1C
  1000  00009C                     	ds	2
  1001  00009E                     errorCorrectedMove@BSpeed:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x1E
  1005  00009E                     	ds	2
  1006  0000A0                     opErrorCorrectionDegrees@goalSpeed:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x20
  1010  0000A0                     	ds	2
  1011  0000A2                     opErrorCorrectionDegrees@turnRatio:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x22
  1015  0000A2                     	ds	2
  1016  0000A4                     opErrorCorrectionDegrees@correctionConstant:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x24
  1020  0000A4                     	ds	4
  1021  0000A8                     opErrorCorrectionDegrees@distanceDegrees:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x28
  1025  0000A8                     	ds	2
  1026  0000AA                     opErrorCorrectionDegrees@maxOperationTime:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2A
  1030  0000AA                     	ds	2
  1031  0000AC                     _opErrorCorrectionDegrees$2221:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x2C
  1035  0000AC                     	ds	4
  1036  0000B0                     opErrorCorrectionDegrees@motorBStartDistance:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x30
  1040  0000B0                     	ds	2
  1041  0000B2                     opErrorCorrectionDegrees@motorAStartDistance:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x32
  1045  0000B2                     	ds	2
  1046  0000B4                     ??_doOperation:
  1047                           
  1048                           ; 1 bytes @ 0x34
  1049  0000B4                     	ds	3
  1050  0000B7                     doOperation@PIDData:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x37
  1054  0000B7                     	ds	20
  1055  0000CB                     doOperation@tiresOnPoleAfterOp:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x4B
  1059  0000CB                     	ds	2
  1060  0000CD                     doOperation@send:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x4D
  1064  0000CD                     	ds	1
  1065  0000CE                     doOperation@badCount:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x4E
  1069  0000CE                     	ds	2
  1070  0000D0                     doOperation@badCountBot:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x50
  1074  0000D0                     	ds	2
  1075  0000D2                     doOperation@poleNumber:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x52
  1079  0000D2                     	ds	2
  1080  0000D4                     doOperation@totalTiresSupplied:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x54
  1084  0000D4                     	ds	2
  1085  0000D6                     doOperation@distanceFromLastPole:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x56
  1089  0000D6                     	ds	2
  1090  0000D8                     doOperation@timeStart:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x58
  1094  0000D8                     	ds	2
  1095  0000DA                     doOperation@isDoneDrop:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x5A
  1099  0000DA                     	ds	1
  1100  0000DB                     doOperation@motorAStartDistance:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x5B
  1104  0000DB                     	ds	2
  1105  0000DD                     doOperation@motorBStartDistance:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x5D
  1109  0000DD                     	ds	2
  1110  0000DF                     doOperation@counted:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x5F
  1114  0000DF                     	ds	2
  1115  0000E1                     doOperation@distanceToPole:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x61
  1119  0000E1                     	ds	2
  1120  0000E3                     doOperation@millisecondsMeasuredOld:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x63
  1124  0000E3                     	ds	2
  1125  0000E5                     doOperation@tiresToDrop:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x65
  1129  0000E5                     	ds	2
  1130  0000E7                     doOperation@tiresOnPole:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x67
  1134  0000E7                     	ds	2
  1135  0000E9                     doOperation@tiresDeployedOnPole:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x69
  1139  0000E9                     	ds	2
  1140  0000EB                     doOperation@topLaserStatePrev:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x6B
  1144  0000EB                     	ds	1
  1145  0000EC                     doOperation@bottomLaserStatePrev:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x6C
  1149  0000EC                     	ds	1
  1150  0000ED                     doOperation@timeInOperation:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x6D
  1154  0000ED                     	ds	2
  1155  0000EF                     doOperation@i:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x6F
  1159  0000EF                     	ds	2
  1160  0000F1                     doOperation@currentOperationState:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x71
  1164  0000F1                     	ds	1
  1165  0000F2                     doOperation@bottomLaserState:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x72
  1169  0000F2                     	ds	1
  1170  0000F3                     doOperation@topLaserState:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x73
  1174  0000F3                     	ds	1
  1175  0000F4                     ??_main:
  1176                           
  1177                           ; 1 bytes @ 0x74
  1178  0000F4                     	ds	2
  1179                           
  1180                           	psect	cstackCOMRAM
  1181  000001                     __pcstackCOMRAM:
  1182                           	opt callstack 0
  1183  000001                     ??_updateMotorBEncoder:
  1184  000001                     ??_updateMotorAEncoder:
  1185  000001                     
  1186                           ; 1 bytes @ 0x0
  1187  000001                     	ds	1
  1188  000002                     updateMotorBEncoder@interruptPinState:
  1189                           	opt callstack 0
  1190  000002                     updateMotorAEncoder@interruptPinState:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x1
  1194  000002                     	ds	2
  1195  000004                     updateMotorBEncoder@directionPin:
  1196                           	opt callstack 0
  1197  000004                     updateMotorAEncoder@directionPin:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x3
  1201  000004                     	ds	2
  1202  000006                     ??_I2C_Master_Wait:
  1203  000006                     ?_strlen:
  1204                           	opt callstack 0
  1205  000006                     ?_isupper:
  1206                           	opt callstack 0
  1207  000006                     ?_isalpha:
  1208                           	opt callstack 0
  1209  000006                     ?_isdigit:
  1210                           	opt callstack 0
  1211  000006                     ?_isspace:
  1212                           	opt callstack 0
  1213  000006                     ?_islower:
  1214                           	opt callstack 0
  1215  000006                     ?___wmul:
  1216                           	opt callstack 0
  1217  000006                     ?___awdiv:
  1218                           	opt callstack 0
  1219  000006                     ?___awmod:
  1220                           	opt callstack 0
  1221  000006                     ?___lldiv:
  1222                           	opt callstack 0
  1223  000006                     ?___llmod:
  1224                           	opt callstack 0
  1225  000006                     ?___xxtofl:
  1226                           	opt callstack 0
  1227  000006                     ?___aodiv:
  1228                           	opt callstack 0
  1229  000006                     ?___aomod:
  1230                           	opt callstack 0
  1231  000006                     pulse_e@interruptState:
  1232                           	opt callstack 0
  1233  000006                     opDelay@millis:
  1234                           	opt callstack 0
  1235  000006                     replaceOldLog@i:
  1236                           	opt callstack 0
  1237  000006                     ___wmul@multiplier:
  1238                           	opt callstack 0
  1239  000006                     ___awdiv@dividend:
  1240                           	opt callstack 0
  1241  000006                     ___awmod@dividend:
  1242                           	opt callstack 0
  1243  000006                     isalpha@c:
  1244                           	opt callstack 0
  1245  000006                     isdigit@c:
  1246                           	opt callstack 0
  1247  000006                     isspace@c:
  1248                           	opt callstack 0
  1249  000006                     isupper@c:
  1250                           	opt callstack 0
  1251  000006                     strlen@s:
  1252                           	opt callstack 0
  1253  000006                     islower@c:
  1254                           	opt callstack 0
  1255  000006                     ___lldiv@dividend:
  1256                           	opt callstack 0
  1257  000006                     ___flge@ff1:
  1258                           	opt callstack 0
  1259  000006                     ___llmod@dividend:
  1260                           	opt callstack 0
  1261  000006                     ___xxtofl@val:
  1262                           	opt callstack 0
  1263  000006                     ___aodiv@dividend:
  1264                           	opt callstack 0
  1265  000006                     ___aomod@dividend:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x5
  1269  000006                     	ds	1
  1270  000007                     send_nibble@data:
  1271                           	opt callstack 0
  1272  000007                     I2C_Master_Read@ackBit:
  1273                           	opt callstack 0
  1274  000007                     I2C_Master_Write@byteToWrite:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  000007                     	ds	1
  1279  000008                     ??_isupper:
  1280  000008                     ??_isalpha:
  1281  000008                     ??_isdigit:
  1282  000008                     ??_isspace:
  1283  000008                     ??_islower:
  1284  000008                     send_byte@data:
  1285                           	opt callstack 0
  1286  000008                     I2C_Master_Read@receivedByte:
  1287                           	opt callstack 0
  1288  000008                     opDelay@maxOperationTime:
  1289                           	opt callstack 0
  1290  000008                     ___wmul@multiplicand:
  1291                           	opt callstack 0
  1292  000008                     ___awdiv@divisor:
  1293                           	opt callstack 0
  1294  000008                     ___awmod@divisor:
  1295                           	opt callstack 0
  1296  000008                     strlen@a:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x7
  1300  000008                     	ds	1
  1301  000009                     requestIsTireDropDone@data:
  1302                           	opt callstack 0
  1303  000009                     lcdInst@data:
  1304                           	opt callstack 0
  1305  000009                     putch@data:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x8
  1309  000009                     	ds	1
  1310  00000A                     ??_initLCD:
  1311  00000A                     ??_opDelay:
  1312  00000A                     ??___xxtofl:
  1313  00000A                     ___awdiv@counter:
  1314                           	opt callstack 0
  1315  00000A                     ___awmod@counter:
  1316                           	opt callstack 0
  1317  00000A                     ___wmul@product:
  1318                           	opt callstack 0
  1319  00000A                     fputc@c:
  1320                           	opt callstack 0
  1321  00000A                     ___lldiv@divisor:
  1322                           	opt callstack 0
  1323  00000A                     ___flge@ff2:
  1324                           	opt callstack 0
  1325  00000A                     ___llmod@divisor:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x9
  1329  00000A                     	ds	1
  1330  00000B                     ___awdiv@sign:
  1331                           	opt callstack 0
  1332  00000B                     ___awmod@sign:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 1 bytes @ 0xA
  1336  00000B                     	ds	1
  1337  00000C                     ?_toupper:
  1338                           	opt callstack 0
  1339  00000C                     _isspace$1852:
  1340                           	opt callstack 0
  1341  00000C                     ___awdiv@quotient:
  1342                           	opt callstack 0
  1343  00000C                     fputc@fp:
  1344                           	opt callstack 0
  1345  00000C                     toupper@c:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0xB
  1349  00000C                     	ds	1
  1350  00000D                     ?_atoi:
  1351                           	opt callstack 0
  1352  00000D                     opDelay@startTime:
  1353                           	opt callstack 0
  1354  00000D                     atoi@s:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 2 bytes @ 0xC
  1358  00000D                     	ds	1
  1359  00000E                     ??_fputc:
  1360  00000E                     ??_toupper:
  1361  00000E                     ??___flge:
  1362  00000E                     ___llmod@counter:
  1363                           	opt callstack 0
  1364  00000E                     ___xxtofl@sign:
  1365                           	opt callstack 0
  1366  00000E                     ___lldiv@quotient:
  1367                           	opt callstack 0
  1368  00000E                     ___aodiv@divisor:
  1369                           	opt callstack 0
  1370  00000E                     ___aomod@divisor:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 8 bytes @ 0xD
  1374  00000E                     	ds	1
  1375  00000F                     ??_atoi:
  1376  00000F                     ___xxtofl@exp:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 1 bytes @ 0xE
  1380  00000F                     	ds	1
  1381  000010                     ___xxtofl@arg:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 4 bytes @ 0xF
  1385  000010                     	ds	2
  1386  000012                     ___lldiv@counter:
  1387                           	opt callstack 0
  1388  000012                     _toupper$1916:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x11
  1392  000012                     	ds	1
  1393  000013                     ?_stoa:
  1394                           	opt callstack 0
  1395  000013                     stoa@fp:
  1396                           	opt callstack 0
  1397  000013                     atoi@neg:
  1398                           	opt callstack 0
  1399  000013                     fputs@s:
  1400                           	opt callstack 0
  1401  000013                     I2C_Master_Init@clockFreq:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x12
  1405  000013                     	ds	1
  1406  000014                     ?___flmul:
  1407                           	opt callstack 0
  1408  000014                     ___flmul@b:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x13
  1412  000014                     	ds	1
  1413  000015                     stoa@s:
  1414                           	opt callstack 0
  1415  000015                     _atoi$1825:
  1416                           	opt callstack 0
  1417  000015                     fputs@fp:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x14
  1421  000015                     	ds	1
  1422  000016                     ___aodiv@counter:
  1423                           	opt callstack 0
  1424  000016                     ___aomod@counter:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x15
  1428  000016                     	ds	1
  1429  000017                     ??_I2C_Master_Init:
  1430  000017                     ??_stoa:
  1431  000017                     ___aodiv@sign:
  1432                           	opt callstack 0
  1433  000017                     ___aomod@sign:
  1434                           	opt callstack 0
  1435  000017                     fputs@c:
  1436                           	opt callstack 0
  1437  000017                     _atoi$1827:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x16
  1441  000017                     	ds	1
  1442  000018                     ?_abs:
  1443                           	opt callstack 0
  1444  000018                     abs@a:
  1445                           	opt callstack 0
  1446  000018                     fputs@i:
  1447                           	opt callstack 0
  1448  000018                     ___flmul@a:
  1449                           	opt callstack 0
  1450  000018                     stoa@nuls:
  1451                           	opt callstack 0
  1452  000018                     ___aodiv@quotient:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 8 bytes @ 0x17
  1456  000018                     	ds	1
  1457  000019                     _atoi$1826:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x18
  1461  000019                     	ds	1
  1462  00001A                     ??_abs:
  1463  00001A                     ?_pad:
  1464                           	opt callstack 0
  1465  00001A                     pad@fp:
  1466                           	opt callstack 0
  1467  00001A                     atoi@n:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x19
  1471  00001A                     	ds	1
  1472  00001B                     
  1473                           ; 1 bytes @ 0x1A
  1474  00001B                     	ds	1
  1475  00001C                     ??___flmul:
  1476  00001C                     pad@buf:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x1B
  1480  00001C                     	ds	2
  1481  00001E                     pad@p:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x1D
  1485  00001E                     	ds	1
  1486  00001F                     stoa@i:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x1E
  1490  00001F                     	ds	1
  1491  000020                     ??_pad:
  1492  000020                     ___flmul@sign:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 1 bytes @ 0x1F
  1496  000020                     	ds	1
  1497  000021                     ___flmul@aexp:
  1498                           	opt callstack 0
  1499  000021                     pad@i:
  1500                           	opt callstack 0
  1501  000021                     stoa@w:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x20
  1505  000021                     	ds	1
  1506  000022                     ___flmul@grs:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x21
  1510  000022                     	ds	1
  1511  000023                     pad@w:
  1512                           	opt callstack 0
  1513  000023                     stoa@cp:
  1514                           	opt callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x22
  1517  000023                     	ds	2
  1518  000025                     ?_ctoa:
  1519                           	opt callstack 0
  1520  000025                     ?_dtoa:
  1521                           	opt callstack 0
  1522  000025                     ?_xtoa:
  1523                           	opt callstack 0
  1524  000025                     ctoa@fp:
  1525                           	opt callstack 0
  1526  000025                     dtoa@fp:
  1527                           	opt callstack 0
  1528  000025                     stoa@p:
  1529                           	opt callstack 0
  1530  000025                     xtoa@fp:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x24
  1534  000025                     	ds	1
  1535  000026                     ___flmul@bexp:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x25
  1539  000026                     	ds	1
  1540  000027                     ctoa@c:
  1541                           	opt callstack 0
  1542  000027                     stoa@l:
  1543                           	opt callstack 0
  1544  000027                     ___flmul@prod:
  1545                           	opt callstack 0
  1546  000027                     dtoa@d:
  1547                           	opt callstack 0
  1548  000027                     xtoa@d:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 8 bytes @ 0x26
  1552  000027                     	ds	1
  1553  000028                     ctoa@w:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x27
  1557  000028                     	ds	3
  1558  00002B                     ___flmul@temp:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x2A
  1562  00002B                     	ds	2
  1563  00002D                     ?___fladd:
  1564                           	opt callstack 0
  1565  00002D                     ?___fldiv:
  1566                           	opt callstack 0
  1567  00002D                     ___fladd@b:
  1568                           	opt callstack 0
  1569  00002D                     ___fldiv@b:
  1570                           	opt callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x2C
  1573  00002D                     	ds	2
  1574  00002F                     ??_dtoa:
  1575  00002F                     xtoa@x:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 1 bytes @ 0x2E
  1579  00002F                     	ds	1
  1580  000030                     ??_xtoa:
  1581                           
  1582                           ; 1 bytes @ 0x2F
  1583  000030                     	ds	1
  1584  000031                     ___fladd@a:
  1585                           	opt callstack 0
  1586  000031                     ___fldiv@a:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 4 bytes @ 0x30
  1590  000031                     	ds	4
  1591  000035                     ??___fladd:
  1592  000035                     ??___fldiv:
  1593                           
  1594                           ; 1 bytes @ 0x34
  1595  000035                     	ds	2
  1596  000037                     _dtoa$1329:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x36
  1600  000037                     	ds	1
  1601  000038                     _xtoa$1350:
  1602                           	opt callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x37
  1605  000038                     	ds	1
  1606  000039                     ___fladd@signs:
  1607                           	opt callstack 0
  1608  000039                     dtoa@p:
  1609                           	opt callstack 0
  1610  000039                     ___fldiv@rem:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x38
  1614  000039                     	ds	1
  1615  00003A                     ___fladd@aexp:
  1616                           	opt callstack 0
  1617  00003A                     _xtoa$1351:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x39
  1621  00003A                     	ds	1
  1622  00003B                     ___fladd@bexp:
  1623                           	opt callstack 0
  1624  00003B                     dtoa@w:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x3A
  1628  00003B                     	ds	1
  1629  00003C                     ___fladd@grs:
  1630                           	opt callstack 0
  1631  00003C                     xtoa@p:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x3B
  1635  00003C                     	ds	1
  1636  00003D                     ___fldiv@sign:
  1637                           	opt callstack 0
  1638  00003D                     dtoa@s:
  1639                           	opt callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x3C
  1642  00003D                     	ds	1
  1643  00003E                     xtoa@w:
  1644                           	opt callstack 0
  1645  00003E                     ___fldiv@new_exp:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x3D
  1649  00003E                     	ds	1
  1650  00003F                     dtoa@n:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 8 bytes @ 0x3E
  1654  00003F                     	ds	1
  1655  000040                     ___fldiv@grs:
  1656                           	opt callstack 0
  1657  000040                     xtoa@n:
  1658                           	opt callstack 0
  1659                           
  1660                           ; 8 bytes @ 0x3F
  1661  000040                     	ds	4
  1662  000044                     ___fldiv@bexp:
  1663                           	opt callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x43
  1666  000044                     	ds	1
  1667  000045                     ___fldiv@aexp:
  1668                           	opt callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x44
  1671  000045                     	ds	1
  1672  000046                     ?___flsub:
  1673                           	opt callstack 0
  1674  000046                     ___flsub@b:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 4 bytes @ 0x45
  1678  000046                     	ds	1
  1679  000047                     dtoa@i:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x46
  1683  000047                     	ds	1
  1684  000048                     xtoa@i:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x47
  1688  000048                     	ds	2
  1689  00004A                     xtoa@c:
  1690                           	opt callstack 0
  1691  00004A                     ___flsub@a:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x49
  1695  00004A                     	ds	2
  1696  00004C                     ?_vfpfcnvrt:
  1697                           	opt callstack 0
  1698  00004C                     vfpfcnvrt@fp:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x4B
  1702  00004C                     	ds	2
  1703  00004E                     ?___fltol:
  1704                           	opt callstack 0
  1705  00004E                     vfpfcnvrt@fmt:
  1706                           	opt callstack 0
  1707  00004E                     ___fltol@f1:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x4D
  1711  00004E                     	ds	2
  1712  000050                     vfpfcnvrt@ap:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x4F
  1716  000050                     	ds	2
  1717  000052                     ??_vfpfcnvrt:
  1718  000052                     ??___fltol:
  1719                           
  1720                           ; 1 bytes @ 0x51
  1721  000052                     	ds	4
  1722  000056                     ___fltol@sign1:
  1723                           	opt callstack 0
  1724  000056                     vfpfcnvrt@ll:
  1725                           	opt callstack 0
  1726                           
  1727                           ; 8 bytes @ 0x55
  1728  000056                     	ds	1
  1729  000057                     ___fltol@exp1:
  1730                           	opt callstack 0
  1731                           
  1732                           ; 1 bytes @ 0x56
  1733  000057                     	ds	1
  1734  000058                     set_pwm_duty_cycle@dutyA:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 4 bytes @ 0x57
  1738  000058                     	ds	4
  1739  00005C                     set_pwm_duty_cycle@dutyB:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 4 bytes @ 0x5B
  1743  00005C                     	ds	2
  1744  00005E                     vfpfcnvrt@llu:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 8 bytes @ 0x5D
  1748  00005E                     	ds	2
  1749  000060                     ??_set_pwm_duty_cycle:
  1750                           
  1751                           ; 1 bytes @ 0x5F
  1752  000060                     	ds	2
  1753  000062                     set_pwm_duty_cycle@max_duty_val:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 2 bytes @ 0x61
  1757  000062                     	ds	2
  1758  000064                     set_pwm_duty_cycle@duty_valA:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x63
  1762  000064                     	ds	2
  1763  000066                     set_pwm_duty_cycle@duty_valB:
  1764                           	opt callstack 0
  1765  000066                     vfpfcnvrt@cp:
  1766                           	opt callstack 0
  1767                           
  1768                           ; 2 bytes @ 0x65
  1769  000066                     	ds	2
  1770  000068                     vfpfcnvrt@done:
  1771                           	opt callstack 0
  1772  000068                     _set_pwm_duty_cycle$2217:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 4 bytes @ 0x67
  1776  000068                     	ds	2
  1777  00006A                     _vfpfcnvrt$1365:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x69
  1781  00006A                     	ds	2
  1782  00006C                     vfpfcnvrt@c:
  1783                           	opt callstack 0
  1784  00006C                     setMotorSpeeds@motorASpeed:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x6B
  1788  00006C                     	ds	1
  1789  00006D                     ?_vfprintf:
  1790                           	opt callstack 0
  1791  00006D                     vfprintf@fp:
  1792                           	opt callstack 0
  1793                           
  1794                           ; 2 bytes @ 0x6C
  1795  00006D                     	ds	1
  1796  00006E                     setMotorSpeeds@Aforward:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 1 bytes @ 0x6D
  1800  00006E                     	ds	1
  1801  00006F                     setMotorSpeeds@Bforward:
  1802                           	opt callstack 0
  1803  00006F                     vfprintf@fmt:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 2 bytes @ 0x6E
  1807  00006F                     	ds	1
  1808  000070                     setMotorSpeeds@motorBSpeed:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x6F
  1812  000070                     	ds	1
  1813  000071                     vfprintf@ap:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x70
  1817  000071                     	ds	1
  1818  000072                     ??_tirePositioning:
  1819  000072                     ??_opErrorCorrectionDegrees:
  1820                           
  1821                           ; 1 bytes @ 0x71
  1822  000072                     	ds	1
  1823  000073                     vfprintf@cfmt:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 2 bytes @ 0x72
  1827  000073                     	ds	2
  1828  000075                     
  1829                           ; 1 bytes @ 0x74
  1830 ;;
  1831 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1832 ;;
  1833 ;; *************** function _main *****************
  1834 ;; Defined at:
  1835 ;;		line 1003 in file "main.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  i               1   12[BANK1 ] unsigned char 
  1840 ;;  keyValue        1   15[BANK1 ] unsigned char 
  1841 ;;  keypress        1   11[BANK1 ] unsigned char 
  1842 ;;  time            7    0[BANK1 ] unsigned char [7]
  1843 ;;  tick            4    7[BANK1 ] unsigned long 
  1844 ;;  currentRobot    1   14[BANK1 ] enum E3408
  1845 ;;  currentLogSt    1   13[BANK1 ] enum E3415
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:       18 bytes
  1860 ;; Hardware stack levels required when called:   14
  1861 ;; This function calls:
  1862 ;;		_I2C_Master_Read
  1863 ;;		_I2C_Master_Start
  1864 ;;		_I2C_Master_Stop
  1865 ;;		_I2C_Master_Write
  1866 ;;		___llmod
  1867 ;;		_doDisplayLog
  1868 ;;		_doOperation
  1869 ;;		_lcdInst
  1870 ;;		_printf
  1871 ;;		_replaceOldLog
  1872 ;;		_robotInit
  1873 ;; This function is called by:
  1874 ;;		Startup code after reset
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text0
  1879  00090E                     __ptext0:
  1880                           	opt callstack 0
  1881  00090E                     _main:
  1882                           	opt callstack 17
  1883                           
  1884                           ;main.c: 1004:     robotInit();
  1885                           
  1886                           ;incstack = 0
  1887  00090E  EC4C  F01A         	call	_robotInit	;wreg free
  1888                           
  1889                           ;main.c: 1007:     unsigned char time[7];;main.c: 1014:     enum robotStates currentRobo
      +                          tState = standby;
  1890  000912  0E00               	movlw	0
  1891  000914  0101               	movlb	1	; () banked
  1892  000916  6F41               	movwf	main@currentRobotState& (0+255),b
  1893                           
  1894                           ; BSR set to: 1
  1895                           ;main.c: 1016:     enum logStates currentLogState = one;
  1896  000918  0E01               	movlw	1
  1897  00091A  6F40               	movwf	main@currentLogState& (0+255),b
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;main.c: 1018:     unsigned long tick = 0;
  1901  00091C  0E00               	movlw	0
  1902  00091E  6F3A               	movwf	main@tick& (0+255),b
  1903  000920  0E00               	movlw	0
  1904  000922  6F3B               	movwf	(main@tick+1)& (0+255),b
  1905  000924  0E00               	movlw	0
  1906  000926  6F3C               	movwf	(main@tick+2)& (0+255),b
  1907  000928  0E00               	movlw	0
  1908  00092A  6F3D               	movwf	(main@tick+3)& (0+255),b
  1909  00092C                     l8646:
  1910                           
  1911                           ;main.c: 1021:             if (tick%10==0){
  1912  00092C  C13A  F006         	movff	main@tick,___llmod@dividend
  1913  000930  C13B  F007         	movff	main@tick+1,___llmod@dividend+1
  1914  000934  C13C  F008         	movff	main@tick+2,___llmod@dividend+2
  1915  000938  C13D  F009         	movff	main@tick+3,___llmod@dividend+3
  1916  00093C  0E0A               	movlw	10
  1917  00093E  6E0A               	movwf	___llmod@divisor,c
  1918  000940  0E00               	movlw	0
  1919  000942  6E0B               	movwf	___llmod@divisor+1,c
  1920  000944  0E00               	movlw	0
  1921  000946  6E0C               	movwf	___llmod@divisor+2,c
  1922  000948  0E00               	movlw	0
  1923  00094A  6E0D               	movwf	___llmod@divisor+3,c
  1924  00094C  ECE7  F018         	call	___llmod	;wreg free
  1925  000950  5006               	movf	?___llmod,w,c
  1926  000952  1007               	iorwf	?___llmod+1,w,c
  1927  000954  1008               	iorwf	?___llmod+2,w,c
  1928  000956  1009               	iorwf	?___llmod+3,w,c
  1929  000958  A4D8               	btfss	status,2,c
  1930  00095A  D152               	goto	l8752
  1931                           
  1932                           ;main.c: 1023:                 I2C_Master_Start();
  1933  00095C  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  1934                           
  1935                           ;main.c: 1024:                 I2C_Master_Write(0b11010000);
  1936  000960  0E00               	movlw	0
  1937  000962  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1938  000964  0ED0               	movlw	208
  1939  000966  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1940  000968  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  1941                           
  1942                           ;main.c: 1025:                 I2C_Master_Write(0x00);
  1943  00096C  0E00               	movlw	0
  1944  00096E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1945  000970  0E00               	movlw	0
  1946  000972  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1947  000974  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  1948                           
  1949                           ;main.c: 1026:                 I2C_Master_Stop();
  1950  000978  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  1951                           
  1952                           ;main.c: 1029:                 I2C_Master_Start();
  1953  00097C  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  1954                           
  1955                           ;main.c: 1030:                 I2C_Master_Write(0b11010001);
  1956  000980  0E00               	movlw	0
  1957  000982  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1958  000984  0ED1               	movlw	209
  1959  000986  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1960  000988  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  1961                           
  1962                           ;main.c: 1031:                 for(unsigned char i = 0; i < 6; i++){
  1963  00098C  0E00               	movlw	0
  1964  00098E  0101               	movlb	1	; () banked
  1965  000990  6F3F               	movwf	main@i& (0+255),b
  1966  000992                     l8656:
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;main.c: 1032:                     time[i] = I2C_Master_Read(0);
  1970  000992  0E33               	movlw	low main@time
  1971  000994  253F               	addwf	main@i& (0+255),w,b
  1972  000996  6ED9               	movwf	fsr2l,c
  1973  000998  6ADA               	clrf	fsr2h,c
  1974  00099A  0E01               	movlw	high main@time
  1975  00099C  22DA               	addwfc	fsr2h,f,c
  1976  00099E  0E00               	movlw	0
  1977  0009A0  ECE6  F01B         	call	_I2C_Master_Read
  1978  0009A4  6EDF               	movwf	indf2,c
  1979                           
  1980                           ;main.c: 1033:                 }
  1981  0009A6  0101               	movlb	1	; () banked
  1982  0009A8  2B3F               	incf	main@i& (0+255),f,b
  1983                           
  1984                           ; BSR set to: 1
  1985  0009AA  0E05               	movlw	5
  1986  0009AC  653F               	cpfsgt	main@i& (0+255),b
  1987  0009AE  D7F1               	goto	l8656
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;main.c: 1034:                 time[6] = I2C_Master_Read(1);
  1991  0009B0  0E01               	movlw	1
  1992  0009B2  ECE6  F01B         	call	_I2C_Master_Read
  1993  0009B6  0101               	movlb	1	; () banked
  1994  0009B8  6F39               	movwf	(main@time+6)& (0+255),b
  1995                           
  1996                           ;main.c: 1035:                 I2C_Master_Stop();
  1997  0009BA  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  1998  0009BE  D120               	goto	l8752
  1999  0009C0                     l8664:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 1048:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2003  0009C0  0E80               	movlw	128
  2004  0009C2  EC58  F01C         	call	_lcdInst
  2005  0009C6  0E07               	movlw	7
  2006  0009C8  0100               	movlb	0	; () banked
  2007  0009CA  6FF4               	movwf	??_main& (0+255),b
  2008  0009CC  0E7D               	movlw	125
  2009  0009CE                     u10057:
  2010  0009CE  2EE8               	decfsz	wreg,f,c
  2011  0009D0  D7FE               	bra	u10057
  2012  0009D2  2FF4               	decfsz	??_main& (0+255),f,b
  2013  0009D4  D7FC               	bra	u10057
  2014                           
  2015                           ;main.c: 1050:                 printf("%s", "WELCOME ");
  2016  0009D6  0EE7               	movlw	low (STR_1+4)
  2017  0009D8  0100               	movlb	0	; () banked
  2018  0009DA  6F80               	movwf	printf@fmt& (0+255),b
  2019  0009DC  0EFF               	movlw	high (STR_1+4)
  2020  0009DE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2021  0009E0  0EBF               	movlw	low STR_26
  2022  0009E2  6F82               	movwf	(?_printf+2)& (0+255),b
  2023  0009E4  0EFF               	movlw	high STR_26
  2024  0009E6  6F83               	movwf	(?_printf+3)& (0+255),b
  2025  0009E8  ECBF  F01B         	call	_printf	;wreg free
  2026                           
  2027                           ;main.c: 1051:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2028  0009EC  0ED3               	movlw	low STR_27
  2029  0009EE  0100               	movlb	0	; () banked
  2030  0009F0  6F80               	movwf	printf@fmt& (0+255),b
  2031  0009F2  0EFE               	movlw	high STR_27
  2032  0009F4  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2033  0009F6  C139  F082         	movff	main@time+6,?_printf+2
  2034  0009FA  6B83               	clrf	(?_printf+3)& (0+255),b
  2035  0009FC  C138  F084         	movff	main@time+5,?_printf+4
  2036  000A00  6B85               	clrf	(?_printf+5)& (0+255),b
  2037  000A02  C137  F086         	movff	main@time+4,?_printf+6
  2038  000A06  6B87               	clrf	(?_printf+7)& (0+255),b
  2039  000A08  ECBF  F01B         	call	_printf	;wreg free
  2040  000A0C  0EC0               	movlw	192
  2041  000A0E  EC58  F01C         	call	_lcdInst
  2042                           
  2043                           ;main.c: 1053:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2044  000A12  0EE2               	movlw	low STR_28
  2045  000A14  0100               	movlb	0	; () banked
  2046  000A16  6F80               	movwf	printf@fmt& (0+255),b
  2047  000A18  0EFE               	movlw	high STR_28
  2048  000A1A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2049  000A1C  C135  F082         	movff	main@time+2,?_printf+2
  2050  000A20  6B83               	clrf	(?_printf+3)& (0+255),b
  2051  000A22  C134  F084         	movff	main@time+1,?_printf+4
  2052  000A26  6B85               	clrf	(?_printf+5)& (0+255),b
  2053  000A28  C133  F086         	movff	main@time,?_printf+6
  2054  000A2C  6B87               	clrf	(?_printf+7)& (0+255),b
  2055  000A2E  ECBF  F01B         	call	_printf	;wreg free
  2056  000A32  0E90               	movlw	144
  2057  000A34  EC58  F01C         	call	_lcdInst
  2058                           
  2059                           ;main.c: 1055:                 printf("%s","(1) START");
  2060  000A38  0EE7               	movlw	low (STR_1+4)
  2061  000A3A  0100               	movlb	0	; () banked
  2062  000A3C  6F80               	movwf	printf@fmt& (0+255),b
  2063  000A3E  0EFF               	movlw	high (STR_1+4)
  2064  000A40  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2065  000A42  0EAB               	movlw	low STR_30
  2066  000A44  6F82               	movwf	(?_printf+2)& (0+255),b
  2067  000A46  0EFF               	movlw	high STR_30
  2068  000A48  6F83               	movwf	(?_printf+3)& (0+255),b
  2069  000A4A  ECBF  F01B         	call	_printf	;wreg free
  2070  000A4E  0ED0               	movlw	208
  2071  000A50  EC58  F01C         	call	_lcdInst
  2072                           
  2073                           ;main.c: 1057:                 printf("%s","(2) VIEW LOGS");
  2074  000A54  0EE7               	movlw	low (STR_1+4)
  2075  000A56  0100               	movlb	0	; () banked
  2076  000A58  6F80               	movwf	printf@fmt& (0+255),b
  2077  000A5A  0EFF               	movlw	high (STR_1+4)
  2078  000A5C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2079  000A5E  0E1B               	movlw	low STR_32
  2080  000A60  6F82               	movwf	(?_printf+2)& (0+255),b
  2081  000A62  0EFF               	movlw	high STR_32
  2082  000A64  6F83               	movwf	(?_printf+3)& (0+255),b
  2083  000A66  ECBF  F01B         	call	_printf	;wreg free
  2084                           
  2085                           ;main.c: 1058:                 break;
  2086  000A6A  D0E3               	goto	l8754
  2087  000A6C                     l8684:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;main.c: 1061:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2091  000A6C  0E80               	movlw	128
  2092  000A6E  EC58  F01C         	call	_lcdInst
  2093  000A72  0E07               	movlw	7
  2094  000A74  0100               	movlb	0	; () banked
  2095  000A76  6FF4               	movwf	??_main& (0+255),b
  2096  000A78  0E7D               	movlw	125
  2097  000A7A                     u10067:
  2098  000A7A  2EE8               	decfsz	wreg,f,c
  2099  000A7C  D7FE               	bra	u10067
  2100  000A7E  2FF4               	decfsz	??_main& (0+255),f,b
  2101  000A80  D7FC               	bra	u10067
  2102                           
  2103                           ;main.c: 1062:                 printf("%s", "OPERATION IN");
  2104  000A82  0EE7               	movlw	low (STR_1+4)
  2105  000A84  0100               	movlb	0	; () banked
  2106  000A86  6F80               	movwf	printf@fmt& (0+255),b
  2107  000A88  0EFF               	movlw	high (STR_1+4)
  2108  000A8A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2109  000A8C  0E51               	movlw	low STR_34
  2110  000A8E  6F82               	movwf	(?_printf+2)& (0+255),b
  2111  000A90  0EFF               	movlw	high STR_34
  2112  000A92  6F83               	movwf	(?_printf+3)& (0+255),b
  2113  000A94  ECBF  F01B         	call	_printf	;wreg free
  2114  000A98  0EC0               	movlw	192
  2115  000A9A  EC58  F01C         	call	_lcdInst
  2116                           
  2117                           ;main.c: 1064:                 printf("%s","PROGRESS");
  2118  000A9E  0EE7               	movlw	low (STR_1+4)
  2119  000AA0  0100               	movlb	0	; () banked
  2120  000AA2  6F80               	movwf	printf@fmt& (0+255),b
  2121  000AA4  0EFF               	movlw	high (STR_1+4)
  2122  000AA6  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2123  000AA8  0ED1               	movlw	low STR_36
  2124  000AAA  6F82               	movwf	(?_printf+2)& (0+255),b
  2125  000AAC  0EFF               	movlw	high STR_36
  2126  000AAE  6F83               	movwf	(?_printf+3)& (0+255),b
  2127  000AB0  ECBF  F01B         	call	_printf	;wreg free
  2128                           
  2129                           ;main.c: 1065:                 doOperation();
  2130  000AB4  EC4B  F002         	call	_doOperation	;wreg free
  2131                           
  2132                           ;main.c: 1066:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2133  000AB8  0E01               	movlw	1
  2134  000ABA  EC58  F01C         	call	_lcdInst
  2135  000ABE  0E11               	movlw	17
  2136  000AC0  0100               	movlb	0	; () banked
  2137  000AC2  6FF4               	movwf	??_main& (0+255),b
  2138  000AC4  0E3A               	movlw	58
  2139  000AC6                     u10077:
  2140  000AC6  2EE8               	decfsz	wreg,f,c
  2141  000AC8  D7FE               	bra	u10077
  2142  000ACA  2FF4               	decfsz	??_main& (0+255),f,b
  2143  000ACC  D7FC               	bra	u10077
  2144  000ACE  F000               	nop	
  2145                           
  2146                           ;main.c: 1067:                 currentRobotState = operationComplete;
  2147  000AD0  0E02               	movlw	2
  2148  000AD2  D093               	goto	L1
  2149  000AD4                     l8702:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 1073:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2153  000AD4  0E80               	movlw	128
  2154  000AD6  EC58  F01C         	call	_lcdInst
  2155  000ADA  0E07               	movlw	7
  2156  000ADC  0100               	movlb	0	; () banked
  2157  000ADE  6FF4               	movwf	??_main& (0+255),b
  2158  000AE0  0E7D               	movlw	125
  2159  000AE2                     u10087:
  2160  000AE2  2EE8               	decfsz	wreg,f,c
  2161  000AE4  D7FE               	bra	u10087
  2162  000AE6  2FF4               	decfsz	??_main& (0+255),f,b
  2163  000AE8  D7FC               	bra	u10087
  2164                           
  2165                           ;main.c: 1074:                 printf("%s", "OP. COMPLETE");
  2166  000AEA  0EE7               	movlw	low (STR_1+4)
  2167  000AEC  0100               	movlb	0	; () banked
  2168  000AEE  6F80               	movwf	printf@fmt& (0+255),b
  2169  000AF0  0EFF               	movlw	high (STR_1+4)
  2170  000AF2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2171  000AF4  0E37               	movlw	low STR_38
  2172  000AF6  6F82               	movwf	(?_printf+2)& (0+255),b
  2173  000AF8  0EFF               	movlw	high STR_38
  2174  000AFA  6F83               	movwf	(?_printf+3)& (0+255),b
  2175  000AFC  ECBF  F01B         	call	_printf	;wreg free
  2176  000B00  0EC0               	movlw	192
  2177  000B02  EC58  F01C         	call	_lcdInst
  2178                           
  2179                           ;main.c: 1076:                 printf("%s","(1) VIEW LOG");
  2180  000B06  0EE7               	movlw	low (STR_1+4)
  2181  000B08  0100               	movlb	0	; () banked
  2182  000B0A  6F80               	movwf	printf@fmt& (0+255),b
  2183  000B0C  0EFF               	movlw	high (STR_1+4)
  2184  000B0E  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2185  000B10  0E44               	movlw	low STR_40
  2186  000B12  6F82               	movwf	(?_printf+2)& (0+255),b
  2187  000B14  0EFF               	movlw	high STR_40
  2188  000B16  6F83               	movwf	(?_printf+3)& (0+255),b
  2189  000B18  ECBF  F01B         	call	_printf	;wreg free
  2190  000B1C  0E90               	movlw	144
  2191  000B1E  EC58  F01C         	call	_lcdInst
  2192                           
  2193                           ;main.c: 1078:                 printf("%s","(2) QUIT DO NOT");
  2194  000B22  0EE7               	movlw	low (STR_1+4)
  2195  000B24  0100               	movlb	0	; () banked
  2196  000B26  6F80               	movwf	printf@fmt& (0+255),b
  2197  000B28  0EFF               	movlw	high (STR_1+4)
  2198  000B2A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2199  000B2C  0EB4               	movlw	low STR_42
  2200  000B2E  6F82               	movwf	(?_printf+2)& (0+255),b
  2201  000B30  0EFE               	movlw	high STR_42
  2202  000B32  6F83               	movwf	(?_printf+3)& (0+255),b
  2203  000B34  ECBF  F01B         	call	_printf	;wreg free
  2204  000B38  0ED0               	movlw	208
  2205  000B3A  EC58  F01C         	call	_lcdInst
  2206                           
  2207                           ;main.c: 1080:                 printf("%s","SAVE LOG");
  2208  000B3E  0EE7               	movlw	low (STR_1+4)
  2209  000B40  0100               	movlb	0	; () banked
  2210  000B42  6F80               	movwf	printf@fmt& (0+255),b
  2211  000B44  0EFF               	movlw	high (STR_1+4)
  2212  000B46  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2213  000B48  0EC8               	movlw	low STR_44
  2214  000B4A  6F82               	movwf	(?_printf+2)& (0+255),b
  2215  000B4C  0EFF               	movlw	high STR_44
  2216  000B4E  6F83               	movwf	(?_printf+3)& (0+255),b
  2217  000B50  ECBF  F01B         	call	_printf	;wreg free
  2218                           
  2219                           ;main.c: 1081:                 currentLogState = justRan;
  2220  000B54  0E00               	movlw	0
  2221  000B56  0101               	movlb	1	; () banked
  2222  000B58  6F40               	movwf	main@currentLogState& (0+255),b
  2223                           
  2224                           ;main.c: 1082:                 break;
  2225  000B5A  D06B               	goto	l8754
  2226  000B5C                     l8722:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;main.c: 1085:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2230  000B5C  0E80               	movlw	128
  2231  000B5E  EC58  F01C         	call	_lcdInst
  2232  000B62  0E07               	movlw	7
  2233  000B64  0100               	movlb	0	; () banked
  2234  000B66  6FF4               	movwf	??_main& (0+255),b
  2235  000B68  0E7D               	movlw	125
  2236  000B6A                     u10097:
  2237  000B6A  2EE8               	decfsz	wreg,f,c
  2238  000B6C  D7FE               	bra	u10097
  2239  000B6E  2FF4               	decfsz	??_main& (0+255),f,b
  2240  000B70  D7FC               	bra	u10097
  2241                           
  2242                           ;main.c: 1086:                 printf("%s", "SELECT LOG");
  2243  000B72  0EE7               	movlw	low (STR_1+4)
  2244  000B74  0100               	movlb	0	; () banked
  2245  000B76  6F80               	movwf	printf@fmt& (0+255),b
  2246  000B78  0EFF               	movlw	high (STR_1+4)
  2247  000B7A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2248  000B7C  0E6B               	movlw	low STR_46
  2249  000B7E  6F82               	movwf	(?_printf+2)& (0+255),b
  2250  000B80  0EFF               	movlw	high STR_46
  2251  000B82  6F83               	movwf	(?_printf+3)& (0+255),b
  2252  000B84  ECBF  F01B         	call	_printf	;wreg free
  2253  000B88  0EC0               	movlw	192
  2254  000B8A  EC58  F01C         	call	_lcdInst
  2255                           
  2256                           ;main.c: 1088:                 printf("%s","(1 IS OLDEST)");
  2257  000B8E  0EE7               	movlw	low (STR_1+4)
  2258  000B90  0100               	movlb	0	; () banked
  2259  000B92  6F80               	movwf	printf@fmt& (0+255),b
  2260  000B94  0EFF               	movlw	high (STR_1+4)
  2261  000B96  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2262  000B98  0EFF               	movlw	low STR_48
  2263  000B9A  6F82               	movwf	(?_printf+2)& (0+255),b
  2264  000B9C  0EFE               	movlw	high STR_48
  2265  000B9E  6F83               	movwf	(?_printf+3)& (0+255),b
  2266  000BA0  ECBF  F01B         	call	_printf	;wreg free
  2267  000BA4  0E90               	movlw	144
  2268  000BA6  EC58  F01C         	call	_lcdInst
  2269                           
  2270                           ;main.c: 1090:                 printf("%s","(1) (2) (3) (4)");
  2271  000BAA  0EE7               	movlw	low (STR_1+4)
  2272  000BAC  0100               	movlb	0	; () banked
  2273  000BAE  6F80               	movwf	printf@fmt& (0+255),b
  2274  000BB0  0EFF               	movlw	high (STR_1+4)
  2275  000BB2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2276  000BB4  0E94               	movlw	low STR_50
  2277  000BB6  6F82               	movwf	(?_printf+2)& (0+255),b
  2278  000BB8  0EFE               	movlw	high STR_50
  2279  000BBA  6F83               	movwf	(?_printf+3)& (0+255),b
  2280  000BBC  ECBF  F01B         	call	_printf	;wreg free
  2281                           
  2282                           ;main.c: 1091:                 break;
  2283  000BC0  D038               	goto	l8754
  2284  000BC2                     l8736:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 1093:                 if (currentLogState == justRan){
  2288  000BC2  0101               	movlb	1	; () banked
  2289  000BC4  5140               	movf	main@currentLogState& (0+255),w,b
  2290  000BC6  A4D8               	btfss	status,2,c
  2291  000BC8  D005               	goto	l8742
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;main.c: 1094:                     replaceOldLog();
  2295  000BCA  EC9A  F019         	call	_replaceOldLog	;wreg free
  2296                           
  2297                           ;main.c: 1095:                     currentLogState = four;
  2298  000BCE  0E04               	movlw	4
  2299  000BD0  0101               	movlb	1	; () banked
  2300  000BD2  6F40               	movwf	main@currentLogState& (0+255),b
  2301  000BD4                     l8742:
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;main.c: 1097:                 doDisplayLog(currentLogState);
  2305  000BD4  C140  F08E         	movff	main@currentLogState,doDisplayLog@logNumber
  2306  000BD8  0100               	movlb	0	; () banked
  2307  000BDA  6B8F               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2308  000BDC  EC96  F006         	call	_doDisplayLog	;wreg free
  2309                           
  2310                           ;main.c: 1098:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2311  000BE0  0E01               	movlw	1
  2312  000BE2  EC58  F01C         	call	_lcdInst
  2313  000BE6  0E11               	movlw	17
  2314  000BE8  0100               	movlb	0	; () banked
  2315  000BEA  6FF4               	movwf	??_main& (0+255),b
  2316  000BEC  0E3A               	movlw	58
  2317  000BEE                     u10107:
  2318  000BEE  2EE8               	decfsz	wreg,f,c
  2319  000BF0  D7FE               	bra	u10107
  2320  000BF2  2FF4               	decfsz	??_main& (0+255),f,b
  2321  000BF4  D7FC               	bra	u10107
  2322  000BF6  F000               	nop	
  2323                           
  2324                           ;main.c: 1099:                 currentRobotState = standby;
  2325  000BF8  0E00               	movlw	0
  2326  000BFA                     L1:
  2327  000BFA  0101               	movlb	1	; () banked
  2328  000BFC  6F41               	movwf	main@currentRobotState& (0+255),b
  2329                           
  2330                           ;main.c: 1100:                 break;
  2331  000BFE  D019               	goto	l8754
  2332  000C00                     l8752:
  2333  000C00  0101               	movlb	1	; () banked
  2334  000C02  5141               	movf	main@currentRobotState& (0+255),w,b
  2335  000C04  0100               	movlb	0	; () banked
  2336  000C06  6FF4               	movwf	??_main& (0+255),b
  2337  000C08  6BF5               	clrf	(??_main+1)& (0+255),b
  2338                           
  2339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2340                           ; Switch size 1, requested type "simple"
  2341                           ; Number of cases is 1, Range of values is 0 to 0
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte            4     3 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346  000C0A  51F5               	movf	(??_main+1)& (0+255),w,b
  2347  000C0C  0A00               	xorlw	0	; case 0
  2348  000C0E  A4D8               	btfss	status,2,c
  2349  000C10  D010               	goto	l8754
  2350                           
  2351                           ; BSR set to: 0
  2352                           ; Switch size 1, requested type "simple"
  2353                           ; Number of cases is 5, Range of values is 0 to 4
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           16     9 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  000C12  51F4               	movf	??_main& (0+255),w,b
  2359  000C14  0A00               	xorlw	0	; case 0
  2360  000C16  B4D8               	btfsc	status,2,c
  2361  000C18  D6D3               	goto	l8664
  2362  000C1A  0A01               	xorlw	1	; case 1
  2363  000C1C  B4D8               	btfsc	status,2,c
  2364  000C1E  D726               	goto	l8684
  2365  000C20  0A03               	xorlw	3	; case 2
  2366  000C22  B4D8               	btfsc	status,2,c
  2367  000C24  D757               	goto	l8702
  2368  000C26  0A01               	xorlw	1	; case 3
  2369  000C28  B4D8               	btfsc	status,2,c
  2370  000C2A  D798               	goto	l8722
  2371  000C2C  0A07               	xorlw	7	; case 4
  2372  000C2E  B4D8               	btfsc	status,2,c
  2373  000C30  D7C8               	goto	l8736
  2374  000C32                     l8754:
  2375                           
  2376                           ;main.c: 1104:         if(keyPressed){
  2377  000C32  0101               	movlb	1	; () banked
  2378  000C34  5112               	movf	_keyPressed& (0+255),w,b	;volatile
  2379  000C36  B4D8               	btfsc	status,2,c
  2380  000C38  D068               	goto	l408
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;main.c: 1107:             keyPressed = 0;
  2384  000C3A  0E00               	movlw	0
  2385  000C3C  6F12               	movwf	_keyPressed& (0+255),b	;volatile
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;main.c: 1110:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2389  000C3E  3881               	swapf	3969,w,c	;volatile
  2390  000C40  0B0F               	andlw	15
  2391  000C42  0B0F               	andlw	15
  2392  000C44  6F3E               	movwf	main@keypress& (0+255),b
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 1111:             char keyValue = keys[keypress];
  2396  000C46  0E61               	movlw	low _keys
  2397  000C48  253E               	addwf	main@keypress& (0+255),w,b
  2398  000C4A  6EF6               	movwf	tblptrl,c
  2399  000C4C  6AF7               	clrf	tblptrh,c
  2400  000C4E  0EFE               	movlw	high _keys
  2401  000C50  22F7               	addwfc	tblptrh,f,c
  2402  000C52                     	if	0	;There are less than 3 active tblptr bytes
  2403  000C52                     	endif
  2404  000C52  0008               	tblrd		*
  2405  000C54  CFF5 F142          	movff	tablat,main@keyValue
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;main.c: 1112:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2409  000C58  0E01               	movlw	1
  2410  000C5A  EC58  F01C         	call	_lcdInst
  2411  000C5E  0E11               	movlw	17
  2412  000C60  0100               	movlb	0	; () banked
  2413  000C62  6FF4               	movwf	??_main& (0+255),b
  2414  000C64  0E3A               	movlw	58
  2415  000C66                     u10117:
  2416  000C66  2EE8               	decfsz	wreg,f,c
  2417  000C68  D7FE               	bra	u10117
  2418  000C6A  2FF4               	decfsz	??_main& (0+255),f,b
  2419  000C6C  D7FC               	bra	u10117
  2420  000C6E  F000               	nop	
  2421                           
  2422                           ;main.c: 1113:             switch (currentRobotState){
  2423  000C70  D035               	goto	l8802
  2424  000C72                     l8766:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;main.c: 1115:                     if (keyValue == '1'){
  2428  000C72  0E31               	movlw	49
  2429  000C74  0101               	movlb	1	; () banked
  2430  000C76  1942               	xorwf	main@keyValue& (0+255),w,b
  2431  000C78  A4D8               	btfss	status,2,c
  2432  000C7A  D002               	goto	l8770
  2433                           
  2434                           ; BSR set to: 1
  2435                           ;main.c: 1116:                         currentRobotState = operation;
  2436  000C7C  0E01               	movlw	1
  2437  000C7E  D012               	goto	L4
  2438  000C80                     l8770:
  2439                           
  2440                           ; BSR set to: 1
  2441  000C80  0E32               	movlw	50
  2442  000C82  1942               	xorwf	main@keyValue& (0+255),w,b
  2443  000C84  A4D8               	btfss	status,2,c
  2444  000C86  D041               	goto	l408
  2445                           
  2446                           ; BSR set to: 1
  2447                           ;main.c: 1118:                         currentRobotState = selectLog;
  2448  000C88  0E03               	movlw	3
  2449  000C8A  D00C               	goto	L4
  2450  000C8C                     l8774:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 1124:                     if (keyValue == '1'){
  2454  000C8C  0E31               	movlw	49
  2455  000C8E  0101               	movlb	1	; () banked
  2456  000C90  1942               	xorwf	main@keyValue& (0+255),w,b
  2457  000C92  A4D8               	btfss	status,2,c
  2458  000C94  D002               	goto	l8778
  2459  000C96                     u9970:
  2460                           
  2461                           ; BSR set to: 1
  2462                           ;main.c: 1125:                         currentRobotState = displayLog;
  2463  000C96  0E04               	movlw	4
  2464  000C98  D005               	goto	L4
  2465  000C9A                     l8778:
  2466                           
  2467                           ; BSR set to: 1
  2468  000C9A  0E32               	movlw	50
  2469  000C9C  1942               	xorwf	main@keyValue& (0+255),w,b
  2470  000C9E  A4D8               	btfss	status,2,c
  2471  000CA0  D034               	goto	l408
  2472                           
  2473                           ; BSR set to: 1
  2474                           ;main.c: 1127:                         currentRobotState = standby;
  2475  000CA2  0E00               	movlw	0
  2476  000CA4                     L4:
  2477  000CA4  6F41               	movwf	main@currentRobotState& (0+255),b
  2478  000CA6  D031               	goto	l408
  2479  000CA8                     l8782:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;main.c: 1131:                     if (keyValue == '1'){
  2483  000CA8  0E31               	movlw	49
  2484  000CAA  0101               	movlb	1	; () banked
  2485  000CAC  1942               	xorwf	main@keyValue& (0+255),w,b
  2486  000CAE  A4D8               	btfss	status,2,c
  2487  000CB0  D002               	goto	l8786
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;main.c: 1132:                         currentLogState = one;
  2491  000CB2  0E01               	movlw	1
  2492  000CB4  D011               	goto	L7
  2493  000CB6                     l8786:
  2494                           
  2495                           ; BSR set to: 1
  2496  000CB6  0E32               	movlw	50
  2497  000CB8  1942               	xorwf	main@keyValue& (0+255),w,b
  2498  000CBA  A4D8               	btfss	status,2,c
  2499  000CBC  D002               	goto	l8790
  2500                           
  2501                           ; BSR set to: 1
  2502                           ;main.c: 1134:                         currentLogState = two;
  2503  000CBE  0E02               	movlw	2
  2504  000CC0  D00B               	goto	L7
  2505  000CC2                     l8790:
  2506                           
  2507                           ; BSR set to: 1
  2508  000CC2  0E33               	movlw	51
  2509  000CC4  1942               	xorwf	main@keyValue& (0+255),w,b
  2510  000CC6  A4D8               	btfss	status,2,c
  2511  000CC8  D002               	goto	l8794
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;main.c: 1136:                         currentLogState = three;
  2515  000CCA  0E03               	movlw	3
  2516  000CCC  D005               	goto	L7
  2517  000CCE                     l8794:
  2518                           
  2519                           ; BSR set to: 1
  2520  000CCE  0E34               	movlw	52
  2521  000CD0  1942               	xorwf	main@keyValue& (0+255),w,b
  2522  000CD2  A4D8               	btfss	status,2,c
  2523  000CD4  D01A               	goto	l408
  2524                           
  2525                           ; BSR set to: 1
  2526                           ;main.c: 1138:                         currentLogState = '4';
  2527  000CD6  0E34               	movlw	52
  2528  000CD8                     L7:
  2529  000CD8  6F40               	movwf	main@currentLogState& (0+255),b
  2530                           
  2531                           ;main.c: 1139:                     } else {
  2532  000CDA  D7DD               	goto	u9970
  2533  000CDC                     l8802:
  2534  000CDC  0101               	movlb	1	; () banked
  2535  000CDE  5141               	movf	main@currentRobotState& (0+255),w,b
  2536  000CE0  0100               	movlb	0	; () banked
  2537  000CE2  6FF4               	movwf	??_main& (0+255),b
  2538  000CE4  6BF5               	clrf	(??_main+1)& (0+255),b
  2539                           
  2540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2541                           ; Switch size 1, requested type "simple"
  2542                           ; Number of cases is 1, Range of values is 0 to 0
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte            4     3 (average)
  2546                           ;	Chosen strategy is simple_byte
  2547  000CE6  51F5               	movf	(??_main+1)& (0+255),w,b
  2548  000CE8  0A00               	xorlw	0	; case 0
  2549  000CEA  A4D8               	btfss	status,2,c
  2550  000CEC  D00E               	goto	l408
  2551                           
  2552                           ; BSR set to: 0
  2553                           ; Switch size 1, requested type "simple"
  2554                           ; Number of cases is 5, Range of values is 0 to 4
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           16     9 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  000CEE  51F4               	movf	??_main& (0+255),w,b
  2560  000CF0  0A00               	xorlw	0	; case 0
  2561  000CF2  B4D8               	btfsc	status,2,c
  2562  000CF4  D7BE               	goto	l8766
  2563  000CF6  0A01               	xorlw	1	; case 1
  2564  000CF8  B4D8               	btfsc	status,2,c
  2565  000CFA  D007               	goto	l408
  2566  000CFC  0A03               	xorlw	3	; case 2
  2567  000CFE  B4D8               	btfsc	status,2,c
  2568  000D00  D7C5               	goto	l8774
  2569  000D02  0A01               	xorlw	1	; case 3
  2570  000D04  B4D8               	btfsc	status,2,c
  2571  000D06  D7D0               	goto	l8782
  2572  000D08  0A07               	xorlw	7	; case 4
  2573  000D0A                     l408:
  2574                           
  2575                           ;main.c: 1159:         tick++;
  2576                           
  2577                           ; BSR set to: 1
  2578  000D0A  0E01               	movlw	1
  2579  000D0C  0101               	movlb	1	; () banked
  2580  000D0E  273A               	addwf	main@tick& (0+255),f,b
  2581  000D10  0E00               	movlw	0
  2582  000D12  233B               	addwfc	(main@tick+1)& (0+255),f,b
  2583  000D14  233C               	addwfc	(main@tick+2)& (0+255),f,b
  2584  000D16  233D               	addwfc	(main@tick+3)& (0+255),f,b
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;main.c: 1160:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2588  000D18  0E04               	movlw	4
  2589  000D1A  0100               	movlb	0	; () banked
  2590  000D1C  6FF4               	movwf	??_main& (0+255),b
  2591  000D1E  0E3D               	movlw	61
  2592  000D20                     u10127:
  2593  000D20  2EE8               	decfsz	wreg,f,c
  2594  000D22  D7FE               	bra	u10127
  2595  000D24  2FF4               	decfsz	??_main& (0+255),f,b
  2596  000D26  D7FC               	bra	u10127
  2597  000D28  D000               	nop2	
  2598  000D2A  D600               	goto	l8646
  2599  000D2C                     __end_of_main:
  2600                           	opt callstack 0
  2601                           
  2602 ;; *************** function _robotInit *****************
  2603 ;; Defined at:
  2604 ;;		line 950 in file "main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    7
  2625 ;; This function calls:
  2626 ;;		_EncoderInit
  2627 ;;		_I2C_Master_Init
  2628 ;;		_initLCD
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;;		_mainEEPROM
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text1
  2636  003498                     __ptext1:
  2637                           	opt callstack 0
  2638  003498                     _robotInit:
  2639                           	opt callstack 23
  2640                           
  2641                           ;main.c: 952:     EncoderInit();
  2642                           
  2643                           ;incstack = 0
  2644  003498  EC29  F01C         	call	_EncoderInit	;wreg free
  2645                           
  2646                           ;main.c: 956:     LATD = 0x00;
  2647  00349C  0E00               	movlw	0
  2648  00349E  6E8C               	movwf	3980,c	;volatile
  2649                           
  2650                           ;main.c: 957:     TRISD = 0x00;
  2651  0034A0  0E00               	movlw	0
  2652  0034A2  6E95               	movwf	3989,c	;volatile
  2653                           
  2654                           ;main.c: 960:     LATB = 0x00;
  2655  0034A4  0E00               	movlw	0
  2656  0034A6  6E8A               	movwf	3978,c	;volatile
  2657                           
  2658                           ;main.c: 961:     TRISBbits.TRISB1 = 1;
  2659  0034A8  8293               	bsf	3987,1,c	;volatile
  2660                           
  2661                           ;main.c: 962:     TRISBbits.TRISB4 = 1;
  2662  0034AA  8893               	bsf	3987,4,c	;volatile
  2663                           
  2664                           ;main.c: 963:     TRISBbits.TRISB5 = 1;
  2665  0034AC  8A93               	bsf	3987,5,c	;volatile
  2666                           
  2667                           ;main.c: 964:     TRISBbits.TRISB6 = 1;
  2668  0034AE  8C93               	bsf	3987,6,c	;volatile
  2669                           
  2670                           ;main.c: 965:     TRISBbits.TRISB7 = 1;
  2671  0034B0  8E93               	bsf	3987,7,c	;volatile
  2672                           
  2673                           ;main.c: 968:     TRISAbits.TRISA4 = 0;
  2674  0034B2  9892               	bcf	3986,4,c	;volatile
  2675                           
  2676                           ;main.c: 969:     LATAbits.LATA4 = 0;
  2677  0034B4  9889               	bcf	3977,4,c	;volatile
  2678                           
  2679                           ;main.c: 972:     I2C_Master_Init(100000);
  2680  0034B6  0EA0               	movlw	160
  2681  0034B8  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2682  0034BA  0E86               	movlw	134
  2683  0034BC  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2684  0034BE  0E01               	movlw	1
  2685  0034C0  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2686  0034C2  0E00               	movlw	0
  2687  0034C4  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2688  0034C6  EC1A  F019         	call	_I2C_Master_Init	;wreg free
  2689                           
  2690                           ;main.c: 979:     ADCON1 = 0b00001111;
  2691  0034CA  0E0F               	movlw	15
  2692  0034CC  6EC1               	movwf	4033,c	;volatile
  2693                           
  2694                           ;main.c: 982:     INT1IE = 1;
  2695  0034CE  86F0               	bsf	4080,3,c	;volatile
  2696                           
  2697                           ;main.c: 985:     initLCD();
  2698  0034D0  ECB2  F018         	call	_initLCD	;wreg free
  2699                           
  2700                           ;main.c: 988:     (INTCONbits.GIE = 1);
  2701  0034D4  8EF2               	bsf	4082,7,c	;volatile
  2702  0034D6  0012               	return		;funcret
  2703  0034D8                     __end_of_robotInit:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _initLCD *****************
  2707 ;; Defined at:
  2708 ;;		line 69 in file "lcd.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;Total ram usage:        1 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    6
  2729 ;; This function calls:
  2730 ;;		_lcdInst
  2731 ;;		_send_byte
  2732 ;;		_send_nibble
  2733 ;; This function is called by:
  2734 ;;		_robotInit
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text2
  2739  003164                     __ptext2:
  2740                           	opt callstack 0
  2741  003164                     _initLCD:
  2742                           	opt callstack 23
  2743                           
  2744                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2745                           
  2746                           ;incstack = 0
  2747  003164  0E31               	movlw	49
  2748  003166  6E0A               	movwf	??_initLCD& (0+255),c
  2749  003168  0EB2               	movlw	178
  2750  00316A                     u10137:
  2751  00316A  2EE8               	decfsz	wreg,f,c
  2752  00316C  D7FE               	bra	u10137
  2753  00316E  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2754  003170  D7FC               	bra	u10137
  2755  003172  D000               	nop2	
  2756                           
  2757                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2758  003174  948C               	bcf	3980,2,c	;volatile
  2759                           
  2760                           ;lcd.c: 74:     send_nibble(0b0011);
  2761  003176  0E03               	movlw	3
  2762  003178  EC35  F01C         	call	_send_nibble
  2763                           
  2764                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2765  00317C  0E11               	movlw	17
  2766  00317E  6E0A               	movwf	??_initLCD& (0+255),c
  2767  003180  0E3A               	movlw	58
  2768  003182                     u10147:
  2769  003182  2EE8               	decfsz	wreg,f,c
  2770  003184  D7FE               	bra	u10147
  2771  003186  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2772  003188  D7FC               	bra	u10147
  2773  00318A  D000               	nop2	
  2774                           
  2775                           ;lcd.c: 76:     send_nibble(0b0011);
  2776  00318C  0E03               	movlw	3
  2777  00318E  EC35  F01C         	call	_send_nibble
  2778                           
  2779                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2780  003192  0E7D               	movlw	125
  2781  003194                     u10157:
  2782  003194  2EE8               	decfsz	wreg,f,c
  2783  003196  D7FE               	bra	u10157
  2784                           
  2785                           ;lcd.c: 78:     send_byte(0b00110010);
  2786  003198  0E32               	movlw	50
  2787  00319A  EC49  F01C         	call	_send_byte
  2788                           
  2789                           ;lcd.c: 80:     send_byte(0b00101000);
  2790  00319E  0E28               	movlw	40
  2791  0031A0  EC49  F01C         	call	_send_byte
  2792                           
  2793                           ;lcd.c: 81:     send_byte(0b00001000);
  2794  0031A4  0E08               	movlw	8
  2795  0031A6  EC49  F01C         	call	_send_byte
  2796                           
  2797                           ;lcd.c: 82:     send_byte(0b00000001);
  2798  0031AA  0E01               	movlw	1
  2799  0031AC  EC49  F01C         	call	_send_byte
  2800                           
  2801                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2802  0031B0  0E11               	movlw	17
  2803  0031B2  6E0A               	movwf	??_initLCD& (0+255),c
  2804  0031B4  0E3A               	movlw	58
  2805  0031B6                     u10167:
  2806  0031B6  2EE8               	decfsz	wreg,f,c
  2807  0031B8  D7FE               	bra	u10167
  2808  0031BA  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2809  0031BC  D7FC               	bra	u10167
  2810  0031BE  D000               	nop2	
  2811                           
  2812                           ;lcd.c: 84:     send_byte(0b00000110);
  2813  0031C0  0E06               	movlw	6
  2814  0031C2  EC49  F01C         	call	_send_byte
  2815                           
  2816                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2817  0031C6  0E0C               	movlw	12
  2818  0031C8  EC58  F01C         	call	_lcdInst
  2819  0031CC  0012               	return		;funcret
  2820  0031CE                     __end_of_initLCD:
  2821                           	opt callstack 0
  2822                           
  2823 ;; *************** function _I2C_Master_Init *****************
  2824 ;; Defined at:
  2825 ;;		line 32 in file "I2C.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:        8 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    3
  2846 ;; This function calls:
  2847 ;;		___lldiv
  2848 ;; This function is called by:
  2849 ;;		_robotInit
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text3
  2854  003234                     __ptext3:
  2855                           	opt callstack 0
  2856  003234                     _I2C_Master_Init:
  2857                           	opt callstack 26
  2858                           
  2859                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2860                           
  2861                           ;incstack = 0
  2862  003234  9AC6               	bcf	4038,5,c	;volatile
  2863                           
  2864                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2865  003236  8694               	bsf	3988,3,c	;volatile
  2866                           
  2867                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2868  003238  8894               	bsf	3988,4,c	;volatile
  2869                           
  2870                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2871  00323A  0E80               	movlw	128
  2872  00323C  6E06               	movwf	___lldiv@dividend,c
  2873  00323E  0E96               	movlw	150
  2874  003240  6E07               	movwf	___lldiv@dividend+1,c
  2875  003242  0E98               	movlw	152
  2876  003244  6E08               	movwf	___lldiv@dividend+2,c
  2877  003246  0E00               	movlw	0
  2878  003248  6E09               	movwf	___lldiv@dividend+3,c
  2879  00324A  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2880  00324E  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2881  003252  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2882  003256  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2883  00325A  0E02               	movlw	2
  2884  00325C                     u9525:
  2885  00325C  90D8               	bcf	status,0,c
  2886  00325E  3617               	rlcf	??_I2C_Master_Init,f,c
  2887  003260  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2888  003262  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2889  003264  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2890  003266  2EE8               	decfsz	wreg,f,c
  2891  003268  D7F9               	goto	u9525
  2892  00326A  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2893  00326E  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2894  003272  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2895  003276  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2896  00327A  ECC6  F017         	call	___lldiv	;wreg free
  2897  00327E  0406               	decf	?___lldiv,w,c
  2898  003280  6EC8               	movwf	4040,c	;volatile
  2899                           
  2900                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2901  003282  0E80               	movlw	128
  2902  003284  6EC7               	movwf	4039,c	;volatile
  2903                           
  2904                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2905  003286  0E28               	movlw	40
  2906  003288  6EC6               	movwf	4038,c	;volatile
  2907                           
  2908                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2909  00328A  0E00               	movlw	0
  2910  00328C  6EC5               	movwf	4037,c	;volatile
  2911  00328E  0012               	return		;funcret
  2912  003290                     __end_of_I2C_Master_Init:
  2913                           	opt callstack 0
  2914                           
  2915 ;; *************** function ___lldiv *****************
  2916 ;; Defined at:
  2917 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  dividend        4    5[COMRAM] unsigned long 
  2920 ;;  divisor         4    9[COMRAM] unsigned long 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  quotient        4   13[COMRAM] unsigned long 
  2923 ;;  counter         1   17[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  4    5[COMRAM] unsigned long 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:       13 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    2
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_I2C_Master_Init
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text4
  2948  002F8C                     __ptext4:
  2949                           	opt callstack 0
  2950  002F8C                     ___lldiv:
  2951                           	opt callstack 26
  2952                           
  2953                           ;incstack = 0
  2954  002F8C  0E00               	movlw	0
  2955  002F8E  6E0E               	movwf	___lldiv@quotient,c
  2956  002F90  0E00               	movlw	0
  2957  002F92  6E0F               	movwf	___lldiv@quotient+1,c
  2958  002F94  0E00               	movlw	0
  2959  002F96  6E10               	movwf	___lldiv@quotient+2,c
  2960  002F98  0E00               	movlw	0
  2961  002F9A  6E11               	movwf	___lldiv@quotient+3,c
  2962  002F9C  500A               	movf	___lldiv@divisor,w,c
  2963  002F9E  100B               	iorwf	___lldiv@divisor+1,w,c
  2964  002FA0  100C               	iorwf	___lldiv@divisor+2,w,c
  2965  002FA2  100D               	iorwf	___lldiv@divisor+3,w,c
  2966  002FA4  B4D8               	btfsc	status,2,c
  2967  002FA6  D02A               	goto	l728
  2968  002FA8  0E01               	movlw	1
  2969  002FAA  6E12               	movwf	___lldiv@counter,c
  2970  002FAC  D006               	goto	l7870
  2971  002FAE                     l7868:
  2972  002FAE  90D8               	bcf	status,0,c
  2973  002FB0  360A               	rlcf	___lldiv@divisor,f,c
  2974  002FB2  360B               	rlcf	___lldiv@divisor+1,f,c
  2975  002FB4  360C               	rlcf	___lldiv@divisor+2,f,c
  2976  002FB6  360D               	rlcf	___lldiv@divisor+3,f,c
  2977  002FB8  2A12               	incf	___lldiv@counter,f,c
  2978  002FBA                     l7870:
  2979  002FBA  AE0D               	btfss	___lldiv@divisor+3,7,c
  2980  002FBC  D7F8               	goto	l7868
  2981  002FBE                     u9200:
  2982  002FBE  90D8               	bcf	status,0,c
  2983  002FC0  360E               	rlcf	___lldiv@quotient,f,c
  2984  002FC2  360F               	rlcf	___lldiv@quotient+1,f,c
  2985  002FC4  3610               	rlcf	___lldiv@quotient+2,f,c
  2986  002FC6  3611               	rlcf	___lldiv@quotient+3,f,c
  2987  002FC8  500A               	movf	___lldiv@divisor,w,c
  2988  002FCA  5C06               	subwf	___lldiv@dividend,w,c
  2989  002FCC  500B               	movf	___lldiv@divisor+1,w,c
  2990  002FCE  5807               	subwfb	___lldiv@dividend+1,w,c
  2991  002FD0  500C               	movf	___lldiv@divisor+2,w,c
  2992  002FD2  5808               	subwfb	___lldiv@dividend+2,w,c
  2993  002FD4  500D               	movf	___lldiv@divisor+3,w,c
  2994  002FD6  5809               	subwfb	___lldiv@dividend+3,w,c
  2995  002FD8  A0D8               	btfss	status,0,c
  2996  002FDA  D009               	goto	l7880
  2997  002FDC  500A               	movf	___lldiv@divisor,w,c
  2998  002FDE  5E06               	subwf	___lldiv@dividend,f,c
  2999  002FE0  500B               	movf	___lldiv@divisor+1,w,c
  3000  002FE2  5A07               	subwfb	___lldiv@dividend+1,f,c
  3001  002FE4  500C               	movf	___lldiv@divisor+2,w,c
  3002  002FE6  5A08               	subwfb	___lldiv@dividend+2,f,c
  3003  002FE8  500D               	movf	___lldiv@divisor+3,w,c
  3004  002FEA  5A09               	subwfb	___lldiv@dividend+3,f,c
  3005  002FEC  800E               	bsf	___lldiv@quotient,0,c
  3006  002FEE                     l7880:
  3007  002FEE  90D8               	bcf	status,0,c
  3008  002FF0  320D               	rrcf	___lldiv@divisor+3,f,c
  3009  002FF2  320C               	rrcf	___lldiv@divisor+2,f,c
  3010  002FF4  320B               	rrcf	___lldiv@divisor+1,f,c
  3011  002FF6  320A               	rrcf	___lldiv@divisor,f,c
  3012  002FF8  2E12               	decfsz	___lldiv@counter,f,c
  3013  002FFA  D7E1               	goto	u9200
  3014  002FFC                     l728:
  3015  002FFC  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  3016  003000  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  3017  003004  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  3018  003008  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  3019  00300C  0012               	return		;funcret
  3020  00300E                     __end_of___lldiv:
  3021                           	opt callstack 0
  3022                           
  3023 ;; *************** function _EncoderInit *****************
  3024 ;; Defined at:
  3025 ;;		line 190 in file "main.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_robotInit
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text5
  3054  003852                     __ptext5:
  3055                           	opt callstack 0
  3056  003852                     _EncoderInit:
  3057                           	opt callstack 27
  3058                           
  3059                           ;main.c: 191:   motorBDirection = 1;
  3060                           
  3061                           ;incstack = 0
  3062  003852  0E01               	movlw	1
  3063  003854  6E79               	movwf	_motorBDirection,c	;volatile
  3064                           
  3065                           ;main.c: 192:   motorADirection = 1;
  3066  003856  0E01               	movlw	1
  3067  003858  0100               	movlb	0	; () banked
  3068  00385A  6FF6               	movwf	_motorADirection& (0+255),b	;volatile
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;main.c: 195:   TRISCbits.TRISC0 = 1;
  3072  00385C  8094               	bsf	3988,0,c	;volatile
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;main.c: 196:   TRISEbits.TRISE1 = 1;
  3076  00385E  8296               	bsf	3990,1,c	;volatile
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;main.c: 197:   TRISBbits.TRISB2 = 1;
  3080  003860  8493               	bsf	3987,2,c	;volatile
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 198:   TRISBbits.TRISB0 = 1;
  3084  003862  8093               	bsf	3987,0,c	;volatile
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;main.c: 201:   INT2IE = 1;
  3088  003864  88F0               	bsf	4080,4,c	;volatile
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;main.c: 203:   INT0IE = 1;
  3092  003866  88F2               	bsf	4082,4,c	;volatile
  3093                           
  3094                           ; BSR set to: 0
  3095  003868  0012               	return		;funcret
  3096  00386A                     __end_of_EncoderInit:
  3097                           	opt callstack 0
  3098                           
  3099 ;; *************** function _replaceOldLog *****************
  3100 ;; Defined at:
  3101 ;;		line 996 in file "main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  i               2    5[COMRAM] int 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    2
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text6
  3130  003334                     __ptext6:
  3131                           	opt callstack 0
  3132  003334                     _replaceOldLog:
  3133                           	opt callstack 28
  3134                           
  3135                           ;main.c: 997:     for (int i = 0; i< 48; i++){
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;incstack = 0
  3139  003334  0E00               	movlw	0
  3140  003336  6E07               	movwf	replaceOldLog@i+1,c
  3141  003338  0E00               	movlw	0
  3142  00333A  6E06               	movwf	replaceOldLog@i,c
  3143  00333C                     l8566:
  3144                           
  3145                           ;main.c: 998:         logs[4][i] = logs[0][i];
  3146  00333C  90D8               	bcf	status,0,c
  3147  00333E  3406               	rlcf	replaceOldLog@i,w,c
  3148  003340  6ED9               	movwf	fsr2l,c
  3149  003342  3407               	rlcf	replaceOldLog@i+1,w,c
  3150  003344  6EDA               	movwf	fsr2h,c
  3151  003346  0E4A               	movlw	low _logs
  3152  003348  26D9               	addwf	fsr2l,f,c
  3153  00334A  0E01               	movlw	high _logs
  3154  00334C  22DA               	addwfc	fsr2h,f,c
  3155  00334E  90D8               	bcf	status,0,c
  3156  003350  3406               	rlcf	replaceOldLog@i,w,c
  3157  003352  6EE1               	movwf	fsr1l,c
  3158  003354  3407               	rlcf	replaceOldLog@i+1,w,c
  3159  003356  6EE2               	movwf	fsr1h,c
  3160  003358  0ECA               	movlw	low (_logs+384)
  3161  00335A  26E1               	addwf	fsr1l,f,c
  3162  00335C  0E02               	movlw	high (_logs+384)
  3163  00335E  22E2               	addwfc	fsr1h,f,c
  3164  003360  CFDE FFE6          	movff	postinc2,postinc1
  3165  003364  CFDD FFE5          	movff	postdec2,postdec1
  3166                           
  3167                           ;main.c: 999:     }
  3168  003368  4A06               	infsnz	replaceOldLog@i,f,c
  3169  00336A  2A07               	incf	replaceOldLog@i+1,f,c
  3170  00336C  BE07               	btfsc	replaceOldLog@i+1,7,c
  3171  00336E  D7E6               	goto	l8566
  3172  003370  5007               	movf	replaceOldLog@i+1,w,c
  3173  003372  E105               	bnz	u9820
  3174  003374  0E30               	movlw	48
  3175  003376  5C06               	subwf	replaceOldLog@i,w,c
  3176  003378  B0D8               	btfsc	status,0,c
  3177  00337A  0012               	return	
  3178  00337C  D7DF               	goto	l8566
  3179  00337E                     u9820:
  3180  00337E  0012               	return		;funcret
  3181  003380                     __end_of_replaceOldLog:
  3182                           	opt callstack 0
  3183                           
  3184 ;; *************** function _doOperation *****************
  3185 ;; Defined at:
  3186 ;;		line 597 in file "main.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  i               2  111[BANK0 ] int 
  3191 ;;  PIDData         4   55[BANK0 ] int [2]
  3192 ;;  timeInOperat    2  109[BANK0 ] int 
  3193 ;;  tiresDeploye    2  105[BANK0 ] int 
  3194 ;;  tiresOnPole     2  103[BANK0 ] int 
  3195 ;;  tiresToDrop     2  101[BANK0 ] int 
  3196 ;;  milliseconds    2   99[BANK0 ] int 
  3197 ;;  distanceToPo    2   97[BANK0 ] int 
  3198 ;;  counted         2   95[BANK0 ] int 
  3199 ;;  motorBStartD    2   93[BANK0 ] int 
  3200 ;;  motorAStartD    2   91[BANK0 ] int 
  3201 ;;  timeStart       2   88[BANK0 ] int 
  3202 ;;  distanceFrom    2   86[BANK0 ] int 
  3203 ;;  totalTiresSu    2   84[BANK0 ] int 
  3204 ;;  poleNumber      2   82[BANK0 ] int 
  3205 ;;  badCountBot     2   80[BANK0 ] int 
  3206 ;;  badCount        2   78[BANK0 ] int 
  3207 ;;  tiresOnPoleA    2   75[BANK0 ] int 
  3208 ;;  rightRangeFi    2    0        int 
  3209 ;;  leftRangeFin    2    0        int 
  3210 ;;  currentAngle    2    0        int 
  3211 ;;  error           2    0        int 
  3212 ;;  errorScaleFa    2    0        int 
  3213 ;;  motorBSpeed     2    0        int 
  3214 ;;  motorASpeed     2    0        int 
  3215 ;;  goalSpeed       2    0        int 
  3216 ;;  fourMetreEqu    2    0        int 
  3217 ;;  minimumSafeD    2    0        int 
  3218 ;;  topLaserStat    1  115[BANK0 ] _Bool 
  3219 ;;  bottomLaserS    1  114[BANK0 ] _Bool 
  3220 ;;  currentOpera    1  113[BANK0 ] enum E3353
  3221 ;;  bottomLaserS    1  108[BANK0 ] _Bool 
  3222 ;;  topLaserStat    1  107[BANK0 ] _Bool 
  3223 ;;  isDoneDrop      1   90[BANK0 ] _Bool 
  3224 ;;  send            1   77[BANK0 ] _Bool 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:         0      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:       64 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:   13
  3241 ;; This function calls:
  3242 ;;		_I2C_Master_Start
  3243 ;;		_I2C_Master_Stop
  3244 ;;		_I2C_Master_Write
  3245 ;;		_TIMER_INIT
  3246 ;;		___awmod
  3247 ;;		_errorCorrectedMove
  3248 ;;		_init_motor_PWM
  3249 ;;		_lcdInst
  3250 ;;		_opErrorCorrectionDegrees
  3251 ;;		_printf
  3252 ;;		_requestIsTireDropDone
  3253 ;;		_sendArduinoTireDropRequest
  3254 ;;		_sendArduinoTireOperationStartMessage
  3255 ;;		_setMotorSpeeds
  3256 ;;		_tirePositioning
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text7
  3263  000496                     __ptext7:
  3264                           	opt callstack 0
  3265  000496                     _doOperation:
  3266                           	opt callstack 17
  3267                           
  3268                           ;main.c: 603:     I2C_Master_Start();
  3269                           
  3270                           ;incstack = 0
  3271  000496  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  3272                           
  3273                           ;main.c: 604:     I2C_Master_Write(0b00010000);
  3274  00049A  0E00               	movlw	0
  3275  00049C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3276  00049E  0E10               	movlw	16
  3277  0004A0  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3278  0004A2  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  3279                           
  3280                           ;main.c: 605:     I2C_Master_Stop();
  3281  0004A6  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  3282                           
  3283                           ;main.c: 607:     sendArduinoTireOperationStartMessage();
  3284  0004AA  ECF8  F01B         	call	_sendArduinoTireOperationStartMessage	;wreg free
  3285                           
  3286                           ;main.c: 611:     TIMER_INIT();
  3287  0004AE  EC1A  F01C         	call	_TIMER_INIT	;wreg free
  3288                           
  3289                           ;main.c: 612:     millisecondsMeasured = 0;
  3290  0004B2  0E00               	movlw	0
  3291  0004B4  6E76               	movwf	_millisecondsMeasured+1,c	;volatile
  3292  0004B6  0E00               	movlw	0
  3293  0004B8  6E75               	movwf	_millisecondsMeasured,c	;volatile
  3294                           
  3295                           ;main.c: 621:  enum operationStates currentOperationState = moveForward;
  3296  0004BA  0E00               	movlw	0
  3297  0004BC  0100               	movlb	0	; () banked
  3298  0004BE  6FF1               	movwf	doOperation@currentOperationState& (0+255),b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;main.c: 624:  int tiresToDrop = 0;
  3302                           
  3303                           ; BSR set to: 0
  3304                           
  3305                           ; BSR set to: 0
  3306  0004C0  0E00               	movlw	0
  3307  0004C2  6FE6               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3308  0004C4  0E00               	movlw	0
  3309  0004C6  6FE5               	movwf	doOperation@tiresToDrop& (0+255),b
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;main.c: 625:     int minimumSafeDistanceToPole;;main.c: 626:     int fourMetreEquivalen
      +                          t;;main.c: 627:     int timeInOperation = 15000;
  3313  0004C8  0E3A               	movlw	58
  3314  0004CA  6FEE               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3315  0004CC  0E98               	movlw	152
  3316  0004CE  6FED               	movwf	doOperation@timeInOperation& (0+255),b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 628:     int motorAStartDistance = motorADistance;
  3320  0004D0  C077  F0DB         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3321  0004D4  C078  F0DC         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;main.c: 629:     int motorBStartDistance = motorBDistance;
  3325  0004D8  C10C  F0DD         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3326  0004DC  C10D  F0DE         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;main.c: 631:     int PIDData[2] = {0,0};
  3330  0004E0  0E00               	movlw	0
  3331  0004E2  6FB7               	movwf	doOperation@PIDData& (0+255),b
  3332  0004E4  0E00               	movlw	0
  3333  0004E6  6FB8               	movwf	(doOperation@PIDData+1)& (0+255),b
  3334  0004E8  0E00               	movlw	0
  3335  0004EA  6FB9               	movwf	(doOperation@PIDData+2)& (0+255),b
  3336  0004EC  0E00               	movlw	0
  3337  0004EE  6FBA               	movwf	(doOperation@PIDData+3)& (0+255),b
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 632:     _Bool topLaserState;;main.c: 633:     _Bool topLaserStatePrev;;main.c:
      +                           634:     _Bool bottomLaserState;;main.c: 635:     _Bool bottomLaserStatePrev;;main.c: 6
      +                          36:     _Bool isDoneDrop;;main.c: 637:     init_motor_PWM();
  3341  0004F0  ECAB  F01B         	call	_init_motor_PWM	;wreg free
  3342                           
  3343                           ;main.c: 638:     int counted = 0;
  3344  0004F4  0E00               	movlw	0
  3345  0004F6  0100               	movlb	0	; () banked
  3346  0004F8  6FE0               	movwf	(doOperation@counted+1)& (0+255),b
  3347  0004FA  0E00               	movlw	0
  3348  0004FC  6FDF               	movwf	doOperation@counted& (0+255),b
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;main.c: 639:     int badCount = 0;
  3352  0004FE  0E00               	movlw	0
  3353  000500  6FCF               	movwf	(doOperation@badCount+1)& (0+255),b
  3354  000502  0E00               	movlw	0
  3355  000504  6FCE               	movwf	doOperation@badCount& (0+255),b
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;main.c: 640:     int badCountBot = 0;
  3359  000506  0E00               	movlw	0
  3360  000508  6FD1               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3361  00050A  0E00               	movlw	0
  3362  00050C  6FD0               	movwf	doOperation@badCountBot& (0+255),b
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;main.c: 643:     int poleNumber = 0;
  3366  00050E  0E00               	movlw	0
  3367  000510  6FD3               	movwf	(doOperation@poleNumber+1)& (0+255),b
  3368  000512  0E00               	movlw	0
  3369  000514  6FD2               	movwf	doOperation@poleNumber& (0+255),b
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 644:     int tiresDeployedOnPole = 0;
  3373  000516  0E00               	movlw	0
  3374  000518  6FEA               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3375  00051A  0E00               	movlw	0
  3376  00051C  6FE9               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;main.c: 645:     int tiresOnPoleAfterOp = 0;
  3380  00051E  0E00               	movlw	0
  3381  000520  6FCC               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  3382  000522  0E00               	movlw	0
  3383  000524  6FCB               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;main.c: 646:     int tiresOnPole = 0;
  3387  000526  0E00               	movlw	0
  3388  000528  6FE8               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3389  00052A  0E00               	movlw	0
  3390  00052C  6FE7               	movwf	doOperation@tiresOnPole& (0+255),b
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 648:     int totalTiresSupplied = 0;
  3394  00052E  0E00               	movlw	0
  3395  000530  6FD5               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  3396  000532  0E00               	movlw	0
  3397  000534  6FD4               	movwf	doOperation@totalTiresSupplied& (0+255),b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 650:     int distanceToPole = 0;
  3401  000536  0E00               	movlw	0
  3402  000538  6FE2               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  3403  00053A  0E00               	movlw	0
  3404  00053C  6FE1               	movwf	doOperation@distanceToPole& (0+255),b
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;main.c: 651:     int distanceFromLastPole = 0;
  3408  00053E  0E00               	movlw	0
  3409  000540  6FD7               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3410  000542  0E00               	movlw	0
  3411  000544  6FD6               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;main.c: 658:     TRISAbits.TRISA0 = 0;
  3415  000546  9092               	bcf	3986,0,c	;volatile
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;main.c: 659:     TRISAbits.TRISA1 = 0;
  3419  000548  9292               	bcf	3986,1,c	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;main.c: 660:     TRISAbits.TRISA2 = 0;
  3423  00054A  9492               	bcf	3986,2,c	;volatile
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 661:     TRISAbits.TRISA3 = 0;
  3427  00054C  9692               	bcf	3986,3,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;main.c: 664:     TRISAbits.TRISA4 = 0;
  3431  00054E  9892               	bcf	3986,4,c	;volatile
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;main.c: 665:     LATAbits.LATA4 = 1;
  3435  000550  8889               	bsf	3977,4,c	;volatile
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;main.c: 666:     int timeStart = millisecondsMeasured;
  3439  000552  C075  F0D8         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3440  000556  C076  F0D9         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3441  00055A                     l8376:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;main.c: 667:     while(millisecondsMeasured < timeStart + 100){
  3445  00055A  0E64               	movlw	100
  3446  00055C  25D8               	addwf	doOperation@timeStart& (0+255),w,b
  3447  00055E  6FB4               	movwf	??_doOperation& (0+255),b
  3448  000560  0E00               	movlw	0
  3449  000562  21D9               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3450  000564  6FB5               	movwf	(??_doOperation+1)& (0+255),b
  3451  000566  51B4               	movf	??_doOperation& (0+255),w,b
  3452  000568  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3453  00056A  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3454  00056C  0A80               	xorlw	128
  3455  00056E  6FB6               	movwf	(??_doOperation+2)& (0+255),b
  3456  000570  51B5               	movf	(??_doOperation+1)& (0+255),w,b
  3457  000572  0A80               	xorlw	128
  3458  000574  59B6               	subwfb	(??_doOperation+2)& (0+255),w,b
  3459  000576  A0D8               	btfss	status,0,c
  3460  000578  D7F0               	goto	l8376
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;main.c: 671:     topLaserState = PORTBbits.RB4;
  3464  00057A  A881               	btfss	3969,4,c	;volatile
  3465  00057C  D002               	goto	u9680
  3466  00057E  0E01               	movlw	1
  3467  000580  D001               	goto	u9686
  3468  000582                     u9680:
  3469  000582  0E00               	movlw	0
  3470  000584                     u9686:
  3471  000584  6FF3               	movwf	doOperation@topLaserState& (0+255),b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;main.c: 672:     topLaserStatePrev = topLaserState;
  3475  000586  C0F3  F0EB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3476                           
  3477                           ;main.c: 673:     bottomLaserState = PORTBbits.RB5;
  3478  00058A  AA81               	btfss	3969,5,c	;volatile
  3479  00058C  D002               	goto	u9690
  3480  00058E  0E01               	movlw	1
  3481  000590  D001               	goto	u9696
  3482  000592                     u9690:
  3483  000592  0E00               	movlw	0
  3484  000594                     u9696:
  3485  000594  6FF2               	movwf	doOperation@bottomLaserState& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;main.c: 674:     bottomLaserStatePrev = bottomLaserState;
  3489  000596  C0F2  F0EC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3490                           
  3491                           ;main.c: 682:     _Bool send = 1;
  3492  00059A  0E01               	movlw	1
  3493  00059C  6FCD               	movwf	doOperation@send& (0+255),b
  3494                           
  3495                           ;main.c: 683:     int millisecondsMeasuredOld = 0;
  3496  00059E  0E00               	movlw	0
  3497  0005A0  6FE4               	movwf	(doOperation@millisecondsMeasuredOld+1)& (0+255),b
  3498  0005A2  0E00               	movlw	0
  3499  0005A4  6FE3               	movwf	doOperation@millisecondsMeasuredOld& (0+255),b
  3500  0005A6                     l8384:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;main.c: 688:         counted ++;
  3504  0005A6  4BDF               	infsnz	doOperation@counted& (0+255),f,b
  3505  0005A8  2BE0               	incf	(doOperation@counted+1)& (0+255),f,b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;main.c: 689:         topLaserStatePrev = topLaserState;
  3509  0005AA  C0F3  F0EB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;main.c: 690:         topLaserState = PORTBbits.RB4;
  3513  0005AE  A881               	btfss	3969,4,c	;volatile
  3514  0005B0  D002               	goto	u9700
  3515  0005B2  0E01               	movlw	1
  3516  0005B4  D001               	goto	u9706
  3517  0005B6                     u9700:
  3518  0005B6  0E00               	movlw	0
  3519  0005B8                     u9706:
  3520  0005B8  6FF3               	movwf	doOperation@topLaserState& (0+255),b
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;main.c: 691:         bottomLaserStatePrev = bottomLaserState;
  3524  0005BA  C0F2  F0EC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;main.c: 692:         bottomLaserState = PORTBbits.RB5;
  3528  0005BE  AA81               	btfss	3969,5,c	;volatile
  3529  0005C0  D002               	goto	u9710
  3530  0005C2  0E01               	movlw	1
  3531  0005C4  D001               	goto	u9716
  3532  0005C6                     u9710:
  3533  0005C6  0E00               	movlw	0
  3534  0005C8                     u9716:
  3535  0005C8  6FF2               	movwf	doOperation@bottomLaserState& (0+255),b
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;main.c: 693:    if (millisecondsMeasured > millisecondsMeasuredOld){
  3539  0005CA  5075               	movf	_millisecondsMeasured,w,c	;volatile
  3540  0005CC  5DE3               	subwf	doOperation@millisecondsMeasuredOld& (0+255),w,b
  3541  0005CE  51E4               	movf	(doOperation@millisecondsMeasuredOld+1)& (0+255),w,b
  3542  0005D0  0A80               	xorlw	128
  3543  0005D2  6FB4               	movwf	??_doOperation& (0+255),b
  3544  0005D4  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3545  0005D6  0A80               	xorlw	128
  3546  0005D8  59B4               	subwfb	??_doOperation& (0+255),w,b
  3547  0005DA  B0D8               	btfsc	status,0,c
  3548  0005DC  D13A               	goto	l8494
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;main.c: 694:             millisecondsMeasuredOld++;
  3552  0005DE  4BE3               	infsnz	doOperation@millisecondsMeasuredOld& (0+255),f,b
  3553  0005E0  2BE4               	incf	(doOperation@millisecondsMeasuredOld+1)& (0+255),f,b
  3554  0005E2  D137               	goto	l8494
  3555  0005E4                     l8398:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;main.c: 700:                 if (counted%100 == 0){
  3559  0005E4  C0DF  F006         	movff	doOperation@counted,___awmod@dividend
  3560  0005E8  C0E0  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3561  0005EC  0E00               	movlw	0
  3562  0005EE  6E09               	movwf	___awmod@divisor+1,c
  3563  0005F0  0E64               	movlw	100
  3564  0005F2  6E08               	movwf	___awmod@divisor,c
  3565  0005F4  EC44  F018         	call	___awmod	;wreg free
  3566  0005F8  5006               	movf	?___awmod,w,c
  3567  0005FA  1007               	iorwf	?___awmod+1,w,c
  3568  0005FC  A4D8               	btfss	status,2,c
  3569  0005FE  D040               	goto	l8418
  3570                           
  3571                           ;main.c: 701:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3572  000600  0E01               	movlw	1
  3573  000602  EC58  F01C         	call	_lcdInst
  3574  000606  0E11               	movlw	17
  3575  000608  0100               	movlb	0	; () banked
  3576  00060A  6FB4               	movwf	??_doOperation& (0+255),b
  3577  00060C  0E3A               	movlw	58
  3578  00060E                     u10177:
  3579  00060E  2EE8               	decfsz	wreg,f,c
  3580  000610  D7FE               	bra	u10177
  3581  000612  2FB4               	decfsz	??_doOperation& (0+255),f,b
  3582  000614  D7FC               	bra	u10177
  3583  000616  F000               	nop	
  3584                           
  3585                           ;main.c: 702:                 printf("%d", millisecondsMeasured);
  3586  000618  0EF3               	movlw	low (STR_22+3)
  3587  00061A  0100               	movlb	0	; () banked
  3588  00061C  6F80               	movwf	printf@fmt& (0+255),b
  3589  00061E  0EFF               	movlw	high (STR_22+3)
  3590  000620  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3591  000622  C075  F082         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3592  000626  C076  F083         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3593  00062A  ECBF  F01B         	call	_printf	;wreg free
  3594  00062E  0E90               	movlw	144
  3595  000630  EC58  F01C         	call	_lcdInst
  3596                           
  3597                           ;main.c: 704:                 printf("%d", topLaserState);
  3598  000634  0EF3               	movlw	low (STR_22+3)
  3599  000636  0100               	movlb	0	; () banked
  3600  000638  6F80               	movwf	printf@fmt& (0+255),b
  3601  00063A  0EFF               	movlw	high (STR_22+3)
  3602  00063C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3603  00063E  C0F3  F082         	movff	doOperation@topLaserState,?_printf+2
  3604  000642  6B83               	clrf	(?_printf+3)& (0+255),b
  3605  000644  ECBF  F01B         	call	_printf	;wreg free
  3606  000648  0EC0               	movlw	192
  3607  00064A  EC58  F01C         	call	_lcdInst
  3608                           
  3609                           ;main.c: 706:                 printf("B: %d", motorBDistance);
  3610  00064E  0EF6               	movlw	low STR_21
  3611  000650  0100               	movlb	0	; () banked
  3612  000652  6F80               	movwf	printf@fmt& (0+255),b
  3613  000654  0EFF               	movlw	high STR_21
  3614  000656  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3615  000658  C10C  F082         	movff	_motorBDistance,?_printf+2	;volatile
  3616  00065C  C10D  F083         	movff	_motorBDistance+1,?_printf+3	;volatile
  3617  000660  ECBF  F01B         	call	_printf	;wreg free
  3618  000664  0ED0               	movlw	208
  3619  000666  EC58  F01C         	call	_lcdInst
  3620                           
  3621                           ;main.c: 708:                 printf("A: %d", motorADistance);
  3622  00066A  0EF0               	movlw	low STR_22
  3623  00066C  0100               	movlb	0	; () banked
  3624  00066E  6F80               	movwf	printf@fmt& (0+255),b
  3625  000670  0EFF               	movlw	high STR_22
  3626  000672  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3627  000674  C077  F082         	movff	_motorADistance,?_printf+2	;volatile
  3628  000678  C078  F083         	movff	_motorADistance+1,?_printf+3	;volatile
  3629  00067C  ECBF  F01B         	call	_printf	;wreg free
  3630  000680                     l8418:
  3631                           
  3632                           ;main.c: 727:                 errorCorrectedMove(30, 1, motorAStartDistance, motorBStart
      +                          Distance, 0.1);
  3633  000680  0E00               	movlw	0
  3634  000682  0100               	movlb	0	; () banked
  3635  000684  6F89               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  3636  000686  0E1E               	movlw	30
  3637  000688  6F88               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  3638  00068A  0E00               	movlw	0
  3639  00068C  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3640  00068E  0E00               	movlw	0
  3641  000690  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3642  000692  0E80               	movlw	128
  3643  000694  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3644  000696  0E3F               	movlw	63
  3645  000698  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3646  00069A  C0DB  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3647  00069E  C0DC  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3648  0006A2  C0DD  F090         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3649  0006A6  C0DE  F091         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3650  0006AA  0ECD               	movlw	205
  3651  0006AC  6F92               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3652  0006AE  0ECC               	movlw	204
  3653  0006B0  6F93               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3654  0006B2  0ECC               	movlw	204
  3655  0006B4  6F94               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3656  0006B6  0E3D               	movlw	61
  3657  0006B8  6F95               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3658  0006BA  EC43  F00E         	call	_errorCorrectedMove	;wreg free
  3659                           
  3660                           ;main.c: 729:                 break;
  3661  0006BE  D0E6               	goto	l8496
  3662  0006C0                     l8420:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;main.c: 732:                 distanceFromLastPole = motorADistance - distanceToPole;
  3666  0006C0  51E1               	movf	doOperation@distanceToPole& (0+255),w,b
  3667  0006C2  5C77               	subwf	_motorADistance,w,c	;volatile
  3668  0006C4  6FD6               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3669  0006C6  51E2               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  3670  0006C8  5878               	subwfb	_motorADistance+1,w,c	;volatile
  3671  0006CA  6FD7               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;main.c: 733:                 distanceToPole = motorADistance;
  3675  0006CC  C077  F0E1         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  3676  0006D0  C078  F0E2         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 735:                 poleNumber++;
  3680  0006D4  4BD2               	infsnz	doOperation@poleNumber& (0+255),f,b
  3681  0006D6  2BD3               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;main.c: 738:                 tiresOnPole = tirePositioning(timeInOperation);
  3685  0006D8  C0ED  F088         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  3686  0006DC  C0EE  F089         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  3687  0006E0  EC9D  F00B         	call	_tirePositioning	;wreg free
  3688  0006E4  C088  F0E7         	movff	?_tirePositioning,doOperation@tiresOnPole
  3689  0006E8  C089  F0E8         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  3690                           
  3691                           ;main.c: 739:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3692  0006EC  0E01               	movlw	1
  3693  0006EE  EC58  F01C         	call	_lcdInst
  3694  0006F2  0E11               	movlw	17
  3695  0006F4  0100               	movlb	0	; () banked
  3696  0006F6  6FB4               	movwf	??_doOperation& (0+255),b
  3697  0006F8  0E3A               	movlw	58
  3698  0006FA                     u10187:
  3699  0006FA  2EE8               	decfsz	wreg,f,c
  3700  0006FC  D7FE               	bra	u10187
  3701  0006FE  2FB4               	decfsz	??_doOperation& (0+255),f,b
  3702  000700  D7FC               	bra	u10187
  3703  000702  F000               	nop	
  3704                           
  3705                           ;main.c: 740:                 printf("TIRE DROP");
  3706  000704  0EA1               	movlw	low STR_23
  3707  000706  0100               	movlb	0	; () banked
  3708  000708  6F80               	movwf	printf@fmt& (0+255),b
  3709  00070A  0EFF               	movlw	high STR_23
  3710  00070C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3711  00070E  ECBF  F01B         	call	_printf	;wreg free
  3712  000712  0EC0               	movlw	192
  3713  000714  EC58  F01C         	call	_lcdInst
  3714                           
  3715                           ;main.c: 742:                 printf("%d on pole", tiresOnPole);
  3716  000718  0E76               	movlw	low STR_24
  3717  00071A  0100               	movlb	0	; () banked
  3718  00071C  6F80               	movwf	printf@fmt& (0+255),b
  3719  00071E  0EFF               	movlw	high STR_24
  3720  000720  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3721  000722  C0E7  F082         	movff	doOperation@tiresOnPole,?_printf+2
  3722  000726  C0E8  F083         	movff	doOperation@tiresOnPole+1,?_printf+3
  3723  00072A  ECBF  F01B         	call	_printf	;wreg free
  3724                           
  3725                           ;main.c: 744:                 setMotorSpeeds(0, 1, 1, 0);
  3726  00072E  0E00               	movlw	0
  3727  000730  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3728  000732  0E00               	movlw	0
  3729  000734  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3730  000736  0E01               	movlw	1
  3731  000738  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3732  00073A  0E01               	movlw	1
  3733  00073C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3734  00073E  0E00               	movlw	0
  3735  000740  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3736  000742  0E00               	movlw	0
  3737  000744  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3738  000746  EC39  F017         	call	_setMotorSpeeds	;wreg free
  3739                           
  3740                           ;main.c: 753:     sendArduinoTireDropRequest();
  3741  00074A  EC09  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  3742                           
  3743                           ;main.c: 756:                 tiresToDrop = 1;
  3744  00074E  0E00               	movlw	0
  3745  000750  0100               	movlb	0	; () banked
  3746  000752  6FE6               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3747  000754  0E01               	movlw	1
  3748  000756  6FE5               	movwf	doOperation@tiresToDrop& (0+255),b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;main.c: 757:                 currentOperationState = tireDrop;
  3752  000758  0E02               	movlw	2
  3753  00075A  D04D               	goto	L9
  3754  00075C                     l8444:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 764:     isDoneDrop = requestIsTireDropDone();
  3758  00075C  EC80  F01B         	call	_requestIsTireDropDone	;wreg free
  3759  000760  0100               	movlb	0	; () banked
  3760  000762  6FDA               	movwf	doOperation@isDoneDrop& (0+255),b
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;main.c: 766:     if (isDoneDrop){
  3764  000764  51DA               	movf	doOperation@isDoneDrop& (0+255),w,b
  3765  000766  B4D8               	btfsc	status,2,c
  3766  000768  D091               	goto	l8496
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;main.c: 767:      tiresToDrop -- ;
  3770  00076A  07E5               	decf	doOperation@tiresToDrop& (0+255),f,b
  3771  00076C  A0D8               	btfss	status,0,c
  3772  00076E  07E6               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3773                           
  3774                           ;main.c: 768:                     tiresDeployedOnPole++;
  3775  000770  4BE9               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  3776  000772  2BEA               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;main.c: 769:      if (tiresToDrop == 0){
  3780  000774  51E5               	movf	doOperation@tiresToDrop& (0+255),w,b
  3781  000776  11E6               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3782  000778  A4D8               	btfss	status,2,c
  3783  00077A  D013               	goto	l8460
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;main.c: 770:       currentOperationState = leavePole;
  3787  00077C  0E06               	movlw	6
  3788  00077E  6FF1               	movwf	doOperation@currentOperationState& (0+255),b
  3789                           
  3790                           ;main.c: 772:                         tiresOnPole = 0;
  3791  000780  0E00               	movlw	0
  3792  000782  6FE8               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3793  000784  0E00               	movlw	0
  3794  000786  6FE7               	movwf	doOperation@tiresOnPole& (0+255),b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;main.c: 773:                         totalTiresSupplied += tiresDeployedOnPole;
  3798  000788  51E9               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  3799  00078A  27D4               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  3800  00078C  51EA               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  3801  00078E  23D5               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;main.c: 774:                         tiresDeployedOnPole = 0;
  3805  000790  0E00               	movlw	0
  3806  000792  6FEA               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3807  000794  0E00               	movlw	0
  3808  000796  6FE9               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;main.c: 775:                         tiresDeployedOnPole = 0;
  3812  000798  0E00               	movlw	0
  3813  00079A  6FEA               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3814  00079C  0E00               	movlw	0
  3815  00079E  6FE9               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3816                           
  3817                           ;main.c: 776:      } else {
  3818  0007A0  D075               	goto	l8496
  3819  0007A2                     l8460:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;main.c: 778:       sendArduinoTireDropRequest();
  3823  0007A2  EC09  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  3824  0007A6  D072               	goto	l8496
  3825  0007A8                     l8462:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;main.c: 787:                 currentOperationState = moveForward;
  3829  0007A8  0E00               	movlw	0
  3830  0007AA  D025               	goto	L9
  3831  0007AC                     l8464:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;main.c: 791:                 opErrorCorrectionDegrees(30, 1, 1, 400, timeInOperation);
  3835  0007AC  0E00               	movlw	0
  3836  0007AE  6FA1               	movwf	(opErrorCorrectionDegrees@goalSpeed+1)& (0+255),b
  3837  0007B0  0E1E               	movlw	30
  3838  0007B2  6FA0               	movwf	opErrorCorrectionDegrees@goalSpeed& (0+255),b
  3839  0007B4  0E00               	movlw	0
  3840  0007B6  6FA3               	movwf	(opErrorCorrectionDegrees@turnRatio+1)& (0+255),b
  3841  0007B8  0E01               	movlw	1
  3842  0007BA  6FA2               	movwf	opErrorCorrectionDegrees@turnRatio& (0+255),b
  3843  0007BC  0E00               	movlw	0
  3844  0007BE  6FA4               	movwf	opErrorCorrectionDegrees@correctionConstant& (0+255),b
  3845  0007C0  0E00               	movlw	0
  3846  0007C2  6FA5               	movwf	(opErrorCorrectionDegrees@correctionConstant+1)& (0+255),b
  3847  0007C4  0E80               	movlw	128
  3848  0007C6  6FA6               	movwf	(opErrorCorrectionDegrees@correctionConstant+2)& (0+255),b
  3849  0007C8  0E3F               	movlw	63
  3850  0007CA  6FA7               	movwf	(opErrorCorrectionDegrees@correctionConstant+3)& (0+255),b
  3851  0007CC  0E01               	movlw	1
  3852  0007CE  6FA9               	movwf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),b
  3853  0007D0  0E90               	movlw	144
  3854  0007D2  6FA8               	movwf	opErrorCorrectionDegrees@distanceDegrees& (0+255),b
  3855  0007D4  C0ED  F0AA         	movff	doOperation@timeInOperation,opErrorCorrectionDegrees@maxOperationTime
  3856  0007D8  C0EE  F0AB         	movff	doOperation@timeInOperation+1,opErrorCorrectionDegrees@maxOperationTime+1
  3857  0007DC  EC92  F016         	call	_opErrorCorrectionDegrees	;wreg free
  3858                           
  3859                           ;main.c: 793:                 motorAStartDistance = 0;
  3860  0007E0  0E00               	movlw	0
  3861  0007E2  0100               	movlb	0	; () banked
  3862  0007E4  6FDC               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  3863  0007E6  0E00               	movlw	0
  3864  0007E8  6FDB               	movwf	doOperation@motorAStartDistance& (0+255),b
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;main.c: 794:                 motorBStartDistance = 0;
  3868  0007EA  0E00               	movlw	0
  3869  0007EC  6FDE               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  3870  0007EE  0E00               	movlw	0
  3871  0007F0  6FDD               	movwf	doOperation@motorBStartDistance& (0+255),b
  3872  0007F2  D7DA               	goto	l8462
  3873  0007F4                     l8472:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;main.c: 801:     currentOperationState = complete;
  3877  0007F4  0E05               	movlw	5
  3878  0007F6                     L9:
  3879  0007F6  6FF1               	movwf	doOperation@currentOperationState& (0+255),b
  3880                           
  3881                           ;main.c: 802:     break;
  3882  0007F8  D049               	goto	l8496
  3883  0007FA                     l8474:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;main.c: 805:                 for (int i = 0; i < 48; i++){
  3887  0007FA  0E00               	movlw	0
  3888  0007FC  6FF0               	movwf	(doOperation@i+1)& (0+255),b
  3889  0007FE  0E00               	movlw	0
  3890  000800  6FEF               	movwf	doOperation@i& (0+255),b
  3891  000802                     l8476:
  3892                           
  3893                           ; BSR set to: 0
  3894  000802  BFF0               	btfsc	(doOperation@i+1)& (0+255),7,b
  3895  000804  D006               	goto	l8480
  3896  000806  51F0               	movf	(doOperation@i+1)& (0+255),w,b
  3897  000808  E114               	bnz	l8486
  3898  00080A  0E30               	movlw	48
  3899  00080C  5DEF               	subwf	doOperation@i& (0+255),w,b
  3900  00080E  B0D8               	btfsc	status,0,c
  3901  000810  D010               	goto	l8486
  3902  000812                     l8480:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;main.c: 806:                     logs[0][i] = 3;
  3906  000812  90D8               	bcf	status,0,c
  3907  000814  35EF               	rlcf	doOperation@i& (0+255),w,b
  3908  000816  6ED9               	movwf	fsr2l,c
  3909  000818  35F0               	rlcf	(doOperation@i+1)& (0+255),w,b
  3910  00081A  6EDA               	movwf	fsr2h,c
  3911  00081C  0E4A               	movlw	low _logs
  3912  00081E  26D9               	addwf	fsr2l,f,c
  3913  000820  0E01               	movlw	high _logs
  3914  000822  22DA               	addwfc	fsr2h,f,c
  3915  000824  0E03               	movlw	3
  3916  000826  6EDE               	movwf	postinc2,c
  3917  000828  0E00               	movlw	0
  3918  00082A  6EDD               	movwf	postdec2,c
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;main.c: 807:                 }
  3922  00082C  4BEF               	infsnz	doOperation@i& (0+255),f,b
  3923  00082E  2BF0               	incf	(doOperation@i+1)& (0+255),f,b
  3924  000830  D7E8               	goto	l8476
  3925  000832                     l8486:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;main.c: 808:     setMotorSpeeds(0, 1, 1, 0);
  3929  000832  0E00               	movlw	0
  3930  000834  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3931  000836  0E00               	movlw	0
  3932  000838  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3933  00083A  0E01               	movlw	1
  3934  00083C  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3935  00083E  0E01               	movlw	1
  3936  000840  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3937  000842  0E00               	movlw	0
  3938  000844  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3939  000846  0E00               	movlw	0
  3940  000848  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3941  00084A  EC39  F017         	call	_setMotorSpeeds	;wreg free
  3942                           
  3943                           ;main.c: 809:                 LATAbits.LATA4 = 0;
  3944  00084E  9889               	bcf	3977,4,c	;volatile
  3945  000850  0012               	return	
  3946  000852                     l8494:
  3947                           
  3948                           ; BSR set to: 0
  3949  000852  51F1               	movf	doOperation@currentOperationState& (0+255),w,b
  3950  000854  6FB4               	movwf	??_doOperation& (0+255),b
  3951  000856  6BB5               	clrf	(??_doOperation+1)& (0+255),b
  3952                           
  3953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3954                           ; Switch size 1, requested type "simple"
  3955                           ; Number of cases is 1, Range of values is 0 to 0
  3956                           ; switch strategies available:
  3957                           ; Name         Instructions Cycles
  3958                           ; simple_byte            4     3 (average)
  3959                           ;	Chosen strategy is simple_byte
  3960  000858  51B5               	movf	(??_doOperation+1)& (0+255),w,b
  3961  00085A  0A00               	xorlw	0	; case 0
  3962  00085C  A4D8               	btfss	status,2,c
  3963  00085E  D016               	goto	l8496
  3964                           
  3965                           ; BSR set to: 0
  3966                           ; Switch size 1, requested type "simple"
  3967                           ; Number of cases is 7, Range of values is 0 to 6
  3968                           ; switch strategies available:
  3969                           ; Name         Instructions Cycles
  3970                           ; simple_byte           22    12 (average)
  3971                           ;	Chosen strategy is simple_byte
  3972  000860  51B4               	movf	??_doOperation& (0+255),w,b
  3973  000862  0A00               	xorlw	0	; case 0
  3974  000864  B4D8               	btfsc	status,2,c
  3975  000866  D6BE               	goto	l8398
  3976  000868  0A01               	xorlw	1	; case 1
  3977  00086A  B4D8               	btfsc	status,2,c
  3978  00086C  D729               	goto	l8420
  3979  00086E  0A03               	xorlw	3	; case 2
  3980  000870  B4D8               	btfsc	status,2,c
  3981  000872  D774               	goto	l8444
  3982  000874  0A01               	xorlw	1	; case 3
  3983  000876  B4D8               	btfsc	status,2,c
  3984  000878  D797               	goto	l8462
  3985  00087A  0A07               	xorlw	7	; case 4
  3986  00087C  B4D8               	btfsc	status,2,c
  3987  00087E  D7BA               	goto	l8472
  3988  000880  0A01               	xorlw	1	; case 5
  3989  000882  B4D8               	btfsc	status,2,c
  3990  000884  D7BA               	goto	l8474
  3991  000886  0A03               	xorlw	3	; case 6
  3992  000888  B4D8               	btfsc	status,2,c
  3993  00088A  D790               	goto	l8464
  3994  00088C                     l8496:
  3995                           
  3996                           ;main.c: 827:   if (millisecondsMeasured >= timeInOperation){
  3997  00088C  0100               	movlb	0	; () banked
  3998  00088E  51ED               	movf	doOperation@timeInOperation& (0+255),w,b
  3999  000890  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4000  000892  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4001  000894  0A80               	xorlw	128
  4002  000896  6FB4               	movwf	??_doOperation& (0+255),b
  4003  000898  51EE               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  4004  00089A  0A80               	xorlw	128
  4005  00089C  59B4               	subwfb	??_doOperation& (0+255),w,b
  4006  00089E  A0D8               	btfss	status,0,c
  4007  0008A0  D01A               	goto	l8516
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;main.c: 828:    currentOperationState = complete;
  4011  0008A2  0E05               	movlw	5
  4012  0008A4  6FF1               	movwf	doOperation@currentOperationState& (0+255),b
  4013  0008A6  D017               	goto	l8516
  4014  0008A8                     l8500:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;main.c: 838:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  4018  0008A8  51F3               	movf	doOperation@topLaserState& (0+255),w,b
  4019  0008AA  19EB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4020  0008AC  A4D8               	btfss	status,2,c
  4021  0008AE  D004               	goto	u9790
  4022                           
  4023                           ; BSR set to: 0
  4024  0008B0  51F2               	movf	doOperation@bottomLaserState& (0+255),w,b
  4025  0008B2  19EC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4026  0008B4  B4D8               	btfsc	status,2,c
  4027  0008B6  D677               	goto	l8384
  4028  0008B8                     u9790:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;main.c: 839:                     if (topLaserStatePrev != topLaserState){
  4032  0008B8  51F3               	movf	doOperation@topLaserState& (0+255),w,b
  4033  0008BA  19EB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4034  0008BC  B4D8               	btfsc	status,2,c
  4035  0008BE  D002               	goto	l8508
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 840:                         badCount++;
  4039  0008C0  4BCE               	infsnz	doOperation@badCount& (0+255),f,b
  4040  0008C2  2BCF               	incf	(doOperation@badCount+1)& (0+255),f,b
  4041  0008C4                     l8508:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;main.c: 842:                     if (bottomLaserStatePrev != bottomLaserState){
  4045  0008C4  51F2               	movf	doOperation@bottomLaserState& (0+255),w,b
  4046  0008C6  19EC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4047  0008C8  B4D8               	btfsc	status,2,c
  4048  0008CA  D002               	goto	l8512
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;main.c: 843:                         badCountBot++;
  4052  0008CC  4BD0               	infsnz	doOperation@badCountBot& (0+255),f,b
  4053  0008CE  2BD1               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  4054  0008D0                     l8512:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;main.c: 845:                     currentOperationState = poleFinding;
  4058  0008D0  0E01               	movlw	1
  4059  0008D2  6FF1               	movwf	doOperation@currentOperationState& (0+255),b
  4060  0008D4  D668               	goto	l8384
  4061  0008D6                     l8516:
  4062                           
  4063                           ; BSR set to: 0
  4064  0008D6  51F1               	movf	doOperation@currentOperationState& (0+255),w,b
  4065  0008D8  6FB4               	movwf	??_doOperation& (0+255),b
  4066  0008DA  6BB5               	clrf	(??_doOperation+1)& (0+255),b
  4067                           
  4068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4069                           ; Switch size 1, requested type "simple"
  4070                           ; Number of cases is 1, Range of values is 0 to 0
  4071                           ; switch strategies available:
  4072                           ; Name         Instructions Cycles
  4073                           ; simple_byte            4     3 (average)
  4074                           ;	Chosen strategy is simple_byte
  4075  0008DC  51B5               	movf	(??_doOperation+1)& (0+255),w,b
  4076  0008DE  0A00               	xorlw	0	; case 0
  4077  0008E0  A4D8               	btfss	status,2,c
  4078  0008E2  D661               	goto	l8384
  4079                           
  4080                           ; BSR set to: 0
  4081                           ; Switch size 1, requested type "simple"
  4082                           ; Number of cases is 7, Range of values is 0 to 6
  4083                           ; switch strategies available:
  4084                           ; Name         Instructions Cycles
  4085                           ; simple_byte           22    12 (average)
  4086                           ;	Chosen strategy is simple_byte
  4087  0008E4  51B4               	movf	??_doOperation& (0+255),w,b
  4088  0008E6  0A00               	xorlw	0	; case 0
  4089  0008E8  B4D8               	btfsc	status,2,c
  4090  0008EA  D7DE               	goto	l8500
  4091  0008EC  0A01               	xorlw	1	; case 1
  4092  0008EE  B4D8               	btfsc	status,2,c
  4093  0008F0  D65A               	goto	l8384
  4094  0008F2  0A03               	xorlw	3	; case 2
  4095  0008F4  B4D8               	btfsc	status,2,c
  4096  0008F6  D657               	goto	l8384
  4097  0008F8  0A01               	xorlw	1	; case 3
  4098  0008FA  B4D8               	btfsc	status,2,c
  4099  0008FC  D654               	goto	l8384
  4100  0008FE  0A07               	xorlw	7	; case 4
  4101  000900  B4D8               	btfsc	status,2,c
  4102  000902  D651               	goto	l8384
  4103  000904  0A01               	xorlw	1	; case 5
  4104  000906  B4D8               	btfsc	status,2,c
  4105  000908  D64E               	goto	l8384
  4106  00090A  0A03               	xorlw	3	; case 6
  4107  00090C  D64C               	goto	l8384
  4108  00090E                     __end_of_doOperation:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _tirePositioning *****************
  4112 ;; Defined at:
  4113 ;;		line 360 in file "main.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  maxOperation    2    8[BANK0 ] int 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  startDistanc    2   14[BANK0 ] int 
  4118 ;;  bottomBreakb    2   26[BANK0 ] int 
  4119 ;;  topBreakbeam    2   24[BANK0 ] int 
  4120 ;;  distanceReco    2   22[BANK0 ] int 
  4121 ;;  distanceReco    2   20[BANK0 ] int 
  4122 ;;  bottomPrevio    2   18[BANK0 ] int 
  4123 ;;  topPreviousS    2   16[BANK0 ] int 
  4124 ;;  startDistanc    2   12[BANK0 ] int 
  4125 ;;  startDistanc    2   10[BANK0 ] int 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2    8[BANK0 ] int 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         3      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:       23 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    5
  4142 ;; This function calls:
  4143 ;;		___awdiv
  4144 ;;		_abs
  4145 ;;		_opDelay
  4146 ;;		_setMotorSpeeds
  4147 ;; This function is called by:
  4148 ;;		_doOperation
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text8
  4153  00173A                     __ptext8:
  4154                           	opt callstack 0
  4155  00173A                     _tirePositioning:
  4156                           	opt callstack 24
  4157                           
  4158                           ;main.c: 361:     int topBreakbeam;;main.c: 362:     int bottomBreakbeam;;main.c: 363:  
      +                             int distanceRecordedTop;;main.c: 364:     int startDistanceTop;;main.c: 365:     int 
      +                          distanceRecordedBottom;;main.c: 366:     int startDistanceBottom;;main.c: 367:     int t
      +                          opPreviousState = 1;
  4159                           
  4160                           ;incstack = 0
  4161  00173A  0E00               	movlw	0
  4162  00173C  0100               	movlb	0	; () banked
  4163  00173E  6F91               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  4164  001740  0E01               	movlw	1
  4165  001742  6F90               	movwf	tirePositioning@topPreviousState& (0+255),b
  4166                           
  4167                           ;main.c: 368:     int bottomPreviousState = 1;
  4168  001744  0E00               	movlw	0
  4169  001746  6F93               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  4170  001748  0E01               	movlw	1
  4171  00174A  6F92               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  4172                           
  4173                           ;main.c: 371:     while(millisecondsMeasured < maxOperationTime){
  4174  00174C  D05E               	goto	l8026
  4175  00174E                     l7998:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;main.c: 372:         topBreakbeam = PORTBbits.RB4;
  4179  00174E  A881               	btfss	3969,4,c	;volatile
  4180  001750  D003               	goto	u9280
  4181  001752  6A72               	clrf	??_tirePositioning& (0+255),c
  4182  001754  2A72               	incf	??_tirePositioning& (0+255),f,c
  4183  001756  D001               	goto	u9288
  4184  001758                     u9280:
  4185  001758  6A72               	clrf	??_tirePositioning& (0+255),c
  4186  00175A                     u9288:
  4187  00175A  5072               	movf	??_tirePositioning,w,c
  4188  00175C  0100               	movlb	0	; () banked
  4189  00175E  6F98               	movwf	tirePositioning@topBreakbeam& (0+255),b
  4190  001760  6B99               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  4191                           
  4192                           ;main.c: 373:         bottomBreakbeam = PORTBbits.RB5;
  4193  001762  AA81               	btfss	3969,5,c	;volatile
  4194  001764  D003               	goto	u9290
  4195  001766  6A72               	clrf	??_tirePositioning& (0+255),c
  4196  001768  2A72               	incf	??_tirePositioning& (0+255),f,c
  4197  00176A  D001               	goto	u9298
  4198  00176C                     u9290:
  4199  00176C  6A72               	clrf	??_tirePositioning& (0+255),c
  4200  00176E                     u9298:
  4201  00176E  5072               	movf	??_tirePositioning,w,c
  4202  001770  0100               	movlb	0	; () banked
  4203  001772  6F9A               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  4204  001774  6B9B               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 374:         if (topBreakbeam == 0 && topPreviousState == 1){
  4208  001776  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4209  001778  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4210  00177A  A4D8               	btfss	status,2,c
  4211  00177C  D008               	goto	l8006
  4212                           
  4213                           ; BSR set to: 0
  4214  00177E  0590               	decf	tirePositioning@topPreviousState& (0+255),w,b
  4215  001780  1191               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  4216  001782  A4D8               	btfss	status,2,c
  4217  001784  D004               	goto	l8006
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 375:             startDistanceTop = motorADistance;
  4221  001786  C077  F08A         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  4222  00178A  C078  F08B         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  4223  00178E                     l8006:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;main.c: 377:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  4227  00178E  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4228  001790  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4229  001792  A4D8               	btfss	status,2,c
  4230  001794  D008               	goto	l8012
  4231                           
  4232                           ; BSR set to: 0
  4233  001796  0592               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  4234  001798  1193               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  4235  00179A  A4D8               	btfss	status,2,c
  4236  00179C  D004               	goto	l8012
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 378:             startDistanceBottom = motorADistance;
  4240  00179E  C077  F08C         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4241  0017A2  C078  F08D         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4242  0017A6                     l8012:
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;main.c: 380:         if(!topBreakbeam){
  4246  0017A6  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4247  0017A8  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4248  0017AA  A4D8               	btfss	status,2,c
  4249  0017AC  D00C               	goto	l8016
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;main.c: 381:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  4253  0017AE  518A               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  4254  0017B0  5C77               	subwf	_motorADistance,w,c	;volatile
  4255  0017B2  6E18               	movwf	abs@a,c
  4256  0017B4  518B               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  4257  0017B6  5878               	subwfb	_motorADistance+1,w,c	;volatile
  4258  0017B8  6E19               	movwf	abs@a+1,c
  4259  0017BA  EC1F  F01B         	call	_abs	;wreg free
  4260  0017BE  C018  F094         	movff	?_abs,tirePositioning@distanceRecordedTop
  4261  0017C2  C019  F095         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  4262  0017C6                     l8016:
  4263                           
  4264                           ;main.c: 383:         if(!bottomBreakbeam){
  4265  0017C6  0100               	movlb	0	; () banked
  4266  0017C8  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4267  0017CA  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4268  0017CC  A4D8               	btfss	status,2,c
  4269  0017CE  D00C               	goto	l8020
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;main.c: 384:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  4273  0017D0  518C               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  4274  0017D2  5C77               	subwf	_motorADistance,w,c	;volatile
  4275  0017D4  6E18               	movwf	abs@a,c
  4276  0017D6  518D               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  4277  0017D8  5878               	subwfb	_motorADistance+1,w,c	;volatile
  4278  0017DA  6E19               	movwf	abs@a+1,c
  4279  0017DC  EC1F  F01B         	call	_abs	;wreg free
  4280  0017E0  C018  F096         	movff	?_abs,tirePositioning@distanceRecordedBottom
  4281  0017E4  C019  F097         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  4282  0017E8                     l8020:
  4283                           
  4284                           ;main.c: 386:         if(topBreakbeam && bottomBreakbeam){
  4285  0017E8  0100               	movlb	0	; () banked
  4286  0017EA  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4287  0017EC  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4288  0017EE  B4D8               	btfsc	status,2,c
  4289  0017F0  D004               	goto	l265
  4290                           
  4291                           ; BSR set to: 0
  4292  0017F2  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4293  0017F4  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4294  0017F6  A4D8               	btfss	status,2,c
  4295  0017F8  D012               	goto	u9380
  4296  0017FA                     l265:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;main.c: 389:         topPreviousState = topBreakbeam;
  4300  0017FA  C098  F090         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4301  0017FE  C099  F091         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4302                           
  4303                           ;main.c: 390:         bottomPreviousState = bottomBreakbeam;
  4304  001802  C09A  F092         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4305  001806  C09B  F093         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4306  00180A                     l8026:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 371:     while(millisecondsMeasured < maxOperationTime){
  4310  00180A  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4311  00180C  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4312  00180E  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4313  001810  0A80               	xorlw	128
  4314  001812  6E72               	movwf	??_tirePositioning& (0+255),c
  4315  001814  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4316  001816  0A80               	xorlw	128
  4317  001818  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4318  00181A  A0D8               	btfss	status,0,c
  4319  00181C  D798               	goto	l7998
  4320  00181E                     u9380:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;main.c: 393:     if (distanceRecordedTop < 170){
  4324  00181E  BF95               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4325  001820  D006               	goto	u9390
  4326  001822  5195               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4327  001824  E147               	bnz	l8042
  4328  001826  0EAA               	movlw	170
  4329  001828  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4330  00182A  B0D8               	btfsc	status,0,c
  4331  00182C  D043               	goto	l8042
  4332  00182E                     u9390:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;main.c: 394:         setMotorSpeeds(0, 1, 1, 0);
  4336  00182E  0E00               	movlw	0
  4337  001830  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4338  001832  0E00               	movlw	0
  4339  001834  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4340  001836  0E01               	movlw	1
  4341  001838  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4342  00183A  0E01               	movlw	1
  4343  00183C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4344  00183E  0E00               	movlw	0
  4345  001840  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4346  001842  0E00               	movlw	0
  4347  001844  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4348  001846  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4349                           
  4350                           ;main.c: 395:         opDelay(100, maxOperationTime);
  4351  00184A  0E00               	movlw	0
  4352  00184C  6E07               	movwf	opDelay@millis+1,c
  4353  00184E  0E64               	movlw	100
  4354  001850  6E06               	movwf	opDelay@millis,c
  4355  001852  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4356  001856  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4357  00185A  EC8C  F01A         	call	_opDelay	;wreg free
  4358                           
  4359                           ;main.c: 396:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4360  00185E  D00E               	goto	l8036
  4361  001860                     l8034:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;main.c: 397:             setMotorSpeeds(30, 0, 0, 30);
  4365  001860  0E00               	movlw	0
  4366  001862  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4367  001864  0E1E               	movlw	30
  4368  001866  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4369  001868  0E00               	movlw	0
  4370  00186A  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4371  00186C  0E00               	movlw	0
  4372  00186E  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4373  001870  0E00               	movlw	0
  4374  001872  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4375  001874  0E1E               	movlw	30
  4376  001876  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4377  001878  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4378  00187C                     l8036:
  4379                           
  4380                           ;main.c: 396:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4381  00187C  0100               	movlb	0	; () banked
  4382  00187E  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4383  001880  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4384  001882  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4385  001884  0A80               	xorlw	128
  4386  001886  6E72               	movwf	??_tirePositioning& (0+255),c
  4387  001888  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4388  00188A  0A80               	xorlw	128
  4389  00188C  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4390  00188E  B0D8               	btfsc	status,0,c
  4391  001890  D002               	goto	u9410
  4392                           
  4393                           ; BSR set to: 0
  4394  001892  B881               	btfsc	3969,4,c	;volatile
  4395  001894  D7E5               	goto	l8034
  4396  001896                     u9410:
  4397                           
  4398                           ;main.c: 399:         setMotorSpeeds(0, 1, 1, 0);
  4399  001896  0E00               	movlw	0
  4400  001898  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4401  00189A  0E00               	movlw	0
  4402  00189C  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4403  00189E  0E01               	movlw	1
  4404  0018A0  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4405  0018A2  0E01               	movlw	1
  4406  0018A4  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4407  0018A6  0E00               	movlw	0
  4408  0018A8  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4409  0018AA  0E00               	movlw	0
  4410  0018AC  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4411  0018AE  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4412                           
  4413                           ;main.c: 400:     } else {
  4414  0018B2  D073               	goto	l8060
  4415  0018B4                     l8042:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;main.c: 401:         setMotorSpeeds(0, 1, 1, 0);
  4419  0018B4  0E00               	movlw	0
  4420  0018B6  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4421  0018B8  0E00               	movlw	0
  4422  0018BA  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4423  0018BC  0E01               	movlw	1
  4424  0018BE  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4425  0018C0  0E01               	movlw	1
  4426  0018C2  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4427  0018C4  0E00               	movlw	0
  4428  0018C6  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4429  0018C8  0E00               	movlw	0
  4430  0018CA  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4431  0018CC  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4432                           
  4433                           ;main.c: 402:         opDelay(100, maxOperationTime);
  4434  0018D0  0E00               	movlw	0
  4435  0018D2  6E07               	movwf	opDelay@millis+1,c
  4436  0018D4  0E64               	movlw	100
  4437  0018D6  6E06               	movwf	opDelay@millis,c
  4438  0018D8  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4439  0018DC  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4440  0018E0  EC8C  F01A         	call	_opDelay	;wreg free
  4441                           
  4442                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4443  0018E4  D00E               	goto	l8048
  4444  0018E6                     l8046:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;main.c: 404:             setMotorSpeeds(30, 0, 0, 30);
  4448  0018E6  0E00               	movlw	0
  4449  0018E8  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4450  0018EA  0E1E               	movlw	30
  4451  0018EC  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4452  0018EE  0E00               	movlw	0
  4453  0018F0  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4454  0018F2  0E00               	movlw	0
  4455  0018F4  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4456  0018F6  0E00               	movlw	0
  4457  0018F8  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4458  0018FA  0E1E               	movlw	30
  4459  0018FC  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4460  0018FE  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4461  001902                     l8048:
  4462                           
  4463                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4464  001902  0100               	movlb	0	; () banked
  4465  001904  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4466  001906  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4467  001908  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4468  00190A  0A80               	xorlw	128
  4469  00190C  6E72               	movwf	??_tirePositioning& (0+255),c
  4470  00190E  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4471  001910  0A80               	xorlw	128
  4472  001912  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4473  001914  B0D8               	btfsc	status,0,c
  4474  001916  D002               	goto	u9430
  4475                           
  4476                           ; BSR set to: 0
  4477  001918  B881               	btfsc	3969,4,c	;volatile
  4478  00191A  D7E5               	goto	l8046
  4479  00191C                     u9430:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;main.c: 406:         int startDistance = motorADistance;
  4483  00191C  C077  F08E         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  4484  001920  C078  F08F         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  4485                           
  4486                           ;main.c: 407:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4487  001924  D00E               	goto	l8054
  4488  001926                     l8052:
  4489                           
  4490                           ;main.c: 408:             setMotorSpeeds(30, 0, 0, 30);
  4491  001926  0E00               	movlw	0
  4492  001928  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4493  00192A  0E1E               	movlw	30
  4494  00192C  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4495  00192E  0E00               	movlw	0
  4496  001930  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4497  001932  0E00               	movlw	0
  4498  001934  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4499  001936  0E00               	movlw	0
  4500  001938  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4501  00193A  0E1E               	movlw	30
  4502  00193C  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4503  00193E  EC39  F017         	call	_setMotorSpeeds	;wreg free
  4504  001942                     l8054:
  4505                           
  4506                           ;main.c: 407:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4507  001942  0100               	movlb	0	; () banked
  4508  001944  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4509  001946  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4510  001948  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4511  00194A  0A80               	xorlw	128
  4512  00194C  6E72               	movwf	??_tirePositioning& (0+255),c
  4513  00194E  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4514  001950  0A80               	xorlw	128
  4515  001952  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4516  001954  B0D8               	btfsc	status,0,c
  4517  001956  D79F               	goto	u9410
  4518                           
  4519                           ; BSR set to: 0
  4520  001958  5077               	movf	_motorADistance,w,c	;volatile
  4521  00195A  5D8E               	subwf	tirePositioning@startDistance& (0+255),w,b
  4522  00195C  6E18               	movwf	abs@a,c
  4523  00195E  5078               	movf	_motorADistance+1,w,c	;volatile
  4524  001960  598F               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  4525  001962  6E19               	movwf	abs@a+1,c
  4526  001964  EC1F  F01B         	call	_abs	;wreg free
  4527  001968  C018  F072         	movff	?_abs,??_tirePositioning
  4528  00196C  C019  F073         	movff	?_abs+1,??_tirePositioning+1
  4529  001970  C096  F006         	movff	tirePositioning@distanceRecordedBottom,___awdiv@dividend
  4530  001974  C097  F007         	movff	tirePositioning@distanceRecordedBottom+1,___awdiv@dividend+1
  4531  001978  0E00               	movlw	0
  4532  00197A  6E09               	movwf	___awdiv@divisor+1,c
  4533  00197C  0E02               	movlw	2
  4534  00197E  6E08               	movwf	___awdiv@divisor,c
  4535  001980  EC84  F017         	call	___awdiv	;wreg free
  4536  001984  5006               	movf	?___awdiv,w,c
  4537  001986  5C72               	subwf	??_tirePositioning,w,c
  4538  001988  5073               	movf	??_tirePositioning+1,w,c
  4539  00198A  0A80               	xorlw	128
  4540  00198C  6E74               	movwf	(??_tirePositioning+2)& (0+255),c
  4541  00198E  5007               	movf	?___awdiv+1,w,c
  4542  001990  0A80               	xorlw	128
  4543  001992  5874               	subwfb	(??_tirePositioning+2)& (0+255),w,c
  4544  001994  B0D8               	btfsc	status,0,c
  4545  001996  D77F               	goto	u9410
  4546  001998  D7C6               	goto	l8052
  4547  00199A                     l8060:
  4548                           
  4549                           ;main.c: 414:     if (distanceRecordedTop < 170 && distanceRecordedBottom < 170){
  4550  00199A  0100               	movlb	0	; () banked
  4551  00199C  BF95               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4552  00199E  D006               	goto	u9460
  4553  0019A0  5195               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4554  0019A2  E111               	bnz	l8070
  4555  0019A4  0EAA               	movlw	170
  4556  0019A6  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4557  0019A8  B0D8               	btfsc	status,0,c
  4558  0019AA  D00D               	goto	l8070
  4559  0019AC                     u9460:
  4560                           
  4561                           ; BSR set to: 0
  4562  0019AC  BF97               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  4563  0019AE  D006               	goto	u9470
  4564  0019B0  5197               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4565  0019B2  E109               	bnz	l8070
  4566  0019B4  0EAA               	movlw	170
  4567  0019B6  5D96               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4568  0019B8  B0D8               	btfsc	status,0,c
  4569  0019BA  D005               	goto	l8070
  4570  0019BC                     u9470:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;main.c: 415:         return 0;
  4574  0019BC  0E00               	movlw	0
  4575  0019BE  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4576  0019C0  0E00               	movlw	0
  4577  0019C2  6F88               	movwf	?_tirePositioning& (0+255),b
  4578  0019C4  0012               	return	
  4579  0019C6                     l8070:
  4580                           
  4581                           ; BSR set to: 0
  4582  0019C6  5196               	movf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4583  0019C8  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4584  0019CA  6E18               	movwf	abs@a,c
  4585  0019CC  5197               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4586  0019CE  5995               	subwfb	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4587  0019D0  6E19               	movwf	abs@a+1,c
  4588  0019D2  EC1F  F01B         	call	_abs	;wreg free
  4589  0019D6  BE19               	btfsc	?_abs+1,7,c
  4590  0019D8  D00C               	goto	l8078
  4591  0019DA  5019               	movf	?_abs+1,w,c
  4592  0019DC  E104               	bnz	u9480
  4593  0019DE  0EB5               	movlw	181
  4594  0019E0  5C18               	subwf	?_abs,w,c
  4595  0019E2  A0D8               	btfss	status,0,c
  4596  0019E4  D006               	goto	l8078
  4597  0019E6                     u9480:
  4598                           
  4599                           ;main.c: 417:         return 1;
  4600  0019E6  0E00               	movlw	0
  4601  0019E8  0100               	movlb	0	; () banked
  4602  0019EA  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4603  0019EC  0E01               	movlw	1
  4604  0019EE  6F88               	movwf	?_tirePositioning& (0+255),b
  4605  0019F0  0012               	return	
  4606  0019F2                     l8078:
  4607                           
  4608                           ;main.c: 419:         return 2;
  4609  0019F2  0E00               	movlw	0
  4610  0019F4  0100               	movlb	0	; () banked
  4611  0019F6  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4612  0019F8  0E02               	movlw	2
  4613  0019FA  6F88               	movwf	?_tirePositioning& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616  0019FC  0012               	return		;funcret
  4617  0019FE                     __end_of_tirePositioning:
  4618                           	opt callstack 0
  4619                           
  4620 ;; *************** function _opDelay *****************
  4621 ;; Defined at:
  4622 ;;		line 120 in file "main.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  millis          2    5[COMRAM] int 
  4625 ;;  maxOperation    2    7[COMRAM] int 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  startTime       2   12[COMRAM] int 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;Total ram usage:        9 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    2
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_tirePositioning
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text9
  4652  003518                     __ptext9:
  4653                           	opt callstack 0
  4654  003518                     _opDelay:
  4655                           	opt callstack 26
  4656                           
  4657                           ;main.c: 121:     int startTime = millisecondsMeasured;
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;incstack = 0
  4661  003518  C075  F00D         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  4662  00351C  C076  F00E         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  4663  003520                     l7798:
  4664                           
  4665                           ;main.c: 122:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  4666  003520  5008               	movf	opDelay@maxOperationTime,w,c
  4667  003522  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4668  003524  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4669  003526  0A80               	xorlw	128
  4670  003528  6E0A               	movwf	??_opDelay& (0+255),c
  4671  00352A  5009               	movf	opDelay@maxOperationTime+1,w,c
  4672  00352C  0A80               	xorlw	128
  4673  00352E  580A               	subwfb	??_opDelay& (0+255),w,c
  4674  003530  B0D8               	btfsc	status,0,c
  4675  003532  0012               	return	
  4676  003534  500D               	movf	opDelay@startTime,w,c
  4677  003536  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4678  003538  6E0A               	movwf	??_opDelay& (0+255),c
  4679  00353A  500E               	movf	opDelay@startTime+1,w,c
  4680  00353C  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4681  00353E  6E0B               	movwf	(??_opDelay+1)& (0+255),c
  4682  003540  5006               	movf	opDelay@millis,w,c
  4683  003542  5C0A               	subwf	??_opDelay,w,c
  4684  003544  500B               	movf	??_opDelay+1,w,c
  4685  003546  0A80               	xorlw	128
  4686  003548  6E0C               	movwf	(??_opDelay+2)& (0+255),c
  4687  00354A  5007               	movf	opDelay@millis+1,w,c
  4688  00354C  0A80               	xorlw	128
  4689  00354E  580C               	subwfb	(??_opDelay+2)& (0+255),w,c
  4690  003550  B0D8               	btfsc	status,0,c
  4691  003552  0012               	return	
  4692  003554  D7E5               	goto	l7798
  4693  003556                     __end_of_opDelay:
  4694                           	opt callstack 0
  4695                           
  4696 ;; *************** function ___awdiv *****************
  4697 ;; Defined at:
  4698 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  dividend        2    5[COMRAM] int 
  4701 ;;  divisor         2    7[COMRAM] int 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  quotient        2   11[COMRAM] int 
  4704 ;;  sign            1   10[COMRAM] unsigned char 
  4705 ;;  counter         1    9[COMRAM] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    5[COMRAM] int 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;Total ram usage:        8 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    2
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_tirePositioning
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text10
  4730  002F08                     __ptext10:
  4731                           	opt callstack 0
  4732  002F08                     ___awdiv:
  4733                           	opt callstack 26
  4734                           
  4735                           ;incstack = 0
  4736  002F08  0E00               	movlw	0
  4737  002F0A  6E0B               	movwf	___awdiv@sign,c
  4738  002F0C  AE09               	btfss	___awdiv@divisor+1,7,c
  4739  002F0E  D006               	goto	l7892
  4740  002F10  6C08               	negf	___awdiv@divisor,c
  4741  002F12  1E09               	comf	___awdiv@divisor+1,f,c
  4742  002F14  B0D8               	btfsc	status,0,c
  4743  002F16  2A09               	incf	___awdiv@divisor+1,f,c
  4744  002F18  0E01               	movlw	1
  4745  002F1A  6E0B               	movwf	___awdiv@sign,c
  4746  002F1C                     l7892:
  4747  002F1C  AE07               	btfss	___awdiv@dividend+1,7,c
  4748  002F1E  D006               	goto	l7898
  4749  002F20  6C06               	negf	___awdiv@dividend,c
  4750  002F22  1E07               	comf	___awdiv@dividend+1,f,c
  4751  002F24  B0D8               	btfsc	status,0,c
  4752  002F26  2A07               	incf	___awdiv@dividend+1,f,c
  4753  002F28  0E01               	movlw	1
  4754  002F2A  1A0B               	xorwf	___awdiv@sign,f,c
  4755  002F2C                     l7898:
  4756  002F2C  0E00               	movlw	0
  4757  002F2E  6E0D               	movwf	___awdiv@quotient+1,c
  4758  002F30  0E00               	movlw	0
  4759  002F32  6E0C               	movwf	___awdiv@quotient,c
  4760  002F34  5008               	movf	___awdiv@divisor,w,c
  4761  002F36  1009               	iorwf	___awdiv@divisor+1,w,c
  4762  002F38  B4D8               	btfsc	status,2,c
  4763  002F3A  D01C               	goto	l7920
  4764  002F3C  0E01               	movlw	1
  4765  002F3E  6E0A               	movwf	___awdiv@counter,c
  4766  002F40  D004               	goto	l7906
  4767  002F42                     l7904:
  4768  002F42  90D8               	bcf	status,0,c
  4769  002F44  3608               	rlcf	___awdiv@divisor,f,c
  4770  002F46  3609               	rlcf	___awdiv@divisor+1,f,c
  4771  002F48  2A0A               	incf	___awdiv@counter,f,c
  4772  002F4A                     l7906:
  4773  002F4A  AE09               	btfss	___awdiv@divisor+1,7,c
  4774  002F4C  D7FA               	goto	l7904
  4775  002F4E                     u9250:
  4776  002F4E  90D8               	bcf	status,0,c
  4777  002F50  360C               	rlcf	___awdiv@quotient,f,c
  4778  002F52  360D               	rlcf	___awdiv@quotient+1,f,c
  4779  002F54  5008               	movf	___awdiv@divisor,w,c
  4780  002F56  5C06               	subwf	___awdiv@dividend,w,c
  4781  002F58  5009               	movf	___awdiv@divisor+1,w,c
  4782  002F5A  5807               	subwfb	___awdiv@dividend+1,w,c
  4783  002F5C  A0D8               	btfss	status,0,c
  4784  002F5E  D005               	goto	l7916
  4785  002F60  5008               	movf	___awdiv@divisor,w,c
  4786  002F62  5E06               	subwf	___awdiv@dividend,f,c
  4787  002F64  5009               	movf	___awdiv@divisor+1,w,c
  4788  002F66  5A07               	subwfb	___awdiv@dividend+1,f,c
  4789  002F68  800C               	bsf	___awdiv@quotient,0,c
  4790  002F6A                     l7916:
  4791  002F6A  90D8               	bcf	status,0,c
  4792  002F6C  3209               	rrcf	___awdiv@divisor+1,f,c
  4793  002F6E  3208               	rrcf	___awdiv@divisor,f,c
  4794  002F70  2E0A               	decfsz	___awdiv@counter,f,c
  4795  002F72  D7ED               	goto	u9250
  4796  002F74                     l7920:
  4797  002F74  500B               	movf	___awdiv@sign,w,c
  4798  002F76  B4D8               	btfsc	status,2,c
  4799  002F78  D004               	goto	l7924
  4800  002F7A  6C0C               	negf	___awdiv@quotient,c
  4801  002F7C  1E0D               	comf	___awdiv@quotient+1,f,c
  4802  002F7E  B0D8               	btfsc	status,0,c
  4803  002F80  2A0D               	incf	___awdiv@quotient+1,f,c
  4804  002F82                     l7924:
  4805  002F82  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4806  002F86  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4807  002F8A  0012               	return		;funcret
  4808  002F8C                     __end_of___awdiv:
  4809                           	opt callstack 0
  4810                           
  4811 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  4812 ;; Defined at:
  4813 ;;		line 486 in file "main.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  data            1    0        unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    4
  4834 ;; This function calls:
  4835 ;;		_I2C_Master_Start
  4836 ;;		_I2C_Master_Stop
  4837 ;;		_I2C_Master_Write
  4838 ;; This function is called by:
  4839 ;;		_doOperation
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text11
  4844  0037F0                     __ptext11:
  4845                           	opt callstack 0
  4846  0037F0                     _sendArduinoTireOperationStartMessage:
  4847                           	opt callstack 25
  4848                           
  4849                           ;main.c: 493:     I2C_Master_Start();
  4850                           
  4851                           ;incstack = 0
  4852  0037F0  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  4853                           
  4854                           ;main.c: 494:     I2C_Master_Write(0b00010000);
  4855  0037F4  0E00               	movlw	0
  4856  0037F6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4857  0037F8  0E10               	movlw	16
  4858  0037FA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4859  0037FC  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  4860                           
  4861                           ;main.c: 495:     I2C_Master_Write(data);
  4862  003800  0E00               	movlw	0
  4863  003802  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4864  003804  0E32               	movlw	50
  4865  003806  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4866  003808  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  4867                           
  4868                           ;main.c: 496:     I2C_Master_Stop();
  4869  00380C  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  4870  003810  0012               	return		;funcret
  4871  003812                     __end_of_sendArduinoTireOperationStartMessage:
  4872                           	opt callstack 0
  4873                           
  4874 ;; *************** function _sendArduinoTireDropRequest *****************
  4875 ;; Defined at:
  4876 ;;		line 427 in file "main.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  data            1    0        unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    4
  4897 ;; This function calls:
  4898 ;;		_I2C_Master_Start
  4899 ;;		_I2C_Master_Stop
  4900 ;;		_I2C_Master_Write
  4901 ;; This function is called by:
  4902 ;;		_doOperation
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text12
  4907  003812                     __ptext12:
  4908                           	opt callstack 0
  4909  003812                     _sendArduinoTireDropRequest:
  4910                           	opt callstack 25
  4911                           
  4912                           ;main.c: 434:     I2C_Master_Start();
  4913                           
  4914                           ;incstack = 0
  4915  003812  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  4916                           
  4917                           ;main.c: 435:     I2C_Master_Write(0b00010000);
  4918  003816  0E00               	movlw	0
  4919  003818  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4920  00381A  0E10               	movlw	16
  4921  00381C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4922  00381E  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  4923                           
  4924                           ;main.c: 436:     I2C_Master_Write(data);
  4925  003822  0E00               	movlw	0
  4926  003824  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4927  003826  0E31               	movlw	49
  4928  003828  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4929  00382A  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  4930                           
  4931                           ;main.c: 437:     I2C_Master_Stop();
  4932  00382E  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  4933  003832  0012               	return		;funcret
  4934  003834                     __end_of_sendArduinoTireDropRequest:
  4935                           	opt callstack 0
  4936                           
  4937 ;; *************** function _requestIsTireDropDone *****************
  4938 ;; Defined at:
  4939 ;;		line 500 in file "main.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  data            1    8[COMRAM] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      _Bool 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;Total ram usage:        1 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    4
  4960 ;; This function calls:
  4961 ;;		_I2C_Master_Read
  4962 ;;		_I2C_Master_Start
  4963 ;;		_I2C_Master_Stop
  4964 ;;		_I2C_Master_Write
  4965 ;; This function is called by:
  4966 ;;		_doOperation
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text13
  4971  003700                     __ptext13:
  4972                           	opt callstack 0
  4973  003700                     _requestIsTireDropDone:
  4974                           	opt callstack 25
  4975                           
  4976                           ;main.c: 501:     I2C_Master_Start();
  4977                           
  4978                           ;incstack = 0
  4979  003700  EC67  F01C         	call	_I2C_Master_Start	;wreg free
  4980                           
  4981                           ;main.c: 502:     I2C_Master_Write(0b00010001);
  4982  003704  0E00               	movlw	0
  4983  003706  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4984  003708  0E11               	movlw	17
  4985  00370A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4986  00370C  EC5E  F01C         	call	_I2C_Master_Write	;wreg free
  4987                           
  4988                           ;main.c: 503:     unsigned char data = I2C_Master_Read(1);
  4989  003710  0E01               	movlw	1
  4990  003712  ECE6  F01B         	call	_I2C_Master_Read
  4991  003716  6E09               	movwf	requestIsTireDropDone@data,c
  4992                           
  4993                           ;main.c: 504:     I2C_Master_Stop();
  4994  003718  EC63  F01C         	call	_I2C_Master_Stop	;wreg free
  4995                           
  4996                           ;main.c: 505:     if(data == '1'){
  4997  00371C  0E31               	movlw	49
  4998  00371E  1809               	xorwf	requestIsTireDropDone@data,w,c
  4999  003720  A4D8               	btfss	status,2,c
  5000  003722  D002               	goto	l8114
  5001                           
  5002                           ;main.c: 506:         return 1;
  5003  003724  0E01               	movlw	1
  5004  003726  0012               	return	
  5005  003728                     l8114:
  5006                           
  5007                           ;main.c: 508:     return 0;
  5008  003728  0E00               	movlw	0
  5009  00372A  0012               	return		;funcret
  5010  00372C                     __end_of_requestIsTireDropDone:
  5011                           	opt callstack 0
  5012                           
  5013 ;; *************** function _I2C_Master_Write *****************
  5014 ;; Defined at:
  5015 ;;		line 70 in file "I2C.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;Total ram usage:        2 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    3
  5036 ;; This function calls:
  5037 ;;		_I2C_Master_Wait
  5038 ;; This function is called by:
  5039 ;;		_sendArduinoTireDropRequest
  5040 ;;		_sendArduinoTireOperationStartMessage
  5041 ;;		_requestIsTireDropDone
  5042 ;;		_doOperation
  5043 ;;		_main
  5044 ;;		_rtc_set_time
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text14
  5049  0038BC                     __ptext14:
  5050                           	opt callstack 0
  5051  0038BC                     _I2C_Master_Write:
  5052                           	opt callstack 25
  5053                           
  5054                           ;I2C.c: 71:     I2C_Master_Wait();
  5055                           
  5056                           ;incstack = 0
  5057  0038BC  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5058                           
  5059                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5060  0038C0  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5061  0038C4  0012               	return		;funcret
  5062  0038C6                     __end_of_I2C_Master_Write:
  5063                           	opt callstack 0
  5064                           
  5065 ;; *************** function _I2C_Master_Stop *****************
  5066 ;; Defined at:
  5067 ;;		line 65 in file "I2C.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		_I2C_Master_Wait
  5090 ;; This function is called by:
  5091 ;;		_sendArduinoTireDropRequest
  5092 ;;		_sendArduinoTireOperationStartMessage
  5093 ;;		_requestIsTireDropDone
  5094 ;;		_doOperation
  5095 ;;		_main
  5096 ;;		_rtc_set_time
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text15
  5101  0038C6                     __ptext15:
  5102                           	opt callstack 0
  5103  0038C6                     _I2C_Master_Stop:
  5104                           	opt callstack 25
  5105                           
  5106                           ;I2C.c: 66:     I2C_Master_Wait();
  5107                           
  5108                           ;incstack = 0
  5109  0038C6  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5110                           
  5111                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5112  0038CA  84C5               	bsf	4037,2,c	;volatile
  5113  0038CC  0012               	return		;funcret
  5114  0038CE                     __end_of_I2C_Master_Stop:
  5115                           	opt callstack 0
  5116                           
  5117 ;; *************** function _I2C_Master_Start *****************
  5118 ;; Defined at:
  5119 ;;		line 55 in file "I2C.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    3
  5140 ;; This function calls:
  5141 ;;		_I2C_Master_Wait
  5142 ;; This function is called by:
  5143 ;;		_sendArduinoTireDropRequest
  5144 ;;		_sendArduinoTireOperationStartMessage
  5145 ;;		_requestIsTireDropDone
  5146 ;;		_doOperation
  5147 ;;		_main
  5148 ;;		_rtc_set_time
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text16
  5153  0038CE                     __ptext16:
  5154                           	opt callstack 0
  5155  0038CE                     _I2C_Master_Start:
  5156                           	opt callstack 25
  5157                           
  5158                           ;I2C.c: 56:     I2C_Master_Wait();
  5159                           
  5160                           ;incstack = 0
  5161  0038CE  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5162                           
  5163                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5164  0038D2  80C5               	bsf	4037,0,c	;volatile
  5165  0038D4  0012               	return		;funcret
  5166  0038D6                     __end_of_I2C_Master_Start:
  5167                           	opt callstack 0
  5168                           
  5169 ;; *************** function _I2C_Master_Read *****************
  5170 ;; Defined at:
  5171 ;;		line 77 in file "I2C.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  ackBit          1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  ackBit          1    6[COMRAM] unsigned char 
  5176 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      unsigned char 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    3
  5193 ;; This function calls:
  5194 ;;		_I2C_Master_Wait
  5195 ;; This function is called by:
  5196 ;;		_requestIsTireDropDone
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text17
  5202  0037CC                     __ptext17:
  5203                           	opt callstack 0
  5204  0037CC                     _I2C_Master_Read:
  5205                           	opt callstack 25
  5206                           
  5207                           ;incstack = 0
  5208                           ;I2C_Master_Read@ackBit stored from wreg
  5209  0037CC  6E07               	movwf	I2C_Master_Read@ackBit,c
  5210                           
  5211                           ;I2C.c: 78:     I2C_Master_Wait();
  5212  0037CE  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5213                           
  5214                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5215  0037D2  86C5               	bsf	4037,3,c	;volatile
  5216                           
  5217                           ;I2C.c: 81:     I2C_Master_Wait();
  5218  0037D4  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5219                           
  5220                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5221  0037D8  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5222                           
  5223                           ;I2C.c: 86:     I2C_Master_Wait();
  5224  0037DC  EC40  F01C         	call	_I2C_Master_Wait	;wreg free
  5225                           
  5226                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5227  0037E0  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5228  0037E2  D002               	bra	u9135
  5229  0037E4  9AC5               	bcf	4037,5,c	;volatile
  5230  0037E6  D001               	bra	u9136
  5231  0037E8                     u9135:
  5232  0037E8  8AC5               	bsf	4037,5,c	;volatile
  5233  0037EA                     u9136:
  5234                           
  5235                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5236  0037EA  88C5               	bsf	4037,4,c	;volatile
  5237                           
  5238                           ;I2C.c: 90:     return receivedByte;
  5239  0037EC  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5240  0037EE  0012               	return		;funcret
  5241  0037F0                     __end_of_I2C_Master_Read:
  5242                           	opt callstack 0
  5243                           
  5244 ;; *************** function _I2C_Master_Wait *****************
  5245 ;; Defined at:
  5246 ;;		line 21 in file "I2C.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    2
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_I2C_Master_Start
  5271 ;;		_I2C_Master_Stop
  5272 ;;		_I2C_Master_Write
  5273 ;;		_I2C_Master_Read
  5274 ;;		_I2C_Master_RepeatedStart
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text18
  5279  003880                     __ptext18:
  5280                           	opt callstack 0
  5281  003880                     _I2C_Master_Wait:
  5282                           	opt callstack 25
  5283                           
  5284                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5285                           
  5286                           ;I2C.c: 28:     }
  5287                           
  5288                           ;incstack = 0
  5289  003880  B4C7               	btfsc	4039,2,c	;volatile
  5290  003882  D7FE               	goto	_I2C_Master_Wait
  5291  003884  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5292  003888  0E1F               	movlw	31
  5293  00388A  1606               	andwf	??_I2C_Master_Wait,f,c
  5294  00388C  B4D8               	btfsc	status,2,c
  5295  00388E  0012               	return	
  5296  003890  D7F7               	goto	_I2C_Master_Wait
  5297  003892                     __end_of_I2C_Master_Wait:
  5298                           	opt callstack 0
  5299                           
  5300 ;; *************** function _opErrorCorrectionDegrees *****************
  5301 ;; Defined at:
  5302 ;;		line 584 in file "main.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  goalSpeed       2   32[BANK0 ] int 
  5305 ;;  turnRatio       2   34[BANK0 ] int 
  5306 ;;  correctionCo    4   36[BANK0 ] float 
  5307 ;;  distanceDegr    2   40[BANK0 ] int 
  5308 ;;  maxOperation    2   42[BANK0 ] int 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  motorAStartD    2   50[BANK0 ] int 
  5311 ;;  motorBStartD    2   48[BANK0 ] int 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5321 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Totals:         1      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;Total ram usage:       21 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    6
  5328 ;; This function calls:
  5329 ;;		___xxtofl
  5330 ;;		_abs
  5331 ;;		_errorCorrectedMove
  5332 ;; This function is called by:
  5333 ;;		_doOperation
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text19
  5338  002D24                     __ptext19:
  5339                           	opt callstack 0
  5340  002D24                     _opErrorCorrectionDegrees:
  5341                           	opt callstack 23
  5342                           
  5343                           ;main.c: 585:     int motorAStartDistance = motorADistance;
  5344                           
  5345                           ;incstack = 0
  5346  002D24  C077  F0B2         	movff	_motorADistance,opErrorCorrectionDegrees@motorAStartDistance	;volatile
  5347  002D28  C078  F0B3         	movff	_motorADistance+1,opErrorCorrectionDegrees@motorAStartDistance+1	;volatile
  5348                           
  5349                           ;main.c: 586:     int motorBStartDistance = motorBDistance;
  5350  002D2C  C10C  F0B0         	movff	_motorBDistance,opErrorCorrectionDegrees@motorBStartDistance	;volatile
  5351  002D30  C10D  F0B1         	movff	_motorBDistance+1,opErrorCorrectionDegrees@motorBStartDistance+1	;volatile
  5352                           
  5353                           ;main.c: 590:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5354  002D34  D032               	goto	l8124
  5355  002D36                     l8120:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;main.c: 591:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5359  002D36  C0A2  F006         	movff	opErrorCorrectionDegrees@turnRatio,___xxtofl@val
  5360  002D3A  C0A3  F007         	movff	opErrorCorrectionDegrees@turnRatio+1,___xxtofl@val+1
  5361  002D3E  0E00               	movlw	0
  5362  002D40  BE07               	btfsc	___xxtofl@val+1,7,c
  5363  002D42  0EFF               	movlw	-1
  5364  002D44  6E08               	movwf	___xxtofl@val+2,c
  5365  002D46  6E09               	movwf	___xxtofl@val+3,c
  5366  002D48  0E01               	movlw	1
  5367  002D4A  ECFB  F013         	call	___xxtofl
  5368  002D4E  C006  F0AC         	movff	?___xxtofl,_opErrorCorrectionDegrees$2221
  5369  002D52  C007  F0AD         	movff	?___xxtofl+1,_opErrorCorrectionDegrees$2221+1
  5370  002D56  C008  F0AE         	movff	?___xxtofl+2,_opErrorCorrectionDegrees$2221+2
  5371  002D5A  C009  F0AF         	movff	?___xxtofl+3,_opErrorCorrectionDegrees$2221+3
  5372                           
  5373                           ;main.c: 591:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5374  002D5E  C0A0  F088         	movff	opErrorCorrectionDegrees@goalSpeed,errorCorrectedMove@goalSpeed
  5375  002D62  C0A1  F089         	movff	opErrorCorrectionDegrees@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  5376  002D66  C0AC  F08A         	movff	_opErrorCorrectionDegrees$2221,errorCorrectedMove@turnRatio
  5377  002D6A  C0AD  F08B         	movff	_opErrorCorrectionDegrees$2221+1,errorCorrectedMove@turnRatio+1
  5378  002D6E  C0AE  F08C         	movff	_opErrorCorrectionDegrees$2221+2,errorCorrectedMove@turnRatio+2
  5379  002D72  C0AF  F08D         	movff	_opErrorCorrectionDegrees$2221+3,errorCorrectedMove@turnRatio+3
  5380  002D76  C0B2  F08E         	movff	opErrorCorrectionDegrees@motorAStartDistance,errorCorrectedMove@motorAStartDistan
      +                          ce
  5381  002D7A  C0B3  F08F         	movff	opErrorCorrectionDegrees@motorAStartDistance+1,errorCorrectedMove@motorAStartDist
      +                          ance+1
  5382  002D7E  C0B0  F090         	movff	opErrorCorrectionDegrees@motorBStartDistance,errorCorrectedMove@motorBStartDistan
      +                          ce
  5383  002D82  C0B1  F091         	movff	opErrorCorrectionDegrees@motorBStartDistance+1,errorCorrectedMove@motorBStartDist
      +                          ance+1
  5384  002D86  C0A4  F092         	movff	opErrorCorrectionDegrees@correctionConstant,errorCorrectedMove@correctionConstant
  5385  002D8A  C0A5  F093         	movff	opErrorCorrectionDegrees@correctionConstant+1,errorCorrectedMove@correctionConsta
      +                          nt+1
  5386  002D8E  C0A6  F094         	movff	opErrorCorrectionDegrees@correctionConstant+2,errorCorrectedMove@correctionConsta
      +                          nt+2
  5387  002D92  C0A7  F095         	movff	opErrorCorrectionDegrees@correctionConstant+3,errorCorrectedMove@correctionConsta
      +                          nt+3
  5388  002D96  EC43  F00E         	call	_errorCorrectedMove	;wreg free
  5389  002D9A                     l8124:
  5390                           
  5391                           ;main.c: 590:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5392  002D9A  0100               	movlb	0	; () banked
  5393  002D9C  51AA               	movf	opErrorCorrectionDegrees@maxOperationTime& (0+255),w,b
  5394  002D9E  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5395  002DA0  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  5396  002DA2  0A80               	xorlw	128
  5397  002DA4  6E72               	movwf	??_opErrorCorrectionDegrees& (0+255),c
  5398  002DA6  51AB               	movf	(opErrorCorrectionDegrees@maxOperationTime+1)& (0+255),w,b
  5399  002DA8  0A80               	xorlw	128
  5400  002DAA  5872               	subwfb	??_opErrorCorrectionDegrees& (0+255),w,c
  5401  002DAC  B0D8               	btfsc	status,0,c
  5402  002DAE  0012               	return	
  5403                           
  5404                           ; BSR set to: 0
  5405  002DB0  51B2               	movf	opErrorCorrectionDegrees@motorAStartDistance& (0+255),w,b
  5406  002DB2  5C77               	subwf	_motorADistance,w,c	;volatile
  5407  002DB4  6E18               	movwf	abs@a,c
  5408  002DB6  51B3               	movf	(opErrorCorrectionDegrees@motorAStartDistance+1)& (0+255),w,b
  5409  002DB8  5878               	subwfb	_motorADistance+1,w,c	;volatile
  5410  002DBA  6E19               	movwf	abs@a+1,c
  5411  002DBC  EC1F  F01B         	call	_abs	;wreg free
  5412  002DC0  0100               	movlb	0	; () banked
  5413  002DC2  51A8               	movf	opErrorCorrectionDegrees@distanceDegrees& (0+255),w,b
  5414  002DC4  5C18               	subwf	?_abs,w,c
  5415  002DC6  5019               	movf	?_abs+1,w,c
  5416  002DC8  0A80               	xorlw	128
  5417  002DCA  6E72               	movwf	??_opErrorCorrectionDegrees& (0+255),c
  5418  002DCC  51A9               	movf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),w,b
  5419  002DCE  0A80               	xorlw	128
  5420  002DD0  5872               	subwfb	??_opErrorCorrectionDegrees& (0+255),w,c
  5421  002DD2  B0D8               	btfsc	status,0,c
  5422  002DD4  0012               	return	
  5423  002DD6  D7AF               	goto	l8120
  5424  002DD8                     __end_of_opErrorCorrectionDegrees:
  5425                           	opt callstack 0
  5426                           
  5427 ;; *************** function _errorCorrectedMove *****************
  5428 ;; Defined at:
  5429 ;;		line 557 in file "main.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  goalSpeed       2    8[BANK0 ] int 
  5432 ;;  turnRatio       4   10[BANK0 ] float 
  5433 ;;  motorAStartD    2   14[BANK0 ] int 
  5434 ;;  motorBStartD    2   16[BANK0 ] int 
  5435 ;;  correctionCo    4   18[BANK0 ] float 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  BSpeed          2   30[BANK0 ] int 
  5438 ;;  ASpeed          2   28[BANK0 ] int 
  5439 ;;  error           2   26[BANK0 ] int 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5449 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;Total ram usage:       24 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    5
  5456 ;; This function calls:
  5457 ;;		___fladd
  5458 ;;		___fldiv
  5459 ;;		___flmul
  5460 ;;		___flsub
  5461 ;;		___fltol
  5462 ;;		___xxtofl
  5463 ;;		_setMotorSpeeds
  5464 ;; This function is called by:
  5465 ;;		_opErrorCorrectionDegrees
  5466 ;;		_doOperation
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text20
  5471  001C86                     __ptext20:
  5472                           	opt callstack 0
  5473  001C86                     _errorCorrectedMove:
  5474                           	opt callstack 23
  5475                           
  5476                           ;main.c: 558:     int error = (int)((motorADistance - motorAStartDistance)-(motorBDistan
      +                          ce - motorBStartDistance)/turnRatio);
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;incstack = 0
  5480  001C86  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  5481  001C8A  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  5482  001C8E  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  5483  001C92  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  5484  001C96  0100               	movlb	0	; () banked
  5485  001C98  5190               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  5486  001C9A  0101               	movlb	1	; () banked
  5487  001C9C  5D0C               	subwf	_motorBDistance& (0+255),w,b	;volatile
  5488  001C9E  0100               	movlb	0	; () banked
  5489  001CA0  6F96               	movwf	??_errorCorrectedMove& (0+255),b
  5490  001CA2  5191               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  5491  001CA4  0101               	movlb	1	; () banked
  5492  001CA6  590D               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  5493  001CA8  0100               	movlb	0	; () banked
  5494  001CAA  6F97               	movwf	(??_errorCorrectedMove+1)& (0+255),b
  5495  001CAC  C096  F006         	movff	??_errorCorrectedMove,___xxtofl@val
  5496  001CB0  C097  F007         	movff	??_errorCorrectedMove+1,___xxtofl@val+1
  5497  001CB4  0E00               	movlw	0
  5498  001CB6  BE07               	btfsc	___xxtofl@val+1,7,c
  5499  001CB8  0EFF               	movlw	-1
  5500  001CBA  6E08               	movwf	___xxtofl@val+2,c
  5501  001CBC  6E09               	movwf	___xxtofl@val+3,c
  5502  001CBE  0E01               	movlw	1
  5503  001CC0  ECFB  F013         	call	___xxtofl
  5504  001CC4  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5505  001CC8  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5506  001CCC  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5507  001CD0  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5508  001CD4  ECFF  F00C         	call	___fldiv	;wreg free
  5509  001CD8  C02D  F04A         	movff	?___fldiv,___flsub@a
  5510  001CDC  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  5511  001CE0  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  5512  001CE4  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  5513  001CE8  0100               	movlb	0	; () banked
  5514  001CEA  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  5515  001CEC  5C77               	subwf	_motorADistance,w,c	;volatile
  5516  001CEE  6F98               	movwf	(??_errorCorrectedMove+2)& (0+255),b
  5517  001CF0  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  5518  001CF2  5878               	subwfb	_motorADistance+1,w,c	;volatile
  5519  001CF4  6F99               	movwf	(??_errorCorrectedMove+3)& (0+255),b
  5520  001CF6  C098  F006         	movff	??_errorCorrectedMove+2,___xxtofl@val
  5521  001CFA  C099  F007         	movff	??_errorCorrectedMove+3,___xxtofl@val+1
  5522  001CFE  0E00               	movlw	0
  5523  001D00  BE07               	btfsc	___xxtofl@val+1,7,c
  5524  001D02  0EFF               	movlw	-1
  5525  001D04  6E08               	movwf	___xxtofl@val+2,c
  5526  001D06  6E09               	movwf	___xxtofl@val+3,c
  5527  001D08  0E01               	movlw	1
  5528  001D0A  ECFB  F013         	call	___xxtofl
  5529  001D0E  C006  F046         	movff	?___xxtofl,___flsub@b
  5530  001D12  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5531  001D16  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5532  001D1A  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5533  001D1E  ECE5  F019         	call	___flsub	;wreg free
  5534  001D22  C046  F04E         	movff	?___flsub,___fltol@f1
  5535  001D26  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5536  001D2A  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5537  001D2E  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5538  001D32  EC35  F016         	call	___fltol	;wreg free
  5539  001D36  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  5540  001D3A  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  5541                           
  5542                           ;main.c: 559:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  5543  001D3E  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5544  001D42  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5545  001D46  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5546  001D4A  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5547  001D4E  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5548  001D52  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5549  001D56  0E00               	movlw	0
  5550  001D58  BE07               	btfsc	___xxtofl@val+1,7,c
  5551  001D5A  0EFF               	movlw	-1
  5552  001D5C  6E08               	movwf	___xxtofl@val+2,c
  5553  001D5E  6E09               	movwf	___xxtofl@val+3,c
  5554  001D60  0E01               	movlw	1
  5555  001D62  ECFB  F013         	call	___xxtofl
  5556  001D66  C006  F014         	movff	?___xxtofl,___flmul@b
  5557  001D6A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5558  001D6E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5559  001D72  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5560  001D76  EC6E  F008         	call	___flmul	;wreg free
  5561  001D7A  C014  F04A         	movff	?___flmul,___flsub@a
  5562  001D7E  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  5563  001D82  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  5564  001D86  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  5565  001D8A  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5566  001D8E  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5567  001D92  0E00               	movlw	0
  5568  001D94  BE07               	btfsc	___xxtofl@val+1,7,c
  5569  001D96  0EFF               	movlw	-1
  5570  001D98  6E08               	movwf	___xxtofl@val+2,c
  5571  001D9A  6E09               	movwf	___xxtofl@val+3,c
  5572  001D9C  0E01               	movlw	1
  5573  001D9E  ECFB  F013         	call	___xxtofl
  5574  001DA2  C006  F046         	movff	?___xxtofl,___flsub@b
  5575  001DA6  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5576  001DAA  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5577  001DAE  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5578  001DB2  ECE5  F019         	call	___flsub	;wreg free
  5579  001DB6  C046  F04E         	movff	?___flsub,___fltol@f1
  5580  001DBA  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5581  001DBE  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5582  001DC2  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5583  001DC6  EC35  F016         	call	___fltol	;wreg free
  5584  001DCA  C04E  F09C         	movff	?___fltol,errorCorrectedMove@ASpeed
  5585  001DCE  C04F  F09D         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  5586                           
  5587                           ;main.c: 560:     int BSpeed = (int)((goalSpeed*turnRatio + error*correctionConstant));
  5588  001DD2  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5589  001DD6  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5590  001DDA  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5591  001DDE  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5592  001DE2  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5593  001DE6  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5594  001DEA  0E00               	movlw	0
  5595  001DEC  BE07               	btfsc	___xxtofl@val+1,7,c
  5596  001DEE  0EFF               	movlw	-1
  5597  001DF0  6E08               	movwf	___xxtofl@val+2,c
  5598  001DF2  6E09               	movwf	___xxtofl@val+3,c
  5599  001DF4  0E01               	movlw	1
  5600  001DF6  ECFB  F013         	call	___xxtofl
  5601  001DFA  C006  F014         	movff	?___xxtofl,___flmul@b
  5602  001DFE  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5603  001E02  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5604  001E06  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5605  001E0A  EC6E  F008         	call	___flmul	;wreg free
  5606  001E0E  C014  F031         	movff	?___flmul,___fladd@a
  5607  001E12  C015  F032         	movff	?___flmul+1,___fladd@a+1
  5608  001E16  C016  F033         	movff	?___flmul+2,___fladd@a+2
  5609  001E1A  C017  F034         	movff	?___flmul+3,___fladd@a+3
  5610  001E1E  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  5611  001E22  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  5612  001E26  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  5613  001E2A  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  5614  001E2E  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5615  001E32  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5616  001E36  0E00               	movlw	0
  5617  001E38  BE07               	btfsc	___xxtofl@val+1,7,c
  5618  001E3A  0EFF               	movlw	-1
  5619  001E3C  6E08               	movwf	___xxtofl@val+2,c
  5620  001E3E  6E09               	movwf	___xxtofl@val+3,c
  5621  001E40  0E01               	movlw	1
  5622  001E42  ECFB  F013         	call	___xxtofl
  5623  001E46  C006  F014         	movff	?___xxtofl,___flmul@b
  5624  001E4A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5625  001E4E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5626  001E52  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5627  001E56  EC6E  F008         	call	___flmul	;wreg free
  5628  001E5A  C014  F02D         	movff	?___flmul,___fladd@b
  5629  001E5E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5630  001E62  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5631  001E66  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5632  001E6A  EC17  F00A         	call	___fladd	;wreg free
  5633  001E6E  C02D  F04E         	movff	?___fladd,___fltol@f1
  5634  001E72  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  5635  001E76  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  5636  001E7A  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  5637  001E7E  EC35  F016         	call	___fltol	;wreg free
  5638  001E82  C04E  F09E         	movff	?___fltol,errorCorrectedMove@BSpeed
  5639  001E86  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  5640                           
  5641                           ;main.c: 562:     if (ASpeed > 100){
  5642  001E8A  0100               	movlb	0	; () banked
  5643  001E8C  BF9D               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5644  001E8E  D00A               	goto	l7838
  5645  001E90  519D               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  5646  001E92  E104               	bnz	u9140
  5647  001E94  0E65               	movlw	101
  5648  001E96  5D9C               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  5649  001E98  A0D8               	btfss	status,0,c
  5650  001E9A  D004               	goto	l7838
  5651  001E9C                     u9140:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;main.c: 563:         ASpeed = 100;
  5655  001E9C  0E00               	movlw	0
  5656  001E9E  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5657  001EA0  0E64               	movlw	100
  5658  001EA2  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5659  001EA4                     l7838:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;main.c: 565:     if (ASpeed < 0){
  5663  001EA4  AF9D               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5664  001EA6  D004               	goto	l7842
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;main.c: 566:         ASpeed = 0;
  5668  001EA8  0E00               	movlw	0
  5669  001EAA  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5670  001EAC  0E00               	movlw	0
  5671  001EAE  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5672  001EB0                     l7842:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;main.c: 568:     if (BSpeed > 100){
  5676  001EB0  BF9F               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5677  001EB2  D00A               	goto	l7846
  5678  001EB4  519F               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  5679  001EB6  E104               	bnz	u9160
  5680  001EB8  0E65               	movlw	101
  5681  001EBA  5D9E               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  5682  001EBC  A0D8               	btfss	status,0,c
  5683  001EBE  D004               	goto	l7846
  5684  001EC0                     u9160:
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;main.c: 569:         BSpeed = 100;
  5688  001EC0  0E00               	movlw	0
  5689  001EC2  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5690  001EC4  0E64               	movlw	100
  5691  001EC6  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5692  001EC8                     l7846:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;main.c: 571:     if (BSpeed < 0){
  5696  001EC8  AF9F               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5697  001ECA  D004               	goto	l7850
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;main.c: 572:         BSpeed = 0;
  5701  001ECC  0E00               	movlw	0
  5702  001ECE  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5703  001ED0  0E00               	movlw	0
  5704  001ED2  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5705  001ED4                     l7850:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;main.c: 575:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  5709  001ED4  C09C  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  5710  001ED8  C09D  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  5711  001EDC  0E01               	movlw	1
  5712  001EDE  6E6E               	movwf	setMotorSpeeds@Aforward,c
  5713  001EE0  0E01               	movlw	1
  5714  001EE2  6E6F               	movwf	setMotorSpeeds@Bforward,c
  5715  001EE4  C09E  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  5716  001EE8  C09F  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  5717  001EEC  EC39  F017         	call	_setMotorSpeeds	;wreg free
  5718  001EF0  0012               	return		;funcret
  5719  001EF2                     __end_of_errorCorrectedMove:
  5720                           	opt callstack 0
  5721                           
  5722 ;; *************** function _setMotorSpeeds *****************
  5723 ;; Defined at:
  5724 ;;		line 338 in file "main.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  motorASpeed     2  107[COMRAM] int 
  5727 ;;  Aforward        1  109[COMRAM] _Bool 
  5728 ;;  Bforward        1  110[COMRAM] _Bool 
  5729 ;;  motorBSpeed     2  111[COMRAM] int 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:       14 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    4
  5748 ;; This function calls:
  5749 ;;		___xxtofl
  5750 ;;		_set_pwm_duty_cycle
  5751 ;; This function is called by:
  5752 ;;		_tirePositioning
  5753 ;;		_errorCorrectedMove
  5754 ;;		_doOperation
  5755 ;;		_PIDCorrectedMove
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text21
  5760  002E72                     __ptext21:
  5761                           	opt callstack 0
  5762  002E72                     _setMotorSpeeds:
  5763                           	opt callstack 24
  5764                           
  5765                           ;main.c: 339:     if (Aforward){
  5766                           
  5767                           ;incstack = 0
  5768  002E72  506E               	movf	setMotorSpeeds@Aforward,w,c
  5769  002E74  B4D8               	btfsc	status,2,c
  5770  002E76  D003               	goto	l252
  5771                           
  5772                           ;main.c: 340:         LATAbits.LATA0 = 1;
  5773  002E78  8089               	bsf	3977,0,c	;volatile
  5774                           
  5775                           ;main.c: 341:         LATAbits.LATA1 = 0;
  5776  002E7A  9289               	bcf	3977,1,c	;volatile
  5777                           
  5778                           ;main.c: 342:     } else {
  5779  002E7C  D002               	goto	l7642
  5780  002E7E                     l252:
  5781                           
  5782                           ;main.c: 343:         LATAbits.LATA0 = 0;
  5783  002E7E  9089               	bcf	3977,0,c	;volatile
  5784                           
  5785                           ;main.c: 344:         LATAbits.LATA1 = 1;
  5786  002E80  8289               	bsf	3977,1,c	;volatile
  5787  002E82                     l7642:
  5788                           
  5789                           ;main.c: 346:     if (Bforward){
  5790  002E82  506F               	movf	setMotorSpeeds@Bforward,w,c
  5791  002E84  B4D8               	btfsc	status,2,c
  5792  002E86  D003               	goto	l254
  5793                           
  5794                           ;main.c: 347:         LATAbits.LATA2 = 1;
  5795  002E88  8489               	bsf	3977,2,c	;volatile
  5796                           
  5797                           ;main.c: 348:         LATAbits.LATA3 = 0;
  5798  002E8A  9689               	bcf	3977,3,c	;volatile
  5799                           
  5800                           ;main.c: 349:     } else {
  5801  002E8C  D002               	goto	l7646
  5802  002E8E                     l254:
  5803                           
  5804                           ;main.c: 350:         LATAbits.LATA2 = 0;
  5805  002E8E  9489               	bcf	3977,2,c	;volatile
  5806                           
  5807                           ;main.c: 351:         LATAbits.LATA3 = 1;
  5808  002E90  8689               	bsf	3977,3,c	;volatile
  5809  002E92                     l7646:
  5810                           
  5811                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5812  002E92  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  5813  002E96  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  5814  002E9A  0E00               	movlw	0
  5815  002E9C  BE07               	btfsc	___xxtofl@val+1,7,c
  5816  002E9E  0EFF               	movlw	-1
  5817  002EA0  6E08               	movwf	___xxtofl@val+2,c
  5818  002EA2  6E09               	movwf	___xxtofl@val+3,c
  5819  002EA4  0E01               	movlw	1
  5820  002EA6  ECFB  F013         	call	___xxtofl
  5821  002EAA  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2218
  5822  002EAE  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2218+1
  5823  002EB2  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2218+2
  5824  002EB6  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2218+3
  5825                           
  5826                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5827  002EBA  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  5828  002EBE  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  5829  002EC2  0E00               	movlw	0
  5830  002EC4  BE07               	btfsc	___xxtofl@val+1,7,c
  5831  002EC6  0EFF               	movlw	-1
  5832  002EC8  6E08               	movwf	___xxtofl@val+2,c
  5833  002ECA  6E09               	movwf	___xxtofl@val+3,c
  5834  002ECC  0E01               	movlw	1
  5835  002ECE  ECFB  F013         	call	___xxtofl
  5836  002ED2  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2219
  5837  002ED6  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2219+1
  5838  002EDA  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2219+2
  5839  002EDE  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2219+3
  5840                           
  5841                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5842  002EE2  C080  F058         	movff	_setMotorSpeeds$2218,set_pwm_duty_cycle@dutyA
  5843  002EE6  C081  F059         	movff	_setMotorSpeeds$2218+1,set_pwm_duty_cycle@dutyA+1
  5844  002EEA  C082  F05A         	movff	_setMotorSpeeds$2218+2,set_pwm_duty_cycle@dutyA+2
  5845  002EEE  C083  F05B         	movff	_setMotorSpeeds$2218+3,set_pwm_duty_cycle@dutyA+3
  5846  002EF2  C084  F05C         	movff	_setMotorSpeeds$2219,set_pwm_duty_cycle@dutyB
  5847  002EF6  C085  F05D         	movff	_setMotorSpeeds$2219+1,set_pwm_duty_cycle@dutyB+1
  5848  002EFA  C086  F05E         	movff	_setMotorSpeeds$2219+2,set_pwm_duty_cycle@dutyB+2
  5849  002EFE  C087  F05F         	movff	_setMotorSpeeds$2219+3,set_pwm_duty_cycle@dutyB+3
  5850  002F02  ECB4  F011         	call	_set_pwm_duty_cycle	;wreg free
  5851  002F06  0012               	return		;funcret
  5852  002F08                     __end_of_setMotorSpeeds:
  5853                           	opt callstack 0
  5854                           
  5855 ;; *************** function _set_pwm_duty_cycle *****************
  5856 ;; Defined at:
  5857 ;;		line 308 in file "main.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  dutyA           4   87[COMRAM] float 
  5860 ;;  dutyB           4   91[COMRAM] float 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  duty_valB       2  101[COMRAM] unsigned short 
  5863 ;;  duty_valA       2   99[COMRAM] unsigned short 
  5864 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      void 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;Total ram usage:       20 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    3
  5881 ;; This function calls:
  5882 ;;		___fldiv
  5883 ;;		___flge
  5884 ;;		___flmul
  5885 ;;		___fltol
  5886 ;;		___xxtofl
  5887 ;; This function is called by:
  5888 ;;		_setMotorSpeeds
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text22
  5893  002368                     __ptext22:
  5894                           	opt callstack 0
  5895  002368                     _set_pwm_duty_cycle:
  5896                           	opt callstack 24
  5897                           
  5898                           ;main.c: 309:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  5899                           
  5900                           ;incstack = 0
  5901  002368  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  5902  00236A  0012               	return	
  5903  00236C  0E00               	movlw	0
  5904  00236E  6E06               	movwf	___flge@ff1,c
  5905  002370  0E00               	movlw	0
  5906  002372  6E07               	movwf	___flge@ff1+1,c
  5907  002374  0EC8               	movlw	200
  5908  002376  6E08               	movwf	___flge@ff1+2,c
  5909  002378  0E42               	movlw	66
  5910  00237A  6E09               	movwf	___flge@ff1+3,c
  5911  00237C  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  5912  002380  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  5913  002384  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  5914  002388  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  5915  00238C  ECCD  F015         	call	___flge	;wreg free
  5916  002390  A0D8               	btfss	status,0,c
  5917  002392  0012               	return	
  5918  002394  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  5919  002396  0012               	return	
  5920  002398  0E00               	movlw	0
  5921  00239A  6E06               	movwf	___flge@ff1,c
  5922  00239C  0E00               	movlw	0
  5923  00239E  6E07               	movwf	___flge@ff1+1,c
  5924  0023A0  0EC8               	movlw	200
  5925  0023A2  6E08               	movwf	___flge@ff1+2,c
  5926  0023A4  0E42               	movlw	66
  5927  0023A6  6E09               	movwf	___flge@ff1+3,c
  5928  0023A8  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  5929  0023AC  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  5930  0023B0  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  5931  0023B4  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  5932  0023B8  ECCD  F015         	call	___flge	;wreg free
  5933  0023BC  A0D8               	btfss	status,0,c
  5934  0023BE  0012               	return	
  5935                           
  5936                           ;main.c: 314:         unsigned short max_duty_val = PR2 + 1;
  5937  0023C0  0E01               	movlw	1
  5938  0023C2  24CB               	addwf	4043,w,c	;volatile
  5939  0023C4  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  5940  0023C6  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  5941  0023C8  0E00               	movlw	0
  5942  0023CA  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  5943                           
  5944                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5945  0023CC  0E00               	movlw	0
  5946  0023CE  6E31               	movwf	___fldiv@a,c
  5947  0023D0  0E00               	movlw	0
  5948  0023D2  6E32               	movwf	___fldiv@a+1,c
  5949  0023D4  0EC8               	movlw	200
  5950  0023D6  6E33               	movwf	___fldiv@a+2,c
  5951  0023D8  0E42               	movlw	66
  5952  0023DA  6E34               	movwf	___fldiv@a+3,c
  5953  0023DC  0E00               	movlw	0
  5954  0023DE  6E18               	movwf	___flmul@a,c
  5955  0023E0  0E00               	movlw	0
  5956  0023E2  6E19               	movwf	___flmul@a+1,c
  5957  0023E4  0E80               	movlw	128
  5958  0023E6  6E1A               	movwf	___flmul@a+2,c
  5959  0023E8  0E40               	movlw	64
  5960  0023EA  6E1B               	movwf	___flmul@a+3,c
  5961  0023EC  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  5962  0023F0  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  5963  0023F4  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  5964  0023F8  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  5965  0023FC  EC6E  F008         	call	___flmul	;wreg free
  5966  002400  C014  F02D         	movff	?___flmul,___fldiv@b
  5967  002404  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5968  002408  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5969  00240C  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5970  002410  ECFF  F00C         	call	___fldiv	;wreg free
  5971  002414  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2217
  5972  002418  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2217+1
  5973  00241C  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2217+2
  5974  002420  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2217+3
  5975                           
  5976                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5977  002424  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  5978  002428  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  5979  00242C  6A08               	clrf	___xxtofl@val+2,c
  5980  00242E  6A09               	clrf	___xxtofl@val+3,c
  5981  002430  0E00               	movlw	0
  5982  002432  ECFB  F013         	call	___xxtofl
  5983  002436  C006  F018         	movff	?___xxtofl,___flmul@a
  5984  00243A  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  5985  00243E  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  5986  002442  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  5987  002446  C068  F014         	movff	_set_pwm_duty_cycle$2217,___flmul@b
  5988  00244A  C069  F015         	movff	_set_pwm_duty_cycle$2217+1,___flmul@b+1
  5989  00244E  C06A  F016         	movff	_set_pwm_duty_cycle$2217+2,___flmul@b+2
  5990  002452  C06B  F017         	movff	_set_pwm_duty_cycle$2217+3,___flmul@b+3
  5991  002456  EC6E  F008         	call	___flmul	;wreg free
  5992  00245A  C014  F04E         	movff	?___flmul,___fltol@f1
  5993  00245E  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  5994  002462  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  5995  002466  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  5996  00246A  EC35  F016         	call	___fltol	;wreg free
  5997  00246E  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  5998  002472  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  5999                           
  6000                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6001  002476  0E00               	movlw	0
  6002  002478  6E31               	movwf	___fldiv@a,c
  6003  00247A  0E00               	movlw	0
  6004  00247C  6E32               	movwf	___fldiv@a+1,c
  6005  00247E  0EC8               	movlw	200
  6006  002480  6E33               	movwf	___fldiv@a+2,c
  6007  002482  0E42               	movlw	66
  6008  002484  6E34               	movwf	___fldiv@a+3,c
  6009  002486  0E00               	movlw	0
  6010  002488  6E18               	movwf	___flmul@a,c
  6011  00248A  0E00               	movlw	0
  6012  00248C  6E19               	movwf	___flmul@a+1,c
  6013  00248E  0E80               	movlw	128
  6014  002490  6E1A               	movwf	___flmul@a+2,c
  6015  002492  0E40               	movlw	64
  6016  002494  6E1B               	movwf	___flmul@a+3,c
  6017  002496  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  6018  00249A  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  6019  00249E  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  6020  0024A2  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  6021  0024A6  EC6E  F008         	call	___flmul	;wreg free
  6022  0024AA  C014  F02D         	movff	?___flmul,___fldiv@b
  6023  0024AE  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6024  0024B2  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6025  0024B6  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6026  0024BA  ECFF  F00C         	call	___fldiv	;wreg free
  6027  0024BE  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2217
  6028  0024C2  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2217+1
  6029  0024C6  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2217+2
  6030  0024CA  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2217+3
  6031                           
  6032                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6033  0024CE  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6034  0024D2  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6035  0024D6  6A08               	clrf	___xxtofl@val+2,c
  6036  0024D8  6A09               	clrf	___xxtofl@val+3,c
  6037  0024DA  0E00               	movlw	0
  6038  0024DC  ECFB  F013         	call	___xxtofl
  6039  0024E0  C006  F018         	movff	?___xxtofl,___flmul@a
  6040  0024E4  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6041  0024E8  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6042  0024EC  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6043  0024F0  C068  F014         	movff	_set_pwm_duty_cycle$2217,___flmul@b
  6044  0024F4  C069  F015         	movff	_set_pwm_duty_cycle$2217+1,___flmul@b+1
  6045  0024F8  C06A  F016         	movff	_set_pwm_duty_cycle$2217+2,___flmul@b+2
  6046  0024FC  C06B  F017         	movff	_set_pwm_duty_cycle$2217+3,___flmul@b+3
  6047  002500  EC6E  F008         	call	___flmul	;wreg free
  6048  002504  C014  F04E         	movff	?___flmul,___fltol@f1
  6049  002508  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6050  00250C  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6051  002510  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6052  002514  EC35  F016         	call	___fltol	;wreg free
  6053  002518  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  6054  00251C  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  6055                           
  6056                           ;main.c: 325:         CCP1X = duty_valA & 2;
  6057  002520  9ABD               	bcf	4029,5,c	;volatile
  6058                           
  6059                           ;main.c: 326:         CCP1Y = duty_valA & 1;
  6060  002522  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  6061  002524  D002               	goto	u7990
  6062  002526  88BD               	bsf	4029,4,c	;volatile
  6063  002528  D001               	goto	u8005
  6064  00252A                     u7990:
  6065  00252A  98BD               	bcf	4029,4,c	;volatile
  6066  00252C                     u8005:
  6067                           
  6068                           ;main.c: 327:         CCPR1L = duty_valA >> 2;
  6069  00252C  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  6070  002530  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  6071  002534  90D8               	bcf	status,0,c
  6072  002536  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6073  002538  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6074  00253A  90D8               	bcf	status,0,c
  6075  00253C  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6076  00253E  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6077  002540  5060               	movf	??_set_pwm_duty_cycle,w,c
  6078  002542  6EBE               	movwf	4030,c	;volatile
  6079                           
  6080                           ;main.c: 331:         CCP2X = duty_valB & 2;
  6081  002544  9ABA               	bcf	4026,5,c	;volatile
  6082                           
  6083                           ;main.c: 332:         CCP2Y = duty_valB & 1;
  6084  002546  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  6085  002548  D002               	goto	u8010
  6086  00254A  88BA               	bsf	4026,4,c	;volatile
  6087  00254C  D001               	goto	u8025
  6088  00254E                     u8010:
  6089  00254E  98BA               	bcf	4026,4,c	;volatile
  6090  002550                     u8025:
  6091                           
  6092                           ;main.c: 333:         CCPR2L = duty_valB >> 2;
  6093  002550  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  6094  002554  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  6095  002558  90D8               	bcf	status,0,c
  6096  00255A  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6097  00255C  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6098  00255E  90D8               	bcf	status,0,c
  6099  002560  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6100  002562  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6101  002564  5060               	movf	??_set_pwm_duty_cycle,w,c
  6102  002566  6EBB               	movwf	4027,c	;volatile
  6103  002568  0012               	return		;funcret
  6104  00256A                     __end_of_set_pwm_duty_cycle:
  6105                           	opt callstack 0
  6106                           
  6107 ;; *************** function ___xxtofl *****************
  6108 ;; Defined at:
  6109 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  sign            1    wreg     unsigned char 
  6112 ;;  val             4    5[COMRAM] long 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  sign            1   13[COMRAM] unsigned char 
  6115 ;;  arg             4   15[COMRAM] unsigned long 
  6116 ;;  exp             1   14[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  4    5[COMRAM] unsigned char 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:       14 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    2
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_set_pwm_duty_cycle
  6137 ;;		_setMotorSpeeds
  6138 ;;		_errorCorrectedMove
  6139 ;;		_opErrorCorrectionDegrees
  6140 ;;		_PIDCorrectedMove
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text23
  6145  0027F6                     __ptext23:
  6146                           	opt callstack 0
  6147  0027F6                     ___xxtofl:
  6148                           	opt callstack 24
  6149                           
  6150                           ;incstack = 0
  6151                           ;___xxtofl@sign stored from wreg
  6152  0027F6  6E0E               	movwf	___xxtofl@sign,c
  6153  0027F8  500E               	movf	___xxtofl@sign,w,c
  6154  0027FA  A4D8               	btfss	status,2,c
  6155  0027FC  AE09               	btfss	___xxtofl@val+3,7,c
  6156  0027FE  D01A               	goto	l1356
  6157  002800  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6158  002804  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6159  002808  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6160  00280C  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6161  002810  1E0A               	comf	??___xxtofl,f,c
  6162  002812  1E0B               	comf	??___xxtofl+1,f,c
  6163  002814  1E0C               	comf	??___xxtofl+2,f,c
  6164  002816  1E0D               	comf	??___xxtofl+3,f,c
  6165  002818  2A0A               	incf	??___xxtofl,f,c
  6166  00281A  0E00               	movlw	0
  6167  00281C  220B               	addwfc	??___xxtofl+1,f,c
  6168  00281E  220C               	addwfc	??___xxtofl+2,f,c
  6169  002820  220D               	addwfc	??___xxtofl+3,f,c
  6170  002822  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6171  002826  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6172  00282A  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6173  00282E  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6174  002832  D008               	goto	l7132
  6175  002834                     l1356:
  6176  002834  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6177  002838  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6178  00283C  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6179  002840  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6180  002844                     l7132:
  6181  002844  5006               	movf	___xxtofl@val,w,c
  6182  002846  1007               	iorwf	___xxtofl@val+1,w,c
  6183  002848  1008               	iorwf	___xxtofl@val+2,w,c
  6184  00284A  1009               	iorwf	___xxtofl@val+3,w,c
  6185  00284C  A4D8               	btfss	status,2,c
  6186  00284E  D009               	goto	l7138
  6187  002850  0E00               	movlw	0
  6188  002852  6E06               	movwf	?___xxtofl,c
  6189  002854  0E00               	movlw	0
  6190  002856  6E07               	movwf	?___xxtofl+1,c
  6191  002858  0E00               	movlw	0
  6192  00285A  6E08               	movwf	?___xxtofl+2,c
  6193  00285C  0E00               	movlw	0
  6194  00285E  6E09               	movwf	?___xxtofl+3,c
  6195  002860  0012               	return	
  6196  002862                     l7138:
  6197  002862  0E96               	movlw	150
  6198  002864  6E0F               	movwf	___xxtofl@exp,c
  6199  002866  D006               	goto	l7142
  6200  002868                     l7140:
  6201  002868  2A0F               	incf	___xxtofl@exp,f,c
  6202  00286A  90D8               	bcf	status,0,c
  6203  00286C  3213               	rrcf	___xxtofl@arg+3,f,c
  6204  00286E  3212               	rrcf	___xxtofl@arg+2,f,c
  6205  002870  3211               	rrcf	___xxtofl@arg+1,f,c
  6206  002872  3210               	rrcf	___xxtofl@arg,f,c
  6207  002874                     l7142:
  6208  002874  0E00               	movlw	0
  6209  002876  1410               	andwf	___xxtofl@arg,w,c
  6210  002878  6E0A               	movwf	??___xxtofl& (0+255),c
  6211  00287A  0E00               	movlw	0
  6212  00287C  1411               	andwf	___xxtofl@arg+1,w,c
  6213  00287E  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6214  002880  0E00               	movlw	0
  6215  002882  1412               	andwf	___xxtofl@arg+2,w,c
  6216  002884  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6217  002886  0EFE               	movlw	254
  6218  002888  1413               	andwf	___xxtofl@arg+3,w,c
  6219  00288A  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6220  00288C  500A               	movf	??___xxtofl,w,c
  6221  00288E  100B               	iorwf	??___xxtofl+1,w,c
  6222  002890  100C               	iorwf	??___xxtofl+2,w,c
  6223  002892  100D               	iorwf	??___xxtofl+3,w,c
  6224  002894  B4D8               	btfsc	status,2,c
  6225  002896  D00D               	goto	l1363
  6226  002898  D7E7               	goto	l7140
  6227  00289A                     l7144:
  6228  00289A  2A0F               	incf	___xxtofl@exp,f,c
  6229  00289C  0E01               	movlw	1
  6230  00289E  2610               	addwf	___xxtofl@arg,f,c
  6231  0028A0  0E00               	movlw	0
  6232  0028A2  2211               	addwfc	___xxtofl@arg+1,f,c
  6233  0028A4  2212               	addwfc	___xxtofl@arg+2,f,c
  6234  0028A6  2213               	addwfc	___xxtofl@arg+3,f,c
  6235  0028A8  90D8               	bcf	status,0,c
  6236  0028AA  3213               	rrcf	___xxtofl@arg+3,f,c
  6237  0028AC  3212               	rrcf	___xxtofl@arg+2,f,c
  6238  0028AE  3211               	rrcf	___xxtofl@arg+1,f,c
  6239  0028B0  3210               	rrcf	___xxtofl@arg,f,c
  6240  0028B2                     l1363:
  6241  0028B2  0E00               	movlw	0
  6242  0028B4  1410               	andwf	___xxtofl@arg,w,c
  6243  0028B6  6E0A               	movwf	??___xxtofl& (0+255),c
  6244  0028B8  0E00               	movlw	0
  6245  0028BA  1411               	andwf	___xxtofl@arg+1,w,c
  6246  0028BC  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6247  0028BE  0E00               	movlw	0
  6248  0028C0  1412               	andwf	___xxtofl@arg+2,w,c
  6249  0028C2  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6250  0028C4  0EFF               	movlw	255
  6251  0028C6  1413               	andwf	___xxtofl@arg+3,w,c
  6252  0028C8  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6253  0028CA  500A               	movf	??___xxtofl,w,c
  6254  0028CC  100B               	iorwf	??___xxtofl+1,w,c
  6255  0028CE  100C               	iorwf	??___xxtofl+2,w,c
  6256  0028D0  100D               	iorwf	??___xxtofl+3,w,c
  6257  0028D2  B4D8               	btfsc	status,2,c
  6258  0028D4  D007               	goto	l7152
  6259  0028D6  D7E1               	goto	l7144
  6260  0028D8                     l7150:
  6261  0028D8  060F               	decf	___xxtofl@exp,f,c
  6262  0028DA  90D8               	bcf	status,0,c
  6263  0028DC  3610               	rlcf	___xxtofl@arg,f,c
  6264  0028DE  3611               	rlcf	___xxtofl@arg+1,f,c
  6265  0028E0  3612               	rlcf	___xxtofl@arg+2,f,c
  6266  0028E2  3613               	rlcf	___xxtofl@arg+3,f,c
  6267  0028E4                     l7152:
  6268  0028E4  BE12               	btfsc	___xxtofl@arg+2,7,c
  6269  0028E6  D003               	goto	u7890
  6270  0028E8  0E02               	movlw	2
  6271  0028EA  600F               	cpfslt	___xxtofl@exp,c
  6272  0028EC  D7F5               	goto	l7150
  6273  0028EE                     u7890:
  6274  0028EE  A00F               	btfss	___xxtofl@exp,0,c
  6275  0028F0  9E12               	bcf	___xxtofl@arg+2,7,c
  6276  0028F2  90D8               	bcf	status,0,c
  6277  0028F4  320F               	rrcf	___xxtofl@exp,f,c
  6278  0028F6  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6279  0028FA  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6280  0028FC  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6281  0028FE  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6282  002900  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6283  002904  6A0C               	clrf	??___xxtofl+2,c
  6284  002906  6A0B               	clrf	??___xxtofl+1,c
  6285  002908  6A0A               	clrf	??___xxtofl,c
  6286  00290A  500A               	movf	??___xxtofl,w,c
  6287  00290C  1210               	iorwf	___xxtofl@arg,f,c
  6288  00290E  500B               	movf	??___xxtofl+1,w,c
  6289  002910  1211               	iorwf	___xxtofl@arg+1,f,c
  6290  002912  500C               	movf	??___xxtofl+2,w,c
  6291  002914  1212               	iorwf	___xxtofl@arg+2,f,c
  6292  002916  500D               	movf	??___xxtofl+3,w,c
  6293  002918  1213               	iorwf	___xxtofl@arg+3,f,c
  6294  00291A  500E               	movf	___xxtofl@sign,w,c
  6295  00291C  A4D8               	btfss	status,2,c
  6296  00291E  AE09               	btfss	___xxtofl@val+3,7,c
  6297  002920  D001               	goto	l7168
  6298  002922  8E13               	bsf	___xxtofl@arg+3,7,c
  6299  002924                     l7168:
  6300  002924  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6301  002928  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6302  00292C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6303  002930  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6304  002934  0012               	return		;funcret
  6305  002936                     __end_of___xxtofl:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function ___fltol *****************
  6309 ;; Defined at:
  6310 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  f1              4   77[COMRAM] unsigned char 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  exp1            1   86[COMRAM] unsigned char 
  6315 ;;  sign1           1   85[COMRAM] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  4   77[COMRAM] long 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;Total ram usage:       10 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    2
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_set_pwm_duty_cycle
  6336 ;;		_errorCorrectedMove
  6337 ;;		_PIDCorrectedMove
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text24
  6342  002C6A                     __ptext24:
  6343                           	opt callstack 0
  6344  002C6A                     ___fltol:
  6345                           	opt callstack 24
  6346                           
  6347                           ;incstack = 0
  6348  002C6A  3450               	rlcf	___fltol@f1+2,w,c
  6349  002C6C  3451               	rlcf	___fltol@f1+3,w,c
  6350  002C6E  6E57               	movwf	___fltol@exp1,c
  6351  002C70  5057               	movf	___fltol@exp1,w,c
  6352  002C72  A4D8               	btfss	status,2,c
  6353  002C74  D009               	goto	l7088
  6354  002C76                     u7760:
  6355  002C76  0E00               	movlw	0
  6356  002C78  6E4E               	movwf	?___fltol,c
  6357  002C7A  0E00               	movlw	0
  6358  002C7C  6E4F               	movwf	?___fltol+1,c
  6359  002C7E  0E00               	movlw	0
  6360  002C80  6E50               	movwf	?___fltol+2,c
  6361  002C82  0E00               	movlw	0
  6362  002C84  6E51               	movwf	?___fltol+3,c
  6363  002C86  0012               	return	
  6364  002C88                     l7088:
  6365  002C88  C04E  F052         	movff	___fltol@f1,??___fltol
  6366  002C8C  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  6367  002C90  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  6368  002C94  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  6369  002C98  0E20               	movlw	32
  6370  002C9A  D005               	goto	u7770
  6371  002C9C                     u7775:
  6372  002C9C  90D8               	bcf	status,0,c
  6373  002C9E  3255               	rrcf	??___fltol+3,f,c
  6374  002CA0  3254               	rrcf	??___fltol+2,f,c
  6375  002CA2  3253               	rrcf	??___fltol+1,f,c
  6376  002CA4  3252               	rrcf	??___fltol,f,c
  6377  002CA6                     u7770:
  6378  002CA6  2EE8               	decfsz	wreg,f,c
  6379  002CA8  D7F9               	goto	u7775
  6380  002CAA  5052               	movf	??___fltol,w,c
  6381  002CAC  6E56               	movwf	___fltol@sign1,c
  6382  002CAE  8E50               	bsf	___fltol@f1+2,7,c
  6383  002CB0  0EFF               	movlw	255
  6384  002CB2  164E               	andwf	___fltol@f1,f,c
  6385  002CB4  0EFF               	movlw	255
  6386  002CB6  164F               	andwf	___fltol@f1+1,f,c
  6387  002CB8  0EFF               	movlw	255
  6388  002CBA  1650               	andwf	___fltol@f1+2,f,c
  6389  002CBC  0E00               	movlw	0
  6390  002CBE  1651               	andwf	___fltol@f1+3,f,c
  6391  002CC0  0E96               	movlw	150
  6392  002CC2  5E57               	subwf	___fltol@exp1,f,c
  6393  002CC4  AE57               	btfss	___fltol@exp1,7,c
  6394  002CC6  D00D               	goto	l7108
  6395  002CC8  5057               	movf	___fltol@exp1,w,c
  6396  002CCA  0A80               	xorlw	128
  6397  002CCC  0F97               	addlw	151
  6398  002CCE  A0D8               	btfss	status,0,c
  6399  002CD0  D7D2               	goto	u7760
  6400  002CD2                     l7104:
  6401  002CD2  90D8               	bcf	status,0,c
  6402  002CD4  3251               	rrcf	___fltol@f1+3,f,c
  6403  002CD6  3250               	rrcf	___fltol@f1+2,f,c
  6404  002CD8  324F               	rrcf	___fltol@f1+1,f,c
  6405  002CDA  324E               	rrcf	___fltol@f1,f,c
  6406  002CDC  3E57               	incfsz	___fltol@exp1,f,c
  6407  002CDE  D7F9               	goto	l7104
  6408  002CE0  D00D               	goto	u7810
  6409  002CE2                     l7108:
  6410  002CE2  0E1F               	movlw	31
  6411  002CE4  6457               	cpfsgt	___fltol@exp1,c
  6412  002CE6  D007               	goto	l7116
  6413  002CE8  D7C6               	goto	u7760
  6414  002CEA                     l7114:
  6415  002CEA  90D8               	bcf	status,0,c
  6416  002CEC  364E               	rlcf	___fltol@f1,f,c
  6417  002CEE  364F               	rlcf	___fltol@f1+1,f,c
  6418  002CF0  3650               	rlcf	___fltol@f1+2,f,c
  6419  002CF2  3651               	rlcf	___fltol@f1+3,f,c
  6420  002CF4  0657               	decf	___fltol@exp1,f,c
  6421  002CF6                     l7116:
  6422  002CF6  5057               	movf	___fltol@exp1,w,c
  6423  002CF8  A4D8               	btfss	status,2,c
  6424  002CFA  D7F7               	goto	l7114
  6425  002CFC                     u7810:
  6426  002CFC  5056               	movf	___fltol@sign1,w,c
  6427  002CFE  B4D8               	btfsc	status,2,c
  6428  002D00  D008               	goto	l7122
  6429  002D02  1E51               	comf	___fltol@f1+3,f,c
  6430  002D04  1E50               	comf	___fltol@f1+2,f,c
  6431  002D06  1E4F               	comf	___fltol@f1+1,f,c
  6432  002D08  6C4E               	negf	___fltol@f1,c
  6433  002D0A  0E00               	movlw	0
  6434  002D0C  224F               	addwfc	___fltol@f1+1,f,c
  6435  002D0E  2250               	addwfc	___fltol@f1+2,f,c
  6436  002D10  2251               	addwfc	___fltol@f1+3,f,c
  6437  002D12                     l7122:
  6438  002D12  C04E  F04E         	movff	___fltol@f1,?___fltol
  6439  002D16  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  6440  002D1A  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  6441  002D1E  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  6442  002D22  0012               	return		;funcret
  6443  002D24                     __end_of___fltol:
  6444                           	opt callstack 0
  6445                           
  6446 ;; *************** function ___flmul *****************
  6447 ;; Defined at:
  6448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  b               4   19[COMRAM] long 
  6451 ;;  a               4   23[COMRAM] long 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  prod            4   38[COMRAM] struct .
  6454 ;;  grs             4   33[COMRAM] unsigned long 
  6455 ;;  temp            2   42[COMRAM] struct .
  6456 ;;  bexp            1   37[COMRAM] unsigned char 
  6457 ;;  aexp            1   32[COMRAM] unsigned char 
  6458 ;;  sign            1   31[COMRAM] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  4   19[COMRAM] unsigned char 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0, prodl, prodh
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6468 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;Total ram usage:       25 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    2
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_set_pwm_duty_cycle
  6479 ;;		_errorCorrectedMove
  6480 ;;		_PIDCorrectedMove
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text25
  6485  0010DC                     __ptext25:
  6486                           	opt callstack 0
  6487  0010DC                     ___flmul:
  6488                           	opt callstack 24
  6489                           
  6490                           ;incstack = 0
  6491  0010DC  5017               	movf	___flmul@b+3,w,c
  6492  0010DE  0B80               	andlw	128
  6493  0010E0  6E20               	movwf	___flmul@sign,c
  6494  0010E2  5017               	movf	___flmul@b+3,w,c
  6495  0010E4  2417               	addwf	___flmul@b+3,w,c
  6496  0010E6  6E26               	movwf	___flmul@bexp,c
  6497  0010E8  BE16               	btfsc	___flmul@b+2,7,c
  6498  0010EA  8026               	bsf	___flmul@bexp,0,c
  6499  0010EC  5026               	movf	___flmul@bexp,w,c
  6500  0010EE  B4D8               	btfsc	status,2,c
  6501  0010F0  D00D               	goto	l6944
  6502  0010F2  2826               	incf	___flmul@bexp,w,c
  6503  0010F4  A4D8               	btfss	status,2,c
  6504  0010F6  D008               	goto	l6942
  6505  0010F8  0E00               	movlw	0
  6506  0010FA  6E14               	movwf	___flmul@b,c
  6507  0010FC  0E00               	movlw	0
  6508  0010FE  6E15               	movwf	___flmul@b+1,c
  6509  001100  0E00               	movlw	0
  6510  001102  6E16               	movwf	___flmul@b+2,c
  6511  001104  0E00               	movlw	0
  6512  001106  6E17               	movwf	___flmul@b+3,c
  6513  001108                     l6942:
  6514  001108  8E16               	bsf	___flmul@b+2,7,c
  6515  00110A  D008               	goto	l6946
  6516  00110C                     l6944:
  6517  00110C  0E00               	movlw	0
  6518  00110E  6E14               	movwf	___flmul@b,c
  6519  001110  0E00               	movlw	0
  6520  001112  6E15               	movwf	___flmul@b+1,c
  6521  001114  0E00               	movlw	0
  6522  001116  6E16               	movwf	___flmul@b+2,c
  6523  001118  0E00               	movlw	0
  6524  00111A  6E17               	movwf	___flmul@b+3,c
  6525  00111C                     l6946:
  6526  00111C  501B               	movf	___flmul@a+3,w,c
  6527  00111E  0B80               	andlw	128
  6528  001120  1A20               	xorwf	___flmul@sign,f,c
  6529  001122  501B               	movf	___flmul@a+3,w,c
  6530  001124  241B               	addwf	___flmul@a+3,w,c
  6531  001126  6E21               	movwf	___flmul@aexp,c
  6532  001128  BE1A               	btfsc	___flmul@a+2,7,c
  6533  00112A  8021               	bsf	___flmul@aexp,0,c
  6534  00112C  5021               	movf	___flmul@aexp,w,c
  6535  00112E  B4D8               	btfsc	status,2,c
  6536  001130  D00D               	goto	l6962
  6537  001132  2821               	incf	___flmul@aexp,w,c
  6538  001134  A4D8               	btfss	status,2,c
  6539  001136  D008               	goto	l6960
  6540  001138  0E00               	movlw	0
  6541  00113A  6E18               	movwf	___flmul@a,c
  6542  00113C  0E00               	movlw	0
  6543  00113E  6E19               	movwf	___flmul@a+1,c
  6544  001140  0E00               	movlw	0
  6545  001142  6E1A               	movwf	___flmul@a+2,c
  6546  001144  0E00               	movlw	0
  6547  001146  6E1B               	movwf	___flmul@a+3,c
  6548  001148                     l6960:
  6549  001148  8E1A               	bsf	___flmul@a+2,7,c
  6550  00114A  D008               	goto	l1315
  6551  00114C                     l6962:
  6552  00114C  0E00               	movlw	0
  6553  00114E  6E18               	movwf	___flmul@a,c
  6554  001150  0E00               	movlw	0
  6555  001152  6E19               	movwf	___flmul@a+1,c
  6556  001154  0E00               	movlw	0
  6557  001156  6E1A               	movwf	___flmul@a+2,c
  6558  001158  0E00               	movlw	0
  6559  00115A  6E1B               	movwf	___flmul@a+3,c
  6560  00115C                     l1315:
  6561  00115C  5021               	movf	___flmul@aexp,w,c
  6562  00115E  B4D8               	btfsc	status,2,c
  6563  001160  D003               	goto	u7590
  6564  001162  5026               	movf	___flmul@bexp,w,c
  6565  001164  A4D8               	btfss	status,2,c
  6566  001166  D009               	goto	l6970
  6567  001168                     u7590:
  6568  001168  0E00               	movlw	0
  6569  00116A  6E14               	movwf	?___flmul,c
  6570  00116C  0E00               	movlw	0
  6571  00116E  6E15               	movwf	?___flmul+1,c
  6572  001170  0E00               	movlw	0
  6573  001172  6E16               	movwf	?___flmul+2,c
  6574  001174  0E00               	movlw	0
  6575  001176  6E17               	movwf	?___flmul+3,c
  6576  001178  0012               	return	
  6577  00117A                     l6970:
  6578  00117A  501A               	movf	___flmul@a+2,w,c
  6579  00117C  0214               	mulwf	___flmul@b,c
  6580  00117E  CFF3 F02B          	movff	prodl,___flmul@temp
  6581  001182  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6582  001186  502B               	movf	___flmul@temp,w,c
  6583  001188  6E22               	movwf	___flmul@grs,c
  6584  00118A  6A23               	clrf	___flmul@grs+1,c
  6585  00118C  6A24               	clrf	___flmul@grs+2,c
  6586  00118E  6A25               	clrf	___flmul@grs+3,c
  6587  001190  502C               	movf	___flmul@temp+1,w,c
  6588  001192  6E27               	movwf	___flmul@prod,c
  6589  001194  6A28               	clrf	___flmul@prod+1,c
  6590  001196  6A29               	clrf	___flmul@prod+2,c
  6591  001198  6A2A               	clrf	___flmul@prod+3,c
  6592  00119A  5019               	movf	___flmul@a+1,w,c
  6593  00119C  0215               	mulwf	___flmul@b+1,c
  6594  00119E  CFF3 F02B          	movff	prodl,___flmul@temp
  6595  0011A2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6596  0011A6  502B               	movf	___flmul@temp,w,c
  6597  0011A8  2622               	addwf	___flmul@grs,f,c
  6598  0011AA  0E00               	movlw	0
  6599  0011AC  2223               	addwfc	___flmul@grs+1,f,c
  6600  0011AE  2224               	addwfc	___flmul@grs+2,f,c
  6601  0011B0  2225               	addwfc	___flmul@grs+3,f,c
  6602  0011B2  502C               	movf	___flmul@temp+1,w,c
  6603  0011B4  2627               	addwf	___flmul@prod,f,c
  6604  0011B6  0E00               	movlw	0
  6605  0011B8  2228               	addwfc	___flmul@prod+1,f,c
  6606  0011BA  2229               	addwfc	___flmul@prod+2,f,c
  6607  0011BC  222A               	addwfc	___flmul@prod+3,f,c
  6608  0011BE  5018               	movf	___flmul@a,w,c
  6609  0011C0  0216               	mulwf	___flmul@b+2,c
  6610  0011C2  CFF3 F02B          	movff	prodl,___flmul@temp
  6611  0011C6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6612  0011CA  502B               	movf	___flmul@temp,w,c
  6613  0011CC  2622               	addwf	___flmul@grs,f,c
  6614  0011CE  0E00               	movlw	0
  6615  0011D0  2223               	addwfc	___flmul@grs+1,f,c
  6616  0011D2  2224               	addwfc	___flmul@grs+2,f,c
  6617  0011D4  2225               	addwfc	___flmul@grs+3,f,c
  6618  0011D6  502C               	movf	___flmul@temp+1,w,c
  6619  0011D8  2627               	addwf	___flmul@prod,f,c
  6620  0011DA  0E00               	movlw	0
  6621  0011DC  2228               	addwfc	___flmul@prod+1,f,c
  6622  0011DE  2229               	addwfc	___flmul@prod+2,f,c
  6623  0011E0  222A               	addwfc	___flmul@prod+3,f,c
  6624  0011E2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6625  0011E6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6626  0011EA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6627  0011EE  6A22               	clrf	___flmul@grs,c
  6628  0011F0  5018               	movf	___flmul@a,w,c
  6629  0011F2  0215               	mulwf	___flmul@b+1,c
  6630  0011F4  CFF3 F02B          	movff	prodl,___flmul@temp
  6631  0011F8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6632  0011FC  502B               	movf	___flmul@temp,w,c
  6633  0011FE  2622               	addwf	___flmul@grs,f,c
  6634  001200  502C               	movf	___flmul@temp+1,w,c
  6635  001202  2223               	addwfc	___flmul@grs+1,f,c
  6636  001204  0E00               	movlw	0
  6637  001206  2224               	addwfc	___flmul@grs+2,f,c
  6638  001208  0E00               	movlw	0
  6639  00120A  2225               	addwfc	___flmul@grs+3,f,c
  6640  00120C  5019               	movf	___flmul@a+1,w,c
  6641  00120E  0214               	mulwf	___flmul@b,c
  6642  001210  CFF3 F02B          	movff	prodl,___flmul@temp
  6643  001214  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6644  001218  502B               	movf	___flmul@temp,w,c
  6645  00121A  2622               	addwf	___flmul@grs,f,c
  6646  00121C  502C               	movf	___flmul@temp+1,w,c
  6647  00121E  2223               	addwfc	___flmul@grs+1,f,c
  6648  001220  0E00               	movlw	0
  6649  001222  2224               	addwfc	___flmul@grs+2,f,c
  6650  001224  0E00               	movlw	0
  6651  001226  2225               	addwfc	___flmul@grs+3,f,c
  6652  001228  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6653  00122C  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6654  001230  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6655  001234  6A22               	clrf	___flmul@grs,c
  6656  001236  5018               	movf	___flmul@a,w,c
  6657  001238  0214               	mulwf	___flmul@b,c
  6658  00123A  CFF3 F02B          	movff	prodl,___flmul@temp
  6659  00123E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6660  001242  502B               	movf	___flmul@temp,w,c
  6661  001244  2622               	addwf	___flmul@grs,f,c
  6662  001246  502C               	movf	___flmul@temp+1,w,c
  6663  001248  2223               	addwfc	___flmul@grs+1,f,c
  6664  00124A  0E00               	movlw	0
  6665  00124C  2224               	addwfc	___flmul@grs+2,f,c
  6666  00124E  0E00               	movlw	0
  6667  001250  2225               	addwfc	___flmul@grs+3,f,c
  6668  001252  501A               	movf	___flmul@a+2,w,c
  6669  001254  0215               	mulwf	___flmul@b+1,c
  6670  001256  CFF3 F02B          	movff	prodl,___flmul@temp
  6671  00125A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6672  00125E  502B               	movf	___flmul@temp,w,c
  6673  001260  2627               	addwf	___flmul@prod,f,c
  6674  001262  502C               	movf	___flmul@temp+1,w,c
  6675  001264  2228               	addwfc	___flmul@prod+1,f,c
  6676  001266  0E00               	movlw	0
  6677  001268  2229               	addwfc	___flmul@prod+2,f,c
  6678  00126A  0E00               	movlw	0
  6679  00126C  222A               	addwfc	___flmul@prod+3,f,c
  6680  00126E  5019               	movf	___flmul@a+1,w,c
  6681  001270  0216               	mulwf	___flmul@b+2,c
  6682  001272  CFF3 F02B          	movff	prodl,___flmul@temp
  6683  001276  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6684  00127A  502B               	movf	___flmul@temp,w,c
  6685  00127C  2627               	addwf	___flmul@prod,f,c
  6686  00127E  502C               	movf	___flmul@temp+1,w,c
  6687  001280  2228               	addwfc	___flmul@prod+1,f,c
  6688  001282  0E00               	movlw	0
  6689  001284  2229               	addwfc	___flmul@prod+2,f,c
  6690  001286  0E00               	movlw	0
  6691  001288  222A               	addwfc	___flmul@prod+3,f,c
  6692  00128A  501A               	movf	___flmul@a+2,w,c
  6693  00128C  0216               	mulwf	___flmul@b+2,c
  6694  00128E  CFF3 F02B          	movff	prodl,___flmul@temp
  6695  001292  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6696  001296  502B               	movf	___flmul@temp,w,c
  6697  001298  6E1C               	movwf	??___flmul& (0+255),c
  6698  00129A  502C               	movf	___flmul@temp+1,w,c
  6699  00129C  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6700  00129E  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6701  0012A0  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6702  0012A2  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6703  0012A6  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6704  0012AA  C01C  F01D         	movff	??___flmul,??___flmul+1
  6705  0012AE  6A1C               	clrf	??___flmul,c
  6706  0012B0  501C               	movf	??___flmul,w,c
  6707  0012B2  2627               	addwf	___flmul@prod,f,c
  6708  0012B4  501D               	movf	??___flmul+1,w,c
  6709  0012B6  2228               	addwfc	___flmul@prod+1,f,c
  6710  0012B8  501E               	movf	??___flmul+2,w,c
  6711  0012BA  2229               	addwfc	___flmul@prod+2,f,c
  6712  0012BC  501F               	movf	??___flmul+3,w,c
  6713  0012BE  222A               	addwfc	___flmul@prod+3,f,c
  6714  0012C0  C022  F01C         	movff	___flmul@grs,??___flmul
  6715  0012C4  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6716  0012C8  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6717  0012CC  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6718  0012D0  0E19               	movlw	25
  6719  0012D2  D005               	goto	u7600
  6720  0012D4                     u7605:
  6721  0012D4  90D8               	bcf	status,0,c
  6722  0012D6  321F               	rrcf	??___flmul+3,f,c
  6723  0012D8  321E               	rrcf	??___flmul+2,f,c
  6724  0012DA  321D               	rrcf	??___flmul+1,f,c
  6725  0012DC  321C               	rrcf	??___flmul,f,c
  6726  0012DE                     u7600:
  6727  0012DE  2EE8               	decfsz	wreg,f,c
  6728  0012E0  D7F9               	goto	u7605
  6729  0012E2  501C               	movf	??___flmul,w,c
  6730  0012E4  2627               	addwf	___flmul@prod,f,c
  6731  0012E6  501D               	movf	??___flmul+1,w,c
  6732  0012E8  2228               	addwfc	___flmul@prod+1,f,c
  6733  0012EA  501E               	movf	??___flmul+2,w,c
  6734  0012EC  2229               	addwfc	___flmul@prod+2,f,c
  6735  0012EE  501F               	movf	??___flmul+3,w,c
  6736  0012F0  222A               	addwfc	___flmul@prod+3,f,c
  6737  0012F2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6738  0012F6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6739  0012FA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6740  0012FE  6A22               	clrf	___flmul@grs,c
  6741  001300  5021               	movf	___flmul@aexp,w,c
  6742  001302  C026  F01C         	movff	___flmul@bexp,??___flmul
  6743  001306  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6744  001308  261C               	addwf	??___flmul,f,c
  6745  00130A  0E00               	movlw	0
  6746  00130C  221D               	addwfc	??___flmul+1,f,c
  6747  00130E  0E82               	movlw	130
  6748  001310  241C               	addwf	??___flmul,w,c
  6749  001312  6E2B               	movwf	___flmul@temp,c
  6750  001314  0EFF               	movlw	255
  6751  001316  201D               	addwfc	??___flmul+1,w,c
  6752  001318  6E2C               	movwf	___flmul@temp+1,c
  6753  00131A  D00F               	goto	l7018
  6754  00131C                     l7012:
  6755  00131C  90D8               	bcf	status,0,c
  6756  00131E  3627               	rlcf	___flmul@prod,f,c
  6757  001320  3628               	rlcf	___flmul@prod+1,f,c
  6758  001322  3629               	rlcf	___flmul@prod+2,f,c
  6759  001324  362A               	rlcf	___flmul@prod+3,f,c
  6760  001326  BE25               	btfsc	___flmul@grs+3,7,c
  6761  001328  8027               	bsf	___flmul@prod,0,c
  6762  00132A  90D8               	bcf	status,0,c
  6763  00132C  3622               	rlcf	___flmul@grs,f,c
  6764  00132E  3623               	rlcf	___flmul@grs+1,f,c
  6765  001330  3624               	rlcf	___flmul@grs+2,f,c
  6766  001332  3625               	rlcf	___flmul@grs+3,f,c
  6767  001334  062B               	decf	___flmul@temp,f,c
  6768  001336  A0D8               	btfss	status,0,c
  6769  001338  062C               	decf	___flmul@temp+1,f,c
  6770  00133A                     l7018:
  6771  00133A  AE29               	btfss	___flmul@prod+2,7,c
  6772  00133C  D7EF               	goto	l7012
  6773  00133E  0E00               	movlw	0
  6774  001340  6E21               	movwf	___flmul@aexp,c
  6775  001342  AE25               	btfss	___flmul@grs+3,7,c
  6776  001344  D017               	goto	l1324
  6777  001346  0EFF               	movlw	255
  6778  001348  1422               	andwf	___flmul@grs,w,c
  6779  00134A  6E1C               	movwf	??___flmul& (0+255),c
  6780  00134C  0EFF               	movlw	255
  6781  00134E  1423               	andwf	___flmul@grs+1,w,c
  6782  001350  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6783  001352  0EFF               	movlw	255
  6784  001354  1424               	andwf	___flmul@grs+2,w,c
  6785  001356  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6786  001358  0E7F               	movlw	127
  6787  00135A  1425               	andwf	___flmul@grs+3,w,c
  6788  00135C  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6789  00135E  501C               	movf	??___flmul,w,c
  6790  001360  101D               	iorwf	??___flmul+1,w,c
  6791  001362  101E               	iorwf	??___flmul+2,w,c
  6792  001364  101F               	iorwf	??___flmul+3,w,c
  6793  001366  B4D8               	btfsc	status,2,c
  6794  001368  D003               	goto	l1325
  6795  00136A                     u7640:
  6796  00136A  0E01               	movlw	1
  6797  00136C  6E21               	movwf	___flmul@aexp,c
  6798  00136E  D002               	goto	l1324
  6799  001370                     l1325:
  6800  001370  B027               	btfsc	___flmul@prod,0,c
  6801  001372  D7FB               	goto	u7640
  6802  001374                     l1324:
  6803  001374  5021               	movf	___flmul@aexp,w,c
  6804  001376  B4D8               	btfsc	status,2,c
  6805  001378  D01F               	goto	l7038
  6806  00137A  0E01               	movlw	1
  6807  00137C  2627               	addwf	___flmul@prod,f,c
  6808  00137E  0E00               	movlw	0
  6809  001380  2228               	addwfc	___flmul@prod+1,f,c
  6810  001382  2229               	addwfc	___flmul@prod+2,f,c
  6811  001384  222A               	addwfc	___flmul@prod+3,f,c
  6812  001386  A02A               	btfss	___flmul@prod+3,0,c
  6813  001388  D017               	goto	l7038
  6814  00138A  C027  F01C         	movff	___flmul@prod,??___flmul
  6815  00138E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6816  001392  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6817  001396  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6818  00139A  341F               	rlcf	??___flmul+3,w,c
  6819  00139C  321F               	rrcf	??___flmul+3,f,c
  6820  00139E  321E               	rrcf	??___flmul+2,f,c
  6821  0013A0  321D               	rrcf	??___flmul+1,f,c
  6822  0013A2  321C               	rrcf	??___flmul,f,c
  6823  0013A4  C01C  F027         	movff	??___flmul,___flmul@prod
  6824  0013A8  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6825  0013AC  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6826  0013B0  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6827  0013B4  4A2B               	infsnz	___flmul@temp,f,c
  6828  0013B6  2A2C               	incf	___flmul@temp+1,f,c
  6829  0013B8                     l7038:
  6830  0013B8  BE2C               	btfsc	___flmul@temp+1,7,c
  6831  0013BA  D00D               	goto	l7042
  6832  0013BC  502C               	movf	___flmul@temp+1,w,c
  6833  0013BE  E103               	bnz	u7680
  6834  0013C0  282B               	incf	___flmul@temp,w,c
  6835  0013C2  A0D8               	btfss	status,0,c
  6836  0013C4  D008               	goto	l7042
  6837  0013C6                     u7680:
  6838  0013C6  0E00               	movlw	0
  6839  0013C8  6E27               	movwf	___flmul@prod,c
  6840  0013CA  0E00               	movlw	0
  6841  0013CC  6E28               	movwf	___flmul@prod+1,c
  6842  0013CE  0E80               	movlw	128
  6843  0013D0  6E29               	movwf	___flmul@prod+2,c
  6844  0013D2  0E7F               	movlw	127
  6845  0013D4  D020               	goto	L10
  6846  0013D6                     l7042:
  6847  0013D6  BE2C               	btfsc	___flmul@temp+1,7,c
  6848  0013D8  D005               	goto	u7690
  6849  0013DA  502C               	movf	___flmul@temp+1,w,c
  6850  0013DC  E10E               	bnz	l1332
  6851  0013DE  042B               	decf	___flmul@temp,w,c
  6852  0013E0  B0D8               	btfsc	status,0,c
  6853  0013E2  D00B               	goto	l1332
  6854  0013E4                     u7690:
  6855  0013E4  0E00               	movlw	0
  6856  0013E6  6E27               	movwf	___flmul@prod,c
  6857  0013E8  0E00               	movlw	0
  6858  0013EA  6E28               	movwf	___flmul@prod+1,c
  6859  0013EC  0E00               	movlw	0
  6860  0013EE  6E29               	movwf	___flmul@prod+2,c
  6861  0013F0  0E00               	movlw	0
  6862  0013F2  6E2A               	movwf	___flmul@prod+3,c
  6863  0013F4  0E00               	movlw	0
  6864  0013F6  6E20               	movwf	___flmul@sign,c
  6865  0013F8  D00F               	goto	l7054
  6866  0013FA                     l1332:
  6867  0013FA  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6868  0013FE  0EFF               	movlw	255
  6869  001400  1627               	andwf	___flmul@prod,f,c
  6870  001402  0EFF               	movlw	255
  6871  001404  1628               	andwf	___flmul@prod+1,f,c
  6872  001406  0E7F               	movlw	127
  6873  001408  1629               	andwf	___flmul@prod+2,f,c
  6874  00140A  0E00               	movlw	0
  6875  00140C  162A               	andwf	___flmul@prod+3,f,c
  6876  00140E  B026               	btfsc	___flmul@bexp,0,c
  6877  001410  8E29               	bsf	___flmul@prod+2,7,c
  6878  001412  90D8               	bcf	status,0,c
  6879  001414  3026               	rrcf	___flmul@bexp,w,c
  6880  001416                     L10:
  6881  001416  6E2A               	movwf	___flmul@prod+3,c
  6882  001418                     l7054:
  6883  001418  5020               	movf	___flmul@sign,w,c
  6884  00141A  122A               	iorwf	___flmul@prod+3,f,c
  6885  00141C  C027  F014         	movff	___flmul@prod,?___flmul
  6886  001420  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6887  001424  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6888  001428  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6889  00142C  0012               	return		;funcret
  6890  00142E                     __end_of___flmul:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function ___flge *****************
  6894 ;; Defined at:
  6895 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  ff1             4    5[COMRAM] unsigned char 
  6898 ;;  ff2             4    9[COMRAM] unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;		None               void
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:       12 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    2
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_set_pwm_duty_cycle
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text26
  6925  002B9A                     __ptext26:
  6926                           	opt callstack 0
  6927  002B9A                     ___flge:
  6928                           	opt callstack 24
  6929                           
  6930                           ;incstack = 0
  6931  002B9A  0E00               	movlw	0
  6932  002B9C  1406               	andwf	___flge@ff1,w,c
  6933  002B9E  6E0E               	movwf	??___flge& (0+255),c
  6934  002BA0  0E00               	movlw	0
  6935  002BA2  1407               	andwf	___flge@ff1+1,w,c
  6936  002BA4  6E0F               	movwf	(??___flge+1)& (0+255),c
  6937  002BA6  0E80               	movlw	128
  6938  002BA8  1408               	andwf	___flge@ff1+2,w,c
  6939  002BAA  6E10               	movwf	(??___flge+2)& (0+255),c
  6940  002BAC  0E7F               	movlw	127
  6941  002BAE  1409               	andwf	___flge@ff1+3,w,c
  6942  002BB0  6E11               	movwf	(??___flge+3)& (0+255),c
  6943  002BB2  500E               	movf	??___flge,w,c
  6944  002BB4  100F               	iorwf	??___flge+1,w,c
  6945  002BB6  1010               	iorwf	??___flge+2,w,c
  6946  002BB8  1011               	iorwf	??___flge+3,w,c
  6947  002BBA  A4D8               	btfss	status,2,c
  6948  002BBC  D008               	goto	l7064
  6949  002BBE  0E00               	movlw	0
  6950  002BC0  6E06               	movwf	___flge@ff1,c
  6951  002BC2  0E00               	movlw	0
  6952  002BC4  6E07               	movwf	___flge@ff1+1,c
  6953  002BC6  0E00               	movlw	0
  6954  002BC8  6E08               	movwf	___flge@ff1+2,c
  6955  002BCA  0E00               	movlw	0
  6956  002BCC  6E09               	movwf	___flge@ff1+3,c
  6957  002BCE                     l7064:
  6958  002BCE  0E00               	movlw	0
  6959  002BD0  140A               	andwf	___flge@ff2,w,c
  6960  002BD2  6E0E               	movwf	??___flge& (0+255),c
  6961  002BD4  0E00               	movlw	0
  6962  002BD6  140B               	andwf	___flge@ff2+1,w,c
  6963  002BD8  6E0F               	movwf	(??___flge+1)& (0+255),c
  6964  002BDA  0E80               	movlw	128
  6965  002BDC  140C               	andwf	___flge@ff2+2,w,c
  6966  002BDE  6E10               	movwf	(??___flge+2)& (0+255),c
  6967  002BE0  0E7F               	movlw	127
  6968  002BE2  140D               	andwf	___flge@ff2+3,w,c
  6969  002BE4  6E11               	movwf	(??___flge+3)& (0+255),c
  6970  002BE6  500E               	movf	??___flge,w,c
  6971  002BE8  100F               	iorwf	??___flge+1,w,c
  6972  002BEA  1010               	iorwf	??___flge+2,w,c
  6973  002BEC  1011               	iorwf	??___flge+3,w,c
  6974  002BEE  A4D8               	btfss	status,2,c
  6975  002BF0  D008               	goto	l7068
  6976  002BF2  0E00               	movlw	0
  6977  002BF4  6E0A               	movwf	___flge@ff2,c
  6978  002BF6  0E00               	movlw	0
  6979  002BF8  6E0B               	movwf	___flge@ff2+1,c
  6980  002BFA  0E00               	movlw	0
  6981  002BFC  6E0C               	movwf	___flge@ff2+2,c
  6982  002BFE  0E00               	movlw	0
  6983  002C00  6E0D               	movwf	___flge@ff2+3,c
  6984  002C02                     l7068:
  6985  002C02  AE09               	btfss	___flge@ff1+3,7,c
  6986  002C04  D009               	goto	l7072
  6987  002C06  6C06               	negf	___flge@ff1,c
  6988  002C08  1E07               	comf	___flge@ff1+1,f,c
  6989  002C0A  B0D8               	btfsc	status,0,c
  6990  002C0C  2A07               	incf	___flge@ff1+1,f,c
  6991  002C0E  1E08               	comf	___flge@ff1+2,f,c
  6992  002C10  B0D8               	btfsc	status,0,c
  6993  002C12  2A08               	incf	___flge@ff1+2,f,c
  6994  002C14  0E80               	movlw	128
  6995  002C16  5609               	subfwb	___flge@ff1+3,f,c
  6996  002C18                     l7072:
  6997  002C18  AE0D               	btfss	___flge@ff2+3,7,c
  6998  002C1A  D009               	goto	l966
  6999  002C1C  6C0A               	negf	___flge@ff2,c
  7000  002C1E  1E0B               	comf	___flge@ff2+1,f,c
  7001  002C20  B0D8               	btfsc	status,0,c
  7002  002C22  2A0B               	incf	___flge@ff2+1,f,c
  7003  002C24  1E0C               	comf	___flge@ff2+2,f,c
  7004  002C26  B0D8               	btfsc	status,0,c
  7005  002C28  2A0C               	incf	___flge@ff2+2,f,c
  7006  002C2A  0E80               	movlw	128
  7007  002C2C  560D               	subfwb	___flge@ff2+3,f,c
  7008  002C2E                     l966:
  7009  002C2E  0E00               	movlw	0
  7010  002C30  1A06               	xorwf	___flge@ff1,f,c
  7011  002C32  0E00               	movlw	0
  7012  002C34  1A07               	xorwf	___flge@ff1+1,f,c
  7013  002C36  0E00               	movlw	0
  7014  002C38  1A08               	xorwf	___flge@ff1+2,f,c
  7015  002C3A  0E80               	movlw	128
  7016  002C3C  1A09               	xorwf	___flge@ff1+3,f,c
  7017  002C3E  0E00               	movlw	0
  7018  002C40  1A0A               	xorwf	___flge@ff2,f,c
  7019  002C42  0E00               	movlw	0
  7020  002C44  1A0B               	xorwf	___flge@ff2+1,f,c
  7021  002C46  0E00               	movlw	0
  7022  002C48  1A0C               	xorwf	___flge@ff2+2,f,c
  7023  002C4A  0E80               	movlw	128
  7024  002C4C  1A0D               	xorwf	___flge@ff2+3,f,c
  7025  002C4E  500A               	movf	___flge@ff2,w,c
  7026  002C50  5C06               	subwf	___flge@ff1,w,c
  7027  002C52  500B               	movf	___flge@ff2+1,w,c
  7028  002C54  5807               	subwfb	___flge@ff1+1,w,c
  7029  002C56  500C               	movf	___flge@ff2+2,w,c
  7030  002C58  5808               	subwfb	___flge@ff1+2,w,c
  7031  002C5A  500D               	movf	___flge@ff2+3,w,c
  7032  002C5C  5809               	subwfb	___flge@ff1+3,w,c
  7033  002C5E  B0D8               	btfsc	status,0,c
  7034  002C60  D002               	goto	l7078
  7035  002C62  90D8               	bcf	status,0,c
  7036  002C64  0012               	return	
  7037  002C66                     l7078:
  7038  002C66  80D8               	bsf	status,0,c
  7039  002C68  0012               	return		;funcret
  7040  002C6A                     __end_of___flge:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function ___fldiv *****************
  7044 ;; Defined at:
  7045 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  b               4   44[COMRAM] unsigned char 
  7048 ;;  a               4   48[COMRAM] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  grs             4   63[COMRAM] unsigned long 
  7051 ;;  rem             4   56[COMRAM] unsigned long 
  7052 ;;  new_exp         2   61[COMRAM] short 
  7053 ;;  aexp            1   68[COMRAM] unsigned char 
  7054 ;;  bexp            1   67[COMRAM] unsigned char 
  7055 ;;  sign            1   60[COMRAM] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  4   44[COMRAM] unsigned char 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7065 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;Total ram usage:       25 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    2
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_set_pwm_duty_cycle
  7076 ;;		_errorCorrectedMove
  7077 ;;		_PIDCorrectedMove
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text27
  7082  0019FE                     __ptext27:
  7083                           	opt callstack 0
  7084  0019FE                     ___fldiv:
  7085                           	opt callstack 24
  7086                           
  7087                           ;incstack = 0
  7088  0019FE  5030               	movf	___fldiv@b+3,w,c
  7089  001A00  0B80               	andlw	128
  7090  001A02  6E3D               	movwf	___fldiv@sign,c
  7091  001A04  5030               	movf	___fldiv@b+3,w,c
  7092  001A06  2430               	addwf	___fldiv@b+3,w,c
  7093  001A08  6E44               	movwf	___fldiv@bexp,c
  7094  001A0A  BE2F               	btfsc	___fldiv@b+2,7,c
  7095  001A0C  8044               	bsf	___fldiv@bexp,0,c
  7096  001A0E  5044               	movf	___fldiv@bexp,w,c
  7097  001A10  B4D8               	btfsc	status,2,c
  7098  001A12  D00D               	goto	l6808
  7099  001A14  2844               	incf	___fldiv@bexp,w,c
  7100  001A16  A4D8               	btfss	status,2,c
  7101  001A18  D008               	goto	l6804
  7102  001A1A  0E00               	movlw	0
  7103  001A1C  6E2D               	movwf	___fldiv@b,c
  7104  001A1E  0E00               	movlw	0
  7105  001A20  6E2E               	movwf	___fldiv@b+1,c
  7106  001A22  0E00               	movlw	0
  7107  001A24  6E2F               	movwf	___fldiv@b+2,c
  7108  001A26  0E00               	movlw	0
  7109  001A28  6E30               	movwf	___fldiv@b+3,c
  7110  001A2A                     l6804:
  7111  001A2A  8E2F               	bsf	___fldiv@b+2,7,c
  7112  001A2C  D006               	goto	L11
  7113  001A2E                     l6808:
  7114  001A2E  0E00               	movlw	0
  7115  001A30  6E2D               	movwf	___fldiv@b,c
  7116  001A32  0E00               	movlw	0
  7117  001A34  6E2E               	movwf	___fldiv@b+1,c
  7118  001A36  0E00               	movlw	0
  7119  001A38  6E2F               	movwf	___fldiv@b+2,c
  7120  001A3A                     L11:
  7121  001A3A  0E00               	movlw	0
  7122  001A3C  6E30               	movwf	___fldiv@b+3,c
  7123  001A3E  5034               	movf	___fldiv@a+3,w,c
  7124  001A40  0B80               	andlw	128
  7125  001A42  1A3D               	xorwf	___fldiv@sign,f,c
  7126  001A44  5034               	movf	___fldiv@a+3,w,c
  7127  001A46  2434               	addwf	___fldiv@a+3,w,c
  7128  001A48  6E45               	movwf	___fldiv@aexp,c
  7129  001A4A  BE33               	btfsc	___fldiv@a+2,7,c
  7130  001A4C  8045               	bsf	___fldiv@aexp,0,c
  7131  001A4E  5045               	movf	___fldiv@aexp,w,c
  7132  001A50  B4D8               	btfsc	status,2,c
  7133  001A52  D00D               	goto	l6828
  7134  001A54  2845               	incf	___fldiv@aexp,w,c
  7135  001A56  A4D8               	btfss	status,2,c
  7136  001A58  D008               	goto	l6824
  7137  001A5A  0E00               	movlw	0
  7138  001A5C  6E31               	movwf	___fldiv@a,c
  7139  001A5E  0E00               	movlw	0
  7140  001A60  6E32               	movwf	___fldiv@a+1,c
  7141  001A62  0E00               	movlw	0
  7142  001A64  6E33               	movwf	___fldiv@a+2,c
  7143  001A66  0E00               	movlw	0
  7144  001A68  6E34               	movwf	___fldiv@a+3,c
  7145  001A6A                     l6824:
  7146  001A6A  8E33               	bsf	___fldiv@a+2,7,c
  7147  001A6C  D006               	goto	L12
  7148  001A6E                     l6828:
  7149  001A6E  0E00               	movlw	0
  7150  001A70  6E31               	movwf	___fldiv@a,c
  7151  001A72  0E00               	movlw	0
  7152  001A74  6E32               	movwf	___fldiv@a+1,c
  7153  001A76  0E00               	movlw	0
  7154  001A78  6E33               	movwf	___fldiv@a+2,c
  7155  001A7A                     L12:
  7156  001A7A  0E00               	movlw	0
  7157  001A7C  6E34               	movwf	___fldiv@a+3,c
  7158  001A7E  5031               	movf	___fldiv@a,w,c
  7159  001A80  1032               	iorwf	___fldiv@a+1,w,c
  7160  001A82  1033               	iorwf	___fldiv@a+2,w,c
  7161  001A84  1034               	iorwf	___fldiv@a+3,w,c
  7162  001A86  A4D8               	btfss	status,2,c
  7163  001A88  D017               	goto	l6842
  7164  001A8A  0E00               	movlw	0
  7165  001A8C  6E2D               	movwf	___fldiv@b,c
  7166  001A8E  0E00               	movlw	0
  7167  001A90  6E2E               	movwf	___fldiv@b+1,c
  7168  001A92  0E00               	movlw	0
  7169  001A94  6E2F               	movwf	___fldiv@b+2,c
  7170  001A96  0E00               	movlw	0
  7171  001A98  6E30               	movwf	___fldiv@b+3,c
  7172  001A9A  0E80               	movlw	128
  7173  001A9C  122F               	iorwf	___fldiv@b+2,f,c
  7174  001A9E  0E7F               	movlw	127
  7175  001AA0  1230               	iorwf	___fldiv@b+3,f,c
  7176  001AA2                     l6836:
  7177  001AA2  503D               	movf	___fldiv@sign,w,c
  7178  001AA4  1230               	iorwf	___fldiv@b+3,f,c
  7179  001AA6  C02D  F02D         	movff	___fldiv@b,?___fldiv
  7180  001AAA  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  7181  001AAE  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  7182  001AB2  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  7183  001AB6  0012               	return	
  7184  001AB8                     l6842:
  7185  001AB8  5044               	movf	___fldiv@bexp,w,c
  7186  001ABA  A4D8               	btfss	status,2,c
  7187  001ABC  D009               	goto	l6850
  7188  001ABE  0E00               	movlw	0
  7189  001AC0  6E2D               	movwf	?___fldiv,c
  7190  001AC2  0E00               	movlw	0
  7191  001AC4  6E2E               	movwf	?___fldiv+1,c
  7192  001AC6  0E00               	movlw	0
  7193  001AC8  6E2F               	movwf	?___fldiv+2,c
  7194  001ACA  0E00               	movlw	0
  7195  001ACC  6E30               	movwf	?___fldiv+3,c
  7196  001ACE  0012               	return	
  7197  001AD0                     l6850:
  7198  001AD0  5045               	movf	___fldiv@aexp,w,c
  7199  001AD2  C044  F035         	movff	___fldiv@bexp,??___fldiv
  7200  001AD6  6A36               	clrf	(??___fldiv+1)& (0+255),c
  7201  001AD8  5E35               	subwf	??___fldiv,f,c
  7202  001ADA  0E00               	movlw	0
  7203  001ADC  5A36               	subwfb	??___fldiv+1,f,c
  7204  001ADE  0E7F               	movlw	127
  7205  001AE0  2435               	addwf	??___fldiv,w,c
  7206  001AE2  6E3E               	movwf	___fldiv@new_exp,c
  7207  001AE4  0E00               	movlw	0
  7208  001AE6  2036               	addwfc	??___fldiv+1,w,c
  7209  001AE8  6E3F               	movwf	___fldiv@new_exp+1,c
  7210  001AEA  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  7211  001AEE  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  7212  001AF2  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  7213  001AF6  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  7214  001AFA  0E00               	movlw	0
  7215  001AFC  6E2D               	movwf	___fldiv@b,c
  7216  001AFE  0E00               	movlw	0
  7217  001B00  6E2E               	movwf	___fldiv@b+1,c
  7218  001B02  0E00               	movlw	0
  7219  001B04  6E2F               	movwf	___fldiv@b+2,c
  7220  001B06  0E00               	movlw	0
  7221  001B08  6E30               	movwf	___fldiv@b+3,c
  7222  001B0A  0E00               	movlw	0
  7223  001B0C  6E40               	movwf	___fldiv@grs,c
  7224  001B0E  0E00               	movlw	0
  7225  001B10  6E41               	movwf	___fldiv@grs+1,c
  7226  001B12  0E00               	movlw	0
  7227  001B14  6E42               	movwf	___fldiv@grs+2,c
  7228  001B16  0E00               	movlw	0
  7229  001B18  6E43               	movwf	___fldiv@grs+3,c
  7230  001B1A  0E00               	movlw	0
  7231  001B1C  6E45               	movwf	___fldiv@aexp,c
  7232  001B1E  D028               	goto	l1285
  7233  001B20                     l6860:
  7234  001B20  5045               	movf	___fldiv@aexp,w,c
  7235  001B22  B4D8               	btfsc	status,2,c
  7236  001B24  D011               	goto	l6868
  7237  001B26  90D8               	bcf	status,0,c
  7238  001B28  3639               	rlcf	___fldiv@rem,f,c
  7239  001B2A  363A               	rlcf	___fldiv@rem+1,f,c
  7240  001B2C  363B               	rlcf	___fldiv@rem+2,f,c
  7241  001B2E  363C               	rlcf	___fldiv@rem+3,f,c
  7242  001B30  90D8               	bcf	status,0,c
  7243  001B32  362D               	rlcf	___fldiv@b,f,c
  7244  001B34  362E               	rlcf	___fldiv@b+1,f,c
  7245  001B36  362F               	rlcf	___fldiv@b+2,f,c
  7246  001B38  3630               	rlcf	___fldiv@b+3,f,c
  7247  001B3A  BE43               	btfsc	___fldiv@grs+3,7,c
  7248  001B3C  802D               	bsf	___fldiv@b,0,c
  7249  001B3E  90D8               	bcf	status,0,c
  7250  001B40  3640               	rlcf	___fldiv@grs,f,c
  7251  001B42  3641               	rlcf	___fldiv@grs+1,f,c
  7252  001B44  3642               	rlcf	___fldiv@grs+2,f,c
  7253  001B46  3643               	rlcf	___fldiv@grs+3,f,c
  7254  001B48                     l6868:
  7255  001B48  5031               	movf	___fldiv@a,w,c
  7256  001B4A  5C39               	subwf	___fldiv@rem,w,c
  7257  001B4C  5032               	movf	___fldiv@a+1,w,c
  7258  001B4E  583A               	subwfb	___fldiv@rem+1,w,c
  7259  001B50  5033               	movf	___fldiv@a+2,w,c
  7260  001B52  583B               	subwfb	___fldiv@rem+2,w,c
  7261  001B54  5034               	movf	___fldiv@a+3,w,c
  7262  001B56  583C               	subwfb	___fldiv@rem+3,w,c
  7263  001B58  A0D8               	btfss	status,0,c
  7264  001B5A  D009               	goto	l6874
  7265  001B5C  8C43               	bsf	___fldiv@grs+3,6,c
  7266  001B5E  5031               	movf	___fldiv@a,w,c
  7267  001B60  5E39               	subwf	___fldiv@rem,f,c
  7268  001B62  5032               	movf	___fldiv@a+1,w,c
  7269  001B64  5A3A               	subwfb	___fldiv@rem+1,f,c
  7270  001B66  5033               	movf	___fldiv@a+2,w,c
  7271  001B68  5A3B               	subwfb	___fldiv@rem+2,f,c
  7272  001B6A  5034               	movf	___fldiv@a+3,w,c
  7273  001B6C  5A3C               	subwfb	___fldiv@rem+3,f,c
  7274  001B6E                     l6874:
  7275  001B6E  2A45               	incf	___fldiv@aexp,f,c
  7276  001B70                     l1285:
  7277  001B70  0E19               	movlw	25
  7278  001B72  6445               	cpfsgt	___fldiv@aexp,c
  7279  001B74  D7D5               	goto	l6860
  7280  001B76  5039               	movf	___fldiv@rem,w,c
  7281  001B78  103A               	iorwf	___fldiv@rem+1,w,c
  7282  001B7A  103B               	iorwf	___fldiv@rem+2,w,c
  7283  001B7C  103C               	iorwf	___fldiv@rem+3,w,c
  7284  001B7E  B4D8               	btfsc	status,2,c
  7285  001B80  D011               	goto	l6886
  7286  001B82  8040               	bsf	___fldiv@grs,0,c
  7287  001B84  D00F               	goto	l6886
  7288  001B86                     l6880:
  7289  001B86  90D8               	bcf	status,0,c
  7290  001B88  362D               	rlcf	___fldiv@b,f,c
  7291  001B8A  362E               	rlcf	___fldiv@b+1,f,c
  7292  001B8C  362F               	rlcf	___fldiv@b+2,f,c
  7293  001B8E  3630               	rlcf	___fldiv@b+3,f,c
  7294  001B90  BE43               	btfsc	___fldiv@grs+3,7,c
  7295  001B92  802D               	bsf	___fldiv@b,0,c
  7296  001B94  90D8               	bcf	status,0,c
  7297  001B96  3640               	rlcf	___fldiv@grs,f,c
  7298  001B98  3641               	rlcf	___fldiv@grs+1,f,c
  7299  001B9A  3642               	rlcf	___fldiv@grs+2,f,c
  7300  001B9C  3643               	rlcf	___fldiv@grs+3,f,c
  7301  001B9E  063E               	decf	___fldiv@new_exp,f,c
  7302  001BA0  A0D8               	btfss	status,0,c
  7303  001BA2  063F               	decf	___fldiv@new_exp+1,f,c
  7304  001BA4                     l6886:
  7305  001BA4  AE2F               	btfss	___fldiv@b+2,7,c
  7306  001BA6  D7EF               	goto	l6880
  7307  001BA8  0E00               	movlw	0
  7308  001BAA  6E45               	movwf	___fldiv@aexp,c
  7309  001BAC  AE43               	btfss	___fldiv@grs+3,7,c
  7310  001BAE  D017               	goto	l1296
  7311  001BB0  0EFF               	movlw	255
  7312  001BB2  1440               	andwf	___fldiv@grs,w,c
  7313  001BB4  6E35               	movwf	??___fldiv& (0+255),c
  7314  001BB6  0EFF               	movlw	255
  7315  001BB8  1441               	andwf	___fldiv@grs+1,w,c
  7316  001BBA  6E36               	movwf	(??___fldiv+1)& (0+255),c
  7317  001BBC  0EFF               	movlw	255
  7318  001BBE  1442               	andwf	___fldiv@grs+2,w,c
  7319  001BC0  6E37               	movwf	(??___fldiv+2)& (0+255),c
  7320  001BC2  0E7F               	movlw	127
  7321  001BC4  1443               	andwf	___fldiv@grs+3,w,c
  7322  001BC6  6E38               	movwf	(??___fldiv+3)& (0+255),c
  7323  001BC8  5035               	movf	??___fldiv,w,c
  7324  001BCA  1036               	iorwf	??___fldiv+1,w,c
  7325  001BCC  1037               	iorwf	??___fldiv+2,w,c
  7326  001BCE  1038               	iorwf	??___fldiv+3,w,c
  7327  001BD0  B4D8               	btfsc	status,2,c
  7328  001BD2  D003               	goto	l1297
  7329  001BD4                     u7450:
  7330  001BD4  0E01               	movlw	1
  7331  001BD6  6E45               	movwf	___fldiv@aexp,c
  7332  001BD8  D002               	goto	l1296
  7333  001BDA                     l1297:
  7334  001BDA  B02D               	btfsc	___fldiv@b,0,c
  7335  001BDC  D7FB               	goto	u7450
  7336  001BDE                     l1296:
  7337  001BDE  5045               	movf	___fldiv@aexp,w,c
  7338  001BE0  B4D8               	btfsc	status,2,c
  7339  001BE2  D01F               	goto	l6906
  7340  001BE4  0E01               	movlw	1
  7341  001BE6  262D               	addwf	___fldiv@b,f,c
  7342  001BE8  0E00               	movlw	0
  7343  001BEA  222E               	addwfc	___fldiv@b+1,f,c
  7344  001BEC  222F               	addwfc	___fldiv@b+2,f,c
  7345  001BEE  2230               	addwfc	___fldiv@b+3,f,c
  7346  001BF0  A030               	btfss	___fldiv@b+3,0,c
  7347  001BF2  D017               	goto	l6906
  7348  001BF4  C02D  F035         	movff	___fldiv@b,??___fldiv
  7349  001BF8  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7350  001BFC  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7351  001C00  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7352  001C04  3438               	rlcf	??___fldiv+3,w,c
  7353  001C06  3238               	rrcf	??___fldiv+3,f,c
  7354  001C08  3237               	rrcf	??___fldiv+2,f,c
  7355  001C0A  3236               	rrcf	??___fldiv+1,f,c
  7356  001C0C  3235               	rrcf	??___fldiv,f,c
  7357  001C0E  C035  F02D         	movff	??___fldiv,___fldiv@b
  7358  001C12  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7359  001C16  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7360  001C1A  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7361  001C1E  4A3E               	infsnz	___fldiv@new_exp,f,c
  7362  001C20  2A3F               	incf	___fldiv@new_exp+1,f,c
  7363  001C22                     l6906:
  7364  001C22  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7365  001C24  D010               	goto	l6910
  7366  001C26  503F               	movf	___fldiv@new_exp+1,w,c
  7367  001C28  E103               	bnz	u7490
  7368  001C2A  283E               	incf	___fldiv@new_exp,w,c
  7369  001C2C  A0D8               	btfss	status,0,c
  7370  001C2E  D00B               	goto	l6910
  7371  001C30                     u7490:
  7372  001C30  0E00               	movlw	0
  7373  001C32  6E3F               	movwf	___fldiv@new_exp+1,c
  7374  001C34  683E               	setf	___fldiv@new_exp,c
  7375  001C36  0E00               	movlw	0
  7376  001C38  6E2D               	movwf	___fldiv@b,c
  7377  001C3A  0E00               	movlw	0
  7378  001C3C  6E2E               	movwf	___fldiv@b+1,c
  7379  001C3E  0E00               	movlw	0
  7380  001C40  6E2F               	movwf	___fldiv@b+2,c
  7381  001C42  0E00               	movlw	0
  7382  001C44  6E30               	movwf	___fldiv@b+3,c
  7383  001C46                     l6910:
  7384  001C46  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7385  001C48  D005               	goto	u7500
  7386  001C4A  503F               	movf	___fldiv@new_exp+1,w,c
  7387  001C4C  E111               	bnz	l6914
  7388  001C4E  043E               	decf	___fldiv@new_exp,w,c
  7389  001C50  B0D8               	btfsc	status,0,c
  7390  001C52  D00E               	goto	l6914
  7391  001C54                     u7500:
  7392  001C54  0E00               	movlw	0
  7393  001C56  6E3F               	movwf	___fldiv@new_exp+1,c
  7394  001C58  0E00               	movlw	0
  7395  001C5A  6E3E               	movwf	___fldiv@new_exp,c
  7396  001C5C  0E00               	movlw	0
  7397  001C5E  6E2D               	movwf	___fldiv@b,c
  7398  001C60  0E00               	movlw	0
  7399  001C62  6E2E               	movwf	___fldiv@b+1,c
  7400  001C64  0E00               	movlw	0
  7401  001C66  6E2F               	movwf	___fldiv@b+2,c
  7402  001C68  0E00               	movlw	0
  7403  001C6A  6E30               	movwf	___fldiv@b+3,c
  7404  001C6C  0E00               	movlw	0
  7405  001C6E  6E3D               	movwf	___fldiv@sign,c
  7406  001C70                     l6914:
  7407  001C70  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7408  001C74  A044               	btfss	___fldiv@bexp,0,c
  7409  001C76  D002               	goto	l6920
  7410  001C78  8E2F               	bsf	___fldiv@b+2,7,c
  7411  001C7A  D001               	goto	l6922
  7412  001C7C                     l6920:
  7413  001C7C  9E2F               	bcf	___fldiv@b+2,7,c
  7414  001C7E                     l6922:
  7415  001C7E  90D8               	bcf	status,0,c
  7416  001C80  3044               	rrcf	___fldiv@bexp,w,c
  7417  001C82  6E30               	movwf	___fldiv@b+3,c
  7418  001C84  D70E               	goto	l6836
  7419  001C86                     __end_of___fldiv:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function ___flsub *****************
  7423 ;; Defined at:
  7424 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  b               4   69[COMRAM] unsigned char 
  7427 ;;  a               4   73[COMRAM] unsigned char 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  4   69[COMRAM] unsigned char 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7439 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;Total ram usage:        8 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    3
  7446 ;; This function calls:
  7447 ;;		___fladd
  7448 ;; This function is called by:
  7449 ;;		_errorCorrectedMove
  7450 ;;		_PIDCorrectedMove
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text28
  7455  0033CA                     __ptext28:
  7456                           	opt callstack 0
  7457  0033CA                     ___flsub:
  7458                           	opt callstack 24
  7459                           
  7460                           ;incstack = 0
  7461  0033CA  0E00               	movlw	0
  7462  0033CC  1A4A               	xorwf	___flsub@a,f,c
  7463  0033CE  0E00               	movlw	0
  7464  0033D0  1A4B               	xorwf	___flsub@a+1,f,c
  7465  0033D2  0E00               	movlw	0
  7466  0033D4  1A4C               	xorwf	___flsub@a+2,f,c
  7467  0033D6  0E80               	movlw	128
  7468  0033D8  1A4D               	xorwf	___flsub@a+3,f,c
  7469  0033DA  C046  F02D         	movff	___flsub@b,___fladd@b
  7470  0033DE  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  7471  0033E2  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  7472  0033E6  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  7473  0033EA  C04A  F031         	movff	___flsub@a,___fladd@a
  7474  0033EE  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  7475  0033F2  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  7476  0033F6  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  7477  0033FA  EC17  F00A         	call	___fladd	;wreg free
  7478  0033FE  C02D  F046         	movff	?___fladd,?___flsub
  7479  003402  C02E  F047         	movff	?___fladd+1,?___flsub+1
  7480  003406  C02F  F048         	movff	?___fladd+2,?___flsub+2
  7481  00340A  C030  F049         	movff	?___fladd+3,?___flsub+3
  7482  00340E  0012               	return		;funcret
  7483  003410                     __end_of___flsub:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function ___fladd *****************
  7487 ;; Defined at:
  7488 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  b               4   44[COMRAM] unsigned char 
  7491 ;;  a               4   48[COMRAM] unsigned char 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  grs             1   59[COMRAM] unsigned char 
  7494 ;;  bexp            1   58[COMRAM] unsigned char 
  7495 ;;  aexp            1   57[COMRAM] unsigned char 
  7496 ;;  signs           1   56[COMRAM] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  4   44[COMRAM] unsigned char 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7506 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;Total ram usage:       16 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    2
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_errorCorrectedMove
  7517 ;;		___flsub
  7518 ;;		_PIDCorrectedMove
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text29
  7523  00142E                     __ptext29:
  7524                           	opt callstack 0
  7525  00142E                     ___fladd:
  7526                           	opt callstack 24
  7527                           
  7528                           ;incstack = 0
  7529  00142E  5030               	movf	___fladd@b+3,w,c
  7530  001430  0B80               	andlw	128
  7531  001432  6E39               	movwf	___fladd@signs,c
  7532  001434  5030               	movf	___fladd@b+3,w,c
  7533  001436  2430               	addwf	___fladd@b+3,w,c
  7534  001438  6E3B               	movwf	___fladd@bexp,c
  7535  00143A  BE2F               	btfsc	___fladd@b+2,7,c
  7536  00143C  803B               	bsf	___fladd@bexp,0,c
  7537  00143E  503B               	movf	___fladd@bexp,w,c
  7538  001440  B4D8               	btfsc	status,2,c
  7539  001442  D00D               	goto	l7452
  7540  001444  283B               	incf	___fladd@bexp,w,c
  7541  001446  A4D8               	btfss	status,2,c
  7542  001448  D008               	goto	l7448
  7543  00144A  0E00               	movlw	0
  7544  00144C  6E2D               	movwf	___fladd@b,c
  7545  00144E  0E00               	movlw	0
  7546  001450  6E2E               	movwf	___fladd@b+1,c
  7547  001452  0E00               	movlw	0
  7548  001454  6E2F               	movwf	___fladd@b+2,c
  7549  001456  0E00               	movlw	0
  7550  001458  6E30               	movwf	___fladd@b+3,c
  7551  00145A                     l7448:
  7552  00145A  8E2F               	bsf	___fladd@b+2,7,c
  7553  00145C  D006               	goto	L13
  7554  00145E                     l7452:
  7555  00145E  0E00               	movlw	0
  7556  001460  6E2D               	movwf	___fladd@b,c
  7557  001462  0E00               	movlw	0
  7558  001464  6E2E               	movwf	___fladd@b+1,c
  7559  001466  0E00               	movlw	0
  7560  001468  6E2F               	movwf	___fladd@b+2,c
  7561  00146A                     L13:
  7562  00146A  0E00               	movlw	0
  7563  00146C  6E30               	movwf	___fladd@b+3,c
  7564  00146E  5034               	movf	___fladd@a+3,w,c
  7565  001470  0B80               	andlw	128
  7566  001472  6E3A               	movwf	___fladd@aexp,c
  7567  001474  5039               	movf	___fladd@signs,w,c
  7568  001476  183A               	xorwf	___fladd@aexp,w,c
  7569  001478  A4D8               	btfss	status,2,c
  7570  00147A  8C39               	bsf	___fladd@signs,6,c
  7571  00147C  5034               	movf	___fladd@a+3,w,c
  7572  00147E  2434               	addwf	___fladd@a+3,w,c
  7573  001480  6E3A               	movwf	___fladd@aexp,c
  7574  001482  BE33               	btfsc	___fladd@a+2,7,c
  7575  001484  803A               	bsf	___fladd@aexp,0,c
  7576  001486  503A               	movf	___fladd@aexp,w,c
  7577  001488  B4D8               	btfsc	status,2,c
  7578  00148A  D00D               	goto	l7476
  7579  00148C  283A               	incf	___fladd@aexp,w,c
  7580  00148E  A4D8               	btfss	status,2,c
  7581  001490  D008               	goto	l7472
  7582  001492  0E00               	movlw	0
  7583  001494  6E31               	movwf	___fladd@a,c
  7584  001496  0E00               	movlw	0
  7585  001498  6E32               	movwf	___fladd@a+1,c
  7586  00149A  0E00               	movlw	0
  7587  00149C  6E33               	movwf	___fladd@a+2,c
  7588  00149E  0E00               	movlw	0
  7589  0014A0  6E34               	movwf	___fladd@a+3,c
  7590  0014A2                     l7472:
  7591  0014A2  8E33               	bsf	___fladd@a+2,7,c
  7592  0014A4  D006               	goto	L14
  7593  0014A6                     l7476:
  7594  0014A6  0E00               	movlw	0
  7595  0014A8  6E31               	movwf	___fladd@a,c
  7596  0014AA  0E00               	movlw	0
  7597  0014AC  6E32               	movwf	___fladd@a+1,c
  7598  0014AE  0E00               	movlw	0
  7599  0014B0  6E33               	movwf	___fladd@a+2,c
  7600  0014B2                     L14:
  7601  0014B2  0E00               	movlw	0
  7602  0014B4  6E34               	movwf	___fladd@a+3,c
  7603  0014B6  503B               	movf	___fladd@bexp,w,c
  7604  0014B8  5C3A               	subwf	___fladd@aexp,w,c
  7605  0014BA  B0D8               	btfsc	status,0,c
  7606  0014BC  D022               	goto	l7514
  7607  0014BE  AC39               	btfss	___fladd@signs,6,c
  7608  0014C0  D002               	goto	l7484
  7609  0014C2  0E80               	movlw	128
  7610  0014C4  1A39               	xorwf	___fladd@signs,f,c
  7611  0014C6                     l7484:
  7612  0014C6  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  7613  0014CA  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7614  0014CE  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  7615  0014D2  C02D  F03C         	movff	___fladd@b,___fladd@grs
  7616  0014D6  C031  F02D         	movff	___fladd@a,___fladd@b
  7617  0014DA  C03C  F031         	movff	___fladd@grs,___fladd@a
  7618  0014DE  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  7619  0014E2  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  7620  0014E6  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  7621  0014EA  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  7622  0014EE  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  7623  0014F2  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  7624  0014F6  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  7625  0014FA  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  7626  0014FE  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  7627  001502                     l7514:
  7628  001502  0E00               	movlw	0
  7629  001504  6E3C               	movwf	___fladd@grs,c
  7630  001506  503B               	movf	___fladd@bexp,w,c
  7631  001508  C03A  F035         	movff	___fladd@aexp,??___fladd
  7632  00150C  6A36               	clrf	(??___fladd+1)& (0+255),c
  7633  00150E  5E35               	subwf	??___fladd,f,c
  7634  001510  0E00               	movlw	0
  7635  001512  5A36               	subwfb	??___fladd+1,f,c
  7636  001514  BE36               	btfsc	??___fladd+1,7,c
  7637  001516  D02C               	goto	l1230
  7638  001518  5036               	movf	??___fladd+1,w,c
  7639  00151A  E104               	bnz	u8620
  7640  00151C  0E1A               	movlw	26
  7641  00151E  5C35               	subwf	??___fladd,w,c
  7642  001520  A0D8               	btfss	status,0,c
  7643  001522  D026               	goto	l1230
  7644  001524                     u8620:
  7645  001524  502D               	movf	___fladd@b,w,c
  7646  001526  102E               	iorwf	___fladd@b+1,w,c
  7647  001528  102F               	iorwf	___fladd@b+2,w,c
  7648  00152A  1030               	iorwf	___fladd@b+3,w,c
  7649  00152C  B4D8               	btfsc	status,2,c
  7650  00152E  D002               	goto	u8630
  7651  001530  0E01               	movlw	1
  7652  001532  D001               	goto	u8640
  7653  001534                     u8630:
  7654  001534  0E00               	movlw	0
  7655  001536                     u8640:
  7656  001536  6E3C               	movwf	___fladd@grs,c
  7657  001538  0E00               	movlw	0
  7658  00153A  6E2D               	movwf	___fladd@b,c
  7659  00153C  0E00               	movlw	0
  7660  00153E  6E2E               	movwf	___fladd@b+1,c
  7661  001540  0E00               	movlw	0
  7662  001542  6E2F               	movwf	___fladd@b+2,c
  7663  001544  0E00               	movlw	0
  7664  001546  6E30               	movwf	___fladd@b+3,c
  7665  001548  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7666  00154C  D015               	goto	u8670
  7667  00154E                     l1231:
  7668  00154E  A03C               	btfss	___fladd@grs,0,c
  7669  001550  D005               	goto	l7526
  7670  001552  90D8               	bcf	status,0,c
  7671  001554  303C               	rrcf	___fladd@grs,w,c
  7672  001556  0901               	iorlw	1
  7673  001558  6E3C               	movwf	___fladd@grs,c
  7674  00155A  D002               	goto	l7528
  7675  00155C                     l7526:
  7676  00155C  90D8               	bcf	status,0,c
  7677  00155E  323C               	rrcf	___fladd@grs,f,c
  7678  001560                     l7528:
  7679  001560  B02D               	btfsc	___fladd@b,0,c
  7680  001562  8E3C               	bsf	___fladd@grs,7,c
  7681  001564  3430               	rlcf	___fladd@b+3,w,c
  7682  001566  3230               	rrcf	___fladd@b+3,f,c
  7683  001568  322F               	rrcf	___fladd@b+2,f,c
  7684  00156A  322E               	rrcf	___fladd@b+1,f,c
  7685  00156C  322D               	rrcf	___fladd@b,f,c
  7686  00156E  2A3B               	incf	___fladd@bexp,f,c
  7687  001570                     l1230:
  7688  001570  503A               	movf	___fladd@aexp,w,c
  7689  001572  5C3B               	subwf	___fladd@bexp,w,c
  7690  001574  A0D8               	btfss	status,0,c
  7691  001576  D7EB               	goto	l1231
  7692  001578                     u8670:
  7693  001578  BC39               	btfsc	___fladd@signs,6,c
  7694  00157A  D028               	goto	l7560
  7695  00157C  503B               	movf	___fladd@bexp,w,c
  7696  00157E  A4D8               	btfss	status,2,c
  7697  001580  D009               	goto	l7542
  7698  001582  0E00               	movlw	0
  7699  001584  6E2D               	movwf	?___fladd,c
  7700  001586  0E00               	movlw	0
  7701  001588  6E2E               	movwf	?___fladd+1,c
  7702  00158A  0E00               	movlw	0
  7703  00158C  6E2F               	movwf	?___fladd+2,c
  7704  00158E  0E00               	movlw	0
  7705  001590  6E30               	movwf	?___fladd+3,c
  7706  001592  0012               	return	
  7707  001594                     l7542:
  7708  001594  5031               	movf	___fladd@a,w,c
  7709  001596  262D               	addwf	___fladd@b,f,c
  7710  001598  5032               	movf	___fladd@a+1,w,c
  7711  00159A  222E               	addwfc	___fladd@b+1,f,c
  7712  00159C  5033               	movf	___fladd@a+2,w,c
  7713  00159E  222F               	addwfc	___fladd@b+2,f,c
  7714  0015A0  5034               	movf	___fladd@a+3,w,c
  7715  0015A2  2230               	addwfc	___fladd@b+3,f,c
  7716  0015A4  A030               	btfss	___fladd@b+3,0,c
  7717  0015A6  D071               	goto	u8800
  7718  0015A8  A03C               	btfss	___fladd@grs,0,c
  7719  0015AA  D005               	goto	l7550
  7720  0015AC  90D8               	bcf	status,0,c
  7721  0015AE  303C               	rrcf	___fladd@grs,w,c
  7722  0015B0  0901               	iorlw	1
  7723  0015B2  6E3C               	movwf	___fladd@grs,c
  7724  0015B4  D002               	goto	l7552
  7725  0015B6                     l7550:
  7726  0015B6  90D8               	bcf	status,0,c
  7727  0015B8  323C               	rrcf	___fladd@grs,f,c
  7728  0015BA                     l7552:
  7729  0015BA  B02D               	btfsc	___fladd@b,0,c
  7730  0015BC  8E3C               	bsf	___fladd@grs,7,c
  7731  0015BE  3430               	rlcf	___fladd@b+3,w,c
  7732  0015C0  3230               	rrcf	___fladd@b+3,f,c
  7733  0015C2  322F               	rrcf	___fladd@b+2,f,c
  7734  0015C4  322E               	rrcf	___fladd@b+1,f,c
  7735  0015C6  322D               	rrcf	___fladd@b,f,c
  7736  0015C8  2A3B               	incf	___fladd@bexp,f,c
  7737  0015CA  D05F               	goto	u8800
  7738  0015CC                     l7560:
  7739  0015CC  5031               	movf	___fladd@a,w,c
  7740  0015CE  5C2D               	subwf	___fladd@b,w,c
  7741  0015D0  5032               	movf	___fladd@a+1,w,c
  7742  0015D2  582E               	subwfb	___fladd@b+1,w,c
  7743  0015D4  5033               	movf	___fladd@a+2,w,c
  7744  0015D6  582F               	subwfb	___fladd@b+2,w,c
  7745  0015D8  5030               	movf	___fladd@b+3,w,c
  7746  0015DA  0A80               	xorlw	128
  7747  0015DC  6E35               	movwf	??___fladd& (0+255),c
  7748  0015DE  5034               	movf	___fladd@a+3,w,c
  7749  0015E0  0A80               	xorlw	128
  7750  0015E2  5835               	subwfb	??___fladd& (0+255),w,c
  7751  0015E4  B0D8               	btfsc	status,0,c
  7752  0015E6  D025               	goto	l7570
  7753  0015E8  502D               	movf	___fladd@b,w,c
  7754  0015EA  5C31               	subwf	___fladd@a,w,c
  7755  0015EC  6E35               	movwf	??___fladd& (0+255),c
  7756  0015EE  502E               	movf	___fladd@b+1,w,c
  7757  0015F0  5832               	subwfb	___fladd@a+1,w,c
  7758  0015F2  6E36               	movwf	(??___fladd+1)& (0+255),c
  7759  0015F4  502F               	movf	___fladd@b+2,w,c
  7760  0015F6  5833               	subwfb	___fladd@a+2,w,c
  7761  0015F8  6E37               	movwf	(??___fladd+2)& (0+255),c
  7762  0015FA  5030               	movf	___fladd@b+3,w,c
  7763  0015FC  5834               	subwfb	___fladd@a+3,w,c
  7764  0015FE  6E38               	movwf	(??___fladd+3)& (0+255),c
  7765  001600  0EFF               	movlw	255
  7766  001602  2435               	addwf	??___fladd,w,c
  7767  001604  6E2D               	movwf	___fladd@b,c
  7768  001606  0EFF               	movlw	255
  7769  001608  2036               	addwfc	??___fladd+1,w,c
  7770  00160A  6E2E               	movwf	___fladd@b+1,c
  7771  00160C  0EFF               	movlw	255
  7772  00160E  2037               	addwfc	??___fladd+2,w,c
  7773  001610  6E2F               	movwf	___fladd@b+2,c
  7774  001612  0EFF               	movlw	255
  7775  001614  2038               	addwfc	??___fladd+3,w,c
  7776  001616  6E30               	movwf	___fladd@b+3,c
  7777  001618  0E80               	movlw	128
  7778  00161A  1A39               	xorwf	___fladd@signs,f,c
  7779  00161C  6C3C               	negf	___fladd@grs,c
  7780  00161E  503C               	movf	___fladd@grs,w,c
  7781  001620  A4D8               	btfss	status,2,c
  7782  001622  D00F               	goto	l1246
  7783  001624  0E01               	movlw	1
  7784  001626  262D               	addwf	___fladd@b,f,c
  7785  001628  0E00               	movlw	0
  7786  00162A  222E               	addwfc	___fladd@b+1,f,c
  7787  00162C  222F               	addwfc	___fladd@b+2,f,c
  7788  00162E  2230               	addwfc	___fladd@b+3,f,c
  7789  001630  D008               	goto	l1246
  7790  001632                     l7570:
  7791  001632  5031               	movf	___fladd@a,w,c
  7792  001634  5E2D               	subwf	___fladd@b,f,c
  7793  001636  5032               	movf	___fladd@a+1,w,c
  7794  001638  5A2E               	subwfb	___fladd@b+1,f,c
  7795  00163A  5033               	movf	___fladd@a+2,w,c
  7796  00163C  5A2F               	subwfb	___fladd@b+2,f,c
  7797  00163E  5034               	movf	___fladd@a+3,w,c
  7798  001640  5A30               	subwfb	___fladd@b+3,f,c
  7799  001642                     l1246:
  7800  001642  502D               	movf	___fladd@b,w,c
  7801  001644  102E               	iorwf	___fladd@b+1,w,c
  7802  001646  102F               	iorwf	___fladd@b+2,w,c
  7803  001648  1030               	iorwf	___fladd@b+3,w,c
  7804  00164A  A4D8               	btfss	status,2,c
  7805  00164C  D01C               	goto	l7594
  7806  00164E  503C               	movf	___fladd@grs,w,c
  7807  001650  A4D8               	btfss	status,2,c
  7808  001652  D019               	goto	l7594
  7809  001654  0E00               	movlw	0
  7810  001656  6E2D               	movwf	?___fladd,c
  7811  001658  0E00               	movlw	0
  7812  00165A  6E2E               	movwf	?___fladd+1,c
  7813  00165C  0E00               	movlw	0
  7814  00165E  6E2F               	movwf	?___fladd+2,c
  7815  001660  0E00               	movlw	0
  7816  001662  6E30               	movwf	?___fladd+3,c
  7817  001664  0012               	return	
  7818  001666                     l7578:
  7819  001666  90D8               	bcf	status,0,c
  7820  001668  362D               	rlcf	___fladd@b,f,c
  7821  00166A  362E               	rlcf	___fladd@b+1,f,c
  7822  00166C  362F               	rlcf	___fladd@b+2,f,c
  7823  00166E  3630               	rlcf	___fladd@b+3,f,c
  7824  001670  BE3C               	btfsc	___fladd@grs,7,c
  7825  001672  802D               	bsf	___fladd@b,0,c
  7826  001674  A03C               	btfss	___fladd@grs,0,c
  7827  001676  D002               	goto	l7588
  7828  001678  80D8               	bsf	status,0,c
  7829  00167A  D001               	goto	L15
  7830  00167C                     l7588:
  7831  00167C  90D8               	bcf	status,0,c
  7832  00167E                     L15:
  7833  00167E  363C               	rlcf	___fladd@grs,f,c
  7834  001680  503B               	movf	___fladd@bexp,w,c
  7835  001682  A4D8               	btfss	status,2,c
  7836  001684  063B               	decf	___fladd@bexp,f,c
  7837  001686                     l7594:
  7838  001686  AE2F               	btfss	___fladd@b+2,7,c
  7839  001688  D7EE               	goto	l7578
  7840  00168A                     u8800:
  7841  00168A  0E00               	movlw	0
  7842  00168C  6E3A               	movwf	___fladd@aexp,c
  7843  00168E  AE3C               	btfss	___fladd@grs,7,c
  7844  001690  D00B               	goto	l1255
  7845  001692  C03C  F035         	movff	___fladd@grs,??___fladd
  7846  001696  0E7F               	movlw	127
  7847  001698  1635               	andwf	??___fladd,f,c
  7848  00169A  B4D8               	btfsc	status,2,c
  7849  00169C  D003               	goto	l1256
  7850  00169E                     u8820:
  7851  00169E  0E01               	movlw	1
  7852  0016A0  6E3A               	movwf	___fladd@aexp,c
  7853  0016A2  D002               	goto	l1255
  7854  0016A4                     l1256:
  7855  0016A4  B02D               	btfsc	___fladd@b,0,c
  7856  0016A6  D7FB               	goto	u8820
  7857  0016A8                     l1255:
  7858  0016A8  503A               	movf	___fladd@aexp,w,c
  7859  0016AA  B4D8               	btfsc	status,2,c
  7860  0016AC  D020               	goto	l7614
  7861  0016AE  0E01               	movlw	1
  7862  0016B0  262D               	addwf	___fladd@b,f,c
  7863  0016B2  0E00               	movlw	0
  7864  0016B4  222E               	addwfc	___fladd@b+1,f,c
  7865  0016B6  222F               	addwfc	___fladd@b+2,f,c
  7866  0016B8  2230               	addwfc	___fladd@b+3,f,c
  7867  0016BA  A030               	btfss	___fladd@b+3,0,c
  7868  0016BC  D018               	goto	l7614
  7869  0016BE  C02D  F035         	movff	___fladd@b,??___fladd
  7870  0016C2  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  7871  0016C6  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  7872  0016CA  C030  F038         	movff	___fladd@b+3,??___fladd+3
  7873  0016CE  3438               	rlcf	??___fladd+3,w,c
  7874  0016D0  3238               	rrcf	??___fladd+3,f,c
  7875  0016D2  3237               	rrcf	??___fladd+2,f,c
  7876  0016D4  3236               	rrcf	??___fladd+1,f,c
  7877  0016D6  3235               	rrcf	??___fladd,f,c
  7878  0016D8  C035  F02D         	movff	??___fladd,___fladd@b
  7879  0016DC  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  7880  0016E0  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  7881  0016E4  C038  F030         	movff	??___fladd+3,___fladd@b+3
  7882  0016E8  283B               	incf	___fladd@bexp,w,c
  7883  0016EA  A4D8               	btfss	status,2,c
  7884  0016EC  2A3B               	incf	___fladd@bexp,f,c
  7885  0016EE                     l7614:
  7886  0016EE  283B               	incf	___fladd@bexp,w,c
  7887  0016F0  B4D8               	btfsc	status,2,c
  7888  0016F2  D003               	goto	u8880
  7889  0016F4  503B               	movf	___fladd@bexp,w,c
  7890  0016F6  A4D8               	btfss	status,2,c
  7891  0016F8  D00D               	goto	l7622
  7892  0016FA                     u8880:
  7893  0016FA  0E00               	movlw	0
  7894  0016FC  6E2D               	movwf	___fladd@b,c
  7895  0016FE  0E00               	movlw	0
  7896  001700  6E2E               	movwf	___fladd@b+1,c
  7897  001702  0E00               	movlw	0
  7898  001704  6E2F               	movwf	___fladd@b+2,c
  7899  001706  0E00               	movlw	0
  7900  001708  6E30               	movwf	___fladd@b+3,c
  7901  00170A  503B               	movf	___fladd@bexp,w,c
  7902  00170C  A4D8               	btfss	status,2,c
  7903  00170E  D002               	goto	l7622
  7904  001710  0E00               	movlw	0
  7905  001712  6E39               	movwf	___fladd@signs,c
  7906  001714                     l7622:
  7907  001714  A03B               	btfss	___fladd@bexp,0,c
  7908  001716  D002               	goto	l7626
  7909  001718  8E2F               	bsf	___fladd@b+2,7,c
  7910  00171A  D001               	goto	l7628
  7911  00171C                     l7626:
  7912  00171C  9E2F               	bcf	___fladd@b+2,7,c
  7913  00171E                     l7628:
  7914  00171E  90D8               	bcf	status,0,c
  7915  001720  303B               	rrcf	___fladd@bexp,w,c
  7916  001722  6E30               	movwf	___fladd@b+3,c
  7917  001724  BE39               	btfsc	___fladd@signs,7,c
  7918  001726  8E30               	bsf	___fladd@b+3,7,c
  7919  001728  C02D  F02D         	movff	___fladd@b,?___fladd
  7920  00172C  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  7921  001730  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  7922  001734  C030  F030         	movff	___fladd@b+3,?___fladd+3
  7923  001738  0012               	return		;funcret
  7924  00173A                     __end_of___fladd:
  7925                           	opt callstack 0
  7926                           
  7927 ;; *************** function _init_motor_PWM *****************
  7928 ;; Defined at:
  7929 ;;		line 265 in file "main.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    2
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_doOperation
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text30
  7958  003756                     __ptext30:
  7959                           	opt callstack 0
  7960  003756                     _init_motor_PWM:
  7961                           	opt callstack 27
  7962                           
  7963                           ;main.c: 273:     TRISCbits.TRISC2 = 1;
  7964                           
  7965                           ;incstack = 0
  7966  003756  8494               	bsf	3988,2,c	;volatile
  7967                           
  7968                           ;main.c: 274:     TRISCbits.TRISC1 = 1;
  7969  003758  8294               	bsf	3988,1,c	;volatile
  7970                           
  7971                           ;main.c: 277:     const unsigned long FREQUENCY = 1000;;main.c: 278:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 279:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  7972  00375A  0E9B               	movlw	155
  7973  00375C  6ECB               	movwf	4043,c	;volatile
  7974                           
  7975                           ;main.c: 282:     P1M1 = 0;
  7976  00375E  9EBD               	bcf	4029,7,c	;volatile
  7977                           
  7978                           ;main.c: 283:     P1M0 = 0;
  7979  003760  9CBD               	bcf	4029,6,c	;volatile
  7980                           
  7981                           ;main.c: 284:     CCP1M3 = 1;
  7982  003762  86BD               	bsf	4029,3,c	;volatile
  7983                           
  7984                           ;main.c: 285:     CCP1M2 = 1;
  7985  003764  84BD               	bsf	4029,2,c	;volatile
  7986                           
  7987                           ;main.c: 286:     CCP1M1 = 0;
  7988  003766  92BD               	bcf	4029,1,c	;volatile
  7989                           
  7990                           ;main.c: 287:     CCP1M0 = 0;
  7991  003768  90BD               	bcf	4029,0,c	;volatile
  7992                           
  7993                           ;main.c: 289:     CCP2M3 = 1;
  7994  00376A  86BA               	bsf	4026,3,c	;volatile
  7995                           
  7996                           ;main.c: 290:     CCP2M2 = 1;
  7997  00376C  84BA               	bsf	4026,2,c	;volatile
  7998                           
  7999                           ;main.c: 291:     CCP2M1 = 0;
  8000  00376E  92BA               	bcf	4026,1,c	;volatile
  8001                           
  8002                           ;main.c: 292:     CCP2M0 = 0;
  8003  003770  90BA               	bcf	4026,0,c	;volatile
  8004                           
  8005                           ;main.c: 295:     T2CKPS0 = 1;
  8006  003772  80CA               	bsf	4042,0,c	;volatile
  8007                           
  8008                           ;main.c: 296:     T2CKPS1 = 1;
  8009  003774  82CA               	bsf	4042,1,c	;volatile
  8010                           
  8011                           ;main.c: 299:     TMR2ON = 1;
  8012  003776  84CA               	bsf	4042,2,c	;volatile
  8013                           
  8014                           ;main.c: 302:     TRISCbits.TRISC2 = 0;
  8015  003778  9494               	bcf	3988,2,c	;volatile
  8016                           
  8017                           ;main.c: 303:     TRISCbits.TRISC1 = 0;
  8018  00377A  9294               	bcf	3988,1,c	;volatile
  8019  00377C  0012               	return		;funcret
  8020  00377E                     __end_of_init_motor_PWM:
  8021                           	opt callstack 0
  8022                           
  8023 ;; *************** function ___awmod *****************
  8024 ;; Defined at:
  8025 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  dividend        2    5[COMRAM] int 
  8028 ;;  divisor         2    7[COMRAM] int 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  sign            1   10[COMRAM] unsigned char 
  8031 ;;  counter         1    9[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  2    5[COMRAM] int 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;Total ram usage:        6 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    2
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_doOperation
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text31
  8056  003088                     __ptext31:
  8057                           	opt callstack 0
  8058  003088                     ___awmod:
  8059                           	opt callstack 27
  8060                           
  8061                           ;incstack = 0
  8062  003088  0E00               	movlw	0
  8063  00308A  6E0B               	movwf	___awmod@sign,c
  8064  00308C  AE07               	btfss	___awmod@dividend+1,7,c
  8065  00308E  D006               	goto	l8166
  8066  003090  6C06               	negf	___awmod@dividend,c
  8067  003092  1E07               	comf	___awmod@dividend+1,f,c
  8068  003094  B0D8               	btfsc	status,0,c
  8069  003096  2A07               	incf	___awmod@dividend+1,f,c
  8070  003098  0E01               	movlw	1
  8071  00309A  6E0B               	movwf	___awmod@sign,c
  8072  00309C                     l8166:
  8073  00309C  AE09               	btfss	___awmod@divisor+1,7,c
  8074  00309E  D004               	goto	l8170
  8075  0030A0  6C08               	negf	___awmod@divisor,c
  8076  0030A2  1E09               	comf	___awmod@divisor+1,f,c
  8077  0030A4  B0D8               	btfsc	status,0,c
  8078  0030A6  2A09               	incf	___awmod@divisor+1,f,c
  8079  0030A8                     l8170:
  8080  0030A8  5008               	movf	___awmod@divisor,w,c
  8081  0030AA  1009               	iorwf	___awmod@divisor+1,w,c
  8082  0030AC  B4D8               	btfsc	status,2,c
  8083  0030AE  D018               	goto	l8186
  8084  0030B0  0E01               	movlw	1
  8085  0030B2  6E0A               	movwf	___awmod@counter,c
  8086  0030B4  D004               	goto	l8176
  8087  0030B6                     l8174:
  8088  0030B6  90D8               	bcf	status,0,c
  8089  0030B8  3608               	rlcf	___awmod@divisor,f,c
  8090  0030BA  3609               	rlcf	___awmod@divisor+1,f,c
  8091  0030BC  2A0A               	incf	___awmod@counter,f,c
  8092  0030BE                     l8176:
  8093  0030BE  AE09               	btfss	___awmod@divisor+1,7,c
  8094  0030C0  D7FA               	goto	l8174
  8095  0030C2                     u9560:
  8096  0030C2  5008               	movf	___awmod@divisor,w,c
  8097  0030C4  5C06               	subwf	___awmod@dividend,w,c
  8098  0030C6  5009               	movf	___awmod@divisor+1,w,c
  8099  0030C8  5807               	subwfb	___awmod@dividend+1,w,c
  8100  0030CA  A0D8               	btfss	status,0,c
  8101  0030CC  D004               	goto	l8182
  8102  0030CE  5008               	movf	___awmod@divisor,w,c
  8103  0030D0  5E06               	subwf	___awmod@dividend,f,c
  8104  0030D2  5009               	movf	___awmod@divisor+1,w,c
  8105  0030D4  5A07               	subwfb	___awmod@dividend+1,f,c
  8106  0030D6                     l8182:
  8107  0030D6  90D8               	bcf	status,0,c
  8108  0030D8  3209               	rrcf	___awmod@divisor+1,f,c
  8109  0030DA  3208               	rrcf	___awmod@divisor,f,c
  8110  0030DC  2E0A               	decfsz	___awmod@counter,f,c
  8111  0030DE  D7F1               	goto	u9560
  8112  0030E0                     l8186:
  8113  0030E0  500B               	movf	___awmod@sign,w,c
  8114  0030E2  B4D8               	btfsc	status,2,c
  8115  0030E4  D004               	goto	l8190
  8116  0030E6  6C06               	negf	___awmod@dividend,c
  8117  0030E8  1E07               	comf	___awmod@dividend+1,f,c
  8118  0030EA  B0D8               	btfsc	status,0,c
  8119  0030EC  2A07               	incf	___awmod@dividend+1,f,c
  8120  0030EE                     l8190:
  8121  0030EE  C006  F006         	movff	___awmod@dividend,?___awmod
  8122  0030F2  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  8123  0030F6  0012               	return		;funcret
  8124  0030F8                     __end_of___awmod:
  8125                           	opt callstack 0
  8126                           
  8127 ;; *************** function _TIMER_INIT *****************
  8128 ;; Defined at:
  8129 ;;		line 218 in file "main.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    2
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_doOperation
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text32
  8158  003834                     __ptext32:
  8159                           	opt callstack 0
  8160  003834                     _TIMER_INIT:
  8161                           	opt callstack 27
  8162                           
  8163                           ;main.c: 219:     T0CONbits.TMR0ON = 0;
  8164                           
  8165                           ;incstack = 0
  8166  003834  9ED5               	bcf	4053,7,c	;volatile
  8167                           
  8168                           ;main.c: 220:     T0CONbits.T08BIT = 0;
  8169  003836  9CD5               	bcf	4053,6,c	;volatile
  8170                           
  8171                           ;main.c: 221:     T0CONbits.T0CS = 0;
  8172  003838  9AD5               	bcf	4053,5,c	;volatile
  8173                           
  8174                           ;main.c: 222:     T0CONbits.PSA = 0;
  8175  00383A  96D5               	bcf	4053,3,c	;volatile
  8176                           
  8177                           ;main.c: 223:     T0CONbits.T0PS = 0b000;
  8178  00383C  0EF8               	movlw	-8
  8179  00383E  16D5               	andwf	4053,f,c	;volatile
  8180                           
  8181                           ;main.c: 224:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  8182  003840  0EFB               	movlw	251
  8183  003842  6ED7               	movwf	4055,c	;volatile
  8184                           
  8185                           ;main.c: 225:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  8186  003844  0E1E               	movlw	30
  8187  003846  6ED6               	movwf	4054,c	;volatile
  8188                           
  8189                           ;main.c: 226:     T0CONbits.TMR0ON = 1;
  8190  003848  8ED5               	bsf	4053,7,c	;volatile
  8191                           
  8192                           ;main.c: 227:     INTCONbits.TMR0IE = 1;
  8193  00384A  8AF2               	bsf	4082,5,c	;volatile
  8194                           
  8195                           ;main.c: 229:     INTCONbits.GIE = 1;
  8196  00384C  8EF2               	bsf	4082,7,c	;volatile
  8197                           
  8198                           ;main.c: 230:     INTCONbits.PEIE = 1;
  8199  00384E  8CF2               	bsf	4082,6,c	;volatile
  8200  003850  0012               	return		;funcret
  8201  003852                     __end_of_TIMER_INIT:
  8202                           	opt callstack 0
  8203                           
  8204 ;; *************** function _doDisplayLog *****************
  8205 ;; Defined at:
  8206 ;;		line 43 in file "main.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  logNumber       2   14[BANK0 ] int 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  keyValue        1   22[BANK0 ] unsigned char 
  8211 ;;  keypress        1   20[BANK0 ] unsigned char 
  8212 ;;  currentPole     2   23[BANK0 ] int 
  8213 ;;  currentDispl    1   21[BANK0 ] enum E3250
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;Total ram usage:       13 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:   13
  8230 ;; This function calls:
  8231 ;;		___wmul
  8232 ;;		_lcdInst
  8233 ;;		_printf
  8234 ;; This function is called by:
  8235 ;;		_main
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text33
  8240  000D2C                     __ptext33:
  8241                           	opt callstack 0
  8242  000D2C                     _doDisplayLog:
  8243                           	opt callstack 17
  8244                           
  8245                           ;main.c: 44:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  8246                           
  8247                           ;incstack = 0
  8248  000D2C  0E80               	movlw	128
  8249  000D2E  EC58  F01C         	call	_lcdInst
  8250  000D32  0E07               	movlw	7
  8251  000D34  0100               	movlb	0	; () banked
  8252  000D36  6F90               	movwf	??_doDisplayLog& (0+255),b
  8253  000D38  0E7D               	movlw	125
  8254  000D3A                     u10197:
  8255  000D3A  2EE8               	decfsz	wreg,f,c
  8256  000D3C  D7FE               	bra	u10197
  8257  000D3E  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8258  000D40  D7FC               	bra	u10197
  8259                           
  8260                           ;main.c: 49:     int currentPole = 1;
  8261  000D42  0E00               	movlw	0
  8262  000D44  0100               	movlb	0	; () banked
  8263  000D46  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8264  000D48  0E01               	movlw	1
  8265  000D4A  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;main.c: 51:     enum displayStates currentDisplayState = opTime;
  8269  000D4C  0E00               	movlw	0
  8270  000D4E  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8271  000D50  D134               	goto	l8250
  8272  000D52                     l8202:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;main.c: 56:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8276  000D52  0E80               	movlw	128
  8277  000D54  EC58  F01C         	call	_lcdInst
  8278  000D58  0E07               	movlw	7
  8279  000D5A  0100               	movlb	0	; () banked
  8280  000D5C  6F90               	movwf	??_doDisplayLog& (0+255),b
  8281  000D5E  0E7D               	movlw	125
  8282  000D60                     u10207:
  8283  000D60  2EE8               	decfsz	wreg,f,c
  8284  000D62  D7FE               	bra	u10207
  8285  000D64  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8286  000D66  D7FC               	bra	u10207
  8287                           
  8288                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8289  000D68  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8290  000D6C  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8291  000D70  0E00               	movlw	0
  8292  000D72  6E09               	movwf	___wmul@multiplicand+1,c
  8293  000D74  0E60               	movlw	96
  8294  000D76  6E08               	movwf	___wmul@multiplicand,c
  8295  000D78  ECD3  F01B         	call	___wmul	;wreg free
  8296  000D7C  0E4A               	movlw	low _logs
  8297  000D7E  2406               	addwf	?___wmul,w,c
  8298  000D80  6ED9               	movwf	fsr2l,c
  8299  000D82  0E01               	movlw	high _logs
  8300  000D84  2007               	addwfc	?___wmul+1,w,c
  8301  000D86  6EDA               	movwf	fsr2h,c
  8302  000D88  CFDE F099          	movff	postinc2,_doDisplayLog$2216
  8303  000D8C  CFDD F09A          	movff	postdec2,_doDisplayLog$2216+1
  8304                           
  8305                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8306  000D90  0EE3               	movlw	low STR_1
  8307  000D92  0100               	movlb	0	; () banked
  8308  000D94  6F80               	movwf	printf@fmt& (0+255),b
  8309  000D96  0EFF               	movlw	high STR_1
  8310  000D98  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8311  000D9A  0E97               	movlw	low STR_2
  8312  000D9C  6F82               	movwf	(?_printf+2)& (0+255),b
  8313  000D9E  0EFF               	movlw	high STR_2
  8314  000DA0  6F83               	movwf	(?_printf+3)& (0+255),b
  8315  000DA2  C099  F084         	movff	_doDisplayLog$2216,?_printf+4
  8316  000DA6  C09A  F085         	movff	_doDisplayLog$2216+1,?_printf+5
  8317  000DAA  0EE8               	movlw	low (STR_1+5)
  8318  000DAC  6F86               	movwf	(?_printf+6)& (0+255),b
  8319  000DAE  0EFF               	movlw	high (STR_1+5)
  8320  000DB0  6F87               	movwf	(?_printf+7)& (0+255),b
  8321  000DB2  ECBF  F01B         	call	_printf	;wreg free
  8322  000DB6  0EC0               	movlw	192
  8323  000DB8  EC58  F01C         	call	_lcdInst
  8324                           
  8325                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8326  000DBC  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8327  000DC0  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8328  000DC4  0E00               	movlw	0
  8329  000DC6  6E09               	movwf	___wmul@multiplicand+1,c
  8330  000DC8  0E60               	movlw	96
  8331  000DCA  6E08               	movwf	___wmul@multiplicand,c
  8332  000DCC  ECD3  F01B         	call	___wmul	;wreg free
  8333  000DD0  0E4C               	movlw	low (_logs+2)
  8334  000DD2  2406               	addwf	?___wmul,w,c
  8335  000DD4  6ED9               	movwf	fsr2l,c
  8336  000DD6  0E01               	movlw	high (_logs+2)
  8337  000DD8  2007               	addwfc	?___wmul+1,w,c
  8338  000DDA  6EDA               	movwf	fsr2h,c
  8339  000DDC  CFDE F099          	movff	postinc2,_doDisplayLog$2216
  8340  000DE0  CFDD F09A          	movff	postdec2,_doDisplayLog$2216+1
  8341                           
  8342                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8343  000DE4  0EDE               	movlw	low (STR_10+4)
  8344  000DE6  0100               	movlb	0	; () banked
  8345  000DE8  6F80               	movwf	printf@fmt& (0+255),b
  8346  000DEA  0EFF               	movlw	high (STR_10+4)
  8347  000DEC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8348  000DEE  0EC4               	movlw	low STR_5
  8349  000DF0  6F82               	movwf	(?_printf+2)& (0+255),b
  8350  000DF2  0EFE               	movlw	high STR_5
  8351  000DF4  6F83               	movwf	(?_printf+3)& (0+255),b
  8352  000DF6  C099  F084         	movff	_doDisplayLog$2216,?_printf+4
  8353  000DFA  C09A  F085         	movff	_doDisplayLog$2216+1,?_printf+5
  8354  000DFE  ECBF  F01B         	call	_printf	;wreg free
  8355  000E02  0E90               	movlw	144
  8356  000E04  EC58  F01C         	call	_lcdInst
  8357                           
  8358                           ;main.c: 61:                 printf("%s","(1) POLE INFO");
  8359  000E08  0EE7               	movlw	low (STR_1+4)
  8360  000E0A  0100               	movlb	0	; () banked
  8361  000E0C  6F80               	movwf	printf@fmt& (0+255),b
  8362  000E0E  0EFF               	movlw	high (STR_1+4)
  8363  000E10  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8364  000E12  0E0D               	movlw	low STR_7
  8365  000E14  6F82               	movwf	(?_printf+2)& (0+255),b
  8366  000E16  0EFF               	movlw	high STR_7
  8367  000E18  6F83               	movwf	(?_printf+3)& (0+255),b
  8368  000E1A  ECBF  F01B         	call	_printf	;wreg free
  8369  000E1E  0ED0               	movlw	208
  8370  000E20  EC58  F01C         	call	_lcdInst
  8371                           
  8372                           ;main.c: 63:                 printf("%s","(2) SAVE & EXIT");
  8373  000E24  0EE7               	movlw	low (STR_1+4)
  8374  000E26  0100               	movlb	0	; () banked
  8375  000E28  6F80               	movwf	printf@fmt& (0+255),b
  8376  000E2A  0EFF               	movlw	high (STR_1+4)
  8377  000E2C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8378  000E2E  0EA4               	movlw	low STR_9
  8379  000E30  6F82               	movwf	(?_printf+2)& (0+255),b
  8380  000E32  0EFE               	movlw	high STR_9
  8381  000E34  6F83               	movwf	(?_printf+3)& (0+255),b
  8382  000E36  ECBF  F01B         	call	_printf	;wreg free
  8383                           
  8384                           ;main.c: 64:                 break;
  8385  000E3A  D0CE               	goto	l8252
  8386  000E3C                     l8224:
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;main.c: 66:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8390  000E3C  0E80               	movlw	128
  8391  000E3E  EC58  F01C         	call	_lcdInst
  8392  000E42  0E07               	movlw	7
  8393  000E44  0100               	movlb	0	; () banked
  8394  000E46  6F90               	movwf	??_doDisplayLog& (0+255),b
  8395  000E48  0E7D               	movlw	125
  8396  000E4A                     u10217:
  8397  000E4A  2EE8               	decfsz	wreg,f,c
  8398  000E4C  D7FE               	bra	u10217
  8399  000E4E  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8400  000E50  D7FC               	bra	u10217
  8401                           
  8402                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8403  000E52  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8404  000E56  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8405  000E5A  0E00               	movlw	0
  8406  000E5C  6E09               	movwf	___wmul@multiplicand+1,c
  8407  000E5E  0E60               	movlw	96
  8408  000E60  6E08               	movwf	___wmul@multiplicand,c
  8409  000E62  ECD3  F01B         	call	___wmul	;wreg free
  8410  000E66  0E4E               	movlw	low (_logs+4)
  8411  000E68  2406               	addwf	?___wmul,w,c
  8412  000E6A  6ED9               	movwf	fsr2l,c
  8413  000E6C  0E01               	movlw	high (_logs+4)
  8414  000E6E  2007               	addwfc	?___wmul+1,w,c
  8415  000E70  6EDA               	movwf	fsr2h,c
  8416  000E72  CFDE F099          	movff	postinc2,_doDisplayLog$2216
  8417  000E76  CFDD F09A          	movff	postdec2,_doDisplayLog$2216+1
  8418                           
  8419                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8420  000E7A  0EDA               	movlw	low STR_10
  8421  000E7C  0100               	movlb	0	; () banked
  8422  000E7E  6F80               	movwf	printf@fmt& (0+255),b
  8423  000E80  0EFF               	movlw	high STR_10
  8424  000E82  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8425  000E84  0EEA               	movlw	low STR_11
  8426  000E86  6F82               	movwf	(?_printf+2)& (0+255),b
  8427  000E88  0EFF               	movlw	high STR_11
  8428  000E8A  6F83               	movwf	(?_printf+3)& (0+255),b
  8429  000E8C  C097  F084         	movff	doDisplayLog@currentPole,?_printf+4
  8430  000E90  C098  F085         	movff	doDisplayLog@currentPole+1,?_printf+5
  8431  000E94  0EFC               	movlw	low STR_12
  8432  000E96  6F86               	movwf	(?_printf+6)& (0+255),b
  8433  000E98  0EFF               	movlw	high STR_12
  8434  000E9A  6F87               	movwf	(?_printf+7)& (0+255),b
  8435  000E9C  C099  F088         	movff	_doDisplayLog$2216,?_printf+8
  8436  000EA0  C09A  F089         	movff	_doDisplayLog$2216+1,?_printf+9
  8437  000EA4  ECBF  F01B         	call	_printf	;wreg free
  8438  000EA8  0EC0               	movlw	192
  8439  000EAA  EC58  F01C         	call	_lcdInst
  8440                           
  8441                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8442  000EAE  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8443  000EB2  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8444  000EB6  90D8               	bcf	status,0,c
  8445  000EB8  0100               	movlb	0	; () banked
  8446  000EBA  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8447  000EBC  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8448  000EBE  90D8               	bcf	status,0,c
  8449  000EC0  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8450  000EC2  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8451  000EC4  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8452  000EC8  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8453  000ECC  0E00               	movlw	0
  8454  000ECE  6E09               	movwf	___wmul@multiplicand+1,c
  8455  000ED0  0E60               	movlw	96
  8456  000ED2  6E08               	movwf	___wmul@multiplicand,c
  8457  000ED4  ECD3  F01B         	call	___wmul	;wreg free
  8458  000ED8  0E4A               	movlw	low _logs
  8459  000EDA  0100               	movlb	0	; () banked
  8460  000EDC  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8461  000EDE  0E01               	movlw	high _logs
  8462  000EE0  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8463  000EE2  0E02               	movlw	2
  8464  000EE4  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8465  000EE6  0E00               	movlw	0
  8466  000EE8  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8467  000EEA  5006               	movf	?___wmul,w,c
  8468  000EEC  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8469  000EEE  5007               	movf	?___wmul+1,w,c
  8470  000EF0  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8471  000EF2  5190               	movf	??_doDisplayLog& (0+255),w,b
  8472  000EF4  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8473  000EF6  6ED9               	movwf	fsr2l,c
  8474  000EF8  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8475  000EFA  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8476  000EFC  6EDA               	movwf	fsr2h,c
  8477  000EFE  CFDE F099          	movff	postinc2,_doDisplayLog$2216
  8478  000F02  CFDD F09A          	movff	postdec2,_doDisplayLog$2216+1
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8482  000F06  0EDE               	movlw	low (STR_10+4)
  8483  000F08  6F80               	movwf	printf@fmt& (0+255),b
  8484  000F0A  0EFF               	movlw	high (STR_10+4)
  8485  000F0C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8486  000F0E  0EF1               	movlw	low STR_14
  8487  000F10  6F82               	movwf	(?_printf+2)& (0+255),b
  8488  000F12  0EFE               	movlw	high STR_14
  8489  000F14  6F83               	movwf	(?_printf+3)& (0+255),b
  8490  000F16  C099  F084         	movff	_doDisplayLog$2216,?_printf+4
  8491  000F1A  C09A  F085         	movff	_doDisplayLog$2216+1,?_printf+5
  8492  000F1E  ECBF  F01B         	call	_printf	;wreg free
  8493  000F22  0E90               	movlw	144
  8494  000F24  EC58  F01C         	call	_lcdInst
  8495                           
  8496                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8497  000F28  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8498  000F2C  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8499  000F30  90D8               	bcf	status,0,c
  8500  000F32  0100               	movlb	0	; () banked
  8501  000F34  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8502  000F36  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8503  000F38  90D8               	bcf	status,0,c
  8504  000F3A  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8505  000F3C  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8506  000F3E  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8507  000F42  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8508  000F46  0E00               	movlw	0
  8509  000F48  6E09               	movwf	___wmul@multiplicand+1,c
  8510  000F4A  0E60               	movlw	96
  8511  000F4C  6E08               	movwf	___wmul@multiplicand,c
  8512  000F4E  ECD3  F01B         	call	___wmul	;wreg free
  8513  000F52  0E4A               	movlw	low _logs
  8514  000F54  0100               	movlb	0	; () banked
  8515  000F56  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8516  000F58  0E01               	movlw	high _logs
  8517  000F5A  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8518  000F5C  0E04               	movlw	4
  8519  000F5E  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8520  000F60  0E00               	movlw	0
  8521  000F62  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8522  000F64  5006               	movf	?___wmul,w,c
  8523  000F66  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8524  000F68  5007               	movf	?___wmul+1,w,c
  8525  000F6A  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8526  000F6C  5190               	movf	??_doDisplayLog& (0+255),w,b
  8527  000F6E  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8528  000F70  6ED9               	movwf	fsr2l,c
  8529  000F72  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8530  000F74  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8531  000F76  6EDA               	movwf	fsr2h,c
  8532  000F78  CFDE F099          	movff	postinc2,_doDisplayLog$2216
  8533  000F7C  CFDD F09A          	movff	postdec2,_doDisplayLog$2216+1
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8537  000F80  0EDE               	movlw	low (STR_10+4)
  8538  000F82  6F80               	movwf	printf@fmt& (0+255),b
  8539  000F84  0EFF               	movlw	high (STR_10+4)
  8540  000F86  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8541  000F88  0E84               	movlw	low STR_16
  8542  000F8A  6F82               	movwf	(?_printf+2)& (0+255),b
  8543  000F8C  0EFE               	movlw	high STR_16
  8544  000F8E  6F83               	movwf	(?_printf+3)& (0+255),b
  8545  000F90  C099  F084         	movff	_doDisplayLog$2216,?_printf+4
  8546  000F94  C09A  F085         	movff	_doDisplayLog$2216+1,?_printf+5
  8547  000F98  ECBF  F01B         	call	_printf	;wreg free
  8548  000F9C  0ED0               	movlw	208
  8549  000F9E  EC58  F01C         	call	_lcdInst
  8550                           
  8551                           ;main.c: 73:                 printf("%s","1<- 2-> 3MENU");
  8552  000FA2  0EE7               	movlw	low (STR_1+4)
  8553  000FA4  0100               	movlb	0	; () banked
  8554  000FA6  6F80               	movwf	printf@fmt& (0+255),b
  8555  000FA8  0EFF               	movlw	high (STR_1+4)
  8556  000FAA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8557  000FAC  0E29               	movlw	low STR_18
  8558  000FAE  6F82               	movwf	(?_printf+2)& (0+255),b
  8559  000FB0  0EFF               	movlw	high STR_18
  8560  000FB2  6F83               	movwf	(?_printf+3)& (0+255),b
  8561  000FB4  ECBF  F01B         	call	_printf	;wreg free
  8562                           
  8563                           ;main.c: 74:                 break;
  8564  000FB8  D00F               	goto	l8252
  8565  000FBA                     l8250:
  8566  000FBA  0100               	movlb	0	; () banked
  8567  000FBC  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8568  000FBE  6F90               	movwf	??_doDisplayLog& (0+255),b
  8569  000FC0  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8570                           
  8571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8572                           ; Switch size 1, requested type "simple"
  8573                           ; Number of cases is 1, Range of values is 0 to 0
  8574                           ; switch strategies available:
  8575                           ; Name         Instructions Cycles
  8576                           ; simple_byte            4     3 (average)
  8577                           ;	Chosen strategy is simple_byte
  8578  000FC2  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8579  000FC4  0A00               	xorlw	0	; case 0
  8580  000FC6  A4D8               	btfss	status,2,c
  8581  000FC8  D007               	goto	l8252
  8582                           
  8583                           ; BSR set to: 0
  8584                           ; Switch size 1, requested type "simple"
  8585                           ; Number of cases is 2, Range of values is 0 to 1
  8586                           ; switch strategies available:
  8587                           ; Name         Instructions Cycles
  8588                           ; simple_byte            7     4 (average)
  8589                           ;	Chosen strategy is simple_byte
  8590  000FCA  5190               	movf	??_doDisplayLog& (0+255),w,b
  8591  000FCC  0A00               	xorlw	0	; case 0
  8592  000FCE  B4D8               	btfsc	status,2,c
  8593  000FD0  D6C0               	goto	l8202
  8594  000FD2  0A01               	xorlw	1	; case 1
  8595  000FD4  B4D8               	btfsc	status,2,c
  8596  000FD6  D732               	goto	l8224
  8597  000FD8                     l8252:
  8598                           
  8599                           ;main.c: 77:         if(keyPressed){
  8600  000FD8  0101               	movlb	1	; () banked
  8601  000FDA  5112               	movf	_keyPressed& (0+255),w,b	;volatile
  8602  000FDC  B4D8               	btfsc	status,2,c
  8603  000FDE  D074               	goto	l8292
  8604                           
  8605                           ; BSR set to: 1
  8606                           ;main.c: 80:             keyPressed = 0;
  8607  000FE0  0E00               	movlw	0
  8608  000FE2  6F12               	movwf	_keyPressed& (0+255),b	;volatile
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;main.c: 83:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  8612  000FE4  3881               	swapf	3969,w,c	;volatile
  8613  000FE6  0B0F               	andlw	15
  8614  000FE8  0B0F               	andlw	15
  8615  000FEA  0100               	movlb	0	; () banked
  8616  000FEC  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;main.c: 84:             char keyValue = keys[keypress];
  8620  000FEE  0E61               	movlw	low _keys
  8621  000FF0  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  8622  000FF2  6EF6               	movwf	tblptrl,c
  8623  000FF4  6AF7               	clrf	tblptrh,c
  8624  000FF6  0EFE               	movlw	high _keys
  8625  000FF8  22F7               	addwfc	tblptrh,f,c
  8626  000FFA                     	if	0	;There are less than 3 active tblptr bytes
  8627  000FFA                     	endif
  8628  000FFA  0008               	tblrd		*
  8629  000FFC  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;main.c: 85:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  8633  001000  0E01               	movlw	1
  8634  001002  EC58  F01C         	call	_lcdInst
  8635  001006  0E11               	movlw	17
  8636  001008  0100               	movlb	0	; () banked
  8637  00100A  6F90               	movwf	??_doDisplayLog& (0+255),b
  8638  00100C  0E3A               	movlw	58
  8639  00100E                     u10227:
  8640  00100E  2EE8               	decfsz	wreg,f,c
  8641  001010  D7FE               	bra	u10227
  8642  001012  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8643  001014  D7FC               	bra	u10227
  8644  001016  F000               	nop	
  8645                           
  8646                           ;main.c: 86:             switch (currentDisplayState){
  8647  001018  D048               	goto	l8290
  8648  00101A                     l8264:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;main.c: 88:                     if (keyValue == '1'){
  8652  00101A  0E31               	movlw	49
  8653  00101C  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8654  00101E  A4D8               	btfss	status,2,c
  8655  001020  D003               	goto	l8268
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;main.c: 89:                         currentDisplayState = pole;
  8659  001022  0E01               	movlw	1
  8660  001024  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8661                           
  8662                           ;main.c: 90:                     } else if (keyValue == '2'){
  8663  001026  D050               	goto	l8292
  8664  001028                     l8268:
  8665                           
  8666                           ; BSR set to: 0
  8667  001028  0E32               	movlw	50
  8668  00102A  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8669  00102C  B4D8               	btfsc	status,2,c
  8670  00102E  0012               	return	
  8671  001030  D04B               	goto	l8292
  8672  001032                     l8272:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;main.c: 95:                     if (keyValue == '3'){
  8676  001032  0E33               	movlw	51
  8677  001034  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8678  001036  A4D8               	btfss	status,2,c
  8679  001038  D007               	goto	l8276
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;main.c: 96:                         currentDisplayState = opTime;
  8683  00103A  0E00               	movlw	0
  8684  00103C  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8685                           
  8686                           ;main.c: 97:                         currentPole = 1;
  8687  00103E  0E00               	movlw	0
  8688  001040  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8689  001042  0E01               	movlw	1
  8690  001044  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8691                           
  8692                           ;main.c: 99:                     } else if (keyValue == '2'){
  8693  001046  D040               	goto	l8292
  8694  001048                     l8276:
  8695                           
  8696                           ; BSR set to: 0
  8697  001048  0E32               	movlw	50
  8698  00104A  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8699  00104C  A4D8               	btfss	status,2,c
  8700  00104E  D01E               	goto	l8282
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;main.c: 100:                         if(currentPole < logs[logNumber][2]){
  8704  001050  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8705  001054  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8706  001058  0E00               	movlw	0
  8707  00105A  6E09               	movwf	___wmul@multiplicand+1,c
  8708  00105C  0E60               	movlw	96
  8709  00105E  6E08               	movwf	___wmul@multiplicand,c
  8710  001060  ECD3  F01B         	call	___wmul	;wreg free
  8711  001064  0E4E               	movlw	low (_logs+4)
  8712  001066  2406               	addwf	?___wmul,w,c
  8713  001068  6ED9               	movwf	fsr2l,c
  8714  00106A  0E01               	movlw	high (_logs+4)
  8715  00106C  2007               	addwfc	?___wmul+1,w,c
  8716  00106E  6EDA               	movwf	fsr2h,c
  8717  001070  50DE               	movf	postinc2,w,c
  8718  001072  0100               	movlb	0	; () banked
  8719  001074  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8720  001076  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8721  001078  0A80               	xorlw	128
  8722  00107A  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8723  00107C  50DE               	movf	postinc2,w,c
  8724  00107E  0A80               	xorlw	128
  8725  001080  5992               	subwfb	(??_doDisplayLog+2)& (0+255),w,b
  8726  001082  B0D8               	btfsc	status,0,c
  8727  001084  D021               	goto	l8292
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;main.c: 101:                             currentPole++;
  8731  001086  4B97               	infsnz	doDisplayLog@currentPole& (0+255),f,b
  8732  001088  2B98               	incf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8733  00108A  D01E               	goto	l8292
  8734  00108C                     l8282:
  8735                           
  8736                           ; BSR set to: 0
  8737  00108C  0E31               	movlw	49
  8738  00108E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8739  001090  B4D8               	btfsc	status,2,c
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;main.c: 104:                         if (currentPole > 1){
  8743  001092  BF98               	btfsc	(doDisplayLog@currentPole+1)& (0+255),7,b
  8744  001094  D019               	goto	l8292
  8745  001096  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8746  001098  E104               	bnz	u9660
  8747  00109A  0E02               	movlw	2
  8748  00109C  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8749  00109E  A0D8               	btfss	status,0,c
  8750  0010A0  D013               	goto	l8292
  8751  0010A2                     u9660:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;main.c: 105:                             currentPole--;
  8755  0010A2  0797               	decf	doDisplayLog@currentPole& (0+255),f,b
  8756  0010A4  A0D8               	btfss	status,0,c
  8757  0010A6  0798               	decf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8758  0010A8  D00F               	goto	l8292
  8759  0010AA                     l8290:
  8760  0010AA  0100               	movlb	0	; () banked
  8761  0010AC  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8762  0010AE  6F90               	movwf	??_doDisplayLog& (0+255),b
  8763  0010B0  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8764                           
  8765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8766                           ; Switch size 1, requested type "simple"
  8767                           ; Number of cases is 1, Range of values is 0 to 0
  8768                           ; switch strategies available:
  8769                           ; Name         Instructions Cycles
  8770                           ; simple_byte            4     3 (average)
  8771                           ;	Chosen strategy is simple_byte
  8772  0010B2  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8773  0010B4  0A00               	xorlw	0	; case 0
  8774  0010B6  A4D8               	btfss	status,2,c
  8775  0010B8  D007               	goto	l8292
  8776                           
  8777                           ; BSR set to: 0
  8778                           ; Switch size 1, requested type "simple"
  8779                           ; Number of cases is 2, Range of values is 0 to 1
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            7     4 (average)
  8783                           ;	Chosen strategy is simple_byte
  8784  0010BA  5190               	movf	??_doDisplayLog& (0+255),w,b
  8785  0010BC  0A00               	xorlw	0	; case 0
  8786  0010BE  B4D8               	btfsc	status,2,c
  8787  0010C0  D7AC               	goto	l8264
  8788  0010C2  0A01               	xorlw	1	; case 1
  8789  0010C4  B4D8               	btfsc	status,2,c
  8790  0010C6  D7B5               	goto	l8272
  8791  0010C8                     l8292:
  8792                           
  8793                           ;main.c: 113:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8794  0010C8  0E04               	movlw	4
  8795  0010CA  0100               	movlb	0	; () banked
  8796  0010CC  6F90               	movwf	??_doDisplayLog& (0+255),b
  8797  0010CE  0E3D               	movlw	61
  8798  0010D0                     u10237:
  8799  0010D0  2EE8               	decfsz	wreg,f,c
  8800  0010D2  D7FE               	bra	u10237
  8801  0010D4  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8802  0010D6  D7FC               	bra	u10237
  8803  0010D8  D000               	nop2	
  8804  0010DA  D76F               	goto	l8250
  8805  0010DC                     __end_of_doDisplayLog:
  8806                           	opt callstack 0
  8807                           
  8808 ;; *************** function _printf *****************
  8809 ;; Defined at:
  8810 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  8813 ;;		 -> STR_54(11), STR_53(11), STR_52(10), STR_51(13), 
  8814 ;;		 -> STR_49(3), STR_47(3), STR_45(3), STR_43(3), 
  8815 ;;		 -> STR_41(3), STR_39(3), STR_37(3), STR_35(3), 
  8816 ;;		 -> STR_33(3), STR_31(3), STR_29(3), STR_28(15), 
  8817 ;;		 -> STR_27(15), STR_25(3), STR_24(11), STR_23(10), 
  8818 ;;		 -> STR_22(6), STR_21(6), STR_20(3), STR_19(3), 
  8819 ;;		 -> STR_17(3), STR_15(5), STR_13(5), STR_10(9), 
  8820 ;;		 -> STR_8(3), STR_6(3), STR_4(5), STR_1(7), 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  ap              2   12[BANK0 ] PTR void [1]
  8823 ;;		 -> ?_printf(2), 
  8824 ;;  ret             2    0        int 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  2    0[BANK0 ] int 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8834 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;Total ram usage:       14 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:   12
  8841 ;; This function calls:
  8842 ;;		_vfprintf
  8843 ;; This function is called by:
  8844 ;;		_doDisplayLog
  8845 ;;		_doOperation
  8846 ;;		_main
  8847 ;;		_mainEEPROM
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text34
  8852  00377E                     __ptext34:
  8853                           	opt callstack 0
  8854  00377E                     _printf:
  8855                           	opt callstack 18
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;incstack = 0
  8859  00377E  0E82               	movlw	low (?_printf+2)
  8860  003780  0100               	movlb	0	; () banked
  8861  003782  6F8C               	movwf	printf@ap& (0+255),b
  8862  003784  0E00               	movlw	high (?_printf+2)
  8863  003786  6F8D               	movwf	(printf@ap+1)& (0+255),b
  8864                           
  8865                           ; BSR set to: 0
  8866  003788  0E00               	movlw	0
  8867  00378A  6E6D               	movwf	vfprintf@fp,c
  8868  00378C  0E00               	movlw	0
  8869  00378E  6E6E               	movwf	vfprintf@fp+1,c
  8870  003790  C080  F06F         	movff	printf@fmt,vfprintf@fmt
  8871  003794  C081  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  8872  003798  0E8C               	movlw	low printf@ap
  8873  00379A  6E71               	movwf	vfprintf@ap,c
  8874  00379C  0E00               	movlw	high printf@ap
  8875  00379E  6E72               	movwf	vfprintf@ap+1,c
  8876  0037A0  EC48  F019         	call	_vfprintf	;wreg free
  8877  0037A4  0012               	return		;funcret
  8878  0037A6                     __end_of_printf:
  8879                           	opt callstack 0
  8880                           
  8881 ;; *************** function _vfprintf *****************
  8882 ;; Defined at:
  8883 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  8886 ;;		 -> NULL(0), 
  8887 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  8888 ;;		 -> STR_54(11), STR_53(11), STR_52(10), STR_51(13), 
  8889 ;;		 -> STR_49(3), STR_47(3), STR_45(3), STR_43(3), 
  8890 ;;		 -> STR_41(3), STR_39(3), STR_37(3), STR_35(3), 
  8891 ;;		 -> STR_33(3), STR_31(3), STR_29(3), STR_28(15), 
  8892 ;;		 -> STR_27(15), STR_25(3), STR_24(11), STR_23(10), 
  8893 ;;		 -> STR_22(6), STR_21(6), STR_20(3), STR_19(3), 
  8894 ;;		 -> STR_17(3), STR_15(5), STR_13(5), STR_10(9), 
  8895 ;;		 -> STR_8(3), STR_6(3), STR_4(5), STR_1(7), 
  8896 ;;  ap              2  112[COMRAM] PTR PTR void 
  8897 ;;		 -> printf@ap(2), 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  8900 ;;		 -> STR_54(11), STR_53(11), STR_52(10), STR_51(13), 
  8901 ;;		 -> STR_49(3), STR_47(3), STR_45(3), STR_43(3), 
  8902 ;;		 -> STR_41(3), STR_39(3), STR_37(3), STR_35(3), 
  8903 ;;		 -> STR_33(3), STR_31(3), STR_29(3), STR_28(15), 
  8904 ;;		 -> STR_27(15), STR_25(3), STR_24(11), STR_23(10), 
  8905 ;;		 -> STR_22(6), STR_21(6), STR_20(3), STR_19(3), 
  8906 ;;		 -> STR_17(3), STR_15(5), STR_13(5), STR_10(9), 
  8907 ;;		 -> STR_8(3), STR_6(3), STR_4(5), STR_1(7), 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  2  108[COMRAM] int 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8917 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;Total ram usage:        8 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:   11
  8924 ;; This function calls:
  8925 ;;		_vfpfcnvrt
  8926 ;; This function is called by:
  8927 ;;		_printf
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text35
  8932  003290                     __ptext35:
  8933                           	opt callstack 0
  8934  003290                     _vfprintf:
  8935                           	opt callstack 18
  8936                           
  8937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8938                           
  8939                           ;incstack = 0
  8940  003290  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  8941  003294  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8942                           
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8944  003298  0E00               	movlw	0
  8945  00329A  0101               	movlb	1	; () banked
  8946  00329C  6F05               	movwf	(_nout+1)& (0+255),b
  8947  00329E  0E00               	movlw	0
  8948  0032A0  6F04               	movwf	_nout& (0+255),b
  8949                           
  8950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8951  0032A2  D013               	goto	l7860
  8952  0032A4                     l7858:
  8953                           
  8954                           ; BSR set to: 1
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8956  0032A4  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  8957  0032A8  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8958  0032AC  0E73               	movlw	low vfprintf@cfmt
  8959  0032AE  6E4E               	movwf	vfpfcnvrt@fmt,c
  8960  0032B0  0E00               	movlw	high vfprintf@cfmt
  8961  0032B2  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  8962  0032B4  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  8963  0032B8  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8964  0032BC  EC09  F000         	call	_vfpfcnvrt	;wreg free
  8965  0032C0  504C               	movf	?_vfpfcnvrt,w,c
  8966  0032C2  0101               	movlb	1	; () banked
  8967  0032C4  2704               	addwf	_nout& (0+255),f,b
  8968  0032C6  504D               	movf	?_vfpfcnvrt+1,w,c
  8969  0032C8  2305               	addwfc	(_nout+1)& (0+255),f,b
  8970  0032CA                     l7860:
  8971                           
  8972                           ; BSR set to: 1
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8974  0032CA  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  8975  0032CE  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8976  0032D2                     	if	0	;tblptru may be non-zero
  8977  0032D2                     	endif
  8978  0032D2                     	if	0	;tblptru may be non-zero
  8979  0032D2                     	endif
  8980  0032D2  0008               	tblrd		*
  8981  0032D4  50F5               	movf	tablat,w,c
  8982  0032D6  0900               	iorlw	0
  8983  0032D8  A4D8               	btfss	status,2,c
  8984  0032DA  D7E4               	goto	l7858
  8985                           
  8986                           ; BSR set to: 1
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8988  0032DC  C104  F06D         	movff	_nout,?_vfprintf
  8989  0032E0  C105  F06E         	movff	_nout+1,?_vfprintf+1
  8990                           
  8991                           ; BSR set to: 1
  8992  0032E4  0012               	return		;funcret
  8993  0032E6                     __end_of_vfprintf:
  8994                           	opt callstack 0
  8995                           
  8996 ;; *************** function _vfpfcnvrt *****************
  8997 ;; Defined at:
  8998 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  9001 ;;		 -> NULL(0), 
  9002 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  9003 ;;		 -> vfprintf@cfmt(2), 
  9004 ;;  ap              2   79[COMRAM] PTR PTR void 
  9005 ;;		 -> printf@ap(2), 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  llu             8   93[COMRAM] unsigned long long 
  9008 ;;  ll              8   85[COMRAM] long long 
  9009 ;;  f               4    0        long long 
  9010 ;;  vp              3    0        PTR void 
  9011 ;;  ct              3    0        unsigned char [3]
  9012 ;;  done            2  103[COMRAM] int 
  9013 ;;  cp              2  101[COMRAM] PTR unsigned char 
  9014 ;;		 -> ?_printf(2), STR_50(16), STR_48(14), STR_46(11), 
  9015 ;;		 -> STR_44(9), STR_42(16), STR_40(13), STR_38(13), 
  9016 ;;		 -> STR_36(9), STR_34(13), STR_32(14), STR_30(10), 
  9017 ;;		 -> STR_26(9), STR_18(14), STR_16(16), STR_14(14), 
  9018 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9019 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9020 ;;  i               2    0        int 
  9021 ;;  c               1  107[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2   75[COMRAM] int 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;Total ram usage:       33 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:   10
  9038 ;; This function calls:
  9039 ;;		_atoi
  9040 ;;		_ctoa
  9041 ;;		_dtoa
  9042 ;;		_fputc
  9043 ;;		_isdigit
  9044 ;;		_stoa
  9045 ;;		_xtoa
  9046 ;; This function is called by:
  9047 ;;		_vfprintf
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text36
  9052  000012                     __ptext36:
  9053                           	opt callstack 0
  9054  000012                     _vfpfcnvrt:
  9055                           	opt callstack 18
  9056                           
  9057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;incstack = 0
  9061  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9062  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9063  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  9064  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  9065  000022                     	if	0	;tblptru may be non-zero
  9066  000022                     	endif
  9067  000022                     	if	0	;tblptru may be non-zero
  9068  000022                     	endif
  9069  000022  0008               	tblrd		*
  9070  000024  50F5               	movf	tablat,w,c
  9071  000026  0A25               	xorlw	37
  9072  000028  A4D8               	btfss	status,2,c
  9073  00002A  D21B               	goto	l7770
  9074                           
  9075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9076  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9077  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9078  000034  2ADE               	incf	postinc2,f,c
  9079  000036  0E00               	movlw	0
  9080  000038  22DD               	addwfc	postdec2,f,c
  9081                           
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9083  00003A  0E00               	movlw	0
  9084  00003C  0101               	movlb	1	; () banked
  9085  00003E  6F07               	movwf	(_width+1)& (0+255),b
  9086  000040  0E00               	movlw	0
  9087  000042  6F06               	movwf	_width& (0+255),b
  9088  000044  C106  F10A         	movff	_width,_flags
  9089  000048  C107  F10B         	movff	_width+1,_flags+1
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9093  00004C  6908               	setf	_prec& (0+255),b
  9094  00004E  6909               	setf	(_prec+1)& (0+255),b
  9095                           
  9096                           ; BSR set to: 1
  9097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9098  000050  0E00               	movlw	0
  9099  000052  6E69               	movwf	vfpfcnvrt@done+1,c
  9100  000054  0E00               	movlw	0
  9101  000056  D019               	goto	L16
  9102  000058                     l7666:
  9103                           
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9105  000058  0101               	movlb	1	; () banked
  9106  00005A  810A               	bsf	_flags& (0+255),0,b
  9107  00005C                     l7668:
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9111  00005C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9112  000060  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9113  000064  2ADE               	incf	postinc2,f,c
  9114  000066  0E00               	movlw	0
  9115  000068  22DD               	addwfc	postdec2,f,c
  9116                           
  9117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9118  00006A  D032               	goto	l7692
  9119  00006C                     l7670:
  9120                           
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9122  00006C  0101               	movlb	1	; () banked
  9123  00006E  830A               	bsf	_flags& (0+255),1,b
  9124  000070  D7F5               	goto	l7668
  9125  000072                     l7674:
  9126                           
  9127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9128  000072  0101               	movlb	1	; () banked
  9129  000074  850A               	bsf	_flags& (0+255),2,b
  9130  000076  D7F2               	goto	l7668
  9131  000078                     l7678:
  9132                           
  9133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9134  000078  0101               	movlb	1	; () banked
  9135  00007A  870A               	bsf	_flags& (0+255),3,b
  9136  00007C  D7EF               	goto	l7668
  9137  00007E                     l7682:
  9138                           
  9139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9140  00007E  0101               	movlb	1	; () banked
  9141  000080  890A               	bsf	_flags& (0+255),4,b
  9142  000082  D7EC               	goto	l7668
  9143  000084                     l7686:
  9144                           
  9145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9146  000084  0E00               	movlw	0
  9147  000086  6E69               	movwf	vfpfcnvrt@done+1,c
  9148  000088  0E01               	movlw	1
  9149  00008A                     L16:
  9150  00008A  6E68               	movwf	vfpfcnvrt@done,c
  9151                           
  9152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9153  00008C  D021               	goto	l7692
  9154  00008E                     l7690:
  9155  00008E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9156  000092  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9157  000096  CFDE FFF6          	movff	postinc2,tblptrl
  9158  00009A  CFDD FFF7          	movff	postdec2,tblptrh
  9159  00009E                     	if	0	;tblptru may be non-zero
  9160  00009E                     	endif
  9161  00009E                     	if	0	;tblptru may be non-zero
  9162  00009E                     	endif
  9163  00009E  0008               	tblrd		*
  9164  0000A0  50F5               	movf	tablat,w,c
  9165  0000A2  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9166  0000A4  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  9167                           
  9168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9169                           ; Switch size 1, requested type "simple"
  9170                           ; Number of cases is 1, Range of values is 0 to 0
  9171                           ; switch strategies available:
  9172                           ; Name         Instructions Cycles
  9173                           ; simple_byte            4     3 (average)
  9174                           ;	Chosen strategy is simple_byte
  9175  0000A6  5053               	movf	??_vfpfcnvrt+1,w,c
  9176  0000A8  0A00               	xorlw	0	; case 0
  9177  0000AA  A4D8               	btfss	status,2,c
  9178  0000AC  D7EB               	goto	l7686
  9179                           
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 5, Range of values is 32 to 48
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte           16     9 (average)
  9185                           ;	Chosen strategy is simple_byte
  9186  0000AE  5052               	movf	??_vfpfcnvrt,w,c
  9187  0000B0  0A20               	xorlw	32	; case 32
  9188  0000B2  B4D8               	btfsc	status,2,c
  9189  0000B4  D7E1               	goto	l7678
  9190  0000B6  0A03               	xorlw	3	; case 35
  9191  0000B8  B4D8               	btfsc	status,2,c
  9192  0000BA  D7E1               	goto	l7682
  9193  0000BC  0A08               	xorlw	8	; case 43
  9194  0000BE  B4D8               	btfsc	status,2,c
  9195  0000C0  D7D8               	goto	l7674
  9196  0000C2  0A06               	xorlw	6	; case 45
  9197  0000C4  B4D8               	btfsc	status,2,c
  9198  0000C6  D7C8               	goto	l7666
  9199  0000C8  0A1D               	xorlw	29	; case 48
  9200  0000CA  B4D8               	btfsc	status,2,c
  9201  0000CC  D7CF               	goto	l7670
  9202  0000CE  D7DA               	goto	l7686
  9203  0000D0                     l7692:
  9204                           
  9205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9206  0000D0  5068               	movf	vfpfcnvrt@done,w,c
  9207  0000D2  1069               	iorwf	vfpfcnvrt@done+1,w,c
  9208  0000D4  B4D8               	btfsc	status,2,c
  9209  0000D6  D7DB               	goto	l7690
  9210                           
  9211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9212  0000D8  0101               	movlb	1	; () banked
  9213  0000DA  B10A               	btfsc	_flags& (0+255),0,b
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9217  0000DC  930A               	bcf	_flags& (0+255),1,b
  9218                           
  9219                           ; BSR set to: 1
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9221  0000DE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9222  0000E2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9223  0000E6  CFDE FFF6          	movff	postinc2,tblptrl
  9224  0000EA  CFDD FFF7          	movff	postdec2,tblptrh
  9225  0000EE                     	if	0	;tblptru may be non-zero
  9226  0000EE                     	endif
  9227  0000EE                     	if	0	;tblptru may be non-zero
  9228  0000EE                     	endif
  9229  0000EE  0008               	tblrd		*
  9230  0000F0  50F5               	movf	tablat,w,c
  9231  0000F2  0A2A               	xorlw	42
  9232  0000F4  A4D8               	btfss	status,2,c
  9233  0000F6  D023               	goto	l7704
  9234                           
  9235                           ; BSR set to: 1
  9236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9237  0000F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9238  0000FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9239  000100  2ADE               	incf	postinc2,f,c
  9240  000102  0E00               	movlw	0
  9241  000104  22DD               	addwfc	postdec2,f,c
  9242                           
  9243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9244  000106  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9245  00010A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9246  00010E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9247  000112  0E02               	movlw	2
  9248  000114  26DE               	addwf	postinc2,f,c
  9249  000116  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9250  00011A  0E00               	movlw	0
  9251  00011C  22DD               	addwfc	postdec2,f,c
  9252  00011E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9253  000122  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9254  000126  CFDE F106          	movff	postinc2,_width
  9255  00012A  CFDD F107          	movff	postdec2,_width+1
  9256                           
  9257                           ; BSR set to: 1
  9258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9259  00012E  AF07               	btfss	(_width+1)& (0+255),7,b
  9260  000130  D03F               	goto	u9030
  9261                           
  9262                           ; BSR set to: 1
  9263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9264  000132  810A               	bsf	_flags& (0+255),0,b
  9265                           
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9267  000134  6D06               	negf	_width& (0+255),b
  9268  000136  1F07               	comf	(_width+1)& (0+255),f,b
  9269  000138  B0D8               	btfsc	status,0,c
  9270  00013A  2B07               	incf	(_width+1)& (0+255),f,b
  9271  00013C  D039               	goto	u9030
  9272  00013E                     l7704:
  9273                           
  9274                           ; BSR set to: 1
  9275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9276  00013E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9277  000142  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9278  000146  CFDE F00D          	movff	postinc2,atoi@s
  9279  00014A  CFDD F00E          	movff	postdec2,atoi@s+1
  9280  00014E  EC9B  F014         	call	_atoi	;wreg free
  9281  000152  C00D  F106         	movff	?_atoi,_width
  9282  000156  C00E  F107         	movff	?_atoi+1,_width+1
  9283                           
  9284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9285  00015A  D007               	goto	l7708
  9286  00015C                     l7706:
  9287                           
  9288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9289  00015C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9290  000160  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9291  000164  2ADE               	incf	postinc2,f,c
  9292  000166  0E00               	movlw	0
  9293  000168  22DD               	addwfc	postdec2,f,c
  9294  00016A                     l7708:
  9295  00016A  0ED0               	movlw	208
  9296  00016C  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9297  00016E  0EFF               	movlw	255
  9298  000170  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  9299  000172  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9300  000176  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9301  00017A  CFDE FFF6          	movff	postinc2,tblptrl
  9302  00017E  CFDD FFF7          	movff	postdec2,tblptrh
  9303  000182                     	if	0	;tblptru may be non-zero
  9304  000182                     	endif
  9305  000182                     	if	0	;tblptru may be non-zero
  9306  000182                     	endif
  9307  000182  0008               	tblrd		*
  9308  000184  50F5               	movf	tablat,w,c
  9309  000186  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  9310  000188  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  9311  00018A  5052               	movf	??_vfpfcnvrt,w,c
  9312  00018C  2654               	addwf	??_vfpfcnvrt+2,f,c
  9313  00018E  5053               	movf	??_vfpfcnvrt+1,w,c
  9314  000190  2255               	addwfc	??_vfpfcnvrt+3,f,c
  9315  000192  5055               	movf	??_vfpfcnvrt+3,w,c
  9316  000194  E106               	bnz	u9010
  9317  000196  0E0A               	movlw	10
  9318  000198  5C54               	subwf	??_vfpfcnvrt+2,w,c
  9319  00019A  B0D8               	btfsc	status,0,c
  9320  00019C  D002               	goto	u9010
  9321  00019E  0E01               	movlw	1
  9322  0001A0  D001               	goto	u9020
  9323  0001A2                     u9010:
  9324  0001A2  0E00               	movlw	0
  9325  0001A4                     u9020:
  9326  0001A4  6E6A               	movwf	_vfpfcnvrt$1365,c
  9327  0001A6  6A6B               	clrf	_vfpfcnvrt$1365+1,c
  9328  0001A8  506A               	movf	_vfpfcnvrt$1365,w,c
  9329  0001AA  106B               	iorwf	_vfpfcnvrt$1365+1,w,c
  9330  0001AC  A4D8               	btfss	status,2,c
  9331  0001AE  D7D6               	goto	l7706
  9332  0001B0                     u9030:
  9333                           
  9334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  9335  0001B0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9336  0001B4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9337  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  9338  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  9339  0001C0                     	if	0	;tblptru may be non-zero
  9340  0001C0                     	endif
  9341  0001C0                     	if	0	;tblptru may be non-zero
  9342  0001C0                     	endif
  9343  0001C0  0008               	tblrd		*
  9344  0001C2  50F5               	movf	tablat,w,c
  9345  0001C4  0A63               	xorlw	99
  9346  0001C6  A4D8               	btfss	status,2,c
  9347  0001C8  D026               	goto	l7722
  9348                           
  9349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  9350  0001CA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9351  0001CE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9352  0001D2  2ADE               	incf	postinc2,f,c
  9353  0001D4  0E00               	movlw	0
  9354  0001D6  22DD               	addwfc	postdec2,f,c
  9355                           
  9356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9357  0001D8  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9358  0001DC  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9359  0001E0  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9360  0001E4  0E02               	movlw	2
  9361  0001E6  26DE               	addwf	postinc2,f,c
  9362  0001E8  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9363  0001EC  0E00               	movlw	0
  9364  0001EE  22DD               	addwfc	postdec2,f,c
  9365  0001F0  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9366  0001F4  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9367  0001F8  50DF               	movf	indf2,w,c
  9368  0001FA  6E6C               	movwf	vfpfcnvrt@c,c
  9369                           
  9370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  9371  0001FC  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  9372  000200  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9373  000204  C06C  F027         	movff	vfpfcnvrt@c,ctoa@c
  9374  000208  EC73  F019         	call	_ctoa	;wreg free
  9375  00020C  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  9376  000210  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9377  000214  0012               	return	
  9378  000216                     l7722:
  9379                           
  9380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9381  000216  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9382  00021A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9383  00021E  CFDE FFF6          	movff	postinc2,tblptrl
  9384  000222  CFDD FFF7          	movff	postdec2,tblptrh
  9385  000226                     	if	0	;tblptru may be non-zero
  9386  000226                     	endif
  9387  000226                     	if	0	;tblptru may be non-zero
  9388  000226                     	endif
  9389  000226  0008               	tblrd		*
  9390  000228  50F5               	movf	tablat,w,c
  9391  00022A  0A64               	xorlw	100
  9392  00022C  B4D8               	btfsc	status,2,c
  9393  00022E  D00D               	goto	u9060
  9394  000230  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9395  000234  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9396  000238  CFDE FFF6          	movff	postinc2,tblptrl
  9397  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  9398  000240                     	if	0	;tblptru may be non-zero
  9399  000240                     	endif
  9400  000240                     	if	0	;tblptru may be non-zero
  9401  000240                     	endif
  9402  000240  0008               	tblrd		*
  9403  000242  50F5               	movf	tablat,w,c
  9404  000244  0A69               	xorlw	105
  9405  000246  A4D8               	btfss	status,2,c
  9406  000248  D03F               	goto	l7732
  9407  00024A                     u9060:
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9410  00024A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9411  00024E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9412  000252  2ADE               	incf	postinc2,f,c
  9413  000254  0E00               	movlw	0
  9414  000256  22DD               	addwfc	postdec2,f,c
  9415                           
  9416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9417  000258  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9418  00025C  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9419  000260  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9420  000264  0E02               	movlw	2
  9421  000266  26DE               	addwf	postinc2,f,c
  9422  000268  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9423  00026C  0E00               	movlw	0
  9424  00026E  22DD               	addwfc	postdec2,f,c
  9425  000270  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9426  000274  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9427  000278  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  9428  00027C  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  9429  000280  0E00               	movlw	0
  9430  000282  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  9431  000284  0EFF               	movlw	-1
  9432  000286  6E58               	movwf	vfpfcnvrt@ll+2,c
  9433  000288  6E59               	movwf	vfpfcnvrt@ll+3,c
  9434  00028A  6E5A               	movwf	vfpfcnvrt@ll+4,c
  9435  00028C  6E5B               	movwf	vfpfcnvrt@ll+5,c
  9436  00028E  6E5C               	movwf	vfpfcnvrt@ll+6,c
  9437  000290  6E5D               	movwf	vfpfcnvrt@ll+7,c
  9438                           
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9440  000292  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9441  000296  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9442  00029A  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9443  00029E  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9444  0002A2  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9445  0002A6  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9446  0002AA  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9447  0002AE  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9448  0002B2  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9449  0002B6  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9450  0002BA  EC79  F00F         	call	_dtoa	;wreg free
  9451  0002BE  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9452  0002C2  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9453  0002C6  0012               	return	
  9454  0002C8                     l7732:
  9455                           
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9457  0002C8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9458  0002CC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9459  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  9460  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  9461  0002D8                     	if	0	;tblptru may be non-zero
  9462  0002D8                     	endif
  9463  0002D8                     	if	0	;tblptru may be non-zero
  9464  0002D8                     	endif
  9465  0002D8  0008               	tblrd		*
  9466  0002DA  50F5               	movf	tablat,w,c
  9467  0002DC  0A73               	xorlw	115
  9468  0002DE  A4D8               	btfss	status,2,c
  9469  0002E0  D02A               	goto	l7740
  9470                           
  9471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9472  0002E2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9473  0002E6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9474  0002EA  2ADE               	incf	postinc2,f,c
  9475  0002EC  0E00               	movlw	0
  9476  0002EE  22DD               	addwfc	postdec2,f,c
  9477                           
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9479  0002F0  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9480  0002F4  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9481  0002F8  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9482  0002FC  0E02               	movlw	2
  9483  0002FE  26DE               	addwf	postinc2,f,c
  9484  000300  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9485  000304  0E00               	movlw	0
  9486  000306  22DD               	addwfc	postdec2,f,c
  9487  000308  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9488  00030C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9489  000310  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  9490  000314  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  9491                           
  9492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9493  000318  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  9494  00031C  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9495  000320  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  9496  000324  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9497  000328  EC59  F013         	call	_stoa	;wreg free
  9498  00032C  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  9499  000330  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  9500  000334  0012               	return	
  9501  000336                     l7740:
  9502                           
  9503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9504  000336  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9505  00033A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9506  00033E  CFDE FFF6          	movff	postinc2,tblptrl
  9507  000342  CFDD FFF7          	movff	postdec2,tblptrh
  9508  000346                     	if	0	;tblptru may be non-zero
  9509  000346                     	endif
  9510  000346                     	if	0	;tblptru may be non-zero
  9511  000346                     	endif
  9512  000346  0008               	tblrd		*
  9513  000348  50F5               	movf	tablat,w,c
  9514  00034A  0A78               	xorlw	120
  9515  00034C  B4D8               	btfsc	status,2,c
  9516  00034E  D00D               	goto	u9090
  9517  000350  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9518  000354  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9519  000358  CFDE FFF6          	movff	postinc2,tblptrl
  9520  00035C  CFDD FFF7          	movff	postdec2,tblptrh
  9521  000360                     	if	0	;tblptru may be non-zero
  9522  000360                     	endif
  9523  000360                     	if	0	;tblptru may be non-zero
  9524  000360                     	endif
  9525  000360  0008               	tblrd		*
  9526  000362  50F5               	movf	tablat,w,c
  9527  000364  0A58               	xorlw	88
  9528  000366  A4D8               	btfss	status,2,c
  9529  000368  D04D               	goto	l7754
  9530  00036A                     u9090:
  9531                           
  9532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9533  00036A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9534  00036E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9535  000372  CFDE FFF6          	movff	postinc2,tblptrl
  9536  000376  CFDD FFF7          	movff	postdec2,tblptrh
  9537  00037A                     	if	0	;tblptru may be non-zero
  9538  00037A                     	endif
  9539  00037A                     	if	0	;tblptru may be non-zero
  9540  00037A                     	endif
  9541  00037A  0008               	tblrd		*
  9542  00037C  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  9543                           
  9544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9545  000380  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9546  000384  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9547  000388  2ADE               	incf	postinc2,f,c
  9548  00038A  0E00               	movlw	0
  9549  00038C  22DD               	addwfc	postdec2,f,c
  9550                           
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9552  00038E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9553  000392  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9554  000396  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9555  00039A  0E02               	movlw	2
  9556  00039C  26DE               	addwf	postinc2,f,c
  9557  00039E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9558  0003A2  0E00               	movlw	0
  9559  0003A4  22DD               	addwfc	postdec2,f,c
  9560  0003A6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9561  0003AA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9562  0003AE  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  9563  0003B2  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  9564  0003B6  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9565  0003BA  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9566  0003BE  6A60               	clrf	vfpfcnvrt@llu+2,c
  9567  0003C0  6A61               	clrf	vfpfcnvrt@llu+3,c
  9568  0003C2  6A62               	clrf	vfpfcnvrt@llu+4,c
  9569  0003C4  6A63               	clrf	vfpfcnvrt@llu+5,c
  9570  0003C6  6A64               	clrf	vfpfcnvrt@llu+6,c
  9571  0003C8  6A65               	clrf	vfpfcnvrt@llu+7,c
  9572                           
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9574  0003CA  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  9575  0003CE  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9576  0003D2  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  9577  0003D6  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9578  0003DA  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9579  0003DE  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9580  0003E2  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9581  0003E6  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9582  0003EA  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9583  0003EE  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9584  0003F2  C06C  F02F         	movff	vfpfcnvrt@c,xtoa@x
  9585  0003F6  EC9C  F010         	call	_xtoa	;wreg free
  9586  0003FA  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  9587  0003FE  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9588  000402  0012               	return	
  9589  000404                     l7754:
  9590                           
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9592  000404  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9593  000408  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9594  00040C  CFDE FFF6          	movff	postinc2,tblptrl
  9595  000410  CFDD FFF7          	movff	postdec2,tblptrh
  9596  000414                     	if	0	;tblptru may be non-zero
  9597  000414                     	endif
  9598  000414                     	if	0	;tblptru may be non-zero
  9599  000414                     	endif
  9600  000414  0008               	tblrd		*
  9601  000416  50F5               	movf	tablat,w,c
  9602  000418  0A25               	xorlw	37
  9603  00041A  A4D8               	btfss	status,2,c
  9604  00041C  D016               	goto	l7764
  9605                           
  9606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9607  00041E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9608  000422  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9609  000426  2ADE               	incf	postinc2,f,c
  9610  000428  0E00               	movlw	0
  9611  00042A  22DD               	addwfc	postdec2,f,c
  9612                           
  9613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9614  00042C  0E00               	movlw	0
  9615  00042E  6E0B               	movwf	fputc@c+1,c
  9616  000430  0E25               	movlw	37
  9617  000432  6E0A               	movwf	fputc@c,c
  9618  000434  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9619  000438  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9620  00043C  EC7C  F018         	call	_fputc	;wreg free
  9621  000440                     l7760:
  9622                           
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9624  000440  0E00               	movlw	0
  9625  000442  6E4D               	movwf	?_vfpfcnvrt+1,c
  9626  000444  0E01               	movlw	1
  9627  000446  6E4C               	movwf	?_vfpfcnvrt,c
  9628  000448  0012               	return	
  9629  00044A                     l7764:
  9630                           
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9632  00044A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9633  00044E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9634  000452  2ADE               	incf	postinc2,f,c
  9635  000454  0E00               	movlw	0
  9636  000456  22DD               	addwfc	postdec2,f,c
  9637                           
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9639  000458  0E00               	movlw	0
  9640  00045A  6E4D               	movwf	?_vfpfcnvrt+1,c
  9641  00045C  0E00               	movlw	0
  9642  00045E  6E4C               	movwf	?_vfpfcnvrt,c
  9643  000460  0012               	return	
  9644  000462                     l7770:
  9645                           
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9647  000462  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9648  000466  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9649  00046A  CFDE FFF6          	movff	postinc2,tblptrl
  9650  00046E  CFDD FFF7          	movff	postdec2,tblptrh
  9651  000472                     	if	0	;tblptru may be non-zero
  9652  000472                     	endif
  9653  000472                     	if	0	;tblptru may be non-zero
  9654  000472                     	endif
  9655  000472  0008               	tblrd		*
  9656  000474  50F5               	movf	tablat,w,c
  9657  000476  6E0A               	movwf	fputc@c,c
  9658  000478  6A0B               	clrf	fputc@c+1,c
  9659  00047A  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9660  00047E  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9661  000482  EC7C  F018         	call	_fputc	;wreg free
  9662                           
  9663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9664  000486  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9665  00048A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9666  00048E  2ADE               	incf	postinc2,f,c
  9667  000490  0E00               	movlw	0
  9668  000492  22DD               	addwfc	postdec2,f,c
  9669  000494  D7D5               	goto	l7760
  9670  000496                     __end_of_vfpfcnvrt:
  9671                           	opt callstack 0
  9672                           
  9673 ;; *************** function _xtoa *****************
  9674 ;; Defined at:
  9675 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  9678 ;;		 -> NULL(0), 
  9679 ;;  d               8   38[COMRAM] unsigned long long 
  9680 ;;  x               1   46[COMRAM] unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  n               8   63[COMRAM] unsigned long long 
  9683 ;;  c               2   73[COMRAM] int 
  9684 ;;  i               2   71[COMRAM] int 
  9685 ;;  w               2   61[COMRAM] int 
  9686 ;;  p               2   59[COMRAM] int 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  2   36[COMRAM] int 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9696 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;Total ram usage:       39 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    9
  9703 ;; This function calls:
  9704 ;;		_isalpha
  9705 ;;		_isupper
  9706 ;;		_pad
  9707 ;;		_toupper
  9708 ;; This function is called by:
  9709 ;;		_vfpfcnvrt
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text37
  9714  002138                     __ptext37:
  9715                           	opt callstack 0
  9716  002138                     _xtoa:
  9717                           	opt callstack 18
  9718                           
  9719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9720                           
  9721                           ;incstack = 0
  9722  002138  0101               	movlb	1	; () banked
  9723  00213A  AF09               	btfss	(_prec+1)& (0+255),7,b
  9724                           
  9725                           ; BSR set to: 1
  9726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9727  00213C  930A               	bcf	_flags& (0+255),1,b
  9728                           
  9729                           ; BSR set to: 1
  9730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9731  00213E  BF09               	btfsc	(_prec+1)& (0+255),7,b
  9732  002140  D005               	goto	u8300
  9733  002142  5109               	movf	(_prec+1)& (0+255),w,b
  9734  002144  E108               	bnz	l632
  9735  002146  0508               	decf	_prec& (0+255),w,b
  9736  002148  B0D8               	btfsc	status,0,c
  9737  00214A  D005               	goto	l632
  9738  00214C                     u8300:
  9739                           
  9740                           ; BSR set to: 1
  9741  00214C  0E00               	movlw	0
  9742  00214E  6E3D               	movwf	xtoa@p+1,c
  9743  002150  0E01               	movlw	1
  9744  002152  6E3C               	movwf	xtoa@p,c
  9745  002154  D004               	goto	l634
  9746  002156                     l632:
  9747                           
  9748                           ; BSR set to: 1
  9749  002156  C108  F03C         	movff	_prec,xtoa@p
  9750  00215A  C109  F03D         	movff	_prec+1,xtoa@p+1
  9751  00215E                     l634:
  9752                           
  9753                           ; BSR set to: 1
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9755  00215E  C106  F03E         	movff	_width,xtoa@w
  9756  002162  C107  F03F         	movff	_width+1,xtoa@w+1
  9757                           
  9758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9759  002166  A90A               	btfss	_flags& (0+255),4,b
  9760  002168  D004               	goto	l7338
  9761                           
  9762                           ; BSR set to: 1
  9763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9764  00216A  0EFE               	movlw	254
  9765  00216C  263E               	addwf	xtoa@w,f,c
  9766  00216E  0EFF               	movlw	255
  9767  002170  223F               	addwfc	xtoa@w+1,f,c
  9768  002172                     l7338:
  9769                           
  9770                           ; BSR set to: 1
  9771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9772  002172  C027  F040         	movff	xtoa@d,xtoa@n
  9773  002176  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  9774  00217A  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  9775  00217E  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  9776  002182  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  9777  002186  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  9778  00218A  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  9779  00218E  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  9780                           
  9781                           ; BSR set to: 1
  9782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9783  002192  0E00               	movlw	0
  9784  002194  6E49               	movwf	xtoa@i+1,c
  9785  002196  0E1F               	movlw	31
  9786  002198  6E48               	movwf	xtoa@i,c
  9787                           
  9788                           ; BSR set to: 1
  9789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9790  00219A  0E00               	movlw	0
  9791  00219C  6F32               	movwf	(_dbuf+31)& (0+255),b
  9792                           
  9793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9794  00219E  D093               	goto	l7374
  9795  0021A0                     l7344:
  9796                           
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9798  0021A0  0648               	decf	xtoa@i,f,c
  9799  0021A2  A0D8               	btfss	status,0,c
  9800  0021A4  0649               	decf	xtoa@i+1,f,c
  9801                           
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9803  0021A6  0E0F               	movlw	15
  9804  0021A8  1440               	andwf	xtoa@n,w,c
  9805  0021AA  6E4A               	movwf	xtoa@c,c
  9806  0021AC  6A4B               	clrf	xtoa@c+1,c
  9807                           
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9809  0021AE  BE4B               	btfsc	xtoa@c+1,7,c
  9810  0021B0  D008               	goto	l7352
  9811  0021B2  504B               	movf	xtoa@c+1,w,c
  9812  0021B4  E104               	bnz	u8320
  9813  0021B6  0E0A               	movlw	10
  9814  0021B8  5C4A               	subwf	xtoa@c,w,c
  9815  0021BA  A0D8               	btfss	status,0,c
  9816  0021BC  D002               	goto	l7352
  9817  0021BE                     u8320:
  9818  0021BE  0E57               	movlw	87
  9819  0021C0  D001               	goto	L17
  9820  0021C2                     l7352:
  9821  0021C2  0E30               	movlw	48
  9822  0021C4                     L17:
  9823  0021C4  244A               	addwf	xtoa@c,w,c
  9824  0021C6  6E4A               	movwf	xtoa@c,c
  9825  0021C8  0E00               	movlw	0
  9826  0021CA  204B               	addwfc	xtoa@c+1,w,c
  9827  0021CC  6E4B               	movwf	xtoa@c+1,c
  9828                           
  9829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9830  0021CE  0EBF               	movlw	191
  9831  0021D0  6E30               	movwf	??_xtoa& (0+255),c
  9832  0021D2  0EFF               	movlw	255
  9833  0021D4  6E31               	movwf	(??_xtoa+1)& (0+255),c
  9834  0021D6  502F               	movf	xtoa@x,w,c
  9835  0021D8  6E32               	movwf	(??_xtoa+2)& (0+255),c
  9836  0021DA  6A33               	clrf	(??_xtoa+3)& (0+255),c
  9837  0021DC  5030               	movf	??_xtoa,w,c
  9838  0021DE  2632               	addwf	??_xtoa+2,f,c
  9839  0021E0  5031               	movf	??_xtoa+1,w,c
  9840  0021E2  2233               	addwfc	??_xtoa+3,f,c
  9841  0021E4  5033               	movf	??_xtoa+3,w,c
  9842  0021E6  E106               	bnz	u8330
  9843  0021E8  0E1A               	movlw	26
  9844  0021EA  5C32               	subwf	??_xtoa+2,w,c
  9845  0021EC  B0D8               	btfsc	status,0,c
  9846  0021EE  D002               	goto	u8330
  9847  0021F0  0E01               	movlw	1
  9848  0021F2  D001               	goto	u8340
  9849  0021F4                     u8330:
  9850  0021F4  0E00               	movlw	0
  9851  0021F6                     u8340:
  9852  0021F6  6E38               	movwf	_xtoa$1350,c
  9853  0021F8  6A39               	clrf	_xtoa$1350+1,c
  9854  0021FA  5038               	movf	_xtoa$1350,w,c
  9855  0021FC  1039               	iorwf	_xtoa$1350+1,w,c
  9856  0021FE  B4D8               	btfsc	status,2,c
  9857  002200  D027               	goto	l7366
  9858  002202  0E9F               	movlw	159
  9859  002204  6E30               	movwf	??_xtoa& (0+255),c
  9860  002206  0EFF               	movlw	255
  9861  002208  6E31               	movwf	(??_xtoa+1)& (0+255),c
  9862  00220A  0E20               	movlw	32
  9863  00220C  104A               	iorwf	xtoa@c,w,c
  9864  00220E  6E32               	movwf	(??_xtoa+2)& (0+255),c
  9865  002210  0E00               	movlw	0
  9866  002212  104B               	iorwf	xtoa@c+1,w,c
  9867  002214  6E33               	movwf	(??_xtoa+3)& (0+255),c
  9868  002216  5030               	movf	??_xtoa,w,c
  9869  002218  2632               	addwf	??_xtoa+2,f,c
  9870  00221A  5031               	movf	??_xtoa+1,w,c
  9871  00221C  2233               	addwfc	??_xtoa+3,f,c
  9872  00221E  5033               	movf	??_xtoa+3,w,c
  9873  002220  E106               	bnz	u8360
  9874  002222  0E1A               	movlw	26
  9875  002224  5C32               	subwf	??_xtoa+2,w,c
  9876  002226  B0D8               	btfsc	status,0,c
  9877  002228  D002               	goto	u8360
  9878  00222A  0E01               	movlw	1
  9879  00222C  D001               	goto	u8370
  9880  00222E                     u8360:
  9881  00222E  0E00               	movlw	0
  9882  002230                     u8370:
  9883  002230  6E3A               	movwf	_xtoa$1351,c
  9884  002232  6A3B               	clrf	_xtoa$1351+1,c
  9885  002234  503A               	movf	_xtoa$1351,w,c
  9886  002236  103B               	iorwf	_xtoa$1351+1,w,c
  9887  002238  B4D8               	btfsc	status,2,c
  9888  00223A  D00A               	goto	l7366
  9889                           
  9890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9891  00223C  C04A  F00C         	movff	xtoa@c,toupper@c
  9892  002240  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
  9893  002244  ECC0  F019         	call	_toupper	;wreg free
  9894  002248  C00C  F04A         	movff	?_toupper,xtoa@c
  9895  00224C  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
  9896  002250                     l7366:
  9897                           
  9898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9899  002250  0E13               	movlw	low _dbuf
  9900  002252  2448               	addwf	xtoa@i,w,c
  9901  002254  6ED9               	movwf	fsr2l,c
  9902  002256  0E01               	movlw	high _dbuf
  9903  002258  2049               	addwfc	xtoa@i+1,w,c
  9904  00225A  6EDA               	movwf	fsr2h,c
  9905  00225C  C04A  FFDF         	movff	xtoa@c,indf2
  9906                           
  9907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9908  002260  063C               	decf	xtoa@p,f,c
  9909  002262  A0D8               	btfss	status,0,c
  9910  002264  063D               	decf	xtoa@p+1,f,c
  9911                           
  9912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9913  002266  063E               	decf	xtoa@w,f,c
  9914  002268  A0D8               	btfss	status,0,c
  9915  00226A  063F               	decf	xtoa@w+1,f,c
  9916                           
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9918  00226C  C040  F030         	movff	xtoa@n,??_xtoa
  9919  002270  C041  F031         	movff	xtoa@n+1,??_xtoa+1
  9920  002274  C042  F032         	movff	xtoa@n+2,??_xtoa+2
  9921  002278  C043  F033         	movff	xtoa@n+3,??_xtoa+3
  9922  00227C  C044  F034         	movff	xtoa@n+4,??_xtoa+4
  9923  002280  C045  F035         	movff	xtoa@n+5,??_xtoa+5
  9924  002284  C046  F036         	movff	xtoa@n+6,??_xtoa+6
  9925  002288  C047  F037         	movff	xtoa@n+7,??_xtoa+7
  9926  00228C  0E05               	movlw	5
  9927  00228E  D009               	goto	u8390
  9928  002290                     u8395:
  9929  002290  90D8               	bcf	status,0,c
  9930  002292  3237               	rrcf	??_xtoa+7,f,c
  9931  002294  3236               	rrcf	??_xtoa+6,f,c
  9932  002296  3235               	rrcf	??_xtoa+5,f,c
  9933  002298  3234               	rrcf	??_xtoa+4,f,c
  9934  00229A  3233               	rrcf	??_xtoa+3,f,c
  9935  00229C  3232               	rrcf	??_xtoa+2,f,c
  9936  00229E  3231               	rrcf	??_xtoa+1,f,c
  9937  0022A0  3230               	rrcf	??_xtoa,f,c
  9938  0022A2                     u8390:
  9939  0022A2  2EE8               	decfsz	wreg,f,c
  9940  0022A4  D7F5               	goto	u8395
  9941  0022A6  C030  F040         	movff	??_xtoa,xtoa@n
  9942  0022AA  C031  F041         	movff	??_xtoa+1,xtoa@n+1
  9943  0022AE  C032  F042         	movff	??_xtoa+2,xtoa@n+2
  9944  0022B2  C033  F043         	movff	??_xtoa+3,xtoa@n+3
  9945  0022B6  C034  F044         	movff	??_xtoa+4,xtoa@n+4
  9946  0022BA  C035  F045         	movff	??_xtoa+5,xtoa@n+5
  9947  0022BE  C036  F046         	movff	??_xtoa+6,xtoa@n+6
  9948  0022C2  C037  F047         	movff	??_xtoa+7,xtoa@n+7
  9949  0022C6                     l7374:
  9950                           
  9951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9952  0022C6  BE49               	btfsc	xtoa@i+1,7,c
  9953  0022C8  D021               	goto	u8440
  9954  0022CA  5049               	movf	xtoa@i+1,w,c
  9955  0022CC  E104               	bnz	u8400
  9956  0022CE  0E02               	movlw	2
  9957  0022D0  5C48               	subwf	xtoa@i,w,c
  9958  0022D2  A0D8               	btfss	status,0,c
  9959  0022D4  D01B               	goto	u8440
  9960  0022D6                     u8400:
  9961  0022D6  5040               	movf	xtoa@n,w,c
  9962  0022D8  1041               	iorwf	xtoa@n+1,w,c
  9963  0022DA  1042               	iorwf	xtoa@n+2,w,c
  9964  0022DC  1043               	iorwf	xtoa@n+3,w,c
  9965  0022DE  1044               	iorwf	xtoa@n+4,w,c
  9966  0022E0  1045               	iorwf	xtoa@n+5,w,c
  9967  0022E2  1046               	iorwf	xtoa@n+6,w,c
  9968  0022E4  1047               	iorwf	xtoa@n+7,w,c
  9969  0022E6  A4D8               	btfss	status,2,c
  9970  0022E8  D75B               	goto	l7344
  9971  0022EA  BE3D               	btfsc	xtoa@p+1,7,c
  9972  0022EC  D005               	goto	u8420
  9973  0022EE  503D               	movf	xtoa@p+1,w,c
  9974  0022F0  E102               	bnz	u8421
  9975  0022F2  043C               	decf	xtoa@p,w,c
  9976  0022F4  B0D8               	btfsc	status,0,c
  9977  0022F6                     u8421:
  9978  0022F6  D754               	goto	l7344
  9979  0022F8                     u8420:
  9980  0022F8  BE3F               	btfsc	xtoa@w+1,7,c
  9981  0022FA  D008               	goto	u8440
  9982  0022FC  503F               	movf	xtoa@w+1,w,c
  9983  0022FE  E103               	bnz	u8430
  9984  002300  043E               	decf	xtoa@w,w,c
  9985  002302  A0D8               	btfss	status,0,c
  9986  002304  D003               	goto	u8440
  9987  002306                     u8430:
  9988  002306  0101               	movlb	1	; () banked
  9989  002308  B30A               	btfsc	_flags& (0+255),1,b
  9990  00230A  D74A               	goto	l7344
  9991  00230C                     u8440:
  9992                           
  9993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9994  00230C  0101               	movlb	1	; () banked
  9995  00230E  A90A               	btfss	_flags& (0+255),4,b
  9996  002310  D016               	goto	l7390
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10000  002312  0648               	decf	xtoa@i,f,c
 10001  002314  A0D8               	btfss	status,0,c
 10002  002316  0649               	decf	xtoa@i+1,f,c
 10003                           
 10004                           ; BSR set to: 1
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10006  002318  0E13               	movlw	low _dbuf
 10007  00231A  2448               	addwf	xtoa@i,w,c
 10008  00231C  6ED9               	movwf	fsr2l,c
 10009  00231E  0E01               	movlw	high _dbuf
 10010  002320  2049               	addwfc	xtoa@i+1,w,c
 10011  002322  6EDA               	movwf	fsr2h,c
 10012  002324  C02F  FFDF         	movff	xtoa@x,indf2
 10013                           
 10014                           ; BSR set to: 1
 10015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10016  002328  0648               	decf	xtoa@i,f,c
 10017  00232A  A0D8               	btfss	status,0,c
 10018  00232C  0649               	decf	xtoa@i+1,f,c
 10019                           
 10020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10021  00232E  0E13               	movlw	low _dbuf
 10022  002330  2448               	addwf	xtoa@i,w,c
 10023  002332  6ED9               	movwf	fsr2l,c
 10024  002334  0E01               	movlw	high _dbuf
 10025  002336  2049               	addwfc	xtoa@i+1,w,c
 10026  002338  6EDA               	movwf	fsr2h,c
 10027  00233A  0E30               	movlw	48
 10028  00233C  6EDF               	movwf	indf2,c
 10029  00233E                     l7390:
 10030                           
 10031                           ; BSR set to: 1
 10032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10033  00233E  C025  F01A         	movff	xtoa@fp,pad@fp
 10034  002342  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 10035  002346  0E13               	movlw	low _dbuf
 10036  002348  2448               	addwf	xtoa@i,w,c
 10037  00234A  6E1C               	movwf	pad@buf,c
 10038  00234C  0E01               	movlw	high _dbuf
 10039  00234E  2049               	addwfc	xtoa@i+1,w,c
 10040  002350  6E1D               	movwf	pad@buf+1,c
 10041  002352  C03E  F01E         	movff	xtoa@w,pad@p
 10042  002356  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 10043  00235A  ECEC  F016         	call	_pad	;wreg free
 10044  00235E  C01A  F025         	movff	?_pad,?_xtoa
 10045  002362  C01B  F026         	movff	?_pad+1,?_xtoa+1
 10046  002366  0012               	return		;funcret
 10047  002368                     __end_of_xtoa:
 10048                           	opt callstack 0
 10049                           
 10050 ;; *************** function _toupper *****************
 10051 ;; Defined at:
 10052 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  c               2   11[COMRAM] int 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  2   11[COMRAM] int 
 10059 ;; Registers used:
 10060 ;;		wreg, status,2, status,0
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10069 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10070 ;;Total ram usage:        8 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    3
 10073 ;; This function calls:
 10074 ;;		_islower
 10075 ;; This function is called by:
 10076 ;;		_xtoa
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text38
 10081  003380                     __ptext38:
 10082                           	opt callstack 0
 10083  003380                     _toupper:
 10084                           	opt callstack 23
 10085                           
 10086                           ;incstack = 0
 10087  003380  0E9F               	movlw	159
 10088  003382  6E0E               	movwf	??_toupper& (0+255),c
 10089  003384  0EFF               	movlw	255
 10090  003386  6E0F               	movwf	(??_toupper+1)& (0+255),c
 10091  003388  C00C  F010         	movff	toupper@c,??_toupper+2
 10092  00338C  C00D  F011         	movff	toupper@c+1,??_toupper+3
 10093  003390  500E               	movf	??_toupper,w,c
 10094  003392  2610               	addwf	??_toupper+2,f,c
 10095  003394  500F               	movf	??_toupper+1,w,c
 10096  003396  2211               	addwfc	??_toupper+3,f,c
 10097  003398  5011               	movf	??_toupper+3,w,c
 10098  00339A  E106               	bnz	u7110
 10099  00339C  0E1A               	movlw	26
 10100  00339E  5C10               	subwf	??_toupper+2,w,c
 10101  0033A0  B0D8               	btfsc	status,0,c
 10102  0033A2  D002               	goto	u7110
 10103  0033A4  0E01               	movlw	1
 10104  0033A6  D001               	goto	u7120
 10105  0033A8                     u7110:
 10106  0033A8  0E00               	movlw	0
 10107  0033AA                     u7120:
 10108  0033AA  6E12               	movwf	_toupper$1916,c
 10109  0033AC  6A13               	clrf	_toupper$1916+1,c
 10110  0033AE  5012               	movf	_toupper$1916,w,c
 10111  0033B0  1013               	iorwf	_toupper$1916+1,w,c
 10112  0033B2  B4D8               	btfsc	status,2,c
 10113  0033B4  D005               	goto	l1474
 10114  0033B6  0E5F               	movlw	95
 10115  0033B8  140C               	andwf	toupper@c,w,c
 10116  0033BA  6E0C               	movwf	?_toupper,c
 10117  0033BC  6A0D               	clrf	?_toupper+1,c
 10118  0033BE  0012               	return	
 10119  0033C0                     l1474:
 10120  0033C0  C00C  F00C         	movff	toupper@c,?_toupper
 10121  0033C4  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 10122  0033C8  0012               	return		;funcret
 10123  0033CA                     __end_of_toupper:
 10124                           	opt callstack 0
 10125                           
 10126 ;; *************** function _islower *****************
 10127 ;; Defined at:
 10128 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  c               2    5[COMRAM] int 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  2    5[COMRAM] int 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;Total ram usage:        6 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    2
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_toupper
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text39
 10157  003670                     __ptext39:
 10158                           	opt callstack 0
 10159  003670                     _islower:
 10160                           	opt callstack 23
 10161                           
 10162                           ;incstack = 0
 10163  003670  0E9F               	movlw	159
 10164  003672  6E08               	movwf	??_islower& (0+255),c
 10165  003674  0EFF               	movlw	255
 10166  003676  6E09               	movwf	(??_islower+1)& (0+255),c
 10167  003678  C006  F00A         	movff	islower@c,??_islower+2
 10168  00367C  C007  F00B         	movff	islower@c+1,??_islower+3
 10169  003680  5008               	movf	??_islower,w,c
 10170  003682  260A               	addwf	??_islower+2,f,c
 10171  003684  5009               	movf	??_islower+1,w,c
 10172  003686  220B               	addwfc	??_islower+3,f,c
 10173  003688  500B               	movf	??_islower+3,w,c
 10174  00368A  E106               	bnz	u7000
 10175  00368C  0E1A               	movlw	26
 10176  00368E  5C0A               	subwf	??_islower+2,w,c
 10177  003690  B0D8               	btfsc	status,0,c
 10178  003692  D002               	goto	u7000
 10179  003694  0E01               	movlw	1
 10180  003696  D001               	goto	u7010
 10181  003698                     u7000:
 10182  003698  0E00               	movlw	0
 10183  00369A                     u7010:
 10184  00369A  6E06               	movwf	?_islower,c
 10185  00369C  6A07               	clrf	?_islower+1,c
 10186  00369E  0012               	return		;funcret
 10187  0036A0                     __end_of_islower:
 10188                           	opt callstack 0
 10189                           
 10190 ;; *************** function _isupper *****************
 10191 ;; Defined at:
 10192 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  c               2    5[COMRAM] int 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;		None
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  2    5[COMRAM] int 
 10199 ;; Registers used:
 10200 ;;		wreg, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;Total ram usage:        6 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:    2
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_xtoa
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text40
 10221  0036A0                     __ptext40:
 10222                           	opt callstack 0
 10223  0036A0                     _isupper:
 10224                           	opt callstack 24
 10225                           
 10226                           ;incstack = 0
 10227  0036A0  0EBF               	movlw	191
 10228  0036A2  6E08               	movwf	??_isupper& (0+255),c
 10229  0036A4  0EFF               	movlw	255
 10230  0036A6  6E09               	movwf	(??_isupper+1)& (0+255),c
 10231  0036A8  C006  F00A         	movff	isupper@c,??_isupper+2
 10232  0036AC  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10233  0036B0  5008               	movf	??_isupper,w,c
 10234  0036B2  260A               	addwf	??_isupper+2,f,c
 10235  0036B4  5009               	movf	??_isupper+1,w,c
 10236  0036B6  220B               	addwfc	??_isupper+3,f,c
 10237  0036B8  500B               	movf	??_isupper+3,w,c
 10238  0036BA  E106               	bnz	u7070
 10239  0036BC  0E1A               	movlw	26
 10240  0036BE  5C0A               	subwf	??_isupper+2,w,c
 10241  0036C0  B0D8               	btfsc	status,0,c
 10242  0036C2  D002               	goto	u7070
 10243  0036C4  0E01               	movlw	1
 10244  0036C6  D001               	goto	u7080
 10245  0036C8                     u7070:
 10246  0036C8  0E00               	movlw	0
 10247  0036CA                     u7080:
 10248  0036CA  6E06               	movwf	?_isupper,c
 10249  0036CC  6A07               	clrf	?_isupper+1,c
 10250  0036CE  0012               	return		;funcret
 10251  0036D0                     __end_of_isupper:
 10252                           	opt callstack 0
 10253                           
 10254 ;; *************** function _isalpha *****************
 10255 ;; Defined at:
 10256 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  c               2    5[COMRAM] int 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  2    5[COMRAM] int 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2, status,0
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;Total ram usage:        6 bytes
 10275 ;; Hardware stack levels used:    1
 10276 ;; Hardware stack levels required when called:    2
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_xtoa
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text41
 10285  00360A                     __ptext41:
 10286                           	opt callstack 0
 10287  00360A                     _isalpha:
 10288                           	opt callstack 24
 10289                           
 10290                           ;incstack = 0
 10291  00360A  0E9F               	movlw	159
 10292  00360C  6E08               	movwf	??_isalpha& (0+255),c
 10293  00360E  0EFF               	movlw	255
 10294  003610  6E09               	movwf	(??_isalpha+1)& (0+255),c
 10295  003612  0E20               	movlw	32
 10296  003614  1006               	iorwf	isalpha@c,w,c
 10297  003616  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 10298  003618  0E00               	movlw	0
 10299  00361A  1007               	iorwf	isalpha@c+1,w,c
 10300  00361C  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 10301  00361E  5008               	movf	??_isalpha,w,c
 10302  003620  260A               	addwf	??_isalpha+2,f,c
 10303  003622  5009               	movf	??_isalpha+1,w,c
 10304  003624  220B               	addwfc	??_isalpha+3,f,c
 10305  003626  500B               	movf	??_isalpha+3,w,c
 10306  003628  E106               	bnz	u7090
 10307  00362A  0E1A               	movlw	26
 10308  00362C  5C0A               	subwf	??_isalpha+2,w,c
 10309  00362E  B0D8               	btfsc	status,0,c
 10310  003630  D002               	goto	u7090
 10311  003632  0E01               	movlw	1
 10312  003634  D001               	goto	u7100
 10313  003636                     u7090:
 10314  003636  0E00               	movlw	0
 10315  003638                     u7100:
 10316  003638  6E06               	movwf	?_isalpha,c
 10317  00363A  6A07               	clrf	?_isalpha+1,c
 10318  00363C  0012               	return		;funcret
 10319  00363E                     __end_of_isalpha:
 10320                           	opt callstack 0
 10321                           
 10322 ;; *************** function _stoa *****************
 10323 ;; Defined at:
 10324 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 10327 ;;		 -> NULL(0), 
 10328 ;;  s               2   20[COMRAM] PTR unsigned char 
 10329 ;;		 -> ?_printf(2), STR_50(16), STR_48(14), STR_46(11), 
 10330 ;;		 -> STR_44(9), STR_42(16), STR_40(13), STR_38(13), 
 10331 ;;		 -> STR_36(9), STR_34(13), STR_32(14), STR_30(10), 
 10332 ;;		 -> STR_26(9), STR_18(14), STR_16(16), STR_14(14), 
 10333 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 10334 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  nuls            7   23[COMRAM] unsigned char [7]
 10337 ;;  l               2   38[COMRAM] int 
 10338 ;;  p               2   36[COMRAM] int 
 10339 ;;  cp              2   34[COMRAM] PTR unsigned char 
 10340 ;;		 -> ?_printf(2), stoa@nuls(7), STR_50(16), STR_48(14), 
 10341 ;;		 -> STR_46(11), STR_44(9), STR_42(16), STR_40(13), 
 10342 ;;		 -> STR_38(13), STR_36(9), STR_34(13), STR_32(14), 
 10343 ;;		 -> STR_30(10), STR_26(9), STR_18(14), STR_16(16), 
 10344 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
 10345 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 10346 ;;  w               2   32[COMRAM] int 
 10347 ;;  i               2   30[COMRAM] int 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  2   18[COMRAM] int 
 10350 ;; Registers used:
 10351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;Total ram usage:       22 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    7
 10364 ;; This function calls:
 10365 ;;		_fputc
 10366 ;;		_strlen
 10367 ;; This function is called by:
 10368 ;;		_vfpfcnvrt
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text42
 10373  0026B2                     __ptext42:
 10374                           	opt callstack 0
 10375  0026B2                     _stoa:
 10376                           	opt callstack 20
 10377                           
 10378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10379                           
 10380                           ;incstack = 0
 10381  0026B2  EE21  F043         	lfsr	2,stoa@F1144
 10382  0026B6  EE10  F018         	lfsr	1,stoa@nuls
 10383  0026BA  0E06               	movlw	6
 10384  0026BC                     u8191:
 10385  0026BC  CFDB FFE3          	movff	plusw2,plusw1
 10386  0026C0  06E8               	decf	wreg,f,c
 10387  0026C2  E2FC               	bc	u8191
 10388                           
 10389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 10390  0026C4  C015  F023         	movff	stoa@s,stoa@cp
 10391  0026C8  C016  F024         	movff	stoa@s+1,stoa@cp+1
 10392                           
 10393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 10394  0026CC  5023               	movf	stoa@cp,w,c
 10395  0026CE  1024               	iorwf	stoa@cp+1,w,c
 10396  0026D0  A4D8               	btfss	status,2,c
 10397  0026D2  D004               	goto	l7294
 10398                           
 10399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 10400  0026D4  0E18               	movlw	low stoa@nuls
 10401  0026D6  6E23               	movwf	stoa@cp,c
 10402  0026D8  0E00               	movlw	high stoa@nuls
 10403  0026DA  6E24               	movwf	stoa@cp+1,c
 10404  0026DC                     l7294:
 10405                           
 10406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 10407  0026DC  C023  F006         	movff	stoa@cp,strlen@s
 10408  0026E0  C024  F007         	movff	stoa@cp+1,strlen@s+1
 10409  0026E4  EC08  F01A         	call	_strlen	;wreg free
 10410  0026E8  C006  F027         	movff	?_strlen,stoa@l
 10411  0026EC  C007  F028         	movff	?_strlen+1,stoa@l+1
 10412                           
 10413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 10414  0026F0  C108  F025         	movff	_prec,stoa@p
 10415  0026F4  C109  F026         	movff	_prec+1,stoa@p+1
 10416                           
 10417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 10418  0026F8  BE26               	btfsc	stoa@p+1,7,c
 10419  0026FA  D00E               	goto	l613
 10420  0026FC  5027               	movf	stoa@l,w,c
 10421  0026FE  5C25               	subwf	stoa@p,w,c
 10422  002700  5026               	movf	stoa@p+1,w,c
 10423  002702  0A80               	xorlw	128
 10424  002704  6E17               	movwf	??_stoa& (0+255),c
 10425  002706  5028               	movf	stoa@l+1,w,c
 10426  002708  0A80               	xorlw	128
 10427  00270A  5817               	subwfb	??_stoa& (0+255),w,c
 10428  00270C  B0D8               	btfsc	status,0,c
 10429  00270E  D004               	goto	l613
 10430  002710  C025  F027         	movff	stoa@p,stoa@l
 10431  002714  C026  F028         	movff	stoa@p+1,stoa@l+1
 10432  002718                     l613:
 10433                           
 10434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 10435  002718  C027  F025         	movff	stoa@l,stoa@p
 10436  00271C  C028  F026         	movff	stoa@l+1,stoa@p+1
 10437                           
 10438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 10439  002720  C106  F021         	movff	_width,stoa@w
 10440  002724  C107  F022         	movff	_width+1,stoa@w+1
 10441                           
 10442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 10443  002728  0101               	movlb	1	; () banked
 10444  00272A  A10A               	btfss	_flags& (0+255),0,b
 10445  00272C  D00D               	goto	l7308
 10446  00272E  D016               	goto	u8240
 10447  002730                     l7304:
 10448                           
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 10450  002730  0E00               	movlw	0
 10451  002732  6E0B               	movwf	fputc@c+1,c
 10452  002734  0E20               	movlw	32
 10453  002736  6E0A               	movwf	fputc@c,c
 10454  002738  C013  F00C         	movff	stoa@fp,fputc@fp
 10455  00273C  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10456  002740  EC7C  F018         	call	_fputc	;wreg free
 10457                           
 10458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 10459  002744  4A27               	infsnz	stoa@l,f,c
 10460  002746  2A28               	incf	stoa@l+1,f,c
 10461  002748                     l7308:
 10462                           
 10463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 10464  002748  5021               	movf	stoa@w,w,c
 10465  00274A  5C27               	subwf	stoa@l,w,c
 10466  00274C  5028               	movf	stoa@l+1,w,c
 10467  00274E  0A80               	xorlw	128
 10468  002750  6E17               	movwf	??_stoa& (0+255),c
 10469  002752  5022               	movf	stoa@w+1,w,c
 10470  002754  0A80               	xorlw	128
 10471  002756  5817               	subwfb	??_stoa& (0+255),w,c
 10472  002758  A0D8               	btfss	status,0,c
 10473  00275A  D7EA               	goto	l7304
 10474  00275C                     u8240:
 10475                           
 10476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 10477  00275C  0E00               	movlw	0
 10478  00275E  6E20               	movwf	stoa@i+1,c
 10479  002760  0E00               	movlw	0
 10480  002762  6E1F               	movwf	stoa@i,c
 10481                           
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10483  002764  D01F               	goto	l7318
 10484  002766                     l7312:
 10485                           
 10486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 10487  002766  C023  FFF6         	movff	stoa@cp,tblptrl
 10488  00276A  C024  FFF7         	movff	stoa@cp+1,tblptrh
 10489  00276E  0E00               	movlw	low (__mediumconst shr (0+16))
 10490  002770  6EF8               	movwf	tblptru,c
 10491  002772  0E0F               	movlw	(high __ramtop+-1)
 10492  002774  64F7               	cpfsgt	tblptrh,c
 10493  002776  D003               	bra	u8257
 10494  002778  0008               	tblrd		*
 10495  00277A  50F5               	movf	tablat,w,c
 10496  00277C  D005               	bra	u8250
 10497  00277E                     u8257:
 10498  00277E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10499  002782  CFF7 FFE2          	movff	tblptrh,fsr1h
 10500  002786  50E7               	movf	indf1,w,c
 10501  002788                     u8250:
 10502  002788  6E17               	movwf	??_stoa& (0+255),c
 10503  00278A  5017               	movf	??_stoa,w,c
 10504  00278C  6E0A               	movwf	fputc@c,c
 10505  00278E  6A0B               	clrf	fputc@c+1,c
 10506  002790  C013  F00C         	movff	stoa@fp,fputc@fp
 10507  002794  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10508  002798  EC7C  F018         	call	_fputc	;wreg free
 10509                           
 10510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 10511  00279C  4A23               	infsnz	stoa@cp,f,c
 10512  00279E  2A24               	incf	stoa@cp+1,f,c
 10513                           
 10514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 10515  0027A0  4A1F               	infsnz	stoa@i,f,c
 10516  0027A2  2A20               	incf	stoa@i+1,f,c
 10517  0027A4                     l7318:
 10518                           
 10519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10520  0027A4  5025               	movf	stoa@p,w,c
 10521  0027A6  5C1F               	subwf	stoa@i,w,c
 10522  0027A8  5020               	movf	stoa@i+1,w,c
 10523  0027AA  0A80               	xorlw	128
 10524  0027AC  6E17               	movwf	??_stoa& (0+255),c
 10525  0027AE  5026               	movf	stoa@p+1,w,c
 10526  0027B0  0A80               	xorlw	128
 10527  0027B2  5817               	subwfb	??_stoa& (0+255),w,c
 10528  0027B4  A0D8               	btfss	status,0,c
 10529  0027B6  D7D7               	goto	l7312
 10530                           
 10531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 10532  0027B8  0101               	movlb	1	; () banked
 10533  0027BA  B10A               	btfsc	_flags& (0+255),0,b
 10534  0027BC  D00D               	goto	l7326
 10535  0027BE  D016               	goto	u8280
 10536  0027C0                     l7322:
 10537                           
 10538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 10539  0027C0  0E00               	movlw	0
 10540  0027C2  6E0B               	movwf	fputc@c+1,c
 10541  0027C4  0E20               	movlw	32
 10542  0027C6  6E0A               	movwf	fputc@c,c
 10543  0027C8  C013  F00C         	movff	stoa@fp,fputc@fp
 10544  0027CC  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10545  0027D0  EC7C  F018         	call	_fputc	;wreg free
 10546                           
 10547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 10548  0027D4  4A27               	infsnz	stoa@l,f,c
 10549  0027D6  2A28               	incf	stoa@l+1,f,c
 10550  0027D8                     l7326:
 10551                           
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 10553  0027D8  5021               	movf	stoa@w,w,c
 10554  0027DA  5C27               	subwf	stoa@l,w,c
 10555  0027DC  5028               	movf	stoa@l+1,w,c
 10556  0027DE  0A80               	xorlw	128
 10557  0027E0  6E17               	movwf	??_stoa& (0+255),c
 10558  0027E2  5022               	movf	stoa@w+1,w,c
 10559  0027E4  0A80               	xorlw	128
 10560  0027E6  5817               	subwfb	??_stoa& (0+255),w,c
 10561  0027E8  A0D8               	btfss	status,0,c
 10562  0027EA  D7EA               	goto	l7322
 10563  0027EC                     u8280:
 10564                           
 10565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 10566                           
 10567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 10568  0027EC  C027  F013         	movff	stoa@l,?_stoa
 10569  0027F0  C028  F014         	movff	stoa@l+1,?_stoa+1
 10570  0027F4  0012               	return		;funcret
 10571  0027F6                     __end_of_stoa:
 10572                           	opt callstack 0
 10573                           
 10574 ;; *************** function _dtoa *****************
 10575 ;; Defined at:
 10576 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10579 ;;		 -> NULL(0), 
 10580 ;;  d               8   38[COMRAM] long long 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  n               8   62[COMRAM] long long 
 10583 ;;  i               2   70[COMRAM] int 
 10584 ;;  s               2   60[COMRAM] int 
 10585 ;;  w               2   58[COMRAM] int 
 10586 ;;  p               2   56[COMRAM] int 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  2   36[COMRAM] int 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10596 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;Total ram usage:       36 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    9
 10603 ;; This function calls:
 10604 ;;		___aodiv
 10605 ;;		___aomod
 10606 ;;		_abs
 10607 ;;		_pad
 10608 ;; This function is called by:
 10609 ;;		_vfpfcnvrt
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text43
 10614  001EF2                     __ptext43:
 10615                           	opt callstack 0
 10616  001EF2                     _dtoa:
 10617                           	opt callstack 18
 10618                           
 10619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10620                           
 10621                           ;incstack = 0
 10622  001EF2  C027  F03F         	movff	dtoa@d,dtoa@n
 10623  001EF6  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 10624  001EFA  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 10625  001EFE  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 10626  001F02  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 10627  001F06  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 10628  001F0A  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 10629  001F0E  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 10630                           
 10631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10632  001F12  AE46               	btfss	dtoa@n+7,7,c
 10633  001F14  D002               	goto	u8040
 10634  001F16  0E01               	movlw	1
 10635  001F18  D001               	goto	u8050
 10636  001F1A                     u8040:
 10637  001F1A  0E00               	movlw	0
 10638  001F1C                     u8050:
 10639  001F1C  6E3D               	movwf	dtoa@s,c
 10640  001F1E  6A3E               	clrf	dtoa@s+1,c
 10641                           
 10642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10643  001F20  503D               	movf	dtoa@s,w,c
 10644  001F22  103E               	iorwf	dtoa@s+1,w,c
 10645  001F24  B4D8               	btfsc	status,2,c
 10646  001F26  D010               	goto	l7230
 10647                           
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10649  001F28  1E46               	comf	dtoa@n+7,f,c
 10650  001F2A  1E45               	comf	dtoa@n+6,f,c
 10651  001F2C  1E44               	comf	dtoa@n+5,f,c
 10652  001F2E  1E43               	comf	dtoa@n+4,f,c
 10653  001F30  1E42               	comf	dtoa@n+3,f,c
 10654  001F32  1E41               	comf	dtoa@n+2,f,c
 10655  001F34  1E40               	comf	dtoa@n+1,f,c
 10656  001F36  6C3F               	negf	dtoa@n,c
 10657  001F38  0E00               	movlw	0
 10658  001F3A  2240               	addwfc	dtoa@n+1,f,c
 10659  001F3C  2241               	addwfc	dtoa@n+2,f,c
 10660  001F3E  2242               	addwfc	dtoa@n+3,f,c
 10661  001F40  2243               	addwfc	dtoa@n+4,f,c
 10662  001F42  2244               	addwfc	dtoa@n+5,f,c
 10663  001F44  2245               	addwfc	dtoa@n+6,f,c
 10664  001F46  2246               	addwfc	dtoa@n+7,f,c
 10665  001F48                     l7230:
 10666                           
 10667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10668  001F48  0101               	movlb	1	; () banked
 10669  001F4A  AF09               	btfss	(_prec+1)& (0+255),7,b
 10670                           
 10671                           ; BSR set to: 1
 10672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10673  001F4C  930A               	bcf	_flags& (0+255),1,b
 10674                           
 10675                           ; BSR set to: 1
 10676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10677  001F4E  BF09               	btfsc	(_prec+1)& (0+255),7,b
 10678  001F50  D005               	goto	u8080
 10679  001F52  5109               	movf	(_prec+1)& (0+255),w,b
 10680  001F54  E108               	bnz	l584
 10681  001F56  0508               	decf	_prec& (0+255),w,b
 10682  001F58  B0D8               	btfsc	status,0,c
 10683  001F5A  D005               	goto	l584
 10684  001F5C                     u8080:
 10685                           
 10686                           ; BSR set to: 1
 10687  001F5C  0E00               	movlw	0
 10688  001F5E  6E3A               	movwf	dtoa@p+1,c
 10689  001F60  0E01               	movlw	1
 10690  001F62  6E39               	movwf	dtoa@p,c
 10691  001F64  D004               	goto	l586
 10692  001F66                     l584:
 10693                           
 10694                           ; BSR set to: 1
 10695  001F66  C108  F039         	movff	_prec,dtoa@p
 10696  001F6A  C109  F03A         	movff	_prec+1,dtoa@p+1
 10697  001F6E                     l586:
 10698                           
 10699                           ; BSR set to: 1
 10700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10701  001F6E  C106  F03B         	movff	_width,dtoa@w
 10702  001F72  C107  F03C         	movff	_width+1,dtoa@w+1
 10703                           
 10704                           ; BSR set to: 1
 10705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10706  001F76  503D               	movf	dtoa@s,w,c
 10707  001F78  103E               	iorwf	dtoa@s+1,w,c
 10708  001F7A  A4D8               	btfss	status,2,c
 10709  001F7C  D002               	goto	u8100
 10710                           
 10711                           ; BSR set to: 1
 10712  001F7E  A50A               	btfss	_flags& (0+255),2,b
 10713  001F80  D003               	goto	l7244
 10714  001F82                     u8100:
 10715                           
 10716                           ; BSR set to: 1
 10717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10718  001F82  063B               	decf	dtoa@w,f,c
 10719  001F84  A0D8               	btfss	status,0,c
 10720  001F86  063C               	decf	dtoa@w+1,f,c
 10721  001F88                     l7244:
 10722                           
 10723                           ; BSR set to: 1
 10724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10725  001F88  0E00               	movlw	0
 10726  001F8A  6E48               	movwf	dtoa@i+1,c
 10727  001F8C  0E1F               	movlw	31
 10728  001F8E  6E47               	movwf	dtoa@i,c
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10732  001F90  0E00               	movlw	0
 10733  001F92  6F32               	movwf	(_dbuf+31)& (0+255),b
 10734                           
 10735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10736  001F94  D07C               	goto	l7258
 10737  001F96                     l7248:
 10738                           
 10739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10740  001F96  0647               	decf	dtoa@i,f,c
 10741  001F98  A0D8               	btfss	status,0,c
 10742  001F9A  0648               	decf	dtoa@i+1,f,c
 10743                           
 10744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10745  001F9C  0E13               	movlw	low _dbuf
 10746  001F9E  2447               	addwf	dtoa@i,w,c
 10747  001FA0  6ED9               	movwf	fsr2l,c
 10748  001FA2  0E01               	movlw	high _dbuf
 10749  001FA4  2048               	addwfc	dtoa@i+1,w,c
 10750  001FA6  6EDA               	movwf	fsr2h,c
 10751  001FA8  C03F  F006         	movff	dtoa@n,___aomod@dividend
 10752  001FAC  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 10753  001FB0  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 10754  001FB4  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 10755  001FB8  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 10756  001FBC  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 10757  001FC0  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 10758  001FC4  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 10759  001FC8  0E0A               	movlw	10
 10760  001FCA  6E0E               	movwf	___aomod@divisor,c
 10761  001FCC  0E00               	movlw	0
 10762  001FCE  6E0F               	movwf	___aomod@divisor+1,c
 10763  001FD0  0E00               	movlw	0
 10764  001FD2  6E10               	movwf	___aomod@divisor+2,c
 10765  001FD4  0E00               	movlw	0
 10766  001FD6  6E11               	movwf	___aomod@divisor+3,c
 10767  001FD8  0E00               	movlw	0
 10768  001FDA  6E12               	movwf	___aomod@divisor+4,c
 10769  001FDC  0E00               	movlw	0
 10770  001FDE  6E13               	movwf	___aomod@divisor+5,c
 10771  001FE0  0E00               	movlw	0
 10772  001FE2  6E14               	movwf	___aomod@divisor+6,c
 10773  001FE4  0E00               	movlw	0
 10774  001FE6  6E15               	movwf	___aomod@divisor+7,c
 10775  001FE8  EC3B  F015         	call	___aomod	;wreg free
 10776  001FEC  C006  F02F         	movff	?___aomod,??_dtoa
 10777  001FF0  C007  F030         	movff	?___aomod+1,??_dtoa+1
 10778  001FF4  C008  F031         	movff	?___aomod+2,??_dtoa+2
 10779  001FF8  C009  F032         	movff	?___aomod+3,??_dtoa+3
 10780  001FFC  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 10781  002000  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 10782  002004  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 10783  002008  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 10784  00200C  C02F  F018         	movff	??_dtoa,abs@a
 10785  002010  C031  F019         	movff	??_dtoa+2,abs@a+1
 10786  002014  EC1F  F01B         	call	_abs	;wreg free
 10787  002018  5018               	movf	?_abs,w,c
 10788  00201A  0F30               	addlw	48
 10789  00201C  6EDF               	movwf	indf2,c
 10790                           
 10791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10792  00201E  0639               	decf	dtoa@p,f,c
 10793  002020  A0D8               	btfss	status,0,c
 10794  002022  063A               	decf	dtoa@p+1,f,c
 10795                           
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10797  002024  063B               	decf	dtoa@w,f,c
 10798  002026  A0D8               	btfss	status,0,c
 10799  002028  063C               	decf	dtoa@w+1,f,c
 10800                           
 10801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10802  00202A  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 10803  00202E  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 10804  002032  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 10805  002036  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 10806  00203A  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 10807  00203E  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 10808  002042  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 10809  002046  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 10810  00204A  0E0A               	movlw	10
 10811  00204C  6E0E               	movwf	___aodiv@divisor,c
 10812  00204E  0E00               	movlw	0
 10813  002050  6E0F               	movwf	___aodiv@divisor+1,c
 10814  002052  0E00               	movlw	0
 10815  002054  6E10               	movwf	___aodiv@divisor+2,c
 10816  002056  0E00               	movlw	0
 10817  002058  6E11               	movwf	___aodiv@divisor+3,c
 10818  00205A  0E00               	movlw	0
 10819  00205C  6E12               	movwf	___aodiv@divisor+4,c
 10820  00205E  0E00               	movlw	0
 10821  002060  6E13               	movwf	___aodiv@divisor+5,c
 10822  002062  0E00               	movlw	0
 10823  002064  6E14               	movwf	___aodiv@divisor+6,c
 10824  002066  0E00               	movlw	0
 10825  002068  6E15               	movwf	___aodiv@divisor+7,c
 10826  00206A  ECB5  F012         	call	___aodiv	;wreg free
 10827  00206E  C006  F03F         	movff	?___aodiv,dtoa@n
 10828  002072  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 10829  002076  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 10830  00207A  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 10831  00207E  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 10832  002082  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 10833  002086  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 10834  00208A  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 10835  00208E                     l7258:
 10836                           
 10837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10838  00208E  BE48               	btfsc	dtoa@i+1,7,c
 10839  002090  D020               	goto	u8150
 10840  002092  5048               	movf	dtoa@i+1,w,c
 10841  002094  E103               	bnz	u8110
 10842  002096  0447               	decf	dtoa@i,w,c
 10843  002098  A0D8               	btfss	status,0,c
 10844  00209A  D01B               	goto	u8150
 10845  00209C                     u8110:
 10846  00209C  503F               	movf	dtoa@n,w,c
 10847  00209E  1040               	iorwf	dtoa@n+1,w,c
 10848  0020A0  1041               	iorwf	dtoa@n+2,w,c
 10849  0020A2  1042               	iorwf	dtoa@n+3,w,c
 10850  0020A4  1043               	iorwf	dtoa@n+4,w,c
 10851  0020A6  1044               	iorwf	dtoa@n+5,w,c
 10852  0020A8  1045               	iorwf	dtoa@n+6,w,c
 10853  0020AA  1046               	iorwf	dtoa@n+7,w,c
 10854  0020AC  A4D8               	btfss	status,2,c
 10855  0020AE  D773               	goto	l7248
 10856  0020B0  BE3A               	btfsc	dtoa@p+1,7,c
 10857  0020B2  D005               	goto	u8130
 10858  0020B4  503A               	movf	dtoa@p+1,w,c
 10859  0020B6  E102               	bnz	u8131
 10860  0020B8  0439               	decf	dtoa@p,w,c
 10861  0020BA  B0D8               	btfsc	status,0,c
 10862  0020BC                     u8131:
 10863  0020BC  D76C               	goto	l7248
 10864  0020BE                     u8130:
 10865  0020BE  BE3C               	btfsc	dtoa@w+1,7,c
 10866  0020C0  D008               	goto	u8150
 10867  0020C2  503C               	movf	dtoa@w+1,w,c
 10868  0020C4  E103               	bnz	u8140
 10869  0020C6  043B               	decf	dtoa@w,w,c
 10870  0020C8  A0D8               	btfss	status,0,c
 10871  0020CA  D003               	goto	u8150
 10872  0020CC                     u8140:
 10873  0020CC  0101               	movlb	1	; () banked
 10874  0020CE  B30A               	btfsc	_flags& (0+255),1,b
 10875  0020D0  D762               	goto	l7248
 10876  0020D2                     u8150:
 10877                           
 10878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10879  0020D2  503D               	movf	dtoa@s,w,c
 10880  0020D4  103E               	iorwf	dtoa@s+1,w,c
 10881  0020D6  A4D8               	btfss	status,2,c
 10882  0020D8  D003               	goto	u8170
 10883  0020DA  0101               	movlb	1	; () banked
 10884  0020DC  A50A               	btfss	_flags& (0+255),2,b
 10885  0020DE  D017               	goto	l7282
 10886  0020E0                     u8170:
 10887                           
 10888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10889  0020E0  0647               	decf	dtoa@i,f,c
 10890  0020E2  A0D8               	btfss	status,0,c
 10891  0020E4  0648               	decf	dtoa@i+1,f,c
 10892                           
 10893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10894  0020E6  503D               	movf	dtoa@s,w,c
 10895  0020E8  103E               	iorwf	dtoa@s+1,w,c
 10896  0020EA  A4D8               	btfss	status,2,c
 10897  0020EC  D004               	goto	l7278
 10898  0020EE  0E00               	movlw	0
 10899  0020F0  6E38               	movwf	_dtoa$1329+1,c
 10900  0020F2  0E2B               	movlw	43
 10901  0020F4  D003               	goto	L18
 10902  0020F6                     l7278:
 10903  0020F6  0E00               	movlw	0
 10904  0020F8  6E38               	movwf	_dtoa$1329+1,c
 10905  0020FA  0E2D               	movlw	45
 10906  0020FC                     L18:
 10907  0020FC  6E37               	movwf	_dtoa$1329,c
 10908  0020FE  0E13               	movlw	low _dbuf
 10909  002100  2447               	addwf	dtoa@i,w,c
 10910  002102  6ED9               	movwf	fsr2l,c
 10911  002104  0E01               	movlw	high _dbuf
 10912  002106  2048               	addwfc	dtoa@i+1,w,c
 10913  002108  6EDA               	movwf	fsr2h,c
 10914  00210A  C037  FFDF         	movff	_dtoa$1329,indf2
 10915  00210E                     l7282:
 10916                           
 10917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10918  00210E  C025  F01A         	movff	dtoa@fp,pad@fp
 10919  002112  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 10920  002116  0E13               	movlw	low _dbuf
 10921  002118  2447               	addwf	dtoa@i,w,c
 10922  00211A  6E1C               	movwf	pad@buf,c
 10923  00211C  0E01               	movlw	high _dbuf
 10924  00211E  2048               	addwfc	dtoa@i+1,w,c
 10925  002120  6E1D               	movwf	pad@buf+1,c
 10926  002122  C03B  F01E         	movff	dtoa@w,pad@p
 10927  002126  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 10928  00212A  ECEC  F016         	call	_pad	;wreg free
 10929  00212E  C01A  F025         	movff	?_pad,?_dtoa
 10930  002132  C01B  F026         	movff	?_pad+1,?_dtoa+1
 10931  002136  0012               	return		;funcret
 10932  002138                     __end_of_dtoa:
 10933                           	opt callstack 0
 10934                           
 10935 ;; *************** function _abs *****************
 10936 ;; Defined at:
 10937 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  a               2   23[COMRAM] int 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;		None
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  2   23[COMRAM] int 
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;Total ram usage:        4 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    2
 10958 ;; This function calls:
 10959 ;;		Nothing
 10960 ;; This function is called by:
 10961 ;;		_tirePositioning
 10962 ;;		_opErrorCorrectionDegrees
 10963 ;;		_dtoa
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text44
 10968  00363E                     __ptext44:
 10969                           	opt callstack 0
 10970  00363E                     _abs:
 10971                           	opt callstack 24
 10972                           
 10973                           ;incstack = 0
 10974  00363E  BE19               	btfsc	abs@a+1,7,c
 10975  003640  D005               	goto	u7020
 10976  003642  5019               	movf	abs@a+1,w,c
 10977  003644  E110               	bnz	l1376
 10978  003646  0418               	decf	abs@a,w,c
 10979  003648  B0D8               	btfsc	status,0,c
 10980  00364A  D00D               	goto	l1376
 10981  00364C                     u7020:
 10982  00364C  C018  F01A         	movff	abs@a,??_abs
 10983  003650  C019  F01B         	movff	abs@a+1,??_abs+1
 10984  003654  1E1A               	comf	??_abs,f,c
 10985  003656  1E1B               	comf	??_abs+1,f,c
 10986  003658  4A1A               	infsnz	??_abs,f,c
 10987  00365A  2A1B               	incf	??_abs+1,f,c
 10988  00365C  C01A  F018         	movff	??_abs,?_abs
 10989  003660  C01B  F019         	movff	??_abs+1,?_abs+1
 10990  003664  0012               	return	
 10991  003666                     l1376:
 10992  003666  C018  F018         	movff	abs@a,?_abs
 10993  00366A  C019  F019         	movff	abs@a+1,?_abs+1
 10994  00366E  0012               	return		;funcret
 10995  003670                     __end_of_abs:
 10996                           	opt callstack 0
 10997                           
 10998 ;; *************** function ___aomod *****************
 10999 ;; Defined at:
 11000 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  dividend        8    5[COMRAM] long long 
 11003 ;;  divisor         8   13[COMRAM] long long 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  sign            1   22[COMRAM] unsigned char 
 11006 ;;  counter         1   21[COMRAM] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  8    5[COMRAM] long long 
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11016 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11019 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;Total ram usage:       18 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    2
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_dtoa
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           	psect	text45
 11031  002A76                     __ptext45:
 11032                           	opt callstack 0
 11033  002A76                     ___aomod:
 11034                           	opt callstack 24
 11035                           
 11036                           ;incstack = 0
 11037  002A76  0E00               	movlw	0
 11038  002A78  6E17               	movwf	___aomod@sign,c
 11039  002A7A  AE0D               	btfss	___aomod@dividend+7,7,c
 11040  002A7C  D012               	goto	l6764
 11041  002A7E  1E0D               	comf	___aomod@dividend+7,f,c
 11042  002A80  1E0C               	comf	___aomod@dividend+6,f,c
 11043  002A82  1E0B               	comf	___aomod@dividend+5,f,c
 11044  002A84  1E0A               	comf	___aomod@dividend+4,f,c
 11045  002A86  1E09               	comf	___aomod@dividend+3,f,c
 11046  002A88  1E08               	comf	___aomod@dividend+2,f,c
 11047  002A8A  1E07               	comf	___aomod@dividend+1,f,c
 11048  002A8C  6C06               	negf	___aomod@dividend,c
 11049  002A8E  0E00               	movlw	0
 11050  002A90  2207               	addwfc	___aomod@dividend+1,f,c
 11051  002A92  2208               	addwfc	___aomod@dividend+2,f,c
 11052  002A94  2209               	addwfc	___aomod@dividend+3,f,c
 11053  002A96  220A               	addwfc	___aomod@dividend+4,f,c
 11054  002A98  220B               	addwfc	___aomod@dividend+5,f,c
 11055  002A9A  220C               	addwfc	___aomod@dividend+6,f,c
 11056  002A9C  220D               	addwfc	___aomod@dividend+7,f,c
 11057  002A9E  0E01               	movlw	1
 11058  002AA0  6E17               	movwf	___aomod@sign,c
 11059  002AA2                     l6764:
 11060  002AA2  AE15               	btfss	___aomod@divisor+7,7,c
 11061  002AA4  D010               	goto	l6768
 11062  002AA6  1E15               	comf	___aomod@divisor+7,f,c
 11063  002AA8  1E14               	comf	___aomod@divisor+6,f,c
 11064  002AAA  1E13               	comf	___aomod@divisor+5,f,c
 11065  002AAC  1E12               	comf	___aomod@divisor+4,f,c
 11066  002AAE  1E11               	comf	___aomod@divisor+3,f,c
 11067  002AB0  1E10               	comf	___aomod@divisor+2,f,c
 11068  002AB2  1E0F               	comf	___aomod@divisor+1,f,c
 11069  002AB4  6C0E               	negf	___aomod@divisor,c
 11070  002AB6  0E00               	movlw	0
 11071  002AB8  220F               	addwfc	___aomod@divisor+1,f,c
 11072  002ABA  2210               	addwfc	___aomod@divisor+2,f,c
 11073  002ABC  2211               	addwfc	___aomod@divisor+3,f,c
 11074  002ABE  2212               	addwfc	___aomod@divisor+4,f,c
 11075  002AC0  2213               	addwfc	___aomod@divisor+5,f,c
 11076  002AC2  2214               	addwfc	___aomod@divisor+6,f,c
 11077  002AC4  2215               	addwfc	___aomod@divisor+7,f,c
 11078  002AC6                     l6768:
 11079  002AC6  500E               	movf	___aomod@divisor,w,c
 11080  002AC8  100F               	iorwf	___aomod@divisor+1,w,c
 11081  002ACA  1010               	iorwf	___aomod@divisor+2,w,c
 11082  002ACC  1011               	iorwf	___aomod@divisor+3,w,c
 11083  002ACE  1012               	iorwf	___aomod@divisor+4,w,c
 11084  002AD0  1013               	iorwf	___aomod@divisor+5,w,c
 11085  002AD2  1014               	iorwf	___aomod@divisor+6,w,c
 11086  002AD4  1015               	iorwf	___aomod@divisor+7,w,c
 11087  002AD6  B4D8               	btfsc	status,2,c
 11088  002AD8  D03C               	goto	l6784
 11089  002ADA  0E01               	movlw	1
 11090  002ADC  6E16               	movwf	___aomod@counter,c
 11091  002ADE  D00A               	goto	l6774
 11092  002AE0                     l6772:
 11093  002AE0  90D8               	bcf	status,0,c
 11094  002AE2  360E               	rlcf	___aomod@divisor,f,c
 11095  002AE4  360F               	rlcf	___aomod@divisor+1,f,c
 11096  002AE6  3610               	rlcf	___aomod@divisor+2,f,c
 11097  002AE8  3611               	rlcf	___aomod@divisor+3,f,c
 11098  002AEA  3612               	rlcf	___aomod@divisor+4,f,c
 11099  002AEC  3613               	rlcf	___aomod@divisor+5,f,c
 11100  002AEE  3614               	rlcf	___aomod@divisor+6,f,c
 11101  002AF0  3615               	rlcf	___aomod@divisor+7,f,c
 11102  002AF2  2A16               	incf	___aomod@counter,f,c
 11103  002AF4                     l6774:
 11104  002AF4  AE15               	btfss	___aomod@divisor+7,7,c
 11105  002AF6  D7F4               	goto	l6772
 11106  002AF8                     u7260:
 11107  002AF8  500E               	movf	___aomod@divisor,w,c
 11108  002AFA  5C06               	subwf	___aomod@dividend,w,c
 11109  002AFC  500F               	movf	___aomod@divisor+1,w,c
 11110  002AFE  5807               	subwfb	___aomod@dividend+1,w,c
 11111  002B00  5010               	movf	___aomod@divisor+2,w,c
 11112  002B02  5808               	subwfb	___aomod@dividend+2,w,c
 11113  002B04  5011               	movf	___aomod@divisor+3,w,c
 11114  002B06  5809               	subwfb	___aomod@dividend+3,w,c
 11115  002B08  5012               	movf	___aomod@divisor+4,w,c
 11116  002B0A  580A               	subwfb	___aomod@dividend+4,w,c
 11117  002B0C  5013               	movf	___aomod@divisor+5,w,c
 11118  002B0E  580B               	subwfb	___aomod@dividend+5,w,c
 11119  002B10  5014               	movf	___aomod@divisor+6,w,c
 11120  002B12  580C               	subwfb	___aomod@dividend+6,w,c
 11121  002B14  5015               	movf	___aomod@divisor+7,w,c
 11122  002B16  580D               	subwfb	___aomod@dividend+7,w,c
 11123  002B18  A0D8               	btfss	status,0,c
 11124  002B1A  D010               	goto	l6780
 11125  002B1C  500E               	movf	___aomod@divisor,w,c
 11126  002B1E  5E06               	subwf	___aomod@dividend,f,c
 11127  002B20  500F               	movf	___aomod@divisor+1,w,c
 11128  002B22  5A07               	subwfb	___aomod@dividend+1,f,c
 11129  002B24  5010               	movf	___aomod@divisor+2,w,c
 11130  002B26  5A08               	subwfb	___aomod@dividend+2,f,c
 11131  002B28  5011               	movf	___aomod@divisor+3,w,c
 11132  002B2A  5A09               	subwfb	___aomod@dividend+3,f,c
 11133  002B2C  5012               	movf	___aomod@divisor+4,w,c
 11134  002B2E  5A0A               	subwfb	___aomod@dividend+4,f,c
 11135  002B30  5013               	movf	___aomod@divisor+5,w,c
 11136  002B32  5A0B               	subwfb	___aomod@dividend+5,f,c
 11137  002B34  5014               	movf	___aomod@divisor+6,w,c
 11138  002B36  5A0C               	subwfb	___aomod@dividend+6,f,c
 11139  002B38  5015               	movf	___aomod@divisor+7,w,c
 11140  002B3A  5A0D               	subwfb	___aomod@dividend+7,f,c
 11141  002B3C                     l6780:
 11142  002B3C  90D8               	bcf	status,0,c
 11143  002B3E  3215               	rrcf	___aomod@divisor+7,f,c
 11144  002B40  3214               	rrcf	___aomod@divisor+6,f,c
 11145  002B42  3213               	rrcf	___aomod@divisor+5,f,c
 11146  002B44  3212               	rrcf	___aomod@divisor+4,f,c
 11147  002B46  3211               	rrcf	___aomod@divisor+3,f,c
 11148  002B48  3210               	rrcf	___aomod@divisor+2,f,c
 11149  002B4A  320F               	rrcf	___aomod@divisor+1,f,c
 11150  002B4C  320E               	rrcf	___aomod@divisor,f,c
 11151  002B4E  2E16               	decfsz	___aomod@counter,f,c
 11152  002B50  D7D3               	goto	u7260
 11153  002B52                     l6784:
 11154  002B52  5017               	movf	___aomod@sign,w,c
 11155  002B54  B4D8               	btfsc	status,2,c
 11156  002B56  D010               	goto	l6788
 11157  002B58  1E0D               	comf	___aomod@dividend+7,f,c
 11158  002B5A  1E0C               	comf	___aomod@dividend+6,f,c
 11159  002B5C  1E0B               	comf	___aomod@dividend+5,f,c
 11160  002B5E  1E0A               	comf	___aomod@dividend+4,f,c
 11161  002B60  1E09               	comf	___aomod@dividend+3,f,c
 11162  002B62  1E08               	comf	___aomod@dividend+2,f,c
 11163  002B64  1E07               	comf	___aomod@dividend+1,f,c
 11164  002B66  6C06               	negf	___aomod@dividend,c
 11165  002B68  0E00               	movlw	0
 11166  002B6A  2207               	addwfc	___aomod@dividend+1,f,c
 11167  002B6C  2208               	addwfc	___aomod@dividend+2,f,c
 11168  002B6E  2209               	addwfc	___aomod@dividend+3,f,c
 11169  002B70  220A               	addwfc	___aomod@dividend+4,f,c
 11170  002B72  220B               	addwfc	___aomod@dividend+5,f,c
 11171  002B74  220C               	addwfc	___aomod@dividend+6,f,c
 11172  002B76  220D               	addwfc	___aomod@dividend+7,f,c
 11173  002B78                     l6788:
 11174  002B78  C006  F006         	movff	___aomod@dividend,?___aomod
 11175  002B7C  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 11176  002B80  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 11177  002B84  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 11178  002B88  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 11179  002B8C  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 11180  002B90  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 11181  002B94  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 11182  002B98  0012               	return		;funcret
 11183  002B9A                     __end_of___aomod:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function ___aodiv *****************
 11187 ;; Defined at:
 11188 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  dividend        8    5[COMRAM] long long 
 11191 ;;  divisor         8   13[COMRAM] long long 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;  quotient        8   23[COMRAM] long long 
 11194 ;;  sign            1   22[COMRAM] unsigned char 
 11195 ;;  counter         1   21[COMRAM] unsigned char 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  8    5[COMRAM] long long 
 11198 ;; Registers used:
 11199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11205 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11208 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;Total ram usage:       26 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:    2
 11212 ;; This function calls:
 11213 ;;		Nothing
 11214 ;; This function is called by:
 11215 ;;		_dtoa
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219                           	psect	text46
 11220  00256A                     __ptext46:
 11221                           	opt callstack 0
 11222  00256A                     ___aodiv:
 11223                           	opt callstack 24
 11224                           
 11225                           ;incstack = 0
 11226  00256A  0E00               	movlw	0
 11227  00256C  6E17               	movwf	___aodiv@sign,c
 11228  00256E  AE15               	btfss	___aodiv@divisor+7,7,c
 11229  002570  D012               	goto	l6720
 11230  002572  1E15               	comf	___aodiv@divisor+7,f,c
 11231  002574  1E14               	comf	___aodiv@divisor+6,f,c
 11232  002576  1E13               	comf	___aodiv@divisor+5,f,c
 11233  002578  1E12               	comf	___aodiv@divisor+4,f,c
 11234  00257A  1E11               	comf	___aodiv@divisor+3,f,c
 11235  00257C  1E10               	comf	___aodiv@divisor+2,f,c
 11236  00257E  1E0F               	comf	___aodiv@divisor+1,f,c
 11237  002580  6C0E               	negf	___aodiv@divisor,c
 11238  002582  0E00               	movlw	0
 11239  002584  220F               	addwfc	___aodiv@divisor+1,f,c
 11240  002586  2210               	addwfc	___aodiv@divisor+2,f,c
 11241  002588  2211               	addwfc	___aodiv@divisor+3,f,c
 11242  00258A  2212               	addwfc	___aodiv@divisor+4,f,c
 11243  00258C  2213               	addwfc	___aodiv@divisor+5,f,c
 11244  00258E  2214               	addwfc	___aodiv@divisor+6,f,c
 11245  002590  2215               	addwfc	___aodiv@divisor+7,f,c
 11246  002592  0E01               	movlw	1
 11247  002594  6E17               	movwf	___aodiv@sign,c
 11248  002596                     l6720:
 11249  002596  AE0D               	btfss	___aodiv@dividend+7,7,c
 11250  002598  D012               	goto	l6726
 11251  00259A  1E0D               	comf	___aodiv@dividend+7,f,c
 11252  00259C  1E0C               	comf	___aodiv@dividend+6,f,c
 11253  00259E  1E0B               	comf	___aodiv@dividend+5,f,c
 11254  0025A0  1E0A               	comf	___aodiv@dividend+4,f,c
 11255  0025A2  1E09               	comf	___aodiv@dividend+3,f,c
 11256  0025A4  1E08               	comf	___aodiv@dividend+2,f,c
 11257  0025A6  1E07               	comf	___aodiv@dividend+1,f,c
 11258  0025A8  6C06               	negf	___aodiv@dividend,c
 11259  0025AA  0E00               	movlw	0
 11260  0025AC  2207               	addwfc	___aodiv@dividend+1,f,c
 11261  0025AE  2208               	addwfc	___aodiv@dividend+2,f,c
 11262  0025B0  2209               	addwfc	___aodiv@dividend+3,f,c
 11263  0025B2  220A               	addwfc	___aodiv@dividend+4,f,c
 11264  0025B4  220B               	addwfc	___aodiv@dividend+5,f,c
 11265  0025B6  220C               	addwfc	___aodiv@dividend+6,f,c
 11266  0025B8  220D               	addwfc	___aodiv@dividend+7,f,c
 11267  0025BA  0E01               	movlw	1
 11268  0025BC  1A17               	xorwf	___aodiv@sign,f,c
 11269  0025BE                     l6726:
 11270  0025BE  EE20  F018         	lfsr	2,___aodiv@quotient
 11271  0025C2  0E07               	movlw	7
 11272  0025C4                     u7181:
 11273  0025C4  6ADE               	clrf	postinc2,c
 11274  0025C6  06E8               	decf	wreg,f,c
 11275  0025C8  E2FD               	bc	u7181
 11276  0025CA  500E               	movf	___aodiv@divisor,w,c
 11277  0025CC  100F               	iorwf	___aodiv@divisor+1,w,c
 11278  0025CE  1010               	iorwf	___aodiv@divisor+2,w,c
 11279  0025D0  1011               	iorwf	___aodiv@divisor+3,w,c
 11280  0025D2  1012               	iorwf	___aodiv@divisor+4,w,c
 11281  0025D4  1013               	iorwf	___aodiv@divisor+5,w,c
 11282  0025D6  1014               	iorwf	___aodiv@divisor+6,w,c
 11283  0025D8  1015               	iorwf	___aodiv@divisor+7,w,c
 11284  0025DA  B4D8               	btfsc	status,2,c
 11285  0025DC  D046               	goto	l6748
 11286  0025DE  0E01               	movlw	1
 11287  0025E0  6E16               	movwf	___aodiv@counter,c
 11288  0025E2  D00A               	goto	l6734
 11289  0025E4                     l6732:
 11290  0025E4  90D8               	bcf	status,0,c
 11291  0025E6  360E               	rlcf	___aodiv@divisor,f,c
 11292  0025E8  360F               	rlcf	___aodiv@divisor+1,f,c
 11293  0025EA  3610               	rlcf	___aodiv@divisor+2,f,c
 11294  0025EC  3611               	rlcf	___aodiv@divisor+3,f,c
 11295  0025EE  3612               	rlcf	___aodiv@divisor+4,f,c
 11296  0025F0  3613               	rlcf	___aodiv@divisor+5,f,c
 11297  0025F2  3614               	rlcf	___aodiv@divisor+6,f,c
 11298  0025F4  3615               	rlcf	___aodiv@divisor+7,f,c
 11299  0025F6  2A16               	incf	___aodiv@counter,f,c
 11300  0025F8                     l6734:
 11301  0025F8  AE15               	btfss	___aodiv@divisor+7,7,c
 11302  0025FA  D7F4               	goto	l6732
 11303  0025FC                     u7200:
 11304  0025FC  90D8               	bcf	status,0,c
 11305  0025FE  3618               	rlcf	___aodiv@quotient,f,c
 11306  002600  3619               	rlcf	___aodiv@quotient+1,f,c
 11307  002602  361A               	rlcf	___aodiv@quotient+2,f,c
 11308  002604  361B               	rlcf	___aodiv@quotient+3,f,c
 11309  002606  361C               	rlcf	___aodiv@quotient+4,f,c
 11310  002608  361D               	rlcf	___aodiv@quotient+5,f,c
 11311  00260A  361E               	rlcf	___aodiv@quotient+6,f,c
 11312  00260C  361F               	rlcf	___aodiv@quotient+7,f,c
 11313  00260E  500E               	movf	___aodiv@divisor,w,c
 11314  002610  5C06               	subwf	___aodiv@dividend,w,c
 11315  002612  500F               	movf	___aodiv@divisor+1,w,c
 11316  002614  5807               	subwfb	___aodiv@dividend+1,w,c
 11317  002616  5010               	movf	___aodiv@divisor+2,w,c
 11318  002618  5808               	subwfb	___aodiv@dividend+2,w,c
 11319  00261A  5011               	movf	___aodiv@divisor+3,w,c
 11320  00261C  5809               	subwfb	___aodiv@dividend+3,w,c
 11321  00261E  5012               	movf	___aodiv@divisor+4,w,c
 11322  002620  580A               	subwfb	___aodiv@dividend+4,w,c
 11323  002622  5013               	movf	___aodiv@divisor+5,w,c
 11324  002624  580B               	subwfb	___aodiv@dividend+5,w,c
 11325  002626  5014               	movf	___aodiv@divisor+6,w,c
 11326  002628  580C               	subwfb	___aodiv@dividend+6,w,c
 11327  00262A  5015               	movf	___aodiv@divisor+7,w,c
 11328  00262C  580D               	subwfb	___aodiv@dividend+7,w,c
 11329  00262E  A0D8               	btfss	status,0,c
 11330  002630  D011               	goto	l6744
 11331  002632  500E               	movf	___aodiv@divisor,w,c
 11332  002634  5E06               	subwf	___aodiv@dividend,f,c
 11333  002636  500F               	movf	___aodiv@divisor+1,w,c
 11334  002638  5A07               	subwfb	___aodiv@dividend+1,f,c
 11335  00263A  5010               	movf	___aodiv@divisor+2,w,c
 11336  00263C  5A08               	subwfb	___aodiv@dividend+2,f,c
 11337  00263E  5011               	movf	___aodiv@divisor+3,w,c
 11338  002640  5A09               	subwfb	___aodiv@dividend+3,f,c
 11339  002642  5012               	movf	___aodiv@divisor+4,w,c
 11340  002644  5A0A               	subwfb	___aodiv@dividend+4,f,c
 11341  002646  5013               	movf	___aodiv@divisor+5,w,c
 11342  002648  5A0B               	subwfb	___aodiv@dividend+5,f,c
 11343  00264A  5014               	movf	___aodiv@divisor+6,w,c
 11344  00264C  5A0C               	subwfb	___aodiv@dividend+6,f,c
 11345  00264E  5015               	movf	___aodiv@divisor+7,w,c
 11346  002650  5A0D               	subwfb	___aodiv@dividend+7,f,c
 11347  002652  8018               	bsf	___aodiv@quotient,0,c
 11348  002654                     l6744:
 11349  002654  90D8               	bcf	status,0,c
 11350  002656  3215               	rrcf	___aodiv@divisor+7,f,c
 11351  002658  3214               	rrcf	___aodiv@divisor+6,f,c
 11352  00265A  3213               	rrcf	___aodiv@divisor+5,f,c
 11353  00265C  3212               	rrcf	___aodiv@divisor+4,f,c
 11354  00265E  3211               	rrcf	___aodiv@divisor+3,f,c
 11355  002660  3210               	rrcf	___aodiv@divisor+2,f,c
 11356  002662  320F               	rrcf	___aodiv@divisor+1,f,c
 11357  002664  320E               	rrcf	___aodiv@divisor,f,c
 11358  002666  2E16               	decfsz	___aodiv@counter,f,c
 11359  002668  D7C9               	goto	u7200
 11360  00266A                     l6748:
 11361  00266A  5017               	movf	___aodiv@sign,w,c
 11362  00266C  B4D8               	btfsc	status,2,c
 11363  00266E  D010               	goto	l6752
 11364  002670  1E1F               	comf	___aodiv@quotient+7,f,c
 11365  002672  1E1E               	comf	___aodiv@quotient+6,f,c
 11366  002674  1E1D               	comf	___aodiv@quotient+5,f,c
 11367  002676  1E1C               	comf	___aodiv@quotient+4,f,c
 11368  002678  1E1B               	comf	___aodiv@quotient+3,f,c
 11369  00267A  1E1A               	comf	___aodiv@quotient+2,f,c
 11370  00267C  1E19               	comf	___aodiv@quotient+1,f,c
 11371  00267E  6C18               	negf	___aodiv@quotient,c
 11372  002680  0E00               	movlw	0
 11373  002682  2219               	addwfc	___aodiv@quotient+1,f,c
 11374  002684  221A               	addwfc	___aodiv@quotient+2,f,c
 11375  002686  221B               	addwfc	___aodiv@quotient+3,f,c
 11376  002688  221C               	addwfc	___aodiv@quotient+4,f,c
 11377  00268A  221D               	addwfc	___aodiv@quotient+5,f,c
 11378  00268C  221E               	addwfc	___aodiv@quotient+6,f,c
 11379  00268E  221F               	addwfc	___aodiv@quotient+7,f,c
 11380  002690                     l6752:
 11381  002690  C018  F006         	movff	___aodiv@quotient,?___aodiv
 11382  002694  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 11383  002698  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 11384  00269C  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 11385  0026A0  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 11386  0026A4  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 11387  0026A8  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 11388  0026AC  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 11389  0026B0  0012               	return		;funcret
 11390  0026B2                     __end_of___aodiv:
 11391                           	opt callstack 0
 11392                           
 11393 ;; *************** function _ctoa *****************
 11394 ;; Defined at:
 11395 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11398 ;;		 -> NULL(0), 
 11399 ;;  c               1   38[COMRAM] unsigned char 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  w               2   39[COMRAM] int 
 11402 ;;  l               2    0        int 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2   36[COMRAM] int 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;Total ram usage:        5 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    9
 11419 ;; This function calls:
 11420 ;;		_pad
 11421 ;; This function is called by:
 11422 ;;		_vfpfcnvrt
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text47
 11427  0032E6                     __ptext47:
 11428                           	opt callstack 0
 11429  0032E6                     _ctoa:
 11430                           	opt callstack 18
 11431                           
 11432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 11433                           
 11434                           ;incstack = 0
 11435  0032E6  0101               	movlb	1	; () banked
 11436  0032E8  5106               	movf	_width& (0+255),w,b
 11437  0032EA  1107               	iorwf	(_width+1)& (0+255),w,b
 11438  0032EC  A4D8               	btfss	status,2,c
 11439  0032EE  D005               	goto	l7214
 11440                           
 11441                           ; BSR set to: 1
 11442  0032F0  C106  F028         	movff	_width,ctoa@w
 11443  0032F4  C107  F029         	movff	_width+1,ctoa@w+1
 11444  0032F8  D006               	goto	l7216
 11445  0032FA                     l7214:
 11446                           
 11447                           ; BSR set to: 1
 11448  0032FA  0EFF               	movlw	255
 11449  0032FC  2506               	addwf	_width& (0+255),w,b
 11450  0032FE  6E28               	movwf	ctoa@w,c
 11451  003300  0EFF               	movlw	255
 11452  003302  2107               	addwfc	(_width+1)& (0+255),w,b
 11453  003304  6E29               	movwf	ctoa@w+1,c
 11454  003306                     l7216:
 11455                           
 11456                           ; BSR set to: 1
 11457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 11458  003306  C027  F113         	movff	ctoa@c,_dbuf
 11459                           
 11460                           ; BSR set to: 1
 11461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 11462  00330A  0E00               	movlw	0
 11463  00330C  6F14               	movwf	(_dbuf+1)& (0+255),b
 11464                           
 11465                           ; BSR set to: 1
 11466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 11467  00330E  C025  F01A         	movff	ctoa@fp,pad@fp
 11468  003312  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 11469  003316  0E13               	movlw	low _dbuf
 11470  003318  6E1C               	movwf	pad@buf,c
 11471  00331A  0E01               	movlw	high _dbuf
 11472  00331C  6E1D               	movwf	pad@buf+1,c
 11473  00331E  C028  F01E         	movff	ctoa@w,pad@p
 11474  003322  C029  F01F         	movff	ctoa@w+1,pad@p+1
 11475  003326  ECEC  F016         	call	_pad	;wreg free
 11476  00332A  C01A  F025         	movff	?_pad,?_ctoa
 11477  00332E  C01B  F026         	movff	?_pad+1,?_ctoa+1
 11478  003332  0012               	return		;funcret
 11479  003334                     __end_of_ctoa:
 11480                           	opt callstack 0
 11481                           
 11482 ;; *************** function _pad *****************
 11483 ;; Defined at:
 11484 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11487 ;;		 -> NULL(0), 
 11488 ;;  buf             2   27[COMRAM] PTR unsigned char 
 11489 ;;		 -> dbuf(32), 
 11490 ;;  p               2   29[COMRAM] int 
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;  w               2   34[COMRAM] int 
 11493 ;;  i               2   32[COMRAM] int 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  2   25[COMRAM] int 
 11496 ;; Registers used:
 11497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11503 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;Total ram usage:       11 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:    8
 11510 ;; This function calls:
 11511 ;;		_fputc
 11512 ;;		_fputs
 11513 ;;		_strlen
 11514 ;; This function is called by:
 11515 ;;		_ctoa
 11516 ;;		_dtoa
 11517 ;;		_xtoa
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           	psect	text48
 11522  002DD8                     __ptext48:
 11523                           	opt callstack 0
 11524  002DD8                     _pad:
 11525                           	opt callstack 18
 11526                           
 11527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11528                           
 11529                           ;incstack = 0
 11530  002DD8  0101               	movlb	1	; () banked
 11531  002DDA  A10A               	btfss	_flags& (0+255),0,b
 11532  002DDC  D00A               	goto	l6666
 11533                           
 11534                           ; BSR set to: 1
 11535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11536  002DDE  C01C  F013         	movff	pad@buf,fputs@s
 11537  002DE2  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11538  002DE6  C01A  F015         	movff	pad@fp,fputs@fp
 11539  002DEA  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11540  002DEE  ECE9  F01A         	call	_fputs	;wreg free
 11541  002DF2                     l6666:
 11542                           
 11543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11544  002DF2  BE1F               	btfsc	pad@p+1,7,c
 11545  002DF4  D005               	goto	l6670
 11546  002DF6  C01E  F023         	movff	pad@p,pad@w
 11547  002DFA  C01F  F024         	movff	pad@p+1,pad@w+1
 11548  002DFE  D004               	goto	l566
 11549  002E00                     l6670:
 11550  002E00  0E00               	movlw	0
 11551  002E02  6E24               	movwf	pad@w+1,c
 11552  002E04  0E00               	movlw	0
 11553  002E06  6E23               	movwf	pad@w,c
 11554  002E08                     l566:
 11555                           
 11556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11557  002E08  0E00               	movlw	0
 11558  002E0A  6E22               	movwf	pad@i+1,c
 11559  002E0C  0E00               	movlw	0
 11560  002E0E  6E21               	movwf	pad@i,c
 11561                           
 11562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11563  002E10  D00C               	goto	l6676
 11564  002E12                     l6672:
 11565                           
 11566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11567  002E12  0E00               	movlw	0
 11568  002E14  6E0B               	movwf	fputc@c+1,c
 11569  002E16  0E20               	movlw	32
 11570  002E18  6E0A               	movwf	fputc@c,c
 11571  002E1A  C01A  F00C         	movff	pad@fp,fputc@fp
 11572  002E1E  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 11573  002E22  EC7C  F018         	call	_fputc	;wreg free
 11574                           
 11575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11576  002E26  4A21               	infsnz	pad@i,f,c
 11577  002E28  2A22               	incf	pad@i+1,f,c
 11578  002E2A                     l6676:
 11579                           
 11580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11581  002E2A  5023               	movf	pad@w,w,c
 11582  002E2C  5C21               	subwf	pad@i,w,c
 11583  002E2E  5022               	movf	pad@i+1,w,c
 11584  002E30  0A80               	xorlw	128
 11585  002E32  6E20               	movwf	??_pad& (0+255),c
 11586  002E34  5024               	movf	pad@w+1,w,c
 11587  002E36  0A80               	xorlw	128
 11588  002E38  5820               	subwfb	??_pad& (0+255),w,c
 11589  002E3A  A0D8               	btfss	status,0,c
 11590  002E3C  D7EA               	goto	l6672
 11591                           
 11592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11593  002E3E  0101               	movlb	1	; () banked
 11594  002E40  B10A               	btfsc	_flags& (0+255),0,b
 11595  002E42  D00A               	goto	l6680
 11596                           
 11597                           ; BSR set to: 1
 11598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11599  002E44  C01C  F013         	movff	pad@buf,fputs@s
 11600  002E48  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11601  002E4C  C01A  F015         	movff	pad@fp,fputs@fp
 11602  002E50  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11603  002E54  ECE9  F01A         	call	_fputs	;wreg free
 11604  002E58                     l6680:
 11605                           
 11606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11607  002E58  C01C  F006         	movff	pad@buf,strlen@s
 11608  002E5C  C01D  F007         	movff	pad@buf+1,strlen@s+1
 11609  002E60  EC08  F01A         	call	_strlen	;wreg free
 11610  002E64  5023               	movf	pad@w,w,c
 11611  002E66  2406               	addwf	?_strlen,w,c
 11612  002E68  6E1A               	movwf	?_pad,c
 11613  002E6A  5024               	movf	pad@w+1,w,c
 11614  002E6C  2007               	addwfc	?_strlen+1,w,c
 11615  002E6E  6E1B               	movwf	?_pad+1,c
 11616  002E70  0012               	return		;funcret
 11617  002E72                     __end_of_pad:
 11618                           	opt callstack 0
 11619                           
 11620 ;; *************** function _strlen *****************
 11621 ;; Defined at:
 11622 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  s               2    5[COMRAM] PTR const unsigned char 
 11625 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_50(16), 
 11626 ;;		 -> STR_48(14), STR_46(11), STR_44(9), STR_42(16), 
 11627 ;;		 -> STR_40(13), STR_38(13), STR_36(9), STR_34(13), 
 11628 ;;		 -> STR_32(14), STR_30(10), STR_26(9), STR_18(14), 
 11629 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11630 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11631 ;;		 -> STR_2(10), 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  a               2    7[COMRAM] PTR const unsigned char 
 11634 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_50(16), 
 11635 ;;		 -> STR_48(14), STR_46(11), STR_44(9), STR_42(16), 
 11636 ;;		 -> STR_40(13), STR_38(13), STR_36(9), STR_34(13), 
 11637 ;;		 -> STR_32(14), STR_30(10), STR_26(9), STR_18(14), 
 11638 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11639 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11640 ;;		 -> STR_2(10), 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  2    5[COMRAM] unsigned int 
 11643 ;; Registers used:
 11644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:        4 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    2
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_pad
 11661 ;;		_stoa
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665                           	psect	text49
 11666  003410                     __ptext49:
 11667                           	opt callstack 0
 11668  003410                     _strlen:
 11669                           	opt callstack 23
 11670                           
 11671                           ;incstack = 0
 11672  003410  C006  F008         	movff	strlen@s,strlen@a
 11673  003414  C007  F009         	movff	strlen@s+1,strlen@a+1
 11674  003418  D002               	goto	l6648
 11675  00341A                     l6646:
 11676  00341A  4A06               	infsnz	strlen@s,f,c
 11677  00341C  2A07               	incf	strlen@s+1,f,c
 11678  00341E                     l6648:
 11679  00341E  C006  FFF6         	movff	strlen@s,tblptrl
 11680  003422  C007  FFF7         	movff	strlen@s+1,tblptrh
 11681  003426  0E00               	movlw	low (__mediumconst shr (0+16))
 11682  003428  6EF8               	movwf	tblptru,c
 11683  00342A  0E0F               	movlw	(high __ramtop+-1)
 11684  00342C  64F7               	cpfsgt	tblptrh,c
 11685  00342E  D003               	bra	u6987
 11686  003430  0008               	tblrd		*
 11687  003432  50F5               	movf	tablat,w,c
 11688  003434  D005               	bra	u6980
 11689  003436                     u6987:
 11690  003436  CFF6 FFE1          	movff	tblptrl,fsr1l
 11691  00343A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11692  00343E  50E7               	movf	indf1,w,c
 11693  003440                     u6980:
 11694  003440  0900               	iorlw	0
 11695  003442  A4D8               	btfss	status,2,c
 11696  003444  D7EA               	goto	l6646
 11697  003446  5008               	movf	strlen@a,w,c
 11698  003448  5C06               	subwf	strlen@s,w,c
 11699  00344A  6E06               	movwf	?_strlen,c
 11700  00344C  5009               	movf	strlen@a+1,w,c
 11701  00344E  5807               	subwfb	strlen@s+1,w,c
 11702  003450  6E07               	movwf	?_strlen+1,c
 11703  003452  0012               	return		;funcret
 11704  003454                     __end_of_strlen:
 11705                           	opt callstack 0
 11706                           
 11707 ;; *************** function _fputs *****************
 11708 ;; Defined at:
 11709 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  s               2   18[COMRAM] PTR const unsigned char 
 11712 ;;		 -> dbuf(32), 
 11713 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 11714 ;;		 -> NULL(0), 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  i               2   23[COMRAM] int 
 11717 ;;  c               1   22[COMRAM] unsigned char 
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  2   18[COMRAM] int 
 11720 ;; Registers used:
 11721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;Total ram usage:        7 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    7
 11734 ;; This function calls:
 11735 ;;		_fputc
 11736 ;; This function is called by:
 11737 ;;		_pad
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text50
 11742  0035D2                     __ptext50:
 11743                           	opt callstack 0
 11744  0035D2                     _fputs:
 11745                           	opt callstack 18
 11746                           
 11747                           ;incstack = 0
 11748  0035D2  0E00               	movlw	0
 11749  0035D4  6E19               	movwf	fputs@i+1,c
 11750  0035D6  0E00               	movlw	0
 11751  0035D8  6E18               	movwf	fputs@i,c
 11752  0035DA  D00B               	goto	l6642
 11753  0035DC                     l6638:
 11754  0035DC  C017  F00A         	movff	fputs@c,fputc@c
 11755  0035E0  6A0B               	clrf	fputc@c+1,c
 11756  0035E2  C015  F00C         	movff	fputs@fp,fputc@fp
 11757  0035E6  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 11758  0035EA  EC7C  F018         	call	_fputc	;wreg free
 11759  0035EE  4A18               	infsnz	fputs@i,f,c
 11760  0035F0  2A19               	incf	fputs@i+1,f,c
 11761  0035F2                     l6642:
 11762  0035F2  5018               	movf	fputs@i,w,c
 11763  0035F4  2413               	addwf	fputs@s,w,c
 11764  0035F6  6ED9               	movwf	fsr2l,c
 11765  0035F8  5019               	movf	fputs@i+1,w,c
 11766  0035FA  2014               	addwfc	fputs@s+1,w,c
 11767  0035FC  6EDA               	movwf	fsr2h,c
 11768  0035FE  50DF               	movf	indf2,w,c
 11769  003600  6E17               	movwf	fputs@c,c
 11770  003602  5017               	movf	fputs@c,w,c
 11771  003604  B4D8               	btfsc	status,2,c
 11772  003606  0012               	return	
 11773  003608  D7E9               	goto	l6638
 11774  00360A                     __end_of_fputs:
 11775                           	opt callstack 0
 11776                           
 11777 ;; *************** function _fputc *****************
 11778 ;; Defined at:
 11779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  c               2    9[COMRAM] int 
 11782 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11783 ;;		 -> NULL(0), 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;		None
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  2    9[COMRAM] int 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        9 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    6
 11802 ;; This function calls:
 11803 ;;		_putch
 11804 ;; This function is called by:
 11805 ;;		_pad
 11806 ;;		_stoa
 11807 ;;		_vfpfcnvrt
 11808 ;;		_fputs
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text51
 11813  0030F8                     __ptext51:
 11814                           	opt callstack 0
 11815  0030F8                     _fputc:
 11816                           	opt callstack 18
 11817                           
 11818                           ;incstack = 0
 11819  0030F8  500C               	movf	fputc@fp,w,c
 11820  0030FA  100D               	iorwf	fputc@fp+1,w,c
 11821  0030FC  B4D8               	btfsc	status,2,c
 11822  0030FE  D004               	goto	u6940
 11823  003100  500C               	movf	fputc@fp,w,c
 11824  003102  100D               	iorwf	fputc@fp+1,w,c
 11825  003104  A4D8               	btfss	status,2,c
 11826  003106  D004               	goto	l6628
 11827  003108                     u6940:
 11828  003108  500A               	movf	fputc@c,w,c
 11829  00310A  EC52  F01C         	call	_putch
 11830  00310E  0012               	return	
 11831  003110                     l6628:
 11832  003110  EE20 F004          	lfsr	2,4
 11833  003114  500C               	movf	fputc@fp,w,c
 11834  003116  26D9               	addwf	fsr2l,f,c
 11835  003118  500D               	movf	fputc@fp+1,w,c
 11836  00311A  22DA               	addwfc	fsr2h,f,c
 11837  00311C  50DE               	movf	postinc2,w,c
 11838  00311E  10DE               	iorwf	postinc2,w,c
 11839  003120  B4D8               	btfsc	status,2,c
 11840  003122  D016               	goto	u6960
 11841  003124  EE20 F004          	lfsr	2,4
 11842  003128  500C               	movf	fputc@fp,w,c
 11843  00312A  26D9               	addwf	fsr2l,f,c
 11844  00312C  500D               	movf	fputc@fp+1,w,c
 11845  00312E  22DA               	addwfc	fsr2h,f,c
 11846  003130  EE10 F002          	lfsr	1,2
 11847  003134  500C               	movf	fputc@fp,w,c
 11848  003136  26E1               	addwf	fsr1l,f,c
 11849  003138  500D               	movf	fputc@fp+1,w,c
 11850  00313A  22E2               	addwfc	fsr1h,f,c
 11851  00313C  50DE               	movf	postinc2,w,c
 11852  00313E  5CE6               	subwf	postinc1,w,c
 11853  003140  50E6               	movf	postinc1,w,c
 11854  003142  0A80               	xorlw	128
 11855  003144  6E12               	movwf	(??_fputc+4)& (0+255),c
 11856  003146  50DE               	movf	postinc2,w,c
 11857  003148  0A80               	xorlw	128
 11858  00314A  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 11859  00314C  B0D8               	btfsc	status,0,c
 11860  00314E  0012               	return	
 11861  003150                     u6960:
 11862  003150  EE20 F002          	lfsr	2,2
 11863  003154  500C               	movf	fputc@fp,w,c
 11864  003156  26D9               	addwf	fsr2l,f,c
 11865  003158  500D               	movf	fputc@fp+1,w,c
 11866  00315A  22DA               	addwfc	fsr2h,f,c
 11867  00315C  2ADE               	incf	postinc2,f,c
 11868  00315E  0E00               	movlw	0
 11869  003160  22DD               	addwfc	postdec2,f,c
 11870  003162  0012               	return		;funcret
 11871  003164                     __end_of_fputc:
 11872                           	opt callstack 0
 11873                           
 11874 ;; *************** function _putch *****************
 11875 ;; Defined at:
 11876 ;;		line 102 in file "lcd.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  data            1    wreg     unsigned char 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  data            1    8[COMRAM] unsigned char 
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		wreg, status,2, status,0, cstack
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;Total ram usage:        1 bytes
 11895 ;; Hardware stack levels used:    1
 11896 ;; Hardware stack levels required when called:    5
 11897 ;; This function calls:
 11898 ;;		_send_byte
 11899 ;; This function is called by:
 11900 ;;		_fputc
 11901 ;; This function uses a non-reentrant model
 11902 ;;
 11903                           
 11904                           	psect	text52
 11905  0038A4                     __ptext52:
 11906                           	opt callstack 0
 11907  0038A4                     _putch:
 11908                           	opt callstack 18
 11909                           
 11910                           ;incstack = 0
 11911                           ;putch@data stored from wreg
 11912  0038A4  6E09               	movwf	putch@data,c
 11913                           
 11914                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 11915  0038A6  848C               	bsf	3980,2,c	;volatile
 11916                           
 11917                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11918  0038A8  5009               	movf	putch@data,w,c
 11919  0038AA  EC49  F01C         	call	_send_byte
 11920  0038AE  0012               	return		;funcret
 11921  0038B0                     __end_of_putch:
 11922                           	opt callstack 0
 11923                           
 11924 ;; *************** function _atoi *****************
 11925 ;; Defined at:
 11926 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  s               2   12[COMRAM] PTR const unsigned char 
 11929 ;;		 -> STR_54(11), STR_53(11), STR_52(10), STR_51(13), 
 11930 ;;		 -> STR_49(3), STR_47(3), STR_45(3), STR_43(3), 
 11931 ;;		 -> STR_41(3), STR_39(3), STR_37(3), STR_35(3), 
 11932 ;;		 -> STR_33(3), STR_31(3), STR_29(3), STR_28(15), 
 11933 ;;		 -> STR_27(15), STR_25(3), STR_24(11), STR_23(10), 
 11934 ;;		 -> STR_22(6), STR_21(6), STR_20(3), STR_19(3), 
 11935 ;;		 -> STR_17(3), STR_15(5), STR_13(5), STR_10(9), 
 11936 ;;		 -> STR_8(3), STR_6(3), STR_4(5), STR_1(7), 
 11937 ;; Auto vars:     Size  Location     Type
 11938 ;;  n               2   25[COMRAM] int 
 11939 ;;  neg             2   18[COMRAM] int 
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  2   12[COMRAM] int 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;Total ram usage:       15 bytes
 11954 ;; Hardware stack levels used:    1
 11955 ;; Hardware stack levels required when called:    3
 11956 ;; This function calls:
 11957 ;;		___wmul
 11958 ;;		_isdigit
 11959 ;;		_isspace
 11960 ;; This function is called by:
 11961 ;;		_vfpfcnvrt
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text53
 11966  002936                     __ptext53:
 11967                           	opt callstack 0
 11968  002936                     _atoi:
 11969                           	opt callstack 24
 11970                           
 11971                           ;incstack = 0
 11972  002936  0E00               	movlw	0
 11973  002938  6E1B               	movwf	atoi@n+1,c
 11974  00293A  0E00               	movlw	0
 11975  00293C  6E1A               	movwf	atoi@n,c
 11976  00293E  0E00               	movlw	0
 11977  002940  6E14               	movwf	atoi@neg+1,c
 11978  002942  0E00               	movlw	0
 11979  002944  6E13               	movwf	atoi@neg,c
 11980  002946  D002               	goto	l7398
 11981  002948                     l7396:
 11982  002948  4A0D               	infsnz	atoi@s,f,c
 11983  00294A  2A0E               	incf	atoi@s+1,f,c
 11984  00294C                     l7398:
 11985  00294C  0E01               	movlw	1
 11986  00294E  6E19               	movwf	_atoi$1826,c
 11987  002950  C00D  FFF6         	movff	atoi@s,tblptrl
 11988  002954  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11989  002958                     	if	0	;tblptru may be non-zero
 11990  002958                     	endif
 11991  002958                     	if	0	;tblptru may be non-zero
 11992  002958                     	endif
 11993  002958  0008               	tblrd		*
 11994  00295A  50F5               	movf	tablat,w,c
 11995  00295C  0A20               	xorlw	32
 11996  00295E  B4D8               	btfsc	status,2,c
 11997  002960  D018               	goto	l7406
 11998  002962  0EF7               	movlw	247
 11999  002964  6E0F               	movwf	??_atoi& (0+255),c
 12000  002966  0EFF               	movlw	255
 12001  002968  6E10               	movwf	(??_atoi+1)& (0+255),c
 12002  00296A  C00D  FFF6         	movff	atoi@s,tblptrl
 12003  00296E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12004  002972                     	if	0	;tblptru may be non-zero
 12005  002972                     	endif
 12006  002972                     	if	0	;tblptru may be non-zero
 12007  002972                     	endif
 12008  002972  0008               	tblrd		*
 12009  002974  50F5               	movf	tablat,w,c
 12010  002976  6E11               	movwf	(??_atoi+2)& (0+255),c
 12011  002978  6A12               	clrf	(??_atoi+3)& (0+255),c
 12012  00297A  500F               	movf	??_atoi,w,c
 12013  00297C  2611               	addwf	??_atoi+2,f,c
 12014  00297E  5010               	movf	??_atoi+1,w,c
 12015  002980  2212               	addwfc	??_atoi+3,f,c
 12016  002982  5012               	movf	??_atoi+3,w,c
 12017  002984  E104               	bnz	u8470
 12018  002986  0E05               	movlw	5
 12019  002988  5C11               	subwf	??_atoi+2,w,c
 12020  00298A  A0D8               	btfss	status,0,c
 12021  00298C  D002               	goto	l7406
 12022  00298E                     u8470:
 12023  00298E  0E00               	movlw	0
 12024  002990  6E19               	movwf	_atoi$1826,c
 12025  002992                     l7406:
 12026  002992  C019  F015         	movff	_atoi$1826,_atoi$1825
 12027  002996  6A16               	clrf	_atoi$1825+1,c
 12028  002998  5015               	movf	_atoi$1825,w,c
 12029  00299A  1016               	iorwf	_atoi$1825+1,w,c
 12030  00299C  B4D8               	btfsc	status,2,c
 12031  00299E  D008               	goto	l7416
 12032  0029A0  D7D3               	goto	l7396
 12033  0029A2                     l7412:
 12034  0029A2  0E00               	movlw	0
 12035  0029A4  6E14               	movwf	atoi@neg+1,c
 12036  0029A6  0E01               	movlw	1
 12037  0029A8  6E13               	movwf	atoi@neg,c
 12038  0029AA                     l7414:
 12039  0029AA  4A0D               	infsnz	atoi@s,f,c
 12040  0029AC  2A0E               	incf	atoi@s+1,f,c
 12041  0029AE  D02E               	goto	l7422
 12042  0029B0                     l7416:
 12043  0029B0  C00D  FFF6         	movff	atoi@s,tblptrl
 12044  0029B4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12045  0029B8                     	if	0	;tblptru may be non-zero
 12046  0029B8                     	endif
 12047  0029B8                     	if	0	;tblptru may be non-zero
 12048  0029B8                     	endif
 12049  0029B8  0008               	tblrd		*
 12050  0029BA  50F5               	movf	tablat,w,c
 12051  0029BC  6E0F               	movwf	??_atoi& (0+255),c
 12052  0029BE  6A10               	clrf	(??_atoi+1)& (0+255),c
 12053                           
 12054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12055                           ; Switch size 1, requested type "simple"
 12056                           ; Number of cases is 1, Range of values is 0 to 0
 12057                           ; switch strategies available:
 12058                           ; Name         Instructions Cycles
 12059                           ; simple_byte            4     3 (average)
 12060                           ;	Chosen strategy is simple_byte
 12061  0029C0  5010               	movf	??_atoi+1,w,c
 12062  0029C2  0A00               	xorlw	0	; case 0
 12063  0029C4  A4D8               	btfss	status,2,c
 12064  0029C6  D022               	goto	l7422
 12065                           
 12066                           ; Switch size 1, requested type "simple"
 12067                           ; Number of cases is 2, Range of values is 43 to 45
 12068                           ; switch strategies available:
 12069                           ; Name         Instructions Cycles
 12070                           ; simple_byte            7     4 (average)
 12071                           ;	Chosen strategy is simple_byte
 12072  0029C8  500F               	movf	??_atoi,w,c
 12073  0029CA  0A2B               	xorlw	43	; case 43
 12074  0029CC  B4D8               	btfsc	status,2,c
 12075  0029CE  D7ED               	goto	l7414
 12076  0029D0  0A06               	xorlw	6	; case 45
 12077  0029D2  B4D8               	btfsc	status,2,c
 12078  0029D4  D7E6               	goto	l7412
 12079  0029D6  D01A               	goto	l7422
 12080  0029D8                     l7418:
 12081  0029D8  C01A  F006         	movff	atoi@n,___wmul@multiplier
 12082  0029DC  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 12083  0029E0  0E00               	movlw	0
 12084  0029E2  6E09               	movwf	___wmul@multiplicand+1,c
 12085  0029E4  0E0A               	movlw	10
 12086  0029E6  6E08               	movwf	___wmul@multiplicand,c
 12087  0029E8  ECD3  F01B         	call	___wmul	;wreg free
 12088  0029EC  C00D  FFF6         	movff	atoi@s,tblptrl
 12089  0029F0  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12090  0029F4                     	if	0	;tblptru may be non-zero
 12091  0029F4                     	endif
 12092  0029F4                     	if	0	;tblptru may be non-zero
 12093  0029F4                     	endif
 12094  0029F4  0008               	tblrd		*
 12095  0029F6  50F5               	movf	tablat,w,c
 12096  0029F8  5E06               	subwf	?___wmul,f,c
 12097  0029FA  0E00               	movlw	0
 12098  0029FC  5A07               	subwfb	?___wmul+1,f,c
 12099  0029FE  0E30               	movlw	48
 12100  002A00  2406               	addwf	?___wmul,w,c
 12101  002A02  6E1A               	movwf	atoi@n,c
 12102  002A04  0E00               	movlw	0
 12103  002A06  2007               	addwfc	?___wmul+1,w,c
 12104  002A08  6E1B               	movwf	atoi@n+1,c
 12105  002A0A  D7CF               	goto	l7414
 12106  002A0C                     l7422:
 12107  002A0C  0ED0               	movlw	208
 12108  002A0E  6E0F               	movwf	??_atoi& (0+255),c
 12109  002A10  0EFF               	movlw	255
 12110  002A12  6E10               	movwf	(??_atoi+1)& (0+255),c
 12111  002A14  C00D  FFF6         	movff	atoi@s,tblptrl
 12112  002A18  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12113  002A1C                     	if	0	;tblptru may be non-zero
 12114  002A1C                     	endif
 12115  002A1C                     	if	0	;tblptru may be non-zero
 12116  002A1C                     	endif
 12117  002A1C  0008               	tblrd		*
 12118  002A1E  50F5               	movf	tablat,w,c
 12119  002A20  6E11               	movwf	(??_atoi+2)& (0+255),c
 12120  002A22  6A12               	clrf	(??_atoi+3)& (0+255),c
 12121  002A24  500F               	movf	??_atoi,w,c
 12122  002A26  2611               	addwf	??_atoi+2,f,c
 12123  002A28  5010               	movf	??_atoi+1,w,c
 12124  002A2A  2212               	addwfc	??_atoi+3,f,c
 12125  002A2C  5012               	movf	??_atoi+3,w,c
 12126  002A2E  E106               	bnz	u8490
 12127  002A30  0E0A               	movlw	10
 12128  002A32  5C11               	subwf	??_atoi+2,w,c
 12129  002A34  B0D8               	btfsc	status,0,c
 12130  002A36  D002               	goto	u8490
 12131  002A38  0E01               	movlw	1
 12132  002A3A  D001               	goto	u8500
 12133  002A3C                     u8490:
 12134  002A3C  0E00               	movlw	0
 12135  002A3E                     u8500:
 12136  002A3E  6E17               	movwf	_atoi$1827,c
 12137  002A40  6A18               	clrf	_atoi$1827+1,c
 12138  002A42  5017               	movf	_atoi$1827,w,c
 12139  002A44  1018               	iorwf	_atoi$1827+1,w,c
 12140  002A46  A4D8               	btfss	status,2,c
 12141  002A48  D7C7               	goto	l7418
 12142  002A4A  5013               	movf	atoi@neg,w,c
 12143  002A4C  1014               	iorwf	atoi@neg+1,w,c
 12144  002A4E  A4D8               	btfss	status,2,c
 12145  002A50  D00D               	goto	l1407
 12146  002A52  C01A  F00F         	movff	atoi@n,??_atoi
 12147  002A56  C01B  F010         	movff	atoi@n+1,??_atoi+1
 12148  002A5A  1E0F               	comf	??_atoi,f,c
 12149  002A5C  1E10               	comf	??_atoi+1,f,c
 12150  002A5E  4A0F               	infsnz	??_atoi,f,c
 12151  002A60  2A10               	incf	??_atoi+1,f,c
 12152  002A62  C00F  F00D         	movff	??_atoi,?_atoi
 12153  002A66  C010  F00E         	movff	??_atoi+1,?_atoi+1
 12154  002A6A  0012               	return	
 12155  002A6C                     l1407:
 12156  002A6C  C01A  F00D         	movff	atoi@n,?_atoi
 12157  002A70  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 12158  002A74  0012               	return		;funcret
 12159  002A76                     __end_of_atoi:
 12160                           	opt callstack 0
 12161                           
 12162 ;; *************** function _isspace *****************
 12163 ;; Defined at:
 12164 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;  c               2    5[COMRAM] int 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;		None
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  2    5[COMRAM] int 
 12171 ;; Registers used:
 12172 ;;		wreg, status,2, status,0
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;Total ram usage:        7 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:    2
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		_atoi
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text54
 12193  003556                     __ptext54:
 12194                           	opt callstack 0
 12195  003556                     _isspace:
 12196                           	opt callstack 24
 12197                           
 12198                           ;incstack = 0
 12199  003556  0E01               	movlw	1
 12200  003558  6E0C               	movwf	_isspace$1852,c
 12201  00355A  0E20               	movlw	32
 12202  00355C  1806               	xorwf	isspace@c,w,c
 12203  00355E  1007               	iorwf	isspace@c+1,w,c
 12204  003560  B4D8               	btfsc	status,2,c
 12205  003562  D014               	goto	l7180
 12206  003564  0EF7               	movlw	247
 12207  003566  6E08               	movwf	??_isspace& (0+255),c
 12208  003568  0EFF               	movlw	255
 12209  00356A  6E09               	movwf	(??_isspace+1)& (0+255),c
 12210  00356C  C006  F00A         	movff	isspace@c,??_isspace+2
 12211  003570  C007  F00B         	movff	isspace@c+1,??_isspace+3
 12212  003574  5008               	movf	??_isspace,w,c
 12213  003576  260A               	addwf	??_isspace+2,f,c
 12214  003578  5009               	movf	??_isspace+1,w,c
 12215  00357A  220B               	addwfc	??_isspace+3,f,c
 12216  00357C  500B               	movf	??_isspace+3,w,c
 12217  00357E  E104               	bnz	u7940
 12218  003580  0E05               	movlw	5
 12219  003582  5C0A               	subwf	??_isspace+2,w,c
 12220  003584  A0D8               	btfss	status,0,c
 12221  003586  D002               	goto	l7180
 12222  003588                     u7940:
 12223  003588  0E00               	movlw	0
 12224  00358A  6E0C               	movwf	_isspace$1852,c
 12225  00358C                     l7180:
 12226  00358C  C00C  F006         	movff	_isspace$1852,?_isspace
 12227  003590  6A07               	clrf	?_isspace+1,c
 12228  003592  0012               	return		;funcret
 12229  003594                     __end_of_isspace:
 12230                           	opt callstack 0
 12231                           
 12232 ;; *************** function _isdigit *****************
 12233 ;; Defined at:
 12234 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;  c               2    5[COMRAM] int 
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;		None
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  2    5[COMRAM] int 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;Total ram usage:        6 bytes
 12253 ;; Hardware stack levels used:    1
 12254 ;; Hardware stack levels required when called:    2
 12255 ;; This function calls:
 12256 ;;		Nothing
 12257 ;; This function is called by:
 12258 ;;		_vfpfcnvrt
 12259 ;;		_atoi
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           	psect	text55
 12264  0036D0                     __ptext55:
 12265                           	opt callstack 0
 12266  0036D0                     _isdigit:
 12267                           	opt callstack 25
 12268                           
 12269                           ;incstack = 0
 12270  0036D0  0ED0               	movlw	208
 12271  0036D2  6E08               	movwf	??_isdigit& (0+255),c
 12272  0036D4  0EFF               	movlw	255
 12273  0036D6  6E09               	movwf	(??_isdigit+1)& (0+255),c
 12274  0036D8  C006  F00A         	movff	isdigit@c,??_isdigit+2
 12275  0036DC  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 12276  0036E0  5008               	movf	??_isdigit,w,c
 12277  0036E2  260A               	addwf	??_isdigit+2,f,c
 12278  0036E4  5009               	movf	??_isdigit+1,w,c
 12279  0036E6  220B               	addwfc	??_isdigit+3,f,c
 12280  0036E8  500B               	movf	??_isdigit+3,w,c
 12281  0036EA  E106               	bnz	u7140
 12282  0036EC  0E0A               	movlw	10
 12283  0036EE  5C0A               	subwf	??_isdigit+2,w,c
 12284  0036F0  B0D8               	btfsc	status,0,c
 12285  0036F2  D002               	goto	u7140
 12286  0036F4  0E01               	movlw	1
 12287  0036F6  D001               	goto	u7150
 12288  0036F8                     u7140:
 12289  0036F8  0E00               	movlw	0
 12290  0036FA                     u7150:
 12291  0036FA  6E06               	movwf	?_isdigit,c
 12292  0036FC  6A07               	clrf	?_isdigit+1,c
 12293  0036FE  0012               	return		;funcret
 12294  003700                     __end_of_isdigit:
 12295                           	opt callstack 0
 12296                           
 12297 ;; *************** function ___wmul *****************
 12298 ;; Defined at:
 12299 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  multiplier      2    5[COMRAM] unsigned int 
 12302 ;;  multiplicand    2    7[COMRAM] unsigned int 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  product         2    9[COMRAM] unsigned int 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  2    5[COMRAM] unsigned int 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, prodl, prodh
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12318 ;;Total ram usage:        6 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    2
 12321 ;; This function calls:
 12322 ;;		Nothing
 12323 ;; This function is called by:
 12324 ;;		_doDisplayLog
 12325 ;;		_atoi
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           	psect	text56
 12330  0037A6                     __ptext56:
 12331                           	opt callstack 0
 12332  0037A6                     ___wmul:
 12333                           	opt callstack 24
 12334                           
 12335                           ;incstack = 0
 12336  0037A6  5006               	movf	___wmul@multiplier,w,c
 12337  0037A8  0208               	mulwf	___wmul@multiplicand,c
 12338  0037AA  CFF3 F00A          	movff	prodl,___wmul@product
 12339  0037AE  CFF4 F00B          	movff	prodh,___wmul@product+1
 12340  0037B2  5006               	movf	___wmul@multiplier,w,c
 12341  0037B4  0209               	mulwf	___wmul@multiplicand+1,c
 12342  0037B6  50F3               	movf	prodl,w,c
 12343  0037B8  260B               	addwf	___wmul@product+1,f,c
 12344  0037BA  5007               	movf	___wmul@multiplier+1,w,c
 12345  0037BC  0208               	mulwf	___wmul@multiplicand,c
 12346  0037BE  50F3               	movf	prodl,w,c
 12347  0037C0  260B               	addwf	___wmul@product+1,f,c
 12348  0037C2  C00A  F006         	movff	___wmul@product,?___wmul
 12349  0037C6  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 12350  0037CA  0012               	return		;funcret
 12351  0037CC                     __end_of___wmul:
 12352                           	opt callstack 0
 12353                           
 12354 ;; *************** function _lcdInst *****************
 12355 ;; Defined at:
 12356 ;;		line 64 in file "lcd.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  data            1    wreg     unsigned char 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  data            1    8[COMRAM] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, status,2, status,0, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;Total ram usage:        1 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    5
 12377 ;; This function calls:
 12378 ;;		_send_byte
 12379 ;; This function is called by:
 12380 ;;		_doDisplayLog
 12381 ;;		_doOperation
 12382 ;;		_main
 12383 ;;		_initLCD
 12384 ;;		_mainEEPROM
 12385 ;;		_lcd_shift_cursor
 12386 ;;		_lcd_shift_display
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text57
 12391  0038B0                     __ptext57:
 12392                           	opt callstack 0
 12393  0038B0                     _lcdInst:
 12394                           	opt callstack 23
 12395                           
 12396                           ;incstack = 0
 12397                           ;lcdInst@data stored from wreg
 12398  0038B0  6E09               	movwf	lcdInst@data,c
 12399                           
 12400                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12401  0038B2  948C               	bcf	3980,2,c	;volatile
 12402                           
 12403                           ;lcd.c: 66:     send_byte(data);
 12404  0038B4  5009               	movf	lcdInst@data,w,c
 12405  0038B6  EC49  F01C         	call	_send_byte
 12406  0038BA  0012               	return		;funcret
 12407  0038BC                     __end_of_lcdInst:
 12408                           	opt callstack 0
 12409                           
 12410 ;; *************** function _send_byte *****************
 12411 ;; Defined at:
 12412 ;;		line 55 in file "lcd.c"
 12413 ;; Parameters:    Size  Location     Type
 12414 ;;  data            1    wreg     unsigned char 
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;  data            1    7[COMRAM] unsigned char 
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  1    wreg      void 
 12419 ;; Registers used:
 12420 ;;		wreg, status,2, status,0, cstack
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12430 ;;Total ram usage:        1 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:    4
 12433 ;; This function calls:
 12434 ;;		_send_nibble
 12435 ;; This function is called by:
 12436 ;;		_lcdInst
 12437 ;;		_initLCD
 12438 ;;		_putch
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           	psect	text58
 12443  003892                     __ptext58:
 12444                           	opt callstack 0
 12445  003892                     _send_byte:
 12446                           	opt callstack 24
 12447                           
 12448                           ;incstack = 0
 12449                           ;send_byte@data stored from wreg
 12450  003892  6E08               	movwf	send_byte@data,c
 12451                           
 12452                           ;lcd.c: 57:     send_nibble(data >> 4);
 12453  003894  3808               	swapf	send_byte@data,w,c
 12454  003896  0B0F               	andlw	15
 12455  003898  EC35  F01C         	call	_send_nibble
 12456                           
 12457                           ;lcd.c: 60:     send_nibble(data);
 12458  00389C  5008               	movf	send_byte@data,w,c
 12459  00389E  EC35  F01C         	call	_send_nibble
 12460  0038A2  0012               	return		;funcret
 12461  0038A4                     __end_of_send_byte:
 12462                           	opt callstack 0
 12463                           
 12464 ;; *************** function _send_nibble *****************
 12465 ;; Defined at:
 12466 ;;		line 44 in file "lcd.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  data            1    wreg     unsigned char 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  data            1    6[COMRAM] unsigned char 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, status,2, status,0, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;Total ram usage:        1 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    3
 12487 ;; This function calls:
 12488 ;;		_pulse_e
 12489 ;; This function is called by:
 12490 ;;		_send_byte
 12491 ;;		_initLCD
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text59
 12496  00386A                     __ptext59:
 12497                           	opt callstack 0
 12498  00386A                     _send_nibble:
 12499                           	opt callstack 25
 12500                           
 12501                           ;incstack = 0
 12502                           ;send_nibble@data stored from wreg
 12503  00386A  6E07               	movwf	send_nibble@data,c
 12504                           
 12505                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12506  00386C  508C               	movf	3980,w,c	;volatile
 12507  00386E  0B0F               	andlw	15
 12508  003870  6E8C               	movwf	3980,c	;volatile
 12509                           
 12510                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12511  003872  3807               	swapf	send_nibble@data,w,c
 12512  003874  0BF0               	andlw	240
 12513  003876  108C               	iorwf	3980,w,c	;volatile
 12514  003878  6E8C               	movwf	3980,c	;volatile
 12515                           
 12516                           ;lcd.c: 48:     pulse_e();
 12517  00387A  EC96  F01B         	call	_pulse_e	;wreg free
 12518  00387E  0012               	return		;funcret
 12519  003880                     __end_of_send_nibble:
 12520                           	opt callstack 0
 12521                           
 12522 ;; *************** function _pulse_e *****************
 12523 ;; Defined at:
 12524 ;;		line 28 in file "lcd.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;		None
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  interruptSta    1    5[COMRAM] unsigned char 
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1    wreg      void 
 12531 ;; Registers used:
 12532 ;;		wreg
 12533 ;; Tracked objects:
 12534 ;;		On entry : 0/0
 12535 ;;		On exit  : 0/0
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12542 ;;Total ram usage:        1 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:    2
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		_send_nibble
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text60
 12553  00372C                     __ptext60:
 12554                           	opt callstack 0
 12555  00372C                     _pulse_e:
 12556                           	opt callstack 25
 12557                           
 12558                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12559                           
 12560                           ;incstack = 0
 12561  00372C  0E00               	movlw	0
 12562  00372E  BEF2               	btfsc	4082,7,c	;volatile
 12563  003730  0E01               	movlw	1
 12564  003732  6E06               	movwf	pulse_e@interruptState,c
 12565                           
 12566                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12567  003734  9EF2               	bcf	4082,7,c	;volatile
 12568                           
 12569                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12570  003736  868C               	bsf	3980,3,c	;volatile
 12571                           
 12572                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12573  003738  0E14               	movlw	20
 12574  00373A                     u10247:
 12575  00373A  2EE8               	decfsz	wreg,f,c
 12576  00373C  D7FE               	bra	u10247
 12577  00373E  D000               	nop2	
 12578                           
 12579                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12580  003740  968C               	bcf	3980,3,c	;volatile
 12581                           
 12582                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12583  003742  0E53               	movlw	83
 12584  003744                     u10257:
 12585  003744  2EE8               	decfsz	wreg,f,c
 12586  003746  D7FE               	bra	u10257
 12587  003748  F000               	nop	
 12588                           
 12589                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12590  00374A  B006               	btfsc	pulse_e@interruptState,0,c
 12591  00374C  D002               	bra	u6925
 12592  00374E  9EF2               	bcf	4082,7,c	;volatile
 12593  003750  D001               	bra	u6926
 12594  003752                     u6925:
 12595  003752  8EF2               	bsf	4082,7,c	;volatile
 12596  003754                     u6926:
 12597  003754  0012               	return		;funcret
 12598  003756                     __end_of_pulse_e:
 12599                           	opt callstack 0
 12600                           
 12601 ;; *************** function ___llmod *****************
 12602 ;; Defined at:
 12603 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;  dividend        4    5[COMRAM] unsigned long 
 12606 ;;  divisor         4    9[COMRAM] unsigned long 
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;  counter         1   13[COMRAM] unsigned char 
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  4    5[COMRAM] unsigned long 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, status,0
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;Total ram usage:        9 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    2
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_main
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text61
 12633  0031CE                     __ptext61:
 12634                           	opt callstack 0
 12635  0031CE                     ___llmod:
 12636                           	opt callstack 28
 12637                           
 12638                           ;incstack = 0
 12639  0031CE  500A               	movf	___llmod@divisor,w,c
 12640  0031D0  100B               	iorwf	___llmod@divisor+1,w,c
 12641  0031D2  100C               	iorwf	___llmod@divisor+2,w,c
 12642  0031D4  100D               	iorwf	___llmod@divisor+3,w,c
 12643  0031D6  B4D8               	btfsc	status,2,c
 12644  0031D8  D024               	goto	l1121
 12645  0031DA  0E01               	movlw	1
 12646  0031DC  6E0E               	movwf	___llmod@counter,c
 12647  0031DE  D006               	goto	l8578
 12648  0031E0                     l8576:
 12649  0031E0  90D8               	bcf	status,0,c
 12650  0031E2  360A               	rlcf	___llmod@divisor,f,c
 12651  0031E4  360B               	rlcf	___llmod@divisor+1,f,c
 12652  0031E6  360C               	rlcf	___llmod@divisor+2,f,c
 12653  0031E8  360D               	rlcf	___llmod@divisor+3,f,c
 12654  0031EA  2A0E               	incf	___llmod@counter,f,c
 12655  0031EC                     l8578:
 12656  0031EC  AE0D               	btfss	___llmod@divisor+3,7,c
 12657  0031EE  D7F8               	goto	l8576
 12658  0031F0                     u9840:
 12659  0031F0  500A               	movf	___llmod@divisor,w,c
 12660  0031F2  5C06               	subwf	___llmod@dividend,w,c
 12661  0031F4  500B               	movf	___llmod@divisor+1,w,c
 12662  0031F6  5807               	subwfb	___llmod@dividend+1,w,c
 12663  0031F8  500C               	movf	___llmod@divisor+2,w,c
 12664  0031FA  5808               	subwfb	___llmod@dividend+2,w,c
 12665  0031FC  500D               	movf	___llmod@divisor+3,w,c
 12666  0031FE  5809               	subwfb	___llmod@dividend+3,w,c
 12667  003200  A0D8               	btfss	status,0,c
 12668  003202  D008               	goto	l8584
 12669  003204  500A               	movf	___llmod@divisor,w,c
 12670  003206  5E06               	subwf	___llmod@dividend,f,c
 12671  003208  500B               	movf	___llmod@divisor+1,w,c
 12672  00320A  5A07               	subwfb	___llmod@dividend+1,f,c
 12673  00320C  500C               	movf	___llmod@divisor+2,w,c
 12674  00320E  5A08               	subwfb	___llmod@dividend+2,f,c
 12675  003210  500D               	movf	___llmod@divisor+3,w,c
 12676  003212  5A09               	subwfb	___llmod@dividend+3,f,c
 12677  003214                     l8584:
 12678  003214  90D8               	bcf	status,0,c
 12679  003216  320D               	rrcf	___llmod@divisor+3,f,c
 12680  003218  320C               	rrcf	___llmod@divisor+2,f,c
 12681  00321A  320B               	rrcf	___llmod@divisor+1,f,c
 12682  00321C  320A               	rrcf	___llmod@divisor,f,c
 12683  00321E  2E0E               	decfsz	___llmod@counter,f,c
 12684  003220  D7E7               	goto	u9840
 12685  003222                     l1121:
 12686  003222  C006  F006         	movff	___llmod@dividend,?___llmod
 12687  003226  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 12688  00322A  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 12689  00322E  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 12690  003232  0012               	return		;funcret
 12691  003234                     __end_of___llmod:
 12692                           	opt callstack 0
 12693                           
 12694 ;; *************** function _interruptHandler *****************
 12695 ;; Defined at:
 12696 ;;		line 1172 in file "main.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;		None
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;		None
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  1    wreg      void 
 12703 ;; Registers used:
 12704 ;;		wreg, status,2, status,0, cstack
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12714 ;;Total ram usage:        0 bytes
 12715 ;; Hardware stack levels used:    1
 12716 ;; Hardware stack levels required when called:    1
 12717 ;; This function calls:
 12718 ;;		_updateMotorAEncoder
 12719 ;;		_updateMotorBEncoder
 12720 ;; This function is called by:
 12721 ;;		Interrupt level 2
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           	psect	intcode
 12726  000008                     __pintcode:
 12727                           	opt callstack 0
 12728  000008                     _interruptHandler:
 12729                           	opt callstack 17
 12730                           
 12731                           ;incstack = 0
 12732  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12733  00000A  EDCA  F01A         	call	int_func,f	;refresh shadow registers
 12734                           
 12735                           	psect	intcode_body
 12736  003594                     __pintcode_body:
 12737                           	opt callstack 17
 12738  003594                     int_func:
 12739                           	opt callstack 17
 12740  003594  0006               	pop		; remove dummy address from shadow register refresh
 12741                           
 12742                           ;main.c: 1174:     if(INT1IF){
 12743  003596  A0F0               	btfss	4080,0,c	;volatile
 12744  003598  D005               	goto	i2l431
 12745                           
 12746                           ;main.c: 1177:         keyPressed = 1;
 12747  00359A  0E01               	movlw	1
 12748  00359C  0101               	movlb	1	; () banked
 12749  00359E  6F12               	movwf	_keyPressed& (0+255),b	;volatile
 12750                           
 12751                           ; BSR set to: 1
 12752                           ;main.c: 1178:         INT1IF = 0;
 12753  0035A0  90F0               	bcf	4080,0,c	;volatile
 12754                           
 12755                           ;main.c: 1179:     } else if (TMR0IF) {
 12756  0035A2  D015               	goto	i2l434
 12757  0035A4                     i2l431:
 12758  0035A4  A4F2               	btfss	4082,2,c	;volatile
 12759  0035A6  D008               	goto	i2l433
 12760                           
 12761                           ;main.c: 1180:     INTCONbits.TMR0IF = 0;
 12762  0035A8  94F2               	bcf	4082,2,c	;volatile
 12763                           
 12764                           ;main.c: 1181:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 12765  0035AA  0EFB               	movlw	251
 12766  0035AC  6ED7               	movwf	4055,c	;volatile
 12767                           
 12768                           ;main.c: 1182:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 12769  0035AE  0E1E               	movlw	30
 12770  0035B0  6ED6               	movwf	4054,c	;volatile
 12771                           
 12772                           ;main.c: 1183:     millisecondsMeasured++;
 12773  0035B2  4A75               	infsnz	_millisecondsMeasured,f,c	;volatile
 12774  0035B4  2A76               	incf	_millisecondsMeasured+1,f,c	;volatile
 12775                           
 12776                           ;main.c: 1184:    } else if (INT2IF){
 12777  0035B6  D00B               	goto	i2l434
 12778  0035B8                     i2l433:
 12779  0035B8  A2F0               	btfss	4080,1,c	;volatile
 12780  0035BA  D004               	goto	i2l435
 12781                           
 12782                           ;main.c: 1185:        INT2IF = 0;
 12783  0035BC  92F0               	bcf	4080,1,c	;volatile
 12784                           
 12785                           ;main.c: 1186:        updateMotorBEncoder();
 12786  0035BE  EC2A  F01A         	call	_updateMotorBEncoder	;wreg free
 12787                           
 12788                           ;main.c: 1187:    } else if (INT0IF){
 12789  0035C2  D005               	goto	i2l434
 12790  0035C4                     i2l435:
 12791  0035C4  A2F2               	btfss	4082,1,c	;volatile
 12792  0035C6  D003               	goto	i2l434
 12793                           
 12794                           ;main.c: 1188:        INT0IF = 0;
 12795  0035C8  92F2               	bcf	4082,1,c	;volatile
 12796                           
 12797                           ;main.c: 1189:        updateMotorAEncoder();
 12798  0035CA  EC6C  F01A         	call	_updateMotorAEncoder	;wreg free
 12799  0035CE                     i2l434:
 12800  0035CE  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12801  0035D0  0011               	retfie		f
 12802  0035D2                     __end_of_interruptHandler:
 12803                           	opt callstack 0
 12804                           
 12805 ;; *************** function _updateMotorBEncoder *****************
 12806 ;; Defined at:
 12807 ;;		line 149 in file "main.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;		None
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  directionPin    2    3[COMRAM] int 
 12812 ;;  interruptPin    2    1[COMRAM] int 
 12813 ;; Return value:  Size  Location     Type
 12814 ;;                  1    wreg      void 
 12815 ;; Registers used:
 12816 ;;		wreg, status,2, status,0
 12817 ;; Tracked objects:
 12818 ;;		On entry : 0/0
 12819 ;;		On exit  : 0/0
 12820 ;;		Unchanged: 0/0
 12821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;Total ram usage:        5 bytes
 12827 ;; Hardware stack levels used:    1
 12828 ;; This function calls:
 12829 ;;		Nothing
 12830 ;; This function is called by:
 12831 ;;		_interruptHandler
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           	psect	text63
 12836  003454                     __ptext63:
 12837                           	opt callstack 0
 12838  003454                     _updateMotorBEncoder:
 12839                           	opt callstack 17
 12840                           
 12841                           ;main.c: 150:   int interruptPinState = PORTBbits.RB2;
 12842                           
 12843                           ;incstack = 0
 12844  003454  A481               	btfss	3969,2,c	;volatile
 12845  003456  D003               	goto	i2u622_40
 12846  003458  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12847  00345A  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 12848  00345C  D001               	goto	i2u622_48
 12849  00345E                     i2u622_40:
 12850  00345E  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12851  003460                     i2u622_48:
 12852  003460  5001               	movf	??_updateMotorBEncoder,w,c
 12853  003462  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 12854  003464  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 12855                           
 12856                           ;main.c: 151:   int directionPin = PORTCbits.RC0;
 12857  003466  A082               	btfss	3970,0,c	;volatile
 12858  003468  D003               	goto	i2u623_40
 12859  00346A  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12860  00346C  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 12861  00346E  D001               	goto	i2u623_48
 12862  003470                     i2u623_40:
 12863  003470  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12864  003472                     i2u623_48:
 12865  003472  5001               	movf	??_updateMotorBEncoder,w,c
 12866  003474  6E04               	movwf	updateMotorBEncoder@directionPin,c
 12867  003476  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 12868                           
 12869                           ;main.c: 152:   if(directionPin == interruptPinState){
 12870  003478  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 12871  00347A  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 12872  00347C  E108               	bnz	i2l5758
 12873  00347E  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 12874  003480  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 12875  003482  A4D8               	btfss	status,2,c
 12876  003484  D004               	goto	i2l5758
 12877                           
 12878                           ;main.c: 153:     motorBDistance++;
 12879  003486  0101               	movlb	1	; () banked
 12880  003488  4B0C               	infsnz	_motorBDistance& (0+255),f,b	;volatile
 12881  00348A  2B0D               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
 12882                           
 12883                           ;main.c: 154:   } else {
 12884  00348C  0012               	return	
 12885  00348E                     i2l5758:
 12886                           
 12887                           ;main.c: 155:     motorBDistance--;
 12888  00348E  0101               	movlb	1	; () banked
 12889  003490  070C               	decf	_motorBDistance& (0+255),f,b	;volatile
 12890  003492  A0D8               	btfss	status,0,c
 12891  003494  070D               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
 12892                           
 12893                           ; BSR set to: 1
 12894  003496  0012               	return		;funcret
 12895  003498                     __end_of_updateMotorBEncoder:
 12896                           	opt callstack 0
 12897                           
 12898 ;; *************** function _updateMotorAEncoder *****************
 12899 ;; Defined at:
 12900 ;;		line 180 in file "main.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;		None
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  directionPin    2    3[COMRAM] int 
 12905 ;;  interruptPin    2    1[COMRAM] int 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2, status,0
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;Total ram usage:        5 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_interruptHandler
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           	psect	text64
 12929  0034D8                     __ptext64:
 12930                           	opt callstack 0
 12931  0034D8                     _updateMotorAEncoder:
 12932                           	opt callstack 17
 12933                           
 12934                           ;main.c: 181:   int interruptPinState = PORTBbits.RB0;
 12935                           
 12936                           ; BSR set to: 1
 12937                           ;incstack = 0
 12938  0034D8  A081               	btfss	3969,0,c	;volatile
 12939  0034DA  D003               	goto	i2u625_40
 12940  0034DC  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12941  0034DE  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12942  0034E0  D001               	goto	i2u625_48
 12943  0034E2                     i2u625_40:
 12944  0034E2  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12945  0034E4                     i2u625_48:
 12946  0034E4  5001               	movf	??_updateMotorAEncoder,w,c
 12947  0034E6  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 12948  0034E8  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 12949                           
 12950                           ;main.c: 182:   int directionPin = PORTEbits.RE1;
 12951  0034EA  A284               	btfss	3972,1,c	;volatile
 12952  0034EC  D003               	goto	i2u626_40
 12953  0034EE  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12954  0034F0  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12955  0034F2  D001               	goto	i2u626_48
 12956  0034F4                     i2u626_40:
 12957  0034F4  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12958  0034F6                     i2u626_48:
 12959  0034F6  5001               	movf	??_updateMotorAEncoder,w,c
 12960  0034F8  6E04               	movwf	updateMotorAEncoder@directionPin,c
 12961  0034FA  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 12962                           
 12963                           ;main.c: 183:   if(directionPin == interruptPinState){
 12964  0034FC  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 12965  0034FE  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 12966  003500  E108               	bnz	i2l5766
 12967  003502  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 12968  003504  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 12969  003506  A4D8               	btfss	status,2,c
 12970  003508  D004               	goto	i2l5766
 12971                           
 12972                           ;main.c: 184:     motorADistance--;
 12973  00350A  0677               	decf	_motorADistance,f,c	;volatile
 12974  00350C  A0D8               	btfss	status,0,c
 12975  00350E  0678               	decf	_motorADistance+1,f,c	;volatile
 12976                           
 12977                           ;main.c: 185:   } else {
 12978  003510  0012               	return	
 12979  003512                     i2l5766:
 12980                           
 12981                           ;main.c: 186:     motorADistance++;
 12982  003512  4A77               	infsnz	_motorADistance,f,c	;volatile
 12983  003514  2A78               	incf	_motorADistance+1,f,c	;volatile
 12984  003516  0012               	return		;funcret
 12985  003518                     __end_of_updateMotorAEncoder:
 12986                           	opt callstack 0
 12987                           
 12988                           	psect	rparam
 12989  0000                     
 12990                           	psect	temp
 12991  00007A                     btemp:
 12992                           	opt callstack 0
 12993  00007A                     	ds	1
 12994  0000                     int$flags	set	btemp
 12995  0000                     wtemp8	set	btemp+1
 12996  0000                     ttemp5	set	btemp+1
 12997  0000                     ttemp6	set	btemp+4
 12998  0000                     ttemp7	set	btemp+8
 12999                           tosu	equ	0xFFF
 13000                           tosh	equ	0xFFE
 13001                           tosl	equ	0xFFD
 13002                           stkptr	equ	0xFFC
 13003                           pclatu	equ	0xFFB
 13004                           pclath	equ	0xFFA
 13005                           pcl	equ	0xFF9
 13006                           tblptru	equ	0xFF8
 13007                           tblptrh	equ	0xFF7
 13008                           tblptrl	equ	0xFF6
 13009                           tablat	equ	0xFF5
 13010                           prodh	equ	0xFF4
 13011                           prodl	equ	0xFF3
 13012                           indf0	equ	0xFEF
 13013                           postinc0	equ	0xFEE
 13014                           postdec0	equ	0xFED
 13015                           preinc0	equ	0xFEC
 13016                           plusw0	equ	0xFEB
 13017                           fsr0h	equ	0xFEA
 13018                           fsr0l	equ	0xFE9
 13019                           wreg	equ	0xFE8
 13020                           indf1	equ	0xFE7
 13021                           postinc1	equ	0xFE6
 13022                           postdec1	equ	0xFE5
 13023                           preinc1	equ	0xFE4
 13024                           plusw1	equ	0xFE3
 13025                           fsr1h	equ	0xFE2
 13026                           fsr1l	equ	0xFE1
 13027                           bsr	equ	0xFE0
 13028                           indf2	equ	0xFDF
 13029                           postinc2	equ	0xFDE
 13030                           postdec2	equ	0xFDD
 13031                           preinc2	equ	0xFDC
 13032                           plusw2	equ	0xFDB
 13033                           fsr2h	equ	0xFDA
 13034                           fsr2l	equ	0xFD9
 13035                           status	equ	0xFD8


Data Sizes:
    Strings     378
    Constant    35
    Data        9
    BSS         535
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128    118     119
    BANK1           256     16      74
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_50(CODE[16]), 
		 -> STR_48(CODE[14]), STR_46(CODE[11]), STR_44(CODE[9]), STR_42(CODE[16]), 
		 -> STR_40(CODE[13]), STR_38(CODE[13]), STR_36(CODE[9]), STR_34(CODE[13]), 
		 -> STR_32(CODE[14]), STR_30(CODE[10]), STR_26(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_50(CODE[16]), 
		 -> STR_48(CODE[14]), STR_46(CODE[11]), STR_44(CODE[9]), STR_42(CODE[16]), 
		 -> STR_40(CODE[13]), STR_38(CODE[13]), STR_36(CODE[9]), STR_34(CODE[13]), 
		 -> STR_32(CODE[14]), STR_30(CODE[10]), STR_26(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_54(CODE[11]), STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[13]), 
		 -> STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), STR_43(CODE[3]), 
		 -> STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), STR_35(CODE[3]), 
		 -> STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), STR_28(CODE[15]), 
		 -> STR_27(CODE[15]), STR_25(CODE[3]), STR_24(CODE[11]), STR_23(CODE[10]), 
		 -> STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), 
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1865_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_54(CODE[11]), STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[13]), 
		 -> STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), STR_43(CODE[3]), 
		 -> STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), STR_35(CODE[3]), 
		 -> STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), STR_28(CODE[15]), 
		 -> STR_27(CODE[15]), STR_25(CODE[3]), STR_24(CODE[11]), STR_23(CODE[10]), 
		 -> STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), 
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_54(CODE[11]), STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[13]), 
		 -> STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), STR_43(CODE[3]), 
		 -> STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), STR_35(CODE[3]), 
		 -> STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), STR_28(CODE[15]), 
		 -> STR_27(CODE[15]), STR_25(CODE[3]), STR_24(CODE[11]), STR_23(CODE[10]), 
		 -> STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), 
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_54(CODE[11]), STR_53(CODE[11]), STR_52(CODE[10]), STR_51(CODE[13]), 
		 -> STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), STR_43(CODE[3]), 
		 -> STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), STR_35(CODE[3]), 
		 -> STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), STR_28(CODE[15]), 
		 -> STR_27(CODE[15]), STR_25(CODE[3]), STR_24(CODE[11]), STR_23(CODE[10]), 
		 -> STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), 
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_50(CODE[16]), STR_48(CODE[14]), STR_46(CODE[11]), 
		 -> STR_44(CODE[9]), STR_42(CODE[16]), STR_40(CODE[13]), STR_38(CODE[13]), 
		 -> STR_36(CODE[9]), STR_34(CODE[13]), STR_32(CODE[14]), STR_30(CODE[10]), 
		 -> STR_26(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_50(CODE[16]), STR_48(CODE[14]), STR_46(CODE[11]), 
		 -> STR_44(CODE[9]), STR_42(CODE[16]), STR_40(CODE[13]), STR_38(CODE[13]), 
		 -> STR_36(CODE[9]), STR_34(CODE[13]), STR_32(CODE[14]), STR_30(CODE[10]), 
		 -> STR_26(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_50(CODE[16]), STR_48(CODE[14]), 
		 -> STR_46(CODE[11]), STR_44(CODE[9]), STR_42(CODE[16]), STR_40(CODE[13]), 
		 -> STR_38(CODE[13]), STR_36(CODE[9]), STR_34(CODE[13]), STR_32(CODE[14]), 
		 -> STR_30(CODE[10]), STR_26(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_tirePositioning
    _tirePositioning->_setMotorSpeeds
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_opErrorCorrectionDegrees
    _tirePositioning->_setMotorSpeeds
    _opErrorCorrectionDegrees->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  230617
                                            116 BANK0      2     2      0
                                              0 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     892
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0     130
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         68    68      0  156670
                                             52 BANK0     64    64      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
           _opErrorCorrectionDegrees
                             _printf
              _requestIsTireDropDone
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     23    21      2   20124
                                            113 COMRAM     3     3      0
                                              8 BANK0     20    18      2
                            ___awdiv
                                _abs
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                              9     5      4     456
                                              5 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1145
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1145
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1210
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1111
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _opErrorCorrectionDegrees                            21     9     12   41114
                                            113 COMRAM     1     1      0
                                             32 BANK0     20     8     12
                           ___xxtofl
                                _abs
                 _errorCorrectedMove
 ---------------------------------------------------------------------------------
 (3) _errorCorrectedMove                                  24    10     14   37647
                                              8 BANK0     24    10     14
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   17512
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   11264
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    2096
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2543
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4727
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3982
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   36570
                                             14 BANK0     13    11      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33744
                                              0 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30759
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   30196
                                             75 COMRAM    33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7287
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7973
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     633
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5536
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5257
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2895
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1792
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opErrorCorrectionDegrees
       ___xxtofl
       _abs
         ___aomod (ARG)
       _errorCorrectedMove
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _setMotorSpeeds
           ___xxtofl
           _set_pwm_duty_cycle
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___awdiv
       _abs
         ___aomod (ARG)
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     1E0      37       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      4A       7       28.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     76      77       5       93.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      34        0.0%
DATA                 0      0     31A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 26 14:38:20 2019

                                 ___fldiv@aexp 0045                                   ___fldiv@bexp 0044  
                                 ___fldiv@sign 003D                                    __CFG_CPD$ON 000000  
                                 ___awdiv@sign 000B                            ___wmul@multiplicand 0008  
                                  __CFG_BORV$3 000000                 doOperation@motorBStartDistance 00DD  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                  __CFG_OSC$HS 000000               __end_of_opErrorCorrectionDegrees 2DD8  
                                          l252 2E7E                                            l254 2E8E  
                                          l408 0D0A                                            l265 17FA  
                                          l613 2718                                            l632 2156  
                                          l634 215E                                            l566 2E08  
                                          l584 1F66                                            l728 2FFC  
                                          l586 1F6E                                            l966 2C2E  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                          _PSA 007EAB                                            _abs 363E  
                                          _pad 2DD8                                   ___awmod@sign 000B  
                             ??_init_motor_PWM 0006                                            wreg 000FE8  
                                 ___flmul@aexp 0021                                   ___flmul@bexp 0026  
                                 ___flmul@sign 0020                                   ___flmul@temp 002B  
                                 ___flmul@prod 0027                              _doDisplayLog$2216 0099  
                   __end_of_errorCorrectedMove 1EF2                                   __CFG_LVP$OFF 000000  
                                 ___fltol@exp1 0057                                   __CFG_WDT$OFF 000000  
                                         l1121 3222                                           ?_abs 0018  
                                         l1230 1570                                           l1231 154E  
                                         l1315 115C                                           l1332 13FA  
                                         l1324 1374                                           l1325 1370  
                                         l1246 1642                                           l1407 2A6C  
                                         l1255 16A8                                           l1256 16A4  
                                         l1363 28B2                                           l1356 2834  
                                         l1285 1B70                                           l1376 3666  
                                         l1296 1BDE                                           l1297 1BDA  
                                         l1474 33C0                                           l7012 131C  
                                         ?_pad 001A                                           l7104 2CD2  
                                         l7042 13D6                                           l7018 133A  
                                         l7122 2D12                                           l7114 2CEA  
                                         l7116 2CF6                                           l7108 2CE2  
                                         l7140 2868                                           l7132 2844  
                                         l8020 17E8                                           l8012 17A6  
                                         l7214 32FA                                           l7230 1F48  
                                         l7054 1418                                           l7038 13B8  
                                         l7150 28D8                                           l7142 2874  
                                         l8006 178E                                           l7216 3306  
                                         l7312 2766                                           l7304 2730  
                                         l7072 2C18                                           l7064 2BCE  
                                         l7152 28E4                                           l7144 289A  
                                         l8120 2D36                                           l8016 17C6  
                                         l7322 27C0                                           l8202 0D52  
                                         l7138 2862                                           l8114 3728  
                                         l8034 1860                                           l8042 18B4  
                                         l8026 180A                                           l7180 358C  
                                         l7412 29A2                                           l7244 1F88  
                                         l7308 2748                                           l7068 2C02  
                                         l8124 2D9A                                           l8052 1926  
                                         l8060 199A                                           l8036 187C  
                                         l7422 2A0C                                           l7414 29AA  
                                         l7406 2992                                           l7326 27D8  
                                         l7318 27A4                                           l7078 2C66  
                                         l8070 19C6                                           l8054 1942  
                                         l8046 18E6                                           l7416 29B0  
                                         l6720 2596                                           l7248 1F96  
                                         l7352 21C2                                           l7344 21A0  
                                         l8224 0E3C                                           l7088 2C88  
                                         l7168 2924                                           l8048 1902  
                                         l7418 29D8                                           l6642 35F2  
                                         l7282 210E                                           l7258 208E  
                                         l7338 2172                                           l8250 0FBA  
                                         l8170 30A8                                           l7514 1502  
                                         l6628 3110                                           l6732 25E4  
                                         l8252 0FD8                                           l7452 145E  
                                         l6804 1A2A                                           l8500 08A8  
                                         l8420 06C0                                           l6638 35DC  
                                         l6646 341A                                           l6670 2E00  
                                         l6734 25F8                                           l6726 25BE  
                                         l7278 20F6                                           l7294 26DC  
                                         l7390 233E                                           l7366 2250  
                                         l7374 22C6                                           l8190 30EE  
                                         l8182 30D6                                           l8174 30B6  
                                         l8166 309C                                           l7622 1714  
                                         l7614 16EE                                           l7550 15B6  
                                         l7542 1594                                           l7526 155C  
                                         l6910 1C46                                           l8078 19F2  
                                         l6648 341E                                           l6680 2E58  
                                         l6672 2E12                                           l6752 2690  
                                         l6744 2654                                           l7704 013E  
                                         l8272 1032                                           l8264 101A  
                                         l8176 30BE                                           l7552 15BA  
                                         l7560 15CC                                           l7528 1560  
                                         l7472 14A2                                           l7448 145A  
                                         l6920 1C7C                                           l6824 1A6A  
                                         l6808 1A2E                                           l8512 08D0  
                                         l6666 2DF2                                           l7722 0216  
                                         l7706 015C                                           l8282 108C  
                                         l8290 10AA                                           l8186 30E0  
                                         l7626 171C                                           l7570 1632  
                                         l6922 1C7E                                           l6914 1C70  
                                         l6906 1C22                                           l6850 1AD0  
                                         l6842 1AB8                                           l7642 2E82  
                                         l8418 0680                                           l7396 2948  
                                         l6676 2E2A                                           l6748 266A  
                                         l6780 2B3C                                           l6772 2AE0  
                                         l6764 2AA2                                           l7740 0336  
                                         l7732 02C8                                           l7708 016A  
                                         l8276 1048                                           l8268 1028  
                                         l8292 10C8                                           l7628 171E  
                                         l7484 14C6                                           l7476 14A6  
                                         l6860 1B20                                           l6836 1AA2  
                                         l6828 1A6E                                           l8508 08C4  
                                         l8516 08D6                                           l8460 07A2  
                                         l8444 075C                                           l7398 294C  
                                         l6774 2AF4                                           l7670 006C  
                                         l6942 1108                                           l7646 2E92  
                                         l8462 07A8                                           l8702 0AD4  
                                         l6784 2B52                                           l6768 2AC6  
                                         l7760 0440                                           l6880 1B86  
                                         l6960 1148                                           l6944 110C  
                                         l7904 2F42                                           l7920 2F74  
                                         l8480 0812                                           l8472 07F4  
                                         l8464 07AC                                           l8384 05A6  
                                         l8376 055A                                           l7754 0404  
                                         l7690 008E                                           l7682 007E  
                                         l7674 0072                                           l7666 0058  
                                         l7770 0462                                           l7578 1666  
                                         l7594 1686                                           l6874 1B6E  
                                         l6970 117A                                           l6962 114C  
                                         l6946 111C                                           l7850 1ED4  
                                         l7842 1EB0                                           l7906 2F4A  
                                         l8474 07FA                                           l8802 0CDC  
                                         l8722 0B5C                                           l6788 2B78  
                                         l7764 044A                                           l7668 005C  
                                         l7692 00D0                                           l7860 32CA  
                                         l7588 167C                                           l6868 1B48  
                                         l7924 2F82                                           l7916 2F6A  
                                         l8476 0802                                           l7686 0084  
                                         l7678 0078                                           l6886 1BA4  
                                         l7846 1EC8                                           l7838 1EA4  
                                         l8486 0832                                           l8398 05E4  
                                         l8494 0852                                           l8566 333C  
                                         l7870 2FBA                                           l8742 0BD4  
                                         l8646 092C                                           l8584 3214  
                                         l8576 31E0                                           l8496 088C  
                                         l7880 2FEE                                           l8736 0BC2  
                                         l8664 09C0                                           l8656 0992  
                                         l8752 0C00                                           l8578 31EC  
                                         l7858 32A4                                           l8770 0C80  
                                         l8754 0C32                                           l7892 2F1C  
                                         l7868 2FAE                                           l8684 0A6C  
                                         l7798 3520                                           l8790 0CC2  
                                         l8782 0CA8                                           l8774 0C8C  
                                         l8766 0C72                                           _P1M0 007DEE  
                                         _P1M1 007DEF                                           l7898 2F2C  
                                         l8794 0CCE                                           l8786 0CB6  
                                         l8778 0C9A                                           l7998 174E  
                                         STR_1 FFE3                                           STR_2 FF97  
                                         STR_3 FFE8                                           STR_4 FFDE  
                                         STR_5 FEC4                                           STR_6 FFE7  
                                         STR_7 FF0D                                           STR_8 FFE7  
                                         STR_9 FEA4                                           _LATB 000F8A  
                                         _LATD 000F8C                                           u7000 3698  
                                         u7010 369A                                           u7020 364C  
                                         u7100 3638                                           u7110 33A8  
                                         u7200 25FC                                           u7120 33AA  
                                         u8010 254E                                           u7140 36F8  
                                         u8100 1F82                                           u8005 252C  
                                         u7150 36FA                                           u8110 209C  
                                         u7070 36C8                                           u8040 1F1A  
                                         u7080 36CA                                           u8025 2550  
                                         u8130 20BE                                           u8050 1F1C  
                                         u7090 3636                                           u9010 01A2  
                                         u8131 20BC                                           u7260 2AF8  
                                         u8140 20CC                                           u8300 214C  
                                         u9020 01A4                                           u7500 1C54  
                                         u7181 25C4                                           u8150 20D2  
                                         u9030 01B0                                           u8080 1F5C  
                                         u8240 275C                                           u8400 22D6  
                                         u8320 21BE                                           u7600 12DE  
                                         u9200 2FBE                                           u8170 20E0  
                                         u8250 2788                                           u8330 21F4  
                                         u7450 1BD4                                           u8500 2A3E  
                                         u8420 22F8                                           u8340 21F6  
                                         u9060 024A                                           u9140 1E9C  
                                         u8421 22F6                                           u7605 12D4  
                                         u8430 2306                                           u8191 26BC  
                                         u9135 37E8                                           u8280 27EC  
                                         u8440 230C                                           u8360 222E  
                                         u7640 136A                                           u9160 1EC0  
                                         u9136 37EA                                           u8257 277E  
                                         u8370 2230                                           u9090 036A  
                                         u7490 1C30                                           u7810 2CFC  
                                         u9250 2F4E                                           u9410 1896  
                                         u6940 3108                                           u8620 1524  
                                         u6925 3752                                           u6926 3754  
                                         u8470 298E                                           u8390 22A2  
                                         u8630 1534                                           u7590 1168  
                                         u9430 191C                                           u6960 3150  
                                         u8800 168A                                           u8640 1536  
                                         u7680 13C6                                           u7760 2C76  
                                         u9280 1758                                           u8490 2A3C  
                                         u7690 13E4                                           u7770 2CA6  
                                         u9290 176C                                           u8395 2290  
                                         u7940 3588                                           u6980 3440  
                                         u8820 169E                                           u9460 19AC  
                                         u9380 181E                                           u9700 05B6  
                                         u9525 325C                                           u8670 1578  
                                         u9470 19BC                                           u9390 182E  
                                         u9710 05C6                                           u7775 2C9C  
                                         u9560 30C2                                           u9480 19E6  
                                         u9288 175A                                           u7890 28EE  
                                         u9298 176E                                           u9706 05B8  
                                         u6987 3436                                           u9660 10A2  
                                         u9716 05C8                                           u9820 337E  
                                         u7990 252A                                           u9840 31F0  
                                         u8880 16FA                                           u9680 0582  
                                         u9690 0592                                           u9790 08B8  
                                         u9686 0584                                           u9696 0594  
                                         u9970 0C96                                   __CFG_PWRT$ON 000000  
                                         abs@a 0018                                           _dbuf 0113  
                                         _atoi 2936                                           _ctoa 32E6  
                                         _main 090E                                           _dtoa 1EF2  
                     __end_of_interruptHandler 35D2                                           _keys FE61  
                                         _logs 014A                                           _prec 0108  
                                         _nout 0104                                           pad@i 0021  
                                         pad@p 001E                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0023                                           fsr2l 000FD9  
                                         _stoa 26B2                                           btemp 007A  
                                         _xtoa 2138                                           prodh 000FF4  
                                         prodl 000FF3                                           start 000E  
                                __CFG_IESO$OFF 000000                        __size_of_setMotorSpeeds 0096  
                              ___fldiv@new_exp 003E                            __end_of_EncoderInit 386A  
                                __CFG_MCLRE$ON 000000             tirePositioning@bottomPreviousState 0092  
                                 ___param_bank 000000                                          ??_abs 001A  
                                        ??_pad 0020                       __size_of_tirePositioning 02C4  
                        I2C_Master_Read@ackBit 0007                               ?_I2C_Master_Init 0013  
                             ?_I2C_Master_Read 0001                               ?_I2C_Master_Wait 0001  
                             ?_I2C_Master_Stop 0001                                 replaceOldLog@i 0006  
                    doOperation@distanceToPole 00E1                                  ___fltol@sign1 0056  
                                  ?_TIMER_INIT 0001                                __end_of___aodiv 26B2  
                                        ?_atoi 000D                                          ?_ctoa 0025  
                              __end_of___fladd 173A                                          ?_main 0001  
                                        ?_dtoa 0025                                __end_of___aomod 2B9A  
                                        _CCP1X 007DED                                __end_of___fldiv 1C86  
                                        _CCP1Y 007DEC                                          _CCP2X 007DD5  
                                        _CCP2Y 007DD4                                __end_of___awdiv 2F8C  
                                        _EEADR 000FA9                                          STR_10 FFDA  
                                        STR_11 FFEA                                          STR_20 FFF3  
                                        STR_12 FFFC                                          STR_13 FFDE  
                                        STR_21 FFF6                                          STR_22 FFF0  
                                        STR_30 FFAB                                          STR_14 FEF1  
                                        STR_15 FFDE                                          STR_31 FFE7  
                                        STR_23 FFA1                                          STR_24 FF76  
                                        STR_40 FF44                                          STR_32 FF1B  
                                        STR_16 FE84                                          STR_41 FFE7  
                                        STR_33 FFE7                                          STR_25 FFE7  
                                        STR_17 FFE7                                          STR_26 FFBF  
                                        STR_34 FF51                                          STR_18 FF29  
                                        STR_42 FEB4                                          STR_50 FE94  
                                        STR_19 FFF3                                          STR_43 FFE7  
                                        STR_35 FFE7                                          STR_51 FF5E  
                                        STR_27 FED3                                          STR_36 FFD1  
                                        STR_44 FFC8                                          STR_52 FFB5  
                                        STR_28 FEE2                                __end_of___awmod 30F8  
                                        STR_45 FFE7                                          STR_37 FFE7  
                                        STR_29 FFE7                                          STR_53 FF81  
                                        STR_54 FF8C                                          STR_46 FF6B  
                                        STR_38 FF37                                          STR_47 FFE7  
                                        STR_39 FFE7                                          STR_48 FEFF  
                                        STR_49 FFE7                                __end_of___flmul 142E  
                              __end_of___flsub 3410                                __end_of___fltol 2D24  
                                        ?_stoa 0013                                __end_of___lldiv 300E  
                                        u10107 0BEE                                          u10117 0C66  
                                        u10207 0D60                                          u10127 0D20  
                                        u10217 0E4A                                          u10137 316A  
                                        u10057 09CE                                          u10227 100E  
                                        u10147 3182                                          u10067 0A7A  
                                        u10237 10D0                                          u10157 3194  
                                        u10077 0AC6                                          u10247 373A  
                                        u10167 31B6                                          u10087 0AE2  
                                        u10257 3744                                          u10177 060E  
                                        u10097 0B6A                                          u10187 06FA  
                              ___awdiv@divisor 0008                                          u10197 0D3A  
                                        ?_xtoa 0025                                __end_of___llmod 3234  
                                        _T0PS0 007EA8                                          _T0PS1 007EA9  
                                        _T0PS2 007EAA                                          i2l431 35A4  
                                        i2l433 35B8                                          i2l434 35CE  
                                        i2l435 35C4                                   main@keyValue 0142  
                              ___awdiv@counter 000A                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 005E  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 38BC  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 013E                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0064  
                  set_pwm_duty_cycle@duty_valB 0066                                __end_of_opDelay 3556  
                              __end_of_initLCD 31CE                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 0090                                          _flags 010A  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FE7D                 init_motor_PWM@TIMER2_PRESCALER FE7C  
                                        _fputc 30F8                                __end_of_isalpha 363E  
                                        _fputs 35D2                                __end_of_isdigit 3700  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 0106  
                                        ctoa@c 0027                                          _putch 38A4  
                                        ctoa@w 0028                                          main@i 013F  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 36A0                                __end_of_isspace 3594  
                              __end_of_isupper 36D0                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 3518                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 0478                    __end_of_updateMotorBEncoder 3498  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 3756  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          status 000FD8  
                  I2C_Master_Read@receivedByte 0008                      requestIsTireDropDone@data 0009  
                                        wtemp8 007B                                          xtoa@c 004A  
                                        xtoa@d 0027                                          xtoa@i 0048  
                                        xtoa@n 0040                                          xtoa@p 003C  
                                        xtoa@w 003E                                          xtoa@x 002F  
                              __end_of_toupper 33CA                       errorCorrectedMove@ASpeed 009C  
                     errorCorrectedMove@BSpeed 009E                                 __CFG_PBADEN$ON 000000  
                                 _toupper$1916 0012                                __initialization 300E  
                          main@currentLogState 0140                                   __end_of_atoi 2A76  
                                 __end_of_ctoa 3334                                   __end_of_main 0D2C  
                                 __end_of_dtoa 2138                                   __end_of_keys FE72  
                                 __end_of_stoa 27F6                          __size_of_doDisplayLog 03B0  
                                 __end_of_xtoa 2368                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 00F4  
                                       ??_dtoa 002F                               opDelay@startTime 000D  
                                       ??_stoa 0017                                         ??_xtoa 0030  
                                __activetblptr 000002                        set_pwm_duty_cycle@dutyA 0058  
                      set_pwm_duty_cycle@dutyB 005C                              ?_I2C_Master_Start 0001  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 3380  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0075  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                               ___awdiv@dividend 0006  
                       doOperation@tiresOnPole 00E7                                         ?_putch 0001  
                       doOperation@tiresToDrop 00E5                                         _INT0IE 007F94  
                                       _INT0IF 007F91                                         _INT1IE 007F83  
                                       _INT1IF 007F80                                         _INT2IE 007F84  
                                       _INT2IF 007F81                                         i2l5766 3512  
                                       i2l5758 348E                             _set_pwm_duty_cycle 2368  
                                  _EncoderInit 3852                                  vfpfcnvrt@done 0068  
                                       _TMR0IE 007F95                                         _TMR0IF 007F92  
                                       _TMR0ON 007EAF                                         _TMR2ON 007E52  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 2936              __size_of_opErrorCorrectionDegrees 00B4  
                                 _doDisplayLog 0D2C                            __size_of_TIMER_INIT 001E  
                    ?_opErrorCorrectionDegrees 00A0       opErrorCorrectionDegrees@maxOperationTime 00AA  
                          ?_set_pwm_duty_cycle 0058                                 __CFG_XINST$OFF 000000  
                        _encoderAInterruptLast 010E                                   vfprintf@cfmt 0073  
                                       ___flge 2B9A                                      ??___aodiv 0016  
                                    ??___fladd 0035                                      ??___aomod 0016  
                                       ___wmul 37A6                                      ??___fldiv 0035  
                                    ??___awdiv 000A                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 000A                                      ??___flmul 001C  
                                    ??___flsub 004E                                      ??___fltol 0052  
                                    ??___lldiv 000E                                      ??___llmod 000E  
                             doOperation@F3370 0100                                         clear_0 305A  
                                       clear_1 306C                               ___awdiv@quotient 000C  
                              ___awmod@divisor 0008                                ___awmod@counter 000A  
                                    ??_lcdInst 0009                                         _printf 377E  
                                       pad@buf 001C                                         ctoa@fp 0025  
                  ?_sendArduinoTireDropRequest 0001                                         dtoa@fp 0025  
              updateMotorBEncoder@directionPin 0004                                         _strlen 3410  
                                    ??_opDelay 000A                                      ??_initLCD 000A  
                                       fputc@c 000A                                         fputs@c 0017  
                                       fputs@i 0018                                   __pdataCOMRAM 0079  
                                       fputs@s 0013                                      ??_isalpha 0008  
                                    ??_isdigit 0008                          _requestIsTireDropDone 3700  
                         ??_set_pwm_duty_cycle 0060                              ??_tirePositioning 0072  
                                    ??_islower 0008                                   __mediumconst FE60  
                                    ??_isspace 0008               doOperation@currentOperationState 00F1  
                _opErrorCorrectionDegrees$2221 00AC                                         tblptrh 000FF7  
                                    ??_isupper 0008                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0023  
                                       stoa@fp 0013                               __end_of_vfprintf 32E6  
                                    ??_pulse_e 0006                                         xtoa@fp 0025  
                                    ??_toupper 000E                                     ___flge@ff1 0006  
                                   ___flge@ff2 000A                                   ___xxtofl@arg 0010  
                        pulse_e@interruptState 0006                                   ___xxtofl@exp 000F  
                                 ___xxtofl@val 0006                                     __accesstop 0080  
                      __end_of__initialization 307A                            _setMotorSpeeds$2218 0080  
                          _setMotorSpeeds$2219 0084                                  ___rparam_used 000001  
                               _setMotorSpeeds 2E72                  doOperation@tiresOnPoleAfterOp 00CB  
                                   ___fltol@f1 004E                           __end_of_happynewyear FE79  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 38DE  
                                 __pidataBANK1 38D6                        opDelay@maxOperationTime 0008  
                                __end_of_fputc 3164                                  __end_of_fputs 360A  
                                __end_of_putch 38B0                                        ??_fputc 000E  
                                      ??_fputs 0017                                        ??_putch 0009  
                                   __pbssBANK1 0100                         __end_of_setMotorSpeeds 2F08  
                            ?_interruptHandler 0001                             _errorCorrectedMove 1C86  
                           ??_interruptHandler 0006                          _encoderBInterruptLast 010F  
                                      ?___flge 0006                                        ?___wmul 0006  
           tirePositioning@distanceRecordedTop 0094                            ?_errorCorrectedMove 0088  
                           __size_of_send_byte 0012                                   ??_TIMER_INIT 0006  
                                      ?_printf 0080                                        ?_strlen 0006  
                                      _T2CKPS0 007E50                                        _T2CKPS1 007E51  
                  tirePositioning@topBreakbeam 0098                         ?_requestIsTireDropDone 0001  
                           __size_of_robotInit 0040                                      ?___xxtofl 0006  
                           __size_of_vfpfcnvrt 0484        opErrorCorrectionDegrees@distanceDegrees 00A8  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                           ??_errorCorrectedMove 0096  
                         __size_of_send_nibble 0016                                ?_setMotorSpeeds 006C  
  opErrorCorrectionDegrees@motorAStartDistance 00B2                                  opDelay@millis 0006  
                           __end_of_TIMER_INIT 3852                                        __Hparam 0000  
                                   _keyPressed 0112                                        __Lparam 0000  
              tirePositioning@maxOperationTime 0088                                __size_of___flge 00D0  
                                      ___aodiv 256A                                        ___fladd 142E  
                                      ___aomod 2A76                                        ___fldiv 19FE  
                                      ___awdiv 2F08                                        ___awmod 3088  
                                      ___flmul 10DC                                        ___flsub 33CA  
                                      ___fltol 2C6A                                        ___lldiv 2F8C  
                              __size_of___wmul 0026                                        ___llmod 31CE  
                                    ?_vfprintf 006D                                        __pcinit 300E  
                                      __ramtop 1000                                        _lcdInst 38B0  
                                      __ptext0 090E                                        __ptext1 3498  
                                      __ptext2 3164                                        __ptext3 3234  
                                      __ptext4 2F8C                                        __ptext5 3852  
                                      __ptext6 3334                                        __ptext7 0496  
                                      __ptext8 173A                                        __ptext9 3518  
                              __size_of_printf 0028                                      _T0CONbits 000FD5  
                                      _opDelay 3518                                __size_of_strlen 0044  
                                      _initLCD 3164                                 _motorADistance 0077  
                                 __size_of_abs 0032                                   __size_of_pad 009A  
                                      _isalpha 360A                                        _isdigit 36D0  
                                   ??___xxtofl 000A                               ___awmod@dividend 0006  
                               _motorBDistance 010C                                        _islower 3670  
                                      _isspace 3556                                        _isupper 36A0  
                     __size_of_I2C_Master_Init 005C                       __size_of_I2C_Master_Read 0024  
                     __size_of_I2C_Master_Wait 0012                       __size_of_I2C_Master_Stop 0008  
                                      atoi@neg 0013                                        _pulse_e 372C  
                                ??_doOperation 00B4              opErrorCorrectionDegrees@goalSpeed 00A0  
                               __pintcode_body 3594                                        _toupper 3380  
                  _topBreakBeamTriggeredChange 0111                           end_of_initialization 307A  
                        __end_of_LCD_SIZE_HORZ FE7C                              __end_of_send_byte 38A4  
                        __end_of_LCD_SIZE_VERT FE7B                                   ?_EncoderInit 0001  
                        doOperation@isDoneDrop 00DA                                        fputc@fp 000C  
                                __Lmediumconst FE60                                        int_func 3594  
                                      fputs@fp 0015                        __size_of_init_motor_PWM 0028  
                            __end_of_robotInit 34D8                      __size_of_I2C_Master_Start 0008  
                    __size_of_I2C_Master_Write 000A                                ___lldiv@divisor 000A  
                              ___lldiv@counter 0012                   __size_of_updateMotorAEncoder 0040  
                            __end_of_vfpfcnvrt 0496             tirePositioning@startDistanceBottom 008C  
                 __size_of_updateMotorBEncoder 0044                           doDisplayLog@keyValue 0096  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                _tirePositioning 173A  
                                   ??_vfprintf 0073                           doDisplayLog@keypress 0094  
                                      strlen@a 0008                                        strlen@s 0006  
                                    _PORTBbits 000F81                                      _PORTCbits 000F82  
                                    _PORTEbits 000F84           updateMotorBEncoder@interruptPinState 0002  
                                  ___fladd@grs 003C                                  ___xxtofl@sign 000E  
                                    _TRISAbits 000F92                    doOperation@bottomLaserState 00F2  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISEbits 000F96             doOperation@millisecondsMeasuredOld 00E3  
                                  ___fldiv@grs 0040                                    ___fldiv@rem 0039  
                                 _happynewyear FE72                   tirePositioning@startDistance 008E  
                                  ___flmul@grs 0022    opErrorCorrectionDegrees@motorBStartDistance 00B0  
                doOperation@totalTiresSupplied 00D4                                  send_byte@data 0008  
                          __end_of_doOperation 090E              opErrorCorrectionDegrees@turnRatio 00A2  
                       __size_of_replaceOldLog 004C                                 __end_of___flge 2C6A  
                                  vfpfcnvrt@ap 0050                                    vfpfcnvrt@cp 0066  
                                  vfpfcnvrt@fp 004C                                    vfpfcnvrt@ll 0056  
                               __end_of___wmul 37CC                                  __pidataCOMRAM 38DD  
                        doOperation@poleNumber 00D2                                 __end_of_printf 37A6  
                               __end_of_strlen 3454                            start_initialization 300E  
                  __size_of_set_pwm_duty_cycle 0202                      setMotorSpeeds@motorASpeed 006C  
                    setMotorSpeeds@motorBSpeed 0070                                    __end_of_abs 3670  
                                  __end_of_pad 2E72                        errorCorrectedMove@error 009A  
                     _opErrorCorrectionDegrees 2D24                              ??_I2C_Master_Init 0017  
                            ??_I2C_Master_Read 0007                              ??_I2C_Master_Wait 0006  
                            ??_I2C_Master_Stop 0007                                ___llmod@divisor 000A  
                              ___llmod@counter 000E                        __end_of_tirePositioning 19FE  
                                  vfprintf@fmt 006F                                       ??___flge 000E  
                                     ??___wmul 000A                          main@currentRobotState 0141  
                     I2C_Master_Init@clockFreq 0013                                    __pdataBANK0 00F6  
                                  __pdataBANK1 0143                        ??_requestIsTireDropDone 0009  
                             __CFG_LPT1OSC$OFF 000000                 doOperation@tiresDeployedOnPole 00E9  
              tirePositioning@startDistanceTop 008A                                doOperation@send 00CD  
                                     ??_printf 0075                      __size_of_interruptHandler 35CA  
                                     ??_strlen 0008                                      ___fladd@a 0031  
                                    ___fladd@b 002D                                      ___fldiv@a 0031  
                                    ___fldiv@b 002D                                    __pbssBIGRAM 014A  
                                    ___flmul@a 0018                                      ___flmul@b 0014  
                                  __pbssCOMRAM 0075                                      ___flsub@a 004A  
                                    ___flsub@b 0046                                  __pcstackBANK0 0080  
                                __pcstackBANK1 0133                               ___aodiv@dividend 0006  
                                _replaceOldLog 3334                               ??_setMotorSpeeds 0072  
                            __size_of___xxtofl 0140                                    _doOperation 0496  
                       setMotorSpeeds@Aforward 006E                         setMotorSpeeds@Bforward 006F  
                               _init_motor_PWM 3756                                      _atoi$1825 0015  
                                    _atoi$1826 0019                                      _atoi$1827 0017  
                         __size_of_EncoderInit 0018                               _I2C_Master_Start 38CE  
                             _I2C_Master_Write 38BC                       doOperation@topLaserState 00F3  
                                    _dtoa$1329 0037                              __CFG_CCP2MX$PORTC 000000  
                                    __pintcode 0008                                  __pmediumconst FE60  
                                     ?___aodiv 0006                                       ?___fladd 002D  
                                     ?___aomod 0006                                       ?___fldiv 002D  
                                     ?___awdiv 0006                               ___aodiv@quotient 0018  
                                     ?___awmod 0006                                       ?___flmul 0014  
                                     ?___flsub 0046                                       ?___fltol 004E  
                                     ?___lldiv 0006          errorCorrectedMove@motorAStartDistance 008E  
                                     ?___llmod 0006                                       ?_lcdInst 0001  
                            __size_of_vfprintf 0056                                       ?_opDelay 0006  
                                     ?_initLCD 0001                         doOperation@badCountBot 00D0  
                                     ?_isalpha 0006                                       ?_isdigit 0006  
                                     ?_islower 0006                                       ?_isspace 0006  
                               ?_replaceOldLog 0001                                       ?_isupper 0006  
                          _updateMotorAEncoder 34D8                                   doOperation@i 00EF  
                          _updateMotorBEncoder 3454                                  ??_send_nibble 0007  
                                     ?_pulse_e 0001                                 __size_of_fputc 006C  
                               __size_of_fputs 0038                                       ?_toupper 000C  
                       __end_of_init_motor_PWM 377E                   doOperation@topLaserStatePrev 00EB  
                               __size_of_putch 000C                    __size_of_errorCorrectedMove 026C  
                               ___wmul@product 000A                                       _LATAbits 000F89  
                                ?_doDisplayLog 008E                                       _LATDbits 000F8C  
                             ?_tirePositioning 0088                                      _send_byte 3892  
                  errorCorrectedMove@goalSpeed 0088                                 _LCD_LINE1_ADDR FE79  
                               _LCD_LINE2_ADDR FE83                                 _LCD_LINE3_ADDR FE82  
                               _LCD_LINE4_ADDR FE81                     doOperation@timeInOperation 00ED  
                      init_motor_PWM@FREQUENCY FE7D                                       i2u622_40 345E  
                                     i2u623_40 3470                                       i2u622_48 3460  
                         ?_updateMotorAEncoder 0001                                       i2u623_48 3472  
                                     i2u625_40 34E2                                       i2u626_40 34F4  
                                     i2u625_48 34E4                                       i2u626_48 34F6  
                         ?_updateMotorBEncoder 0001                               __CFG_WDTPS$32768 000000  
                                    _robotInit 3498                                      _vfpfcnvrt 0012  
                                    _xtoa$1350 0038                                      _xtoa$1351 003A  
                            ___wmul@multiplier 0006                   ??_sendArduinoTireDropRequest 0009  
                                 _isspace$1852 000C                                     vfpfcnvrt@c 006C  
                                    copy_data0 3022                        _set_pwm_duty_cycle$2217 0068  
                              ?_init_motor_PWM 0001                                 ??_doDisplayLog 0090  
                         doOperation@timeStart 00D8                         __end_of_LCD_LINE1_ADDR FE7A  
                       __end_of_LCD_LINE2_ADDR FE84                         __end_of_LCD_LINE3_ADDR FE83  
                       __end_of_LCD_LINE4_ADDR FE82                            __end_of_send_nibble 3880  
                                   _EECON1bits 000FA6                                     ?_send_byte 0001  
                                     __Hrparam 0000                          ??_updateMotorAEncoder 0001  
                        ??_updateMotorBEncoder 0001                        doDisplayLog@currentPole 0097  
              doDisplayLog@currentDisplayState 0095                                     vfprintf@ap 0071  
                                     __Lrparam 0000                                     vfprintf@fp 006D  
                           __CFG_BOREN$SBORDIS 000000            __size_of_sendArduinoTireDropRequest 0022  
                                   ?_robotInit 0001           updateMotorAEncoder@interruptPinState 0002  
                             __size_of___aodiv 0148                               __size_of___fladd 030C  
        errorCorrectedMove@motorBStartDistance 0090                               __size_of___aomod 0124  
                             __size_of___fldiv 0288                               __size_of___awdiv 0084  
                             __size_of___awmod 0070                               __size_of___flmul 0352  
                             __size_of___flsub 0046                               __size_of___fltol 00BA  
                             __size_of___lldiv 0082                               __size_of___llmod 0066  
                  errorCorrectedMove@turnRatio 008A                                     ?_vfpfcnvrt 004C  
                              ___aodiv@divisor 000E                               _interruptHandler 0008  
                              ___aodiv@counter 0016                               __size_of_lcdInst 000C  
                   ??_opErrorCorrectionDegrees 0072                                ??_replaceOldLog 0006  
                             __size_of_opDelay 003E                                _I2C_Master_Init 3234  
                              _I2C_Master_Read 37CC                               __size_of_initLCD 006A  
                                     ___xxtofl 27F6                                _I2C_Master_Wait 3880  
                              _I2C_Master_Stop 38C6                               __size_of_isalpha 0034  
                             __size_of_isdigit 0030                               __size_of_islower 0030  
                             __size_of_isspace 003E                            doOperation@badCount 00CE  
                                     __ptext10 2F08                                       __ptext11 37F0  
                                     __ptext20 1C86                                       __ptext12 3812  
                                     __ptext21 2E72                                       __ptext13 3700  
                                     __ptext30 3756                                       __ptext22 2368  
                                     __ptext14 38BC                                       __ptext31 3088  
                                     __ptext23 27F6                                       __ptext15 38C6  
                                     __ptext40 36A0                                       __ptext32 3834  
                                     __ptext24 2C6A                                       __ptext16 38CE  
                                     __ptext41 360A                                       __ptext33 0D2C  
                                     __ptext25 10DC                                       __ptext17 37CC  
                                     __ptext50 35D2                                       __ptext42 26B2  
                                     __ptext34 377E                                       __ptext26 2B9A  
                                     __ptext18 3880                                       __ptext51 30F8  
                                     __ptext43 1EF2                                       __ptext35 3290  
                                     __ptext27 19FE                                       __ptext19 2D24  
                                     __ptext60 372C                                       __ptext52 38A4  
                                     __ptext44 363E                                       __ptext36 0012  
                                     __ptext28 33CA                                       __ptext61 31CE  
                                     __ptext53 2936                                       __ptext45 2A76  
                                     __ptext37 2138                                       __ptext29 142E  
                                     __ptext54 3556                                       __ptext46 256A  
                                     __ptext38 3380                                       __ptext63 3454  
                                     __ptext55 36D0                                       __ptext47 32E6  
                                     __ptext39 3670                                       __ptext64 34D8  
                                     __ptext56 37A6                                       __ptext48 2DD8  
                                     __ptext57 38B0                                       __ptext49 3410  
                                     __ptext58 3892                                       __ptext59 386A  
                             __size_of_isupper 0030                               __size_of_pulse_e 002A  
                              _motorADirection 00F6                               __size_of_toupper 004A  
                                __size_of_atoi 0140                                  __size_of_ctoa 004E  
                                __size_of_main 041E                                _motorBDirection 0079  
                                __size_of_dtoa 0246                                  __size_of_stoa 0144  
                                __size_of_xtoa 0230                                      stoa@F1144 0143  
              doOperation@distanceFromLastPole 00D6                 set_pwm_duty_cycle@max_duty_val 0062  
                                     int$flags 007A                             doOperation@PIDData 00B7  
                                     _vfprintf 3290                                      printf@fmt 0080  
               doOperation@motorAStartDistance 00DB                                       main@tick 013A  
                                     main@time 0133                 __size_of_requestIsTireDropDone 002C  
                __end_of_requestIsTireDropDone 372C                    I2C_Master_Write@byteToWrite 0007  
 __end_of_sendArduinoTireOperationStartMessage 3812  __size_of_sendArduinoTireOperationStartMessage 0022  
       ??_sendArduinoTireOperationStartMessage 0009          ?_sendArduinoTireOperationStartMessage 0001  
         _sendArduinoTireOperationStartMessage 37F0                updateMotorAEncoder@directionPin 0004  
                             ___aomod@dividend 0006                     __end_of_set_pwm_duty_cycle 256A  
                                    putch@data 0009                       __end_of_I2C_Master_Start 38D6  
                               _vfpfcnvrt$1365 006A                       __end_of_I2C_Master_Write 38C6  
                                   _INTCONbits 000FF2          tirePositioning@distanceRecordedBottom 0096  
                                     isalpha@c 0006                                       isdigit@c 0006  
                                  _send_nibble 386A                                   ?_doOperation 0001  
               _bottomBreakBeamTriggeredChange 0110                                       intlevel2 0000  
                                _LCD_SIZE_HORZ FE7B                                       islower@c 0006  
         errorCorrectedMove@correctionConstant 0092                                  _LCD_SIZE_VERT FE7A  
                                     isspace@c 0006                               ___lldiv@dividend 0006  
                                  ??_send_byte 0008                                       isupper@c 0006  
              doOperation@bottomLaserStatePrev 00EC                                     _OSCCONbits 000FD3  
                           doOperation@counted 00DF                                    ??_robotInit 001B  
                                     printf@ap 008C                        __end_of_I2C_Master_Init 3290  
                              ___aomod@divisor 000E                        __end_of_I2C_Master_Read 37F0  
                      __end_of_I2C_Master_Wait 3892                        __end_of_I2C_Master_Stop 38CE  
                                  ??_vfpfcnvrt 0052                                    lcdInst@data 0009  
                                     stoa@nuls 0018                                ___aomod@counter 0016  
                        doDisplayLog@logNumber 008E             __end_of_sendArduinoTireDropRequest 3834  
                   _sendArduinoTireDropRequest 3812                                     _TIMER_INIT 3834  
              __end_ofinit_motor_PWM@FREQUENCY FE81                           __end_of_doDisplayLog 10DC  
               tirePositioning@bottomBreakbeam 009A                               ___lldiv@quotient 000E  
                                     toupper@c 000C                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0039  
   opErrorCorrectionDegrees@correctionConstant 00A4                                   ___aodiv@sign 0017  
                                ??_EncoderInit 0006                                   ___fladd@aexp 003A  
                                 ___fladd@bexp 003B                                   ___aomod@sign 0017  
