

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 02 20:43:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           ; Version 2.05
    99                           ; Generated 20/12/2018 GMT
   100                           ; 
   101                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F4620 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK0
   134  004A94                     __pidataBANK0:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for stoa@F1144
   138  004A94  28                 	db	40
   139  004A95  6E                 	db	110
   140  004A96  75                 	db	117
   141  004A97  6C                 	db	108
   142  004A98  6C                 	db	108
   143  004A99  29                 	db	41
   144  004A9A  00                 	db	0
   145                           
   146                           ;initializer for _motorADirection
   147  004A9B  01                 	db	1
   148                           
   149                           ;initializer for _motorBDirection
   150  004A9C  01                 	db	1
   151                           
   152                           	psect	idataBANK1
   153  004A3A                     __pidataBANK1:
   154                           	opt callstack 0
   155                           
   156                           ;initializer for mainEEPROMTest@F3511
   157  004A3A  0000               	dw	0
   158  004A3C  0001               	dw	1
   159  004A3E  0002               	dw	2
   160  004A40  0003               	dw	3
   161  004A42  7D01               	dw	32001
   162  004A44  0005               	dw	5
   163  004A46  0006               	dw	6
   164  004A48  0007               	dw	7
   165  004A4A  0008               	dw	8
   166  004A4C  0009               	dw	9
   167                           
   168                           	psect	mediumconst
   169  00FE46                     __pmediumconst:
   170                           	opt callstack 0
   171  00FE46  00                 	db	0
   172  00FE47                     _keys:
   173                           	opt callstack 0
   174  00FE47  31                 	db	49
   175  00FE48  32                 	db	50
   176  00FE49  33                 	db	51
   177  00FE4A  41                 	db	65
   178  00FE4B  34                 	db	52
   179  00FE4C  35                 	db	53
   180  00FE4D  36                 	db	54
   181  00FE4E  42                 	db	66
   182  00FE4F  37                 	db	55
   183  00FE50  38                 	db	56
   184  00FE51  39                 	db	57
   185  00FE52  43                 	db	67
   186  00FE53  2A                 	db	42
   187  00FE54  30                 	db	48
   188  00FE55  23                 	db	35
   189  00FE56  44                 	db	68
   190  00FE57  00                 	db	0
   191  00FE58                     __end_of_keys:
   192                           	opt callstack 0
   193  00FE58                     _happynewyear:
   194                           	opt callstack 0
   195  00FE58  00                 	db	0
   196  00FE59  37                 	db	55
   197  00FE5A  0E                 	db	14
   198  00FE5B  02                 	db	2
   199  00FE5C  13                 	db	19
   200  00FE5D  02                 	db	2
   201  00FE5E  13                 	db	19
   202  00FE5F                     __end_of_happynewyear:
   203                           	opt callstack 0
   204  00FE5F                     _LCD_LINE1_ADDR:
   205                           	opt callstack 0
   206  00FE5F  00                 	db	0
   207  00FE60                     __end_of_LCD_LINE1_ADDR:
   208                           	opt callstack 0
   209  00FE60                     _LCD_SIZE_VERT:
   210                           	opt callstack 0
   211  00FE60  04                 	db	4
   212  00FE61                     __end_of_LCD_SIZE_VERT:
   213                           	opt callstack 0
   214  00FE61                     _LCD_SIZE_HORZ:
   215                           	opt callstack 0
   216  00FE61  10                 	db	16
   217  00FE62                     __end_of_LCD_SIZE_HORZ:
   218                           	opt callstack 0
   219  00FE62  10                 	db	16
   220  00FE63                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   221                           	opt callstack 0
   222  00FE63  03E8               	dw	1000
   223  00FE65  0000               	dw	0
   224  00FE67                     __end_ofinit_motor_PWM@FREQUENCY:
   225                           	opt callstack 0
   226  00FE67  06EA               	dw	1770
   227  00FE69                     __end_of_clicksPerM:
   228                           	opt callstack 0
   229  00FE69  50                 	db	80
   230  00FE6A                     __end_of_LCD_LINE4_ADDR:
   231                           	opt callstack 0
   232  00FE6A  10                 	db	16
   233  00FE6B                     __end_of_LCD_LINE3_ADDR:
   234                           	opt callstack 0
   235  00FE6B  40                 	db	64
   236  00FE6C                     __end_of_LCD_LINE2_ADDR:
   237                           	opt callstack 0
   238  0000                     _SSPBUF	set	4041
   239  0000                     _SSPCON2bits	set	4037
   240  0000                     _SSPCON1	set	4038
   241  0000                     _SSPADD	set	4040
   242  0000                     _SSPCON1bits	set	4038
   243  0000                     _SSPCON2	set	4037
   244  0000                     _SSPSTAT	set	4039
   245  0000                     _LATDbits	set	3980
   246  0000                     _ADCON1	set	4033
   247  0000                     _LATB	set	3978
   248  0000                     _TRISD	set	3989
   249  0000                     _LATD	set	3980
   250  0000                     _TRISAbits	set	3986
   251  0000                     _LATBbits	set	3978
   252  0000                     _LATAbits	set	3977
   253  0000                     _CCPR2L	set	4027
   254  0000                     _CCPR1L	set	4030
   255  0000                     _PR2	set	4043
   256  0000                     _EECON2	set	4007
   257  0000                     _EECON1bits	set	4006
   258  0000                     _EEADR	set	4009
   259  0000                     _EEDATA	set	4008
   260  0000                     _INTCONbits	set	4082
   261  0000                     _TMR0L	set	4054
   262  0000                     _TMR0H	set	4055
   263  0000                     _T0CONbits	set	4053
   264  0000                     _OSCCONbits	set	4051
   265  0000                     _TRISBbits	set	3987
   266  0000                     _TRISEbits	set	3990
   267  0000                     _TRISCbits	set	3988
   268  0000                     _PORTCbits	set	3970
   269  0000                     _PORTEbits	set	3972
   270  0000                     _PORTBbits	set	3969
   271  0000                     _PORTB	set	3969
   272  0000                     _INT0IF	set	32657
   273  0000                     _INT2IF	set	32641
   274  0000                     _TMR0IF	set	32658
   275  0000                     _INT1IF	set	32640
   276  0000                     _INT1IE	set	32643
   277  0000                     _CCP2Y	set	32212
   278  0000                     _CCP2X	set	32213
   279  0000                     _CCP1Y	set	32236
   280  0000                     _CCP1X	set	32237
   281  0000                     _TMR2ON	set	32338
   282  0000                     _T2CKPS1	set	32337
   283  0000                     _T2CKPS0	set	32336
   284  0000                     _CCP2M0	set	32208
   285  0000                     _CCP2M1	set	32209
   286  0000                     _CCP2M2	set	32210
   287  0000                     _CCP2M3	set	32211
   288  0000                     _CCP1M0	set	32232
   289  0000                     _CCP1M1	set	32233
   290  0000                     _CCP1M2	set	32234
   291  0000                     _CCP1M3	set	32235
   292  0000                     _P1M0	set	32238
   293  0000                     _P1M1	set	32239
   294  0000                     _TMR0ON	set	32431
   295  0000                     _TMR0IE	set	32661
   296  0000                     _PSA	set	32427
   297  0000                     _T0PS0	set	32424
   298  0000                     _T0PS1	set	32425
   299  0000                     _T0PS2	set	32426
   300  0000                     _T08BIT	set	32430
   301  0000                     _INT0IE	set	32660
   302  0000                     _INT2IE	set	32644
   303  00FE6C                     STR_55:
   304                           
   305                           ; BSR set to: 0
   306  00FE6C  28                 	db	40
   307  00FE6D  31                 	db	49	;'1'
   308  00FE6E  29                 	db	41
   309  00FE6F  20                 	db	32
   310  00FE70  28                 	db	40
   311  00FE71  32                 	db	50	;'2'
   312  00FE72  29                 	db	41
   313  00FE73  20                 	db	32
   314  00FE74  28                 	db	40
   315  00FE75  33                 	db	51	;'3'
   316  00FE76  29                 	db	41
   317  00FE77  20                 	db	32
   318  00FE78  28                 	db	40
   319  00FE79  34                 	db	52	;'4'
   320  00FE7A  29                 	db	41
   321  00FE7B  00                 	db	0
   322  00FE7C                     STR_9:
   323                           
   324                           ; BSR set to: 0
   325  00FE7C  28                 	db	40
   326  00FE7D  32                 	db	50	;'2'
   327  00FE7E  29                 	db	41
   328  00FE7F  20                 	db	32
   329  00FE80  53                 	db	83	;'S'
   330  00FE81  41                 	db	65	;'A'
   331  00FE82  56                 	db	86	;'V'
   332  00FE83  45                 	db	69	;'E'
   333  00FE84  20                 	db	32
   334  00FE85  26                 	db	38
   335  00FE86  20                 	db	32
   336  00FE87  45                 	db	69	;'E'
   337  00FE88  58                 	db	88	;'X'
   338  00FE89  49                 	db	73	;'I'
   339  00FE8A  54                 	db	84	;'T'
   340  00FE8B  00                 	db	0
   341  00FE8C                     STR_47:
   342                           
   343                           ; BSR set to: 0
   344  00FE8C  28                 	db	40
   345  00FE8D  32                 	db	50	;'2'
   346  00FE8E  29                 	db	41
   347  00FE8F  20                 	db	32
   348  00FE90  51                 	db	81	;'Q'
   349  00FE91  55                 	db	85	;'U'
   350  00FE92  49                 	db	73	;'I'
   351  00FE93  54                 	db	84	;'T'
   352  00FE94  20                 	db	32
   353  00FE95  44                 	db	68	;'D'
   354  00FE96  4F                 	db	79	;'O'
   355  00FE97  20                 	db	32
   356  00FE98  4E                 	db	78	;'N'
   357  00FE99  4F                 	db	79	;'O'
   358  00FE9A  54                 	db	84	;'T'
   359  00FE9B  00                 	db	0
   360  00FE9C                     STR_28:
   361                           
   362                           ; BSR set to: 0
   363  00FE9C  25                 	db	37
   364  00FE9D  64                 	db	100	;'d'
   365  00FE9E  20                 	db	32
   366  00FE9F  63                 	db	99	;'c'
   367  00FEA0  6D                 	db	109	;'m'
   368  00FEA1  20                 	db	32
   369  00FEA2  66                 	db	102	;'f'
   370  00FEA3  72                 	db	114	;'r'
   371  00FEA4  6F                 	db	111	;'o'
   372  00FEA5  6D                 	db	109	;'m'
   373  00FEA6  20                 	db	32
   374  00FEA7  70                 	db	112	;'p'
   375  00FEA8  6F                 	db	111	;'o'
   376  00FEA9  6C                 	db	108	;'l'
   377  00FEAA  65                 	db	101	;'e'
   378  00FEAB  00                 	db	0
   379  00FEAC                     STR_5:
   380                           
   381                           ; BSR set to: 0
   382  00FEAC  54                 	db	84	;'T'
   383  00FEAD  49                 	db	73	;'I'
   384  00FEAE  52                 	db	82	;'R'
   385  00FEAF  2E                 	db	46
   386  00FEB0  20                 	db	32
   387  00FEB1  53                 	db	83	;'S'
   388  00FEB2  55                 	db	85	;'U'
   389  00FEB3  50                 	db	80	;'P'
   390  00FEB4  50                 	db	80	;'P'
   391  00FEB5  4C                 	db	76	;'L'
   392  00FEB6  49                 	db	73	;'I'
   393  00FEB7  45                 	db	69	;'E'
   394  00FEB8  44                 	db	68	;'D'
   395  00FEB9  20                 	db	32
   396  00FEBA  00                 	db	0
   397  00FEBB                     STR_32:
   398                           
   399                           ; BSR set to: 0
   400  00FEBB  25                 	db	37
   401  00FEBC  30                 	db	48	;'0'
   402  00FEBD  32                 	db	50	;'2'
   403  00FEBE  78                 	db	120	;'x'
   404  00FEBF  2F                 	db	47
   405  00FEC0  25                 	db	37
   406  00FEC1  30                 	db	48	;'0'
   407  00FEC2  32                 	db	50	;'2'
   408  00FEC3  78                 	db	120	;'x'
   409  00FEC4  2F                 	db	47
   410  00FEC5  25                 	db	37
   411  00FEC6  30                 	db	48	;'0'
   412  00FEC7  32                 	db	50	;'2'
   413  00FEC8  78                 	db	120	;'x'
   414  00FEC9  00                 	db	0
   415  00FECA                     STR_33:
   416                           
   417                           ; BSR set to: 0
   418  00FECA  25                 	db	37
   419  00FECB  30                 	db	48	;'0'
   420  00FECC  32                 	db	50	;'2'
   421  00FECD  78                 	db	120	;'x'
   422  00FECE  3A                 	db	58	;':'
   423  00FECF  25                 	db	37
   424  00FED0  30                 	db	48	;'0'
   425  00FED1  32                 	db	50	;'2'
   426  00FED2  78                 	db	120	;'x'
   427  00FED3  3A                 	db	58	;':'
   428  00FED4  25                 	db	37
   429  00FED5  30                 	db	48	;'0'
   430  00FED6  32                 	db	50	;'2'
   431  00FED7  78                 	db	120	;'x'
   432  00FED8  00                 	db	0
   433  00FED9                     STR_53:
   434                           
   435                           ; BSR set to: 0
   436  00FED9  28                 	db	40
   437  00FEDA  31                 	db	49	;'1'
   438  00FEDB  20                 	db	32
   439  00FEDC  49                 	db	73	;'I'
   440  00FEDD  53                 	db	83	;'S'
   441  00FEDE  20                 	db	32
   442  00FEDF  4F                 	db	79	;'O'
   443  00FEE0  4C                 	db	76	;'L'
   444  00FEE1  44                 	db	68	;'D'
   445  00FEE2  45                 	db	69	;'E'
   446  00FEE3  53                 	db	83	;'S'
   447  00FEE4  54                 	db	84	;'T'
   448  00FEE5  29                 	db	41
   449  00FEE6  00                 	db	0
   450  00FEE7                     STR_7:
   451                           
   452                           ; BSR set to: 0
   453  00FEE7  28                 	db	40
   454  00FEE8  31                 	db	49	;'1'
   455  00FEE9  29                 	db	41
   456  00FEEA  20                 	db	32
   457  00FEEB  50                 	db	80	;'P'
   458  00FEEC  4F                 	db	79	;'O'
   459  00FEED  4C                 	db	76	;'L'
   460  00FEEE  45                 	db	69	;'E'
   461  00FEEF  20                 	db	32
   462  00FEF0  49                 	db	73	;'I'
   463  00FEF1  4E                 	db	78	;'N'
   464  00FEF2  46                 	db	70	;'F'
   465  00FEF3  4F                 	db	79	;'O'
   466  00FEF4  00                 	db	0
   467  00FEF5                     STR_37:
   468                           
   469                           ; BSR set to: 0
   470  00FEF5  28                 	db	40
   471  00FEF6  32                 	db	50	;'2'
   472  00FEF7  29                 	db	41
   473  00FEF8  20                 	db	32
   474  00FEF9  56                 	db	86	;'V'
   475  00FEFA  49                 	db	73	;'I'
   476  00FEFB  45                 	db	69	;'E'
   477  00FEFC  57                 	db	87	;'W'
   478  00FEFD  20                 	db	32
   479  00FEFE  4C                 	db	76	;'L'
   480  00FEFF  4F                 	db	79	;'O'
   481  00FF00  47                 	db	71	;'G'
   482  00FF01  53                 	db	83	;'S'
   483  00FF02  00                 	db	0
   484  00FF03                     STR_20:
   485                           
   486                           ; BSR set to: 0
   487  00FF03  31                 	db	49	;'1'
   488  00FF04  3C                 	db	60	;'<'
   489  00FF05  2D                 	db	45
   490  00FF06  20                 	db	32
   491  00FF07  32                 	db	50	;'2'
   492  00FF08  2D                 	db	45
   493  00FF09  3E                 	db	62	;'>'
   494  00FF0A  20                 	db	32
   495  00FF0B  33                 	db	51	;'3'
   496  00FF0C  4D                 	db	77	;'M'
   497  00FF0D  45                 	db	69	;'E'
   498  00FF0E  4E                 	db	78	;'N'
   499  00FF0F  55                 	db	85	;'U'
   500  00FF10  00                 	db	0
   501  00FF11                     STR_43:
   502                           
   503                           ; BSR set to: 0
   504  00FF11  4F                 	db	79	;'O'
   505  00FF12  50                 	db	80	;'P'
   506  00FF13  2E                 	db	46
   507  00FF14  20                 	db	32
   508  00FF15  43                 	db	67	;'C'
   509  00FF16  4F                 	db	79	;'O'
   510  00FF17  4D                 	db	77	;'M'
   511  00FF18  50                 	db	80	;'P'
   512  00FF19  4C                 	db	76	;'L'
   513  00FF1A  45                 	db	69	;'E'
   514  00FF1B  54                 	db	84	;'T'
   515  00FF1C  45                 	db	69	;'E'
   516  00FF1D  00                 	db	0
   517  00FF1E                     STR_45:
   518                           
   519                           ; BSR set to: 0
   520  00FF1E  28                 	db	40
   521  00FF1F  31                 	db	49	;'1'
   522  00FF20  29                 	db	41
   523  00FF21  20                 	db	32
   524  00FF22  56                 	db	86	;'V'
   525  00FF23  49                 	db	73	;'I'
   526  00FF24  45                 	db	69	;'E'
   527  00FF25  57                 	db	87	;'W'
   528  00FF26  20                 	db	32
   529  00FF27  4C                 	db	76	;'L'
   530  00FF28  4F                 	db	79	;'O'
   531  00FF29  47                 	db	71	;'G'
   532  00FF2A  00                 	db	0
   533  00FF2B                     STR_39:
   534                           
   535                           ; BSR set to: 0
   536  00FF2B  4F                 	db	79	;'O'
   537  00FF2C  50                 	db	80	;'P'
   538  00FF2D  45                 	db	69	;'E'
   539  00FF2E  52                 	db	82	;'R'
   540  00FF2F  41                 	db	65	;'A'
   541  00FF30  54                 	db	84	;'T'
   542  00FF31  49                 	db	73	;'I'
   543  00FF32  4F                 	db	79	;'O'
   544  00FF33  4E                 	db	78	;'N'
   545  00FF34  20                 	db	32
   546  00FF35  49                 	db	73	;'I'
   547  00FF36  4E                 	db	78	;'N'
   548  00FF37  00                 	db	0
   549  00FF38                     STR_29:
   550                           
   551                           ; BSR set to: 0
   552  00FF38  4C                 	db	76	;'L'
   553  00FF39  65                 	db	101	;'e'
   554  00FF3A  61                 	db	97	;'a'
   555  00FF3B  76                 	db	118	;'v'
   556  00FF3C  69                 	db	105	;'i'
   557  00FF3D  6E                 	db	110	;'n'
   558  00FF3E  67                 	db	103	;'g'
   559  00FF3F  20                 	db	32
   560  00FF40  50                 	db	80	;'P'
   561  00FF41  6F                 	db	111	;'o'
   562  00FF42  6C                 	db	108	;'l'
   563  00FF43  65                 	db	101	;'e'
   564  00FF44  00                 	db	0
   565  00FF45                     STR_27:
   566                           
   567                           ; BSR set to: 0
   568  00FF45  25                 	db	37
   569  00FF46  64                 	db	100	;'d'
   570  00FF47  20                 	db	32
   571  00FF48  64                 	db	100	;'d'
   572  00FF49  72                 	db	114	;'r'
   573  00FF4A  6F                 	db	111	;'o'
   574  00FF4B  70                 	db	112	;'p'
   575  00FF4C  70                 	db	112	;'p'
   576  00FF4D  69                 	db	105	;'i'
   577  00FF4E  6E                 	db	110	;'n'
   578  00FF4F  67                 	db	103	;'g'
   579  00FF50  00                 	db	0
   580  00FF51                     STR_51:
   581                           
   582                           ; BSR set to: 0
   583  00FF51  53                 	db	83	;'S'
   584  00FF52  45                 	db	69	;'E'
   585  00FF53  4C                 	db	76	;'L'
   586  00FF54  45                 	db	69	;'E'
   587  00FF55  43                 	db	67	;'C'
   588  00FF56  54                 	db	84	;'T'
   589  00FF57  20                 	db	32
   590  00FF58  4C                 	db	76	;'L'
   591  00FF59  4F                 	db	79	;'O'
   592  00FF5A  47                 	db	71	;'G'
   593  00FF5B  00                 	db	0
   594  00FF5C                     STR_26:
   595                           
   596                           ; BSR set to: 0
   597  00FF5C  25                 	db	37
   598  00FF5D  64                 	db	100	;'d'
   599  00FF5E  20                 	db	32
   600  00FF5F  6F                 	db	111	;'o'
   601  00FF60  6E                 	db	110	;'n'
   602  00FF61  20                 	db	32
   603  00FF62  70                 	db	112	;'p'
   604  00FF63  6F                 	db	111	;'o'
   605  00FF64  6C                 	db	108	;'l'
   606  00FF65  65                 	db	101	;'e'
   607  00FF66  00                 	db	0
   608  00FF67                     STR_18:
   609                           
   610                           ; BSR set to: 0
   611  00FF67  4F                 	db	79	;'O'
   612  00FF68  4E                 	db	78	;'N'
   613  00FF69  20                 	db	32
   614  00FF6A  50                 	db	80	;'P'
   615  00FF6B  4F                 	db	79	;'O'
   616  00FF6C  4C                 	db	76	;'L'
   617  00FF6D  45                 	db	69	;'E'
   618  00FF6E  3A                 	db	58	;':'
   619  00FF6F  20                 	db	32
   620  00FF70  00                 	db	0
   621  00FF71                     STR_2:
   622                           
   623                           ; BSR set to: 0
   624  00FF71  4F                 	db	79	;'O'
   625  00FF72  50                 	db	80	;'P'
   626  00FF73  2E                 	db	46
   627  00FF74  20                 	db	32
   628  00FF75  54                 	db	84	;'T'
   629  00FF76  49                 	db	73	;'I'
   630  00FF77  4D                 	db	77	;'M'
   631  00FF78  45                 	db	69	;'E'
   632  00FF79  20                 	db	32
   633  00FF7A  00                 	db	0
   634  00FF7B                     STR_25:
   635                           
   636                           ; BSR set to: 0
   637  00FF7B  54                 	db	84	;'T'
   638  00FF7C  49                 	db	73	;'I'
   639  00FF7D  52                 	db	82	;'R'
   640  00FF7E  45                 	db	69	;'E'
   641  00FF7F  20                 	db	32
   642  00FF80  44                 	db	68	;'D'
   643  00FF81  52                 	db	82	;'R'
   644  00FF82  4F                 	db	79	;'O'
   645  00FF83  50                 	db	80	;'P'
   646  00FF84  00                 	db	0
   647  00FF85                     STR_35:
   648                           
   649                           ; BSR set to: 0
   650  00FF85  28                 	db	40
   651  00FF86  31                 	db	49	;'1'
   652  00FF87  29                 	db	41
   653  00FF88  20                 	db	32
   654  00FF89  53                 	db	83	;'S'
   655  00FF8A  54                 	db	84	;'T'
   656  00FF8B  41                 	db	65	;'A'
   657  00FF8C  52                 	db	82	;'R'
   658  00FF8D  54                 	db	84	;'T'
   659  00FF8E  00                 	db	0
   660  00FF8F                     STR_56:
   661                           
   662                           ; BSR set to: 0
   663  00FF8F  77                 	db	119	;'w'
   664  00FF90  72                 	db	114	;'r'
   665  00FF91  6F                 	db	111	;'o'
   666  00FF92  74                 	db	116	;'t'
   667  00FF93  65                 	db	101	;'e'
   668  00FF94  3A                 	db	58	;':'
   669  00FF95  20                 	db	32
   670  00FF96  25                 	db	37
   671  00FF97  63                 	db	99	;'c'
   672  00FF98  00                 	db	0
   673  00FF99                     STR_31:
   674                           
   675                           ; BSR set to: 0
   676  00FF99  57                 	db	87	;'W'
   677  00FF9A  45                 	db	69	;'E'
   678  00FF9B  4C                 	db	76	;'L'
   679  00FF9C  43                 	db	67	;'C'
   680  00FF9D  4F                 	db	79	;'O'
   681  00FF9E  4D                 	db	77	;'M'
   682  00FF9F  45                 	db	69	;'E'
   683  00FFA0  20                 	db	32
   684  00FFA1  00                 	db	0
   685  00FFA2                     STR_49:
   686                           
   687                           ; BSR set to: 0
   688  00FFA2  53                 	db	83	;'S'
   689  00FFA3  41                 	db	65	;'A'
   690  00FFA4  56                 	db	86	;'V'
   691  00FFA5  45                 	db	69	;'E'
   692  00FFA6  20                 	db	32
   693  00FFA7  4C                 	db	76	;'L'
   694  00FFA8  4F                 	db	79	;'O'
   695  00FFA9  47                 	db	71	;'G'
   696  00FFAA  00                 	db	0
   697  00FFAB                     STR_41:
   698                           
   699                           ; BSR set to: 0
   700  00FFAB  50                 	db	80	;'P'
   701  00FFAC  52                 	db	82	;'R'
   702  00FFAD  4F                 	db	79	;'O'
   703  00FFAE  47                 	db	71	;'G'
   704  00FFAF  52                 	db	82	;'R'
   705  00FFB0  45                 	db	69	;'E'
   706  00FFB1  53                 	db	83	;'S'
   707  00FFB2  53                 	db	83	;'S'
   708  00FFB3  00                 	db	0
   709  00FFB4                     STR_58:
   710                           
   711                           ; BSR set to: 0
   712  00FFB4  72                 	db	114	;'r'
   713  00FFB5  65                 	db	101	;'e'
   714  00FFB6  61                 	db	97	;'a'
   715  00FFB7  64                 	db	100	;'d'
   716  00FFB8  3A                 	db	58	;':'
   717  00FFB9  20                 	db	32
   718  00FFBA  25                 	db	37
   719  00FFBB  63                 	db	99	;'c'
   720  00FFBC  00                 	db	0
   721  00FFBD                     STR_10:
   722                           
   723                           ; BSR set to: 0
   724  00FFBD  25                 	db	37
   725  00FFBE  73                 	db	115	;'s'
   726  00FFBF  25                 	db	37
   727  00FFC0  64                 	db	100	;'d'
   728  00FFC1  25                 	db	37
   729  00FFC2  73                 	db	115	;'s'
   730  00FFC3  25                 	db	37
   731  00FFC4  64                 	db	100	;'d'
   732  00FFC5  00                 	db	0
   733  00FFC6                     STR_14:
   734                           
   735                           ; BSR set to: 0
   736  00FFC6  44                 	db	68	;'D'
   737  00FFC7  45                 	db	69	;'E'
   738  00FFC8  50                 	db	80	;'P'
   739  00FFC9  4C                 	db	76	;'L'
   740  00FFCA  3A                 	db	58	;':'
   741  00FFCB  20                 	db	32
   742  00FFCC  00                 	db	0
   743  00FFCD                     STR_1:
   744                           
   745                           ; BSR set to: 0
   746  00FFCD  25                 	db	37
   747  00FFCE  73                 	db	115	;'s'
   748  00FFCF  25                 	db	37
   749  00FFD0  64                 	db	100	;'d'
   750  00FFD1  25                 	db	37
   751  00FFD2  73                 	db	115	;'s'
   752  00FFD3  00                 	db	0
   753  00FFD4                     STR_16:
   754                           
   755                           ; BSR set to: 0
   756  00FFD4  20                 	db	32
   757  00FFD5  43                 	db	67	;'C'
   758  00FFD6  4D                 	db	77	;'M'
   759  00FFD7  3A                 	db	58	;':'
   760  00FFD8  20                 	db	32
   761  00FFD9  00                 	db	0
   762  00FFDA                     STR_11:
   763                           
   764                           ; BSR set to: 0
   765  00FFDA  50                 	db	80	;'P'
   766  00FFDB  4F                 	db	79	;'O'
   767  00FFDC  4C                 	db	76	;'L'
   768  00FFDD  45                 	db	69	;'E'
   769  00FFDE  20                 	db	32
   770  00FFDF  00                 	db	0
   771  00FFE0                     STR_24:
   772                           
   773                           ; BSR set to: 0
   774  00FFE0  41                 	db	65	;'A'
   775  00FFE1  3A                 	db	58	;':'
   776  00FFE2  20                 	db	32
   777  00FFE3  25                 	db	37
   778  00FFE4  64                 	db	100	;'d'
   779  00FFE5  00                 	db	0
   780  00FFE6                     STR_23:
   781                           
   782                           ; BSR set to: 0
   783  00FFE6  42                 	db	66	;'B'
   784  00FFE7  3A                 	db	58	;':'
   785  00FFE8  20                 	db	32
   786  00FFE9  25                 	db	37
   787  00FFEA  64                 	db	100	;'d'
   788  00FFEB  00                 	db	0
   789  00FFEC                     STR_21:
   790                           
   791                           ; BSR set to: 0
   792  00FFEC  25                 	db	37
   793  00FFED  6C                 	db	108	;'l'
   794  00FFEE  75                 	db	117	;'u'
   795  00FFEF  00                 	db	0
   796  00FFF0                     STR_82:
   797                           
   798                           ; BSR set to: 0
   799  00FFF0  6C                 	db	108	;'l'
   800  00FFF1  58                 	db	88	;'X'
   801  00FFF2  00                 	db	0
   802  00FFF3                     STR_64:
   803                           
   804                           ; BSR set to: 0
   805  00FFF3  6C                 	db	108	;'l'
   806  00FFF4  64                 	db	100	;'d'
   807  00FFF5  00                 	db	0
   808  00FFF6                     STR_68:
   809                           
   810                           ; BSR set to: 0
   811  00FFF6  6C                 	db	108	;'l'
   812  00FFF7  69                 	db	105	;'i'
   813  00FFF8  00                 	db	0
   814  00FFF9                     STR_78:
   815                           
   816                           ; BSR set to: 0
   817  00FFF9  6C                 	db	108	;'l'
   818  00FFFA  78                 	db	120	;'x'
   819  00FFFB  00                 	db	0
   820  00FFFC                     STR_12:
   821                           
   822                           ; BSR set to: 0
   823  00FFFC  2F                 	db	47
   824  00FFFD  00                 	db	0
   825  0000                     
   826                           ; #config settings
   827  00FFFE  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           	psect	cinit
   830  00409E                     __pcinit:
   831                           	opt callstack 0
   832  00409E                     start_initialization:
   833                           	opt callstack 0
   834  00409E                     __initialization:
   835                           	opt callstack 0
   836                           
   837                           ; Initialize objects allocated to BANK1 (20 bytes)
   838                           ; load TBLPTR registers with __pidataBANK1
   839  00409E  0E3A               	movlw	low __pidataBANK1
   840  0040A0  6EF6               	movwf	tblptrl,c
   841  0040A2  0E4A               	movlw	high __pidataBANK1
   842  0040A4  6EF7               	movwf	tblptrh,c
   843  0040A6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   844  0040A8  6EF8               	movwf	tblptru,c
   845  0040AA  EE01  F093         	lfsr	0,__pdataBANK1
   846  0040AE  EE10 F014          	lfsr	1,20
   847  0040B2                     copy_data0:
   848  0040B2  0009               	tblrd		*+
   849  0040B4  CFF5 FFEE          	movff	tablat,postinc0
   850  0040B8  50E5               	movf	postdec1,w,c
   851  0040BA  50E1               	movf	fsr1l,w,c
   852  0040BC  E1FA               	bnz	copy_data0
   853                           
   854                           ; Initialize objects allocated to BANK0 (9 bytes)
   855                           ; load TBLPTR registers with __pidataBANK0
   856  0040BE  0E94               	movlw	low __pidataBANK0
   857  0040C0  6EF6               	movwf	tblptrl,c
   858  0040C2  0E4A               	movlw	high __pidataBANK0
   859  0040C4  6EF7               	movwf	tblptrh,c
   860  0040C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   861  0040C8  6EF8               	movwf	tblptru,c
   862  0040CA  EE00  F0EA         	lfsr	0,__pdataBANK0
   863  0040CE  EE10 F009          	lfsr	1,9
   864  0040D2                     copy_data1:
   865  0040D2  0009               	tblrd		*+
   866  0040D4  CFF5 FFEE          	movff	tablat,postinc0
   867  0040D8  50E5               	movf	postdec1,w,c
   868  0040DA  50E1               	movf	fsr1l,w,c
   869  0040DC  E1FA               	bnz	copy_data1
   870                           
   871                           ; Clear objects allocated to BIGRAM (480 bytes)
   872  0040DE  EE01  F0A7         	lfsr	0,__pbssBIGRAM
   873  0040E2  EE11 F0E0          	lfsr	1,480
   874  0040E6                     clear_0:
   875  0040E6  6AEE               	clrf	postinc0,c
   876  0040E8  50E5               	movf	postdec1,w,c
   877  0040EA  50E1               	movf	fsr1l,w,c
   878  0040EC  E1FC               	bnz	clear_0
   879  0040EE  50E2               	movf	fsr1h,w,c
   880  0040F0  E1FA               	bnz	clear_0
   881                           
   882                           ; Clear objects allocated to BANK1 (40 bytes)
   883  0040F2  EE01  F06B         	lfsr	0,__pbssBANK1
   884  0040F6  0E28               	movlw	40
   885  0040F8                     clear_1:
   886  0040F8  6AEE               	clrf	postinc0,c
   887  0040FA  06E8               	decf	wreg,f,c
   888  0040FC  E1FD               	bnz	clear_1
   889                           
   890                           ; Clear objects allocated to BANK0 (19 bytes)
   891  0040FE  EE00  F0D7         	lfsr	0,__pbssBANK0
   892  004102  0E13               	movlw	19
   893  004104                     clear_2:
   894  004104  6AEE               	clrf	postinc0,c
   895  004106  06E8               	decf	wreg,f,c
   896  004108  E1FD               	bnz	clear_2
   897                           
   898                           ; Clear objects allocated to COMRAM (6 bytes)
   899  00410A  6A79               	clrf	(__pbssCOMRAM+5)& (0+255),c
   900  00410C  6A78               	clrf	(__pbssCOMRAM+4)& (0+255),c
   901  00410E  6A77               	clrf	(__pbssCOMRAM+3)& (0+255),c
   902  004110  6A76               	clrf	(__pbssCOMRAM+2)& (0+255),c
   903  004112  6A75               	clrf	(__pbssCOMRAM+1)& (0+255),c
   904  004114  6A74               	clrf	__pbssCOMRAM& (0+255),c
   905  004116                     end_of_initialization:
   906                           	opt callstack 0
   907  004116                     __end_of__initialization:
   908                           	opt callstack 0
   909  004116  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   910  004118  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   911  00411A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   912  00411C  6EF8               	movwf	tblptru,c
   913  00411E  0100               	movlb	0
   914  004120  EFD8  F008         	goto	_main	;jump to C main() function
   915                           
   916                           	psect	bssCOMRAM
   917  000074                     __pbssCOMRAM:
   918                           	opt callstack 0
   919  000074                     _millisecondsMeasured:
   920                           	opt callstack 0
   921  000074                     	ds	4
   922  000078                     _flags:
   923                           	opt callstack 0
   924  000078                     	ds	2
   925                           
   926                           	psect	bssBANK0
   927  0000D7                     __pbssBANK0:
   928                           	opt callstack 0
   929  0000D7                     _motorBDistance:
   930                           	opt callstack 0
   931  0000D7                     	ds	4
   932  0000DB                     _motorADistance:
   933                           	opt callstack 0
   934  0000DB                     	ds	4
   935  0000DF                     _nout:
   936                           	opt callstack 0
   937  0000DF                     	ds	2
   938  0000E1                     _width:
   939                           	opt callstack 0
   940  0000E1                     	ds	2
   941  0000E3                     _prec:
   942                           	opt callstack 0
   943  0000E3                     	ds	2
   944  0000E5                     _encoderAInterruptLast:
   945                           	opt callstack 0
   946  0000E5                     	ds	1
   947  0000E6                     _encoderBInterruptLast:
   948                           	opt callstack 0
   949  0000E6                     	ds	1
   950  0000E7                     _bottomBreakBeamTriggeredChange:
   951                           	opt callstack 0
   952  0000E7                     	ds	1
   953  0000E8                     _topBreakBeamTriggeredChange:
   954                           	opt callstack 0
   955  0000E8                     	ds	1
   956  0000E9                     _keyPressed:
   957                           	opt callstack 0
   958  0000E9                     	ds	1
   959                           
   960                           	psect	dataBANK0
   961  0000EA                     __pdataBANK0:
   962                           	opt callstack 0
   963  0000EA                     stoa@F1144:
   964                           	opt callstack 0
   965  0000EA                     	ds	7
   966  0000F1                     _motorADirection:
   967                           	opt callstack 0
   968  0000F1                     	ds	1
   969  0000F2                     _motorBDirection:
   970                           	opt callstack 0
   971  0000F2                     	ds	1
   972                           
   973                           	psect	bssBANK1
   974  00016B                     __pbssBANK1:
   975                           	opt callstack 0
   976  00016B                     	ds	8
   977  000173                     _dbuf:
   978                           	opt callstack 0
   979  000173                     	ds	32
   980                           
   981                           	psect	dataBANK1
   982  000193                     __pdataBANK1:
   983                           	opt callstack 0
   984  000193                     mainEEPROMTest@F3511:
   985                           	opt callstack 0
   986  000193                     	ds	20
   987                           
   988                           	psect	bssBIGRAM
   989  0001A7                     __pbssBIGRAM:
   990                           	opt callstack 0
   991  0001A7                     _logs:
   992                           	opt callstack 0
   993  0001A7                     	ds	480
   994                           
   995                           	psect	cstackBANK1
   996  000100                     __pcstackBANK1:
   997                           	opt callstack 0
   998  000100                     doOperation@PIDData:
   999                           	opt callstack 0
  1000                           
  1001                           ; 8 bytes @ 0x0
  1002  000100                     	ds	8
  1003  000108                     doOperation@startedDistA:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x8
  1007  000108                     	ds	4
  1008  00010C                     doOperation@startedDistB:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 4 bytes @ 0xC
  1012  00010C                     	ds	18
  1013  00011E                     doOperation@rightRangeFinder:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x1E
  1017  00011E                     	ds	2
  1018  000120                     doOperation@accelerationDelay:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x20
  1022  000120                     	ds	2
  1023  000122                     doOperation@motorStartTime:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x22
  1027  000122                     	ds	4
  1028  000126                     doOperation@send:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x26
  1032  000126                     	ds	1
  1033  000127                     doOperation@badCount:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x27
  1037  000127                     	ds	2
  1038  000129                     doOperation@badCountBot:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x29
  1042  000129                     	ds	2
  1043  00012B                     doOperation@tiresOnPoleAfterOp:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x2B
  1047  00012B                     	ds	2
  1048  00012D                     doOperation@timeStart:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x2D
  1052  00012D                     	ds	4
  1053  000131                     doOperation@motorAStartDistance:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x31
  1057  000131                     	ds	4
  1058  000135                     doOperation@motorBStartDistance:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x35
  1062  000135                     	ds	4
  1063  000139                     doOperation@isDoneDrop:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x39
  1067  000139                     	ds	1
  1068  00013A                     doOperation@counted:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x3A
  1072  00013A                     	ds	2
  1073  00013C                     doOperation@distanceFromLastPoleCM:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x3C
  1077  00013C                     	ds	2
  1078  00013E                     doOperation@distanceToPole:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x3E
  1082  00013E                     	ds	4
  1083  000142                     doOperation@distanceFromLastPole:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x42
  1087  000142                     	ds	4
  1088  000146                     doOperation@totalTiresSupplied:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x46
  1092  000146                     	ds	2
  1093  000148                     doOperation@distanceToPoleCM:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x48
  1097  000148                     	ds	2
  1098  00014A                     doOperation@topLaserStatePrev:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x4A
  1102  00014A                     	ds	1
  1103  00014B                     doOperation@bottomLaserStatePrev:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x4B
  1107  00014B                     	ds	1
  1108  00014C                     doOperation@timeInOperation:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x4C
  1112  00014C                     	ds	4
  1113  000150                     doOperation@bottomLaserState:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x50
  1117  000150                     	ds	1
  1118  000151                     doOperation@currentOperationState:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x51
  1122  000151                     	ds	1
  1123  000152                     doOperation@tiresToDrop:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x52
  1127  000152                     	ds	2
  1128  000154                     doOperation@topLaserState:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x54
  1132  000154                     	ds	1
  1133  000155                     doOperation@tiresDeployedOnPole:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x55
  1137  000155                     	ds	2
  1138  000157                     doOperation@tiresOnPole:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x57
  1142  000157                     	ds	2
  1143  000159                     doOperation@poleNumber:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x59
  1147  000159                     	ds	2
  1148  00015B                     main@time:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 7 bytes @ 0x5B
  1152  00015B                     	ds	7
  1153  000162                     main@tick:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x62
  1157  000162                     	ds	4
  1158  000166                     main@keypress:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x66
  1162  000166                     	ds	1
  1163  000167                     main@i:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x67
  1167  000167                     	ds	1
  1168  000168                     main@currentLogState:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x68
  1172  000168                     	ds	1
  1173  000169                     main@currentRobotState:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x69
  1177  000169                     	ds	1
  1178  00016A                     main@keyValue:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x6A
  1182  00016A                     	ds	1
  1183                           
  1184                           	psect	cstackBANK0
  1185  000080                     __pcstackBANK0:
  1186                           	opt callstack 0
  1187  000080                     set_pwm_duty_cycle@max_duty_val:
  1188                           	opt callstack 0
  1189  000080                     vfpfcnvrt@cp:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x0
  1193  000080                     	ds	2
  1194  000082                     set_pwm_duty_cycle@duty_valA:
  1195                           	opt callstack 0
  1196  000082                     vfpfcnvrt@done:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x2
  1200  000082                     	ds	2
  1201  000084                     set_pwm_duty_cycle@duty_valB:
  1202                           	opt callstack 0
  1203  000084                     _vfpfcnvrt$1516:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x4
  1207  000084                     	ds	2
  1208  000086                     _set_pwm_duty_cycle$2423:
  1209                           	opt callstack 0
  1210  000086                     vfpfcnvrt@ll:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 8 bytes @ 0x6
  1214  000086                     	ds	4
  1215  00008A                     setMotorSpeeds@motorASpeed:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0xA
  1219  00008A                     	ds	2
  1220  00008C                     setMotorSpeeds@Aforward:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 1 bytes @ 0xC
  1224  00008C                     	ds	1
  1225  00008D                     setMotorSpeeds@Bforward:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 1 bytes @ 0xD
  1229  00008D                     	ds	1
  1230  00008E                     vfpfcnvrt@c:
  1231                           	opt callstack 0
  1232  00008E                     setMotorSpeeds@motorBSpeed:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0xE
  1236  00008E                     	ds	1
  1237  00008F                     vfpfcnvrt@llu:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 8 bytes @ 0xF
  1241  00008F                     	ds	1
  1242  000090                     _setMotorSpeeds$2424:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246  000090                     	ds	4
  1247  000094                     _setMotorSpeeds$2425:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x14
  1251  000094                     	ds	3
  1252  000097                     ?_vfprintf:
  1253                           	opt callstack 0
  1254  000097                     vfprintf@fp:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x17
  1258  000097                     	ds	1
  1259  000098                     ?_tirePositioning:
  1260                           	opt callstack 0
  1261  000098                     errorCorrectedMove@goalSpeed:
  1262                           	opt callstack 0
  1263  000098                     tirePositioning@maxOperationTime:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x18
  1267  000098                     	ds	1
  1268  000099                     vfprintf@fmt:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x19
  1272  000099                     	ds	1
  1273  00009A                     errorCorrectedMove@turnRatio:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x1A
  1277  00009A                     	ds	1
  1278  00009B                     vfprintf@ap:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x1B
  1282  00009B                     	ds	1
  1283  00009C                     ??_tirePositioning:
  1284                           
  1285                           ; 1 bytes @ 0x1C
  1286  00009C                     	ds	1
  1287  00009D                     ?_printf:
  1288                           	opt callstack 0
  1289  00009D                     printf@fmt:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x1D
  1293  00009D                     	ds	1
  1294  00009E                     errorCorrectedMove@motorAStartDistance:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x1E
  1298  00009E                     	ds	3
  1299  0000A1                     tirePositioning@startDistanceTop:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x21
  1303  0000A1                     	ds	1
  1304  0000A2                     errorCorrectedMove@motorBStartDistance:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x22
  1308  0000A2                     	ds	3
  1309  0000A5                     tirePositioning@startDistanceBottom:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x25
  1313  0000A5                     	ds	1
  1314  0000A6                     errorCorrectedMove@correctionConstant:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x26
  1318  0000A6                     	ds	1
  1319  0000A7                     doDisplayLog@logNumber:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x27
  1323  0000A7                     	ds	2
  1324  0000A9                     tirePositioning@startDistance:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x29
  1328  0000A9                     	ds	1
  1329  0000AA                     errorCorrectedMove@error:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x2A
  1333  0000AA                     	ds	3
  1334  0000AD                     tirePositioning@topPreviousState:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x2D
  1338  0000AD                     	ds	1
  1339  0000AE                     errorCorrectedMove@ASpeed:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x2E
  1343  0000AE                     	ds	1
  1344  0000AF                     tirePositioning@bottomPreviousState:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x2F
  1348  0000AF                     	ds	1
  1349  0000B0                     errorCorrectedMove@BSpeed:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x30
  1353  0000B0                     	ds	1
  1354  0000B1                     tirePositioning@distanceRecordedTop:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x31
  1358  0000B1                     	ds	1
  1359  0000B2                     opErrorCorrectionDegrees@goalSpeed:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x32
  1363  0000B2                     	ds	2
  1364  0000B4                     opErrorCorrectionDegrees@turnRatio:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x34
  1368  0000B4                     	ds	1
  1369  0000B5                     tirePositioning@distanceRecordedBottom:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 4 bytes @ 0x35
  1373  0000B5                     	ds	1
  1374  0000B6                     opErrorCorrectionDegrees@correctionConstant:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x36
  1378  0000B6                     	ds	3
  1379  0000B9                     tirePositioning@topBreakbeam:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x39
  1383  0000B9                     	ds	1
  1384  0000BA                     opErrorCorrectionDegrees@distanceDegrees:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 4 bytes @ 0x3A
  1388  0000BA                     	ds	1
  1389  0000BB                     tirePositioning@bottomBreakbeam:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x3B
  1393  0000BB                     	ds	3
  1394  0000BE                     opErrorCorrectionDegrees@maxOperationTime:
  1395                           	opt callstack 0
  1396                           
  1397                           ; 4 bytes @ 0x3E
  1398  0000BE                     	ds	4
  1399  0000C2                     ??_opErrorCorrectionDegrees:
  1400                           
  1401                           ; 1 bytes @ 0x42
  1402  0000C2                     	ds	5
  1403  0000C7                     opErrorCorrectionDegrees@motorBStartDistance:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x47
  1407  0000C7                     	ds	4
  1408  0000CB                     _opErrorCorrectionDegrees$2427:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x4B
  1412  0000CB                     	ds	4
  1413  0000CF                     opErrorCorrectionDegrees@motorAStartDistance:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x4F
  1417  0000CF                     	ds	4
  1418  0000D3                     ??_doOperation:
  1419                           
  1420                           ; 1 bytes @ 0x53
  1421  0000D3                     	ds	4
  1422                           
  1423                           	psect	cstackCOMRAM
  1424  000001                     __pcstackCOMRAM:
  1425                           	opt callstack 0
  1426  000001                     ??_updateMotorBEncoder:
  1427  000001                     ??_updateMotorAEncoder:
  1428  000001                     
  1429                           ; 1 bytes @ 0x0
  1430  000001                     	ds	1
  1431  000002                     updateMotorBEncoder@interruptPinState:
  1432                           	opt callstack 0
  1433  000002                     updateMotorAEncoder@interruptPinState:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x1
  1437  000002                     	ds	2
  1438  000004                     updateMotorBEncoder@directionPin:
  1439                           	opt callstack 0
  1440  000004                     updateMotorAEncoder@directionPin:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x3
  1444  000004                     	ds	2
  1445  000006                     ??_I2C_Master_Wait:
  1446  000006                     ?_strlen:
  1447                           	opt callstack 0
  1448  000006                     ?_isupper:
  1449                           	opt callstack 0
  1450  000006                     ?_isalpha:
  1451                           	opt callstack 0
  1452  000006                     ?_isdigit:
  1453                           	opt callstack 0
  1454  000006                     ?_strncmp:
  1455                           	opt callstack 0
  1456  000006                     ?_isspace:
  1457                           	opt callstack 0
  1458  000006                     ?_islower:
  1459                           	opt callstack 0
  1460  000006                     ?___wmul:
  1461                           	opt callstack 0
  1462  000006                     ?___awmod:
  1463                           	opt callstack 0
  1464  000006                     ?___lldiv:
  1465                           	opt callstack 0
  1466  000006                     ?___aldiv:
  1467                           	opt callstack 0
  1468  000006                     ?___llmod:
  1469                           	opt callstack 0
  1470  000006                     ?___xxtofl:
  1471                           	opt callstack 0
  1472  000006                     ?___aodiv:
  1473                           	opt callstack 0
  1474  000006                     ?___aomod:
  1475                           	opt callstack 0
  1476  000006                     ?___lodiv:
  1477                           	opt callstack 0
  1478  000006                     ?___lomod:
  1479                           	opt callstack 0
  1480  000006                     pulse_e@interruptState:
  1481                           	opt callstack 0
  1482  000006                     opDelay@millis:
  1483                           	opt callstack 0
  1484  000006                     ee_write_byte@_data:
  1485                           	opt callstack 0
  1486  000006                     ee_read_byte@_data:
  1487                           	opt callstack 0
  1488  000006                     ___wmul@multiplier:
  1489                           	opt callstack 0
  1490  000006                     ___awmod@dividend:
  1491                           	opt callstack 0
  1492  000006                     isalpha@c:
  1493                           	opt callstack 0
  1494  000006                     isdigit@c:
  1495                           	opt callstack 0
  1496  000006                     isspace@c:
  1497                           	opt callstack 0
  1498  000006                     isupper@c:
  1499                           	opt callstack 0
  1500  000006                     strlen@s:
  1501                           	opt callstack 0
  1502  000006                     strncmp@_l:
  1503                           	opt callstack 0
  1504  000006                     islower@c:
  1505                           	opt callstack 0
  1506  000006                     ___lldiv@dividend:
  1507                           	opt callstack 0
  1508  000006                     ___aldiv@dividend:
  1509                           	opt callstack 0
  1510  000006                     ___llmod@dividend:
  1511                           	opt callstack 0
  1512  000006                     ___xxtofl@val:
  1513                           	opt callstack 0
  1514  000006                     ___aodiv@dividend:
  1515                           	opt callstack 0
  1516  000006                     ___aomod@dividend:
  1517                           	opt callstack 0
  1518  000006                     ___lodiv@dividend:
  1519                           	opt callstack 0
  1520  000006                     ___lomod@dividend:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 8 bytes @ 0x5
  1524  000006                     	ds	1
  1525  000007                     send_nibble@data:
  1526                           	opt callstack 0
  1527  000007                     I2C_Master_Read@ackBit:
  1528                           	opt callstack 0
  1529  000007                     I2C_Master_Write@byteToWrite:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x6
  1533  000007                     	ds	1
  1534  000008                     ??_isupper:
  1535  000008                     ??_isalpha:
  1536  000008                     ??_isdigit:
  1537  000008                     ??_isspace:
  1538  000008                     ??_islower:
  1539  000008                     ee_write_byte@address:
  1540                           	opt callstack 0
  1541  000008                     ee_read_byte@address:
  1542                           	opt callstack 0
  1543  000008                     send_byte@data:
  1544                           	opt callstack 0
  1545  000008                     I2C_Master_Read@receivedByte:
  1546                           	opt callstack 0
  1547  000008                     ___wmul@multiplicand:
  1548                           	opt callstack 0
  1549  000008                     ___awmod@divisor:
  1550                           	opt callstack 0
  1551  000008                     strlen@a:
  1552                           	opt callstack 0
  1553  000008                     strncmp@_r:
  1554                           	opt callstack 0
  1555  000008                     opDelay@maxOperationTime:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 4 bytes @ 0x7
  1559  000008                     	ds	1
  1560  000009                     requestIsTireDropDone@data:
  1561                           	opt callstack 0
  1562  000009                     lcdInst@data:
  1563                           	opt callstack 0
  1564  000009                     putch@data:
  1565                           	opt callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x8
  1568  000009                     	ds	1
  1569  00000A                     ??_initLCD:
  1570  00000A                     ??___xxtofl:
  1571  00000A                     ___awmod@counter:
  1572                           	opt callstack 0
  1573  00000A                     ___wmul@product:
  1574                           	opt callstack 0
  1575  00000A                     fputc@c:
  1576                           	opt callstack 0
  1577  00000A                     strncmp@n:
  1578                           	opt callstack 0
  1579  00000A                     ___lldiv@divisor:
  1580                           	opt callstack 0
  1581  00000A                     ___aldiv@divisor:
  1582                           	opt callstack 0
  1583  00000A                     ___llmod@divisor:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x9
  1587  00000A                     	ds	1
  1588  00000B                     ___awmod@sign:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 1 bytes @ 0xA
  1592  00000B                     	ds	1
  1593  00000C                     ??_strncmp:
  1594  00000C                     ??_opDelay:
  1595  00000C                     ??_saveLogs:
  1596  00000C                     ??_readLogs:
  1597  00000C                     ?_toupper:
  1598                           	opt callstack 0
  1599  00000C                     _isspace$2027:
  1600                           	opt callstack 0
  1601  00000C                     fputc@fp:
  1602                           	opt callstack 0
  1603  00000C                     toupper@c:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0xB
  1607  00000C                     	ds	1
  1608  00000D                     ?_atoi:
  1609                           	opt callstack 0
  1610  00000D                     atoi@s:
  1611                           	opt callstack 0
  1612  00000D                     strncmp@l:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 2 bytes @ 0xC
  1616  00000D                     	ds	1
  1617  00000E                     ??_fputc:
  1618  00000E                     ??_toupper:
  1619  00000E                     saveLogs@b:
  1620                           	opt callstack 0
  1621  00000E                     readLogs@b:
  1622                           	opt callstack 0
  1623  00000E                     ___aldiv@counter:
  1624                           	opt callstack 0
  1625  00000E                     ___llmod@counter:
  1626                           	opt callstack 0
  1627  00000E                     ___xxtofl@sign:
  1628                           	opt callstack 0
  1629  00000E                     ___lldiv@quotient:
  1630                           	opt callstack 0
  1631  00000E                     ___aodiv@divisor:
  1632                           	opt callstack 0
  1633  00000E                     ___aomod@divisor:
  1634                           	opt callstack 0
  1635  00000E                     ___lodiv@divisor:
  1636                           	opt callstack 0
  1637  00000E                     ___lomod@divisor:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 8 bytes @ 0xD
  1641  00000E                     	ds	1
  1642  00000F                     ??_atoi:
  1643  00000F                     saveLogs@a:
  1644                           	opt callstack 0
  1645  00000F                     ___aldiv@sign:
  1646                           	opt callstack 0
  1647  00000F                     ___xxtofl@exp:
  1648                           	opt callstack 0
  1649  00000F                     readLogs@bigNum:
  1650                           	opt callstack 0
  1651  00000F                     strncmp@r:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xE
  1655  00000F                     	ds	1
  1656  000010                     saveLogs@bigNum:
  1657                           	opt callstack 0
  1658  000010                     ___aldiv@quotient:
  1659                           	opt callstack 0
  1660  000010                     ___xxtofl@arg:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 4 bytes @ 0xF
  1664  000010                     	ds	1
  1665  000011                     readLogs@i:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x10
  1669  000011                     	ds	1
  1670  000012                     ___lldiv@counter:
  1671                           	opt callstack 0
  1672  000012                     saveLogs@i:
  1673                           	opt callstack 0
  1674  000012                     _toupper$2097:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x11
  1678  000012                     	ds	1
  1679  000013                     ?_stoa:
  1680                           	opt callstack 0
  1681  000013                     readLogs@x:
  1682                           	opt callstack 0
  1683  000013                     stoa@fp:
  1684                           	opt callstack 0
  1685  000013                     atoi@neg:
  1686                           	opt callstack 0
  1687  000013                     fputs@s:
  1688                           	opt callstack 0
  1689  000013                     I2C_Master_Init@clockFreq:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x12
  1693  000013                     	ds	1
  1694  000014                     ?___fldiv:
  1695                           	opt callstack 0
  1696  000014                     saveLogs@x:
  1697                           	opt callstack 0
  1698  000014                     readLogs@a:
  1699                           	opt callstack 0
  1700  000014                     opDelay@startTime:
  1701                           	opt callstack 0
  1702  000014                     ___flge@ff1:
  1703                           	opt callstack 0
  1704  000014                     ___fldiv@b:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 4 bytes @ 0x13
  1708  000014                     	ds	1
  1709  000015                     saveLogs@j:
  1710                           	opt callstack 0
  1711  000015                     readLogs@j:
  1712                           	opt callstack 0
  1713  000015                     stoa@s:
  1714                           	opt callstack 0
  1715  000015                     _atoi$2000:
  1716                           	opt callstack 0
  1717  000015                     fputs@fp:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x14
  1721  000015                     	ds	1
  1722  000016                     ___aodiv@counter:
  1723                           	opt callstack 0
  1724  000016                     ___aomod@counter:
  1725                           	opt callstack 0
  1726  000016                     ___lomod@counter:
  1727                           	opt callstack 0
  1728  000016                     ___lodiv@quotient:
  1729                           	opt callstack 0
  1730                           
  1731                           ; 8 bytes @ 0x15
  1732  000016                     	ds	1
  1733  000017                     ??_I2C_Master_Init:
  1734  000017                     ??_stoa:
  1735  000017                     ___aodiv@sign:
  1736                           	opt callstack 0
  1737  000017                     ___aomod@sign:
  1738                           	opt callstack 0
  1739  000017                     fputs@c:
  1740                           	opt callstack 0
  1741  000017                     _atoi$2002:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 2 bytes @ 0x16
  1745  000017                     	ds	1
  1746  000018                     ?_abs:
  1747                           	opt callstack 0
  1748  000018                     abs@a:
  1749                           	opt callstack 0
  1750  000018                     fputs@i:
  1751                           	opt callstack 0
  1752  000018                     ___flge@ff2:
  1753                           	opt callstack 0
  1754  000018                     ___fldiv@a:
  1755                           	opt callstack 0
  1756  000018                     stoa@nuls:
  1757                           	opt callstack 0
  1758  000018                     ___aodiv@quotient:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 8 bytes @ 0x17
  1762  000018                     	ds	1
  1763  000019                     _atoi$2001:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x18
  1767  000019                     	ds	1
  1768  00001A                     ??_abs:
  1769  00001A                     ?_pad:
  1770                           	opt callstack 0
  1771  00001A                     pad@fp:
  1772                           	opt callstack 0
  1773  00001A                     atoi@n:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x19
  1777  00001A                     	ds	1
  1778  00001B                     replaceOldLog@i:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x1A
  1782  00001B                     	ds	1
  1783  00001C                     ??___fldiv:
  1784  00001C                     ??___flge:
  1785  00001C                     pad@buf:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x1B
  1789  00001C                     	ds	1
  1790  00001D                     replaceOldLog@i_1097:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 2 bytes @ 0x1C
  1794  00001D                     	ds	1
  1795  00001E                     ___lodiv@counter:
  1796                           	opt callstack 0
  1797  00001E                     pad@p:
  1798                           	opt callstack 0
  1799                           
  1800                           ; 2 bytes @ 0x1D
  1801  00001E                     	ds	1
  1802  00001F                     replaceOldLog@i_1098:
  1803                           	opt callstack 0
  1804  00001F                     stoa@i:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x1E
  1808  00001F                     	ds	1
  1809  000020                     ??_pad:
  1810  000020                     ___fldiv@rem:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 4 bytes @ 0x1F
  1814  000020                     	ds	1
  1815  000021                     replaceOldLog@i_1099:
  1816                           	opt callstack 0
  1817  000021                     pad@i:
  1818                           	opt callstack 0
  1819  000021                     stoa@w:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x20
  1823  000021                     	ds	2
  1824  000023                     pad@w:
  1825                           	opt callstack 0
  1826  000023                     stoa@cp:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x22
  1830  000023                     	ds	1
  1831  000024                     ___fldiv@sign:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x23
  1835  000024                     	ds	1
  1836  000025                     ?_ctoa:
  1837                           	opt callstack 0
  1838  000025                     ?_dtoa:
  1839                           	opt callstack 0
  1840  000025                     ?_utoa:
  1841                           	opt callstack 0
  1842  000025                     ?_xtoa:
  1843                           	opt callstack 0
  1844  000025                     ctoa@fp:
  1845                           	opt callstack 0
  1846  000025                     dtoa@fp:
  1847                           	opt callstack 0
  1848  000025                     stoa@p:
  1849                           	opt callstack 0
  1850  000025                     utoa@fp:
  1851                           	opt callstack 0
  1852  000025                     xtoa@fp:
  1853                           	opt callstack 0
  1854  000025                     ___fldiv@new_exp:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x24
  1858  000025                     	ds	2
  1859  000027                     ctoa@c:
  1860                           	opt callstack 0
  1861  000027                     stoa@l:
  1862                           	opt callstack 0
  1863  000027                     ___fldiv@grs:
  1864                           	opt callstack 0
  1865  000027                     dtoa@d:
  1866                           	opt callstack 0
  1867  000027                     utoa@d:
  1868                           	opt callstack 0
  1869  000027                     xtoa@d:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 8 bytes @ 0x26
  1873  000027                     	ds	1
  1874  000028                     ctoa@w:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x27
  1878  000028                     	ds	3
  1879  00002B                     ___fldiv@bexp:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x2A
  1883  00002B                     	ds	1
  1884  00002C                     ___fldiv@aexp:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x2B
  1888  00002C                     	ds	1
  1889  00002D                     ?___flmul:
  1890                           	opt callstack 0
  1891  00002D                     ___flmul@b:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 4 bytes @ 0x2C
  1895  00002D                     	ds	2
  1896  00002F                     ??_dtoa:
  1897  00002F                     ??_utoa:
  1898  00002F                     xtoa@x:
  1899                           	opt callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x2E
  1902  00002F                     	ds	1
  1903  000030                     ??_xtoa:
  1904                           
  1905                           ; 1 bytes @ 0x2F
  1906  000030                     	ds	1
  1907  000031                     ___flmul@a:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 4 bytes @ 0x30
  1911  000031                     	ds	4
  1912  000035                     ??___flmul:
  1913                           
  1914                           ; 1 bytes @ 0x34
  1915  000035                     	ds	2
  1916  000037                     _dtoa$1473:
  1917                           	opt callstack 0
  1918  000037                     utoa@p:
  1919                           	opt callstack 0
  1920                           
  1921                           ; 2 bytes @ 0x36
  1922  000037                     	ds	1
  1923  000038                     _xtoa$1501:
  1924                           	opt callstack 0
  1925                           
  1926                           ; 2 bytes @ 0x37
  1927  000038                     	ds	1
  1928  000039                     ___flmul@sign:
  1929                           	opt callstack 0
  1930  000039                     dtoa@p:
  1931                           	opt callstack 0
  1932  000039                     utoa@w:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x38
  1936  000039                     	ds	1
  1937  00003A                     ___flmul@aexp:
  1938                           	opt callstack 0
  1939  00003A                     _xtoa$1502:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 2 bytes @ 0x39
  1943  00003A                     	ds	1
  1944  00003B                     dtoa@w:
  1945                           	opt callstack 0
  1946  00003B                     ___flmul@grs:
  1947                           	opt callstack 0
  1948  00003B                     utoa@n:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 8 bytes @ 0x3A
  1952  00003B                     	ds	1
  1953  00003C                     xtoa@p:
  1954                           	opt callstack 0
  1955                           
  1956                           ; 2 bytes @ 0x3B
  1957  00003C                     	ds	1
  1958  00003D                     dtoa@s:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 2 bytes @ 0x3C
  1962  00003D                     	ds	1
  1963  00003E                     xtoa@w:
  1964                           	opt callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x3D
  1967  00003E                     	ds	1
  1968  00003F                     ___flmul@bexp:
  1969                           	opt callstack 0
  1970  00003F                     dtoa@n:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 8 bytes @ 0x3E
  1974  00003F                     	ds	1
  1975  000040                     ___flmul@prod:
  1976                           	opt callstack 0
  1977  000040                     xtoa@n:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 8 bytes @ 0x3F
  1981  000040                     	ds	3
  1982  000043                     utoa@i:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x42
  1986  000043                     	ds	1
  1987  000044                     ___flmul@temp:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x43
  1991  000044                     	ds	2
  1992  000046                     ?___fladd:
  1993                           	opt callstack 0
  1994  000046                     ___fladd@b:
  1995                           	opt callstack 0
  1996                           
  1997                           ; 4 bytes @ 0x45
  1998  000046                     	ds	1
  1999  000047                     dtoa@i:
  2000                           	opt callstack 0
  2001                           
  2002                           ; 2 bytes @ 0x46
  2003  000047                     	ds	1
  2004  000048                     xtoa@i:
  2005                           	opt callstack 0
  2006                           
  2007                           ; 2 bytes @ 0x47
  2008  000048                     	ds	2
  2009  00004A                     xtoa@c:
  2010                           	opt callstack 0
  2011  00004A                     ___fladd@a:
  2012                           	opt callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x49
  2015  00004A                     	ds	2
  2016  00004C                     ?_vfpfcnvrt:
  2017                           	opt callstack 0
  2018  00004C                     vfpfcnvrt@fp:
  2019                           	opt callstack 0
  2020                           
  2021                           ; 2 bytes @ 0x4B
  2022  00004C                     	ds	2
  2023  00004E                     ??___fladd:
  2024  00004E                     vfpfcnvrt@fmt:
  2025                           	opt callstack 0
  2026                           
  2027                           ; 2 bytes @ 0x4D
  2028  00004E                     	ds	2
  2029  000050                     vfpfcnvrt@ap:
  2030                           	opt callstack 0
  2031                           
  2032                           ; 2 bytes @ 0x4F
  2033  000050                     	ds	2
  2034  000052                     ??_vfpfcnvrt:
  2035  000052                     ___fladd@signs:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 1 bytes @ 0x51
  2039  000052                     	ds	1
  2040  000053                     ___fladd@aexp:
  2041                           	opt callstack 0
  2042                           
  2043                           ; 1 bytes @ 0x52
  2044  000053                     	ds	1
  2045  000054                     ___fladd@bexp:
  2046                           	opt callstack 0
  2047                           
  2048                           ; 1 bytes @ 0x53
  2049  000054                     	ds	1
  2050  000055                     ___fladd@grs:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 1 bytes @ 0x54
  2054  000055                     	ds	1
  2055  000056                     ?___flsub:
  2056                           	opt callstack 0
  2057  000056                     ___flsub@b:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 4 bytes @ 0x55
  2061  000056                     	ds	4
  2062  00005A                     ___flsub@a:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 4 bytes @ 0x59
  2066  00005A                     	ds	4
  2067  00005E                     ?___fltol:
  2068                           	opt callstack 0
  2069  00005E                     ___fltol@f1:
  2070                           	opt callstack 0
  2071                           
  2072                           ; 4 bytes @ 0x5D
  2073  00005E                     	ds	2
  2074  000060                     vfprintf@cfmt:
  2075                           	opt callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x5F
  2078  000060                     	ds	2
  2079  000062                     ??___fltol:
  2080                           
  2081                           ; 1 bytes @ 0x61
  2082  000062                     	ds	2
  2083  000064                     printf@ap:
  2084                           	opt callstack 0
  2085                           
  2086                           ; 2 bytes @ 0x63
  2087  000064                     	ds	2
  2088  000066                     ??_doDisplayLog:
  2089  000066                     ___fltol@sign1:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x65
  2093  000066                     	ds	1
  2094  000067                     ___fltol@exp1:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x66
  2098  000067                     	ds	1
  2099  000068                     set_pwm_duty_cycle@dutyA:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 4 bytes @ 0x67
  2103  000068                     	ds	1
  2104  000069                     doDisplayLog@keypress:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x68
  2108  000069                     	ds	1
  2109  00006A                     doDisplayLog@currentDisplayState:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x69
  2113  00006A                     	ds	1
  2114  00006B                     doDisplayLog@keyValue:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x6A
  2118  00006B                     	ds	1
  2119  00006C                     _doDisplayLog$2422:
  2120                           	opt callstack 0
  2121  00006C                     set_pwm_duty_cycle@dutyB:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 4 bytes @ 0x6B
  2125  00006C                     	ds	2
  2126  00006E                     doDisplayLog@currentPole:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x6D
  2130  00006E                     	ds	2
  2131  000070                     ??_set_pwm_duty_cycle:
  2132                           
  2133                           ; 1 bytes @ 0x6F
  2134  000070                     	ds	2
  2135  000072                     ??_main:
  2136                           
  2137                           ; 1 bytes @ 0x71
  2138  000072                     	ds	2
  2139                           
  2140 ;;
  2141 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2142 ;;
  2143 ;; *************** function _main *****************
  2144 ;; Defined at:
  2145 ;;		line 1380 in file "main.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  i               1  103[BANK1 ] unsigned char 
  2150 ;;  keyValue        1  106[BANK1 ] unsigned char 
  2151 ;;  keypress        1  102[BANK1 ] unsigned char 
  2152 ;;  time            7   91[BANK1 ] unsigned char [7]
  2153 ;;  tick            4   98[BANK1 ] unsigned long 
  2154 ;;  currentRobot    1  105[BANK1 ] enum E3485
  2155 ;;  currentLogSt    1  104[BANK1 ] enum E3492
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         2       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:       18 bytes
  2170 ;; Hardware stack levels required when called:   14
  2171 ;; This function calls:
  2172 ;;		_I2C_Master_Read
  2173 ;;		_I2C_Master_Start
  2174 ;;		_I2C_Master_Stop
  2175 ;;		_I2C_Master_Write
  2176 ;;		___llmod
  2177 ;;		_doDisplayLog
  2178 ;;		_doOperation
  2179 ;;		_lcdInst
  2180 ;;		_printf
  2181 ;;		_readLogs
  2182 ;;		_replaceOldLog
  2183 ;;		_robotInit
  2184 ;;		_sendArduinoStandbyClampRequest
  2185 ;; This function is called by:
  2186 ;;		Startup code after reset
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text0
  2191  0011B0                     __ptext0:
  2192                           	opt callstack 0
  2193  0011B0                     _main:
  2194                           	opt callstack 17
  2195                           
  2196                           ;main.c: 1383:     robotInit();
  2197                           
  2198                           ;incstack = 0
  2199  0011B0  EC1D  F023         	call	_robotInit	;wreg free
  2200                           
  2201                           ;main.c: 1384:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2202  0011B4  0E01               	movlw	1
  2203  0011B6  EC3F  F025         	call	_lcdInst
  2204  0011BA  0E11               	movlw	17
  2205  0011BC  6E72               	movwf	??_main& (0+255),c
  2206  0011BE  0E3A               	movlw	58
  2207  0011C0                     u12567:
  2208  0011C0  2EE8               	decfsz	wreg,f,c
  2209  0011C2  D7FE               	bra	u12567
  2210  0011C4  2E72               	decfsz	??_main& (0+255),f,c
  2211  0011C6  D7FC               	bra	u12567
  2212  0011C8  D000               	nop2	
  2213                           
  2214                           ;main.c: 1385:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2215  0011CA  0E80               	movlw	128
  2216  0011CC  EC3F  F025         	call	_lcdInst
  2217  0011D0  0E07               	movlw	7
  2218  0011D2  6E72               	movwf	??_main& (0+255),c
  2219  0011D4  0E7D               	movlw	125
  2220  0011D6                     u12577:
  2221  0011D6  2EE8               	decfsz	wreg,f,c
  2222  0011D8  D7FE               	bra	u12577
  2223  0011DA  2E72               	decfsz	??_main& (0+255),f,c
  2224  0011DC  D7FC               	bra	u12577
  2225  0011DE  F000               	nop	
  2226                           
  2227                           ;main.c: 1403:     readLogs();
  2228  0011E0  EC0B  F01C         	call	_readLogs	;wreg free
  2229                           
  2230                           ;main.c: 1416:     robotInit();
  2231  0011E4  EC1D  F023         	call	_robotInit	;wreg free
  2232                           
  2233                           ;main.c: 1418:     unsigned char time[7];;main.c: 1425:     enum robotStates currentRobo
      +                          tState = standby;
  2234  0011E8  0E00               	movlw	0
  2235  0011EA  0101               	movlb	1	; () banked
  2236  0011EC  6F69               	movwf	main@currentRobotState& (0+255),b
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;main.c: 1427:     enum logStates currentLogState = one;
  2240  0011EE  0E01               	movlw	1
  2241  0011F0  6F68               	movwf	main@currentLogState& (0+255),b
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;main.c: 1431:     unsigned long tick = 0ul;
  2245  0011F2  0E00               	movlw	0
  2246  0011F4  6F62               	movwf	main@tick& (0+255),b
  2247  0011F6  0E00               	movlw	0
  2248  0011F8  6F63               	movwf	(main@tick+1)& (0+255),b
  2249  0011FA  0E00               	movlw	0
  2250  0011FC  6F64               	movwf	(main@tick+2)& (0+255),b
  2251  0011FE  0E00               	movlw	0
  2252  001200  6F65               	movwf	(main@tick+3)& (0+255),b
  2253  001202                     l10827:
  2254                           
  2255                           ;main.c: 1435:         LATAbits.LATA5 = 0;
  2256  001202  9A89               	bcf	3977,5,c	;volatile
  2257                           
  2258                           ;main.c: 1436:         LATBbits.LATB3 = 1;
  2259  001204  868A               	bsf	3978,3,c	;volatile
  2260                           
  2261                           ;main.c: 1438:             if (tick%10ul==0){
  2262  001206  C162  F006         	movff	main@tick,___llmod@dividend
  2263  00120A  C163  F007         	movff	main@tick+1,___llmod@dividend+1
  2264  00120E  C164  F008         	movff	main@tick+2,___llmod@dividend+2
  2265  001212  C165  F009         	movff	main@tick+3,___llmod@dividend+3
  2266  001216  0E0A               	movlw	10
  2267  001218  6E0A               	movwf	___llmod@divisor,c
  2268  00121A  0E00               	movlw	0
  2269  00121C  6E0B               	movwf	___llmod@divisor+1,c
  2270  00121E  0E00               	movlw	0
  2271  001220  6E0C               	movwf	___llmod@divisor+2,c
  2272  001222  0E00               	movlw	0
  2273  001224  6E0D               	movwf	___llmod@divisor+3,c
  2274  001226  EC76  F021         	call	___llmod	;wreg free
  2275  00122A  5006               	movf	?___llmod,w,c
  2276  00122C  1007               	iorwf	?___llmod+1,w,c
  2277  00122E  1008               	iorwf	?___llmod+2,w,c
  2278  001230  1009               	iorwf	?___llmod+3,w,c
  2279  001232  A4D8               	btfss	status,2,c
  2280  001234  D14F               	goto	l10937
  2281                           
  2282                           ;main.c: 1440:                 I2C_Master_Start();
  2283  001236  EC53  F025         	call	_I2C_Master_Start	;wreg free
  2284                           
  2285                           ;main.c: 1441:                 I2C_Master_Write(0b11010000);
  2286  00123A  0E00               	movlw	0
  2287  00123C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2288  00123E  0ED0               	movlw	208
  2289  001240  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2290  001242  EC45  F025         	call	_I2C_Master_Write	;wreg free
  2291                           
  2292                           ;main.c: 1442:                 I2C_Master_Write(0x00);
  2293  001246  0E00               	movlw	0
  2294  001248  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2295  00124A  0E00               	movlw	0
  2296  00124C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2297  00124E  EC45  F025         	call	_I2C_Master_Write	;wreg free
  2298                           
  2299                           ;main.c: 1443:                 I2C_Master_Stop();
  2300  001252  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  2301                           
  2302                           ;main.c: 1446:                 I2C_Master_Start();
  2303  001256  EC53  F025         	call	_I2C_Master_Start	;wreg free
  2304                           
  2305                           ;main.c: 1447:                 I2C_Master_Write(0b11010001);
  2306  00125A  0E00               	movlw	0
  2307  00125C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2308  00125E  0ED1               	movlw	209
  2309  001260  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2310  001262  EC45  F025         	call	_I2C_Master_Write	;wreg free
  2311                           
  2312                           ;main.c: 1448:                 for(unsigned char i = 0; i < 6; i++){
  2313  001266  0E00               	movlw	0
  2314  001268  0101               	movlb	1	; () banked
  2315  00126A  6F67               	movwf	main@i& (0+255),b
  2316  00126C                     l10841:
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;main.c: 1449:                     time[i] = I2C_Master_Read(0);
  2320  00126C  0E5B               	movlw	low main@time
  2321  00126E  2567               	addwf	main@i& (0+255),w,b
  2322  001270  6ED9               	movwf	fsr2l,c
  2323  001272  6ADA               	clrf	fsr2h,c
  2324  001274  0E01               	movlw	high main@time
  2325  001276  22DA               	addwfc	fsr2h,f,c
  2326  001278  0E00               	movlw	0
  2327  00127A  EC94  F024         	call	_I2C_Master_Read
  2328  00127E  6EDF               	movwf	indf2,c
  2329                           
  2330                           ;main.c: 1450:                 }
  2331  001280  0101               	movlb	1	; () banked
  2332  001282  2B67               	incf	main@i& (0+255),f,b
  2333                           
  2334                           ; BSR set to: 1
  2335  001284  0E05               	movlw	5
  2336  001286  6567               	cpfsgt	main@i& (0+255),b
  2337  001288  D7F1               	goto	l10841
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;main.c: 1451:                 time[6] = I2C_Master_Read(1);
  2341  00128A  0E01               	movlw	1
  2342  00128C  EC94  F024         	call	_I2C_Master_Read
  2343  001290  0101               	movlb	1	; () banked
  2344  001292  6F61               	movwf	(main@time+6)& (0+255),b
  2345                           
  2346                           ;main.c: 1452:                 I2C_Master_Stop();
  2347  001294  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  2348  001298  D11D               	goto	l10937
  2349  00129A                     l10849:
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;main.c: 1465:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2353  00129A  0E80               	movlw	128
  2354  00129C  EC3F  F025         	call	_lcdInst
  2355  0012A0  0E07               	movlw	7
  2356  0012A2  6E72               	movwf	??_main& (0+255),c
  2357  0012A4  0E7D               	movlw	125
  2358  0012A6                     u12587:
  2359  0012A6  2EE8               	decfsz	wreg,f,c
  2360  0012A8  D7FE               	bra	u12587
  2361  0012AA  2E72               	decfsz	??_main& (0+255),f,c
  2362  0012AC  D7FC               	bra	u12587
  2363  0012AE  F000               	nop	
  2364                           
  2365                           ;main.c: 1467:                 printf("%s", "WELCOME ");
  2366  0012B0  0ED1               	movlw	low (STR_1+4)
  2367  0012B2  0100               	movlb	0	; () banked
  2368  0012B4  6F9D               	movwf	printf@fmt& (0+255),b
  2369  0012B6  0EFF               	movlw	high (STR_1+4)
  2370  0012B8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2371  0012BA  0E99               	movlw	low STR_31
  2372  0012BC  6F9F               	movwf	(?_printf+2)& (0+255),b
  2373  0012BE  0EFF               	movlw	high STR_31
  2374  0012C0  6FA0               	movwf	(?_printf+3)& (0+255),b
  2375  0012C2  EC6D  F024         	call	_printf	;wreg free
  2376                           
  2377                           ;main.c: 1468:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2378  0012C6  0EBB               	movlw	low STR_32
  2379  0012C8  0100               	movlb	0	; () banked
  2380  0012CA  6F9D               	movwf	printf@fmt& (0+255),b
  2381  0012CC  0EFE               	movlw	high STR_32
  2382  0012CE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2383  0012D0  C161  F09F         	movff	main@time+6,?_printf+2
  2384  0012D4  6BA0               	clrf	(?_printf+3)& (0+255),b
  2385  0012D6  C160  F0A1         	movff	main@time+5,?_printf+4
  2386  0012DA  6BA2               	clrf	(?_printf+5)& (0+255),b
  2387  0012DC  C15F  F0A3         	movff	main@time+4,?_printf+6
  2388  0012E0  6BA4               	clrf	(?_printf+7)& (0+255),b
  2389  0012E2  EC6D  F024         	call	_printf	;wreg free
  2390  0012E6  0EC0               	movlw	192
  2391  0012E8  EC3F  F025         	call	_lcdInst
  2392                           
  2393                           ;main.c: 1470:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2394  0012EC  0ECA               	movlw	low STR_33
  2395  0012EE  0100               	movlb	0	; () banked
  2396  0012F0  6F9D               	movwf	printf@fmt& (0+255),b
  2397  0012F2  0EFE               	movlw	high STR_33
  2398  0012F4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2399  0012F6  C15D  F09F         	movff	main@time+2,?_printf+2
  2400  0012FA  6BA0               	clrf	(?_printf+3)& (0+255),b
  2401  0012FC  C15C  F0A1         	movff	main@time+1,?_printf+4
  2402  001300  6BA2               	clrf	(?_printf+5)& (0+255),b
  2403  001302  C15B  F0A3         	movff	main@time,?_printf+6
  2404  001306  6BA4               	clrf	(?_printf+7)& (0+255),b
  2405  001308  EC6D  F024         	call	_printf	;wreg free
  2406  00130C  0E90               	movlw	144
  2407  00130E  EC3F  F025         	call	_lcdInst
  2408                           
  2409                           ;main.c: 1472:                 printf("%s","(1) START");
  2410  001312  0ED1               	movlw	low (STR_1+4)
  2411  001314  0100               	movlb	0	; () banked
  2412  001316  6F9D               	movwf	printf@fmt& (0+255),b
  2413  001318  0EFF               	movlw	high (STR_1+4)
  2414  00131A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2415  00131C  0E85               	movlw	low STR_35
  2416  00131E  6F9F               	movwf	(?_printf+2)& (0+255),b
  2417  001320  0EFF               	movlw	high STR_35
  2418  001322  6FA0               	movwf	(?_printf+3)& (0+255),b
  2419  001324  EC6D  F024         	call	_printf	;wreg free
  2420  001328  0ED0               	movlw	208
  2421  00132A  EC3F  F025         	call	_lcdInst
  2422                           
  2423                           ;main.c: 1474:                 printf("%s","(2) VIEW LOGS");
  2424  00132E  0ED1               	movlw	low (STR_1+4)
  2425  001330  0100               	movlb	0	; () banked
  2426  001332  6F9D               	movwf	printf@fmt& (0+255),b
  2427  001334  0EFF               	movlw	high (STR_1+4)
  2428  001336  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2429  001338  0EF5               	movlw	low STR_37
  2430  00133A  6F9F               	movwf	(?_printf+2)& (0+255),b
  2431  00133C  0EFE               	movlw	high STR_37
  2432  00133E  6FA0               	movwf	(?_printf+3)& (0+255),b
  2433  001340  EC6D  F024         	call	_printf	;wreg free
  2434                           
  2435                           ;main.c: 1475:                 break;
  2436  001344  D0DF               	goto	l10939
  2437  001346                     l10869:
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;main.c: 1478:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2441  001346  0E80               	movlw	128
  2442  001348  EC3F  F025         	call	_lcdInst
  2443  00134C  0E07               	movlw	7
  2444  00134E  6E72               	movwf	??_main& (0+255),c
  2445  001350  0E7D               	movlw	125
  2446  001352                     u12597:
  2447  001352  2EE8               	decfsz	wreg,f,c
  2448  001354  D7FE               	bra	u12597
  2449  001356  2E72               	decfsz	??_main& (0+255),f,c
  2450  001358  D7FC               	bra	u12597
  2451  00135A  F000               	nop	
  2452                           
  2453                           ;main.c: 1479:                 printf("%s", "OPERATION IN");
  2454  00135C  0ED1               	movlw	low (STR_1+4)
  2455  00135E  0100               	movlb	0	; () banked
  2456  001360  6F9D               	movwf	printf@fmt& (0+255),b
  2457  001362  0EFF               	movlw	high (STR_1+4)
  2458  001364  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2459  001366  0E2B               	movlw	low STR_39
  2460  001368  6F9F               	movwf	(?_printf+2)& (0+255),b
  2461  00136A  0EFF               	movlw	high STR_39
  2462  00136C  6FA0               	movwf	(?_printf+3)& (0+255),b
  2463  00136E  EC6D  F024         	call	_printf	;wreg free
  2464  001372  0EC0               	movlw	192
  2465  001374  EC3F  F025         	call	_lcdInst
  2466                           
  2467                           ;main.c: 1481:                 printf("%s","PROGRESS");
  2468  001378  0ED1               	movlw	low (STR_1+4)
  2469  00137A  0100               	movlb	0	; () banked
  2470  00137C  6F9D               	movwf	printf@fmt& (0+255),b
  2471  00137E  0EFF               	movlw	high (STR_1+4)
  2472  001380  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2473  001382  0EAB               	movlw	low STR_41
  2474  001384  6F9F               	movwf	(?_printf+2)& (0+255),b
  2475  001386  0EFF               	movlw	high STR_41
  2476  001388  6FA0               	movwf	(?_printf+3)& (0+255),b
  2477  00138A  EC6D  F024         	call	_printf	;wreg free
  2478                           
  2479                           ;main.c: 1482:                 doOperation();
  2480  00138E  EC09  F000         	call	_doOperation	;wreg free
  2481                           
  2482                           ;main.c: 1483:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2483  001392  0E01               	movlw	1
  2484  001394  EC3F  F025         	call	_lcdInst
  2485  001398  0E11               	movlw	17
  2486  00139A  6E72               	movwf	??_main& (0+255),c
  2487  00139C  0E3A               	movlw	58
  2488  00139E                     u12607:
  2489  00139E  2EE8               	decfsz	wreg,f,c
  2490  0013A0  D7FE               	bra	u12607
  2491  0013A2  2E72               	decfsz	??_main& (0+255),f,c
  2492  0013A4  D7FC               	bra	u12607
  2493  0013A6  D000               	nop2	
  2494                           
  2495                           ;main.c: 1484:                 currentRobotState = operationComplete;
  2496  0013A8  0E02               	movlw	2
  2497  0013AA  D091               	goto	L1
  2498  0013AC                     l10887:
  2499                           
  2500                           ; BSR set to: 1
  2501                           ;main.c: 1491:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2502  0013AC  0E80               	movlw	128
  2503  0013AE  EC3F  F025         	call	_lcdInst
  2504  0013B2  0E07               	movlw	7
  2505  0013B4  6E72               	movwf	??_main& (0+255),c
  2506  0013B6  0E7D               	movlw	125
  2507  0013B8                     u12617:
  2508  0013B8  2EE8               	decfsz	wreg,f,c
  2509  0013BA  D7FE               	bra	u12617
  2510  0013BC  2E72               	decfsz	??_main& (0+255),f,c
  2511  0013BE  D7FC               	bra	u12617
  2512  0013C0  F000               	nop	
  2513                           
  2514                           ;main.c: 1492:                 printf("%s", "OP. COMPLETE");
  2515  0013C2  0ED1               	movlw	low (STR_1+4)
  2516  0013C4  0100               	movlb	0	; () banked
  2517  0013C6  6F9D               	movwf	printf@fmt& (0+255),b
  2518  0013C8  0EFF               	movlw	high (STR_1+4)
  2519  0013CA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2520  0013CC  0E11               	movlw	low STR_43
  2521  0013CE  6F9F               	movwf	(?_printf+2)& (0+255),b
  2522  0013D0  0EFF               	movlw	high STR_43
  2523  0013D2  6FA0               	movwf	(?_printf+3)& (0+255),b
  2524  0013D4  EC6D  F024         	call	_printf	;wreg free
  2525  0013D8  0EC0               	movlw	192
  2526  0013DA  EC3F  F025         	call	_lcdInst
  2527                           
  2528                           ;main.c: 1494:                 printf("%s","(1) VIEW LOG");
  2529  0013DE  0ED1               	movlw	low (STR_1+4)
  2530  0013E0  0100               	movlb	0	; () banked
  2531  0013E2  6F9D               	movwf	printf@fmt& (0+255),b
  2532  0013E4  0EFF               	movlw	high (STR_1+4)
  2533  0013E6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2534  0013E8  0E1E               	movlw	low STR_45
  2535  0013EA  6F9F               	movwf	(?_printf+2)& (0+255),b
  2536  0013EC  0EFF               	movlw	high STR_45
  2537  0013EE  6FA0               	movwf	(?_printf+3)& (0+255),b
  2538  0013F0  EC6D  F024         	call	_printf	;wreg free
  2539  0013F4  0E90               	movlw	144
  2540  0013F6  EC3F  F025         	call	_lcdInst
  2541                           
  2542                           ;main.c: 1496:                 printf("%s","(2) QUIT DO NOT");
  2543  0013FA  0ED1               	movlw	low (STR_1+4)
  2544  0013FC  0100               	movlb	0	; () banked
  2545  0013FE  6F9D               	movwf	printf@fmt& (0+255),b
  2546  001400  0EFF               	movlw	high (STR_1+4)
  2547  001402  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2548  001404  0E8C               	movlw	low STR_47
  2549  001406  6F9F               	movwf	(?_printf+2)& (0+255),b
  2550  001408  0EFE               	movlw	high STR_47
  2551  00140A  6FA0               	movwf	(?_printf+3)& (0+255),b
  2552  00140C  EC6D  F024         	call	_printf	;wreg free
  2553  001410  0ED0               	movlw	208
  2554  001412  EC3F  F025         	call	_lcdInst
  2555                           
  2556                           ;main.c: 1498:                 printf("%s","SAVE LOG");
  2557  001416  0ED1               	movlw	low (STR_1+4)
  2558  001418  0100               	movlb	0	; () banked
  2559  00141A  6F9D               	movwf	printf@fmt& (0+255),b
  2560  00141C  0EFF               	movlw	high (STR_1+4)
  2561  00141E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2562  001420  0EA2               	movlw	low STR_49
  2563  001422  6F9F               	movwf	(?_printf+2)& (0+255),b
  2564  001424  0EFF               	movlw	high STR_49
  2565  001426  6FA0               	movwf	(?_printf+3)& (0+255),b
  2566  001428  EC6D  F024         	call	_printf	;wreg free
  2567                           
  2568                           ;main.c: 1499:                 currentLogState = justRan;
  2569  00142C  0E00               	movlw	0
  2570  00142E  0101               	movlb	1	; () banked
  2571  001430  6F68               	movwf	main@currentLogState& (0+255),b
  2572                           
  2573                           ;main.c: 1500:                 break;
  2574  001432  D068               	goto	l10939
  2575  001434                     l10907:
  2576                           
  2577                           ; BSR set to: 1
  2578                           ;main.c: 1503:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2579  001434  0E80               	movlw	128
  2580  001436  EC3F  F025         	call	_lcdInst
  2581  00143A  0E07               	movlw	7
  2582  00143C  6E72               	movwf	??_main& (0+255),c
  2583  00143E  0E7D               	movlw	125
  2584  001440                     u12627:
  2585  001440  2EE8               	decfsz	wreg,f,c
  2586  001442  D7FE               	bra	u12627
  2587  001444  2E72               	decfsz	??_main& (0+255),f,c
  2588  001446  D7FC               	bra	u12627
  2589  001448  F000               	nop	
  2590                           
  2591                           ;main.c: 1504:                 printf("%s", "SELECT LOG");
  2592  00144A  0ED1               	movlw	low (STR_1+4)
  2593  00144C  0100               	movlb	0	; () banked
  2594  00144E  6F9D               	movwf	printf@fmt& (0+255),b
  2595  001450  0EFF               	movlw	high (STR_1+4)
  2596  001452  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2597  001454  0E51               	movlw	low STR_51
  2598  001456  6F9F               	movwf	(?_printf+2)& (0+255),b
  2599  001458  0EFF               	movlw	high STR_51
  2600  00145A  6FA0               	movwf	(?_printf+3)& (0+255),b
  2601  00145C  EC6D  F024         	call	_printf	;wreg free
  2602  001460  0EC0               	movlw	192
  2603  001462  EC3F  F025         	call	_lcdInst
  2604                           
  2605                           ;main.c: 1506:                 printf("%s","(1 IS OLDEST)");
  2606  001466  0ED1               	movlw	low (STR_1+4)
  2607  001468  0100               	movlb	0	; () banked
  2608  00146A  6F9D               	movwf	printf@fmt& (0+255),b
  2609  00146C  0EFF               	movlw	high (STR_1+4)
  2610  00146E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2611  001470  0ED9               	movlw	low STR_53
  2612  001472  6F9F               	movwf	(?_printf+2)& (0+255),b
  2613  001474  0EFE               	movlw	high STR_53
  2614  001476  6FA0               	movwf	(?_printf+3)& (0+255),b
  2615  001478  EC6D  F024         	call	_printf	;wreg free
  2616  00147C  0E90               	movlw	144
  2617  00147E  EC3F  F025         	call	_lcdInst
  2618                           
  2619                           ;main.c: 1508:                 printf("%s","(1) (2) (3) (4)");
  2620  001482  0ED1               	movlw	low (STR_1+4)
  2621  001484  0100               	movlb	0	; () banked
  2622  001486  6F9D               	movwf	printf@fmt& (0+255),b
  2623  001488  0EFF               	movlw	high (STR_1+4)
  2624  00148A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2625  00148C  0E6C               	movlw	low STR_55
  2626  00148E  6F9F               	movwf	(?_printf+2)& (0+255),b
  2627  001490  0EFE               	movlw	high STR_55
  2628  001492  6FA0               	movwf	(?_printf+3)& (0+255),b
  2629  001494  EC6D  F024         	call	_printf	;wreg free
  2630                           
  2631                           ;main.c: 1509:                 break;
  2632  001498  D035               	goto	l10939
  2633  00149A                     l10921:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;main.c: 1511:                 if (currentLogState == justRan){
  2637  00149A  5168               	movf	main@currentLogState& (0+255),w,b
  2638  00149C  A4D8               	btfss	status,2,c
  2639  00149E  D005               	goto	l10927
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;main.c: 1512:                     replaceOldLog();
  2643  0014A0  ECE4  F01A         	call	_replaceOldLog	;wreg free
  2644                           
  2645                           ;main.c: 1513:                     currentLogState = four;
  2646  0014A4  0E04               	movlw	4
  2647  0014A6  0101               	movlb	1	; () banked
  2648  0014A8  6F68               	movwf	main@currentLogState& (0+255),b
  2649  0014AA                     l10927:
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;main.c: 1515:                 doDisplayLog(currentLogState);
  2653  0014AA  C168  F0A7         	movff	main@currentLogState,doDisplayLog@logNumber
  2654  0014AE  0100               	movlb	0	; () banked
  2655  0014B0  6BA8               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2656  0014B2  EC00  F00B         	call	_doDisplayLog	;wreg free
  2657                           
  2658                           ;main.c: 1516:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2659  0014B6  0E01               	movlw	1
  2660  0014B8  EC3F  F025         	call	_lcdInst
  2661  0014BC  0E11               	movlw	17
  2662  0014BE  6E72               	movwf	??_main& (0+255),c
  2663  0014C0  0E3A               	movlw	58
  2664  0014C2                     u12637:
  2665  0014C2  2EE8               	decfsz	wreg,f,c
  2666  0014C4  D7FE               	bra	u12637
  2667  0014C6  2E72               	decfsz	??_main& (0+255),f,c
  2668  0014C8  D7FC               	bra	u12637
  2669  0014CA  D000               	nop2	
  2670                           
  2671                           ;main.c: 1517:                 currentRobotState = standby;
  2672  0014CC  0E00               	movlw	0
  2673  0014CE                     L1:
  2674  0014CE  0101               	movlb	1	; () banked
  2675  0014D0  6F69               	movwf	main@currentRobotState& (0+255),b
  2676                           
  2677                           ;main.c: 1518:                 break;
  2678  0014D2  D018               	goto	l10939
  2679  0014D4                     l10937:
  2680  0014D4  0101               	movlb	1	; () banked
  2681  0014D6  5169               	movf	main@currentRobotState& (0+255),w,b
  2682  0014D8  6E72               	movwf	??_main& (0+255),c
  2683  0014DA  6A73               	clrf	(??_main+1)& (0+255),c
  2684                           
  2685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2686                           ; Switch size 1, requested type "simple"
  2687                           ; Number of cases is 1, Range of values is 0 to 0
  2688                           ; switch strategies available:
  2689                           ; Name         Instructions Cycles
  2690                           ; simple_byte            4     3 (average)
  2691                           ;	Chosen strategy is simple_byte
  2692  0014DC  5073               	movf	??_main+1,w,c
  2693  0014DE  0A00               	xorlw	0	; case 0
  2694  0014E0  A4D8               	btfss	status,2,c
  2695  0014E2  D010               	goto	l10939
  2696                           
  2697                           ; BSR set to: 1
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 5, Range of values is 0 to 4
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte           16     9 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704  0014E4  5072               	movf	??_main,w,c
  2705  0014E6  0A00               	xorlw	0	; case 0
  2706  0014E8  B4D8               	btfsc	status,2,c
  2707  0014EA  D6D7               	goto	l10849
  2708  0014EC  0A01               	xorlw	1	; case 1
  2709  0014EE  B4D8               	btfsc	status,2,c
  2710  0014F0  D72A               	goto	l10869
  2711  0014F2  0A03               	xorlw	3	; case 2
  2712  0014F4  B4D8               	btfsc	status,2,c
  2713  0014F6  D75A               	goto	l10887
  2714  0014F8  0A01               	xorlw	1	; case 3
  2715  0014FA  B4D8               	btfsc	status,2,c
  2716  0014FC  D79B               	goto	l10907
  2717  0014FE  0A07               	xorlw	7	; case 4
  2718  001500  B4D8               	btfsc	status,2,c
  2719  001502  D7CB               	goto	l10921
  2720  001504                     l10939:
  2721                           
  2722                           ;main.c: 1522:         if(keyPressed){
  2723  001504  0100               	movlb	0	; () banked
  2724  001506  51E9               	movf	_keyPressed& (0+255),w,b	;volatile
  2725  001508  B4D8               	btfsc	status,2,c
  2726  00150A  D06B               	goto	l490
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;main.c: 1525:             keyPressed = 0;
  2730  00150C  0E00               	movlw	0
  2731  00150E  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;main.c: 1528:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2735  001510  3881               	swapf	3969,w,c	;volatile
  2736  001512  0B0F               	andlw	15
  2737  001514  0B0F               	andlw	15
  2738  001516  0101               	movlb	1	; () banked
  2739  001518  6F66               	movwf	main@keypress& (0+255),b
  2740                           
  2741                           ; BSR set to: 1
  2742                           ;main.c: 1529:             char keyValue = keys[keypress];
  2743  00151A  0E47               	movlw	low _keys
  2744  00151C  2566               	addwf	main@keypress& (0+255),w,b
  2745  00151E  6EF6               	movwf	tblptrl,c
  2746  001520  6AF7               	clrf	tblptrh,c
  2747  001522  0EFE               	movlw	high _keys
  2748  001524  22F7               	addwfc	tblptrh,f,c
  2749  001526                     	if	0	;There are less than 3 active tblptr bytes
  2750  001526                     	endif
  2751  001526  0008               	tblrd		*
  2752  001528  CFF5 F16A          	movff	tablat,main@keyValue
  2753                           
  2754                           ; BSR set to: 1
  2755                           ;main.c: 1530:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2756  00152C  0E01               	movlw	1
  2757  00152E  EC3F  F025         	call	_lcdInst
  2758  001532  0E11               	movlw	17
  2759  001534  6E72               	movwf	??_main& (0+255),c
  2760  001536  0E3A               	movlw	58
  2761  001538                     u12647:
  2762  001538  2EE8               	decfsz	wreg,f,c
  2763  00153A  D7FE               	bra	u12647
  2764  00153C  2E72               	decfsz	??_main& (0+255),f,c
  2765  00153E  D7FC               	bra	u12647
  2766  001540  D000               	nop2	
  2767                           
  2768                           ;main.c: 1531:             switch (currentRobotState){
  2769  001542  D039               	goto	l10991
  2770  001544                     l10951:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;main.c: 1533:                     if (keyValue == '1'){
  2774  001544  0E31               	movlw	49
  2775  001546  196A               	xorwf	main@keyValue& (0+255),w,b
  2776  001548  A4D8               	btfss	status,2,c
  2777  00154A  D002               	goto	l10955
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;main.c: 1534:                         currentRobotState = operation;
  2781  00154C  0E01               	movlw	1
  2782  00154E  D018               	goto	L4
  2783  001550                     l10955:
  2784                           
  2785                           ; BSR set to: 1
  2786  001550  0E32               	movlw	50
  2787  001552  196A               	xorwf	main@keyValue& (0+255),w,b
  2788  001554  A4D8               	btfss	status,2,c
  2789  001556  D002               	goto	l10959
  2790                           
  2791                           ; BSR set to: 1
  2792                           ;main.c: 1536:                         currentRobotState = selectLog;
  2793  001558  0E03               	movlw	3
  2794  00155A  D012               	goto	L4
  2795  00155C                     l10959:
  2796                           
  2797                           ; BSR set to: 1
  2798  00155C  0E41               	movlw	65
  2799  00155E  196A               	xorwf	main@keyValue& (0+255),w,b
  2800  001560  A4D8               	btfss	status,2,c
  2801  001562  D03F               	goto	l490
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;main.c: 1538:                         sendArduinoStandbyClampRequest();
  2805  001564  ECA6  F024         	call	_sendArduinoStandbyClampRequest	;wreg free
  2806  001568  D03C               	goto	l490
  2807  00156A                     l10963:
  2808                           
  2809                           ; BSR set to: 1
  2810                           ;main.c: 1544:                     if (keyValue == '1'){
  2811  00156A  0E31               	movlw	49
  2812  00156C  196A               	xorwf	main@keyValue& (0+255),w,b
  2813  00156E  A4D8               	btfss	status,2,c
  2814  001570  D002               	goto	l10967
  2815  001572                     u12370:
  2816                           
  2817                           ; BSR set to: 1
  2818                           ;main.c: 1545:                         currentRobotState = displayLog;
  2819  001572  0E04               	movlw	4
  2820  001574  D005               	goto	L4
  2821  001576                     l10967:
  2822                           
  2823                           ; BSR set to: 1
  2824  001576  0E32               	movlw	50
  2825  001578  196A               	xorwf	main@keyValue& (0+255),w,b
  2826  00157A  A4D8               	btfss	status,2,c
  2827  00157C  D032               	goto	l490
  2828                           
  2829                           ; BSR set to: 1
  2830                           ;main.c: 1547:                         currentRobotState = standby;
  2831  00157E  0E00               	movlw	0
  2832  001580                     L4:
  2833  001580  6F69               	movwf	main@currentRobotState& (0+255),b
  2834  001582  D02F               	goto	l490
  2835  001584                     l10971:
  2836                           
  2837                           ; BSR set to: 1
  2838                           ;main.c: 1551:                     if (keyValue == '1'){
  2839  001584  0E31               	movlw	49
  2840  001586  196A               	xorwf	main@keyValue& (0+255),w,b
  2841  001588  A4D8               	btfss	status,2,c
  2842  00158A  D002               	goto	l10975
  2843                           
  2844                           ; BSR set to: 1
  2845                           ;main.c: 1552:                         currentLogState = one;
  2846  00158C  0E01               	movlw	1
  2847  00158E  D011               	goto	L7
  2848  001590                     l10975:
  2849                           
  2850                           ; BSR set to: 1
  2851  001590  0E32               	movlw	50
  2852  001592  196A               	xorwf	main@keyValue& (0+255),w,b
  2853  001594  A4D8               	btfss	status,2,c
  2854  001596  D002               	goto	l10979
  2855                           
  2856                           ; BSR set to: 1
  2857                           ;main.c: 1554:                         currentLogState = two;
  2858  001598  0E02               	movlw	2
  2859  00159A  D00B               	goto	L7
  2860  00159C                     l10979:
  2861                           
  2862                           ; BSR set to: 1
  2863  00159C  0E33               	movlw	51
  2864  00159E  196A               	xorwf	main@keyValue& (0+255),w,b
  2865  0015A0  A4D8               	btfss	status,2,c
  2866  0015A2  D002               	goto	l10983
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;main.c: 1556:                         currentLogState = three;
  2870  0015A4  0E03               	movlw	3
  2871  0015A6  D005               	goto	L7
  2872  0015A8                     l10983:
  2873                           
  2874                           ; BSR set to: 1
  2875  0015A8  0E34               	movlw	52
  2876  0015AA  196A               	xorwf	main@keyValue& (0+255),w,b
  2877  0015AC  A4D8               	btfss	status,2,c
  2878  0015AE  D019               	goto	l490
  2879                           
  2880                           ; BSR set to: 1
  2881                           ;main.c: 1558:                         currentLogState = four;
  2882  0015B0  0E04               	movlw	4
  2883  0015B2                     L7:
  2884  0015B2  6F68               	movwf	main@currentLogState& (0+255),b
  2885                           
  2886                           ;main.c: 1559:                     } else {
  2887  0015B4  D7DE               	goto	u12370
  2888  0015B6                     l10991:
  2889  0015B6  0101               	movlb	1	; () banked
  2890  0015B8  5169               	movf	main@currentRobotState& (0+255),w,b
  2891  0015BA  6E72               	movwf	??_main& (0+255),c
  2892  0015BC  6A73               	clrf	(??_main+1)& (0+255),c
  2893                           
  2894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2895                           ; Switch size 1, requested type "simple"
  2896                           ; Number of cases is 1, Range of values is 0 to 0
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte            4     3 (average)
  2900                           ;	Chosen strategy is simple_byte
  2901  0015BE  5073               	movf	??_main+1,w,c
  2902  0015C0  0A00               	xorlw	0	; case 0
  2903  0015C2  A4D8               	btfss	status,2,c
  2904  0015C4  D00E               	goto	l490
  2905                           
  2906                           ; BSR set to: 1
  2907                           ; Switch size 1, requested type "simple"
  2908                           ; Number of cases is 5, Range of values is 0 to 4
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; simple_byte           16     9 (average)
  2912                           ;	Chosen strategy is simple_byte
  2913  0015C6  5072               	movf	??_main,w,c
  2914  0015C8  0A00               	xorlw	0	; case 0
  2915  0015CA  B4D8               	btfsc	status,2,c
  2916  0015CC  D7BB               	goto	l10951
  2917  0015CE  0A01               	xorlw	1	; case 1
  2918  0015D0  B4D8               	btfsc	status,2,c
  2919  0015D2  D007               	goto	l490
  2920  0015D4  0A03               	xorlw	3	; case 2
  2921  0015D6  B4D8               	btfsc	status,2,c
  2922  0015D8  D7C8               	goto	l10963
  2923  0015DA  0A01               	xorlw	1	; case 3
  2924  0015DC  B4D8               	btfsc	status,2,c
  2925  0015DE  D7D2               	goto	l10971
  2926  0015E0  0A07               	xorlw	7	; case 4
  2927  0015E2                     l490:
  2928                           
  2929                           ;main.c: 1579:         tick++;
  2930                           
  2931                           ; BSR set to: 1
  2932  0015E2  0E01               	movlw	1
  2933  0015E4  0101               	movlb	1	; () banked
  2934  0015E6  2762               	addwf	main@tick& (0+255),f,b
  2935  0015E8  0E00               	movlw	0
  2936  0015EA  2363               	addwfc	(main@tick+1)& (0+255),f,b
  2937  0015EC  2364               	addwfc	(main@tick+2)& (0+255),f,b
  2938  0015EE  2365               	addwfc	(main@tick+3)& (0+255),f,b
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;main.c: 1580:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2942  0015F0  0E04               	movlw	4
  2943  0015F2  6E72               	movwf	??_main& (0+255),c
  2944  0015F4  0E3E               	movlw	62
  2945  0015F6                     u12657:
  2946  0015F6  2EE8               	decfsz	wreg,f,c
  2947  0015F8  D7FE               	bra	u12657
  2948  0015FA  2E72               	decfsz	??_main& (0+255),f,c
  2949  0015FC  D7FC               	bra	u12657
  2950  0015FE  D601               	goto	l10827
  2951  001600                     __end_of_main:
  2952                           	opt callstack 0
  2953                           
  2954 ;; *************** function _sendArduinoStandbyClampRequest *****************
  2955 ;; Defined at:
  2956 ;;		line 660 in file "main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  data            1    0        unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    4
  2977 ;; This function calls:
  2978 ;;		_I2C_Master_Start
  2979 ;;		_I2C_Master_Stop
  2980 ;;		_I2C_Master_Write
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text1
  2987  00494C                     __ptext1:
  2988                           	opt callstack 0
  2989  00494C                     _sendArduinoStandbyClampRequest:
  2990                           	opt callstack 26
  2991                           
  2992                           ;main.c: 667:     I2C_Master_Start();
  2993                           
  2994                           ;incstack = 0
  2995  00494C  EC53  F025         	call	_I2C_Master_Start	;wreg free
  2996                           
  2997                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  2998  004950  0E00               	movlw	0
  2999  004952  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3000  004954  0E10               	movlw	16
  3001  004956  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3002  004958  EC45  F025         	call	_I2C_Master_Write	;wreg free
  3003                           
  3004                           ;main.c: 669:     I2C_Master_Write(data);
  3005  00495C  0E00               	movlw	0
  3006  00495E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3007  004960  0E41               	movlw	65
  3008  004962  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3009  004964  EC45  F025         	call	_I2C_Master_Write	;wreg free
  3010                           
  3011                           ;main.c: 670:     I2C_Master_Stop();
  3012  004968  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  3013  00496C  0012               	return		;funcret
  3014  00496E                     __end_of_sendArduinoStandbyClampRequest:
  3015                           	opt callstack 0
  3016                           
  3017 ;; *************** function _replaceOldLog *****************
  3018 ;; Defined at:
  3019 ;;		line 1358 in file "main.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  i               2   32[COMRAM] int 
  3024 ;;  i               2   30[COMRAM] int 
  3025 ;;  i               2   28[COMRAM] int 
  3026 ;;  i               2   26[COMRAM] int 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        8 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    8
  3043 ;; This function calls:
  3044 ;;		_robotInit
  3045 ;;		_saveLogs
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text2
  3052  0035C8                     __ptext2:
  3053                           	opt callstack 0
  3054  0035C8                     _replaceOldLog:
  3055                           	opt callstack 22
  3056                           
  3057                           ;main.c: 1359:     for (int i = 0; i< 48; i++){
  3058                           
  3059                           ;incstack = 0
  3060  0035C8  0E00               	movlw	0
  3061  0035CA  6E1C               	movwf	replaceOldLog@i+1,c
  3062  0035CC  0E00               	movlw	0
  3063  0035CE  6E1B               	movwf	replaceOldLog@i,c
  3064  0035D0                     l10545:
  3065                           
  3066                           ;main.c: 1360:         logs[1][i] = logs[2][i];
  3067  0035D0  90D8               	bcf	status,0,c
  3068  0035D2  341B               	rlcf	replaceOldLog@i,w,c
  3069  0035D4  6ED9               	movwf	fsr2l,c
  3070  0035D6  341C               	rlcf	replaceOldLog@i+1,w,c
  3071  0035D8  6EDA               	movwf	fsr2h,c
  3072  0035DA  0E67               	movlw	low (_logs+192)
  3073  0035DC  26D9               	addwf	fsr2l,f,c
  3074  0035DE  0E02               	movlw	high (_logs+192)
  3075  0035E0  22DA               	addwfc	fsr2h,f,c
  3076  0035E2  90D8               	bcf	status,0,c
  3077  0035E4  341B               	rlcf	replaceOldLog@i,w,c
  3078  0035E6  6EE1               	movwf	fsr1l,c
  3079  0035E8  341C               	rlcf	replaceOldLog@i+1,w,c
  3080  0035EA  6EE2               	movwf	fsr1h,c
  3081  0035EC  0E07               	movlw	low (_logs+96)
  3082  0035EE  26E1               	addwf	fsr1l,f,c
  3083  0035F0  0E02               	movlw	high (_logs+96)
  3084  0035F2  22E2               	addwfc	fsr1h,f,c
  3085  0035F4  CFDE FFE6          	movff	postinc2,postinc1
  3086  0035F8  CFDD FFE5          	movff	postdec2,postdec1
  3087                           
  3088                           ;main.c: 1361:     }
  3089  0035FC  4A1B               	infsnz	replaceOldLog@i,f,c
  3090  0035FE  2A1C               	incf	replaceOldLog@i+1,f,c
  3091  003600  BE1C               	btfsc	replaceOldLog@i+1,7,c
  3092  003602  D7E6               	goto	l10545
  3093  003604  501C               	movf	replaceOldLog@i+1,w,c
  3094  003606  E104               	bnz	u11950
  3095  003608  0E30               	movlw	48
  3096  00360A  5C1B               	subwf	replaceOldLog@i,w,c
  3097  00360C  A0D8               	btfss	status,0,c
  3098  00360E  D7E0               	goto	l10545
  3099  003610                     u11950:
  3100                           
  3101                           ;main.c: 1364:     for (int i = 0; i< 48; i++){
  3102  003610  0E00               	movlw	0
  3103  003612  6E1E               	movwf	replaceOldLog@i_1097+1,c
  3104  003614  0E00               	movlw	0
  3105  003616  6E1D               	movwf	replaceOldLog@i_1097,c
  3106  003618                     l10557:
  3107                           
  3108                           ;main.c: 1365:         logs[2][i] = logs[3][i];
  3109  003618  90D8               	bcf	status,0,c
  3110  00361A  341D               	rlcf	replaceOldLog@i_1097,w,c
  3111  00361C  6ED9               	movwf	fsr2l,c
  3112  00361E  341E               	rlcf	replaceOldLog@i_1097+1,w,c
  3113  003620  6EDA               	movwf	fsr2h,c
  3114  003622  0EC7               	movlw	low (_logs+288)
  3115  003624  26D9               	addwf	fsr2l,f,c
  3116  003626  0E02               	movlw	high (_logs+288)
  3117  003628  22DA               	addwfc	fsr2h,f,c
  3118  00362A  90D8               	bcf	status,0,c
  3119  00362C  341D               	rlcf	replaceOldLog@i_1097,w,c
  3120  00362E  6EE1               	movwf	fsr1l,c
  3121  003630  341E               	rlcf	replaceOldLog@i_1097+1,w,c
  3122  003632  6EE2               	movwf	fsr1h,c
  3123  003634  0E67               	movlw	low (_logs+192)
  3124  003636  26E1               	addwf	fsr1l,f,c
  3125  003638  0E02               	movlw	high (_logs+192)
  3126  00363A  22E2               	addwfc	fsr1h,f,c
  3127  00363C  CFDE FFE6          	movff	postinc2,postinc1
  3128  003640  CFDD FFE5          	movff	postdec2,postdec1
  3129                           
  3130                           ;main.c: 1366:     }
  3131  003644  4A1D               	infsnz	replaceOldLog@i_1097,f,c
  3132  003646  2A1E               	incf	replaceOldLog@i_1097+1,f,c
  3133  003648  BE1E               	btfsc	replaceOldLog@i_1097+1,7,c
  3134  00364A  D7E6               	goto	l10557
  3135  00364C  501E               	movf	replaceOldLog@i_1097+1,w,c
  3136  00364E  E104               	bnz	u11960
  3137  003650  0E30               	movlw	48
  3138  003652  5C1D               	subwf	replaceOldLog@i_1097,w,c
  3139  003654  A0D8               	btfss	status,0,c
  3140  003656  D7E0               	goto	l10557
  3141  003658                     u11960:
  3142                           
  3143                           ;main.c: 1368:     for (int i = 0; i< 48; i++){
  3144  003658  0E00               	movlw	0
  3145  00365A  6E20               	movwf	replaceOldLog@i_1098+1,c
  3146  00365C  0E00               	movlw	0
  3147  00365E  6E1F               	movwf	replaceOldLog@i_1098,c
  3148  003660                     l10569:
  3149                           
  3150                           ;main.c: 1369:         logs[3][i] = logs[4][i];
  3151  003660  90D8               	bcf	status,0,c
  3152  003662  341F               	rlcf	replaceOldLog@i_1098,w,c
  3153  003664  6ED9               	movwf	fsr2l,c
  3154  003666  3420               	rlcf	replaceOldLog@i_1098+1,w,c
  3155  003668  6EDA               	movwf	fsr2h,c
  3156  00366A  0E27               	movlw	low (_logs+384)
  3157  00366C  26D9               	addwf	fsr2l,f,c
  3158  00366E  0E03               	movlw	high (_logs+384)
  3159  003670  22DA               	addwfc	fsr2h,f,c
  3160  003672  90D8               	bcf	status,0,c
  3161  003674  341F               	rlcf	replaceOldLog@i_1098,w,c
  3162  003676  6EE1               	movwf	fsr1l,c
  3163  003678  3420               	rlcf	replaceOldLog@i_1098+1,w,c
  3164  00367A  6EE2               	movwf	fsr1h,c
  3165  00367C  0EC7               	movlw	low (_logs+288)
  3166  00367E  26E1               	addwf	fsr1l,f,c
  3167  003680  0E02               	movlw	high (_logs+288)
  3168  003682  22E2               	addwfc	fsr1h,f,c
  3169  003684  CFDE FFE6          	movff	postinc2,postinc1
  3170  003688  CFDD FFE5          	movff	postdec2,postdec1
  3171                           
  3172                           ;main.c: 1370:     }
  3173  00368C  4A1F               	infsnz	replaceOldLog@i_1098,f,c
  3174  00368E  2A20               	incf	replaceOldLog@i_1098+1,f,c
  3175  003690  BE20               	btfsc	replaceOldLog@i_1098+1,7,c
  3176  003692  D7E6               	goto	l10569
  3177  003694  5020               	movf	replaceOldLog@i_1098+1,w,c
  3178  003696  E104               	bnz	u11970
  3179  003698  0E30               	movlw	48
  3180  00369A  5C1F               	subwf	replaceOldLog@i_1098,w,c
  3181  00369C  A0D8               	btfss	status,0,c
  3182  00369E  D7E0               	goto	l10569
  3183  0036A0                     u11970:
  3184                           
  3185                           ;main.c: 1372:     for (int i = 0; i< 48; i++){
  3186  0036A0  0E00               	movlw	0
  3187  0036A2  6E22               	movwf	replaceOldLog@i_1099+1,c
  3188  0036A4  0E00               	movlw	0
  3189  0036A6  6E21               	movwf	replaceOldLog@i_1099,c
  3190  0036A8                     l10581:
  3191                           
  3192                           ;main.c: 1373:         logs[4][i] = logs[0][i];
  3193  0036A8  90D8               	bcf	status,0,c
  3194  0036AA  3421               	rlcf	replaceOldLog@i_1099,w,c
  3195  0036AC  6ED9               	movwf	fsr2l,c
  3196  0036AE  3422               	rlcf	replaceOldLog@i_1099+1,w,c
  3197  0036B0  6EDA               	movwf	fsr2h,c
  3198  0036B2  0EA7               	movlw	low _logs
  3199  0036B4  26D9               	addwf	fsr2l,f,c
  3200  0036B6  0E01               	movlw	high _logs
  3201  0036B8  22DA               	addwfc	fsr2h,f,c
  3202  0036BA  90D8               	bcf	status,0,c
  3203  0036BC  3421               	rlcf	replaceOldLog@i_1099,w,c
  3204  0036BE  6EE1               	movwf	fsr1l,c
  3205  0036C0  3422               	rlcf	replaceOldLog@i_1099+1,w,c
  3206  0036C2  6EE2               	movwf	fsr1h,c
  3207  0036C4  0E27               	movlw	low (_logs+384)
  3208  0036C6  26E1               	addwf	fsr1l,f,c
  3209  0036C8  0E03               	movlw	high (_logs+384)
  3210  0036CA  22E2               	addwfc	fsr1h,f,c
  3211  0036CC  CFDE FFE6          	movff	postinc2,postinc1
  3212  0036D0  CFDD FFE5          	movff	postdec2,postdec1
  3213                           
  3214                           ;main.c: 1374:     }
  3215  0036D4  4A21               	infsnz	replaceOldLog@i_1099,f,c
  3216  0036D6  2A22               	incf	replaceOldLog@i_1099+1,f,c
  3217  0036D8  BE22               	btfsc	replaceOldLog@i_1099+1,7,c
  3218  0036DA  D7E6               	goto	l10581
  3219  0036DC  5022               	movf	replaceOldLog@i_1099+1,w,c
  3220  0036DE  E104               	bnz	u11980
  3221  0036E0  0E30               	movlw	48
  3222  0036E2  5C21               	subwf	replaceOldLog@i_1099,w,c
  3223  0036E4  A0D8               	btfss	status,0,c
  3224  0036E6  D7E0               	goto	l10581
  3225  0036E8                     u11980:
  3226                           
  3227                           ;main.c: 1375:     saveLogs();
  3228  0036E8  EC04  F01D         	call	_saveLogs	;wreg free
  3229                           
  3230                           ;main.c: 1376:     robotInit();
  3231  0036EC  EC1D  F023         	call	_robotInit	;wreg free
  3232  0036F0  0012               	return		;funcret
  3233  0036F2                     __end_of_replaceOldLog:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _saveLogs *****************
  3237 ;; Defined at:
  3238 ;;		line 327 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  j               2   20[COMRAM] int 
  3243 ;;  i               2   17[COMRAM] int 
  3244 ;;  bigNum          2   15[COMRAM] int 
  3245 ;;  x               1   19[COMRAM] unsigned char 
  3246 ;;  a               1   14[COMRAM] unsigned char 
  3247 ;;  b               1   13[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:       11 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    3
  3264 ;; This function calls:
  3265 ;;		___awmod
  3266 ;;		___wmul
  3267 ;;		_ee_write_byte
  3268 ;; This function is called by:
  3269 ;;		_replaceOldLog
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text3
  3274  003A08                     __ptext3:
  3275                           	opt callstack 0
  3276  003A08                     _saveLogs:
  3277                           	opt callstack 26
  3278                           
  3279                           ;main.c: 329:     int bigNum;;main.c: 330:     unsigned char a;;main.c: 331:     unsigne
      +                          d char b;;main.c: 333:     unsigned char x = 0x00;
  3280                           
  3281                           ;incstack = 0
  3282  003A08  0E00               	movlw	0
  3283  003A0A  6E14               	movwf	saveLogs@x,c
  3284                           
  3285                           ;main.c: 334:     for (int i = 1 ; i < 5; i++){
  3286  003A0C  0E00               	movlw	0
  3287  003A0E  6E13               	movwf	saveLogs@i+1,c
  3288  003A10  0E01               	movlw	1
  3289  003A12  6E12               	movwf	saveLogs@i,c
  3290  003A14                     l9789:
  3291                           
  3292                           ;main.c: 335:         for (int j = 0; j < 48; j++){
  3293  003A14  0E00               	movlw	0
  3294  003A16  6E16               	movwf	saveLogs@j+1,c
  3295  003A18  0E00               	movlw	0
  3296  003A1A  6E15               	movwf	saveLogs@j,c
  3297  003A1C                     l9795:
  3298                           
  3299                           ;main.c: 336:             bigNum = logs[i][j];
  3300  003A1C  C012  F006         	movff	saveLogs@i,___wmul@multiplier
  3301  003A20  C013  F007         	movff	saveLogs@i+1,___wmul@multiplier+1
  3302  003A24  0E00               	movlw	0
  3303  003A26  6E09               	movwf	___wmul@multiplicand+1,c
  3304  003A28  0E60               	movlw	96
  3305  003A2A  6E08               	movwf	___wmul@multiplicand,c
  3306  003A2C  EC81  F024         	call	___wmul	;wreg free
  3307  003A30  0EA7               	movlw	low _logs
  3308  003A32  6E0C               	movwf	??_saveLogs& (0+255),c
  3309  003A34  0E01               	movlw	high _logs
  3310  003A36  6E0D               	movwf	(??_saveLogs+1)& (0+255),c
  3311  003A38  5006               	movf	?___wmul,w,c
  3312  003A3A  260C               	addwf	??_saveLogs,f,c
  3313  003A3C  5007               	movf	?___wmul+1,w,c
  3314  003A3E  220D               	addwfc	??_saveLogs+1,f,c
  3315  003A40  90D8               	bcf	status,0,c
  3316  003A42  3415               	rlcf	saveLogs@j,w,c
  3317  003A44  6ED9               	movwf	fsr2l,c
  3318  003A46  3416               	rlcf	saveLogs@j+1,w,c
  3319  003A48  6EDA               	movwf	fsr2h,c
  3320  003A4A  500C               	movf	??_saveLogs,w,c
  3321  003A4C  26D9               	addwf	fsr2l,f,c
  3322  003A4E  500D               	movf	??_saveLogs+1,w,c
  3323  003A50  22DA               	addwfc	fsr2h,f,c
  3324  003A52  CFDE F010          	movff	postinc2,saveLogs@bigNum
  3325  003A56  CFDD F011          	movff	postdec2,saveLogs@bigNum+1
  3326                           
  3327                           ;main.c: 337:             if ( j >= 5 && (j-5)%3 == 0){
  3328  003A5A  BE16               	btfsc	saveLogs@j+1,7,c
  3329  003A5C  D02B               	goto	l268
  3330  003A5E  5016               	movf	saveLogs@j+1,w,c
  3331  003A60  E104               	bnz	u11280
  3332  003A62  0E05               	movlw	5
  3333  003A64  5C15               	subwf	saveLogs@j,w,c
  3334  003A66  A0D8               	btfss	status,0,c
  3335  003A68  D025               	goto	l268
  3336  003A6A                     u11280:
  3337  003A6A  0EFB               	movlw	251
  3338  003A6C  2415               	addwf	saveLogs@j,w,c
  3339  003A6E  6E06               	movwf	___awmod@dividend,c
  3340  003A70  0EFF               	movlw	255
  3341  003A72  2016               	addwfc	saveLogs@j+1,w,c
  3342  003A74  6E07               	movwf	___awmod@dividend+1,c
  3343  003A76  0E00               	movlw	0
  3344  003A78  6E09               	movwf	___awmod@divisor+1,c
  3345  003A7A  0E03               	movlw	3
  3346  003A7C  6E08               	movwf	___awmod@divisor,c
  3347  003A7E  ECD3  F020         	call	___awmod	;wreg free
  3348  003A82  5006               	movf	?___awmod,w,c
  3349  003A84  1007               	iorwf	?___awmod+1,w,c
  3350  003A86  A4D8               	btfss	status,2,c
  3351  003A88  D015               	goto	l268
  3352                           
  3353                           ;main.c: 339:                 a = (unsigned char)((bigNum >> 8) & 0xFF);
  3354  003A8A  5011               	movf	saveLogs@bigNum+1,w,c
  3355  003A8C  6E0F               	movwf	saveLogs@a,c
  3356                           
  3357                           ;main.c: 340:                 b = (unsigned char)(bigNum & 0xFF);
  3358  003A8E  C010  F00E         	movff	saveLogs@bigNum,saveLogs@b
  3359                           
  3360                           ;main.c: 343:                 ee_write_byte(x, &a);
  3361  003A92  0E0F               	movlw	low saveLogs@a
  3362  003A94  6E06               	movwf	ee_write_byte@_data,c
  3363  003A96  0E00               	movlw	high saveLogs@a
  3364  003A98  6E07               	movwf	ee_write_byte@_data+1,c
  3365  003A9A  5014               	movf	saveLogs@x,w,c
  3366  003A9C  EC17  F024         	call	_ee_write_byte
  3367                           
  3368                           ;main.c: 344:                 ee_write_byte(x+1, &b);
  3369  003AA0  0E0E               	movlw	low saveLogs@b
  3370  003AA2  6E06               	movwf	ee_write_byte@_data,c
  3371  003AA4  0E00               	movlw	high saveLogs@b
  3372  003AA6  6E07               	movwf	ee_write_byte@_data+1,c
  3373  003AA8  2814               	incf	saveLogs@x,w,c
  3374  003AAA  EC17  F024         	call	_ee_write_byte
  3375                           
  3376                           ;main.c: 345:                 x+=2;
  3377  003AAE  0E02               	movlw	2
  3378  003AB0  2614               	addwf	saveLogs@x,f,c
  3379                           
  3380                           ;main.c: 346:             } else {
  3381  003AB2  D00A               	goto	l9815
  3382  003AB4                     l268:
  3383                           
  3384                           ;main.c: 347:                 a = (unsigned char)(bigNum & 0xFF);
  3385  003AB4  C010  F00F         	movff	saveLogs@bigNum,saveLogs@a
  3386                           
  3387                           ;main.c: 348:                 ee_write_byte(x, &a);
  3388  003AB8  0E0F               	movlw	low saveLogs@a
  3389  003ABA  6E06               	movwf	ee_write_byte@_data,c
  3390  003ABC  0E00               	movlw	high saveLogs@a
  3391  003ABE  6E07               	movwf	ee_write_byte@_data+1,c
  3392  003AC0  5014               	movf	saveLogs@x,w,c
  3393  003AC2  EC17  F024         	call	_ee_write_byte
  3394                           
  3395                           ;main.c: 349:                 x++;
  3396  003AC6  2A14               	incf	saveLogs@x,f,c
  3397  003AC8                     l9815:
  3398                           
  3399                           ;main.c: 356:         }
  3400  003AC8  4A15               	infsnz	saveLogs@j,f,c
  3401  003ACA  2A16               	incf	saveLogs@j+1,f,c
  3402  003ACC  BE16               	btfsc	saveLogs@j+1,7,c
  3403  003ACE  D7A6               	goto	l9795
  3404  003AD0  5016               	movf	saveLogs@j+1,w,c
  3405  003AD2  E104               	bnz	u11300
  3406  003AD4  0E30               	movlw	48
  3407  003AD6  5C15               	subwf	saveLogs@j,w,c
  3408  003AD8  A0D8               	btfss	status,0,c
  3409  003ADA  D7A0               	goto	l9795
  3410  003ADC                     u11300:
  3411                           
  3412                           ;main.c: 357:     }
  3413  003ADC  4A12               	infsnz	saveLogs@i,f,c
  3414  003ADE  2A13               	incf	saveLogs@i+1,f,c
  3415  003AE0  BE13               	btfsc	saveLogs@i+1,7,c
  3416  003AE2  D798               	goto	l9789
  3417  003AE4  5013               	movf	saveLogs@i+1,w,c
  3418  003AE6  E105               	bnz	u11310
  3419  003AE8  0E05               	movlw	5
  3420  003AEA  5C12               	subwf	saveLogs@i,w,c
  3421  003AEC  B0D8               	btfsc	status,0,c
  3422  003AEE  0012               	return	
  3423  003AF0  D791               	goto	l9789
  3424  003AF2                     u11310:
  3425  003AF2  0012               	return		;funcret
  3426  003AF4                     __end_of_saveLogs:
  3427                           	opt callstack 0
  3428                           
  3429 ;; *************** function _ee_write_byte *****************
  3430 ;; Defined at:
  3431 ;;		line 265 in file "main.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  address         1    wreg     unsigned char 
  3434 ;;  _data           2    5[COMRAM] PTR unsigned char 
  3435 ;;		 -> mainEEPROMTest@b(1), mainEEPROMTest@a(1), mainEEPROM@b(1), mainEEPROM@a(1), 
  3436 ;;		 -> saveLogs@b(1), saveLogs@a(1), saveLogsOld@b(1), saveLogsOld@a(1), 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  address         1    7[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr2l, fsr2h, status,2
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;Total ram usage:        3 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    2
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_saveLogs
  3459 ;;		_saveLogsOld
  3460 ;;		_mainEEPROM
  3461 ;;		_mainEEPROMTest
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text4
  3466  00482E                     __ptext4:
  3467                           	opt callstack 0
  3468  00482E                     _ee_write_byte:
  3469                           	opt callstack 26
  3470                           
  3471                           ;incstack = 0
  3472                           ;ee_write_byte@address stored from wreg
  3473  00482E  6E08               	movwf	ee_write_byte@address,c
  3474                           
  3475                           ;main.c: 267:     EEDATA = *_data;
  3476  004830  C006  FFD9         	movff	ee_write_byte@_data,fsr2l
  3477  004834  C007  FFDA         	movff	ee_write_byte@_data+1,fsr2h
  3478  004838  50DF               	movf	indf2,w,c
  3479  00483A  6EA8               	movwf	4008,c	;volatile
  3480                           
  3481                           ;main.c: 268:     EEADR = address;
  3482  00483C  C008  FFA9         	movff	ee_write_byte@address,4009	;volatile
  3483                           
  3484                           ;main.c: 270:     EECON1bits.EEPGD = 0;
  3485  004840  9EA6               	bcf	4006,7,c	;volsfr
  3486                           
  3487                           ;main.c: 271:     EECON1bits.CFGS = 0;
  3488  004842  9CA6               	bcf	4006,6,c	;volsfr
  3489                           
  3490                           ;main.c: 272:     EECON1bits.WREN = 1;
  3491  004844  84A6               	bsf	4006,2,c	;volsfr
  3492                           
  3493                           ;main.c: 273:     INTCONbits.GIE = 0;
  3494  004846  9EF2               	bcf	4082,7,c	;volatile
  3495                           
  3496                           ;main.c: 274:     EECON2 = 0x55;
  3497  004848  0E55               	movlw	85
  3498  00484A  6EA7               	movwf	4007,c	;volsfr
  3499                           
  3500                           ;main.c: 275:     EECON2 = 0x0AA;
  3501  00484C  0EAA               	movlw	170
  3502  00484E  6EA7               	movwf	4007,c	;volsfr
  3503                           
  3504                           ;main.c: 276:     EECON1bits.WR = 1;
  3505  004850  82A6               	bsf	4006,1,c	;volsfr
  3506  004852                     l245:
  3507  004852  0004               	clrwdt		;# 
  3508                           
  3509                           ;main.c: 279:         } while(EECON1bits.WR);
  3510  004854  B2A6               	btfsc	4006,1,c	;volsfr
  3511  004856  D7FD               	goto	l245
  3512                           
  3513                           ;main.c: 280:     EECON1bits.WREN=0;
  3514  004858  94A6               	bcf	4006,2,c	;volsfr
  3515  00485A  0012               	return		;funcret
  3516  00485C                     __end_of_ee_write_byte:
  3517                           	opt callstack 0
  3518                           
  3519 ;; *************** function _robotInit *****************
  3520 ;; Defined at:
  3521 ;;		line 1308 in file "main.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    7
  3542 ;; This function calls:
  3543 ;;		_EncoderInit
  3544 ;;		_I2C_Master_Init
  3545 ;;		_initLCD
  3546 ;; This function is called by:
  3547 ;;		_replaceOldLog
  3548 ;;		_main
  3549 ;;		_mainEEPROM
  3550 ;;		_mainEEPROMTest
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text5
  3555  00463A                     __ptext5:
  3556                           	opt callstack 0
  3557  00463A                     _robotInit:
  3558                           	opt callstack 23
  3559                           
  3560                           ;main.c: 1310:     EncoderInit();
  3561                           
  3562                           ;incstack = 0
  3563  00463A  EC06  F025         	call	_EncoderInit	;wreg free
  3564                           
  3565                           ;main.c: 1314:     LATD = 0x00;
  3566  00463E  0E00               	movlw	0
  3567  004640  6E8C               	movwf	3980,c	;volatile
  3568                           
  3569                           ;main.c: 1315:     TRISD = 0x00;
  3570  004642  0E00               	movlw	0
  3571  004644  6E95               	movwf	3989,c	;volatile
  3572                           
  3573                           ;main.c: 1318:     LATB = 0x00;
  3574  004646  0E00               	movlw	0
  3575  004648  6E8A               	movwf	3978,c	;volatile
  3576                           
  3577                           ;main.c: 1319:     TRISBbits.TRISB1 = 1;
  3578  00464A  8293               	bsf	3987,1,c	;volatile
  3579                           
  3580                           ;main.c: 1320:     TRISBbits.TRISB4 = 1;
  3581  00464C  8893               	bsf	3987,4,c	;volatile
  3582                           
  3583                           ;main.c: 1321:     TRISBbits.TRISB5 = 1;
  3584  00464E  8A93               	bsf	3987,5,c	;volatile
  3585                           
  3586                           ;main.c: 1322:     TRISBbits.TRISB6 = 1;
  3587  004650  8C93               	bsf	3987,6,c	;volatile
  3588                           
  3589                           ;main.c: 1323:     TRISBbits.TRISB7 = 1;
  3590  004652  8E93               	bsf	3987,7,c	;volatile
  3591                           
  3592                           ;main.c: 1326:     TRISBbits.TRISB3 = 0;
  3593  004654  9693               	bcf	3987,3,c	;volatile
  3594                           
  3595                           ;main.c: 1327:     TRISAbits.TRISA5 = 0;
  3596  004656  9A92               	bcf	3986,5,c	;volatile
  3597                           
  3598                           ;main.c: 1330:     TRISAbits.TRISA4 = 0;
  3599  004658  9892               	bcf	3986,4,c	;volatile
  3600                           
  3601                           ;main.c: 1331:     LATAbits.LATA4 = 0;
  3602  00465A  9889               	bcf	3977,4,c	;volatile
  3603                           
  3604                           ;main.c: 1334:     I2C_Master_Init(100000);
  3605  00465C  0EA0               	movlw	160
  3606  00465E  6E13               	movwf	I2C_Master_Init@clockFreq,c
  3607  004660  0E86               	movlw	134
  3608  004662  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  3609  004664  0E01               	movlw	1
  3610  004666  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  3611  004668  0E00               	movlw	0
  3612  00466A  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  3613  00466C  ECDB  F021         	call	_I2C_Master_Init	;wreg free
  3614                           
  3615                           ;main.c: 1341:     ADCON1 = 0b00001111;
  3616  004670  0E0F               	movlw	15
  3617  004672  6EC1               	movwf	4033,c	;volatile
  3618                           
  3619                           ;main.c: 1344:     INT1IE = 1;
  3620  004674  86F0               	bsf	4080,3,c	;volatile
  3621                           
  3622                           ;main.c: 1347:     initLCD();
  3623  004676  EC41  F021         	call	_initLCD	;wreg free
  3624                           
  3625                           ;main.c: 1350:     (INTCONbits.GIE = 1);
  3626  00467A  8EF2               	bsf	4082,7,c	;volatile
  3627  00467C  0012               	return		;funcret
  3628  00467E                     __end_of_robotInit:
  3629                           	opt callstack 0
  3630                           
  3631 ;; *************** function _initLCD *****************
  3632 ;; Defined at:
  3633 ;;		line 69 in file "lcd.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    6
  3654 ;; This function calls:
  3655 ;;		_lcdInst
  3656 ;;		_send_byte
  3657 ;;		_send_nibble
  3658 ;; This function is called by:
  3659 ;;		_robotInit
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text6
  3664  004282                     __ptext6:
  3665                           	opt callstack 0
  3666  004282                     _initLCD:
  3667                           	opt callstack 23
  3668                           
  3669                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3670                           
  3671                           ;incstack = 0
  3672  004282  0E31               	movlw	49
  3673  004284  6E0A               	movwf	??_initLCD& (0+255),c
  3674  004286  0EB2               	movlw	178
  3675  004288                     u12667:
  3676  004288  2EE8               	decfsz	wreg,f,c
  3677  00428A  D7FE               	bra	u12667
  3678  00428C  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3679  00428E  D7FC               	bra	u12667
  3680  004290  D000               	nop2	
  3681                           
  3682                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3683  004292  948C               	bcf	3980,2,c	;volatile
  3684                           
  3685                           ;lcd.c: 74:     send_nibble(0b0011);
  3686  004294  0E03               	movlw	3
  3687  004296  EC12  F025         	call	_send_nibble
  3688                           
  3689                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3690  00429A  0E11               	movlw	17
  3691  00429C  6E0A               	movwf	??_initLCD& (0+255),c
  3692  00429E  0E3A               	movlw	58
  3693  0042A0                     u12677:
  3694  0042A0  2EE8               	decfsz	wreg,f,c
  3695  0042A2  D7FE               	bra	u12677
  3696  0042A4  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3697  0042A6  D7FC               	bra	u12677
  3698  0042A8  D000               	nop2	
  3699                           
  3700                           ;lcd.c: 76:     send_nibble(0b0011);
  3701  0042AA  0E03               	movlw	3
  3702  0042AC  EC12  F025         	call	_send_nibble
  3703                           
  3704                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3705  0042B0  0E7D               	movlw	125
  3706  0042B2                     u12687:
  3707  0042B2  2EE8               	decfsz	wreg,f,c
  3708  0042B4  D7FE               	bra	u12687
  3709                           
  3710                           ;lcd.c: 78:     send_byte(0b00110010);
  3711  0042B6  0E32               	movlw	50
  3712  0042B8  EC30  F025         	call	_send_byte
  3713                           
  3714                           ;lcd.c: 80:     send_byte(0b00101000);
  3715  0042BC  0E28               	movlw	40
  3716  0042BE  EC30  F025         	call	_send_byte
  3717                           
  3718                           ;lcd.c: 81:     send_byte(0b00001000);
  3719  0042C2  0E08               	movlw	8
  3720  0042C4  EC30  F025         	call	_send_byte
  3721                           
  3722                           ;lcd.c: 82:     send_byte(0b00000001);
  3723  0042C8  0E01               	movlw	1
  3724  0042CA  EC30  F025         	call	_send_byte
  3725                           
  3726                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3727  0042CE  0E11               	movlw	17
  3728  0042D0  6E0A               	movwf	??_initLCD& (0+255),c
  3729  0042D2  0E3A               	movlw	58
  3730  0042D4                     u12697:
  3731  0042D4  2EE8               	decfsz	wreg,f,c
  3732  0042D6  D7FE               	bra	u12697
  3733  0042D8  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3734  0042DA  D7FC               	bra	u12697
  3735  0042DC  D000               	nop2	
  3736                           
  3737                           ;lcd.c: 84:     send_byte(0b00000110);
  3738  0042DE  0E06               	movlw	6
  3739  0042E0  EC30  F025         	call	_send_byte
  3740                           
  3741                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  3742  0042E4  0E0C               	movlw	12
  3743  0042E6  EC3F  F025         	call	_lcdInst
  3744  0042EA  0012               	return		;funcret
  3745  0042EC                     __end_of_initLCD:
  3746                           	opt callstack 0
  3747                           
  3748 ;; *************** function _I2C_Master_Init *****************
  3749 ;; Defined at:
  3750 ;;		line 32 in file "I2C.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        8 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    3
  3771 ;; This function calls:
  3772 ;;		___lldiv
  3773 ;; This function is called by:
  3774 ;;		_robotInit
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text7
  3779  0043B6                     __ptext7:
  3780                           	opt callstack 0
  3781  0043B6                     _I2C_Master_Init:
  3782                           	opt callstack 26
  3783                           
  3784                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3785                           
  3786                           ;incstack = 0
  3787  0043B6  9AC6               	bcf	4038,5,c	;volatile
  3788                           
  3789                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3790  0043B8  8694               	bsf	3988,3,c	;volatile
  3791                           
  3792                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3793  0043BA  8894               	bsf	3988,4,c	;volatile
  3794                           
  3795                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3796  0043BC  0E80               	movlw	128
  3797  0043BE  6E06               	movwf	___lldiv@dividend,c
  3798  0043C0  0E96               	movlw	150
  3799  0043C2  6E07               	movwf	___lldiv@dividend+1,c
  3800  0043C4  0E98               	movlw	152
  3801  0043C6  6E08               	movwf	___lldiv@dividend+2,c
  3802  0043C8  0E00               	movlw	0
  3803  0043CA  6E09               	movwf	___lldiv@dividend+3,c
  3804  0043CC  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3805  0043D0  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3806  0043D4  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3807  0043D8  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3808  0043DC  0E02               	movlw	2
  3809  0043DE                     u11145:
  3810  0043DE  90D8               	bcf	status,0,c
  3811  0043E0  3617               	rlcf	??_I2C_Master_Init,f,c
  3812  0043E2  3618               	rlcf	??_I2C_Master_Init+1,f,c
  3813  0043E4  3619               	rlcf	??_I2C_Master_Init+2,f,c
  3814  0043E6  361A               	rlcf	??_I2C_Master_Init+3,f,c
  3815  0043E8  2EE8               	decfsz	wreg,f,c
  3816  0043EA  D7F9               	goto	u11145
  3817  0043EC  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  3818  0043F0  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3819  0043F4  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3820  0043F8  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3821  0043FC  EC92  F020         	call	___lldiv	;wreg free
  3822  004400  0406               	decf	?___lldiv,w,c
  3823  004402  6EC8               	movwf	4040,c	;volatile
  3824                           
  3825                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3826  004404  0E80               	movlw	128
  3827  004406  6EC7               	movwf	4039,c	;volatile
  3828                           
  3829                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3830  004408  0E28               	movlw	40
  3831  00440A  6EC6               	movwf	4038,c	;volatile
  3832                           
  3833                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3834  00440C  0E00               	movlw	0
  3835  00440E  6EC5               	movwf	4037,c	;volatile
  3836  004410  0012               	return		;funcret
  3837  004412                     __end_of_I2C_Master_Init:
  3838                           	opt callstack 0
  3839                           
  3840 ;; *************** function _EncoderInit *****************
  3841 ;; Defined at:
  3842 ;;		line 194 in file "main.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    2
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_robotInit
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text8
  3871  004A0C                     __ptext8:
  3872                           	opt callstack 0
  3873  004A0C                     _EncoderInit:
  3874                           	opt callstack 27
  3875                           
  3876                           ;main.c: 195:   motorBDirection = 1;
  3877                           
  3878                           ;incstack = 0
  3879  004A0C  0E01               	movlw	1
  3880  004A0E  0100               	movlb	0	; () banked
  3881  004A10  6FF2               	movwf	_motorBDirection& (0+255),b	;volatile
  3882                           
  3883                           ;main.c: 196:   motorADirection = 1;
  3884  004A12  0E01               	movlw	1
  3885  004A14  6FF1               	movwf	_motorADirection& (0+255),b	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;main.c: 199:   TRISCbits.TRISC0 = 1;
  3889  004A16  8094               	bsf	3988,0,c	;volatile
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;main.c: 200:   TRISEbits.TRISE1 = 1;
  3893  004A18  8296               	bsf	3990,1,c	;volatile
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 201:   TRISBbits.TRISB2 = 1;
  3897  004A1A  8493               	bsf	3987,2,c	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;main.c: 202:   TRISBbits.TRISB0 = 1;
  3901  004A1C  8093               	bsf	3987,0,c	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;main.c: 205:   INT2IE = 1;
  3905  004A1E  88F0               	bsf	4080,4,c	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 207:   INT0IE = 1;
  3909  004A20  88F2               	bsf	4082,4,c	;volatile
  3910                           
  3911                           ; BSR set to: 0
  3912  004A22  0012               	return		;funcret
  3913  004A24                     __end_of_EncoderInit:
  3914                           	opt callstack 0
  3915                           
  3916 ;; *************** function _readLogs *****************
  3917 ;; Defined at:
  3918 ;;		line 396 in file "main.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  j               2   20[COMRAM] int 
  3923 ;;  i               2   16[COMRAM] int 
  3924 ;;  bigNum          2   14[COMRAM] int 
  3925 ;;  a               1   19[COMRAM] unsigned char 
  3926 ;;  x               1   18[COMRAM] unsigned char 
  3927 ;;  b               1   13[COMRAM] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;Total ram usage:       11 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    3
  3944 ;; This function calls:
  3945 ;;		___awmod
  3946 ;;		___wmul
  3947 ;;		_ee_read_byte
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text9
  3954  003816                     __ptext9:
  3955                           	opt callstack 0
  3956  003816                     _readLogs:
  3957                           	opt callstack 27
  3958                           
  3959                           ;main.c: 398:     int bigNum;;main.c: 399:     unsigned char a;;main.c: 400:     unsigne
      +                          d char b;;main.c: 402:     unsigned char x = 0x00;
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;incstack = 0
  3963  003816  0E00               	movlw	0
  3964  003818  6E13               	movwf	readLogs@x,c
  3965                           
  3966                           ;main.c: 403:     for (int i = 1 ; i < 5; i++){
  3967  00381A  0E00               	movlw	0
  3968  00381C  6E12               	movwf	readLogs@i+1,c
  3969  00381E  0E01               	movlw	1
  3970  003820  6E11               	movwf	readLogs@i,c
  3971  003822                     l10167:
  3972                           
  3973                           ;main.c: 404:         for (int j = 0; j < 48; j++){
  3974  003822  0E00               	movlw	0
  3975  003824  6E16               	movwf	readLogs@j+1,c
  3976  003826  0E00               	movlw	0
  3977  003828  6E15               	movwf	readLogs@j,c
  3978  00382A                     l10173:
  3979                           
  3980                           ;main.c: 405:             if ( j >= 5 && (j-5)%3 == 0){
  3981  00382A  BE16               	btfsc	readLogs@j+1,7,c
  3982  00382C  D036               	goto	l10185
  3983  00382E  5016               	movf	readLogs@j+1,w,c
  3984  003830  E104               	bnz	u11650
  3985  003832  0E05               	movlw	5
  3986  003834  5C15               	subwf	readLogs@j,w,c
  3987  003836  A0D8               	btfss	status,0,c
  3988  003838  D030               	goto	l10185
  3989  00383A                     u11650:
  3990  00383A  0EFB               	movlw	251
  3991  00383C  2415               	addwf	readLogs@j,w,c
  3992  00383E  6E06               	movwf	___awmod@dividend,c
  3993  003840  0EFF               	movlw	255
  3994  003842  2016               	addwfc	readLogs@j+1,w,c
  3995  003844  6E07               	movwf	___awmod@dividend+1,c
  3996  003846  0E00               	movlw	0
  3997  003848  6E09               	movwf	___awmod@divisor+1,c
  3998  00384A  0E03               	movlw	3
  3999  00384C  6E08               	movwf	___awmod@divisor,c
  4000  00384E  ECD3  F020         	call	___awmod	;wreg free
  4001  003852  5006               	movf	?___awmod,w,c
  4002  003854  1007               	iorwf	?___awmod+1,w,c
  4003  003856  A4D8               	btfss	status,2,c
  4004  003858  D020               	goto	l10185
  4005                           
  4006                           ;main.c: 406:                 ee_read_byte(x, &a);
  4007  00385A  0E14               	movlw	low readLogs@a
  4008  00385C  6E06               	movwf	ee_read_byte@_data,c
  4009  00385E  0E00               	movlw	high readLogs@a
  4010  003860  6E07               	movwf	ee_read_byte@_data+1,c
  4011  003862  5013               	movf	readLogs@x,w,c
  4012  003864  ECF9  F024         	call	_ee_read_byte
  4013                           
  4014                           ;main.c: 407:                 ee_read_byte(x+1, &b);
  4015  003868  0E0E               	movlw	low readLogs@b
  4016  00386A  6E06               	movwf	ee_read_byte@_data,c
  4017  00386C  0E00               	movlw	high readLogs@b
  4018  00386E  6E07               	movwf	ee_read_byte@_data+1,c
  4019  003870  2813               	incf	readLogs@x,w,c
  4020  003872  ECF9  F024         	call	_ee_read_byte
  4021                           
  4022                           ;main.c: 408:                 x+=2;
  4023  003876  0E02               	movlw	2
  4024  003878  2613               	addwf	readLogs@x,f,c
  4025                           
  4026                           ;main.c: 409:                 bigNum = a;
  4027  00387A  C014  F00F         	movff	readLogs@a,readLogs@bigNum
  4028  00387E  6A10               	clrf	readLogs@bigNum+1,c
  4029                           
  4030                           ;main.c: 410:                 bigNum = (bigNum << 8) | b ;
  4031  003880  500E               	movf	readLogs@b,w,c
  4032  003882  C00F  F00C         	movff	readLogs@bigNum,??_readLogs
  4033  003886  C010  F00D         	movff	readLogs@bigNum+1,??_readLogs+1
  4034  00388A  C00C  F00D         	movff	??_readLogs,??_readLogs+1
  4035  00388E  6A0C               	clrf	??_readLogs,c
  4036  003890  100C               	iorwf	??_readLogs,w,c
  4037  003892  6E0F               	movwf	readLogs@bigNum,c
  4038  003894  500D               	movf	??_readLogs+1,w,c
  4039  003896  6E10               	movwf	readLogs@bigNum+1,c
  4040                           
  4041                           ;main.c: 411:             } else {
  4042  003898  D00B               	goto	l10191
  4043  00389A                     l10185:
  4044                           
  4045                           ;main.c: 412:                 ee_read_byte(x, &a);
  4046  00389A  0E14               	movlw	low readLogs@a
  4047  00389C  6E06               	movwf	ee_read_byte@_data,c
  4048  00389E  0E00               	movlw	high readLogs@a
  4049  0038A0  6E07               	movwf	ee_read_byte@_data+1,c
  4050  0038A2  5013               	movf	readLogs@x,w,c
  4051  0038A4  ECF9  F024         	call	_ee_read_byte
  4052                           
  4053                           ;main.c: 413:                 x++;
  4054  0038A8  2A13               	incf	readLogs@x,f,c
  4055                           
  4056                           ;main.c: 414:                 bigNum = a;
  4057  0038AA  C014  F00F         	movff	readLogs@a,readLogs@bigNum
  4058  0038AE  6A10               	clrf	readLogs@bigNum+1,c
  4059  0038B0                     l10191:
  4060                           
  4061                           ;main.c: 420:             logs[i][j] = bigNum;
  4062  0038B0  C011  F006         	movff	readLogs@i,___wmul@multiplier
  4063  0038B4  C012  F007         	movff	readLogs@i+1,___wmul@multiplier+1
  4064  0038B8  0E00               	movlw	0
  4065  0038BA  6E09               	movwf	___wmul@multiplicand+1,c
  4066  0038BC  0E60               	movlw	96
  4067  0038BE  6E08               	movwf	___wmul@multiplicand,c
  4068  0038C0  EC81  F024         	call	___wmul	;wreg free
  4069  0038C4  0EA7               	movlw	low _logs
  4070  0038C6  6E0C               	movwf	??_readLogs& (0+255),c
  4071  0038C8  0E01               	movlw	high _logs
  4072  0038CA  6E0D               	movwf	(??_readLogs+1)& (0+255),c
  4073  0038CC  5006               	movf	?___wmul,w,c
  4074  0038CE  260C               	addwf	??_readLogs,f,c
  4075  0038D0  5007               	movf	?___wmul+1,w,c
  4076  0038D2  220D               	addwfc	??_readLogs+1,f,c
  4077  0038D4  90D8               	bcf	status,0,c
  4078  0038D6  3415               	rlcf	readLogs@j,w,c
  4079  0038D8  6ED9               	movwf	fsr2l,c
  4080  0038DA  3416               	rlcf	readLogs@j+1,w,c
  4081  0038DC  6EDA               	movwf	fsr2h,c
  4082  0038DE  500C               	movf	??_readLogs,w,c
  4083  0038E0  26D9               	addwf	fsr2l,f,c
  4084  0038E2  500D               	movf	??_readLogs+1,w,c
  4085  0038E4  22DA               	addwfc	fsr2h,f,c
  4086  0038E6  C00F  FFDE         	movff	readLogs@bigNum,postinc2
  4087  0038EA  C010  FFDD         	movff	readLogs@bigNum+1,postdec2
  4088                           
  4089                           ;main.c: 421:         }
  4090  0038EE  4A15               	infsnz	readLogs@j,f,c
  4091  0038F0  2A16               	incf	readLogs@j+1,f,c
  4092  0038F2  BE16               	btfsc	readLogs@j+1,7,c
  4093  0038F4  D79A               	goto	l10173
  4094  0038F6  5016               	movf	readLogs@j+1,w,c
  4095  0038F8  E104               	bnz	u11670
  4096  0038FA  0E30               	movlw	48
  4097  0038FC  5C15               	subwf	readLogs@j,w,c
  4098  0038FE  A0D8               	btfss	status,0,c
  4099  003900  D794               	goto	l10173
  4100  003902                     u11670:
  4101                           
  4102                           ;main.c: 422:     }
  4103  003902  4A11               	infsnz	readLogs@i,f,c
  4104  003904  2A12               	incf	readLogs@i+1,f,c
  4105  003906  BE12               	btfsc	readLogs@i+1,7,c
  4106  003908  D78C               	goto	l10167
  4107  00390A  5012               	movf	readLogs@i+1,w,c
  4108  00390C  E105               	bnz	u11680
  4109  00390E  0E05               	movlw	5
  4110  003910  5C11               	subwf	readLogs@i,w,c
  4111  003912  B0D8               	btfsc	status,0,c
  4112  003914  0012               	return	
  4113  003916  D785               	goto	l10167
  4114  003918                     u11680:
  4115  003918  0012               	return		;funcret
  4116  00391A                     __end_of_readLogs:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _ee_read_byte *****************
  4120 ;; Defined at:
  4121 ;;		line 284 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  address         1    wreg     unsigned char 
  4124 ;;  _data           2    5[COMRAM] PTR unsigned char 
  4125 ;;		 -> mainEEPROMTest@b(1), mainEEPROMTest@a(1), mainEEPROM@b(1), mainEEPROM@a(1), 
  4126 ;;		 -> readLogs@b(1), readLogs@a(1), readLogsOld@b(1), readLogsOld@a(1), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  address         1    7[COMRAM] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr2l, fsr2h
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;Total ram usage:        3 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    2
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_readLogs
  4149 ;;		_readLogsOld
  4150 ;;		_mainEEPROM
  4151 ;;		_mainEEPROMTest
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text10
  4156  0049F2                     __ptext10:
  4157                           	opt callstack 0
  4158  0049F2                     _ee_read_byte:
  4159                           	opt callstack 27
  4160                           
  4161                           ;incstack = 0
  4162                           ;ee_read_byte@address stored from wreg
  4163  0049F2  6E08               	movwf	ee_read_byte@address,c
  4164                           
  4165                           ;main.c: 285:     EEADR = address;
  4166  0049F4  C008  FFA9         	movff	ee_read_byte@address,4009	;volatile
  4167                           
  4168                           ;main.c: 286:     EECON1bits.CFGS = 0;
  4169  0049F8  9CA6               	bcf	4006,6,c	;volsfr
  4170                           
  4171                           ;main.c: 287:     EECON1bits.EEPGD = 0;
  4172  0049FA  9EA6               	bcf	4006,7,c	;volsfr
  4173                           
  4174                           ;main.c: 288:     EECON1bits.RD = 1;
  4175  0049FC  80A6               	bsf	4006,0,c	;volsfr
  4176                           
  4177                           ;main.c: 289:     *_data = EEDATA;
  4178  0049FE  C006  FFD9         	movff	ee_read_byte@_data,fsr2l
  4179  004A02  C007  FFDA         	movff	ee_read_byte@_data+1,fsr2h
  4180  004A06  CFA8 FFDF          	movff	4008,indf2	;volatile
  4181  004A0A  0012               	return		;funcret
  4182  004A0C                     __end_of_ee_read_byte:
  4183                           	opt callstack 0
  4184                           
  4185 ;; *************** function _doOperation *****************
  4186 ;; Defined at:
  4187 ;;		line 849 in file "main.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  startedDistB    4   12[BANK1 ] long 
  4192 ;;  startedDistA    4    8[BANK1 ] long 
  4193 ;;  PIDData         8    0[BANK1 ] long [2]
  4194 ;;  timeInOperat    4   76[BANK1 ] unsigned long 
  4195 ;;  distanceFrom    4   66[BANK1 ] long 
  4196 ;;  distanceToPo    4   62[BANK1 ] long 
  4197 ;;  motorBStartD    4   53[BANK1 ] long 
  4198 ;;  motorAStartD    4   49[BANK1 ] long 
  4199 ;;  timeStart       4   45[BANK1 ] unsigned long 
  4200 ;;  motorStartTi    4   34[BANK1 ] unsigned long 
  4201 ;;  poleNumber      2   89[BANK1 ] int 
  4202 ;;  tiresOnPole     2   87[BANK1 ] int 
  4203 ;;  tiresDeploye    2   85[BANK1 ] int 
  4204 ;;  tiresToDrop     2   82[BANK1 ] int 
  4205 ;;  distanceToPo    2   72[BANK1 ] int 
  4206 ;;  totalTiresSu    2   70[BANK1 ] int 
  4207 ;;  distanceFrom    2   60[BANK1 ] int 
  4208 ;;  counted         2   58[BANK1 ] int 
  4209 ;;  tiresOnPoleA    2   43[BANK1 ] int 
  4210 ;;  badCountBot     2   41[BANK1 ] int 
  4211 ;;  badCount        2   39[BANK1 ] int 
  4212 ;;  acceleration    2   32[BANK1 ] int 
  4213 ;;  rightRangeFi    2   30[BANK1 ] int 
  4214 ;;  leftRangeFin    2    0        int 
  4215 ;;  currentAngle    2    0        int 
  4216 ;;  error           2    0        int 
  4217 ;;  errorScaleFa    2    0        int 
  4218 ;;  motorBSpeed     2    0        int 
  4219 ;;  motorASpeed     2    0        int 
  4220 ;;  goalSpeed       2    0        int 
  4221 ;;  fourMetreEqu    2    0        int 
  4222 ;;  minimumSafeD    2    0        int 
  4223 ;;  topLaserStat    1   84[BANK1 ] _Bool 
  4224 ;;  currentOpera    1   81[BANK1 ] enum E3412
  4225 ;;  bottomLaserS    1   80[BANK1 ] _Bool 
  4226 ;;  bottomLaserS    1   75[BANK1 ] _Bool 
  4227 ;;  topLaserStat    1   74[BANK1 ] _Bool 
  4228 ;;  isDoneDrop      1   57[BANK1 ] _Bool 
  4229 ;;  send            1   38[BANK1 ] _Bool 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       4      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:       95 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:   13
  4246 ;; This function calls:
  4247 ;;		_I2C_Master_Start
  4248 ;;		_I2C_Master_Stop
  4249 ;;		_I2C_Master_Write
  4250 ;;		_TIMER_INIT
  4251 ;;		___awmod
  4252 ;;		___fldiv
  4253 ;;		___flge
  4254 ;;		___flmul
  4255 ;;		___fltol
  4256 ;;		___lldiv
  4257 ;;		___wmul
  4258 ;;		___xxtofl
  4259 ;;		_errorCorrectedMove
  4260 ;;		_init_motor_PWM
  4261 ;;		_lcdInst
  4262 ;;		_opDelay
  4263 ;;		_opErrorCorrectionDegrees
  4264 ;;		_printf
  4265 ;;		_requestIsTireDropDone
  4266 ;;		_sendArduinoAbortOperationMessage
  4267 ;;		_sendArduinoTireDropRequest
  4268 ;;		_sendArduinoTireOperationStartMessage
  4269 ;;		_setMotorSpeeds
  4270 ;;		_tirePositioning
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text11
  4277  000012                     __ptext11:
  4278                           	opt callstack 0
  4279  000012                     _doOperation:
  4280                           	opt callstack 17
  4281                           
  4282                           ;main.c: 850:             LATAbits.LATA5 = 0;
  4283                           
  4284                           ;incstack = 0
  4285  000012  9A89               	bcf	3977,5,c	;volatile
  4286                           
  4287                           ;main.c: 851:         LATBbits.LATB3 = 0;
  4288  000014  968A               	bcf	3978,3,c	;volatile
  4289                           
  4290                           ;main.c: 857:     I2C_Master_Start();
  4291  000016  EC53  F025         	call	_I2C_Master_Start	;wreg free
  4292                           
  4293                           ;main.c: 858:     I2C_Master_Write(0b00010000);
  4294  00001A  0E00               	movlw	0
  4295  00001C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4296  00001E  0E10               	movlw	16
  4297  000020  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4298  000022  EC45  F025         	call	_I2C_Master_Write	;wreg free
  4299                           
  4300                           ;main.c: 859:     I2C_Master_Stop();
  4301  000026  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  4302                           
  4303                           ;main.c: 862:     sendArduinoTireOperationStartMessage();
  4304  00002A  ECB7  F024         	call	_sendArduinoTireOperationStartMessage	;wreg free
  4305                           
  4306                           ;main.c: 866:     TIMER_INIT();
  4307  00002E  ECEA  F024         	call	_TIMER_INIT	;wreg free
  4308                           
  4309                           ;main.c: 867:     millisecondsMeasured = 0ul;
  4310  000032  0E00               	movlw	0
  4311  000034  6E74               	movwf	_millisecondsMeasured,c	;volatile
  4312  000036  0E00               	movlw	0
  4313  000038  6E75               	movwf	_millisecondsMeasured+1,c	;volatile
  4314  00003A  0E00               	movlw	0
  4315  00003C  6E76               	movwf	_millisecondsMeasured+2,c	;volatile
  4316  00003E  0E00               	movlw	0
  4317  000040  6E77               	movwf	_millisecondsMeasured+3,c	;volatile
  4318                           
  4319                           ;main.c: 876:  enum operationStates currentOperationState = moveForward;
  4320  000042  0E00               	movlw	0
  4321  000044  0101               	movlb	1	; () banked
  4322  000046  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  4323                           
  4324                           ; BSR set to: 1
  4325                           ;main.c: 878:  int rightRangeFinder = 0;
  4326                           
  4327                           ; BSR set to: 1
  4328  000048  0E00               	movlw	0
  4329  00004A  6F1F               	movwf	(doOperation@rightRangeFinder+1)& (0+255),b
  4330  00004C  0E00               	movlw	0
  4331  00004E  6F1E               	movwf	doOperation@rightRangeFinder& (0+255),b
  4332                           
  4333                           ; BSR set to: 1
  4334                           ;main.c: 879:  int tiresToDrop = 0;
  4335  000050  0E00               	movlw	0
  4336  000052  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4337  000054  0E00               	movlw	0
  4338  000056  6F52               	movwf	doOperation@tiresToDrop& (0+255),b
  4339                           
  4340                           ; BSR set to: 1
  4341                           ;main.c: 880:     int minimumSafeDistanceToPole;;main.c: 881:     int fourMetreEquivalen
      +                          t;;main.c: 882:     unsigned long timeInOperation = 10000ul;
  4342  000058  0E10               	movlw	16
  4343  00005A  6F4C               	movwf	doOperation@timeInOperation& (0+255),b
  4344  00005C  0E27               	movlw	39
  4345  00005E  6F4D               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  4346  000060  0E00               	movlw	0
  4347  000062  6F4E               	movwf	(doOperation@timeInOperation+2)& (0+255),b
  4348  000064  0E00               	movlw	0
  4349  000066  6F4F               	movwf	(doOperation@timeInOperation+3)& (0+255),b
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;main.c: 883:     long motorAStartDistance = motorADistance;
  4353  000068  C0DB  F131         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  4354  00006C  C0DC  F132         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  4355  000070  C0DD  F133         	movff	_motorADistance+2,doOperation@motorAStartDistance+2	;volatile
  4356  000074  C0DE  F134         	movff	_motorADistance+3,doOperation@motorAStartDistance+3	;volatile
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;main.c: 884:     long motorBStartDistance = motorBDistance;
  4360  000078  C0D7  F135         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  4361  00007C  C0D8  F136         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  4362  000080  C0D9  F137         	movff	_motorBDistance+2,doOperation@motorBStartDistance+2	;volatile
  4363  000084  C0DA  F138         	movff	_motorBDistance+3,doOperation@motorBStartDistance+3	;volatile
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;main.c: 885:     unsigned long motorStartTime = millisecondsMeasured;
  4367  000088  C074  F122         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  4368  00008C  C075  F123         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  4369  000090  C076  F124         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  4370  000094  C077  F125         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  4371                           
  4372                           ; BSR set to: 1
  4373                           ;main.c: 886:     int accelerationDelay = 0;
  4374  000098  0E00               	movlw	0
  4375  00009A  6F21               	movwf	(doOperation@accelerationDelay+1)& (0+255),b
  4376  00009C  0E00               	movlw	0
  4377  00009E  6F20               	movwf	doOperation@accelerationDelay& (0+255),b
  4378                           
  4379                           ; BSR set to: 1
  4380                           ;main.c: 888:     long PIDData[2] = {0,0};
  4381  0000A0  EE21  F000         	lfsr	2,doOperation@PIDData
  4382  0000A4  0E07               	movlw	7
  4383  0000A6                     u11691:
  4384  0000A6  6ADE               	clrf	postinc2,c
  4385  0000A8  06E8               	decf	wreg,f,c
  4386  0000AA  E2FD               	bc	u11691
  4387                           
  4388                           ; BSR set to: 1
  4389                           ;main.c: 889:     _Bool topLaserState;;main.c: 890:     _Bool topLaserStatePrev;;main.c:
      +                           891:     _Bool bottomLaserState;;main.c: 892:     _Bool bottomLaserStatePrev;;main.c: 8
      +                          93:     _Bool isDoneDrop;;main.c: 894:     init_motor_PWM();
  4390  0000AC  EC59  F024         	call	_init_motor_PWM	;wreg free
  4391                           
  4392                           ;main.c: 895:     int counted = 0;
  4393  0000B0  0E00               	movlw	0
  4394  0000B2  0101               	movlb	1	; () banked
  4395  0000B4  6F3B               	movwf	(doOperation@counted+1)& (0+255),b
  4396  0000B6  0E00               	movlw	0
  4397  0000B8  6F3A               	movwf	doOperation@counted& (0+255),b
  4398                           
  4399                           ; BSR set to: 1
  4400                           ;main.c: 896:     int badCount = 0;
  4401  0000BA  0E00               	movlw	0
  4402  0000BC  6F28               	movwf	(doOperation@badCount+1)& (0+255),b
  4403  0000BE  0E00               	movlw	0
  4404  0000C0  6F27               	movwf	doOperation@badCount& (0+255),b
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;main.c: 897:     int badCountBot = 0;
  4408  0000C2  0E00               	movlw	0
  4409  0000C4  6F2A               	movwf	(doOperation@badCountBot+1)& (0+255),b
  4410  0000C6  0E00               	movlw	0
  4411  0000C8  6F29               	movwf	doOperation@badCountBot& (0+255),b
  4412                           
  4413                           ; BSR set to: 1
  4414                           ;main.c: 900:     int poleNumber = 0;
  4415  0000CA  0E00               	movlw	0
  4416  0000CC  6F5A               	movwf	(doOperation@poleNumber+1)& (0+255),b
  4417  0000CE  0E00               	movlw	0
  4418  0000D0  6F59               	movwf	doOperation@poleNumber& (0+255),b
  4419                           
  4420                           ; BSR set to: 1
  4421                           ;main.c: 901:     int tiresDeployedOnPole = 0;
  4422  0000D2  0E00               	movlw	0
  4423  0000D4  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  4424  0000D6  0E00               	movlw	0
  4425  0000D8  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;main.c: 902:     int tiresOnPoleAfterOp = 0;
  4429  0000DA  0E00               	movlw	0
  4430  0000DC  6F2C               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  4431  0000DE  0E00               	movlw	0
  4432  0000E0  6F2B               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;main.c: 903:     int tiresOnPole = 0;
  4436  0000E2  0E00               	movlw	0
  4437  0000E4  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  4438  0000E6  0E00               	movlw	0
  4439  0000E8  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 905:     int totalTiresSupplied = 0;
  4443  0000EA  0E00               	movlw	0
  4444  0000EC  6F47               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  4445  0000EE  0E00               	movlw	0
  4446  0000F0  6F46               	movwf	doOperation@totalTiresSupplied& (0+255),b
  4447                           
  4448                           ; BSR set to: 1
  4449                           ;main.c: 907:     long distanceToPole = 0ll;
  4450  0000F2  0E00               	movlw	0
  4451  0000F4  6F3E               	movwf	doOperation@distanceToPole& (0+255),b
  4452  0000F6  0E00               	movlw	0
  4453  0000F8  6F3F               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  4454  0000FA  0E00               	movlw	0
  4455  0000FC  6F40               	movwf	(doOperation@distanceToPole+2)& (0+255),b
  4456  0000FE  0E00               	movlw	0
  4457  000100  6F41               	movwf	(doOperation@distanceToPole+3)& (0+255),b
  4458                           
  4459                           ; BSR set to: 1
  4460                           ;main.c: 908:     long distanceFromLastPole = 0ll;
  4461  000102  0E00               	movlw	0
  4462  000104  6F42               	movwf	doOperation@distanceFromLastPole& (0+255),b
  4463  000106  0E00               	movlw	0
  4464  000108  6F43               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  4465  00010A  0E00               	movlw	0
  4466  00010C  6F44               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  4467  00010E  0E00               	movlw	0
  4468  000110  6F45               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  4469                           
  4470                           ; BSR set to: 1
  4471                           ;main.c: 909:     int distanceToPoleCM = 0;
  4472  000112  0E00               	movlw	0
  4473  000114  6F49               	movwf	(doOperation@distanceToPoleCM+1)& (0+255),b
  4474  000116  0E00               	movlw	0
  4475  000118  6F48               	movwf	doOperation@distanceToPoleCM& (0+255),b
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;main.c: 910:     int distanceFromLastPoleCM = 0;
  4479  00011A  0E00               	movlw	0
  4480  00011C  6F3D               	movwf	(doOperation@distanceFromLastPoleCM+1)& (0+255),b
  4481  00011E  0E00               	movlw	0
  4482  000120  6F3C               	movwf	doOperation@distanceFromLastPoleCM& (0+255),b
  4483                           
  4484                           ; BSR set to: 1
  4485                           ;main.c: 917:     TRISAbits.TRISA0 = 0;
  4486  000122  9092               	bcf	3986,0,c	;volatile
  4487                           
  4488                           ; BSR set to: 1
  4489                           ;main.c: 918:     TRISAbits.TRISA1 = 0;
  4490  000124  9292               	bcf	3986,1,c	;volatile
  4491                           
  4492                           ; BSR set to: 1
  4493                           ;main.c: 919:     TRISAbits.TRISA2 = 0;
  4494  000126  9492               	bcf	3986,2,c	;volatile
  4495                           
  4496                           ; BSR set to: 1
  4497                           ;main.c: 920:     TRISAbits.TRISA3 = 0;
  4498  000128  9692               	bcf	3986,3,c	;volatile
  4499                           
  4500                           ; BSR set to: 1
  4501                           ;main.c: 923:     TRISAbits.TRISA4 = 0;
  4502  00012A  9892               	bcf	3986,4,c	;volatile
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;main.c: 924:     LATAbits.LATA4 = 1;
  4506  00012C  8889               	bsf	3977,4,c	;volatile
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;main.c: 925:     unsigned long timeStart = millisecondsMeasured;
  4510  00012E  C074  F12D         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  4511  000132  C075  F12E         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  4512  000136  C076  F12F         	movff	_millisecondsMeasured+2,doOperation@timeStart+2	;volatile
  4513  00013A  C077  F130         	movff	_millisecondsMeasured+3,doOperation@timeStart+3	;volatile
  4514  00013E                     l10293:
  4515                           
  4516                           ;main.c: 926:     while(millisecondsMeasured < timeStart + 100){
  4517  00013E  0E64               	movlw	100
  4518  000140  0101               	movlb	1	; () banked
  4519  000142  252D               	addwf	doOperation@timeStart& (0+255),w,b
  4520  000144  0100               	movlb	0	; () banked
  4521  000146  6FD3               	movwf	??_doOperation& (0+255),b
  4522  000148  0E00               	movlw	0
  4523  00014A  0101               	movlb	1	; () banked
  4524  00014C  212E               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  4525  00014E  0100               	movlb	0	; () banked
  4526  000150  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  4527  000152  0E00               	movlw	0
  4528  000154  0101               	movlb	1	; () banked
  4529  000156  212F               	addwfc	(doOperation@timeStart+2)& (0+255),w,b
  4530  000158  0100               	movlb	0	; () banked
  4531  00015A  6FD5               	movwf	(??_doOperation+2)& (0+255),b
  4532  00015C  0E00               	movlw	0
  4533  00015E  0101               	movlb	1	; () banked
  4534  000160  2130               	addwfc	(doOperation@timeStart+3)& (0+255),w,b
  4535  000162  0100               	movlb	0	; () banked
  4536  000164  6FD6               	movwf	(??_doOperation+3)& (0+255),b
  4537  000166  51D3               	movf	??_doOperation& (0+255),w,b
  4538  000168  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  4539  00016A  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  4540  00016C  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4541  00016E  51D5               	movf	(??_doOperation+2)& (0+255),w,b
  4542  000170  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4543  000172  51D6               	movf	(??_doOperation+3)& (0+255),w,b
  4544  000174  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4545  000176  A0D8               	btfss	status,0,c
  4546  000178  D7E2               	goto	l10293
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;main.c: 930:     topLaserState = PORTBbits.RB4;
  4550  00017A  A881               	btfss	3969,4,c	;volatile
  4551  00017C  D002               	goto	u11710
  4552  00017E  0E01               	movlw	1
  4553  000180  D001               	goto	u11716
  4554  000182                     u11710:
  4555  000182  0E00               	movlw	0
  4556  000184                     u11716:
  4557  000184  0101               	movlb	1	; () banked
  4558  000186  6F54               	movwf	doOperation@topLaserState& (0+255),b
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;main.c: 931:     topLaserStatePrev = topLaserState;
  4562  000188  C154  F14A         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  4563                           
  4564                           ;main.c: 932:     bottomLaserState = PORTBbits.RB5;
  4565  00018C  AA81               	btfss	3969,5,c	;volatile
  4566  00018E  D002               	goto	u11720
  4567  000190  0E01               	movlw	1
  4568  000192  D001               	goto	u11726
  4569  000194                     u11720:
  4570  000194  0E00               	movlw	0
  4571  000196                     u11726:
  4572  000196  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  4573                           
  4574                           ; BSR set to: 1
  4575                           ;main.c: 933:     bottomLaserStatePrev = bottomLaserState;
  4576  000198  C150  F14B         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  4577                           
  4578                           ;main.c: 941:     _Bool send = 1;
  4579  00019C  0E01               	movlw	1
  4580  00019E  6F26               	movwf	doOperation@send& (0+255),b
  4581  0001A0                     l10301:
  4582                           
  4583                           ;main.c: 948:         counted ++;
  4584  0001A0  0101               	movlb	1	; () banked
  4585  0001A2  4B3A               	infsnz	doOperation@counted& (0+255),f,b
  4586  0001A4  2B3B               	incf	(doOperation@counted+1)& (0+255),f,b
  4587                           
  4588                           ; BSR set to: 1
  4589                           ;main.c: 949:         topLaserStatePrev = topLaserState;
  4590  0001A6  C154  F14A         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;main.c: 950:         topLaserState = PORTBbits.RB4;
  4594  0001AA  A881               	btfss	3969,4,c	;volatile
  4595  0001AC  D002               	goto	u11730
  4596  0001AE  0E01               	movlw	1
  4597  0001B0  D001               	goto	u11736
  4598  0001B2                     u11730:
  4599  0001B2  0E00               	movlw	0
  4600  0001B4                     u11736:
  4601  0001B4  6F54               	movwf	doOperation@topLaserState& (0+255),b
  4602                           
  4603                           ; BSR set to: 1
  4604                           ;main.c: 951:         bottomLaserStatePrev = bottomLaserState;
  4605  0001B6  C150  F14B         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  4606                           
  4607                           ; BSR set to: 1
  4608                           ;main.c: 952:         bottomLaserState = PORTBbits.RB5;
  4609  0001BA  AA81               	btfss	3969,5,c	;volatile
  4610  0001BC  D002               	goto	u11740
  4611  0001BE  0E01               	movlw	1
  4612  0001C0  D001               	goto	u11746
  4613  0001C2                     u11740:
  4614  0001C2  0E00               	movlw	0
  4615  0001C4                     u11746:
  4616  0001C4  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  4617                           
  4618                           ;main.c: 955:         switch (currentOperationState){
  4619  0001C6  D391               	goto	l10507
  4620  0001C8                     l10311:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;main.c: 957:                 if (counted%100 == 0){
  4624  0001C8  C13A  F006         	movff	doOperation@counted,___awmod@dividend
  4625  0001CC  C13B  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  4626  0001D0  0E00               	movlw	0
  4627  0001D2  6E09               	movwf	___awmod@divisor+1,c
  4628  0001D4  0E64               	movlw	100
  4629  0001D6  6E08               	movwf	___awmod@divisor,c
  4630  0001D8  ECD3  F020         	call	___awmod	;wreg free
  4631  0001DC  5006               	movf	?___awmod,w,c
  4632  0001DE  1007               	iorwf	?___awmod+1,w,c
  4633  0001E0  A4D8               	btfss	status,2,c
  4634  0001E2  D057               	goto	l10333
  4635                           
  4636                           ;main.c: 958:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4637  0001E4  0E01               	movlw	1
  4638  0001E6  EC3F  F025         	call	_lcdInst
  4639  0001EA  0E11               	movlw	17
  4640  0001EC  0100               	movlb	0	; () banked
  4641  0001EE  6FD3               	movwf	??_doOperation& (0+255),b
  4642  0001F0  0E3A               	movlw	58
  4643  0001F2                     u12707:
  4644  0001F2  2EE8               	decfsz	wreg,f,c
  4645  0001F4  D7FE               	bra	u12707
  4646  0001F6  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4647  0001F8  D7FC               	bra	u12707
  4648  0001FA  F000               	nop	
  4649                           
  4650                           ;main.c: 959:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4651  0001FC  0E80               	movlw	128
  4652  0001FE  EC3F  F025         	call	_lcdInst
  4653  000202  0E07               	movlw	7
  4654  000204  0100               	movlb	0	; () banked
  4655  000206  6FD3               	movwf	??_doOperation& (0+255),b
  4656  000208  0E7D               	movlw	125
  4657  00020A                     u12717:
  4658  00020A  2EE8               	decfsz	wreg,f,c
  4659  00020C  D7FE               	bra	u12717
  4660  00020E  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4661  000210  D7FC               	bra	u12717
  4662                           
  4663                           ;main.c: 960:                 printf("%lu", millisecondsMeasured);
  4664  000212  0EEC               	movlw	low STR_21
  4665  000214  0100               	movlb	0	; () banked
  4666  000216  6F9D               	movwf	printf@fmt& (0+255),b
  4667  000218  0EFF               	movlw	high STR_21
  4668  00021A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4669  00021C  C074  F09F         	movff	_millisecondsMeasured,?_printf+2	;volatile
  4670  000220  C075  F0A0         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  4671  000224  C076  F0A1         	movff	_millisecondsMeasured+2,?_printf+4	;volatile
  4672  000228  C077  F0A2         	movff	_millisecondsMeasured+3,?_printf+5	;volatile
  4673  00022C  EC6D  F024         	call	_printf	;wreg free
  4674  000230  0E90               	movlw	144
  4675  000232  EC3F  F025         	call	_lcdInst
  4676                           
  4677                           ;main.c: 962:                 printf("%d", topLaserState);
  4678  000236  0EE3               	movlw	low (STR_24+3)
  4679  000238  0100               	movlb	0	; () banked
  4680  00023A  6F9D               	movwf	printf@fmt& (0+255),b
  4681  00023C  0EFF               	movlw	high (STR_24+3)
  4682  00023E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4683  000240  C154  F09F         	movff	doOperation@topLaserState,?_printf+2
  4684  000244  6BA0               	clrf	(?_printf+3)& (0+255),b
  4685  000246  EC6D  F024         	call	_printf	;wreg free
  4686  00024A  0EC0               	movlw	192
  4687  00024C  EC3F  F025         	call	_lcdInst
  4688                           
  4689                           ;main.c: 964:                 printf("B: %d", motorBDistance);
  4690  000250  0EE6               	movlw	low STR_23
  4691  000252  0100               	movlb	0	; () banked
  4692  000254  6F9D               	movwf	printf@fmt& (0+255),b
  4693  000256  0EFF               	movlw	high STR_23
  4694  000258  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4695  00025A  C0D7  F09F         	movff	_motorBDistance,?_printf+2	;volatile
  4696  00025E  C0D8  F0A0         	movff	_motorBDistance+1,?_printf+3	;volatile
  4697  000262  C0D9  F0A1         	movff	_motorBDistance+2,?_printf+4	;volatile
  4698  000266  C0DA  F0A2         	movff	_motorBDistance+3,?_printf+5	;volatile
  4699  00026A  EC6D  F024         	call	_printf	;wreg free
  4700  00026E  0ED0               	movlw	208
  4701  000270  EC3F  F025         	call	_lcdInst
  4702                           
  4703                           ;main.c: 966:                 printf("A: %d", motorADistance);
  4704  000274  0EE0               	movlw	low STR_24
  4705  000276  0100               	movlb	0	; () banked
  4706  000278  6F9D               	movwf	printf@fmt& (0+255),b
  4707  00027A  0EFF               	movlw	high STR_24
  4708  00027C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4709  00027E  C0DB  F09F         	movff	_motorADistance,?_printf+2	;volatile
  4710  000282  C0DC  F0A0         	movff	_motorADistance+1,?_printf+3	;volatile
  4711  000286  C0DD  F0A1         	movff	_motorADistance+2,?_printf+4	;volatile
  4712  00028A  C0DE  F0A2         	movff	_motorADistance+3,?_printf+5	;volatile
  4713  00028E  EC6D  F024         	call	_printf	;wreg free
  4714  000292                     l10333:
  4715                           
  4716                           ;main.c: 986:                 errorCorrectedMove(90, 1, motorAStartDistance, motorBStart
      +                          Distance, 1.2);
  4717  000292  0E00               	movlw	0
  4718  000294  0100               	movlb	0	; () banked
  4719  000296  6F99               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  4720  000298  0E5A               	movlw	90
  4721  00029A  6F98               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  4722  00029C  0E00               	movlw	0
  4723  00029E  6F9A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  4724  0002A0  0E00               	movlw	0
  4725  0002A2  6F9B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  4726  0002A4  0E80               	movlw	128
  4727  0002A6  6F9C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  4728  0002A8  0E3F               	movlw	63
  4729  0002AA  6F9D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  4730  0002AC  C131  F09E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  4731  0002B0  C132  F09F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  4732  0002B4  C133  F0A0         	movff	doOperation@motorAStartDistance+2,errorCorrectedMove@motorAStartDistance+2
  4733  0002B8  C134  F0A1         	movff	doOperation@motorAStartDistance+3,errorCorrectedMove@motorAStartDistance+3
  4734  0002BC  C135  F0A2         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  4735  0002C0  C136  F0A3         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  4736  0002C4  C137  F0A4         	movff	doOperation@motorBStartDistance+2,errorCorrectedMove@motorBStartDistance+2
  4737  0002C8  C138  F0A5         	movff	doOperation@motorBStartDistance+3,errorCorrectedMove@motorBStartDistance+3
  4738  0002CC  0E9A               	movlw	154
  4739  0002CE  6FA6               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  4740  0002D0  0E99               	movlw	153
  4741  0002D2  6FA7               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  4742  0002D4  0E99               	movlw	153
  4743  0002D6  6FA8               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  4744  0002D8  0E3F               	movlw	63
  4745  0002DA  6FA9               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  4746  0002DC  EC1D  F013         	call	_errorCorrectedMove	;wreg free
  4747                           
  4748                           ;main.c: 996:                 if(motorADistance > 4*clicksPerM){
  4749  0002E0  0100               	movlb	0	; () banked
  4750  0002E2  BFDE               	btfsc	(_motorADistance+3)& (0+255),7,b	;volatile
  4751  0002E4  D323               	goto	l10509
  4752  0002E6  51DE               	movf	(_motorADistance+3)& (0+255),w,b	;volatile
  4753  0002E8  11DD               	iorwf	(_motorADistance+2)& (0+255),w,b	;volatile
  4754  0002EA  E106               	bnz	u11760
  4755  0002EC  0EA9               	movlw	169
  4756  0002EE  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4757  0002F0  0E1B               	movlw	27
  4758  0002F2  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4759  0002F4  A0D8               	btfss	status,0,c
  4760  0002F6  D31A               	goto	l10509
  4761  0002F8                     u11760:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;main.c: 997:                     currentOperationState = complete;
  4765  0002F8  0E06               	movlw	6
  4766  0002FA  D247               	goto	L14
  4767  0002FC                     l10339:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;main.c: 1006:                 poleNumber++;
  4771  0002FC  0101               	movlb	1	; () banked
  4772  0002FE  4B59               	infsnz	doOperation@poleNumber& (0+255),f,b
  4773  000300  2B5A               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  4774                           
  4775                           ; BSR set to: 1
  4776                           ;main.c: 1009:                 tiresOnPole = tirePositioning(timeInOperation);
  4777  000302  C14C  F098         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  4778  000306  C14D  F099         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  4779  00030A  C14E  F09A         	movff	doOperation@timeInOperation+2,tirePositioning@maxOperationTime+2
  4780  00030E  C14F  F09B         	movff	doOperation@timeInOperation+3,tirePositioning@maxOperationTime+3
  4781  000312  ECF8  F00C         	call	_tirePositioning	;wreg free
  4782  000316  C098  F157         	movff	?_tirePositioning,doOperation@tiresOnPole
  4783  00031A  C099  F158         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  4784                           
  4785                           ;main.c: 1021:                 distanceFromLastPole = motorADistance - distanceToPole;
  4786  00031E  0101               	movlb	1	; () banked
  4787  000320  513E               	movf	doOperation@distanceToPole& (0+255),w,b
  4788  000322  0100               	movlb	0	; () banked
  4789  000324  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4790  000326  0101               	movlb	1	; () banked
  4791  000328  6F42               	movwf	doOperation@distanceFromLastPole& (0+255),b
  4792  00032A  513F               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  4793  00032C  0100               	movlb	0	; () banked
  4794  00032E  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4795  000330  0101               	movlb	1	; () banked
  4796  000332  6F43               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  4797  000334  5140               	movf	(doOperation@distanceToPole+2)& (0+255),w,b
  4798  000336  0100               	movlb	0	; () banked
  4799  000338  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  4800  00033A  0101               	movlb	1	; () banked
  4801  00033C  6F44               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  4802  00033E  5141               	movf	(doOperation@distanceToPole+3)& (0+255),w,b
  4803  000340  0100               	movlb	0	; () banked
  4804  000342  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  4805  000344  0101               	movlb	1	; () banked
  4806  000346  6F45               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  4807                           
  4808                           ; BSR set to: 1
  4809                           ;main.c: 1022:                 distanceToPole = motorADistance;
  4810  000348  C0DB  F13E         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  4811  00034C  C0DC  F13F         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  4812  000350  C0DD  F140         	movff	_motorADistance+2,doOperation@distanceToPole+2	;volatile
  4813  000354  C0DE  F141         	movff	_motorADistance+3,doOperation@distanceToPole+3	;volatile
  4814                           
  4815                           ; BSR set to: 1
  4816                           ;main.c: 1024:                 distanceFromLastPoleCM = (int)((double)distanceFromLastPo
      +                          le/clicksPerM*100);
  4817  000358  0E00               	movlw	0
  4818  00035A  6E31               	movwf	___flmul@a,c
  4819  00035C  0E00               	movlw	0
  4820  00035E  6E32               	movwf	___flmul@a+1,c
  4821  000360  0EC8               	movlw	200
  4822  000362  6E33               	movwf	___flmul@a+2,c
  4823  000364  0E42               	movlw	66
  4824  000366  6E34               	movwf	___flmul@a+3,c
  4825  000368  0E00               	movlw	0
  4826  00036A  6E18               	movwf	___fldiv@a,c
  4827  00036C  0E40               	movlw	64
  4828  00036E  6E19               	movwf	___fldiv@a+1,c
  4829  000370  0EDD               	movlw	221
  4830  000372  6E1A               	movwf	___fldiv@a+2,c
  4831  000374  0E44               	movlw	68
  4832  000376  6E1B               	movwf	___fldiv@a+3,c
  4833  000378  C142  F006         	movff	doOperation@distanceFromLastPole,___xxtofl@val
  4834  00037C  C143  F007         	movff	doOperation@distanceFromLastPole+1,___xxtofl@val+1
  4835  000380  C144  F008         	movff	doOperation@distanceFromLastPole+2,___xxtofl@val+2
  4836  000384  C145  F009         	movff	doOperation@distanceFromLastPole+3,___xxtofl@val+3
  4837  000388  0E01               	movlw	1
  4838  00038A  EC04  F019         	call	___xxtofl
  4839  00038E  C006  F014         	movff	?___xxtofl,___fldiv@b
  4840  000392  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  4841  000396  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  4842  00039A  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  4843  00039E  ECD9  F011         	call	___fldiv	;wreg free
  4844  0003A2  C014  F02D         	movff	?___fldiv,___flmul@b
  4845  0003A6  C015  F02E         	movff	?___fldiv+1,___flmul@b+1
  4846  0003AA  C016  F02F         	movff	?___fldiv+2,___flmul@b+2
  4847  0003AE  C017  F030         	movff	?___fldiv+3,___flmul@b+3
  4848  0003B2  ECAA  F00E         	call	___flmul	;wreg free
  4849  0003B6  C02D  F05E         	movff	?___flmul,___fltol@f1
  4850  0003BA  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  4851  0003BE  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  4852  0003C2  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  4853  0003C6  ECAF  F01E         	call	___fltol	;wreg free
  4854  0003CA  C05E  F13C         	movff	?___fltol,doOperation@distanceFromLastPoleCM
  4855  0003CE  C05F  F13D         	movff	?___fltol+1,doOperation@distanceFromLastPoleCM+1
  4856                           
  4857                           ;main.c: 1025:                 distanceToPoleCM = (int)((double)distanceToPole/clicksPer
      +                          M*100);
  4858  0003D2  0E00               	movlw	0
  4859  0003D4  6E31               	movwf	___flmul@a,c
  4860  0003D6  0E00               	movlw	0
  4861  0003D8  6E32               	movwf	___flmul@a+1,c
  4862  0003DA  0EC8               	movlw	200
  4863  0003DC  6E33               	movwf	___flmul@a+2,c
  4864  0003DE  0E42               	movlw	66
  4865  0003E0  6E34               	movwf	___flmul@a+3,c
  4866  0003E2  0E00               	movlw	0
  4867  0003E4  6E18               	movwf	___fldiv@a,c
  4868  0003E6  0E40               	movlw	64
  4869  0003E8  6E19               	movwf	___fldiv@a+1,c
  4870  0003EA  0EDD               	movlw	221
  4871  0003EC  6E1A               	movwf	___fldiv@a+2,c
  4872  0003EE  0E44               	movlw	68
  4873  0003F0  6E1B               	movwf	___fldiv@a+3,c
  4874  0003F2  C13E  F006         	movff	doOperation@distanceToPole,___xxtofl@val
  4875  0003F6  C13F  F007         	movff	doOperation@distanceToPole+1,___xxtofl@val+1
  4876  0003FA  C140  F008         	movff	doOperation@distanceToPole+2,___xxtofl@val+2
  4877  0003FE  C141  F009         	movff	doOperation@distanceToPole+3,___xxtofl@val+3
  4878  000402  0E01               	movlw	1
  4879  000404  EC04  F019         	call	___xxtofl
  4880  000408  C006  F014         	movff	?___xxtofl,___fldiv@b
  4881  00040C  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  4882  000410  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  4883  000414  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  4884  000418  ECD9  F011         	call	___fldiv	;wreg free
  4885  00041C  C014  F02D         	movff	?___fldiv,___flmul@b
  4886  000420  C015  F02E         	movff	?___fldiv+1,___flmul@b+1
  4887  000424  C016  F02F         	movff	?___fldiv+2,___flmul@b+2
  4888  000428  C017  F030         	movff	?___fldiv+3,___flmul@b+3
  4889  00042C  ECAA  F00E         	call	___flmul	;wreg free
  4890  000430  C02D  F05E         	movff	?___flmul,___fltol@f1
  4891  000434  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  4892  000438  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  4893  00043C  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  4894  000440  ECAF  F01E         	call	___fltol	;wreg free
  4895  000444  C05E  F148         	movff	?___fltol,doOperation@distanceToPoleCM
  4896  000448  C05F  F149         	movff	?___fltol+1,doOperation@distanceToPoleCM+1
  4897                           
  4898                           ;main.c: 1027:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4899  00044C  0E01               	movlw	1
  4900  00044E  EC3F  F025         	call	_lcdInst
  4901  000452  0E11               	movlw	17
  4902  000454  0100               	movlb	0	; () banked
  4903  000456  6FD3               	movwf	??_doOperation& (0+255),b
  4904  000458  0E3A               	movlw	58
  4905  00045A                     u12727:
  4906  00045A  2EE8               	decfsz	wreg,f,c
  4907  00045C  D7FE               	bra	u12727
  4908  00045E  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4909  000460  D7FC               	bra	u12727
  4910  000462  F000               	nop	
  4911                           
  4912                           ;main.c: 1028:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  4913  000464  0E80               	movlw	128
  4914  000466  EC3F  F025         	call	_lcdInst
  4915  00046A  0E07               	movlw	7
  4916  00046C  0100               	movlb	0	; () banked
  4917  00046E  6FD3               	movwf	??_doOperation& (0+255),b
  4918  000470  0E7D               	movlw	125
  4919  000472                     u12737:
  4920  000472  2EE8               	decfsz	wreg,f,c
  4921  000474  D7FE               	bra	u12737
  4922  000476  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4923  000478  D7FC               	bra	u12737
  4924                           
  4925                           ;main.c: 1029:                 printf("TIRE DROP");
  4926  00047A  0E7B               	movlw	low STR_25
  4927  00047C  0100               	movlb	0	; () banked
  4928  00047E  6F9D               	movwf	printf@fmt& (0+255),b
  4929  000480  0EFF               	movlw	high STR_25
  4930  000482  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4931  000484  EC6D  F024         	call	_printf	;wreg free
  4932  000488  0EC0               	movlw	192
  4933  00048A  EC3F  F025         	call	_lcdInst
  4934                           
  4935                           ;main.c: 1031:                 printf("%d on pole", tiresOnPole);
  4936  00048E  0E5C               	movlw	low STR_26
  4937  000490  0100               	movlb	0	; () banked
  4938  000492  6F9D               	movwf	printf@fmt& (0+255),b
  4939  000494  0EFF               	movlw	high STR_26
  4940  000496  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4941  000498  C157  F09F         	movff	doOperation@tiresOnPole,?_printf+2
  4942  00049C  C158  F0A0         	movff	doOperation@tiresOnPole+1,?_printf+3
  4943  0004A0  EC6D  F024         	call	_printf	;wreg free
  4944                           
  4945                           ;main.c: 1033:                 setMotorSpeeds(0, 1, 1, 0);
  4946  0004A4  0E00               	movlw	0
  4947  0004A6  0100               	movlb	0	; () banked
  4948  0004A8  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  4949  0004AA  0E00               	movlw	0
  4950  0004AC  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  4951  0004AE  0E01               	movlw	1
  4952  0004B0  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  4953  0004B2  0E01               	movlw	1
  4954  0004B4  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  4955  0004B6  0E00               	movlw	0
  4956  0004B8  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  4957  0004BA  0E00               	movlw	0
  4958  0004BC  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  4959  0004BE  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  4960                           
  4961                           ;main.c: 1039:                 if (tiresOnPole == 2){
  4962  0004C2  0E02               	movlw	2
  4963  0004C4  0101               	movlb	1	; () banked
  4964  0004C6  1957               	xorwf	doOperation@tiresOnPole& (0+255),w,b
  4965  0004C8  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4966  0004CA  A4D8               	btfss	status,2,c
  4967  0004CC  D004               	goto	l10371
  4968  0004CE                     u11770:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;main.c: 1040:                     tiresToDrop = 0;
  4972  0004CE  0E00               	movlw	0
  4973  0004D0  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4974  0004D2  0E00               	movlw	0
  4975  0004D4  D00F               	goto	L10
  4976  0004D6                     l10371:
  4977                           
  4978                           ; BSR set to: 1
  4979  0004D6  0559               	decf	doOperation@poleNumber& (0+255),w,b
  4980  0004D8  115A               	iorwf	(doOperation@poleNumber+1)& (0+255),w,b
  4981  0004DA  A4D8               	btfss	status,2,c
  4982  0004DC  D00D               	goto	l10379
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;main.c: 1042:                     if (tiresOnPole == 1){
  4986  0004DE  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  4987  0004E0  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4988  0004E2  A4D8               	btfss	status,2,c
  4989  0004E4  D004               	goto	l10377
  4990  0004E6                     u11790:
  4991                           
  4992                           ; BSR set to: 1
  4993                           ;main.c: 1043:                         tiresToDrop = 1;
  4994  0004E6  0E00               	movlw	0
  4995  0004E8  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4996  0004EA  0E01               	movlw	1
  4997  0004EC  D003               	goto	L10
  4998  0004EE                     l10377:
  4999                           
  5000                           ; BSR set to: 1
  5001                           ;main.c: 1045:                         tiresToDrop = 2;
  5002  0004EE  0E00               	movlw	0
  5003  0004F0  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  5004  0004F2  0E02               	movlw	2
  5005  0004F4                     L10:
  5006  0004F4  6F52               	movwf	doOperation@tiresToDrop& (0+255),b
  5007  0004F6  D02B               	goto	l10393
  5008  0004F8                     l10379:
  5009                           
  5010                           ; BSR set to: 1
  5011                           ;main.c: 1048:                     if (distanceFromLastPole < 0.3*clicksPerM){
  5012  0004F8  C142  F006         	movff	doOperation@distanceFromLastPole,___xxtofl@val
  5013  0004FC  C143  F007         	movff	doOperation@distanceFromLastPole+1,___xxtofl@val+1
  5014  000500  C144  F008         	movff	doOperation@distanceFromLastPole+2,___xxtofl@val+2
  5015  000504  C145  F009         	movff	doOperation@distanceFromLastPole+3,___xxtofl@val+3
  5016  000508  0E01               	movlw	1
  5017  00050A  EC04  F019         	call	___xxtofl
  5018  00050E  C006  F014         	movff	?___xxtofl,___flge@ff1
  5019  000512  C007  F015         	movff	?___xxtofl+1,___flge@ff1+1
  5020  000516  C008  F016         	movff	?___xxtofl+2,___flge@ff1+2
  5021  00051A  C009  F017         	movff	?___xxtofl+3,___flge@ff1+3
  5022  00051E  0E00               	movlw	0
  5023  000520  6E18               	movwf	___flge@ff2,c
  5024  000522  0EC0               	movlw	192
  5025  000524  6E19               	movwf	___flge@ff2+1,c
  5026  000526  0E04               	movlw	4
  5027  000528  6E1A               	movwf	___flge@ff2+2,c
  5028  00052A  0E44               	movlw	68
  5029  00052C  6E1B               	movwf	___flge@ff2+3,c
  5030  00052E  EC7A  F01D         	call	___flge	;wreg free
  5031  000532  B0D8               	btfsc	status,0,c
  5032  000534  D006               	goto	l10387
  5033                           
  5034                           ;main.c: 1049:                         if (tiresOnPole == 1){
  5035  000536  0101               	movlb	1	; () banked
  5036  000538  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  5037  00053A  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  5038  00053C  B4D8               	btfsc	status,2,c
  5039  00053E  D7C7               	goto	u11770
  5040  000540  D7D2               	goto	u11790
  5041  000542                     l10387:
  5042                           
  5043                           ;main.c: 1055:                         if (tiresOnPole == 1){
  5044  000542  0101               	movlb	1	; () banked
  5045  000544  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  5046  000546  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  5047  000548  B4D8               	btfsc	status,2,c
  5048  00054A  D7CD               	goto	u11790
  5049  00054C  D7D0               	goto	l10377
  5050  00054E                     l10393:
  5051                           
  5052                           ; BSR set to: 1
  5053  00054E  0E90               	movlw	144
  5054  000550  EC3F  F025         	call	_lcdInst
  5055                           
  5056                           ;main.c: 1064:                 printf("%d dropping", tiresToDrop);
  5057  000554  0E45               	movlw	low STR_27
  5058  000556  0100               	movlb	0	; () banked
  5059  000558  6F9D               	movwf	printf@fmt& (0+255),b
  5060  00055A  0EFF               	movlw	high STR_27
  5061  00055C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  5062  00055E  C152  F09F         	movff	doOperation@tiresToDrop,?_printf+2
  5063  000562  C153  F0A0         	movff	doOperation@tiresToDrop+1,?_printf+3
  5064  000566  EC6D  F024         	call	_printf	;wreg free
  5065  00056A  0ED0               	movlw	208
  5066  00056C  EC3F  F025         	call	_lcdInst
  5067                           
  5068                           ;main.c: 1067:                 printf("%d cm from pole", distanceFromLastPoleCM );
  5069  000570  0E9C               	movlw	low STR_28
  5070  000572  0100               	movlb	0	; () banked
  5071  000574  6F9D               	movwf	printf@fmt& (0+255),b
  5072  000576  0EFE               	movlw	high STR_28
  5073  000578  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  5074  00057A  C13C  F09F         	movff	doOperation@distanceFromLastPoleCM,?_printf+2
  5075  00057E  C13D  F0A0         	movff	doOperation@distanceFromLastPoleCM+1,?_printf+3
  5076  000582  EC6D  F024         	call	_printf	;wreg free
  5077                           
  5078                           ;main.c: 1071:     if (tiresToDrop > 0){
  5079  000586  0101               	movlb	1	; () banked
  5080  000588  BF53               	btfsc	(doOperation@tiresToDrop+1)& (0+255),7,b
  5081  00058A  D009               	goto	l10407
  5082  00058C  5153               	movf	(doOperation@tiresToDrop+1)& (0+255),w,b
  5083  00058E  E103               	bnz	u11830
  5084  000590  0552               	decf	doOperation@tiresToDrop& (0+255),w,b
  5085  000592  A0D8               	btfss	status,0,c
  5086  000594  D004               	goto	l10407
  5087  000596                     u11830:
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;main.c: 1072:                     sendArduinoTireDropRequest();
  5091  000596  ECC8  F024         	call	_sendArduinoTireDropRequest	;wreg free
  5092                           
  5093                           ;main.c: 1073:                     currentOperationState = tireDrop;
  5094  00059A  0E02               	movlw	2
  5095  00059C  D0F6               	goto	L14
  5096  00059E                     l10407:
  5097                           
  5098                           ; BSR set to: 1
  5099                           ;main.c: 1075:                     currentOperationState = noTireDrop;
  5100  00059E  0E03               	movlw	3
  5101  0005A0  D0F5               	goto	L13
  5102  0005A2                     l10409:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;main.c: 1089:                     isDoneDrop = requestIsTireDropDone();
  5106  0005A2  EC2E  F024         	call	_requestIsTireDropDone	;wreg free
  5107  0005A6  0101               	movlb	1	; () banked
  5108  0005A8  6F39               	movwf	doOperation@isDoneDrop& (0+255),b
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;main.c: 1091:                     if (isDoneDrop){
  5112  0005AA  5139               	movf	doOperation@isDoneDrop& (0+255),w,b
  5113  0005AC  B4D8               	btfsc	status,2,c
  5114  0005AE  D1BE               	goto	l10509
  5115                           
  5116                           ; BSR set to: 1
  5117                           ;main.c: 1092:                         tiresToDrop -- ;
  5118  0005B0  0752               	decf	doOperation@tiresToDrop& (0+255),f,b
  5119  0005B2  A0D8               	btfss	status,0,c
  5120  0005B4  0753               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  5121                           
  5122                           ;main.c: 1093:                         tiresDeployedOnPole++;
  5123  0005B6  4B55               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  5124  0005B8  2B56               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;main.c: 1094:                         if (tiresToDrop == 0){
  5128  0005BA  5152               	movf	doOperation@tiresToDrop& (0+255),w,b
  5129  0005BC  1153               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  5130  0005BE  A4D8               	btfss	status,2,c
  5131  0005C0  D067               	goto	l10435
  5132                           
  5133                           ; BSR set to: 1
  5134                           ;main.c: 1095:                            currentOperationState = leavePole;
  5135  0005C2  0E07               	movlw	7
  5136  0005C4  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5137                           
  5138                           ; BSR set to: 1
  5139                           ;main.c: 1097:                             totalTiresSupplied += tiresDeployedOnPole;
  5140  0005C6  5155               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  5141  0005C8  2746               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  5142  0005CA  5156               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  5143  0005CC  2347               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;main.c: 1102:                             logs[0][1] = totalTiresSupplied;
  5147  0005CE  C146  F1A9         	movff	doOperation@totalTiresSupplied,_logs+2
  5148  0005D2  C147  F1AA         	movff	doOperation@totalTiresSupplied+1,_logs+3
  5149                           
  5150                           ; BSR set to: 1
  5151                           ;main.c: 1103:                             logs[0][2] = poleNumber;
  5152  0005D6  C159  F1AB         	movff	doOperation@poleNumber,_logs+4
  5153  0005DA  C15A  F1AC         	movff	doOperation@poleNumber+1,_logs+5
  5154                           
  5155                           ; BSR set to: 1
  5156                           ;main.c: 1104:                             logs[0][3+(poleNumber-1)*3] = tiresDeployedOn
      +                          Pole;
  5157  0005DE  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5158  0005E2  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5159  0005E6  0E00               	movlw	0
  5160  0005E8  6E09               	movwf	___wmul@multiplicand+1,c
  5161  0005EA  0E03               	movlw	3
  5162  0005EC  6E08               	movwf	___wmul@multiplicand,c
  5163  0005EE  EC81  F024         	call	___wmul	;wreg free
  5164  0005F2  90D8               	bcf	status,0,c
  5165  0005F4  3606               	rlcf	?___wmul,f,c
  5166  0005F6  3607               	rlcf	?___wmul+1,f,c
  5167  0005F8  0EA7               	movlw	low _logs
  5168  0005FA  2406               	addwf	?___wmul,w,c
  5169  0005FC  6ED9               	movwf	fsr2l,c
  5170  0005FE  0E01               	movlw	high _logs
  5171  000600  2007               	addwfc	?___wmul+1,w,c
  5172  000602  6EDA               	movwf	fsr2h,c
  5173  000604  C155  FFDE         	movff	doOperation@tiresDeployedOnPole,postinc2
  5174  000608  C156  FFDD         	movff	doOperation@tiresDeployedOnPole+1,postdec2
  5175                           
  5176                           ;main.c: 1105:                             logs[0][4+(poleNumber-1)*3] = tiresDeployedOn
      +                          Pole + tiresOnPole;
  5177  00060C  0101               	movlb	1	; () banked
  5178  00060E  5157               	movf	doOperation@tiresOnPole& (0+255),w,b
  5179  000610  2555               	addwf	doOperation@tiresDeployedOnPole& (0+255),w,b
  5180  000612  0100               	movlb	0	; () banked
  5181  000614  6FD3               	movwf	??_doOperation& (0+255),b
  5182  000616  0101               	movlb	1	; () banked
  5183  000618  5158               	movf	(doOperation@tiresOnPole+1)& (0+255),w,b
  5184  00061A  2156               	addwfc	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  5185  00061C  0100               	movlb	0	; () banked
  5186  00061E  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  5187  000620  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5188  000624  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5189  000628  0E00               	movlw	0
  5190  00062A  6E09               	movwf	___wmul@multiplicand+1,c
  5191  00062C  0E03               	movlw	3
  5192  00062E  6E08               	movwf	___wmul@multiplicand,c
  5193  000630  EC81  F024         	call	___wmul	;wreg free
  5194  000634  90D8               	bcf	status,0,c
  5195  000636  3606               	rlcf	?___wmul,f,c
  5196  000638  3607               	rlcf	?___wmul+1,f,c
  5197  00063A  0EA9               	movlw	low (_logs+2)
  5198  00063C  2406               	addwf	?___wmul,w,c
  5199  00063E  6ED9               	movwf	fsr2l,c
  5200  000640  0E01               	movlw	high (_logs+2)
  5201  000642  2007               	addwfc	?___wmul+1,w,c
  5202  000644  6EDA               	movwf	fsr2h,c
  5203  000646  C0D3  FFDE         	movff	??_doOperation,postinc2
  5204  00064A  C0D4  FFDD         	movff	??_doOperation+1,postdec2
  5205                           
  5206                           ;main.c: 1106:                             logs[0][5+(poleNumber-1)*3] = distanceToPoleC
      +                          M;
  5207  00064E  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5208  000652  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5209  000656  0E00               	movlw	0
  5210  000658  6E09               	movwf	___wmul@multiplicand+1,c
  5211  00065A  0E03               	movlw	3
  5212  00065C  6E08               	movwf	___wmul@multiplicand,c
  5213  00065E  EC81  F024         	call	___wmul	;wreg free
  5214  000662  90D8               	bcf	status,0,c
  5215  000664  3606               	rlcf	?___wmul,f,c
  5216  000666  3607               	rlcf	?___wmul+1,f,c
  5217  000668  0EAB               	movlw	low (_logs+4)
  5218  00066A  2406               	addwf	?___wmul,w,c
  5219  00066C  6ED9               	movwf	fsr2l,c
  5220  00066E  0E01               	movlw	high (_logs+4)
  5221  000670  2007               	addwfc	?___wmul+1,w,c
  5222  000672  6EDA               	movwf	fsr2h,c
  5223  000674  C148  FFDE         	movff	doOperation@distanceToPoleCM,postinc2
  5224  000678  C149  FFDD         	movff	doOperation@distanceToPoleCM+1,postdec2
  5225                           
  5226                           ;main.c: 1108:                             tiresOnPole = 0;
  5227  00067C  0E00               	movlw	0
  5228  00067E  0101               	movlb	1	; () banked
  5229  000680  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  5230  000682  0E00               	movlw	0
  5231  000684  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  5232                           
  5233                           ; BSR set to: 1
  5234                           ;main.c: 1109:                             tiresDeployedOnPole = 0;
  5235  000686  0E00               	movlw	0
  5236  000688  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  5237  00068A  0E00               	movlw	0
  5238  00068C  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  5239                           
  5240                           ;main.c: 1111:                         } else {
  5241  00068E  D14E               	goto	l10509
  5242  000690                     l10435:
  5243                           
  5244                           ; BSR set to: 1
  5245                           ;main.c: 1113:                             sendArduinoTireDropRequest();
  5246  000690  ECC8  F024         	call	_sendArduinoTireDropRequest	;wreg free
  5247  000694  D14B               	goto	l10509
  5248  000696                     l10437:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;main.c: 1121:                 opDelay(4000, timeInOperation);
  5252  000696  0E0F               	movlw	15
  5253  000698  6E07               	movwf	opDelay@millis+1,c
  5254  00069A  0EA0               	movlw	160
  5255  00069C  6E06               	movwf	opDelay@millis,c
  5256  00069E  C14C  F008         	movff	doOperation@timeInOperation,opDelay@maxOperationTime
  5257  0006A2  C14D  F009         	movff	doOperation@timeInOperation+1,opDelay@maxOperationTime+1
  5258  0006A6  C14E  F00A         	movff	doOperation@timeInOperation+2,opDelay@maxOperationTime+2
  5259  0006AA  C14F  F00B         	movff	doOperation@timeInOperation+3,opDelay@maxOperationTime+3
  5260  0006AE  ECA9  F021         	call	_opDelay	;wreg free
  5261                           
  5262                           ;main.c: 1122:                     tiresDeployedOnPole = 0;
  5263  0006B2  0E00               	movlw	0
  5264  0006B4  0101               	movlb	1	; () banked
  5265  0006B6  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  5266  0006B8  0E00               	movlw	0
  5267  0006BA  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;main.c: 1123:                     tiresOnPoleAfterOp = tiresOnPole;
  5271  0006BC  C157  F12B         	movff	doOperation@tiresOnPole,doOperation@tiresOnPoleAfterOp
  5272  0006C0  C158  F12C         	movff	doOperation@tiresOnPole+1,doOperation@tiresOnPoleAfterOp+1
  5273                           
  5274                           ; BSR set to: 1
  5275                           ;main.c: 1125:                     logs[0][1] = totalTiresSupplied;
  5276  0006C4  C146  F1A9         	movff	doOperation@totalTiresSupplied,_logs+2
  5277  0006C8  C147  F1AA         	movff	doOperation@totalTiresSupplied+1,_logs+3
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;main.c: 1126:                     logs[0][2] = poleNumber;
  5281  0006CC  C159  F1AB         	movff	doOperation@poleNumber,_logs+4
  5282  0006D0  C15A  F1AC         	movff	doOperation@poleNumber+1,_logs+5
  5283                           
  5284                           ; BSR set to: 1
  5285                           ;main.c: 1127:                     logs[0][3+(poleNumber-1)*3] = tiresDeployedOnPole;
  5286  0006D4  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5287  0006D8  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5288  0006DC  0E00               	movlw	0
  5289  0006DE  6E09               	movwf	___wmul@multiplicand+1,c
  5290  0006E0  0E03               	movlw	3
  5291  0006E2  6E08               	movwf	___wmul@multiplicand,c
  5292  0006E4  EC81  F024         	call	___wmul	;wreg free
  5293  0006E8  90D8               	bcf	status,0,c
  5294  0006EA  3606               	rlcf	?___wmul,f,c
  5295  0006EC  3607               	rlcf	?___wmul+1,f,c
  5296  0006EE  0EA7               	movlw	low _logs
  5297  0006F0  2406               	addwf	?___wmul,w,c
  5298  0006F2  6ED9               	movwf	fsr2l,c
  5299  0006F4  0E01               	movlw	high _logs
  5300  0006F6  2007               	addwfc	?___wmul+1,w,c
  5301  0006F8  6EDA               	movwf	fsr2h,c
  5302  0006FA  C155  FFDE         	movff	doOperation@tiresDeployedOnPole,postinc2
  5303  0006FE  C156  FFDD         	movff	doOperation@tiresDeployedOnPole+1,postdec2
  5304                           
  5305                           ;main.c: 1128:                     logs[0][4+(poleNumber-1)*3] = tiresDeployedOnPole + t
      +                          iresOnPole;
  5306  000702  0101               	movlb	1	; () banked
  5307  000704  5157               	movf	doOperation@tiresOnPole& (0+255),w,b
  5308  000706  2555               	addwf	doOperation@tiresDeployedOnPole& (0+255),w,b
  5309  000708  0100               	movlb	0	; () banked
  5310  00070A  6FD3               	movwf	??_doOperation& (0+255),b
  5311  00070C  0101               	movlb	1	; () banked
  5312  00070E  5158               	movf	(doOperation@tiresOnPole+1)& (0+255),w,b
  5313  000710  2156               	addwfc	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  5314  000712  0100               	movlb	0	; () banked
  5315  000714  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  5316  000716  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5317  00071A  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5318  00071E  0E00               	movlw	0
  5319  000720  6E09               	movwf	___wmul@multiplicand+1,c
  5320  000722  0E03               	movlw	3
  5321  000724  6E08               	movwf	___wmul@multiplicand,c
  5322  000726  EC81  F024         	call	___wmul	;wreg free
  5323  00072A  90D8               	bcf	status,0,c
  5324  00072C  3606               	rlcf	?___wmul,f,c
  5325  00072E  3607               	rlcf	?___wmul+1,f,c
  5326  000730  0EA9               	movlw	low (_logs+2)
  5327  000732  2406               	addwf	?___wmul,w,c
  5328  000734  6ED9               	movwf	fsr2l,c
  5329  000736  0E01               	movlw	high (_logs+2)
  5330  000738  2007               	addwfc	?___wmul+1,w,c
  5331  00073A  6EDA               	movwf	fsr2h,c
  5332  00073C  C0D3  FFDE         	movff	??_doOperation,postinc2
  5333  000740  C0D4  FFDD         	movff	??_doOperation+1,postdec2
  5334                           
  5335                           ;main.c: 1129:                     logs[0][5+(poleNumber-1)*3] = distanceToPoleCM;
  5336  000744  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  5337  000748  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  5338  00074C  0E00               	movlw	0
  5339  00074E  6E09               	movwf	___wmul@multiplicand+1,c
  5340  000750  0E03               	movlw	3
  5341  000752  6E08               	movwf	___wmul@multiplicand,c
  5342  000754  EC81  F024         	call	___wmul	;wreg free
  5343  000758  90D8               	bcf	status,0,c
  5344  00075A  3606               	rlcf	?___wmul,f,c
  5345  00075C  3607               	rlcf	?___wmul+1,f,c
  5346  00075E  0EAB               	movlw	low (_logs+4)
  5347  000760  2406               	addwf	?___wmul,w,c
  5348  000762  6ED9               	movwf	fsr2l,c
  5349  000764  0E01               	movlw	high (_logs+4)
  5350  000766  2007               	addwfc	?___wmul+1,w,c
  5351  000768  6EDA               	movwf	fsr2h,c
  5352  00076A  C148  FFDE         	movff	doOperation@distanceToPoleCM,postinc2
  5353  00076E  C149  FFDD         	movff	doOperation@distanceToPoleCM+1,postdec2
  5354                           
  5355                           ;main.c: 1132:                     tiresOnPole = 0;
  5356  000772  0E00               	movlw	0
  5357  000774  0101               	movlb	1	; () banked
  5358  000776  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  5359  000778  0E00               	movlw	0
  5360  00077A  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;main.c: 1133:                     tiresOnPoleAfterOp = 0;
  5364  00077C  0E00               	movlw	0
  5365  00077E  6F2C               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  5366  000780  0E00               	movlw	0
  5367  000782  6F2B               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  5368                           
  5369                           ; BSR set to: 1
  5370                           ;main.c: 1134:                     currentOperationState = leavePole;
  5371  000784  0E07               	movlw	7
  5372  000786  D002               	goto	L13
  5373  000788                     l10459:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;main.c: 1138:                 currentOperationState = moveForward;
  5377  000788  0E00               	movlw	0
  5378  00078A                     L14:
  5379  00078A  0101               	movlb	1	; () banked
  5380  00078C                     L13:
  5381  00078C  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5382                           
  5383                           ;main.c: 1139:     break;
  5384  00078E  D0CE               	goto	l10509
  5385  000790                     l10461:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;main.c: 1142:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5389  000790  0E01               	movlw	1
  5390  000792  EC3F  F025         	call	_lcdInst
  5391  000796  0E11               	movlw	17
  5392  000798  0100               	movlb	0	; () banked
  5393  00079A  6FD3               	movwf	??_doOperation& (0+255),b
  5394  00079C  0E3A               	movlw	58
  5395  00079E                     u12747:
  5396  00079E  2EE8               	decfsz	wreg,f,c
  5397  0007A0  D7FE               	bra	u12747
  5398  0007A2  2FD3               	decfsz	??_doOperation& (0+255),f,b
  5399  0007A4  D7FC               	bra	u12747
  5400  0007A6  F000               	nop	
  5401                           
  5402                           ;main.c: 1143:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  5403  0007A8  0E80               	movlw	128
  5404  0007AA  EC3F  F025         	call	_lcdInst
  5405  0007AE  0E07               	movlw	7
  5406  0007B0  0100               	movlb	0	; () banked
  5407  0007B2  6FD3               	movwf	??_doOperation& (0+255),b
  5408  0007B4  0E7D               	movlw	125
  5409  0007B6                     u12757:
  5410  0007B6  2EE8               	decfsz	wreg,f,c
  5411  0007B8  D7FE               	bra	u12757
  5412  0007BA  2FD3               	decfsz	??_doOperation& (0+255),f,b
  5413  0007BC  D7FC               	bra	u12757
  5414                           
  5415                           ;main.c: 1144:                 printf("Leaving Pole");
  5416  0007BE  0E38               	movlw	low STR_29
  5417  0007C0  0100               	movlb	0	; () banked
  5418  0007C2  6F9D               	movwf	printf@fmt& (0+255),b
  5419  0007C4  0EFF               	movlw	high STR_29
  5420  0007C6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  5421  0007C8  EC6D  F024         	call	_printf	;wreg free
  5422                           
  5423                           ;main.c: 1145:                 long startedDistA = motorADistance;
  5424  0007CC  C0DB  F108         	movff	_motorADistance,doOperation@startedDistA	;volatile
  5425  0007D0  C0DC  F109         	movff	_motorADistance+1,doOperation@startedDistA+1	;volatile
  5426  0007D4  C0DD  F10A         	movff	_motorADistance+2,doOperation@startedDistA+2	;volatile
  5427  0007D8  C0DE  F10B         	movff	_motorADistance+3,doOperation@startedDistA+3	;volatile
  5428                           
  5429                           ;main.c: 1146:                 long startedDistB = motorBDistance;
  5430  0007DC  C0D7  F10C         	movff	_motorBDistance,doOperation@startedDistB	;volatile
  5431  0007E0  C0D8  F10D         	movff	_motorBDistance+1,doOperation@startedDistB+1	;volatile
  5432  0007E4  C0D9  F10E         	movff	_motorBDistance+2,doOperation@startedDistB+2	;volatile
  5433  0007E8  C0DA  F10F         	movff	_motorBDistance+3,doOperation@startedDistB+3	;volatile
  5434                           
  5435                           ;main.c: 1150:                 opErrorCorrectionDegrees(90, 1, 0.1, 180, timeInOperation
      +                          );
  5436  0007EC  0E00               	movlw	0
  5437  0007EE  0100               	movlb	0	; () banked
  5438  0007F0  6FB3               	movwf	(opErrorCorrectionDegrees@goalSpeed+1)& (0+255),b
  5439  0007F2  0E5A               	movlw	90
  5440  0007F4  6FB2               	movwf	opErrorCorrectionDegrees@goalSpeed& (0+255),b
  5441  0007F6  0E00               	movlw	0
  5442  0007F8  6FB5               	movwf	(opErrorCorrectionDegrees@turnRatio+1)& (0+255),b
  5443  0007FA  0E01               	movlw	1
  5444  0007FC  6FB4               	movwf	opErrorCorrectionDegrees@turnRatio& (0+255),b
  5445  0007FE  0ECD               	movlw	205
  5446  000800  6FB6               	movwf	opErrorCorrectionDegrees@correctionConstant& (0+255),b
  5447  000802  0ECC               	movlw	204
  5448  000804  6FB7               	movwf	(opErrorCorrectionDegrees@correctionConstant+1)& (0+255),b
  5449  000806  0ECC               	movlw	204
  5450  000808  6FB8               	movwf	(opErrorCorrectionDegrees@correctionConstant+2)& (0+255),b
  5451  00080A  0E3D               	movlw	61
  5452  00080C  6FB9               	movwf	(opErrorCorrectionDegrees@correctionConstant+3)& (0+255),b
  5453  00080E  0EB4               	movlw	180
  5454  000810  6FBA               	movwf	opErrorCorrectionDegrees@distanceDegrees& (0+255),b
  5455  000812  0E00               	movlw	0
  5456  000814  6FBB               	movwf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),b
  5457  000816  0E00               	movlw	0
  5458  000818  6FBC               	movwf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),b
  5459  00081A  0E00               	movlw	0
  5460  00081C  6FBD               	movwf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),b
  5461  00081E  C14C  F0BE         	movff	doOperation@timeInOperation,opErrorCorrectionDegrees@maxOperationTime
  5462  000822  C14D  F0BF         	movff	doOperation@timeInOperation+1,opErrorCorrectionDegrees@maxOperationTime+1
  5463  000826  C14E  F0C0         	movff	doOperation@timeInOperation+2,opErrorCorrectionDegrees@maxOperationTime+2
  5464  00082A  C14F  F0C1         	movff	doOperation@timeInOperation+3,opErrorCorrectionDegrees@maxOperationTime+3
  5465  00082E  EC8D  F01C         	call	_opErrorCorrectionDegrees	;wreg free
  5466                           
  5467                           ;main.c: 1157:                 motorAStartDistance = 0ll;
  5468  000832  0E00               	movlw	0
  5469  000834  0101               	movlb	1	; () banked
  5470  000836  6F31               	movwf	doOperation@motorAStartDistance& (0+255),b
  5471  000838  0E00               	movlw	0
  5472  00083A  6F32               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  5473  00083C  0E00               	movlw	0
  5474  00083E  6F33               	movwf	(doOperation@motorAStartDistance+2)& (0+255),b
  5475  000840  0E00               	movlw	0
  5476  000842  6F34               	movwf	(doOperation@motorAStartDistance+3)& (0+255),b
  5477                           
  5478                           ; BSR set to: 1
  5479                           ;main.c: 1158:                 motorBStartDistance = 0ll;
  5480  000844  0E00               	movlw	0
  5481  000846  6F35               	movwf	doOperation@motorBStartDistance& (0+255),b
  5482  000848  0E00               	movlw	0
  5483  00084A  6F36               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  5484  00084C  0E00               	movlw	0
  5485  00084E  6F37               	movwf	(doOperation@motorBStartDistance+2)& (0+255),b
  5486  000850  0E00               	movlw	0
  5487  000852  6F38               	movwf	(doOperation@motorBStartDistance+3)& (0+255),b
  5488                           
  5489                           ; BSR set to: 1
  5490                           ;main.c: 1159:                 motorStartTime = millisecondsMeasured;
  5491  000854  C074  F122         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  5492  000858  C075  F123         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  5493  00085C  C076  F124         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  5494  000860  C077  F125         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;main.c: 1160:                 currentOperationState = moveForward;
  5498  000864  0E00               	movlw	0
  5499  000866  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5500                           
  5501                           ; BSR set to: 1
  5502                           ;main.c: 1163:                 topLaserState = PORTBbits.RB4;
  5503  000868  A881               	btfss	3969,4,c	;volatile
  5504  00086A  D002               	goto	u11860
  5505  00086C  0E01               	movlw	1
  5506  00086E  D001               	goto	u11866
  5507  000870                     u11860:
  5508  000870  0E00               	movlw	0
  5509  000872                     u11866:
  5510  000872  6F54               	movwf	doOperation@topLaserState& (0+255),b
  5511                           
  5512                           ; BSR set to: 1
  5513                           ;main.c: 1164:                 topLaserStatePrev = PORTBbits.RB4;
  5514  000874  A881               	btfss	3969,4,c	;volatile
  5515  000876  D002               	goto	u11870
  5516  000878  0E01               	movlw	1
  5517  00087A  D001               	goto	u11876
  5518  00087C                     u11870:
  5519  00087C  0E00               	movlw	0
  5520  00087E                     u11876:
  5521  00087E  6F4A               	movwf	doOperation@topLaserStatePrev& (0+255),b
  5522                           
  5523                           ; BSR set to: 1
  5524                           ;main.c: 1165:                 bottomLaserState = PORTBbits.RB5;
  5525  000880  AA81               	btfss	3969,5,c	;volatile
  5526  000882  D002               	goto	u11880
  5527  000884  0E01               	movlw	1
  5528  000886  D001               	goto	u11886
  5529  000888                     u11880:
  5530  000888  0E00               	movlw	0
  5531  00088A                     u11886:
  5532  00088A  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  5533                           
  5534                           ; BSR set to: 1
  5535                           ;main.c: 1166:                 bottomLaserStatePrev = PORTBbits.RB5;
  5536  00088C  AA81               	btfss	3969,5,c	;volatile
  5537  00088E  D002               	goto	u11890
  5538  000890  0E01               	movlw	1
  5539  000892  D001               	goto	u11896
  5540  000894                     u11890:
  5541  000894  0E00               	movlw	0
  5542  000896                     u11896:
  5543  000896  6F4B               	movwf	doOperation@bottomLaserStatePrev& (0+255),b
  5544                           
  5545                           ;main.c: 1168:                 break;
  5546  000898  D049               	goto	l10509
  5547  00089A                     l10493:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;main.c: 1174:                 setMotorSpeeds(0, 1, 1, 0);
  5551  00089A  0E00               	movlw	0
  5552  00089C  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5553  00089E  0E00               	movlw	0
  5554  0008A0  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5555  0008A2  0E01               	movlw	1
  5556  0008A4  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5557  0008A6  0E01               	movlw	1
  5558  0008A8  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5559  0008AA  0E00               	movlw	0
  5560  0008AC  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5561  0008AE  0E00               	movlw	0
  5562  0008B0  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5563  0008B2  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  5564                           
  5565                           ;main.c: 1177:                 sendArduinoAbortOperationMessage();
  5566  0008B6  ECD9  F024         	call	_sendArduinoAbortOperationMessage	;wreg free
  5567                           
  5568                           ;main.c: 1180:                 logs[0][0] = (int)(millisecondsMeasured/1000);
  5569  0008BA  C074  F006         	movff	_millisecondsMeasured,___lldiv@dividend	;volatile
  5570  0008BE  C075  F007         	movff	_millisecondsMeasured+1,___lldiv@dividend+1	;volatile
  5571  0008C2  C076  F008         	movff	_millisecondsMeasured+2,___lldiv@dividend+2	;volatile
  5572  0008C6  C077  F009         	movff	_millisecondsMeasured+3,___lldiv@dividend+3	;volatile
  5573  0008CA  0EE8               	movlw	232
  5574  0008CC  6E0A               	movwf	___lldiv@divisor,c
  5575  0008CE  0E03               	movlw	3
  5576  0008D0  6E0B               	movwf	___lldiv@divisor+1,c
  5577  0008D2  0E00               	movlw	0
  5578  0008D4  6E0C               	movwf	___lldiv@divisor+2,c
  5579  0008D6  0E00               	movlw	0
  5580  0008D8  6E0D               	movwf	___lldiv@divisor+3,c
  5581  0008DA  EC92  F020         	call	___lldiv	;wreg free
  5582  0008DE  C006  F1A7         	movff	?___lldiv,_logs
  5583  0008E2  C007  F1A8         	movff	?___lldiv+1,_logs+1
  5584                           
  5585                           ;main.c: 1190:                 LATAbits.LATA4 = 0;
  5586  0008E6  9889               	bcf	3977,4,c	;volatile
  5587  0008E8  0012               	return	
  5588  0008EA                     l10507:
  5589                           
  5590                           ; BSR set to: 1
  5591  0008EA  5151               	movf	doOperation@currentOperationState& (0+255),w,b
  5592  0008EC  0100               	movlb	0	; () banked
  5593  0008EE  6FD3               	movwf	??_doOperation& (0+255),b
  5594  0008F0  6BD4               	clrf	(??_doOperation+1)& (0+255),b
  5595                           
  5596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5597                           ; Switch size 1, requested type "simple"
  5598                           ; Number of cases is 1, Range of values is 0 to 0
  5599                           ; switch strategies available:
  5600                           ; Name         Instructions Cycles
  5601                           ; simple_byte            4     3 (average)
  5602                           ;	Chosen strategy is simple_byte
  5603  0008F2  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  5604  0008F4  0A00               	xorlw	0	; case 0
  5605  0008F6  A4D8               	btfss	status,2,c
  5606  0008F8  D019               	goto	l10509
  5607                           
  5608                           ; BSR set to: 0
  5609                           ; Switch size 1, requested type "simple"
  5610                           ; Number of cases is 8, Range of values is 0 to 7
  5611                           ; switch strategies available:
  5612                           ; Name         Instructions Cycles
  5613                           ; simple_byte           25    13 (average)
  5614                           ;	Chosen strategy is simple_byte
  5615  0008FA  51D3               	movf	??_doOperation& (0+255),w,b
  5616  0008FC  0A00               	xorlw	0	; case 0
  5617  0008FE  B4D8               	btfsc	status,2,c
  5618  000900  D463               	goto	l10311
  5619  000902  0A01               	xorlw	1	; case 1
  5620  000904  B4D8               	btfsc	status,2,c
  5621  000906  D4FA               	goto	l10339
  5622  000908  0A03               	xorlw	3	; case 2
  5623  00090A  B4D8               	btfsc	status,2,c
  5624  00090C  D64A               	goto	l10409
  5625  00090E  0A01               	xorlw	1	; case 3
  5626  000910  B4D8               	btfsc	status,2,c
  5627  000912  D6C1               	goto	l10437
  5628  000914  0A07               	xorlw	7	; case 4
  5629  000916  B4D8               	btfsc	status,2,c
  5630  000918  D737               	goto	l10459
  5631  00091A  0A01               	xorlw	1	; case 5
  5632  00091C  B4D8               	btfsc	status,2,c
  5633  00091E  D4EC               	goto	u11760
  5634  000920  0A03               	xorlw	3	; case 6
  5635  000922  B4D8               	btfsc	status,2,c
  5636  000924  D7BA               	goto	l10493
  5637  000926  0A01               	xorlw	1	; case 7
  5638  000928  B4D8               	btfsc	status,2,c
  5639  00092A  D732               	goto	l10461
  5640  00092C                     l10509:
  5641                           
  5642                           ;main.c: 1209:   if (millisecondsMeasured >= timeInOperation){
  5643  00092C  0101               	movlb	1	; () banked
  5644  00092E  514C               	movf	doOperation@timeInOperation& (0+255),w,b
  5645  000930  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5646  000932  514D               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  5647  000934  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5648  000936  514E               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  5649  000938  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5650  00093A  514F               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  5651  00093C  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5652  00093E  A0D8               	btfss	status,0,c
  5653  000940  D01B               	goto	l10529
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;main.c: 1210:    currentOperationState = complete;
  5657  000942  0E06               	movlw	6
  5658  000944  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5659  000946  D018               	goto	l10529
  5660  000948                     l10513:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;main.c: 1223:                 if (topLaserStatePrev != topLaserState || bottomLaserStat
      +                          ePrev != bottomLaserState){
  5664  000948  0101               	movlb	1	; () banked
  5665  00094A  5154               	movf	doOperation@topLaserState& (0+255),w,b
  5666  00094C  194A               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  5667  00094E  A4D8               	btfss	status,2,c
  5668  000950  D004               	goto	u11920
  5669                           
  5670                           ; BSR set to: 1
  5671  000952  5150               	movf	doOperation@bottomLaserState& (0+255),w,b
  5672  000954  194B               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  5673  000956  B4D8               	btfsc	status,2,c
  5674  000958  D423               	goto	l10301
  5675  00095A                     u11920:
  5676                           
  5677                           ; BSR set to: 1
  5678                           ;main.c: 1224:                     if (topLaserStatePrev != topLaserState){
  5679  00095A  5154               	movf	doOperation@topLaserState& (0+255),w,b
  5680  00095C  194A               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  5681  00095E  B4D8               	btfsc	status,2,c
  5682  000960  D002               	goto	l10521
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;main.c: 1225:                         badCount++;
  5686  000962  4B27               	infsnz	doOperation@badCount& (0+255),f,b
  5687  000964  2B28               	incf	(doOperation@badCount+1)& (0+255),f,b
  5688  000966                     l10521:
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;main.c: 1227:                     if (bottomLaserStatePrev != bottomLaserState){
  5692  000966  5150               	movf	doOperation@bottomLaserState& (0+255),w,b
  5693  000968  194B               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  5694  00096A  B4D8               	btfsc	status,2,c
  5695  00096C  D002               	goto	l10525
  5696                           
  5697                           ; BSR set to: 1
  5698                           ;main.c: 1228:                         badCountBot++;
  5699  00096E  4B29               	infsnz	doOperation@badCountBot& (0+255),f,b
  5700  000970  2B2A               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  5701  000972                     l10525:
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;main.c: 1230:                     currentOperationState = poleFinding;
  5705  000972  0E01               	movlw	1
  5706  000974  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5707  000976  D414               	goto	l10301
  5708  000978                     l10529:
  5709                           
  5710                           ; BSR set to: 1
  5711  000978  5151               	movf	doOperation@currentOperationState& (0+255),w,b
  5712  00097A  0100               	movlb	0	; () banked
  5713  00097C  6FD3               	movwf	??_doOperation& (0+255),b
  5714  00097E  6BD4               	clrf	(??_doOperation+1)& (0+255),b
  5715                           
  5716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5717                           ; Switch size 1, requested type "simple"
  5718                           ; Number of cases is 1, Range of values is 0 to 0
  5719                           ; switch strategies available:
  5720                           ; Name         Instructions Cycles
  5721                           ; simple_byte            4     3 (average)
  5722                           ;	Chosen strategy is simple_byte
  5723  000980  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  5724  000982  0A00               	xorlw	0	; case 0
  5725  000984  A4D8               	btfss	status,2,c
  5726  000986  D40C               	goto	l10301
  5727                           
  5728                           ; BSR set to: 0
  5729                           ; Switch size 1, requested type "simple"
  5730                           ; Number of cases is 7, Range of values is 0 to 7
  5731                           ; switch strategies available:
  5732                           ; Name         Instructions Cycles
  5733                           ; simple_byte           22    12 (average)
  5734                           ;	Chosen strategy is simple_byte
  5735  000988  51D3               	movf	??_doOperation& (0+255),w,b
  5736  00098A  0A00               	xorlw	0	; case 0
  5737  00098C  B4D8               	btfsc	status,2,c
  5738  00098E  D7DC               	goto	l10513
  5739  000990  0A01               	xorlw	1	; case 1
  5740  000992  B4D8               	btfsc	status,2,c
  5741  000994  D405               	goto	l10301
  5742  000996  0A03               	xorlw	3	; case 2
  5743  000998  B4D8               	btfsc	status,2,c
  5744  00099A  D402               	goto	l10301
  5745  00099C  0A06               	xorlw	6	; case 4
  5746  00099E  B4D8               	btfsc	status,2,c
  5747  0009A0  EFD0  F000         	goto	l10301
  5748  0009A4  0A01               	xorlw	1	; case 5
  5749  0009A6  B4D8               	btfsc	status,2,c
  5750  0009A8  EFD0  F000         	goto	l10301
  5751  0009AC  0A03               	xorlw	3	; case 6
  5752  0009AE  B4D8               	btfsc	status,2,c
  5753  0009B0  EFD0  F000         	goto	l10301
  5754  0009B4  0A01               	xorlw	1	; case 7
  5755  0009B6  EFD0  F000         	goto	l10301
  5756  0009BA                     __end_of_doOperation:
  5757                           	opt callstack 0
  5758                           
  5759 ;; *************** function _tirePositioning *****************
  5760 ;; Defined at:
  5761 ;;		line 523 in file "main.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  maxOperation    4   24[BANK0 ] unsigned long 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  startDistanc    4   41[BANK0 ] long 
  5766 ;;  distanceReco    4   53[BANK0 ] long 
  5767 ;;  distanceReco    4   49[BANK0 ] long 
  5768 ;;  startDistanc    4   37[BANK0 ] long 
  5769 ;;  startDistanc    4   33[BANK0 ] long 
  5770 ;;  bottomBreakb    2   59[BANK0 ] int 
  5771 ;;  topBreakbeam    2   57[BANK0 ] int 
  5772 ;;  bottomPrevio    2   47[BANK0 ] int 
  5773 ;;  topPreviousS    2   45[BANK0 ] int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2   24[BANK0 ] int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:       37 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    6
  5790 ;; This function calls:
  5791 ;;		___aldiv
  5792 ;;		_abs
  5793 ;;		_lcdInst
  5794 ;;		_opDelay
  5795 ;;		_setMotorSpeeds
  5796 ;; This function is called by:
  5797 ;;		_doOperation
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text12
  5802  0019F0                     __ptext12:
  5803                           	opt callstack 0
  5804  0019F0                     _tirePositioning:
  5805                           	opt callstack 23
  5806                           
  5807                           ;main.c: 524:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  5808                           
  5809                           ;incstack = 0
  5810  0019F0  0E01               	movlw	1
  5811  0019F2  EC3F  F025         	call	_lcdInst
  5812  0019F6  0E11               	movlw	17
  5813  0019F8  0100               	movlb	0	; () banked
  5814  0019FA  6F9C               	movwf	??_tirePositioning& (0+255),b
  5815  0019FC  0E3A               	movlw	58
  5816  0019FE                     u12767:
  5817  0019FE  2EE8               	decfsz	wreg,f,c
  5818  001A00  D7FE               	bra	u12767
  5819  001A02  2F9C               	decfsz	??_tirePositioning& (0+255),f,b
  5820  001A04  D7FC               	bra	u12767
  5821  001A06  F000               	nop	
  5822                           
  5823                           ;main.c: 525:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5824  001A08  0E80               	movlw	128
  5825  001A0A  EC3F  F025         	call	_lcdInst
  5826  001A0E  0E07               	movlw	7
  5827  001A10  0100               	movlb	0	; () banked
  5828  001A12  6F9C               	movwf	??_tirePositioning& (0+255),b
  5829  001A14  0E7D               	movlw	125
  5830  001A16                     u12777:
  5831  001A16  2EE8               	decfsz	wreg,f,c
  5832  001A18  D7FE               	bra	u12777
  5833  001A1A  2F9C               	decfsz	??_tirePositioning& (0+255),f,b
  5834  001A1C  D7FC               	bra	u12777
  5835                           
  5836                           ;main.c: 527:     int topBreakbeam;;main.c: 528:     int bottomBreakbeam;;main.c: 529:  
      +                             long distanceRecordedTop;;main.c: 530:     long startDistanceTop;;main.c: 531:     lo
      +                          ng distanceRecordedBottom;;main.c: 532:     long startDistanceBottom;;main.c: 533:     i
      +                          nt topPreviousState = 1;
  5837  001A1E  0E00               	movlw	0
  5838  001A20  0100               	movlb	0	; () banked
  5839  001A22  6FAE               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  5840  001A24  0E01               	movlw	1
  5841  001A26  6FAD               	movwf	tirePositioning@topPreviousState& (0+255),b
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;main.c: 534:     int bottomPreviousState = 1;
  5845  001A28  0E00               	movlw	0
  5846  001A2A  6FB0               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  5847  001A2C  0E01               	movlw	1
  5848  001A2E  6FAF               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  5849                           
  5850                           ;main.c: 537:     while(millisecondsMeasured < maxOperationTime){
  5851  001A30  D070               	goto	l9897
  5852  001A32                     l9869:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;main.c: 538:         topBreakbeam = PORTBbits.RB4;
  5856  001A32  A881               	btfss	3969,4,c	;volatile
  5857  001A34  D003               	goto	u11320
  5858  001A36  6B9C               	clrf	??_tirePositioning& (0+255),b
  5859  001A38  2B9C               	incf	??_tirePositioning& (0+255),f,b
  5860  001A3A  D002               	goto	u11328
  5861  001A3C                     u11320:
  5862  001A3C  0100               	movlb	0	; () banked
  5863  001A3E  6B9C               	clrf	??_tirePositioning& (0+255),b
  5864  001A40                     u11328:
  5865  001A40  519C               	movf	??_tirePositioning& (0+255),w,b
  5866  001A42  6FB9               	movwf	tirePositioning@topBreakbeam& (0+255),b
  5867  001A44  6BBA               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  5868                           
  5869                           ;main.c: 539:         bottomBreakbeam = PORTBbits.RB5;
  5870  001A46  AA81               	btfss	3969,5,c	;volatile
  5871  001A48  D003               	goto	u11330
  5872  001A4A  6B9C               	clrf	??_tirePositioning& (0+255),b
  5873  001A4C  2B9C               	incf	??_tirePositioning& (0+255),f,b
  5874  001A4E  D002               	goto	u11338
  5875  001A50                     u11330:
  5876  001A50  0100               	movlb	0	; () banked
  5877  001A52  6B9C               	clrf	??_tirePositioning& (0+255),b
  5878  001A54                     u11338:
  5879  001A54  519C               	movf	??_tirePositioning& (0+255),w,b
  5880  001A56  6FBB               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  5881  001A58  6BBC               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;main.c: 540:         if (topBreakbeam == 0 && topPreviousState == 1){
  5885  001A5A  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5886  001A5C  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5887  001A5E  A4D8               	btfss	status,2,c
  5888  001A60  D00C               	goto	l9877
  5889                           
  5890                           ; BSR set to: 0
  5891  001A62  05AD               	decf	tirePositioning@topPreviousState& (0+255),w,b
  5892  001A64  11AE               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  5893  001A66  A4D8               	btfss	status,2,c
  5894  001A68  D008               	goto	l9877
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;main.c: 541:             startDistanceTop = motorADistance;
  5898  001A6A  C0DB  F0A1         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  5899  001A6E  C0DC  F0A2         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  5900  001A72  C0DD  F0A3         	movff	_motorADistance+2,tirePositioning@startDistanceTop+2	;volatile
  5901  001A76  C0DE  F0A4         	movff	_motorADistance+3,tirePositioning@startDistanceTop+3	;volatile
  5902  001A7A                     l9877:
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;main.c: 543:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  5906  001A7A  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5907  001A7C  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5908  001A7E  A4D8               	btfss	status,2,c
  5909  001A80  D00C               	goto	l9883
  5910                           
  5911                           ; BSR set to: 0
  5912  001A82  05AF               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  5913  001A84  11B0               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  5914  001A86  A4D8               	btfss	status,2,c
  5915  001A88  D008               	goto	l9883
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;main.c: 544:             startDistanceBottom = motorADistance;
  5919  001A8A  C0DB  F0A5         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  5920  001A8E  C0DC  F0A6         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  5921  001A92  C0DD  F0A7         	movff	_motorADistance+2,tirePositioning@startDistanceBottom+2	;volatile
  5922  001A96  C0DE  F0A8         	movff	_motorADistance+3,tirePositioning@startDistanceBottom+3	;volatile
  5923  001A9A                     l9883:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;main.c: 546:         if(!topBreakbeam){
  5927  001A9A  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5928  001A9C  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5929  001A9E  A4D8               	btfss	status,2,c
  5930  001AA0  D012               	goto	l9887
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;main.c: 547:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  5934  001AA2  51A1               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  5935  001AA4  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5936  001AA6  6E18               	movwf	abs@a,c
  5937  001AA8  51A2               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  5938  001AAA  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5939  001AAC  6E19               	movwf	abs@a+1,c
  5940  001AAE  ECB6  F023         	call	_abs	;wreg free
  5941  001AB2  C018  F0B1         	movff	?_abs,tirePositioning@distanceRecordedTop
  5942  001AB6  C019  F0B2         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  5943  001ABA  0100               	movlb	0	; () banked
  5944  001ABC  0E00               	movlw	0
  5945  001ABE  BFB2               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  5946  001AC0  0EFF               	movlw	-1
  5947  001AC2  6FB3               	movwf	(tirePositioning@distanceRecordedTop+2)& (0+255),b
  5948  001AC4  6FB4               	movwf	(tirePositioning@distanceRecordedTop+3)& (0+255),b
  5949  001AC6                     l9887:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;main.c: 549:         if(!bottomBreakbeam){
  5953  001AC6  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5954  001AC8  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5955  001ACA  A4D8               	btfss	status,2,c
  5956  001ACC  D012               	goto	l9891
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;main.c: 550:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  5960  001ACE  51A5               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  5961  001AD0  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5962  001AD2  6E18               	movwf	abs@a,c
  5963  001AD4  51A6               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  5964  001AD6  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5965  001AD8  6E19               	movwf	abs@a+1,c
  5966  001ADA  ECB6  F023         	call	_abs	;wreg free
  5967  001ADE  C018  F0B5         	movff	?_abs,tirePositioning@distanceRecordedBottom
  5968  001AE2  C019  F0B6         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  5969  001AE6  0100               	movlb	0	; () banked
  5970  001AE8  0E00               	movlw	0
  5971  001AEA  BFB6               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  5972  001AEC  0EFF               	movlw	-1
  5973  001AEE  6FB7               	movwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),b
  5974  001AF0  6FB8               	movwf	(tirePositioning@distanceRecordedBottom+3)& (0+255),b
  5975  001AF2                     l9891:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;main.c: 552:         if(topBreakbeam && bottomBreakbeam){
  5979  001AF2  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5980  001AF4  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5981  001AF6  B4D8               	btfsc	status,2,c
  5982  001AF8  D004               	goto	l317
  5983                           
  5984                           ; BSR set to: 0
  5985  001AFA  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5986  001AFC  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5987  001AFE  A4D8               	btfss	status,2,c
  5988  001B00  D012               	goto	u11420
  5989  001B02                     l317:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;main.c: 555:         topPreviousState = topBreakbeam;
  5993  001B02  C0B9  F0AD         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  5994  001B06  C0BA  F0AE         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  5995                           
  5996                           ;main.c: 556:         bottomPreviousState = bottomBreakbeam;
  5997  001B0A  C0BB  F0AF         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  5998  001B0E  C0BC  F0B0         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  5999  001B12                     l9897:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;main.c: 537:     while(millisecondsMeasured < maxOperationTime){
  6003  001B12  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  6004  001B14  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6005  001B16  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  6006  001B18  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6007  001B1A  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  6008  001B1C  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6009  001B1E  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  6010  001B20  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6011  001B22  A0D8               	btfss	status,0,c
  6012  001B24  D786               	goto	l9869
  6013  001B26                     u11420:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;main.c: 569:     if (distanceRecordedTop < 80){
  6017  001B26  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  6018  001B28  D008               	goto	u11430
  6019  001B2A  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  6020  001B2C  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  6021  001B2E  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  6022  001B30  E14B               	bnz	l9913
  6023  001B32  0E50               	movlw	80
  6024  001B34  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  6025  001B36  B0D8               	btfsc	status,0,c
  6026  001B38  D047               	goto	l9913
  6027  001B3A                     u11430:
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;main.c: 570:         setMotorSpeeds(0, 1, 1, 0);
  6031  001B3A  0E00               	movlw	0
  6032  001B3C  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6033  001B3E  0E00               	movlw	0
  6034  001B40  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6035  001B42  0E01               	movlw	1
  6036  001B44  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6037  001B46  0E01               	movlw	1
  6038  001B48  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6039  001B4A  0E00               	movlw	0
  6040  001B4C  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6041  001B4E  0E00               	movlw	0
  6042  001B50  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6043  001B52  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6044                           
  6045                           ;main.c: 571:         opDelay(100, maxOperationTime);
  6046  001B56  0E00               	movlw	0
  6047  001B58  6E07               	movwf	opDelay@millis+1,c
  6048  001B5A  0E64               	movlw	100
  6049  001B5C  6E06               	movwf	opDelay@millis,c
  6050  001B5E  C098  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  6051  001B62  C099  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  6052  001B66  C09A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  6053  001B6A  C09B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  6054  001B6E  ECA9  F021         	call	_opDelay	;wreg free
  6055                           
  6056                           ;main.c: 572:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  6057  001B72  D00E               	goto	l9907
  6058  001B74                     l9905:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;main.c: 573:             setMotorSpeeds(90, 0, 0, 90);
  6062  001B74  0E00               	movlw	0
  6063  001B76  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6064  001B78  0E5A               	movlw	90
  6065  001B7A  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6066  001B7C  0E00               	movlw	0
  6067  001B7E  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6068  001B80  0E00               	movlw	0
  6069  001B82  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6070  001B84  0E00               	movlw	0
  6071  001B86  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6072  001B88  0E5A               	movlw	90
  6073  001B8A  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6074  001B8C  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6075  001B90                     l9907:
  6076                           
  6077                           ;main.c: 572:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  6078  001B90  0100               	movlb	0	; () banked
  6079  001B92  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  6080  001B94  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6081  001B96  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  6082  001B98  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6083  001B9A  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  6084  001B9C  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6085  001B9E  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  6086  001BA0  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6087  001BA2  B0D8               	btfsc	status,0,c
  6088  001BA4  D002               	goto	u11450
  6089                           
  6090                           ; BSR set to: 0
  6091  001BA6  B881               	btfsc	3969,4,c	;volatile
  6092  001BA8  D7E5               	goto	l9905
  6093  001BAA                     u11450:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;main.c: 575:         setMotorSpeeds(0, 1, 1, 0);
  6097  001BAA  0E00               	movlw	0
  6098  001BAC  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6099  001BAE  0E00               	movlw	0
  6100  001BB0  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6101  001BB2  0E01               	movlw	1
  6102  001BB4  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6103  001BB6  0E01               	movlw	1
  6104  001BB8  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6105  001BBA  0E00               	movlw	0
  6106  001BBC  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6107  001BBE  0E00               	movlw	0
  6108  001BC0  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6109  001BC2  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6110                           
  6111                           ;main.c: 576:     } else {
  6112  001BC6  D08E               	goto	l9931
  6113  001BC8                     l9913:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;main.c: 579:         setMotorSpeeds(0, 1, 1, 0);
  6117  001BC8  0E00               	movlw	0
  6118  001BCA  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6119  001BCC  0E00               	movlw	0
  6120  001BCE  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6121  001BD0  0E01               	movlw	1
  6122  001BD2  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6123  001BD4  0E01               	movlw	1
  6124  001BD6  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6125  001BD8  0E00               	movlw	0
  6126  001BDA  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6127  001BDC  0E00               	movlw	0
  6128  001BDE  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6129  001BE0  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6130                           
  6131                           ;main.c: 580:         opDelay(100, maxOperationTime);
  6132  001BE4  0E00               	movlw	0
  6133  001BE6  6E07               	movwf	opDelay@millis+1,c
  6134  001BE8  0E64               	movlw	100
  6135  001BEA  6E06               	movwf	opDelay@millis,c
  6136  001BEC  C098  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  6137  001BF0  C099  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  6138  001BF4  C09A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  6139  001BF8  C09B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  6140  001BFC  ECA9  F021         	call	_opDelay	;wreg free
  6141                           
  6142                           ;main.c: 581:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  6143  001C00  D00E               	goto	l9919
  6144  001C02                     l9917:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;main.c: 582:             setMotorSpeeds(90, 0, 0, 90);
  6148  001C02  0E00               	movlw	0
  6149  001C04  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6150  001C06  0E5A               	movlw	90
  6151  001C08  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6152  001C0A  0E00               	movlw	0
  6153  001C0C  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6154  001C0E  0E00               	movlw	0
  6155  001C10  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6156  001C12  0E00               	movlw	0
  6157  001C14  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6158  001C16  0E5A               	movlw	90
  6159  001C18  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6160  001C1A  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6161  001C1E                     l9919:
  6162                           
  6163                           ;main.c: 581:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  6164  001C1E  0100               	movlb	0	; () banked
  6165  001C20  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  6166  001C22  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6167  001C24  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  6168  001C26  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6169  001C28  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  6170  001C2A  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6171  001C2C  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  6172  001C2E  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6173  001C30  B0D8               	btfsc	status,0,c
  6174  001C32  D002               	goto	u11470
  6175                           
  6176                           ; BSR set to: 0
  6177  001C34  B881               	btfsc	3969,4,c	;volatile
  6178  001C36  D7E5               	goto	l9917
  6179  001C38                     u11470:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;main.c: 584:         long startDistance = motorADistance;
  6183  001C38  C0DB  F0A9         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  6184  001C3C  C0DC  F0AA         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  6185  001C40  C0DD  F0AB         	movff	_motorADistance+2,tirePositioning@startDistance+2	;volatile
  6186  001C44  C0DE  F0AC         	movff	_motorADistance+3,tirePositioning@startDistance+3	;volatile
  6187                           
  6188                           ;main.c: 585:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  6189  001C48  D00E               	goto	l9925
  6190  001C4A                     l9923:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;main.c: 586:             setMotorSpeeds(90, 0, 0, 90);
  6194  001C4A  0E00               	movlw	0
  6195  001C4C  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  6196  001C4E  0E5A               	movlw	90
  6197  001C50  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  6198  001C52  0E00               	movlw	0
  6199  001C54  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  6200  001C56  0E00               	movlw	0
  6201  001C58  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  6202  001C5A  0E00               	movlw	0
  6203  001C5C  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  6204  001C5E  0E5A               	movlw	90
  6205  001C60  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  6206  001C62  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  6207  001C66                     l9925:
  6208                           
  6209                           ;main.c: 585:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  6210  001C66  0100               	movlb	0	; () banked
  6211  001C68  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  6212  001C6A  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6213  001C6C  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  6214  001C6E  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6215  001C70  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  6216  001C72  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6217  001C74  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  6218  001C76  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6219  001C78  B0D8               	btfsc	status,0,c
  6220  001C7A  D797               	goto	u11450
  6221                           
  6222                           ; BSR set to: 0
  6223  001C7C  51DB               	movf	_motorADistance& (0+255),w,b	;volatile
  6224  001C7E  5DA9               	subwf	tirePositioning@startDistance& (0+255),w,b
  6225  001C80  6E18               	movwf	abs@a,c
  6226  001C82  51DC               	movf	(_motorADistance+1)& (0+255),w,b	;volatile
  6227  001C84  59AA               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  6228  001C86  6E19               	movwf	abs@a+1,c
  6229  001C88  ECB6  F023         	call	_abs	;wreg free
  6230  001C8C  C018  F09C         	movff	?_abs,??_tirePositioning
  6231  001C90  C019  F09D         	movff	?_abs+1,??_tirePositioning+1
  6232  001C94  0E00               	movlw	0
  6233  001C96  0100               	movlb	0	; () banked
  6234  001C98  BF9D               	btfsc	(??_tirePositioning+1)& (0+255),7,b
  6235  001C9A  0EFF               	movlw	255
  6236  001C9C  6F9E               	movwf	(??_tirePositioning+2)& (0+255),b
  6237  001C9E  6F9F               	movwf	(??_tirePositioning+3)& (0+255),b
  6238  001CA0  C0B5  F006         	movff	tirePositioning@distanceRecordedBottom,___aldiv@dividend
  6239  001CA4  C0B6  F007         	movff	tirePositioning@distanceRecordedBottom+1,___aldiv@dividend+1
  6240  001CA8  C0B7  F008         	movff	tirePositioning@distanceRecordedBottom+2,___aldiv@dividend+2
  6241  001CAC  C0B8  F009         	movff	tirePositioning@distanceRecordedBottom+3,___aldiv@dividend+3
  6242  001CB0  0E02               	movlw	2
  6243  001CB2  6E0A               	movwf	___aldiv@divisor,c
  6244  001CB4  0E00               	movlw	0
  6245  001CB6  6E0B               	movwf	___aldiv@divisor+1,c
  6246  001CB8  0E00               	movlw	0
  6247  001CBA  6E0C               	movwf	___aldiv@divisor+2,c
  6248  001CBC  0E00               	movlw	0
  6249  001CBE  6E0D               	movwf	___aldiv@divisor+3,c
  6250  001CC0  EC49  F01E         	call	___aldiv	;wreg free
  6251  001CC4  5006               	movf	?___aldiv,w,c
  6252  001CC6  0100               	movlb	0	; () banked
  6253  001CC8  5D9C               	subwf	??_tirePositioning& (0+255),w,b
  6254  001CCA  5007               	movf	?___aldiv+1,w,c
  6255  001CCC  599D               	subwfb	(??_tirePositioning+1)& (0+255),w,b
  6256  001CCE  5008               	movf	?___aldiv+2,w,c
  6257  001CD0  599E               	subwfb	(??_tirePositioning+2)& (0+255),w,b
  6258  001CD2  519F               	movf	(??_tirePositioning+3)& (0+255),w,b
  6259  001CD4  0A80               	xorlw	128
  6260  001CD6  6FA0               	movwf	(??_tirePositioning+4)& (0+255),b
  6261  001CD8  5009               	movf	?___aldiv+3,w,c
  6262  001CDA  0A80               	xorlw	128
  6263  001CDC  59A0               	subwfb	(??_tirePositioning+4)& (0+255),w,b
  6264  001CDE  B0D8               	btfsc	status,0,c
  6265  001CE0  D764               	goto	u11450
  6266  001CE2  D7B3               	goto	l9923
  6267  001CE4                     l9931:
  6268                           
  6269                           ;main.c: 592:     if (distanceRecordedTop < 80 && distanceRecordedBottom < 80){
  6270  001CE4  0100               	movlb	0	; () banked
  6271  001CE6  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  6272  001CE8  D008               	goto	u11500
  6273  001CEA  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  6274  001CEC  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  6275  001CEE  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  6276  001CF0  E113               	bnz	l9941
  6277  001CF2  0E50               	movlw	80
  6278  001CF4  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  6279  001CF6  B0D8               	btfsc	status,0,c
  6280  001CF8  D00F               	goto	l9941
  6281  001CFA                     u11500:
  6282                           
  6283                           ; BSR set to: 0
  6284  001CFA  BFB8               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  6285  001CFC  D008               	goto	u11510
  6286  001CFE  51B8               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  6287  001D00  11B7               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  6288  001D02  11B6               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  6289  001D04  E109               	bnz	l9941
  6290  001D06  0E50               	movlw	80
  6291  001D08  5DB5               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  6292  001D0A  B0D8               	btfsc	status,0,c
  6293  001D0C  D005               	goto	l9941
  6294  001D0E                     u11510:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;main.c: 593:         return 0;
  6298  001D0E  0E00               	movlw	0
  6299  001D10  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  6300  001D12  0E00               	movlw	0
  6301  001D14  6F98               	movwf	?_tirePositioning& (0+255),b
  6302  001D16  0012               	return	
  6303  001D18                     l9941:
  6304                           
  6305                           ; BSR set to: 0
  6306  001D18  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  6307  001D1A  D017               	goto	l9951
  6308  001D1C  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  6309  001D1E  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  6310  001D20  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  6311  001D22  E104               	bnz	u11520
  6312  001D24  0E51               	movlw	81
  6313  001D26  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  6314  001D28  A0D8               	btfss	status,0,c
  6315  001D2A  D00F               	goto	l9951
  6316  001D2C                     u11520:
  6317                           
  6318                           ; BSR set to: 0
  6319  001D2C  BFB8               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  6320  001D2E  D00D               	goto	l9951
  6321  001D30  51B8               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  6322  001D32  11B7               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  6323  001D34  11B6               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  6324  001D36  E104               	bnz	u11530
  6325  001D38  0E51               	movlw	81
  6326  001D3A  5DB5               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  6327  001D3C  A0D8               	btfss	status,0,c
  6328  001D3E  D005               	goto	l9951
  6329  001D40                     u11530:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;main.c: 595:         return 2;
  6333  001D40  0E00               	movlw	0
  6334  001D42  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  6335  001D44  0E02               	movlw	2
  6336  001D46  6F98               	movwf	?_tirePositioning& (0+255),b
  6337  001D48  0012               	return	
  6338  001D4A                     l9951:
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;main.c: 597:         return 1;
  6342  001D4A  0E00               	movlw	0
  6343  001D4C  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  6344  001D4E  0E01               	movlw	1
  6345  001D50  6F98               	movwf	?_tirePositioning& (0+255),b
  6346                           
  6347                           ; BSR set to: 0
  6348  001D52  0012               	return		;funcret
  6349  001D54                     __end_of_tirePositioning:
  6350                           	opt callstack 0
  6351                           
  6352 ;; *************** function _opDelay *****************
  6353 ;; Defined at:
  6354 ;;		line 124 in file "main.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  millis          2    5[COMRAM] int 
  6357 ;;  maxOperation    4    7[COMRAM] unsigned long 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  startTime       4   19[COMRAM] unsigned long 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6369 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;Total ram usage:       18 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    2
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_tirePositioning
  6380 ;;		_doOperation
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text13
  6385  004352                     __ptext13:
  6386                           	opt callstack 0
  6387  004352                     _opDelay:
  6388                           	opt callstack 26
  6389                           
  6390                           ;main.c: 125:     unsigned long startTime = millisecondsMeasured;
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;incstack = 0
  6394  004352  C074  F014         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  6395  004356  C075  F015         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  6396  00435A  C076  F016         	movff	_millisecondsMeasured+2,opDelay@startTime+2	;volatile
  6397  00435E  C077  F017         	movff	_millisecondsMeasured+3,opDelay@startTime+3	;volatile
  6398  004362                     l9547:
  6399                           
  6400                           ;main.c: 126:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  6401  004362  5008               	movf	opDelay@maxOperationTime,w,c
  6402  004364  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6403  004366  5009               	movf	opDelay@maxOperationTime+1,w,c
  6404  004368  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6405  00436A  500A               	movf	opDelay@maxOperationTime+2,w,c
  6406  00436C  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6407  00436E  500B               	movf	opDelay@maxOperationTime+3,w,c
  6408  004370  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6409  004372  B0D8               	btfsc	status,0,c
  6410  004374  0012               	return	
  6411  004376  C006  F00C         	movff	opDelay@millis,??_opDelay
  6412  00437A  C007  F00D         	movff	opDelay@millis+1,??_opDelay+1
  6413  00437E  0E00               	movlw	0
  6414  004380  BE0D               	btfsc	(??_opDelay+1)& (0+255),7,c
  6415  004382  0EFF               	movlw	255
  6416  004384  6E0E               	movwf	(??_opDelay+2)& (0+255),c
  6417  004386  6E0F               	movwf	(??_opDelay+3)& (0+255),c
  6418  004388  5014               	movf	opDelay@startTime,w,c
  6419  00438A  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6420  00438C  6E10               	movwf	(??_opDelay+4)& (0+255),c
  6421  00438E  5015               	movf	opDelay@startTime+1,w,c
  6422  004390  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6423  004392  6E11               	movwf	(??_opDelay+5)& (0+255),c
  6424  004394  5016               	movf	opDelay@startTime+2,w,c
  6425  004396  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6426  004398  6E12               	movwf	(??_opDelay+6)& (0+255),c
  6427  00439A  5017               	movf	opDelay@startTime+3,w,c
  6428  00439C  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6429  00439E  6E13               	movwf	(??_opDelay+7)& (0+255),c
  6430  0043A0  500C               	movf	??_opDelay,w,c
  6431  0043A2  5C10               	subwf	??_opDelay+4,w,c
  6432  0043A4  500D               	movf	??_opDelay+1,w,c
  6433  0043A6  5811               	subwfb	??_opDelay+5,w,c
  6434  0043A8  500E               	movf	??_opDelay+2,w,c
  6435  0043AA  5812               	subwfb	??_opDelay+6,w,c
  6436  0043AC  500F               	movf	??_opDelay+3,w,c
  6437  0043AE  5813               	subwfb	??_opDelay+7,w,c
  6438  0043B0  B0D8               	btfsc	status,0,c
  6439  0043B2  0012               	return	
  6440  0043B4  D7D6               	goto	l9547
  6441  0043B6                     __end_of_opDelay:
  6442                           	opt callstack 0
  6443                           
  6444 ;; *************** function ___aldiv *****************
  6445 ;; Defined at:
  6446 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  dividend        4    5[COMRAM] long 
  6449 ;;  divisor         4    9[COMRAM] long 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  quotient        4   15[COMRAM] long 
  6452 ;;  sign            1   14[COMRAM] unsigned char 
  6453 ;;  counter         1   13[COMRAM] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  4    5[COMRAM] long 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;Total ram usage:       14 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    2
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_tirePositioning
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text14
  6478  003C92                     __ptext14:
  6479                           	opt callstack 0
  6480  003C92                     ___aldiv:
  6481                           	opt callstack 26
  6482                           
  6483                           ;incstack = 0
  6484  003C92  0E00               	movlw	0
  6485  003C94  6E0F               	movwf	___aldiv@sign,c
  6486  003C96  AE0D               	btfss	___aldiv@divisor+3,7,c
  6487  003C98  D00A               	goto	l9683
  6488  003C9A  1E0D               	comf	___aldiv@divisor+3,f,c
  6489  003C9C  1E0C               	comf	___aldiv@divisor+2,f,c
  6490  003C9E  1E0B               	comf	___aldiv@divisor+1,f,c
  6491  003CA0  6C0A               	negf	___aldiv@divisor,c
  6492  003CA2  0E00               	movlw	0
  6493  003CA4  220B               	addwfc	___aldiv@divisor+1,f,c
  6494  003CA6  220C               	addwfc	___aldiv@divisor+2,f,c
  6495  003CA8  220D               	addwfc	___aldiv@divisor+3,f,c
  6496  003CAA  0E01               	movlw	1
  6497  003CAC  6E0F               	movwf	___aldiv@sign,c
  6498  003CAE                     l9683:
  6499  003CAE  AE09               	btfss	___aldiv@dividend+3,7,c
  6500  003CB0  D00A               	goto	l9689
  6501  003CB2  1E09               	comf	___aldiv@dividend+3,f,c
  6502  003CB4  1E08               	comf	___aldiv@dividend+2,f,c
  6503  003CB6  1E07               	comf	___aldiv@dividend+1,f,c
  6504  003CB8  6C06               	negf	___aldiv@dividend,c
  6505  003CBA  0E00               	movlw	0
  6506  003CBC  2207               	addwfc	___aldiv@dividend+1,f,c
  6507  003CBE  2208               	addwfc	___aldiv@dividend+2,f,c
  6508  003CC0  2209               	addwfc	___aldiv@dividend+3,f,c
  6509  003CC2  0E01               	movlw	1
  6510  003CC4  1A0F               	xorwf	___aldiv@sign,f,c
  6511  003CC6                     l9689:
  6512  003CC6  0E00               	movlw	0
  6513  003CC8  6E10               	movwf	___aldiv@quotient,c
  6514  003CCA  0E00               	movlw	0
  6515  003CCC  6E11               	movwf	___aldiv@quotient+1,c
  6516  003CCE  0E00               	movlw	0
  6517  003CD0  6E12               	movwf	___aldiv@quotient+2,c
  6518  003CD2  0E00               	movlw	0
  6519  003CD4  6E13               	movwf	___aldiv@quotient+3,c
  6520  003CD6  500A               	movf	___aldiv@divisor,w,c
  6521  003CD8  100B               	iorwf	___aldiv@divisor+1,w,c
  6522  003CDA  100C               	iorwf	___aldiv@divisor+2,w,c
  6523  003CDC  100D               	iorwf	___aldiv@divisor+3,w,c
  6524  003CDE  B4D8               	btfsc	status,2,c
  6525  003CE0  D02A               	goto	l9711
  6526  003CE2  0E01               	movlw	1
  6527  003CE4  6E0E               	movwf	___aldiv@counter,c
  6528  003CE6  D006               	goto	l9697
  6529  003CE8                     l9695:
  6530  003CE8  90D8               	bcf	status,0,c
  6531  003CEA  360A               	rlcf	___aldiv@divisor,f,c
  6532  003CEC  360B               	rlcf	___aldiv@divisor+1,f,c
  6533  003CEE  360C               	rlcf	___aldiv@divisor+2,f,c
  6534  003CF0  360D               	rlcf	___aldiv@divisor+3,f,c
  6535  003CF2  2A0E               	incf	___aldiv@counter,f,c
  6536  003CF4                     l9697:
  6537  003CF4  AE0D               	btfss	___aldiv@divisor+3,7,c
  6538  003CF6  D7F8               	goto	l9695
  6539  003CF8                     u11190:
  6540  003CF8  90D8               	bcf	status,0,c
  6541  003CFA  3610               	rlcf	___aldiv@quotient,f,c
  6542  003CFC  3611               	rlcf	___aldiv@quotient+1,f,c
  6543  003CFE  3612               	rlcf	___aldiv@quotient+2,f,c
  6544  003D00  3613               	rlcf	___aldiv@quotient+3,f,c
  6545  003D02  500A               	movf	___aldiv@divisor,w,c
  6546  003D04  5C06               	subwf	___aldiv@dividend,w,c
  6547  003D06  500B               	movf	___aldiv@divisor+1,w,c
  6548  003D08  5807               	subwfb	___aldiv@dividend+1,w,c
  6549  003D0A  500C               	movf	___aldiv@divisor+2,w,c
  6550  003D0C  5808               	subwfb	___aldiv@dividend+2,w,c
  6551  003D0E  500D               	movf	___aldiv@divisor+3,w,c
  6552  003D10  5809               	subwfb	___aldiv@dividend+3,w,c
  6553  003D12  A0D8               	btfss	status,0,c
  6554  003D14  D009               	goto	l9707
  6555  003D16  500A               	movf	___aldiv@divisor,w,c
  6556  003D18  5E06               	subwf	___aldiv@dividend,f,c
  6557  003D1A  500B               	movf	___aldiv@divisor+1,w,c
  6558  003D1C  5A07               	subwfb	___aldiv@dividend+1,f,c
  6559  003D1E  500C               	movf	___aldiv@divisor+2,w,c
  6560  003D20  5A08               	subwfb	___aldiv@dividend+2,f,c
  6561  003D22  500D               	movf	___aldiv@divisor+3,w,c
  6562  003D24  5A09               	subwfb	___aldiv@dividend+3,f,c
  6563  003D26  8010               	bsf	___aldiv@quotient,0,c
  6564  003D28                     l9707:
  6565  003D28  90D8               	bcf	status,0,c
  6566  003D2A  320D               	rrcf	___aldiv@divisor+3,f,c
  6567  003D2C  320C               	rrcf	___aldiv@divisor+2,f,c
  6568  003D2E  320B               	rrcf	___aldiv@divisor+1,f,c
  6569  003D30  320A               	rrcf	___aldiv@divisor,f,c
  6570  003D32  2E0E               	decfsz	___aldiv@counter,f,c
  6571  003D34  D7E1               	goto	u11190
  6572  003D36                     l9711:
  6573  003D36  500F               	movf	___aldiv@sign,w,c
  6574  003D38  B4D8               	btfsc	status,2,c
  6575  003D3A  D008               	goto	l9715
  6576  003D3C  1E13               	comf	___aldiv@quotient+3,f,c
  6577  003D3E  1E12               	comf	___aldiv@quotient+2,f,c
  6578  003D40  1E11               	comf	___aldiv@quotient+1,f,c
  6579  003D42  6C10               	negf	___aldiv@quotient,c
  6580  003D44  0E00               	movlw	0
  6581  003D46  2211               	addwfc	___aldiv@quotient+1,f,c
  6582  003D48  2212               	addwfc	___aldiv@quotient+2,f,c
  6583  003D4A  2213               	addwfc	___aldiv@quotient+3,f,c
  6584  003D4C                     l9715:
  6585  003D4C  C010  F006         	movff	___aldiv@quotient,?___aldiv
  6586  003D50  C011  F007         	movff	___aldiv@quotient+1,?___aldiv+1
  6587  003D54  C012  F008         	movff	___aldiv@quotient+2,?___aldiv+2
  6588  003D58  C013  F009         	movff	___aldiv@quotient+3,?___aldiv+3
  6589  003D5C  0012               	return		;funcret
  6590  003D5E                     __end_of___aldiv:
  6591                           	opt callstack 0
  6592                           
  6593 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  6594 ;; Defined at:
  6595 ;;		line 674 in file "main.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  data            1    0        unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:        1 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    4
  6616 ;; This function calls:
  6617 ;;		_I2C_Master_Start
  6618 ;;		_I2C_Master_Stop
  6619 ;;		_I2C_Master_Write
  6620 ;; This function is called by:
  6621 ;;		_doOperation
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text15
  6626  00496E                     __ptext15:
  6627                           	opt callstack 0
  6628  00496E                     _sendArduinoTireOperationStartMessage:
  6629                           	opt callstack 25
  6630                           
  6631                           ;main.c: 679:     I2C_Master_Start();
  6632                           
  6633                           ;incstack = 0
  6634  00496E  EC53  F025         	call	_I2C_Master_Start	;wreg free
  6635                           
  6636                           ;main.c: 680:     I2C_Master_Write(0b00010000);
  6637  004972  0E00               	movlw	0
  6638  004974  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6639  004976  0E10               	movlw	16
  6640  004978  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6641  00497A  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6642                           
  6643                           ;main.c: 681:     I2C_Master_Write(data);
  6644  00497E  0E00               	movlw	0
  6645  004980  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6646  004982  0E32               	movlw	50
  6647  004984  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6648  004986  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6649                           
  6650                           ;main.c: 682:     I2C_Master_Stop();
  6651  00498A  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  6652  00498E  0012               	return		;funcret
  6653  004990                     __end_of_sendArduinoTireOperationStartMessage:
  6654                           	opt callstack 0
  6655                           
  6656 ;; *************** function _sendArduinoTireDropRequest *****************
  6657 ;; Defined at:
  6658 ;;		line 605 in file "main.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;		None
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  data            1    0        unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  1    wreg      void 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;Total ram usage:        1 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    4
  6679 ;; This function calls:
  6680 ;;		_I2C_Master_Start
  6681 ;;		_I2C_Master_Stop
  6682 ;;		_I2C_Master_Write
  6683 ;; This function is called by:
  6684 ;;		_doOperation
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text16
  6689  004990                     __ptext16:
  6690                           	opt callstack 0
  6691  004990                     _sendArduinoTireDropRequest:
  6692                           	opt callstack 25
  6693                           
  6694                           ;main.c: 611:     I2C_Master_Start();
  6695                           
  6696                           ;incstack = 0
  6697  004990  EC53  F025         	call	_I2C_Master_Start	;wreg free
  6698                           
  6699                           ;main.c: 612:     I2C_Master_Write(0b00010000);
  6700  004994  0E00               	movlw	0
  6701  004996  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6702  004998  0E10               	movlw	16
  6703  00499A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6704  00499C  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6705                           
  6706                           ;main.c: 613:     I2C_Master_Write(data);
  6707  0049A0  0E00               	movlw	0
  6708  0049A2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6709  0049A4  0E31               	movlw	49
  6710  0049A6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6711  0049A8  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6712                           
  6713                           ;main.c: 614:     I2C_Master_Stop();
  6714  0049AC  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  6715  0049B0  0012               	return		;funcret
  6716  0049B2                     __end_of_sendArduinoTireDropRequest:
  6717                           	opt callstack 0
  6718                           
  6719 ;; *************** function _sendArduinoAbortOperationMessage *****************
  6720 ;; Defined at:
  6721 ;;		line 714 in file "main.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  data            1    0        unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, status,0, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;Total ram usage:        1 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    4
  6742 ;; This function calls:
  6743 ;;		_I2C_Master_Start
  6744 ;;		_I2C_Master_Stop
  6745 ;;		_I2C_Master_Write
  6746 ;; This function is called by:
  6747 ;;		_doOperation
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text17
  6752  0049B2                     __ptext17:
  6753                           	opt callstack 0
  6754  0049B2                     _sendArduinoAbortOperationMessage:
  6755                           	opt callstack 25
  6756                           
  6757                           ;main.c: 721:     I2C_Master_Start();
  6758                           
  6759                           ;incstack = 0
  6760  0049B2  EC53  F025         	call	_I2C_Master_Start	;wreg free
  6761                           
  6762                           ;main.c: 722:     I2C_Master_Write(0b00010000);
  6763  0049B6  0E00               	movlw	0
  6764  0049B8  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6765  0049BA  0E10               	movlw	16
  6766  0049BC  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6767  0049BE  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6768                           
  6769                           ;main.c: 723:     I2C_Master_Write(data);
  6770  0049C2  0E00               	movlw	0
  6771  0049C4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6772  0049C6  0E33               	movlw	51
  6773  0049C8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6774  0049CA  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6775                           
  6776                           ;main.c: 724:     I2C_Master_Stop();
  6777  0049CE  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  6778  0049D2  0012               	return		;funcret
  6779  0049D4                     __end_of_sendArduinoAbortOperationMessage:
  6780                           	opt callstack 0
  6781                           
  6782 ;; *************** function _requestIsTireDropDone *****************
  6783 ;; Defined at:
  6784 ;;		line 729 in file "main.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  data            1    8[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      _Bool 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;Total ram usage:        1 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    4
  6805 ;; This function calls:
  6806 ;;		_I2C_Master_Read
  6807 ;;		_I2C_Master_Start
  6808 ;;		_I2C_Master_Stop
  6809 ;;		_I2C_Master_Write
  6810 ;; This function is called by:
  6811 ;;		_doOperation
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text18
  6816  00485C                     __ptext18:
  6817                           	opt callstack 0
  6818  00485C                     _requestIsTireDropDone:
  6819                           	opt callstack 25
  6820                           
  6821                           ;main.c: 730:     I2C_Master_Start();
  6822                           
  6823                           ;incstack = 0
  6824  00485C  EC53  F025         	call	_I2C_Master_Start	;wreg free
  6825                           
  6826                           ;main.c: 731:     I2C_Master_Write(0b00010001);
  6827  004860  0E00               	movlw	0
  6828  004862  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6829  004864  0E11               	movlw	17
  6830  004866  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6831  004868  EC45  F025         	call	_I2C_Master_Write	;wreg free
  6832                           
  6833                           ;main.c: 732:     unsigned char data = I2C_Master_Read(1);
  6834  00486C  0E01               	movlw	1
  6835  00486E  EC94  F024         	call	_I2C_Master_Read
  6836  004872  6E09               	movwf	requestIsTireDropDone@data,c
  6837                           
  6838                           ;main.c: 733:     I2C_Master_Stop();
  6839  004874  EC4F  F025         	call	_I2C_Master_Stop	;wreg free
  6840                           
  6841                           ;main.c: 734:     if(data == '1'){
  6842  004878  0E31               	movlw	49
  6843  00487A  1809               	xorwf	requestIsTireDropDone@data,w,c
  6844  00487C  A4D8               	btfss	status,2,c
  6845  00487E  D002               	goto	l9999
  6846                           
  6847                           ;main.c: 735:         return 1;
  6848  004880  0E01               	movlw	1
  6849  004882  0012               	return	
  6850  004884                     l9999:
  6851                           
  6852                           ;main.c: 737:     return 0;
  6853  004884  0E00               	movlw	0
  6854  004886  0012               	return		;funcret
  6855  004888                     __end_of_requestIsTireDropDone:
  6856                           	opt callstack 0
  6857                           
  6858 ;; *************** function _I2C_Master_Write *****************
  6859 ;; Defined at:
  6860 ;;		line 70 in file "I2C.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;Total ram usage:        2 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    3
  6881 ;; This function calls:
  6882 ;;		_I2C_Master_Wait
  6883 ;; This function is called by:
  6884 ;;		_sendArduinoTireDropRequest
  6885 ;;		_sendArduinoStandbyClampRequest
  6886 ;;		_sendArduinoTireOperationStartMessage
  6887 ;;		_sendArduinoAbortOperationMessage
  6888 ;;		_requestIsTireDropDone
  6889 ;;		_doOperation
  6890 ;;		_main
  6891 ;;		_sendArduinoLogs
  6892 ;;		_rtc_set_time
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text19
  6897  004A8A                     __ptext19:
  6898                           	opt callstack 0
  6899  004A8A                     _I2C_Master_Write:
  6900                           	opt callstack 26
  6901                           
  6902                           ;I2C.c: 71:     I2C_Master_Wait();
  6903                           
  6904                           ;incstack = 0
  6905  004A8A  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  6906                           
  6907                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  6908  004A8E  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  6909  004A92  0012               	return		;funcret
  6910  004A94                     __end_of_I2C_Master_Write:
  6911                           	opt callstack 0
  6912                           
  6913 ;; *************** function _I2C_Master_Stop *****************
  6914 ;; Defined at:
  6915 ;;		line 65 in file "I2C.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;		None
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;Total ram usage:        0 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    3
  6936 ;; This function calls:
  6937 ;;		_I2C_Master_Wait
  6938 ;; This function is called by:
  6939 ;;		_sendArduinoTireDropRequest
  6940 ;;		_sendArduinoStandbyClampRequest
  6941 ;;		_sendArduinoTireOperationStartMessage
  6942 ;;		_sendArduinoAbortOperationMessage
  6943 ;;		_requestIsTireDropDone
  6944 ;;		_doOperation
  6945 ;;		_main
  6946 ;;		_sendArduinoLogs
  6947 ;;		_rtc_set_time
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text20
  6952  004A9E                     __ptext20:
  6953                           	opt callstack 0
  6954  004A9E                     _I2C_Master_Stop:
  6955                           	opt callstack 26
  6956                           
  6957                           ;I2C.c: 66:     I2C_Master_Wait();
  6958                           
  6959                           ;incstack = 0
  6960  004A9E  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  6961                           
  6962                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  6963  004AA2  84C5               	bsf	4037,2,c	;volatile
  6964  004AA4  0012               	return		;funcret
  6965  004AA6                     __end_of_I2C_Master_Stop:
  6966                           	opt callstack 0
  6967                           
  6968 ;; *************** function _I2C_Master_Start *****************
  6969 ;; Defined at:
  6970 ;;		line 55 in file "I2C.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    3
  6991 ;; This function calls:
  6992 ;;		_I2C_Master_Wait
  6993 ;; This function is called by:
  6994 ;;		_sendArduinoTireDropRequest
  6995 ;;		_sendArduinoStandbyClampRequest
  6996 ;;		_sendArduinoTireOperationStartMessage
  6997 ;;		_sendArduinoAbortOperationMessage
  6998 ;;		_requestIsTireDropDone
  6999 ;;		_doOperation
  7000 ;;		_main
  7001 ;;		_sendArduinoLogs
  7002 ;;		_rtc_set_time
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text21
  7007  004AA6                     __ptext21:
  7008                           	opt callstack 0
  7009  004AA6                     _I2C_Master_Start:
  7010                           	opt callstack 26
  7011                           
  7012                           ;I2C.c: 56:     I2C_Master_Wait();
  7013                           
  7014                           ;incstack = 0
  7015  004AA6  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  7016                           
  7017                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  7018  004AAA  80C5               	bsf	4037,0,c	;volatile
  7019  004AAC  0012               	return		;funcret
  7020  004AAE                     __end_of_I2C_Master_Start:
  7021                           	opt callstack 0
  7022                           
  7023 ;; *************** function _I2C_Master_Read *****************
  7024 ;; Defined at:
  7025 ;;		line 77 in file "I2C.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  ackBit          1    wreg     unsigned char 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  ackBit          1    6[COMRAM] unsigned char 
  7030 ;;  receivedByte    1    7[COMRAM] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      unsigned char 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;Total ram usage:        2 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    3
  7047 ;; This function calls:
  7048 ;;		_I2C_Master_Wait
  7049 ;; This function is called by:
  7050 ;;		_requestIsTireDropDone
  7051 ;;		_main
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text22
  7056  004928                     __ptext22:
  7057                           	opt callstack 0
  7058  004928                     _I2C_Master_Read:
  7059                           	opt callstack 25
  7060                           
  7061                           ;incstack = 0
  7062                           ;I2C_Master_Read@ackBit stored from wreg
  7063  004928  6E07               	movwf	I2C_Master_Read@ackBit,c
  7064                           
  7065                           ;I2C.c: 78:     I2C_Master_Wait();
  7066  00492A  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  7067                           
  7068                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  7069  00492E  86C5               	bsf	4037,3,c	;volatile
  7070                           
  7071                           ;I2C.c: 81:     I2C_Master_Wait();
  7072  004930  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  7073                           
  7074                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  7075  004934  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  7076                           
  7077                           ;I2C.c: 86:     I2C_Master_Wait();
  7078  004938  EC27  F025         	call	_I2C_Master_Wait	;wreg free
  7079                           
  7080                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  7081  00493C  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  7082  00493E  D002               	bra	u11095
  7083  004940  9AC5               	bcf	4037,5,c	;volatile
  7084  004942  D001               	bra	u11096
  7085  004944                     u11095:
  7086  004944  8AC5               	bsf	4037,5,c	;volatile
  7087  004946                     u11096:
  7088                           
  7089                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  7090  004946  88C5               	bsf	4037,4,c	;volatile
  7091                           
  7092                           ;I2C.c: 90:     return receivedByte;
  7093  004948  5008               	movf	I2C_Master_Read@receivedByte,w,c
  7094  00494A  0012               	return		;funcret
  7095  00494C                     __end_of_I2C_Master_Read:
  7096                           	opt callstack 0
  7097                           
  7098 ;; *************** function _I2C_Master_Wait *****************
  7099 ;; Defined at:
  7100 ;;		line 21 in file "I2C.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2, status,0
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        1 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    2
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_I2C_Master_Start
  7125 ;;		_I2C_Master_Stop
  7126 ;;		_I2C_Master_Write
  7127 ;;		_I2C_Master_Read
  7128 ;;		_I2C_Master_RepeatedStart
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text23
  7133  004A4E                     __ptext23:
  7134                           	opt callstack 0
  7135  004A4E                     _I2C_Master_Wait:
  7136                           	opt callstack 26
  7137                           
  7138                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  7139                           
  7140                           ;I2C.c: 28:     }
  7141                           
  7142                           ;incstack = 0
  7143  004A4E  B4C7               	btfsc	4039,2,c	;volatile
  7144  004A50  D7FE               	goto	_I2C_Master_Wait
  7145  004A52  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  7146  004A56  0E1F               	movlw	31
  7147  004A58  1606               	andwf	??_I2C_Master_Wait,f,c
  7148  004A5A  B4D8               	btfsc	status,2,c
  7149  004A5C  0012               	return	
  7150  004A5E  D7F7               	goto	_I2C_Master_Wait
  7151  004A60                     __end_of_I2C_Master_Wait:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function _opErrorCorrectionDegrees *****************
  7155 ;; Defined at:
  7156 ;;		line 838 in file "main.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  goalSpeed       2   50[BANK0 ] int 
  7159 ;;  turnRatio       2   52[BANK0 ] int 
  7160 ;;  correctionCo    4   54[BANK0 ] float 
  7161 ;;  distanceDegr    4   58[BANK0 ] long 
  7162 ;;  maxOperation    4   62[BANK0 ] unsigned long 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  motorAStartD    4   79[BANK0 ] long 
  7165 ;;  motorBStartD    4   71[BANK0 ] long 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7175 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;Total ram usage:       33 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    6
  7182 ;; This function calls:
  7183 ;;		___xxtofl
  7184 ;;		_abs
  7185 ;;		_errorCorrectedMove
  7186 ;; This function is called by:
  7187 ;;		_doOperation
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text24
  7192  00391A                     __ptext24:
  7193                           	opt callstack 0
  7194  00391A                     _opErrorCorrectionDegrees:
  7195                           	opt callstack 23
  7196                           
  7197                           ;main.c: 839:     long motorAStartDistance = motorADistance;
  7198                           
  7199                           ;incstack = 0
  7200  00391A  C0DB  F0CF         	movff	_motorADistance,opErrorCorrectionDegrees@motorAStartDistance	;volatile
  7201  00391E  C0DC  F0D0         	movff	_motorADistance+1,opErrorCorrectionDegrees@motorAStartDistance+1	;volatile
  7202  003922  C0DD  F0D1         	movff	_motorADistance+2,opErrorCorrectionDegrees@motorAStartDistance+2	;volatile
  7203  003926  C0DE  F0D2         	movff	_motorADistance+3,opErrorCorrectionDegrees@motorAStartDistance+3	;volatile
  7204                           
  7205                           ;main.c: 840:     long motorBStartDistance = motorBDistance;
  7206  00392A  C0D7  F0C7         	movff	_motorBDistance,opErrorCorrectionDegrees@motorBStartDistance	;volatile
  7207  00392E  C0D8  F0C8         	movff	_motorBDistance+1,opErrorCorrectionDegrees@motorBStartDistance+1	;volatile
  7208  003932  C0D9  F0C9         	movff	_motorBDistance+2,opErrorCorrectionDegrees@motorBStartDistance+2	;volatile
  7209  003936  C0DA  F0CA         	movff	_motorBDistance+3,opErrorCorrectionDegrees@motorBStartDistance+3	;volatile
  7210                           
  7211                           ;main.c: 842:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  7212  00393A  D03A               	goto	l10009
  7213  00393C                     l10005:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;main.c: 843:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  7217  00393C  C0B4  F006         	movff	opErrorCorrectionDegrees@turnRatio,___xxtofl@val
  7218  003940  C0B5  F007         	movff	opErrorCorrectionDegrees@turnRatio+1,___xxtofl@val+1
  7219  003944  0E00               	movlw	0
  7220  003946  BE07               	btfsc	___xxtofl@val+1,7,c
  7221  003948  0EFF               	movlw	-1
  7222  00394A  6E08               	movwf	___xxtofl@val+2,c
  7223  00394C  6E09               	movwf	___xxtofl@val+3,c
  7224  00394E  0E01               	movlw	1
  7225  003950  EC04  F019         	call	___xxtofl
  7226  003954  C006  F0CB         	movff	?___xxtofl,_opErrorCorrectionDegrees$2427
  7227  003958  C007  F0CC         	movff	?___xxtofl+1,_opErrorCorrectionDegrees$2427+1
  7228  00395C  C008  F0CD         	movff	?___xxtofl+2,_opErrorCorrectionDegrees$2427+2
  7229  003960  C009  F0CE         	movff	?___xxtofl+3,_opErrorCorrectionDegrees$2427+3
  7230                           
  7231                           ;main.c: 843:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  7232  003964  C0B2  F098         	movff	opErrorCorrectionDegrees@goalSpeed,errorCorrectedMove@goalSpeed
  7233  003968  C0B3  F099         	movff	opErrorCorrectionDegrees@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  7234  00396C  C0CB  F09A         	movff	_opErrorCorrectionDegrees$2427,errorCorrectedMove@turnRatio
  7235  003970  C0CC  F09B         	movff	_opErrorCorrectionDegrees$2427+1,errorCorrectedMove@turnRatio+1
  7236  003974  C0CD  F09C         	movff	_opErrorCorrectionDegrees$2427+2,errorCorrectedMove@turnRatio+2
  7237  003978  C0CE  F09D         	movff	_opErrorCorrectionDegrees$2427+3,errorCorrectedMove@turnRatio+3
  7238  00397C  C0CF  F09E         	movff	opErrorCorrectionDegrees@motorAStartDistance,errorCorrectedMove@motorAStartDistan
      +                          ce
  7239  003980  C0D0  F09F         	movff	opErrorCorrectionDegrees@motorAStartDistance+1,errorCorrectedMove@motorAStartDist
      +                          ance+1
  7240  003984  C0D1  F0A0         	movff	opErrorCorrectionDegrees@motorAStartDistance+2,errorCorrectedMove@motorAStartDist
      +                          ance+2
  7241  003988  C0D2  F0A1         	movff	opErrorCorrectionDegrees@motorAStartDistance+3,errorCorrectedMove@motorAStartDist
      +                          ance+3
  7242  00398C  C0C7  F0A2         	movff	opErrorCorrectionDegrees@motorBStartDistance,errorCorrectedMove@motorBStartDistan
      +                          ce
  7243  003990  C0C8  F0A3         	movff	opErrorCorrectionDegrees@motorBStartDistance+1,errorCorrectedMove@motorBStartDist
      +                          ance+1
  7244  003994  C0C9  F0A4         	movff	opErrorCorrectionDegrees@motorBStartDistance+2,errorCorrectedMove@motorBStartDist
      +                          ance+2
  7245  003998  C0CA  F0A5         	movff	opErrorCorrectionDegrees@motorBStartDistance+3,errorCorrectedMove@motorBStartDist
      +                          ance+3
  7246  00399C  C0B6  F0A6         	movff	opErrorCorrectionDegrees@correctionConstant,errorCorrectedMove@correctionConstant
  7247  0039A0  C0B7  F0A7         	movff	opErrorCorrectionDegrees@correctionConstant+1,errorCorrectedMove@correctionConsta
      +                          nt+1
  7248  0039A4  C0B8  F0A8         	movff	opErrorCorrectionDegrees@correctionConstant+2,errorCorrectedMove@correctionConsta
      +                          nt+2
  7249  0039A8  C0B9  F0A9         	movff	opErrorCorrectionDegrees@correctionConstant+3,errorCorrectedMove@correctionConsta
      +                          nt+3
  7250  0039AC  EC1D  F013         	call	_errorCorrectedMove	;wreg free
  7251  0039B0                     l10009:
  7252                           
  7253                           ;main.c: 842:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  7254  0039B0  0100               	movlb	0	; () banked
  7255  0039B2  51BE               	movf	opErrorCorrectionDegrees@maxOperationTime& (0+255),w,b
  7256  0039B4  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  7257  0039B6  51BF               	movf	(opErrorCorrectionDegrees@maxOperationTime+1)& (0+255),w,b
  7258  0039B8  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  7259  0039BA  51C0               	movf	(opErrorCorrectionDegrees@maxOperationTime+2)& (0+255),w,b
  7260  0039BC  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  7261  0039BE  51C1               	movf	(opErrorCorrectionDegrees@maxOperationTime+3)& (0+255),w,b
  7262  0039C0  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  7263  0039C2  B0D8               	btfsc	status,0,c
  7264  0039C4  0012               	return	
  7265                           
  7266                           ; BSR set to: 0
  7267  0039C6  51CF               	movf	opErrorCorrectionDegrees@motorAStartDistance& (0+255),w,b
  7268  0039C8  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  7269  0039CA  6E18               	movwf	abs@a,c
  7270  0039CC  51D0               	movf	(opErrorCorrectionDegrees@motorAStartDistance+1)& (0+255),w,b
  7271  0039CE  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  7272  0039D0  6E19               	movwf	abs@a+1,c
  7273  0039D2  ECB6  F023         	call	_abs	;wreg free
  7274  0039D6  C018  F0C2         	movff	?_abs,??_opErrorCorrectionDegrees
  7275  0039DA  C019  F0C3         	movff	?_abs+1,??_opErrorCorrectionDegrees+1
  7276  0039DE  0E00               	movlw	0
  7277  0039E0  0100               	movlb	0	; () banked
  7278  0039E2  BFC3               	btfsc	(??_opErrorCorrectionDegrees+1)& (0+255),7,b
  7279  0039E4  0EFF               	movlw	255
  7280  0039E6  6FC4               	movwf	(??_opErrorCorrectionDegrees+2)& (0+255),b
  7281  0039E8  6FC5               	movwf	(??_opErrorCorrectionDegrees+3)& (0+255),b
  7282  0039EA  51BA               	movf	opErrorCorrectionDegrees@distanceDegrees& (0+255),w,b
  7283  0039EC  5DC2               	subwf	??_opErrorCorrectionDegrees& (0+255),w,b
  7284  0039EE  51BB               	movf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),w,b
  7285  0039F0  59C3               	subwfb	(??_opErrorCorrectionDegrees+1)& (0+255),w,b
  7286  0039F2  51BC               	movf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),w,b
  7287  0039F4  59C4               	subwfb	(??_opErrorCorrectionDegrees+2)& (0+255),w,b
  7288  0039F6  51C5               	movf	(??_opErrorCorrectionDegrees+3)& (0+255),w,b
  7289  0039F8  0A80               	xorlw	128
  7290  0039FA  6FC6               	movwf	(??_opErrorCorrectionDegrees+4)& (0+255),b
  7291  0039FC  51BD               	movf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),w,b
  7292  0039FE  0A80               	xorlw	128
  7293  003A00  59C6               	subwfb	(??_opErrorCorrectionDegrees+4)& (0+255),w,b
  7294  003A02  B0D8               	btfsc	status,0,c
  7295  003A04  0012               	return	
  7296  003A06  D79A               	goto	l10005
  7297  003A08                     __end_of_opErrorCorrectionDegrees:
  7298                           	opt callstack 0
  7299                           
  7300 ;; *************** function _errorCorrectedMove *****************
  7301 ;; Defined at:
  7302 ;;		line 784 in file "main.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  goalSpeed       2   24[BANK0 ] int 
  7305 ;;  turnRatio       4   26[BANK0 ] float 
  7306 ;;  motorAStartD    4   30[BANK0 ] long 
  7307 ;;  motorBStartD    4   34[BANK0 ] long 
  7308 ;;  correctionCo    4   38[BANK0 ] float 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  error           4   42[BANK0 ] long 
  7311 ;;  BSpeed          2   48[BANK0 ] int 
  7312 ;;  ASpeed          2   46[BANK0 ] int 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7322 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;Total ram usage:       26 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    5
  7329 ;; This function calls:
  7330 ;;		___fladd
  7331 ;;		___fldiv
  7332 ;;		___flmul
  7333 ;;		___flsub
  7334 ;;		___fltol
  7335 ;;		___xxtofl
  7336 ;;		_setMotorSpeeds
  7337 ;; This function is called by:
  7338 ;;		_opErrorCorrectionDegrees
  7339 ;;		_doOperation
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text25
  7344  00263A                     __ptext25:
  7345                           	opt callstack 0
  7346  00263A                     _errorCorrectedMove:
  7347                           	opt callstack 23
  7348                           
  7349                           ;main.c: 785:     long error = (long)((motorADistance - motorAStartDistance)-(motorBDist
      +                          ance - motorBStartDistance)/(double)turnRatio);
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;incstack = 0
  7353  00263A  C09A  F018         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  7354  00263E  C09B  F019         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  7355  002642  C09C  F01A         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  7356  002646  C09D  F01B         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  7357  00264A  0100               	movlb	0	; () banked
  7358  00264C  51A2               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  7359  00264E  5DD7               	subwf	_motorBDistance& (0+255),w,b	;volatile
  7360  002650  6E06               	movwf	___xxtofl@val,c
  7361  002652  51A3               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  7362  002654  59D8               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  7363  002656  6E07               	movwf	___xxtofl@val+1,c
  7364  002658  51A4               	movf	(errorCorrectedMove@motorBStartDistance+2)& (0+255),w,b
  7365  00265A  59D9               	subwfb	(_motorBDistance+2)& (0+255),w,b	;volatile
  7366  00265C  6E08               	movwf	___xxtofl@val+2,c
  7367  00265E  51A5               	movf	(errorCorrectedMove@motorBStartDistance+3)& (0+255),w,b
  7368  002660  59DA               	subwfb	(_motorBDistance+3)& (0+255),w,b	;volatile
  7369  002662  6E09               	movwf	___xxtofl@val+3,c
  7370  002664  0E01               	movlw	1
  7371  002666  EC04  F019         	call	___xxtofl
  7372  00266A  C006  F014         	movff	?___xxtofl,___fldiv@b
  7373  00266E  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  7374  002672  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  7375  002676  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  7376  00267A  ECD9  F011         	call	___fldiv	;wreg free
  7377  00267E  C014  F05A         	movff	?___fldiv,___flsub@a
  7378  002682  C015  F05B         	movff	?___fldiv+1,___flsub@a+1
  7379  002686  C016  F05C         	movff	?___fldiv+2,___flsub@a+2
  7380  00268A  C017  F05D         	movff	?___fldiv+3,___flsub@a+3
  7381  00268E  0100               	movlb	0	; () banked
  7382  002690  519E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  7383  002692  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  7384  002694  6E06               	movwf	___xxtofl@val,c
  7385  002696  519F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  7386  002698  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  7387  00269A  6E07               	movwf	___xxtofl@val+1,c
  7388  00269C  51A0               	movf	(errorCorrectedMove@motorAStartDistance+2)& (0+255),w,b
  7389  00269E  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  7390  0026A0  6E08               	movwf	___xxtofl@val+2,c
  7391  0026A2  51A1               	movf	(errorCorrectedMove@motorAStartDistance+3)& (0+255),w,b
  7392  0026A4  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  7393  0026A6  6E09               	movwf	___xxtofl@val+3,c
  7394  0026A8  0E01               	movlw	1
  7395  0026AA  EC04  F019         	call	___xxtofl
  7396  0026AE  C006  F056         	movff	?___xxtofl,___flsub@b
  7397  0026B2  C007  F057         	movff	?___xxtofl+1,___flsub@b+1
  7398  0026B6  C008  F058         	movff	?___xxtofl+2,___flsub@b+2
  7399  0026BA  C009  F059         	movff	?___xxtofl+3,___flsub@b+3
  7400  0026BE  ECD7  F022         	call	___flsub	;wreg free
  7401  0026C2  C056  F05E         	movff	?___flsub,___fltol@f1
  7402  0026C6  C057  F05F         	movff	?___flsub+1,___fltol@f1+1
  7403  0026CA  C058  F060         	movff	?___flsub+2,___fltol@f1+2
  7404  0026CE  C059  F061         	movff	?___flsub+3,___fltol@f1+3
  7405  0026D2  ECAF  F01E         	call	___fltol	;wreg free
  7406  0026D6  C05E  F0AA         	movff	?___fltol,errorCorrectedMove@error
  7407  0026DA  C05F  F0AB         	movff	?___fltol+1,errorCorrectedMove@error+1
  7408  0026DE  C060  F0AC         	movff	?___fltol+2,errorCorrectedMove@error+2
  7409  0026E2  C061  F0AD         	movff	?___fltol+3,errorCorrectedMove@error+3
  7410                           
  7411                           ;main.c: 786:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  7412  0026E6  C0A6  F031         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  7413  0026EA  C0A7  F032         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  7414  0026EE  C0A8  F033         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  7415  0026F2  C0A9  F034         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  7416  0026F6  C0AA  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  7417  0026FA  C0AB  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  7418  0026FE  C0AC  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  7419  002702  C0AD  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  7420  002706  0E01               	movlw	1
  7421  002708  EC04  F019         	call	___xxtofl
  7422  00270C  C006  F02D         	movff	?___xxtofl,___flmul@b
  7423  002710  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  7424  002714  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  7425  002718  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  7426  00271C  ECAA  F00E         	call	___flmul	;wreg free
  7427  002720  C02D  F05A         	movff	?___flmul,___flsub@a
  7428  002724  C02E  F05B         	movff	?___flmul+1,___flsub@a+1
  7429  002728  C02F  F05C         	movff	?___flmul+2,___flsub@a+2
  7430  00272C  C030  F05D         	movff	?___flmul+3,___flsub@a+3
  7431  002730  C098  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  7432  002734  C099  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  7433  002738  0E00               	movlw	0
  7434  00273A  BE07               	btfsc	___xxtofl@val+1,7,c
  7435  00273C  0EFF               	movlw	-1
  7436  00273E  6E08               	movwf	___xxtofl@val+2,c
  7437  002740  6E09               	movwf	___xxtofl@val+3,c
  7438  002742  0E01               	movlw	1
  7439  002744  EC04  F019         	call	___xxtofl
  7440  002748  C006  F056         	movff	?___xxtofl,___flsub@b
  7441  00274C  C007  F057         	movff	?___xxtofl+1,___flsub@b+1
  7442  002750  C008  F058         	movff	?___xxtofl+2,___flsub@b+2
  7443  002754  C009  F059         	movff	?___xxtofl+3,___flsub@b+3
  7444  002758  ECD7  F022         	call	___flsub	;wreg free
  7445  00275C  C056  F05E         	movff	?___flsub,___fltol@f1
  7446  002760  C057  F05F         	movff	?___flsub+1,___fltol@f1+1
  7447  002764  C058  F060         	movff	?___flsub+2,___fltol@f1+2
  7448  002768  C059  F061         	movff	?___flsub+3,___fltol@f1+3
  7449  00276C  ECAF  F01E         	call	___fltol	;wreg free
  7450  002770  C05E  F0AE         	movff	?___fltol,errorCorrectedMove@ASpeed
  7451  002774  C05F  F0AF         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  7452                           
  7453                           ;main.c: 787:     int BSpeed = (int)(goalSpeed*turnRatio + error*correctionConstant);
  7454  002778  C0A6  F031         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  7455  00277C  C0A7  F032         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  7456  002780  C0A8  F033         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  7457  002784  C0A9  F034         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  7458  002788  C0AA  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  7459  00278C  C0AB  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  7460  002790  C0AC  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  7461  002794  C0AD  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  7462  002798  0E01               	movlw	1
  7463  00279A  EC04  F019         	call	___xxtofl
  7464  00279E  C006  F02D         	movff	?___xxtofl,___flmul@b
  7465  0027A2  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  7466  0027A6  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  7467  0027AA  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  7468  0027AE  ECAA  F00E         	call	___flmul	;wreg free
  7469  0027B2  C02D  F04A         	movff	?___flmul,___fladd@a
  7470  0027B6  C02E  F04B         	movff	?___flmul+1,___fladd@a+1
  7471  0027BA  C02F  F04C         	movff	?___flmul+2,___fladd@a+2
  7472  0027BE  C030  F04D         	movff	?___flmul+3,___fladd@a+3
  7473  0027C2  C09A  F031         	movff	errorCorrectedMove@turnRatio,___flmul@a
  7474  0027C6  C09B  F032         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  7475  0027CA  C09C  F033         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  7476  0027CE  C09D  F034         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  7477  0027D2  C098  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  7478  0027D6  C099  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  7479  0027DA  0E00               	movlw	0
  7480  0027DC  BE07               	btfsc	___xxtofl@val+1,7,c
  7481  0027DE  0EFF               	movlw	-1
  7482  0027E0  6E08               	movwf	___xxtofl@val+2,c
  7483  0027E2  6E09               	movwf	___xxtofl@val+3,c
  7484  0027E4  0E01               	movlw	1
  7485  0027E6  EC04  F019         	call	___xxtofl
  7486  0027EA  C006  F02D         	movff	?___xxtofl,___flmul@b
  7487  0027EE  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  7488  0027F2  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  7489  0027F6  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  7490  0027FA  ECAA  F00E         	call	___flmul	;wreg free
  7491  0027FE  C02D  F046         	movff	?___flmul,___fladd@b
  7492  002802  C02E  F047         	movff	?___flmul+1,___fladd@b+1
  7493  002806  C02F  F048         	movff	?___flmul+2,___fladd@b+2
  7494  00280A  C030  F049         	movff	?___flmul+3,___fladd@b+3
  7495  00280E  EC53  F010         	call	___fladd	;wreg free
  7496  002812  C046  F05E         	movff	?___fladd,___fltol@f1
  7497  002816  C047  F05F         	movff	?___fladd+1,___fltol@f1+1
  7498  00281A  C048  F060         	movff	?___fladd+2,___fltol@f1+2
  7499  00281E  C049  F061         	movff	?___fladd+3,___fltol@f1+3
  7500  002822  ECAF  F01E         	call	___fltol	;wreg free
  7501  002826  C05E  F0B0         	movff	?___fltol,errorCorrectedMove@BSpeed
  7502  00282A  C05F  F0B1         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  7503                           
  7504                           ;main.c: 789:     if (ASpeed > 100){
  7505  00282E  0100               	movlb	0	; () banked
  7506  002830  BFAF               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  7507  002832  D00A               	goto	l9621
  7508  002834  51AF               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  7509  002836  E104               	bnz	u11100
  7510  002838  0E65               	movlw	101
  7511  00283A  5DAE               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  7512  00283C  A0D8               	btfss	status,0,c
  7513  00283E  D004               	goto	l9621
  7514  002840                     u11100:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;main.c: 790:         ASpeed = 100;
  7518  002840  0E00               	movlw	0
  7519  002842  6FAF               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  7520  002844  0E64               	movlw	100
  7521  002846  6FAE               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  7522  002848                     l9621:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;main.c: 792:     if (ASpeed < 0){
  7526  002848  AFAF               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  7527  00284A  D004               	goto	l9625
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;main.c: 793:         ASpeed = 0;
  7531  00284C  0E00               	movlw	0
  7532  00284E  6FAF               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  7533  002850  0E00               	movlw	0
  7534  002852  6FAE               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  7535  002854                     l9625:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;main.c: 795:     if (BSpeed > 100){
  7539  002854  BFB1               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  7540  002856  D00A               	goto	l9629
  7541  002858  51B1               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  7542  00285A  E104               	bnz	u11120
  7543  00285C  0E65               	movlw	101
  7544  00285E  5DB0               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  7545  002860  A0D8               	btfss	status,0,c
  7546  002862  D004               	goto	l9629
  7547  002864                     u11120:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;main.c: 796:         BSpeed = 100;
  7551  002864  0E00               	movlw	0
  7552  002866  6FB1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  7553  002868  0E64               	movlw	100
  7554  00286A  6FB0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  7555  00286C                     l9629:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;main.c: 798:     if (BSpeed < 0){
  7559  00286C  AFB1               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  7560  00286E  D004               	goto	l9633
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;main.c: 799:         BSpeed = 0;
  7564  002870  0E00               	movlw	0
  7565  002872  6FB1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  7566  002874  0E00               	movlw	0
  7567  002876  6FB0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  7568  002878                     l9633:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;main.c: 802:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  7572  002878  C0AE  F08A         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  7573  00287C  C0AF  F08B         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  7574  002880  0E01               	movlw	1
  7575  002882  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  7576  002884  0E01               	movlw	1
  7577  002886  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  7578  002888  C0B0  F08E         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  7579  00288C  C0B1  F08F         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  7580  002890  ECB8  F01F         	call	_setMotorSpeeds	;wreg free
  7581  002894  0012               	return		;funcret
  7582  002896                     __end_of_errorCorrectedMove:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _setMotorSpeeds *****************
  7586 ;; Defined at:
  7587 ;;		line 501 in file "main.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  motorASpeed     2   10[BANK0 ] int 
  7590 ;;  Aforward        1   12[BANK0 ] _Bool 
  7591 ;;  Bforward        1   13[BANK0 ] _Bool 
  7592 ;;  motorBSpeed     2   14[BANK0 ] int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;		None
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7604 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;Total ram usage:       14 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    4
  7611 ;; This function calls:
  7612 ;;		___xxtofl
  7613 ;;		_set_pwm_duty_cycle
  7614 ;; This function is called by:
  7615 ;;		_tirePositioning
  7616 ;;		_errorCorrectedMove
  7617 ;;		_doOperation
  7618 ;;		_PIDCorrectedMove
  7619 ;;		_errorCorrectedMoveAccelerate
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           	psect	text26
  7624  003F70                     __ptext26:
  7625                           	opt callstack 0
  7626  003F70                     _setMotorSpeeds:
  7627                           	opt callstack 24
  7628                           
  7629                           ;main.c: 502:     if (Aforward){
  7630                           
  7631                           ;incstack = 0
  7632  003F70  0100               	movlb	0	; () banked
  7633  003F72  518C               	movf	setMotorSpeeds@Aforward& (0+255),w,b
  7634  003F74  B4D8               	btfsc	status,2,c
  7635  003F76  D003               	goto	l304
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;main.c: 503:         LATAbits.LATA0 = 1;
  7639  003F78  8089               	bsf	3977,0,c	;volatile
  7640                           
  7641                           ;main.c: 504:         LATAbits.LATA1 = 0;
  7642  003F7A  9289               	bcf	3977,1,c	;volatile
  7643                           
  7644                           ;main.c: 505:     } else {
  7645  003F7C  D002               	goto	l9331
  7646  003F7E                     l304:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;main.c: 506:         LATAbits.LATA0 = 0;
  7650  003F7E  9089               	bcf	3977,0,c	;volatile
  7651                           
  7652                           ;main.c: 507:         LATAbits.LATA1 = 1;
  7653  003F80  8289               	bsf	3977,1,c	;volatile
  7654  003F82                     l9331:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;main.c: 509:     if (Bforward){
  7658  003F82  518D               	movf	setMotorSpeeds@Bforward& (0+255),w,b
  7659  003F84  B4D8               	btfsc	status,2,c
  7660  003F86  D003               	goto	l306
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;main.c: 510:         LATAbits.LATA2 = 1;
  7664  003F88  8489               	bsf	3977,2,c	;volatile
  7665                           
  7666                           ;main.c: 511:         LATAbits.LATA3 = 0;
  7667  003F8A  9689               	bcf	3977,3,c	;volatile
  7668                           
  7669                           ;main.c: 512:     } else {
  7670  003F8C  D002               	goto	l9335
  7671  003F8E                     l306:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;main.c: 513:         LATAbits.LATA2 = 0;
  7675  003F8E  9489               	bcf	3977,2,c	;volatile
  7676                           
  7677                           ;main.c: 514:         LATAbits.LATA3 = 1;
  7678  003F90  8689               	bsf	3977,3,c	;volatile
  7679  003F92                     l9335:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;main.c: 517:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7683  003F92  C08A  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  7684  003F96  C08B  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  7685  003F9A  0E00               	movlw	0
  7686  003F9C  BE07               	btfsc	___xxtofl@val+1,7,c
  7687  003F9E  0EFF               	movlw	-1
  7688  003FA0  6E08               	movwf	___xxtofl@val+2,c
  7689  003FA2  6E09               	movwf	___xxtofl@val+3,c
  7690  003FA4  0E01               	movlw	1
  7691  003FA6  EC04  F019         	call	___xxtofl
  7692  003FAA  C006  F090         	movff	?___xxtofl,_setMotorSpeeds$2424
  7693  003FAE  C007  F091         	movff	?___xxtofl+1,_setMotorSpeeds$2424+1
  7694  003FB2  C008  F092         	movff	?___xxtofl+2,_setMotorSpeeds$2424+2
  7695  003FB6  C009  F093         	movff	?___xxtofl+3,_setMotorSpeeds$2424+3
  7696                           
  7697                           ;main.c: 517:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7698  003FBA  C08E  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  7699  003FBE  C08F  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  7700  003FC2  0E00               	movlw	0
  7701  003FC4  BE07               	btfsc	___xxtofl@val+1,7,c
  7702  003FC6  0EFF               	movlw	-1
  7703  003FC8  6E08               	movwf	___xxtofl@val+2,c
  7704  003FCA  6E09               	movwf	___xxtofl@val+3,c
  7705  003FCC  0E01               	movlw	1
  7706  003FCE  EC04  F019         	call	___xxtofl
  7707  003FD2  C006  F094         	movff	?___xxtofl,_setMotorSpeeds$2425
  7708  003FD6  C007  F095         	movff	?___xxtofl+1,_setMotorSpeeds$2425+1
  7709  003FDA  C008  F096         	movff	?___xxtofl+2,_setMotorSpeeds$2425+2
  7710  003FDE  C009  F097         	movff	?___xxtofl+3,_setMotorSpeeds$2425+3
  7711                           
  7712                           ;main.c: 517:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7713  003FE2  C090  F068         	movff	_setMotorSpeeds$2424,set_pwm_duty_cycle@dutyA
  7714  003FE6  C091  F069         	movff	_setMotorSpeeds$2424+1,set_pwm_duty_cycle@dutyA+1
  7715  003FEA  C092  F06A         	movff	_setMotorSpeeds$2424+2,set_pwm_duty_cycle@dutyA+2
  7716  003FEE  C093  F06B         	movff	_setMotorSpeeds$2424+3,set_pwm_duty_cycle@dutyA+3
  7717  003FF2  C094  F06C         	movff	_setMotorSpeeds$2425,set_pwm_duty_cycle@dutyB
  7718  003FF6  C095  F06D         	movff	_setMotorSpeeds$2425+1,set_pwm_duty_cycle@dutyB+1
  7719  003FFA  C096  F06E         	movff	_setMotorSpeeds$2425+2,set_pwm_duty_cycle@dutyB+2
  7720  003FFE  C097  F06F         	movff	_setMotorSpeeds$2425+3,set_pwm_duty_cycle@dutyB+3
  7721  004002  EC84  F016         	call	_set_pwm_duty_cycle	;wreg free
  7722  004006  0012               	return		;funcret
  7723  004008                     __end_of_setMotorSpeeds:
  7724                           	opt callstack 0
  7725                           
  7726 ;; *************** function _set_pwm_duty_cycle *****************
  7727 ;; Defined at:
  7728 ;;		line 473 in file "main.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  dutyA           4  103[COMRAM] float 
  7731 ;;  dutyB           4  107[COMRAM] float 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  duty_valB       2    4[BANK0 ] unsigned short 
  7734 ;;  duty_valA       2    2[BANK0 ] unsigned short 
  7735 ;;  max_duty_val    2    0[BANK0 ] unsigned short 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;Total ram usage:       20 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    3
  7752 ;; This function calls:
  7753 ;;		___fldiv
  7754 ;;		___flge
  7755 ;;		___flmul
  7756 ;;		___fltol
  7757 ;;		___xxtofl
  7758 ;; This function is called by:
  7759 ;;		_setMotorSpeeds
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text27
  7764  002D08                     __ptext27:
  7765                           	opt callstack 0
  7766  002D08                     _set_pwm_duty_cycle:
  7767                           	opt callstack 24
  7768                           
  7769                           ;main.c: 474:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  7770                           
  7771                           ;incstack = 0
  7772  002D08  BE6B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  7773  002D0A  0012               	return	
  7774  002D0C  0E00               	movlw	0
  7775  002D0E  6E14               	movwf	___flge@ff1,c
  7776  002D10  0E00               	movlw	0
  7777  002D12  6E15               	movwf	___flge@ff1+1,c
  7778  002D14  0EC8               	movlw	200
  7779  002D16  6E16               	movwf	___flge@ff1+2,c
  7780  002D18  0E42               	movlw	66
  7781  002D1A  6E17               	movwf	___flge@ff1+3,c
  7782  002D1C  C068  F018         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  7783  002D20  C069  F019         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  7784  002D24  C06A  F01A         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  7785  002D28  C06B  F01B         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  7786  002D2C  EC7A  F01D         	call	___flge	;wreg free
  7787  002D30  A0D8               	btfss	status,0,c
  7788  002D32  0012               	return	
  7789  002D34  BE6F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  7790  002D36  0012               	return	
  7791  002D38  0E00               	movlw	0
  7792  002D3A  6E14               	movwf	___flge@ff1,c
  7793  002D3C  0E00               	movlw	0
  7794  002D3E  6E15               	movwf	___flge@ff1+1,c
  7795  002D40  0EC8               	movlw	200
  7796  002D42  6E16               	movwf	___flge@ff1+2,c
  7797  002D44  0E42               	movlw	66
  7798  002D46  6E17               	movwf	___flge@ff1+3,c
  7799  002D48  C06C  F018         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  7800  002D4C  C06D  F019         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  7801  002D50  C06E  F01A         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  7802  002D54  C06F  F01B         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  7803  002D58  EC7A  F01D         	call	___flge	;wreg free
  7804  002D5C  A0D8               	btfss	status,0,c
  7805  002D5E  0012               	return	
  7806                           
  7807                           ;main.c: 479:         unsigned short max_duty_val = PR2 + 1;
  7808  002D60  0E01               	movlw	1
  7809  002D62  24CB               	addwf	4043,w,c	;volatile
  7810  002D64  0100               	movlb	0	; () banked
  7811  002D66  6F80               	movwf	set_pwm_duty_cycle@max_duty_val& (0+255),b
  7812  002D68  6B81               	clrf	(set_pwm_duty_cycle@max_duty_val+1)& (0+255),b
  7813  002D6A  0E00               	movlw	0
  7814  002D6C  2381               	addwfc	(set_pwm_duty_cycle@max_duty_val+1)& (0+255),f,b
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;main.c: 481:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  7818  002D6E  0E00               	movlw	0
  7819  002D70  6E18               	movwf	___fldiv@a,c
  7820  002D72  0E00               	movlw	0
  7821  002D74  6E19               	movwf	___fldiv@a+1,c
  7822  002D76  0EC8               	movlw	200
  7823  002D78  6E1A               	movwf	___fldiv@a+2,c
  7824  002D7A  0E42               	movlw	66
  7825  002D7C  6E1B               	movwf	___fldiv@a+3,c
  7826  002D7E  0E00               	movlw	0
  7827  002D80  6E31               	movwf	___flmul@a,c
  7828  002D82  0E00               	movlw	0
  7829  002D84  6E32               	movwf	___flmul@a+1,c
  7830  002D86  0E80               	movlw	128
  7831  002D88  6E33               	movwf	___flmul@a+2,c
  7832  002D8A  0E40               	movlw	64
  7833  002D8C  6E34               	movwf	___flmul@a+3,c
  7834  002D8E  C068  F02D         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  7835  002D92  C069  F02E         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  7836  002D96  C06A  F02F         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  7837  002D9A  C06B  F030         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  7838  002D9E  ECAA  F00E         	call	___flmul	;wreg free
  7839  002DA2  C02D  F014         	movff	?___flmul,___fldiv@b
  7840  002DA6  C02E  F015         	movff	?___flmul+1,___fldiv@b+1
  7841  002DAA  C02F  F016         	movff	?___flmul+2,___fldiv@b+2
  7842  002DAE  C030  F017         	movff	?___flmul+3,___fldiv@b+3
  7843  002DB2  ECD9  F011         	call	___fldiv	;wreg free
  7844  002DB6  C014  F086         	movff	?___fldiv,_set_pwm_duty_cycle$2423
  7845  002DBA  C015  F087         	movff	?___fldiv+1,_set_pwm_duty_cycle$2423+1
  7846  002DBE  C016  F088         	movff	?___fldiv+2,_set_pwm_duty_cycle$2423+2
  7847  002DC2  C017  F089         	movff	?___fldiv+3,_set_pwm_duty_cycle$2423+3
  7848                           
  7849                           ;main.c: 481:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  7850  002DC6  C080  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  7851  002DCA  C081  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  7852  002DCE  6A08               	clrf	___xxtofl@val+2,c
  7853  002DD0  6A09               	clrf	___xxtofl@val+3,c
  7854  002DD2  0E00               	movlw	0
  7855  002DD4  EC04  F019         	call	___xxtofl
  7856  002DD8  C006  F031         	movff	?___xxtofl,___flmul@a
  7857  002DDC  C007  F032         	movff	?___xxtofl+1,___flmul@a+1
  7858  002DE0  C008  F033         	movff	?___xxtofl+2,___flmul@a+2
  7859  002DE4  C009  F034         	movff	?___xxtofl+3,___flmul@a+3
  7860  002DE8  C086  F02D         	movff	_set_pwm_duty_cycle$2423,___flmul@b
  7861  002DEC  C087  F02E         	movff	_set_pwm_duty_cycle$2423+1,___flmul@b+1
  7862  002DF0  C088  F02F         	movff	_set_pwm_duty_cycle$2423+2,___flmul@b+2
  7863  002DF4  C089  F030         	movff	_set_pwm_duty_cycle$2423+3,___flmul@b+3
  7864  002DF8  ECAA  F00E         	call	___flmul	;wreg free
  7865  002DFC  C02D  F05E         	movff	?___flmul,___fltol@f1
  7866  002E00  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  7867  002E04  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  7868  002E08  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  7869  002E0C  ECAF  F01E         	call	___fltol	;wreg free
  7870  002E10  C05E  F082         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  7871  002E14  C05F  F083         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  7872                           
  7873                           ;main.c: 482:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  7874  002E18  0E00               	movlw	0
  7875  002E1A  6E18               	movwf	___fldiv@a,c
  7876  002E1C  0E00               	movlw	0
  7877  002E1E  6E19               	movwf	___fldiv@a+1,c
  7878  002E20  0EC8               	movlw	200
  7879  002E22  6E1A               	movwf	___fldiv@a+2,c
  7880  002E24  0E42               	movlw	66
  7881  002E26  6E1B               	movwf	___fldiv@a+3,c
  7882  002E28  0E00               	movlw	0
  7883  002E2A  6E31               	movwf	___flmul@a,c
  7884  002E2C  0E00               	movlw	0
  7885  002E2E  6E32               	movwf	___flmul@a+1,c
  7886  002E30  0E80               	movlw	128
  7887  002E32  6E33               	movwf	___flmul@a+2,c
  7888  002E34  0E40               	movlw	64
  7889  002E36  6E34               	movwf	___flmul@a+3,c
  7890  002E38  C06C  F02D         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  7891  002E3C  C06D  F02E         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  7892  002E40  C06E  F02F         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  7893  002E44  C06F  F030         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  7894  002E48  ECAA  F00E         	call	___flmul	;wreg free
  7895  002E4C  C02D  F014         	movff	?___flmul,___fldiv@b
  7896  002E50  C02E  F015         	movff	?___flmul+1,___fldiv@b+1
  7897  002E54  C02F  F016         	movff	?___flmul+2,___fldiv@b+2
  7898  002E58  C030  F017         	movff	?___flmul+3,___fldiv@b+3
  7899  002E5C  ECD9  F011         	call	___fldiv	;wreg free
  7900  002E60  C014  F086         	movff	?___fldiv,_set_pwm_duty_cycle$2423
  7901  002E64  C015  F087         	movff	?___fldiv+1,_set_pwm_duty_cycle$2423+1
  7902  002E68  C016  F088         	movff	?___fldiv+2,_set_pwm_duty_cycle$2423+2
  7903  002E6C  C017  F089         	movff	?___fldiv+3,_set_pwm_duty_cycle$2423+3
  7904                           
  7905                           ;main.c: 482:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  7906  002E70  C080  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  7907  002E74  C081  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  7908  002E78  6A08               	clrf	___xxtofl@val+2,c
  7909  002E7A  6A09               	clrf	___xxtofl@val+3,c
  7910  002E7C  0E00               	movlw	0
  7911  002E7E  EC04  F019         	call	___xxtofl
  7912  002E82  C006  F031         	movff	?___xxtofl,___flmul@a
  7913  002E86  C007  F032         	movff	?___xxtofl+1,___flmul@a+1
  7914  002E8A  C008  F033         	movff	?___xxtofl+2,___flmul@a+2
  7915  002E8E  C009  F034         	movff	?___xxtofl+3,___flmul@a+3
  7916  002E92  C086  F02D         	movff	_set_pwm_duty_cycle$2423,___flmul@b
  7917  002E96  C087  F02E         	movff	_set_pwm_duty_cycle$2423+1,___flmul@b+1
  7918  002E9A  C088  F02F         	movff	_set_pwm_duty_cycle$2423+2,___flmul@b+2
  7919  002E9E  C089  F030         	movff	_set_pwm_duty_cycle$2423+3,___flmul@b+3
  7920  002EA2  ECAA  F00E         	call	___flmul	;wreg free
  7921  002EA6  C02D  F05E         	movff	?___flmul,___fltol@f1
  7922  002EAA  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  7923  002EAE  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  7924  002EB2  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  7925  002EB6  ECAF  F01E         	call	___fltol	;wreg free
  7926  002EBA  C05E  F084         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  7927  002EBE  C05F  F085         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  7928                           
  7929                           ;main.c: 485:         CCP1X = duty_valA & 2;
  7930  002EC2  9ABD               	bcf	4029,5,c	;volatile
  7931                           
  7932                           ;main.c: 486:         CCP1Y = duty_valA & 1;
  7933  002EC4  0100               	movlb	0	; () banked
  7934  002EC6  A182               	btfss	set_pwm_duty_cycle@duty_valA& (0+255),0,b
  7935  002EC8  D002               	goto	u9730
  7936  002ECA  88BD               	bsf	4029,4,c	;volatile
  7937  002ECC  D001               	goto	u9745
  7938  002ECE                     u9730:
  7939  002ECE  98BD               	bcf	4029,4,c	;volatile
  7940  002ED0                     u9745:
  7941                           
  7942                           ;main.c: 487:         CCPR1L = duty_valA >> 2;
  7943  002ED0  C082  F070         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  7944  002ED4  C083  F071         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  7945  002ED8  90D8               	bcf	status,0,c
  7946  002EDA  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7947  002EDC  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7948  002EDE  90D8               	bcf	status,0,c
  7949  002EE0  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7950  002EE2  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7951  002EE4  5070               	movf	??_set_pwm_duty_cycle,w,c
  7952  002EE6  6EBE               	movwf	4030,c	;volatile
  7953                           
  7954                           ;main.c: 490:         CCP2X = duty_valB & 2;
  7955  002EE8  9ABA               	bcf	4026,5,c	;volatile
  7956                           
  7957                           ;main.c: 491:         CCP2Y = duty_valB & 1;
  7958  002EEA  0100               	movlb	0	; () banked
  7959  002EEC  A184               	btfss	set_pwm_duty_cycle@duty_valB& (0+255),0,b
  7960  002EEE  D002               	goto	u9750
  7961  002EF0  88BA               	bsf	4026,4,c	;volatile
  7962  002EF2  D001               	goto	u9765
  7963  002EF4                     u9750:
  7964  002EF4  98BA               	bcf	4026,4,c	;volatile
  7965  002EF6                     u9765:
  7966                           
  7967                           ;main.c: 492:         CCPR2L = duty_valB >> 2;
  7968  002EF6  C084  F070         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  7969  002EFA  C085  F071         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  7970  002EFE  90D8               	bcf	status,0,c
  7971  002F00  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7972  002F02  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7973  002F04  90D8               	bcf	status,0,c
  7974  002F06  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7975  002F08  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7976  002F0A  5070               	movf	??_set_pwm_duty_cycle,w,c
  7977  002F0C  6EBB               	movwf	4027,c	;volatile
  7978  002F0E  0012               	return		;funcret
  7979  002F10                     __end_of_set_pwm_duty_cycle:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function ___xxtofl *****************
  7983 ;; Defined at:
  7984 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  sign            1    wreg     unsigned char 
  7987 ;;  val             4    5[COMRAM] long 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  sign            1   13[COMRAM] unsigned char 
  7990 ;;  arg             4   15[COMRAM] unsigned long 
  7991 ;;  exp             1   14[COMRAM] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  4    5[COMRAM] unsigned char 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;Total ram usage:       14 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    2
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_set_pwm_duty_cycle
  8012 ;;		_setMotorSpeeds
  8013 ;;		_errorCorrectedMove
  8014 ;;		_opErrorCorrectionDegrees
  8015 ;;		_doOperation
  8016 ;;		_PIDCorrectedMove
  8017 ;;		_errorCorrectedMoveAccelerate
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text28
  8022  003208                     __ptext28:
  8023                           	opt callstack 0
  8024  003208                     ___xxtofl:
  8025                           	opt callstack 24
  8026                           
  8027                           ;incstack = 0
  8028                           ;___xxtofl@sign stored from wreg
  8029  003208  6E0E               	movwf	___xxtofl@sign,c
  8030  00320A  500E               	movf	___xxtofl@sign,w,c
  8031  00320C  A4D8               	btfss	status,2,c
  8032  00320E  AE09               	btfss	___xxtofl@val+3,7,c
  8033  003210  D01A               	goto	l1484
  8034  003212  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  8035  003216  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  8036  00321A  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  8037  00321E  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  8038  003222  1E0A               	comf	??___xxtofl,f,c
  8039  003224  1E0B               	comf	??___xxtofl+1,f,c
  8040  003226  1E0C               	comf	??___xxtofl+2,f,c
  8041  003228  1E0D               	comf	??___xxtofl+3,f,c
  8042  00322A  2A0A               	incf	??___xxtofl,f,c
  8043  00322C  0E00               	movlw	0
  8044  00322E  220B               	addwfc	??___xxtofl+1,f,c
  8045  003230  220C               	addwfc	??___xxtofl+2,f,c
  8046  003232  220D               	addwfc	??___xxtofl+3,f,c
  8047  003234  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  8048  003238  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  8049  00323C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  8050  003240  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  8051  003244  D008               	goto	l8761
  8052  003246                     l1484:
  8053  003246  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  8054  00324A  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8055  00324E  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8056  003252  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8057  003256                     l8761:
  8058  003256  5006               	movf	___xxtofl@val,w,c
  8059  003258  1007               	iorwf	___xxtofl@val+1,w,c
  8060  00325A  1008               	iorwf	___xxtofl@val+2,w,c
  8061  00325C  1009               	iorwf	___xxtofl@val+3,w,c
  8062  00325E  A4D8               	btfss	status,2,c
  8063  003260  D009               	goto	l8767
  8064  003262  0E00               	movlw	0
  8065  003264  6E06               	movwf	?___xxtofl,c
  8066  003266  0E00               	movlw	0
  8067  003268  6E07               	movwf	?___xxtofl+1,c
  8068  00326A  0E00               	movlw	0
  8069  00326C  6E08               	movwf	?___xxtofl+2,c
  8070  00326E  0E00               	movlw	0
  8071  003270  6E09               	movwf	?___xxtofl+3,c
  8072  003272  0012               	return	
  8073  003274                     l8767:
  8074  003274  0E96               	movlw	150
  8075  003276  6E0F               	movwf	___xxtofl@exp,c
  8076  003278  D006               	goto	l8771
  8077  00327A                     l8769:
  8078  00327A  2A0F               	incf	___xxtofl@exp,f,c
  8079  00327C  90D8               	bcf	status,0,c
  8080  00327E  3213               	rrcf	___xxtofl@arg+3,f,c
  8081  003280  3212               	rrcf	___xxtofl@arg+2,f,c
  8082  003282  3211               	rrcf	___xxtofl@arg+1,f,c
  8083  003284  3210               	rrcf	___xxtofl@arg,f,c
  8084  003286                     l8771:
  8085  003286  0E00               	movlw	0
  8086  003288  1410               	andwf	___xxtofl@arg,w,c
  8087  00328A  6E0A               	movwf	??___xxtofl& (0+255),c
  8088  00328C  0E00               	movlw	0
  8089  00328E  1411               	andwf	___xxtofl@arg+1,w,c
  8090  003290  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  8091  003292  0E00               	movlw	0
  8092  003294  1412               	andwf	___xxtofl@arg+2,w,c
  8093  003296  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  8094  003298  0EFE               	movlw	254
  8095  00329A  1413               	andwf	___xxtofl@arg+3,w,c
  8096  00329C  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  8097  00329E  500A               	movf	??___xxtofl,w,c
  8098  0032A0  100B               	iorwf	??___xxtofl+1,w,c
  8099  0032A2  100C               	iorwf	??___xxtofl+2,w,c
  8100  0032A4  100D               	iorwf	??___xxtofl+3,w,c
  8101  0032A6  B4D8               	btfsc	status,2,c
  8102  0032A8  D00D               	goto	l1491
  8103  0032AA  D7E7               	goto	l8769
  8104  0032AC                     l8773:
  8105  0032AC  2A0F               	incf	___xxtofl@exp,f,c
  8106  0032AE  0E01               	movlw	1
  8107  0032B0  2610               	addwf	___xxtofl@arg,f,c
  8108  0032B2  0E00               	movlw	0
  8109  0032B4  2211               	addwfc	___xxtofl@arg+1,f,c
  8110  0032B6  2212               	addwfc	___xxtofl@arg+2,f,c
  8111  0032B8  2213               	addwfc	___xxtofl@arg+3,f,c
  8112  0032BA  90D8               	bcf	status,0,c
  8113  0032BC  3213               	rrcf	___xxtofl@arg+3,f,c
  8114  0032BE  3212               	rrcf	___xxtofl@arg+2,f,c
  8115  0032C0  3211               	rrcf	___xxtofl@arg+1,f,c
  8116  0032C2  3210               	rrcf	___xxtofl@arg,f,c
  8117  0032C4                     l1491:
  8118  0032C4  0E00               	movlw	0
  8119  0032C6  1410               	andwf	___xxtofl@arg,w,c
  8120  0032C8  6E0A               	movwf	??___xxtofl& (0+255),c
  8121  0032CA  0E00               	movlw	0
  8122  0032CC  1411               	andwf	___xxtofl@arg+1,w,c
  8123  0032CE  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  8124  0032D0  0E00               	movlw	0
  8125  0032D2  1412               	andwf	___xxtofl@arg+2,w,c
  8126  0032D4  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  8127  0032D6  0EFF               	movlw	255
  8128  0032D8  1413               	andwf	___xxtofl@arg+3,w,c
  8129  0032DA  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  8130  0032DC  500A               	movf	??___xxtofl,w,c
  8131  0032DE  100B               	iorwf	??___xxtofl+1,w,c
  8132  0032E0  100C               	iorwf	??___xxtofl+2,w,c
  8133  0032E2  100D               	iorwf	??___xxtofl+3,w,c
  8134  0032E4  B4D8               	btfsc	status,2,c
  8135  0032E6  D007               	goto	l8781
  8136  0032E8  D7E1               	goto	l8773
  8137  0032EA                     l8779:
  8138  0032EA  060F               	decf	___xxtofl@exp,f,c
  8139  0032EC  90D8               	bcf	status,0,c
  8140  0032EE  3610               	rlcf	___xxtofl@arg,f,c
  8141  0032F0  3611               	rlcf	___xxtofl@arg+1,f,c
  8142  0032F2  3612               	rlcf	___xxtofl@arg+2,f,c
  8143  0032F4  3613               	rlcf	___xxtofl@arg+3,f,c
  8144  0032F6                     l8781:
  8145  0032F6  BE12               	btfsc	___xxtofl@arg+2,7,c
  8146  0032F8  D003               	goto	u9630
  8147  0032FA  0E02               	movlw	2
  8148  0032FC  600F               	cpfslt	___xxtofl@exp,c
  8149  0032FE  D7F5               	goto	l8779
  8150  003300                     u9630:
  8151  003300  A00F               	btfss	___xxtofl@exp,0,c
  8152  003302  9E12               	bcf	___xxtofl@arg+2,7,c
  8153  003304  90D8               	bcf	status,0,c
  8154  003306  320F               	rrcf	___xxtofl@exp,f,c
  8155  003308  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  8156  00330C  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  8157  00330E  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  8158  003310  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  8159  003312  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  8160  003316  6A0C               	clrf	??___xxtofl+2,c
  8161  003318  6A0B               	clrf	??___xxtofl+1,c
  8162  00331A  6A0A               	clrf	??___xxtofl,c
  8163  00331C  500A               	movf	??___xxtofl,w,c
  8164  00331E  1210               	iorwf	___xxtofl@arg,f,c
  8165  003320  500B               	movf	??___xxtofl+1,w,c
  8166  003322  1211               	iorwf	___xxtofl@arg+1,f,c
  8167  003324  500C               	movf	??___xxtofl+2,w,c
  8168  003326  1212               	iorwf	___xxtofl@arg+2,f,c
  8169  003328  500D               	movf	??___xxtofl+3,w,c
  8170  00332A  1213               	iorwf	___xxtofl@arg+3,f,c
  8171  00332C  500E               	movf	___xxtofl@sign,w,c
  8172  00332E  A4D8               	btfss	status,2,c
  8173  003330  AE09               	btfss	___xxtofl@val+3,7,c
  8174  003332  D001               	goto	l8797
  8175  003334  8E13               	bsf	___xxtofl@arg+3,7,c
  8176  003336                     l8797:
  8177  003336  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  8178  00333A  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  8179  00333E  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  8180  003342  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  8181  003346  0012               	return		;funcret
  8182  003348                     __end_of___xxtofl:
  8183                           	opt callstack 0
  8184                           
  8185 ;; *************** function ___fltol *****************
  8186 ;; Defined at:
  8187 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  f1              4   93[COMRAM] unsigned char 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  exp1            1  102[COMRAM] unsigned char 
  8192 ;;  sign1           1  101[COMRAM] unsigned char 
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  4   93[COMRAM] long 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;Total ram usage:       10 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    2
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_set_pwm_duty_cycle
  8213 ;;		_errorCorrectedMove
  8214 ;;		_doOperation
  8215 ;;		_PIDCorrectedMove
  8216 ;;		_errorCorrectedMoveAccelerate
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text29
  8221  003D5E                     __ptext29:
  8222                           	opt callstack 0
  8223  003D5E                     ___fltol:
  8224                           	opt callstack 24
  8225                           
  8226                           ;incstack = 0
  8227  003D5E  3460               	rlcf	___fltol@f1+2,w,c
  8228  003D60  3461               	rlcf	___fltol@f1+3,w,c
  8229  003D62  6E67               	movwf	___fltol@exp1,c
  8230  003D64  5067               	movf	___fltol@exp1,w,c
  8231  003D66  A4D8               	btfss	status,2,c
  8232  003D68  D009               	goto	l8679
  8233  003D6A                     u9430:
  8234  003D6A  0E00               	movlw	0
  8235  003D6C  6E5E               	movwf	?___fltol,c
  8236  003D6E  0E00               	movlw	0
  8237  003D70  6E5F               	movwf	?___fltol+1,c
  8238  003D72  0E00               	movlw	0
  8239  003D74  6E60               	movwf	?___fltol+2,c
  8240  003D76  0E00               	movlw	0
  8241  003D78  6E61               	movwf	?___fltol+3,c
  8242  003D7A  0012               	return	
  8243  003D7C                     l8679:
  8244  003D7C  C05E  F062         	movff	___fltol@f1,??___fltol
  8245  003D80  C05F  F063         	movff	___fltol@f1+1,??___fltol+1
  8246  003D84  C060  F064         	movff	___fltol@f1+2,??___fltol+2
  8247  003D88  C061  F065         	movff	___fltol@f1+3,??___fltol+3
  8248  003D8C  0E20               	movlw	32
  8249  003D8E  D005               	goto	u9440
  8250  003D90                     u9445:
  8251  003D90  90D8               	bcf	status,0,c
  8252  003D92  3265               	rrcf	??___fltol+3,f,c
  8253  003D94  3264               	rrcf	??___fltol+2,f,c
  8254  003D96  3263               	rrcf	??___fltol+1,f,c
  8255  003D98  3262               	rrcf	??___fltol,f,c
  8256  003D9A                     u9440:
  8257  003D9A  2EE8               	decfsz	wreg,f,c
  8258  003D9C  D7F9               	goto	u9445
  8259  003D9E  5062               	movf	??___fltol,w,c
  8260  003DA0  6E66               	movwf	___fltol@sign1,c
  8261  003DA2  8E60               	bsf	___fltol@f1+2,7,c
  8262  003DA4  0EFF               	movlw	255
  8263  003DA6  165E               	andwf	___fltol@f1,f,c
  8264  003DA8  0EFF               	movlw	255
  8265  003DAA  165F               	andwf	___fltol@f1+1,f,c
  8266  003DAC  0EFF               	movlw	255
  8267  003DAE  1660               	andwf	___fltol@f1+2,f,c
  8268  003DB0  0E00               	movlw	0
  8269  003DB2  1661               	andwf	___fltol@f1+3,f,c
  8270  003DB4  0E96               	movlw	150
  8271  003DB6  5E67               	subwf	___fltol@exp1,f,c
  8272  003DB8  AE67               	btfss	___fltol@exp1,7,c
  8273  003DBA  D00D               	goto	l8699
  8274  003DBC  5067               	movf	___fltol@exp1,w,c
  8275  003DBE  0A80               	xorlw	128
  8276  003DC0  0F97               	addlw	151
  8277  003DC2  A0D8               	btfss	status,0,c
  8278  003DC4  D7D2               	goto	u9430
  8279  003DC6                     l8695:
  8280  003DC6  90D8               	bcf	status,0,c
  8281  003DC8  3261               	rrcf	___fltol@f1+3,f,c
  8282  003DCA  3260               	rrcf	___fltol@f1+2,f,c
  8283  003DCC  325F               	rrcf	___fltol@f1+1,f,c
  8284  003DCE  325E               	rrcf	___fltol@f1,f,c
  8285  003DD0  3E67               	incfsz	___fltol@exp1,f,c
  8286  003DD2  D7F9               	goto	l8695
  8287  003DD4  D00D               	goto	u9480
  8288  003DD6                     l8699:
  8289  003DD6  0E1F               	movlw	31
  8290  003DD8  6467               	cpfsgt	___fltol@exp1,c
  8291  003DDA  D007               	goto	l8707
  8292  003DDC  D7C6               	goto	u9430
  8293  003DDE                     l8705:
  8294  003DDE  90D8               	bcf	status,0,c
  8295  003DE0  365E               	rlcf	___fltol@f1,f,c
  8296  003DE2  365F               	rlcf	___fltol@f1+1,f,c
  8297  003DE4  3660               	rlcf	___fltol@f1+2,f,c
  8298  003DE6  3661               	rlcf	___fltol@f1+3,f,c
  8299  003DE8  0667               	decf	___fltol@exp1,f,c
  8300  003DEA                     l8707:
  8301  003DEA  5067               	movf	___fltol@exp1,w,c
  8302  003DEC  A4D8               	btfss	status,2,c
  8303  003DEE  D7F7               	goto	l8705
  8304  003DF0                     u9480:
  8305  003DF0  5066               	movf	___fltol@sign1,w,c
  8306  003DF2  B4D8               	btfsc	status,2,c
  8307  003DF4  D008               	goto	l8713
  8308  003DF6  1E61               	comf	___fltol@f1+3,f,c
  8309  003DF8  1E60               	comf	___fltol@f1+2,f,c
  8310  003DFA  1E5F               	comf	___fltol@f1+1,f,c
  8311  003DFC  6C5E               	negf	___fltol@f1,c
  8312  003DFE  0E00               	movlw	0
  8313  003E00  225F               	addwfc	___fltol@f1+1,f,c
  8314  003E02  2260               	addwfc	___fltol@f1+2,f,c
  8315  003E04  2261               	addwfc	___fltol@f1+3,f,c
  8316  003E06                     l8713:
  8317  003E06  C05E  F05E         	movff	___fltol@f1,?___fltol
  8318  003E0A  C05F  F05F         	movff	___fltol@f1+1,?___fltol+1
  8319  003E0E  C060  F060         	movff	___fltol@f1+2,?___fltol+2
  8320  003E12  C061  F061         	movff	___fltol@f1+3,?___fltol+3
  8321  003E16  0012               	return		;funcret
  8322  003E18                     __end_of___fltol:
  8323                           	opt callstack 0
  8324                           
  8325 ;; *************** function ___flmul *****************
  8326 ;; Defined at:
  8327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  b               4   44[COMRAM] long 
  8330 ;;  a               4   48[COMRAM] long 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  prod            4   63[COMRAM] struct .
  8333 ;;  grs             4   58[COMRAM] unsigned long 
  8334 ;;  temp            2   67[COMRAM] struct .
  8335 ;;  bexp            1   62[COMRAM] unsigned char 
  8336 ;;  aexp            1   57[COMRAM] unsigned char 
  8337 ;;  sign            1   56[COMRAM] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  4   44[COMRAM] unsigned char 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, prodl, prodh
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8347 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;Total ram usage:       25 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    2
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_set_pwm_duty_cycle
  8358 ;;		_errorCorrectedMove
  8359 ;;		_doOperation
  8360 ;;		_PIDCorrectedMove
  8361 ;;		_errorCorrectedMoveAccelerate
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text30
  8366  001D54                     __ptext30:
  8367                           	opt callstack 0
  8368  001D54                     ___flmul:
  8369                           	opt callstack 24
  8370                           
  8371                           ;incstack = 0
  8372  001D54  5030               	movf	___flmul@b+3,w,c
  8373  001D56  0B80               	andlw	128
  8374  001D58  6E39               	movwf	___flmul@sign,c
  8375  001D5A  5030               	movf	___flmul@b+3,w,c
  8376  001D5C  2430               	addwf	___flmul@b+3,w,c
  8377  001D5E  6E3F               	movwf	___flmul@bexp,c
  8378  001D60  BE2F               	btfsc	___flmul@b+2,7,c
  8379  001D62  803F               	bsf	___flmul@bexp,0,c
  8380  001D64  503F               	movf	___flmul@bexp,w,c
  8381  001D66  B4D8               	btfsc	status,2,c
  8382  001D68  D00D               	goto	l8535
  8383  001D6A  283F               	incf	___flmul@bexp,w,c
  8384  001D6C  A4D8               	btfss	status,2,c
  8385  001D6E  D008               	goto	l8533
  8386  001D70  0E00               	movlw	0
  8387  001D72  6E2D               	movwf	___flmul@b,c
  8388  001D74  0E00               	movlw	0
  8389  001D76  6E2E               	movwf	___flmul@b+1,c
  8390  001D78  0E00               	movlw	0
  8391  001D7A  6E2F               	movwf	___flmul@b+2,c
  8392  001D7C  0E00               	movlw	0
  8393  001D7E  6E30               	movwf	___flmul@b+3,c
  8394  001D80                     l8533:
  8395  001D80  8E2F               	bsf	___flmul@b+2,7,c
  8396  001D82  D008               	goto	l8537
  8397  001D84                     l8535:
  8398  001D84  0E00               	movlw	0
  8399  001D86  6E2D               	movwf	___flmul@b,c
  8400  001D88  0E00               	movlw	0
  8401  001D8A  6E2E               	movwf	___flmul@b+1,c
  8402  001D8C  0E00               	movlw	0
  8403  001D8E  6E2F               	movwf	___flmul@b+2,c
  8404  001D90  0E00               	movlw	0
  8405  001D92  6E30               	movwf	___flmul@b+3,c
  8406  001D94                     l8537:
  8407  001D94  5034               	movf	___flmul@a+3,w,c
  8408  001D96  0B80               	andlw	128
  8409  001D98  1A39               	xorwf	___flmul@sign,f,c
  8410  001D9A  5034               	movf	___flmul@a+3,w,c
  8411  001D9C  2434               	addwf	___flmul@a+3,w,c
  8412  001D9E  6E3A               	movwf	___flmul@aexp,c
  8413  001DA0  BE33               	btfsc	___flmul@a+2,7,c
  8414  001DA2  803A               	bsf	___flmul@aexp,0,c
  8415  001DA4  503A               	movf	___flmul@aexp,w,c
  8416  001DA6  B4D8               	btfsc	status,2,c
  8417  001DA8  D00D               	goto	l8553
  8418  001DAA  283A               	incf	___flmul@aexp,w,c
  8419  001DAC  A4D8               	btfss	status,2,c
  8420  001DAE  D008               	goto	l8551
  8421  001DB0  0E00               	movlw	0
  8422  001DB2  6E31               	movwf	___flmul@a,c
  8423  001DB4  0E00               	movlw	0
  8424  001DB6  6E32               	movwf	___flmul@a+1,c
  8425  001DB8  0E00               	movlw	0
  8426  001DBA  6E33               	movwf	___flmul@a+2,c
  8427  001DBC  0E00               	movlw	0
  8428  001DBE  6E34               	movwf	___flmul@a+3,c
  8429  001DC0                     l8551:
  8430  001DC0  8E33               	bsf	___flmul@a+2,7,c
  8431  001DC2  D008               	goto	l1443
  8432  001DC4                     l8553:
  8433  001DC4  0E00               	movlw	0
  8434  001DC6  6E31               	movwf	___flmul@a,c
  8435  001DC8  0E00               	movlw	0
  8436  001DCA  6E32               	movwf	___flmul@a+1,c
  8437  001DCC  0E00               	movlw	0
  8438  001DCE  6E33               	movwf	___flmul@a+2,c
  8439  001DD0  0E00               	movlw	0
  8440  001DD2  6E34               	movwf	___flmul@a+3,c
  8441  001DD4                     l1443:
  8442  001DD4  503A               	movf	___flmul@aexp,w,c
  8443  001DD6  B4D8               	btfsc	status,2,c
  8444  001DD8  D003               	goto	u9260
  8445  001DDA  503F               	movf	___flmul@bexp,w,c
  8446  001DDC  A4D8               	btfss	status,2,c
  8447  001DDE  D009               	goto	l8561
  8448  001DE0                     u9260:
  8449  001DE0  0E00               	movlw	0
  8450  001DE2  6E2D               	movwf	?___flmul,c
  8451  001DE4  0E00               	movlw	0
  8452  001DE6  6E2E               	movwf	?___flmul+1,c
  8453  001DE8  0E00               	movlw	0
  8454  001DEA  6E2F               	movwf	?___flmul+2,c
  8455  001DEC  0E00               	movlw	0
  8456  001DEE  6E30               	movwf	?___flmul+3,c
  8457  001DF0  0012               	return	
  8458  001DF2                     l8561:
  8459  001DF2  5033               	movf	___flmul@a+2,w,c
  8460  001DF4  022D               	mulwf	___flmul@b,c
  8461  001DF6  CFF3 F044          	movff	prodl,___flmul@temp
  8462  001DFA  CFF4 F045          	movff	prodh,___flmul@temp+1
  8463  001DFE  5044               	movf	___flmul@temp,w,c
  8464  001E00  6E3B               	movwf	___flmul@grs,c
  8465  001E02  6A3C               	clrf	___flmul@grs+1,c
  8466  001E04  6A3D               	clrf	___flmul@grs+2,c
  8467  001E06  6A3E               	clrf	___flmul@grs+3,c
  8468  001E08  5045               	movf	___flmul@temp+1,w,c
  8469  001E0A  6E40               	movwf	___flmul@prod,c
  8470  001E0C  6A41               	clrf	___flmul@prod+1,c
  8471  001E0E  6A42               	clrf	___flmul@prod+2,c
  8472  001E10  6A43               	clrf	___flmul@prod+3,c
  8473  001E12  5032               	movf	___flmul@a+1,w,c
  8474  001E14  022E               	mulwf	___flmul@b+1,c
  8475  001E16  CFF3 F044          	movff	prodl,___flmul@temp
  8476  001E1A  CFF4 F045          	movff	prodh,___flmul@temp+1
  8477  001E1E  5044               	movf	___flmul@temp,w,c
  8478  001E20  263B               	addwf	___flmul@grs,f,c
  8479  001E22  0E00               	movlw	0
  8480  001E24  223C               	addwfc	___flmul@grs+1,f,c
  8481  001E26  223D               	addwfc	___flmul@grs+2,f,c
  8482  001E28  223E               	addwfc	___flmul@grs+3,f,c
  8483  001E2A  5045               	movf	___flmul@temp+1,w,c
  8484  001E2C  2640               	addwf	___flmul@prod,f,c
  8485  001E2E  0E00               	movlw	0
  8486  001E30  2241               	addwfc	___flmul@prod+1,f,c
  8487  001E32  2242               	addwfc	___flmul@prod+2,f,c
  8488  001E34  2243               	addwfc	___flmul@prod+3,f,c
  8489  001E36  5031               	movf	___flmul@a,w,c
  8490  001E38  022F               	mulwf	___flmul@b+2,c
  8491  001E3A  CFF3 F044          	movff	prodl,___flmul@temp
  8492  001E3E  CFF4 F045          	movff	prodh,___flmul@temp+1
  8493  001E42  5044               	movf	___flmul@temp,w,c
  8494  001E44  263B               	addwf	___flmul@grs,f,c
  8495  001E46  0E00               	movlw	0
  8496  001E48  223C               	addwfc	___flmul@grs+1,f,c
  8497  001E4A  223D               	addwfc	___flmul@grs+2,f,c
  8498  001E4C  223E               	addwfc	___flmul@grs+3,f,c
  8499  001E4E  5045               	movf	___flmul@temp+1,w,c
  8500  001E50  2640               	addwf	___flmul@prod,f,c
  8501  001E52  0E00               	movlw	0
  8502  001E54  2241               	addwfc	___flmul@prod+1,f,c
  8503  001E56  2242               	addwfc	___flmul@prod+2,f,c
  8504  001E58  2243               	addwfc	___flmul@prod+3,f,c
  8505  001E5A  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  8506  001E5E  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  8507  001E62  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  8508  001E66  6A3B               	clrf	___flmul@grs,c
  8509  001E68  5031               	movf	___flmul@a,w,c
  8510  001E6A  022E               	mulwf	___flmul@b+1,c
  8511  001E6C  CFF3 F044          	movff	prodl,___flmul@temp
  8512  001E70  CFF4 F045          	movff	prodh,___flmul@temp+1
  8513  001E74  5044               	movf	___flmul@temp,w,c
  8514  001E76  263B               	addwf	___flmul@grs,f,c
  8515  001E78  5045               	movf	___flmul@temp+1,w,c
  8516  001E7A  223C               	addwfc	___flmul@grs+1,f,c
  8517  001E7C  0E00               	movlw	0
  8518  001E7E  223D               	addwfc	___flmul@grs+2,f,c
  8519  001E80  0E00               	movlw	0
  8520  001E82  223E               	addwfc	___flmul@grs+3,f,c
  8521  001E84  5032               	movf	___flmul@a+1,w,c
  8522  001E86  022D               	mulwf	___flmul@b,c
  8523  001E88  CFF3 F044          	movff	prodl,___flmul@temp
  8524  001E8C  CFF4 F045          	movff	prodh,___flmul@temp+1
  8525  001E90  5044               	movf	___flmul@temp,w,c
  8526  001E92  263B               	addwf	___flmul@grs,f,c
  8527  001E94  5045               	movf	___flmul@temp+1,w,c
  8528  001E96  223C               	addwfc	___flmul@grs+1,f,c
  8529  001E98  0E00               	movlw	0
  8530  001E9A  223D               	addwfc	___flmul@grs+2,f,c
  8531  001E9C  0E00               	movlw	0
  8532  001E9E  223E               	addwfc	___flmul@grs+3,f,c
  8533  001EA0  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  8534  001EA4  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  8535  001EA8  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  8536  001EAC  6A3B               	clrf	___flmul@grs,c
  8537  001EAE  5031               	movf	___flmul@a,w,c
  8538  001EB0  022D               	mulwf	___flmul@b,c
  8539  001EB2  CFF3 F044          	movff	prodl,___flmul@temp
  8540  001EB6  CFF4 F045          	movff	prodh,___flmul@temp+1
  8541  001EBA  5044               	movf	___flmul@temp,w,c
  8542  001EBC  263B               	addwf	___flmul@grs,f,c
  8543  001EBE  5045               	movf	___flmul@temp+1,w,c
  8544  001EC0  223C               	addwfc	___flmul@grs+1,f,c
  8545  001EC2  0E00               	movlw	0
  8546  001EC4  223D               	addwfc	___flmul@grs+2,f,c
  8547  001EC6  0E00               	movlw	0
  8548  001EC8  223E               	addwfc	___flmul@grs+3,f,c
  8549  001ECA  5033               	movf	___flmul@a+2,w,c
  8550  001ECC  022E               	mulwf	___flmul@b+1,c
  8551  001ECE  CFF3 F044          	movff	prodl,___flmul@temp
  8552  001ED2  CFF4 F045          	movff	prodh,___flmul@temp+1
  8553  001ED6  5044               	movf	___flmul@temp,w,c
  8554  001ED8  2640               	addwf	___flmul@prod,f,c
  8555  001EDA  5045               	movf	___flmul@temp+1,w,c
  8556  001EDC  2241               	addwfc	___flmul@prod+1,f,c
  8557  001EDE  0E00               	movlw	0
  8558  001EE0  2242               	addwfc	___flmul@prod+2,f,c
  8559  001EE2  0E00               	movlw	0
  8560  001EE4  2243               	addwfc	___flmul@prod+3,f,c
  8561  001EE6  5032               	movf	___flmul@a+1,w,c
  8562  001EE8  022F               	mulwf	___flmul@b+2,c
  8563  001EEA  CFF3 F044          	movff	prodl,___flmul@temp
  8564  001EEE  CFF4 F045          	movff	prodh,___flmul@temp+1
  8565  001EF2  5044               	movf	___flmul@temp,w,c
  8566  001EF4  2640               	addwf	___flmul@prod,f,c
  8567  001EF6  5045               	movf	___flmul@temp+1,w,c
  8568  001EF8  2241               	addwfc	___flmul@prod+1,f,c
  8569  001EFA  0E00               	movlw	0
  8570  001EFC  2242               	addwfc	___flmul@prod+2,f,c
  8571  001EFE  0E00               	movlw	0
  8572  001F00  2243               	addwfc	___flmul@prod+3,f,c
  8573  001F02  5033               	movf	___flmul@a+2,w,c
  8574  001F04  022F               	mulwf	___flmul@b+2,c
  8575  001F06  CFF3 F044          	movff	prodl,___flmul@temp
  8576  001F0A  CFF4 F045          	movff	prodh,___flmul@temp+1
  8577  001F0E  5044               	movf	___flmul@temp,w,c
  8578  001F10  6E35               	movwf	??___flmul& (0+255),c
  8579  001F12  5045               	movf	___flmul@temp+1,w,c
  8580  001F14  6E36               	movwf	(??___flmul+1)& (0+255),c
  8581  001F16  6A37               	clrf	(??___flmul+2)& (0+255),c
  8582  001F18  6A38               	clrf	(??___flmul+3)& (0+255),c
  8583  001F1A  C037  F038         	movff	??___flmul+2,??___flmul+3
  8584  001F1E  C036  F037         	movff	??___flmul+1,??___flmul+2
  8585  001F22  C035  F036         	movff	??___flmul,??___flmul+1
  8586  001F26  6A35               	clrf	??___flmul,c
  8587  001F28  5035               	movf	??___flmul,w,c
  8588  001F2A  2640               	addwf	___flmul@prod,f,c
  8589  001F2C  5036               	movf	??___flmul+1,w,c
  8590  001F2E  2241               	addwfc	___flmul@prod+1,f,c
  8591  001F30  5037               	movf	??___flmul+2,w,c
  8592  001F32  2242               	addwfc	___flmul@prod+2,f,c
  8593  001F34  5038               	movf	??___flmul+3,w,c
  8594  001F36  2243               	addwfc	___flmul@prod+3,f,c
  8595  001F38  C03B  F035         	movff	___flmul@grs,??___flmul
  8596  001F3C  C03C  F036         	movff	___flmul@grs+1,??___flmul+1
  8597  001F40  C03D  F037         	movff	___flmul@grs+2,??___flmul+2
  8598  001F44  C03E  F038         	movff	___flmul@grs+3,??___flmul+3
  8599  001F48  0E19               	movlw	25
  8600  001F4A  D005               	goto	u9270
  8601  001F4C                     u9275:
  8602  001F4C  90D8               	bcf	status,0,c
  8603  001F4E  3238               	rrcf	??___flmul+3,f,c
  8604  001F50  3237               	rrcf	??___flmul+2,f,c
  8605  001F52  3236               	rrcf	??___flmul+1,f,c
  8606  001F54  3235               	rrcf	??___flmul,f,c
  8607  001F56                     u9270:
  8608  001F56  2EE8               	decfsz	wreg,f,c
  8609  001F58  D7F9               	goto	u9275
  8610  001F5A  5035               	movf	??___flmul,w,c
  8611  001F5C  2640               	addwf	___flmul@prod,f,c
  8612  001F5E  5036               	movf	??___flmul+1,w,c
  8613  001F60  2241               	addwfc	___flmul@prod+1,f,c
  8614  001F62  5037               	movf	??___flmul+2,w,c
  8615  001F64  2242               	addwfc	___flmul@prod+2,f,c
  8616  001F66  5038               	movf	??___flmul+3,w,c
  8617  001F68  2243               	addwfc	___flmul@prod+3,f,c
  8618  001F6A  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  8619  001F6E  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  8620  001F72  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  8621  001F76  6A3B               	clrf	___flmul@grs,c
  8622  001F78  503A               	movf	___flmul@aexp,w,c
  8623  001F7A  C03F  F035         	movff	___flmul@bexp,??___flmul
  8624  001F7E  6A36               	clrf	(??___flmul+1)& (0+255),c
  8625  001F80  2635               	addwf	??___flmul,f,c
  8626  001F82  0E00               	movlw	0
  8627  001F84  2236               	addwfc	??___flmul+1,f,c
  8628  001F86  0E82               	movlw	130
  8629  001F88  2435               	addwf	??___flmul,w,c
  8630  001F8A  6E44               	movwf	___flmul@temp,c
  8631  001F8C  0EFF               	movlw	255
  8632  001F8E  2036               	addwfc	??___flmul+1,w,c
  8633  001F90  6E45               	movwf	___flmul@temp+1,c
  8634  001F92  D00F               	goto	l8609
  8635  001F94                     l8603:
  8636  001F94  90D8               	bcf	status,0,c
  8637  001F96  3640               	rlcf	___flmul@prod,f,c
  8638  001F98  3641               	rlcf	___flmul@prod+1,f,c
  8639  001F9A  3642               	rlcf	___flmul@prod+2,f,c
  8640  001F9C  3643               	rlcf	___flmul@prod+3,f,c
  8641  001F9E  BE3E               	btfsc	___flmul@grs+3,7,c
  8642  001FA0  8040               	bsf	___flmul@prod,0,c
  8643  001FA2  90D8               	bcf	status,0,c
  8644  001FA4  363B               	rlcf	___flmul@grs,f,c
  8645  001FA6  363C               	rlcf	___flmul@grs+1,f,c
  8646  001FA8  363D               	rlcf	___flmul@grs+2,f,c
  8647  001FAA  363E               	rlcf	___flmul@grs+3,f,c
  8648  001FAC  0644               	decf	___flmul@temp,f,c
  8649  001FAE  A0D8               	btfss	status,0,c
  8650  001FB0  0645               	decf	___flmul@temp+1,f,c
  8651  001FB2                     l8609:
  8652  001FB2  AE42               	btfss	___flmul@prod+2,7,c
  8653  001FB4  D7EF               	goto	l8603
  8654  001FB6  0E00               	movlw	0
  8655  001FB8  6E3A               	movwf	___flmul@aexp,c
  8656  001FBA  AE3E               	btfss	___flmul@grs+3,7,c
  8657  001FBC  D017               	goto	l1452
  8658  001FBE  0EFF               	movlw	255
  8659  001FC0  143B               	andwf	___flmul@grs,w,c
  8660  001FC2  6E35               	movwf	??___flmul& (0+255),c
  8661  001FC4  0EFF               	movlw	255
  8662  001FC6  143C               	andwf	___flmul@grs+1,w,c
  8663  001FC8  6E36               	movwf	(??___flmul+1)& (0+255),c
  8664  001FCA  0EFF               	movlw	255
  8665  001FCC  143D               	andwf	___flmul@grs+2,w,c
  8666  001FCE  6E37               	movwf	(??___flmul+2)& (0+255),c
  8667  001FD0  0E7F               	movlw	127
  8668  001FD2  143E               	andwf	___flmul@grs+3,w,c
  8669  001FD4  6E38               	movwf	(??___flmul+3)& (0+255),c
  8670  001FD6  5035               	movf	??___flmul,w,c
  8671  001FD8  1036               	iorwf	??___flmul+1,w,c
  8672  001FDA  1037               	iorwf	??___flmul+2,w,c
  8673  001FDC  1038               	iorwf	??___flmul+3,w,c
  8674  001FDE  B4D8               	btfsc	status,2,c
  8675  001FE0  D003               	goto	l1453
  8676  001FE2                     u9310:
  8677  001FE2  0E01               	movlw	1
  8678  001FE4  6E3A               	movwf	___flmul@aexp,c
  8679  001FE6  D002               	goto	l1452
  8680  001FE8                     l1453:
  8681  001FE8  B040               	btfsc	___flmul@prod,0,c
  8682  001FEA  D7FB               	goto	u9310
  8683  001FEC                     l1452:
  8684  001FEC  503A               	movf	___flmul@aexp,w,c
  8685  001FEE  B4D8               	btfsc	status,2,c
  8686  001FF0  D01F               	goto	l8629
  8687  001FF2  0E01               	movlw	1
  8688  001FF4  2640               	addwf	___flmul@prod,f,c
  8689  001FF6  0E00               	movlw	0
  8690  001FF8  2241               	addwfc	___flmul@prod+1,f,c
  8691  001FFA  2242               	addwfc	___flmul@prod+2,f,c
  8692  001FFC  2243               	addwfc	___flmul@prod+3,f,c
  8693  001FFE  A043               	btfss	___flmul@prod+3,0,c
  8694  002000  D017               	goto	l8629
  8695  002002  C040  F035         	movff	___flmul@prod,??___flmul
  8696  002006  C041  F036         	movff	___flmul@prod+1,??___flmul+1
  8697  00200A  C042  F037         	movff	___flmul@prod+2,??___flmul+2
  8698  00200E  C043  F038         	movff	___flmul@prod+3,??___flmul+3
  8699  002012  3438               	rlcf	??___flmul+3,w,c
  8700  002014  3238               	rrcf	??___flmul+3,f,c
  8701  002016  3237               	rrcf	??___flmul+2,f,c
  8702  002018  3236               	rrcf	??___flmul+1,f,c
  8703  00201A  3235               	rrcf	??___flmul,f,c
  8704  00201C  C035  F040         	movff	??___flmul,___flmul@prod
  8705  002020  C036  F041         	movff	??___flmul+1,___flmul@prod+1
  8706  002024  C037  F042         	movff	??___flmul+2,___flmul@prod+2
  8707  002028  C038  F043         	movff	??___flmul+3,___flmul@prod+3
  8708  00202C  4A44               	infsnz	___flmul@temp,f,c
  8709  00202E  2A45               	incf	___flmul@temp+1,f,c
  8710  002030                     l8629:
  8711  002030  BE45               	btfsc	___flmul@temp+1,7,c
  8712  002032  D00D               	goto	l8633
  8713  002034  5045               	movf	___flmul@temp+1,w,c
  8714  002036  E103               	bnz	u9350
  8715  002038  2844               	incf	___flmul@temp,w,c
  8716  00203A  A0D8               	btfss	status,0,c
  8717  00203C  D008               	goto	l8633
  8718  00203E                     u9350:
  8719  00203E  0E00               	movlw	0
  8720  002040  6E40               	movwf	___flmul@prod,c
  8721  002042  0E00               	movlw	0
  8722  002044  6E41               	movwf	___flmul@prod+1,c
  8723  002046  0E80               	movlw	128
  8724  002048  6E42               	movwf	___flmul@prod+2,c
  8725  00204A  0E7F               	movlw	127
  8726  00204C  D020               	goto	L15
  8727  00204E                     l8633:
  8728  00204E  BE45               	btfsc	___flmul@temp+1,7,c
  8729  002050  D005               	goto	u9360
  8730  002052  5045               	movf	___flmul@temp+1,w,c
  8731  002054  E10E               	bnz	l1460
  8732  002056  0444               	decf	___flmul@temp,w,c
  8733  002058  B0D8               	btfsc	status,0,c
  8734  00205A  D00B               	goto	l1460
  8735  00205C                     u9360:
  8736  00205C  0E00               	movlw	0
  8737  00205E  6E40               	movwf	___flmul@prod,c
  8738  002060  0E00               	movlw	0
  8739  002062  6E41               	movwf	___flmul@prod+1,c
  8740  002064  0E00               	movlw	0
  8741  002066  6E42               	movwf	___flmul@prod+2,c
  8742  002068  0E00               	movlw	0
  8743  00206A  6E43               	movwf	___flmul@prod+3,c
  8744  00206C  0E00               	movlw	0
  8745  00206E  6E39               	movwf	___flmul@sign,c
  8746  002070  D00F               	goto	l8645
  8747  002072                     l1460:
  8748  002072  C044  F03F         	movff	___flmul@temp,___flmul@bexp
  8749  002076  0EFF               	movlw	255
  8750  002078  1640               	andwf	___flmul@prod,f,c
  8751  00207A  0EFF               	movlw	255
  8752  00207C  1641               	andwf	___flmul@prod+1,f,c
  8753  00207E  0E7F               	movlw	127
  8754  002080  1642               	andwf	___flmul@prod+2,f,c
  8755  002082  0E00               	movlw	0
  8756  002084  1643               	andwf	___flmul@prod+3,f,c
  8757  002086  B03F               	btfsc	___flmul@bexp,0,c
  8758  002088  8E42               	bsf	___flmul@prod+2,7,c
  8759  00208A  90D8               	bcf	status,0,c
  8760  00208C  303F               	rrcf	___flmul@bexp,w,c
  8761  00208E                     L15:
  8762  00208E  6E43               	movwf	___flmul@prod+3,c
  8763  002090                     l8645:
  8764  002090  5039               	movf	___flmul@sign,w,c
  8765  002092  1243               	iorwf	___flmul@prod+3,f,c
  8766  002094  C040  F02D         	movff	___flmul@prod,?___flmul
  8767  002098  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
  8768  00209C  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
  8769  0020A0  C043  F030         	movff	___flmul@prod+3,?___flmul+3
  8770  0020A4  0012               	return		;funcret
  8771  0020A6                     __end_of___flmul:
  8772                           	opt callstack 0
  8773                           
  8774 ;; *************** function ___flge *****************
  8775 ;; Defined at:
  8776 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  ff1             4   19[COMRAM] unsigned char 
  8779 ;;  ff2             4   23[COMRAM] unsigned char 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;		None               void
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;Total ram usage:       12 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    2
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_set_pwm_duty_cycle
  8802 ;;		_doOperation
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text31
  8807  003AF4                     __ptext31:
  8808                           	opt callstack 0
  8809  003AF4                     ___flge:
  8810                           	opt callstack 24
  8811                           
  8812                           ;incstack = 0
  8813  003AF4  0E00               	movlw	0
  8814  003AF6  1414               	andwf	___flge@ff1,w,c
  8815  003AF8  6E1C               	movwf	??___flge& (0+255),c
  8816  003AFA  0E00               	movlw	0
  8817  003AFC  1415               	andwf	___flge@ff1+1,w,c
  8818  003AFE  6E1D               	movwf	(??___flge+1)& (0+255),c
  8819  003B00  0E80               	movlw	128
  8820  003B02  1416               	andwf	___flge@ff1+2,w,c
  8821  003B04  6E1E               	movwf	(??___flge+2)& (0+255),c
  8822  003B06  0E7F               	movlw	127
  8823  003B08  1417               	andwf	___flge@ff1+3,w,c
  8824  003B0A  6E1F               	movwf	(??___flge+3)& (0+255),c
  8825  003B0C  501C               	movf	??___flge,w,c
  8826  003B0E  101D               	iorwf	??___flge+1,w,c
  8827  003B10  101E               	iorwf	??___flge+2,w,c
  8828  003B12  101F               	iorwf	??___flge+3,w,c
  8829  003B14  A4D8               	btfss	status,2,c
  8830  003B16  D008               	goto	l8655
  8831  003B18  0E00               	movlw	0
  8832  003B1A  6E14               	movwf	___flge@ff1,c
  8833  003B1C  0E00               	movlw	0
  8834  003B1E  6E15               	movwf	___flge@ff1+1,c
  8835  003B20  0E00               	movlw	0
  8836  003B22  6E16               	movwf	___flge@ff1+2,c
  8837  003B24  0E00               	movlw	0
  8838  003B26  6E17               	movwf	___flge@ff1+3,c
  8839  003B28                     l8655:
  8840  003B28  0E00               	movlw	0
  8841  003B2A  1418               	andwf	___flge@ff2,w,c
  8842  003B2C  6E1C               	movwf	??___flge& (0+255),c
  8843  003B2E  0E00               	movlw	0
  8844  003B30  1419               	andwf	___flge@ff2+1,w,c
  8845  003B32  6E1D               	movwf	(??___flge+1)& (0+255),c
  8846  003B34  0E80               	movlw	128
  8847  003B36  141A               	andwf	___flge@ff2+2,w,c
  8848  003B38  6E1E               	movwf	(??___flge+2)& (0+255),c
  8849  003B3A  0E7F               	movlw	127
  8850  003B3C  141B               	andwf	___flge@ff2+3,w,c
  8851  003B3E  6E1F               	movwf	(??___flge+3)& (0+255),c
  8852  003B40  501C               	movf	??___flge,w,c
  8853  003B42  101D               	iorwf	??___flge+1,w,c
  8854  003B44  101E               	iorwf	??___flge+2,w,c
  8855  003B46  101F               	iorwf	??___flge+3,w,c
  8856  003B48  A4D8               	btfss	status,2,c
  8857  003B4A  D008               	goto	l8659
  8858  003B4C  0E00               	movlw	0
  8859  003B4E  6E18               	movwf	___flge@ff2,c
  8860  003B50  0E00               	movlw	0
  8861  003B52  6E19               	movwf	___flge@ff2+1,c
  8862  003B54  0E00               	movlw	0
  8863  003B56  6E1A               	movwf	___flge@ff2+2,c
  8864  003B58  0E00               	movlw	0
  8865  003B5A  6E1B               	movwf	___flge@ff2+3,c
  8866  003B5C                     l8659:
  8867  003B5C  AE17               	btfss	___flge@ff1+3,7,c
  8868  003B5E  D009               	goto	l8663
  8869  003B60  6C14               	negf	___flge@ff1,c
  8870  003B62  1E15               	comf	___flge@ff1+1,f,c
  8871  003B64  B0D8               	btfsc	status,0,c
  8872  003B66  2A15               	incf	___flge@ff1+1,f,c
  8873  003B68  1E16               	comf	___flge@ff1+2,f,c
  8874  003B6A  B0D8               	btfsc	status,0,c
  8875  003B6C  2A16               	incf	___flge@ff1+2,f,c
  8876  003B6E  0E80               	movlw	128
  8877  003B70  5617               	subfwb	___flge@ff1+3,f,c
  8878  003B72                     l8663:
  8879  003B72  AE1B               	btfss	___flge@ff2+3,7,c
  8880  003B74  D009               	goto	l1094
  8881  003B76  6C18               	negf	___flge@ff2,c
  8882  003B78  1E19               	comf	___flge@ff2+1,f,c
  8883  003B7A  B0D8               	btfsc	status,0,c
  8884  003B7C  2A19               	incf	___flge@ff2+1,f,c
  8885  003B7E  1E1A               	comf	___flge@ff2+2,f,c
  8886  003B80  B0D8               	btfsc	status,0,c
  8887  003B82  2A1A               	incf	___flge@ff2+2,f,c
  8888  003B84  0E80               	movlw	128
  8889  003B86  561B               	subfwb	___flge@ff2+3,f,c
  8890  003B88                     l1094:
  8891  003B88  0E00               	movlw	0
  8892  003B8A  1A14               	xorwf	___flge@ff1,f,c
  8893  003B8C  0E00               	movlw	0
  8894  003B8E  1A15               	xorwf	___flge@ff1+1,f,c
  8895  003B90  0E00               	movlw	0
  8896  003B92  1A16               	xorwf	___flge@ff1+2,f,c
  8897  003B94  0E80               	movlw	128
  8898  003B96  1A17               	xorwf	___flge@ff1+3,f,c
  8899  003B98  0E00               	movlw	0
  8900  003B9A  1A18               	xorwf	___flge@ff2,f,c
  8901  003B9C  0E00               	movlw	0
  8902  003B9E  1A19               	xorwf	___flge@ff2+1,f,c
  8903  003BA0  0E00               	movlw	0
  8904  003BA2  1A1A               	xorwf	___flge@ff2+2,f,c
  8905  003BA4  0E80               	movlw	128
  8906  003BA6  1A1B               	xorwf	___flge@ff2+3,f,c
  8907  003BA8  5018               	movf	___flge@ff2,w,c
  8908  003BAA  5C14               	subwf	___flge@ff1,w,c
  8909  003BAC  5019               	movf	___flge@ff2+1,w,c
  8910  003BAE  5815               	subwfb	___flge@ff1+1,w,c
  8911  003BB0  501A               	movf	___flge@ff2+2,w,c
  8912  003BB2  5816               	subwfb	___flge@ff1+2,w,c
  8913  003BB4  501B               	movf	___flge@ff2+3,w,c
  8914  003BB6  5817               	subwfb	___flge@ff1+3,w,c
  8915  003BB8  B0D8               	btfsc	status,0,c
  8916  003BBA  D002               	goto	l8669
  8917  003BBC  90D8               	bcf	status,0,c
  8918  003BBE  0012               	return	
  8919  003BC0                     l8669:
  8920  003BC0  80D8               	bsf	status,0,c
  8921  003BC2  0012               	return		;funcret
  8922  003BC4                     __end_of___flge:
  8923                           	opt callstack 0
  8924                           
  8925 ;; *************** function ___fldiv *****************
  8926 ;; Defined at:
  8927 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  b               4   19[COMRAM] unsigned char 
  8930 ;;  a               4   23[COMRAM] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  grs             4   38[COMRAM] unsigned long 
  8933 ;;  rem             4   31[COMRAM] unsigned long 
  8934 ;;  new_exp         2   36[COMRAM] short 
  8935 ;;  aexp            1   43[COMRAM] unsigned char 
  8936 ;;  bexp            1   42[COMRAM] unsigned char 
  8937 ;;  sign            1   35[COMRAM] unsigned char 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  4   19[COMRAM] unsigned char 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;Total ram usage:       25 bytes
  8952 ;; Hardware stack levels used:    1
  8953 ;; Hardware stack levels required when called:    2
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_set_pwm_duty_cycle
  8958 ;;		_errorCorrectedMove
  8959 ;;		_doOperation
  8960 ;;		_PIDCorrectedMove
  8961 ;;		_errorCorrectedMoveAccelerate
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text32
  8966  0023B2                     __ptext32:
  8967                           	opt callstack 0
  8968  0023B2                     ___fldiv:
  8969                           	opt callstack 24
  8970                           
  8971                           ;incstack = 0
  8972  0023B2  5017               	movf	___fldiv@b+3,w,c
  8973  0023B4  0B80               	andlw	128
  8974  0023B6  6E24               	movwf	___fldiv@sign,c
  8975  0023B8  5017               	movf	___fldiv@b+3,w,c
  8976  0023BA  2417               	addwf	___fldiv@b+3,w,c
  8977  0023BC  6E2B               	movwf	___fldiv@bexp,c
  8978  0023BE  BE16               	btfsc	___fldiv@b+2,7,c
  8979  0023C0  802B               	bsf	___fldiv@bexp,0,c
  8980  0023C2  502B               	movf	___fldiv@bexp,w,c
  8981  0023C4  B4D8               	btfsc	status,2,c
  8982  0023C6  D00D               	goto	l8399
  8983  0023C8  282B               	incf	___fldiv@bexp,w,c
  8984  0023CA  A4D8               	btfss	status,2,c
  8985  0023CC  D008               	goto	l8395
  8986  0023CE  0E00               	movlw	0
  8987  0023D0  6E14               	movwf	___fldiv@b,c
  8988  0023D2  0E00               	movlw	0
  8989  0023D4  6E15               	movwf	___fldiv@b+1,c
  8990  0023D6  0E00               	movlw	0
  8991  0023D8  6E16               	movwf	___fldiv@b+2,c
  8992  0023DA  0E00               	movlw	0
  8993  0023DC  6E17               	movwf	___fldiv@b+3,c
  8994  0023DE                     l8395:
  8995  0023DE  8E16               	bsf	___fldiv@b+2,7,c
  8996  0023E0  D006               	goto	L16
  8997  0023E2                     l8399:
  8998  0023E2  0E00               	movlw	0
  8999  0023E4  6E14               	movwf	___fldiv@b,c
  9000  0023E6  0E00               	movlw	0
  9001  0023E8  6E15               	movwf	___fldiv@b+1,c
  9002  0023EA  0E00               	movlw	0
  9003  0023EC  6E16               	movwf	___fldiv@b+2,c
  9004  0023EE                     L16:
  9005  0023EE  0E00               	movlw	0
  9006  0023F0  6E17               	movwf	___fldiv@b+3,c
  9007  0023F2  501B               	movf	___fldiv@a+3,w,c
  9008  0023F4  0B80               	andlw	128
  9009  0023F6  1A24               	xorwf	___fldiv@sign,f,c
  9010  0023F8  501B               	movf	___fldiv@a+3,w,c
  9011  0023FA  241B               	addwf	___fldiv@a+3,w,c
  9012  0023FC  6E2C               	movwf	___fldiv@aexp,c
  9013  0023FE  BE1A               	btfsc	___fldiv@a+2,7,c
  9014  002400  802C               	bsf	___fldiv@aexp,0,c
  9015  002402  502C               	movf	___fldiv@aexp,w,c
  9016  002404  B4D8               	btfsc	status,2,c
  9017  002406  D00D               	goto	l8419
  9018  002408  282C               	incf	___fldiv@aexp,w,c
  9019  00240A  A4D8               	btfss	status,2,c
  9020  00240C  D008               	goto	l8415
  9021  00240E  0E00               	movlw	0
  9022  002410  6E18               	movwf	___fldiv@a,c
  9023  002412  0E00               	movlw	0
  9024  002414  6E19               	movwf	___fldiv@a+1,c
  9025  002416  0E00               	movlw	0
  9026  002418  6E1A               	movwf	___fldiv@a+2,c
  9027  00241A  0E00               	movlw	0
  9028  00241C  6E1B               	movwf	___fldiv@a+3,c
  9029  00241E                     l8415:
  9030  00241E  8E1A               	bsf	___fldiv@a+2,7,c
  9031  002420  D006               	goto	L17
  9032  002422                     l8419:
  9033  002422  0E00               	movlw	0
  9034  002424  6E18               	movwf	___fldiv@a,c
  9035  002426  0E00               	movlw	0
  9036  002428  6E19               	movwf	___fldiv@a+1,c
  9037  00242A  0E00               	movlw	0
  9038  00242C  6E1A               	movwf	___fldiv@a+2,c
  9039  00242E                     L17:
  9040  00242E  0E00               	movlw	0
  9041  002430  6E1B               	movwf	___fldiv@a+3,c
  9042  002432  5018               	movf	___fldiv@a,w,c
  9043  002434  1019               	iorwf	___fldiv@a+1,w,c
  9044  002436  101A               	iorwf	___fldiv@a+2,w,c
  9045  002438  101B               	iorwf	___fldiv@a+3,w,c
  9046  00243A  A4D8               	btfss	status,2,c
  9047  00243C  D017               	goto	l8433
  9048  00243E  0E00               	movlw	0
  9049  002440  6E14               	movwf	___fldiv@b,c
  9050  002442  0E00               	movlw	0
  9051  002444  6E15               	movwf	___fldiv@b+1,c
  9052  002446  0E00               	movlw	0
  9053  002448  6E16               	movwf	___fldiv@b+2,c
  9054  00244A  0E00               	movlw	0
  9055  00244C  6E17               	movwf	___fldiv@b+3,c
  9056  00244E  0E80               	movlw	128
  9057  002450  1216               	iorwf	___fldiv@b+2,f,c
  9058  002452  0E7F               	movlw	127
  9059  002454  1217               	iorwf	___fldiv@b+3,f,c
  9060  002456                     l8427:
  9061  002456  5024               	movf	___fldiv@sign,w,c
  9062  002458  1217               	iorwf	___fldiv@b+3,f,c
  9063  00245A  C014  F014         	movff	___fldiv@b,?___fldiv
  9064  00245E  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  9065  002462  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  9066  002466  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  9067  00246A  0012               	return	
  9068  00246C                     l8433:
  9069  00246C  502B               	movf	___fldiv@bexp,w,c
  9070  00246E  A4D8               	btfss	status,2,c
  9071  002470  D009               	goto	l8441
  9072  002472  0E00               	movlw	0
  9073  002474  6E14               	movwf	?___fldiv,c
  9074  002476  0E00               	movlw	0
  9075  002478  6E15               	movwf	?___fldiv+1,c
  9076  00247A  0E00               	movlw	0
  9077  00247C  6E16               	movwf	?___fldiv+2,c
  9078  00247E  0E00               	movlw	0
  9079  002480  6E17               	movwf	?___fldiv+3,c
  9080  002482  0012               	return	
  9081  002484                     l8441:
  9082  002484  502C               	movf	___fldiv@aexp,w,c
  9083  002486  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  9084  00248A  6A1D               	clrf	(??___fldiv+1)& (0+255),c
  9085  00248C  5E1C               	subwf	??___fldiv,f,c
  9086  00248E  0E00               	movlw	0
  9087  002490  5A1D               	subwfb	??___fldiv+1,f,c
  9088  002492  0E7F               	movlw	127
  9089  002494  241C               	addwf	??___fldiv,w,c
  9090  002496  6E25               	movwf	___fldiv@new_exp,c
  9091  002498  0E00               	movlw	0
  9092  00249A  201D               	addwfc	??___fldiv+1,w,c
  9093  00249C  6E26               	movwf	___fldiv@new_exp+1,c
  9094  00249E  C014  F020         	movff	___fldiv@b,___fldiv@rem
  9095  0024A2  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  9096  0024A6  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  9097  0024AA  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  9098  0024AE  0E00               	movlw	0
  9099  0024B0  6E14               	movwf	___fldiv@b,c
  9100  0024B2  0E00               	movlw	0
  9101  0024B4  6E15               	movwf	___fldiv@b+1,c
  9102  0024B6  0E00               	movlw	0
  9103  0024B8  6E16               	movwf	___fldiv@b+2,c
  9104  0024BA  0E00               	movlw	0
  9105  0024BC  6E17               	movwf	___fldiv@b+3,c
  9106  0024BE  0E00               	movlw	0
  9107  0024C0  6E27               	movwf	___fldiv@grs,c
  9108  0024C2  0E00               	movlw	0
  9109  0024C4  6E28               	movwf	___fldiv@grs+1,c
  9110  0024C6  0E00               	movlw	0
  9111  0024C8  6E29               	movwf	___fldiv@grs+2,c
  9112  0024CA  0E00               	movlw	0
  9113  0024CC  6E2A               	movwf	___fldiv@grs+3,c
  9114  0024CE  0E00               	movlw	0
  9115  0024D0  6E2C               	movwf	___fldiv@aexp,c
  9116  0024D2  D028               	goto	l1413
  9117  0024D4                     l8451:
  9118  0024D4  502C               	movf	___fldiv@aexp,w,c
  9119  0024D6  B4D8               	btfsc	status,2,c
  9120  0024D8  D011               	goto	l8459
  9121  0024DA  90D8               	bcf	status,0,c
  9122  0024DC  3620               	rlcf	___fldiv@rem,f,c
  9123  0024DE  3621               	rlcf	___fldiv@rem+1,f,c
  9124  0024E0  3622               	rlcf	___fldiv@rem+2,f,c
  9125  0024E2  3623               	rlcf	___fldiv@rem+3,f,c
  9126  0024E4  90D8               	bcf	status,0,c
  9127  0024E6  3614               	rlcf	___fldiv@b,f,c
  9128  0024E8  3615               	rlcf	___fldiv@b+1,f,c
  9129  0024EA  3616               	rlcf	___fldiv@b+2,f,c
  9130  0024EC  3617               	rlcf	___fldiv@b+3,f,c
  9131  0024EE  BE2A               	btfsc	___fldiv@grs+3,7,c
  9132  0024F0  8014               	bsf	___fldiv@b,0,c
  9133  0024F2  90D8               	bcf	status,0,c
  9134  0024F4  3627               	rlcf	___fldiv@grs,f,c
  9135  0024F6  3628               	rlcf	___fldiv@grs+1,f,c
  9136  0024F8  3629               	rlcf	___fldiv@grs+2,f,c
  9137  0024FA  362A               	rlcf	___fldiv@grs+3,f,c
  9138  0024FC                     l8459:
  9139  0024FC  5018               	movf	___fldiv@a,w,c
  9140  0024FE  5C20               	subwf	___fldiv@rem,w,c
  9141  002500  5019               	movf	___fldiv@a+1,w,c
  9142  002502  5821               	subwfb	___fldiv@rem+1,w,c
  9143  002504  501A               	movf	___fldiv@a+2,w,c
  9144  002506  5822               	subwfb	___fldiv@rem+2,w,c
  9145  002508  501B               	movf	___fldiv@a+3,w,c
  9146  00250A  5823               	subwfb	___fldiv@rem+3,w,c
  9147  00250C  A0D8               	btfss	status,0,c
  9148  00250E  D009               	goto	l8465
  9149  002510  8C2A               	bsf	___fldiv@grs+3,6,c
  9150  002512  5018               	movf	___fldiv@a,w,c
  9151  002514  5E20               	subwf	___fldiv@rem,f,c
  9152  002516  5019               	movf	___fldiv@a+1,w,c
  9153  002518  5A21               	subwfb	___fldiv@rem+1,f,c
  9154  00251A  501A               	movf	___fldiv@a+2,w,c
  9155  00251C  5A22               	subwfb	___fldiv@rem+2,f,c
  9156  00251E  501B               	movf	___fldiv@a+3,w,c
  9157  002520  5A23               	subwfb	___fldiv@rem+3,f,c
  9158  002522                     l8465:
  9159  002522  2A2C               	incf	___fldiv@aexp,f,c
  9160  002524                     l1413:
  9161  002524  0E19               	movlw	25
  9162  002526  642C               	cpfsgt	___fldiv@aexp,c
  9163  002528  D7D5               	goto	l8451
  9164  00252A  5020               	movf	___fldiv@rem,w,c
  9165  00252C  1021               	iorwf	___fldiv@rem+1,w,c
  9166  00252E  1022               	iorwf	___fldiv@rem+2,w,c
  9167  002530  1023               	iorwf	___fldiv@rem+3,w,c
  9168  002532  B4D8               	btfsc	status,2,c
  9169  002534  D011               	goto	l8477
  9170  002536  8027               	bsf	___fldiv@grs,0,c
  9171  002538  D00F               	goto	l8477
  9172  00253A                     l8471:
  9173  00253A  90D8               	bcf	status,0,c
  9174  00253C  3614               	rlcf	___fldiv@b,f,c
  9175  00253E  3615               	rlcf	___fldiv@b+1,f,c
  9176  002540  3616               	rlcf	___fldiv@b+2,f,c
  9177  002542  3617               	rlcf	___fldiv@b+3,f,c
  9178  002544  BE2A               	btfsc	___fldiv@grs+3,7,c
  9179  002546  8014               	bsf	___fldiv@b,0,c
  9180  002548  90D8               	bcf	status,0,c
  9181  00254A  3627               	rlcf	___fldiv@grs,f,c
  9182  00254C  3628               	rlcf	___fldiv@grs+1,f,c
  9183  00254E  3629               	rlcf	___fldiv@grs+2,f,c
  9184  002550  362A               	rlcf	___fldiv@grs+3,f,c
  9185  002552  0625               	decf	___fldiv@new_exp,f,c
  9186  002554  A0D8               	btfss	status,0,c
  9187  002556  0626               	decf	___fldiv@new_exp+1,f,c
  9188  002558                     l8477:
  9189  002558  AE16               	btfss	___fldiv@b+2,7,c
  9190  00255A  D7EF               	goto	l8471
  9191  00255C  0E00               	movlw	0
  9192  00255E  6E2C               	movwf	___fldiv@aexp,c
  9193  002560  AE2A               	btfss	___fldiv@grs+3,7,c
  9194  002562  D017               	goto	l1424
  9195  002564  0EFF               	movlw	255
  9196  002566  1427               	andwf	___fldiv@grs,w,c
  9197  002568  6E1C               	movwf	??___fldiv& (0+255),c
  9198  00256A  0EFF               	movlw	255
  9199  00256C  1428               	andwf	___fldiv@grs+1,w,c
  9200  00256E  6E1D               	movwf	(??___fldiv+1)& (0+255),c
  9201  002570  0EFF               	movlw	255
  9202  002572  1429               	andwf	___fldiv@grs+2,w,c
  9203  002574  6E1E               	movwf	(??___fldiv+2)& (0+255),c
  9204  002576  0E7F               	movlw	127
  9205  002578  142A               	andwf	___fldiv@grs+3,w,c
  9206  00257A  6E1F               	movwf	(??___fldiv+3)& (0+255),c
  9207  00257C  501C               	movf	??___fldiv,w,c
  9208  00257E  101D               	iorwf	??___fldiv+1,w,c
  9209  002580  101E               	iorwf	??___fldiv+2,w,c
  9210  002582  101F               	iorwf	??___fldiv+3,w,c
  9211  002584  B4D8               	btfsc	status,2,c
  9212  002586  D003               	goto	l1425
  9213  002588                     u9120:
  9214  002588  0E01               	movlw	1
  9215  00258A  6E2C               	movwf	___fldiv@aexp,c
  9216  00258C  D002               	goto	l1424
  9217  00258E                     l1425:
  9218  00258E  B014               	btfsc	___fldiv@b,0,c
  9219  002590  D7FB               	goto	u9120
  9220  002592                     l1424:
  9221  002592  502C               	movf	___fldiv@aexp,w,c
  9222  002594  B4D8               	btfsc	status,2,c
  9223  002596  D01F               	goto	l8497
  9224  002598  0E01               	movlw	1
  9225  00259A  2614               	addwf	___fldiv@b,f,c
  9226  00259C  0E00               	movlw	0
  9227  00259E  2215               	addwfc	___fldiv@b+1,f,c
  9228  0025A0  2216               	addwfc	___fldiv@b+2,f,c
  9229  0025A2  2217               	addwfc	___fldiv@b+3,f,c
  9230  0025A4  A017               	btfss	___fldiv@b+3,0,c
  9231  0025A6  D017               	goto	l8497
  9232  0025A8  C014  F01C         	movff	___fldiv@b,??___fldiv
  9233  0025AC  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  9234  0025B0  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  9235  0025B4  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  9236  0025B8  341F               	rlcf	??___fldiv+3,w,c
  9237  0025BA  321F               	rrcf	??___fldiv+3,f,c
  9238  0025BC  321E               	rrcf	??___fldiv+2,f,c
  9239  0025BE  321D               	rrcf	??___fldiv+1,f,c
  9240  0025C0  321C               	rrcf	??___fldiv,f,c
  9241  0025C2  C01C  F014         	movff	??___fldiv,___fldiv@b
  9242  0025C6  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  9243  0025CA  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  9244  0025CE  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  9245  0025D2  4A25               	infsnz	___fldiv@new_exp,f,c
  9246  0025D4  2A26               	incf	___fldiv@new_exp+1,f,c
  9247  0025D6                     l8497:
  9248  0025D6  BE26               	btfsc	___fldiv@new_exp+1,7,c
  9249  0025D8  D010               	goto	l8501
  9250  0025DA  5026               	movf	___fldiv@new_exp+1,w,c
  9251  0025DC  E103               	bnz	u9160
  9252  0025DE  2825               	incf	___fldiv@new_exp,w,c
  9253  0025E0  A0D8               	btfss	status,0,c
  9254  0025E2  D00B               	goto	l8501
  9255  0025E4                     u9160:
  9256  0025E4  0E00               	movlw	0
  9257  0025E6  6E26               	movwf	___fldiv@new_exp+1,c
  9258  0025E8  6825               	setf	___fldiv@new_exp,c
  9259  0025EA  0E00               	movlw	0
  9260  0025EC  6E14               	movwf	___fldiv@b,c
  9261  0025EE  0E00               	movlw	0
  9262  0025F0  6E15               	movwf	___fldiv@b+1,c
  9263  0025F2  0E00               	movlw	0
  9264  0025F4  6E16               	movwf	___fldiv@b+2,c
  9265  0025F6  0E00               	movlw	0
  9266  0025F8  6E17               	movwf	___fldiv@b+3,c
  9267  0025FA                     l8501:
  9268  0025FA  BE26               	btfsc	___fldiv@new_exp+1,7,c
  9269  0025FC  D005               	goto	u9170
  9270  0025FE  5026               	movf	___fldiv@new_exp+1,w,c
  9271  002600  E111               	bnz	l8505
  9272  002602  0425               	decf	___fldiv@new_exp,w,c
  9273  002604  B0D8               	btfsc	status,0,c
  9274  002606  D00E               	goto	l8505
  9275  002608                     u9170:
  9276  002608  0E00               	movlw	0
  9277  00260A  6E26               	movwf	___fldiv@new_exp+1,c
  9278  00260C  0E00               	movlw	0
  9279  00260E  6E25               	movwf	___fldiv@new_exp,c
  9280  002610  0E00               	movlw	0
  9281  002612  6E14               	movwf	___fldiv@b,c
  9282  002614  0E00               	movlw	0
  9283  002616  6E15               	movwf	___fldiv@b+1,c
  9284  002618  0E00               	movlw	0
  9285  00261A  6E16               	movwf	___fldiv@b+2,c
  9286  00261C  0E00               	movlw	0
  9287  00261E  6E17               	movwf	___fldiv@b+3,c
  9288  002620  0E00               	movlw	0
  9289  002622  6E24               	movwf	___fldiv@sign,c
  9290  002624                     l8505:
  9291  002624  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  9292  002628  A02B               	btfss	___fldiv@bexp,0,c
  9293  00262A  D002               	goto	l8511
  9294  00262C  8E16               	bsf	___fldiv@b+2,7,c
  9295  00262E  D001               	goto	l8513
  9296  002630                     l8511:
  9297  002630  9E16               	bcf	___fldiv@b+2,7,c
  9298  002632                     l8513:
  9299  002632  90D8               	bcf	status,0,c
  9300  002634  302B               	rrcf	___fldiv@bexp,w,c
  9301  002636  6E17               	movwf	___fldiv@b+3,c
  9302  002638  D70E               	goto	l8427
  9303  00263A                     __end_of___fldiv:
  9304                           	opt callstack 0
  9305                           
  9306 ;; *************** function ___flsub *****************
  9307 ;; Defined at:
  9308 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  b               4   85[COMRAM] unsigned char 
  9311 ;;  a               4   89[COMRAM] unsigned char 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  4   85[COMRAM] unsigned char 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, cstack
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;Total ram usage:        8 bytes
  9328 ;; Hardware stack levels used:    1
  9329 ;; Hardware stack levels required when called:    3
  9330 ;; This function calls:
  9331 ;;		___fladd
  9332 ;; This function is called by:
  9333 ;;		_errorCorrectedMove
  9334 ;;		_PIDCorrectedMove
  9335 ;;		_errorCorrectedMoveAccelerate
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text33
  9340  0045AE                     __ptext33:
  9341                           	opt callstack 0
  9342  0045AE                     ___flsub:
  9343                           	opt callstack 24
  9344                           
  9345                           ;incstack = 0
  9346  0045AE  0E00               	movlw	0
  9347  0045B0  1A5A               	xorwf	___flsub@a,f,c
  9348  0045B2  0E00               	movlw	0
  9349  0045B4  1A5B               	xorwf	___flsub@a+1,f,c
  9350  0045B6  0E00               	movlw	0
  9351  0045B8  1A5C               	xorwf	___flsub@a+2,f,c
  9352  0045BA  0E80               	movlw	128
  9353  0045BC  1A5D               	xorwf	___flsub@a+3,f,c
  9354  0045BE  C056  F046         	movff	___flsub@b,___fladd@b
  9355  0045C2  C057  F047         	movff	___flsub@b+1,___fladd@b+1
  9356  0045C6  C058  F048         	movff	___flsub@b+2,___fladd@b+2
  9357  0045CA  C059  F049         	movff	___flsub@b+3,___fladd@b+3
  9358  0045CE  C05A  F04A         	movff	___flsub@a,___fladd@a
  9359  0045D2  C05B  F04B         	movff	___flsub@a+1,___fladd@a+1
  9360  0045D6  C05C  F04C         	movff	___flsub@a+2,___fladd@a+2
  9361  0045DA  C05D  F04D         	movff	___flsub@a+3,___fladd@a+3
  9362  0045DE  EC53  F010         	call	___fladd	;wreg free
  9363  0045E2  C046  F056         	movff	?___fladd,?___flsub
  9364  0045E6  C047  F057         	movff	?___fladd+1,?___flsub+1
  9365  0045EA  C048  F058         	movff	?___fladd+2,?___flsub+2
  9366  0045EE  C049  F059         	movff	?___fladd+3,?___flsub+3
  9367  0045F2  0012               	return		;funcret
  9368  0045F4                     __end_of___flsub:
  9369                           	opt callstack 0
  9370                           
  9371 ;; *************** function ___fladd *****************
  9372 ;; Defined at:
  9373 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  b               4   69[COMRAM] unsigned char 
  9376 ;;  a               4   73[COMRAM] unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  grs             1   84[COMRAM] unsigned char 
  9379 ;;  bexp            1   83[COMRAM] unsigned char 
  9380 ;;  aexp            1   82[COMRAM] unsigned char 
  9381 ;;  signs           1   81[COMRAM] unsigned char 
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  4   69[COMRAM] unsigned char 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9391 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;Total ram usage:       16 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:    2
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_errorCorrectedMove
  9402 ;;		___flsub
  9403 ;;		_PIDCorrectedMove
  9404 ;;		_errorCorrectedMoveAccelerate
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text34
  9409  0020A6                     __ptext34:
  9410                           	opt callstack 0
  9411  0020A6                     ___fladd:
  9412                           	opt callstack 24
  9413                           
  9414                           ;incstack = 0
  9415  0020A6  5049               	movf	___fladd@b+3,w,c
  9416  0020A8  0B80               	andlw	128
  9417  0020AA  6E52               	movwf	___fladd@signs,c
  9418  0020AC  5049               	movf	___fladd@b+3,w,c
  9419  0020AE  2449               	addwf	___fladd@b+3,w,c
  9420  0020B0  6E54               	movwf	___fladd@bexp,c
  9421  0020B2  BE48               	btfsc	___fladd@b+2,7,c
  9422  0020B4  8054               	bsf	___fladd@bexp,0,c
  9423  0020B6  5054               	movf	___fladd@bexp,w,c
  9424  0020B8  B4D8               	btfsc	status,2,c
  9425  0020BA  D00D               	goto	l9137
  9426  0020BC  2854               	incf	___fladd@bexp,w,c
  9427  0020BE  A4D8               	btfss	status,2,c
  9428  0020C0  D008               	goto	l9133
  9429  0020C2  0E00               	movlw	0
  9430  0020C4  6E46               	movwf	___fladd@b,c
  9431  0020C6  0E00               	movlw	0
  9432  0020C8  6E47               	movwf	___fladd@b+1,c
  9433  0020CA  0E00               	movlw	0
  9434  0020CC  6E48               	movwf	___fladd@b+2,c
  9435  0020CE  0E00               	movlw	0
  9436  0020D0  6E49               	movwf	___fladd@b+3,c
  9437  0020D2                     l9133:
  9438  0020D2  8E48               	bsf	___fladd@b+2,7,c
  9439  0020D4  D006               	goto	L18
  9440  0020D6                     l9137:
  9441  0020D6  0E00               	movlw	0
  9442  0020D8  6E46               	movwf	___fladd@b,c
  9443  0020DA  0E00               	movlw	0
  9444  0020DC  6E47               	movwf	___fladd@b+1,c
  9445  0020DE  0E00               	movlw	0
  9446  0020E0  6E48               	movwf	___fladd@b+2,c
  9447  0020E2                     L18:
  9448  0020E2  0E00               	movlw	0
  9449  0020E4  6E49               	movwf	___fladd@b+3,c
  9450  0020E6  504D               	movf	___fladd@a+3,w,c
  9451  0020E8  0B80               	andlw	128
  9452  0020EA  6E53               	movwf	___fladd@aexp,c
  9453  0020EC  5052               	movf	___fladd@signs,w,c
  9454  0020EE  1853               	xorwf	___fladd@aexp,w,c
  9455  0020F0  A4D8               	btfss	status,2,c
  9456  0020F2  8C52               	bsf	___fladd@signs,6,c
  9457  0020F4  504D               	movf	___fladd@a+3,w,c
  9458  0020F6  244D               	addwf	___fladd@a+3,w,c
  9459  0020F8  6E53               	movwf	___fladd@aexp,c
  9460  0020FA  BE4C               	btfsc	___fladd@a+2,7,c
  9461  0020FC  8053               	bsf	___fladd@aexp,0,c
  9462  0020FE  5053               	movf	___fladd@aexp,w,c
  9463  002100  B4D8               	btfsc	status,2,c
  9464  002102  D00D               	goto	l9161
  9465  002104  2853               	incf	___fladd@aexp,w,c
  9466  002106  A4D8               	btfss	status,2,c
  9467  002108  D008               	goto	l9157
  9468  00210A  0E00               	movlw	0
  9469  00210C  6E4A               	movwf	___fladd@a,c
  9470  00210E  0E00               	movlw	0
  9471  002110  6E4B               	movwf	___fladd@a+1,c
  9472  002112  0E00               	movlw	0
  9473  002114  6E4C               	movwf	___fladd@a+2,c
  9474  002116  0E00               	movlw	0
  9475  002118  6E4D               	movwf	___fladd@a+3,c
  9476  00211A                     l9157:
  9477  00211A  8E4C               	bsf	___fladd@a+2,7,c
  9478  00211C  D006               	goto	L19
  9479  00211E                     l9161:
  9480  00211E  0E00               	movlw	0
  9481  002120  6E4A               	movwf	___fladd@a,c
  9482  002122  0E00               	movlw	0
  9483  002124  6E4B               	movwf	___fladd@a+1,c
  9484  002126  0E00               	movlw	0
  9485  002128  6E4C               	movwf	___fladd@a+2,c
  9486  00212A                     L19:
  9487  00212A  0E00               	movlw	0
  9488  00212C  6E4D               	movwf	___fladd@a+3,c
  9489  00212E  5054               	movf	___fladd@bexp,w,c
  9490  002130  5C53               	subwf	___fladd@aexp,w,c
  9491  002132  B0D8               	btfsc	status,0,c
  9492  002134  D022               	goto	l9199
  9493  002136  AC52               	btfss	___fladd@signs,6,c
  9494  002138  D002               	goto	l9169
  9495  00213A  0E80               	movlw	128
  9496  00213C  1A52               	xorwf	___fladd@signs,f,c
  9497  00213E                     l9169:
  9498  00213E  C054  F055         	movff	___fladd@bexp,___fladd@grs
  9499  002142  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  9500  002146  C055  F053         	movff	___fladd@grs,___fladd@aexp
  9501  00214A  C046  F055         	movff	___fladd@b,___fladd@grs
  9502  00214E  C04A  F046         	movff	___fladd@a,___fladd@b
  9503  002152  C055  F04A         	movff	___fladd@grs,___fladd@a
  9504  002156  C047  F055         	movff	___fladd@b+1,___fladd@grs
  9505  00215A  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  9506  00215E  C055  F04B         	movff	___fladd@grs,___fladd@a+1
  9507  002162  C048  F055         	movff	___fladd@b+2,___fladd@grs
  9508  002166  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  9509  00216A  C055  F04C         	movff	___fladd@grs,___fladd@a+2
  9510  00216E  C049  F055         	movff	___fladd@b+3,___fladd@grs
  9511  002172  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  9512  002176  C055  F04D         	movff	___fladd@grs,___fladd@a+3
  9513  00217A                     l9199:
  9514  00217A  0E00               	movlw	0
  9515  00217C  6E55               	movwf	___fladd@grs,c
  9516  00217E  5054               	movf	___fladd@bexp,w,c
  9517  002180  C053  F04E         	movff	___fladd@aexp,??___fladd
  9518  002184  6A4F               	clrf	(??___fladd+1)& (0+255),c
  9519  002186  5E4E               	subwf	??___fladd,f,c
  9520  002188  0E00               	movlw	0
  9521  00218A  5A4F               	subwfb	??___fladd+1,f,c
  9522  00218C  BE4F               	btfsc	??___fladd+1,7,c
  9523  00218E  D02C               	goto	l1358
  9524  002190  504F               	movf	??___fladd+1,w,c
  9525  002192  E104               	bnz	u10480
  9526  002194  0E1A               	movlw	26
  9527  002196  5C4E               	subwf	??___fladd,w,c
  9528  002198  A0D8               	btfss	status,0,c
  9529  00219A  D026               	goto	l1358
  9530  00219C                     u10480:
  9531  00219C  5046               	movf	___fladd@b,w,c
  9532  00219E  1047               	iorwf	___fladd@b+1,w,c
  9533  0021A0  1048               	iorwf	___fladd@b+2,w,c
  9534  0021A2  1049               	iorwf	___fladd@b+3,w,c
  9535  0021A4  B4D8               	btfsc	status,2,c
  9536  0021A6  D002               	goto	u10490
  9537  0021A8  0E01               	movlw	1
  9538  0021AA  D001               	goto	u10500
  9539  0021AC                     u10490:
  9540  0021AC  0E00               	movlw	0
  9541  0021AE                     u10500:
  9542  0021AE  6E55               	movwf	___fladd@grs,c
  9543  0021B0  0E00               	movlw	0
  9544  0021B2  6E46               	movwf	___fladd@b,c
  9545  0021B4  0E00               	movlw	0
  9546  0021B6  6E47               	movwf	___fladd@b+1,c
  9547  0021B8  0E00               	movlw	0
  9548  0021BA  6E48               	movwf	___fladd@b+2,c
  9549  0021BC  0E00               	movlw	0
  9550  0021BE  6E49               	movwf	___fladd@b+3,c
  9551  0021C0  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  9552  0021C4  D015               	goto	u10530
  9553  0021C6                     l1359:
  9554  0021C6  A055               	btfss	___fladd@grs,0,c
  9555  0021C8  D005               	goto	l9211
  9556  0021CA  90D8               	bcf	status,0,c
  9557  0021CC  3055               	rrcf	___fladd@grs,w,c
  9558  0021CE  0901               	iorlw	1
  9559  0021D0  6E55               	movwf	___fladd@grs,c
  9560  0021D2  D002               	goto	l9213
  9561  0021D4                     l9211:
  9562  0021D4  90D8               	bcf	status,0,c
  9563  0021D6  3255               	rrcf	___fladd@grs,f,c
  9564  0021D8                     l9213:
  9565  0021D8  B046               	btfsc	___fladd@b,0,c
  9566  0021DA  8E55               	bsf	___fladd@grs,7,c
  9567  0021DC  3449               	rlcf	___fladd@b+3,w,c
  9568  0021DE  3249               	rrcf	___fladd@b+3,f,c
  9569  0021E0  3248               	rrcf	___fladd@b+2,f,c
  9570  0021E2  3247               	rrcf	___fladd@b+1,f,c
  9571  0021E4  3246               	rrcf	___fladd@b,f,c
  9572  0021E6  2A54               	incf	___fladd@bexp,f,c
  9573  0021E8                     l1358:
  9574  0021E8  5053               	movf	___fladd@aexp,w,c
  9575  0021EA  5C54               	subwf	___fladd@bexp,w,c
  9576  0021EC  A0D8               	btfss	status,0,c
  9577  0021EE  D7EB               	goto	l1359
  9578  0021F0                     u10530:
  9579  0021F0  BC52               	btfsc	___fladd@signs,6,c
  9580  0021F2  D028               	goto	l9245
  9581  0021F4  5054               	movf	___fladd@bexp,w,c
  9582  0021F6  A4D8               	btfss	status,2,c
  9583  0021F8  D009               	goto	l9227
  9584  0021FA  0E00               	movlw	0
  9585  0021FC  6E46               	movwf	?___fladd,c
  9586  0021FE  0E00               	movlw	0
  9587  002200  6E47               	movwf	?___fladd+1,c
  9588  002202  0E00               	movlw	0
  9589  002204  6E48               	movwf	?___fladd+2,c
  9590  002206  0E00               	movlw	0
  9591  002208  6E49               	movwf	?___fladd+3,c
  9592  00220A  0012               	return	
  9593  00220C                     l9227:
  9594  00220C  504A               	movf	___fladd@a,w,c
  9595  00220E  2646               	addwf	___fladd@b,f,c
  9596  002210  504B               	movf	___fladd@a+1,w,c
  9597  002212  2247               	addwfc	___fladd@b+1,f,c
  9598  002214  504C               	movf	___fladd@a+2,w,c
  9599  002216  2248               	addwfc	___fladd@b+2,f,c
  9600  002218  504D               	movf	___fladd@a+3,w,c
  9601  00221A  2249               	addwfc	___fladd@b+3,f,c
  9602  00221C  A049               	btfss	___fladd@b+3,0,c
  9603  00221E  D071               	goto	u10660
  9604  002220  A055               	btfss	___fladd@grs,0,c
  9605  002222  D005               	goto	l9235
  9606  002224  90D8               	bcf	status,0,c
  9607  002226  3055               	rrcf	___fladd@grs,w,c
  9608  002228  0901               	iorlw	1
  9609  00222A  6E55               	movwf	___fladd@grs,c
  9610  00222C  D002               	goto	l9237
  9611  00222E                     l9235:
  9612  00222E  90D8               	bcf	status,0,c
  9613  002230  3255               	rrcf	___fladd@grs,f,c
  9614  002232                     l9237:
  9615  002232  B046               	btfsc	___fladd@b,0,c
  9616  002234  8E55               	bsf	___fladd@grs,7,c
  9617  002236  3449               	rlcf	___fladd@b+3,w,c
  9618  002238  3249               	rrcf	___fladd@b+3,f,c
  9619  00223A  3248               	rrcf	___fladd@b+2,f,c
  9620  00223C  3247               	rrcf	___fladd@b+1,f,c
  9621  00223E  3246               	rrcf	___fladd@b,f,c
  9622  002240  2A54               	incf	___fladd@bexp,f,c
  9623  002242  D05F               	goto	u10660
  9624  002244                     l9245:
  9625  002244  504A               	movf	___fladd@a,w,c
  9626  002246  5C46               	subwf	___fladd@b,w,c
  9627  002248  504B               	movf	___fladd@a+1,w,c
  9628  00224A  5847               	subwfb	___fladd@b+1,w,c
  9629  00224C  504C               	movf	___fladd@a+2,w,c
  9630  00224E  5848               	subwfb	___fladd@b+2,w,c
  9631  002250  5049               	movf	___fladd@b+3,w,c
  9632  002252  0A80               	xorlw	128
  9633  002254  6E4E               	movwf	??___fladd& (0+255),c
  9634  002256  504D               	movf	___fladd@a+3,w,c
  9635  002258  0A80               	xorlw	128
  9636  00225A  584E               	subwfb	??___fladd& (0+255),w,c
  9637  00225C  B0D8               	btfsc	status,0,c
  9638  00225E  D025               	goto	l9255
  9639  002260  5046               	movf	___fladd@b,w,c
  9640  002262  5C4A               	subwf	___fladd@a,w,c
  9641  002264  6E4E               	movwf	??___fladd& (0+255),c
  9642  002266  5047               	movf	___fladd@b+1,w,c
  9643  002268  584B               	subwfb	___fladd@a+1,w,c
  9644  00226A  6E4F               	movwf	(??___fladd+1)& (0+255),c
  9645  00226C  5048               	movf	___fladd@b+2,w,c
  9646  00226E  584C               	subwfb	___fladd@a+2,w,c
  9647  002270  6E50               	movwf	(??___fladd+2)& (0+255),c
  9648  002272  5049               	movf	___fladd@b+3,w,c
  9649  002274  584D               	subwfb	___fladd@a+3,w,c
  9650  002276  6E51               	movwf	(??___fladd+3)& (0+255),c
  9651  002278  0EFF               	movlw	255
  9652  00227A  244E               	addwf	??___fladd,w,c
  9653  00227C  6E46               	movwf	___fladd@b,c
  9654  00227E  0EFF               	movlw	255
  9655  002280  204F               	addwfc	??___fladd+1,w,c
  9656  002282  6E47               	movwf	___fladd@b+1,c
  9657  002284  0EFF               	movlw	255
  9658  002286  2050               	addwfc	??___fladd+2,w,c
  9659  002288  6E48               	movwf	___fladd@b+2,c
  9660  00228A  0EFF               	movlw	255
  9661  00228C  2051               	addwfc	??___fladd+3,w,c
  9662  00228E  6E49               	movwf	___fladd@b+3,c
  9663  002290  0E80               	movlw	128
  9664  002292  1A52               	xorwf	___fladd@signs,f,c
  9665  002294  6C55               	negf	___fladd@grs,c
  9666  002296  5055               	movf	___fladd@grs,w,c
  9667  002298  A4D8               	btfss	status,2,c
  9668  00229A  D00F               	goto	l1374
  9669  00229C  0E01               	movlw	1
  9670  00229E  2646               	addwf	___fladd@b,f,c
  9671  0022A0  0E00               	movlw	0
  9672  0022A2  2247               	addwfc	___fladd@b+1,f,c
  9673  0022A4  2248               	addwfc	___fladd@b+2,f,c
  9674  0022A6  2249               	addwfc	___fladd@b+3,f,c
  9675  0022A8  D008               	goto	l1374
  9676  0022AA                     l9255:
  9677  0022AA  504A               	movf	___fladd@a,w,c
  9678  0022AC  5E46               	subwf	___fladd@b,f,c
  9679  0022AE  504B               	movf	___fladd@a+1,w,c
  9680  0022B0  5A47               	subwfb	___fladd@b+1,f,c
  9681  0022B2  504C               	movf	___fladd@a+2,w,c
  9682  0022B4  5A48               	subwfb	___fladd@b+2,f,c
  9683  0022B6  504D               	movf	___fladd@a+3,w,c
  9684  0022B8  5A49               	subwfb	___fladd@b+3,f,c
  9685  0022BA                     l1374:
  9686  0022BA  5046               	movf	___fladd@b,w,c
  9687  0022BC  1047               	iorwf	___fladd@b+1,w,c
  9688  0022BE  1048               	iorwf	___fladd@b+2,w,c
  9689  0022C0  1049               	iorwf	___fladd@b+3,w,c
  9690  0022C2  A4D8               	btfss	status,2,c
  9691  0022C4  D01C               	goto	l9279
  9692  0022C6  5055               	movf	___fladd@grs,w,c
  9693  0022C8  A4D8               	btfss	status,2,c
  9694  0022CA  D019               	goto	l9279
  9695  0022CC  0E00               	movlw	0
  9696  0022CE  6E46               	movwf	?___fladd,c
  9697  0022D0  0E00               	movlw	0
  9698  0022D2  6E47               	movwf	?___fladd+1,c
  9699  0022D4  0E00               	movlw	0
  9700  0022D6  6E48               	movwf	?___fladd+2,c
  9701  0022D8  0E00               	movlw	0
  9702  0022DA  6E49               	movwf	?___fladd+3,c
  9703  0022DC  0012               	return	
  9704  0022DE                     l9263:
  9705  0022DE  90D8               	bcf	status,0,c
  9706  0022E0  3646               	rlcf	___fladd@b,f,c
  9707  0022E2  3647               	rlcf	___fladd@b+1,f,c
  9708  0022E4  3648               	rlcf	___fladd@b+2,f,c
  9709  0022E6  3649               	rlcf	___fladd@b+3,f,c
  9710  0022E8  BE55               	btfsc	___fladd@grs,7,c
  9711  0022EA  8046               	bsf	___fladd@b,0,c
  9712  0022EC  A055               	btfss	___fladd@grs,0,c
  9713  0022EE  D002               	goto	l9273
  9714  0022F0  80D8               	bsf	status,0,c
  9715  0022F2  D001               	goto	L20
  9716  0022F4                     l9273:
  9717  0022F4  90D8               	bcf	status,0,c
  9718  0022F6                     L20:
  9719  0022F6  3655               	rlcf	___fladd@grs,f,c
  9720  0022F8  5054               	movf	___fladd@bexp,w,c
  9721  0022FA  A4D8               	btfss	status,2,c
  9722  0022FC  0654               	decf	___fladd@bexp,f,c
  9723  0022FE                     l9279:
  9724  0022FE  AE48               	btfss	___fladd@b+2,7,c
  9725  002300  D7EE               	goto	l9263
  9726  002302                     u10660:
  9727  002302  0E00               	movlw	0
  9728  002304  6E53               	movwf	___fladd@aexp,c
  9729  002306  AE55               	btfss	___fladd@grs,7,c
  9730  002308  D00B               	goto	l1383
  9731  00230A  C055  F04E         	movff	___fladd@grs,??___fladd
  9732  00230E  0E7F               	movlw	127
  9733  002310  164E               	andwf	??___fladd,f,c
  9734  002312  B4D8               	btfsc	status,2,c
  9735  002314  D003               	goto	l1384
  9736  002316                     u10680:
  9737  002316  0E01               	movlw	1
  9738  002318  6E53               	movwf	___fladd@aexp,c
  9739  00231A  D002               	goto	l1383
  9740  00231C                     l1384:
  9741  00231C  B046               	btfsc	___fladd@b,0,c
  9742  00231E  D7FB               	goto	u10680
  9743  002320                     l1383:
  9744  002320  5053               	movf	___fladd@aexp,w,c
  9745  002322  B4D8               	btfsc	status,2,c
  9746  002324  D020               	goto	l9299
  9747  002326  0E01               	movlw	1
  9748  002328  2646               	addwf	___fladd@b,f,c
  9749  00232A  0E00               	movlw	0
  9750  00232C  2247               	addwfc	___fladd@b+1,f,c
  9751  00232E  2248               	addwfc	___fladd@b+2,f,c
  9752  002330  2249               	addwfc	___fladd@b+3,f,c
  9753  002332  A049               	btfss	___fladd@b+3,0,c
  9754  002334  D018               	goto	l9299
  9755  002336  C046  F04E         	movff	___fladd@b,??___fladd
  9756  00233A  C047  F04F         	movff	___fladd@b+1,??___fladd+1
  9757  00233E  C048  F050         	movff	___fladd@b+2,??___fladd+2
  9758  002342  C049  F051         	movff	___fladd@b+3,??___fladd+3
  9759  002346  3451               	rlcf	??___fladd+3,w,c
  9760  002348  3251               	rrcf	??___fladd+3,f,c
  9761  00234A  3250               	rrcf	??___fladd+2,f,c
  9762  00234C  324F               	rrcf	??___fladd+1,f,c
  9763  00234E  324E               	rrcf	??___fladd,f,c
  9764  002350  C04E  F046         	movff	??___fladd,___fladd@b
  9765  002354  C04F  F047         	movff	??___fladd+1,___fladd@b+1
  9766  002358  C050  F048         	movff	??___fladd+2,___fladd@b+2
  9767  00235C  C051  F049         	movff	??___fladd+3,___fladd@b+3
  9768  002360  2854               	incf	___fladd@bexp,w,c
  9769  002362  A4D8               	btfss	status,2,c
  9770  002364  2A54               	incf	___fladd@bexp,f,c
  9771  002366                     l9299:
  9772  002366  2854               	incf	___fladd@bexp,w,c
  9773  002368  B4D8               	btfsc	status,2,c
  9774  00236A  D003               	goto	u10740
  9775  00236C  5054               	movf	___fladd@bexp,w,c
  9776  00236E  A4D8               	btfss	status,2,c
  9777  002370  D00D               	goto	l9307
  9778  002372                     u10740:
  9779  002372  0E00               	movlw	0
  9780  002374  6E46               	movwf	___fladd@b,c
  9781  002376  0E00               	movlw	0
  9782  002378  6E47               	movwf	___fladd@b+1,c
  9783  00237A  0E00               	movlw	0
  9784  00237C  6E48               	movwf	___fladd@b+2,c
  9785  00237E  0E00               	movlw	0
  9786  002380  6E49               	movwf	___fladd@b+3,c
  9787  002382  5054               	movf	___fladd@bexp,w,c
  9788  002384  A4D8               	btfss	status,2,c
  9789  002386  D002               	goto	l9307
  9790  002388  0E00               	movlw	0
  9791  00238A  6E52               	movwf	___fladd@signs,c
  9792  00238C                     l9307:
  9793  00238C  A054               	btfss	___fladd@bexp,0,c
  9794  00238E  D002               	goto	l9311
  9795  002390  8E48               	bsf	___fladd@b+2,7,c
  9796  002392  D001               	goto	l9313
  9797  002394                     l9311:
  9798  002394  9E48               	bcf	___fladd@b+2,7,c
  9799  002396                     l9313:
  9800  002396  90D8               	bcf	status,0,c
  9801  002398  3054               	rrcf	___fladd@bexp,w,c
  9802  00239A  6E49               	movwf	___fladd@b+3,c
  9803  00239C  BE52               	btfsc	___fladd@signs,7,c
  9804  00239E  8E49               	bsf	___fladd@b+3,7,c
  9805  0023A0  C046  F046         	movff	___fladd@b,?___fladd
  9806  0023A4  C047  F047         	movff	___fladd@b+1,?___fladd+1
  9807  0023A8  C048  F048         	movff	___fladd@b+2,?___fladd+2
  9808  0023AC  C049  F049         	movff	___fladd@b+3,?___fladd+3
  9809  0023B0  0012               	return		;funcret
  9810  0023B2                     __end_of___fladd:
  9811                           	opt callstack 0
  9812                           
  9813 ;; *************** function _init_motor_PWM *****************
  9814 ;; Defined at:
  9815 ;;		line 430 in file "main.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;Total ram usage:        0 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    2
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_doOperation
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text35
  9844  0048B2                     __ptext35:
  9845                           	opt callstack 0
  9846  0048B2                     _init_motor_PWM:
  9847                           	opt callstack 27
  9848                           
  9849                           ;main.c: 438:     TRISCbits.TRISC2 = 1;
  9850                           
  9851                           ;incstack = 0
  9852  0048B2  8494               	bsf	3988,2,c	;volatile
  9853                           
  9854                           ;main.c: 439:     TRISCbits.TRISC1 = 1;
  9855  0048B4  8294               	bsf	3988,1,c	;volatile
  9856                           
  9857                           ;main.c: 442:     const unsigned long FREQUENCY = 1000ul;;main.c: 443:     const unsigne
      +                          d char TIMER2_PRESCALER = 16;;main.c: 444:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2
      +                          _PRESCALER)) - 1;
  9858  0048B6  0E9B               	movlw	155
  9859  0048B8  6ECB               	movwf	4043,c	;volatile
  9860                           
  9861                           ;main.c: 447:     P1M1 = 0;
  9862  0048BA  9EBD               	bcf	4029,7,c	;volatile
  9863                           
  9864                           ;main.c: 448:     P1M0 = 0;
  9865  0048BC  9CBD               	bcf	4029,6,c	;volatile
  9866                           
  9867                           ;main.c: 449:     CCP1M3 = 1;
  9868  0048BE  86BD               	bsf	4029,3,c	;volatile
  9869                           
  9870                           ;main.c: 450:     CCP1M2 = 1;
  9871  0048C0  84BD               	bsf	4029,2,c	;volatile
  9872                           
  9873                           ;main.c: 451:     CCP1M1 = 0;
  9874  0048C2  92BD               	bcf	4029,1,c	;volatile
  9875                           
  9876                           ;main.c: 452:     CCP1M0 = 0;
  9877  0048C4  90BD               	bcf	4029,0,c	;volatile
  9878                           
  9879                           ;main.c: 454:     CCP2M3 = 1;
  9880  0048C6  86BA               	bsf	4026,3,c	;volatile
  9881                           
  9882                           ;main.c: 455:     CCP2M2 = 1;
  9883  0048C8  84BA               	bsf	4026,2,c	;volatile
  9884                           
  9885                           ;main.c: 456:     CCP2M1 = 0;
  9886  0048CA  92BA               	bcf	4026,1,c	;volatile
  9887                           
  9888                           ;main.c: 457:     CCP2M0 = 0;
  9889  0048CC  90BA               	bcf	4026,0,c	;volatile
  9890                           
  9891                           ;main.c: 460:     T2CKPS0 = 1;
  9892  0048CE  80CA               	bsf	4042,0,c	;volatile
  9893                           
  9894                           ;main.c: 461:     T2CKPS1 = 1;
  9895  0048D0  82CA               	bsf	4042,1,c	;volatile
  9896                           
  9897                           ;main.c: 464:     TMR2ON = 1;
  9898  0048D2  84CA               	bsf	4042,2,c	;volatile
  9899                           
  9900                           ;main.c: 467:     TRISCbits.TRISC2 = 0;
  9901  0048D4  9494               	bcf	3988,2,c	;volatile
  9902                           
  9903                           ;main.c: 468:     TRISCbits.TRISC1 = 0;
  9904  0048D6  9294               	bcf	3988,1,c	;volatile
  9905  0048D8  0012               	return		;funcret
  9906  0048DA                     __end_of_init_motor_PWM:
  9907                           	opt callstack 0
  9908                           
  9909 ;; *************** function ___lldiv *****************
  9910 ;; Defined at:
  9911 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  dividend        4    5[COMRAM] unsigned long 
  9914 ;;  divisor         4    9[COMRAM] unsigned long 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  quotient        4   13[COMRAM] unsigned long 
  9917 ;;  counter         1   17[COMRAM] unsigned char 
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  4    5[COMRAM] unsigned long 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9927 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;Total ram usage:       13 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    2
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_doOperation
  9938 ;;		_I2C_Master_Init
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text36
  9943  004124                     __ptext36:
  9944                           	opt callstack 0
  9945  004124                     ___lldiv:
  9946                           	opt callstack 26
  9947                           
  9948                           ;incstack = 0
  9949  004124  0E00               	movlw	0
  9950  004126  6E0E               	movwf	___lldiv@quotient,c
  9951  004128  0E00               	movlw	0
  9952  00412A  6E0F               	movwf	___lldiv@quotient+1,c
  9953  00412C  0E00               	movlw	0
  9954  00412E  6E10               	movwf	___lldiv@quotient+2,c
  9955  004130  0E00               	movlw	0
  9956  004132  6E11               	movwf	___lldiv@quotient+3,c
  9957  004134  500A               	movf	___lldiv@divisor,w,c
  9958  004136  100B               	iorwf	___lldiv@divisor+1,w,c
  9959  004138  100C               	iorwf	___lldiv@divisor+2,w,c
  9960  00413A  100D               	iorwf	___lldiv@divisor+3,w,c
  9961  00413C  B4D8               	btfsc	status,2,c
  9962  00413E  D02A               	goto	l856
  9963  004140  0E01               	movlw	1
  9964  004142  6E12               	movwf	___lldiv@counter,c
  9965  004144  D006               	goto	l9525
  9966  004146                     l9523:
  9967  004146  90D8               	bcf	status,0,c
  9968  004148  360A               	rlcf	___lldiv@divisor,f,c
  9969  00414A  360B               	rlcf	___lldiv@divisor+1,f,c
  9970  00414C  360C               	rlcf	___lldiv@divisor+2,f,c
  9971  00414E  360D               	rlcf	___lldiv@divisor+3,f,c
  9972  004150  2A12               	incf	___lldiv@counter,f,c
  9973  004152                     l9525:
  9974  004152  AE0D               	btfss	___lldiv@divisor+3,7,c
  9975  004154  D7F8               	goto	l9523
  9976  004156                     u11040:
  9977  004156  90D8               	bcf	status,0,c
  9978  004158  360E               	rlcf	___lldiv@quotient,f,c
  9979  00415A  360F               	rlcf	___lldiv@quotient+1,f,c
  9980  00415C  3610               	rlcf	___lldiv@quotient+2,f,c
  9981  00415E  3611               	rlcf	___lldiv@quotient+3,f,c
  9982  004160  500A               	movf	___lldiv@divisor,w,c
  9983  004162  5C06               	subwf	___lldiv@dividend,w,c
  9984  004164  500B               	movf	___lldiv@divisor+1,w,c
  9985  004166  5807               	subwfb	___lldiv@dividend+1,w,c
  9986  004168  500C               	movf	___lldiv@divisor+2,w,c
  9987  00416A  5808               	subwfb	___lldiv@dividend+2,w,c
  9988  00416C  500D               	movf	___lldiv@divisor+3,w,c
  9989  00416E  5809               	subwfb	___lldiv@dividend+3,w,c
  9990  004170  A0D8               	btfss	status,0,c
  9991  004172  D009               	goto	l9535
  9992  004174  500A               	movf	___lldiv@divisor,w,c
  9993  004176  5E06               	subwf	___lldiv@dividend,f,c
  9994  004178  500B               	movf	___lldiv@divisor+1,w,c
  9995  00417A  5A07               	subwfb	___lldiv@dividend+1,f,c
  9996  00417C  500C               	movf	___lldiv@divisor+2,w,c
  9997  00417E  5A08               	subwfb	___lldiv@dividend+2,f,c
  9998  004180  500D               	movf	___lldiv@divisor+3,w,c
  9999  004182  5A09               	subwfb	___lldiv@dividend+3,f,c
 10000  004184  800E               	bsf	___lldiv@quotient,0,c
 10001  004186                     l9535:
 10002  004186  90D8               	bcf	status,0,c
 10003  004188  320D               	rrcf	___lldiv@divisor+3,f,c
 10004  00418A  320C               	rrcf	___lldiv@divisor+2,f,c
 10005  00418C  320B               	rrcf	___lldiv@divisor+1,f,c
 10006  00418E  320A               	rrcf	___lldiv@divisor,f,c
 10007  004190  2E12               	decfsz	___lldiv@counter,f,c
 10008  004192  D7E1               	goto	u11040
 10009  004194                     l856:
 10010  004194  C00E  F006         	movff	___lldiv@quotient,?___lldiv
 10011  004198  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
 10012  00419C  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
 10013  0041A0  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
 10014  0041A4  0012               	return		;funcret
 10015  0041A6                     __end_of___lldiv:
 10016                           	opt callstack 0
 10017                           
 10018 ;; *************** function ___awmod *****************
 10019 ;; Defined at:
 10020 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  dividend        2    5[COMRAM] int 
 10023 ;;  divisor         2    7[COMRAM] int 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  sign            1   10[COMRAM] unsigned char 
 10026 ;;  counter         1    9[COMRAM] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  2    5[COMRAM] int 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;Total ram usage:        6 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    2
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_saveLogs
 10047 ;;		_readLogs
 10048 ;;		_doOperation
 10049 ;;		_saveLogsOld
 10050 ;;		_readLogsOld
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text37
 10055  0041A6                     __ptext37:
 10056                           	opt callstack 0
 10057  0041A6                     ___awmod:
 10058                           	opt callstack 26
 10059                           
 10060                           ;incstack = 0
 10061  0041A6  0E00               	movlw	0
 10062  0041A8  6E0B               	movwf	___awmod@sign,c
 10063  0041AA  AE07               	btfss	___awmod@dividend+1,7,c
 10064  0041AC  D006               	goto	l9727
 10065  0041AE  6C06               	negf	___awmod@dividend,c
 10066  0041B0  1E07               	comf	___awmod@dividend+1,f,c
 10067  0041B2  B0D8               	btfsc	status,0,c
 10068  0041B4  2A07               	incf	___awmod@dividend+1,f,c
 10069  0041B6  0E01               	movlw	1
 10070  0041B8  6E0B               	movwf	___awmod@sign,c
 10071  0041BA                     l9727:
 10072  0041BA  AE09               	btfss	___awmod@divisor+1,7,c
 10073  0041BC  D004               	goto	l9731
 10074  0041BE  6C08               	negf	___awmod@divisor,c
 10075  0041C0  1E09               	comf	___awmod@divisor+1,f,c
 10076  0041C2  B0D8               	btfsc	status,0,c
 10077  0041C4  2A09               	incf	___awmod@divisor+1,f,c
 10078  0041C6                     l9731:
 10079  0041C6  5008               	movf	___awmod@divisor,w,c
 10080  0041C8  1009               	iorwf	___awmod@divisor+1,w,c
 10081  0041CA  B4D8               	btfsc	status,2,c
 10082  0041CC  D018               	goto	l9747
 10083  0041CE  0E01               	movlw	1
 10084  0041D0  6E0A               	movwf	___awmod@counter,c
 10085  0041D2  D004               	goto	l9737
 10086  0041D4                     l9735:
 10087  0041D4  90D8               	bcf	status,0,c
 10088  0041D6  3608               	rlcf	___awmod@divisor,f,c
 10089  0041D8  3609               	rlcf	___awmod@divisor+1,f,c
 10090  0041DA  2A0A               	incf	___awmod@counter,f,c
 10091  0041DC                     l9737:
 10092  0041DC  AE09               	btfss	___awmod@divisor+1,7,c
 10093  0041DE  D7FA               	goto	l9735
 10094  0041E0                     u11250:
 10095  0041E0  5008               	movf	___awmod@divisor,w,c
 10096  0041E2  5C06               	subwf	___awmod@dividend,w,c
 10097  0041E4  5009               	movf	___awmod@divisor+1,w,c
 10098  0041E6  5807               	subwfb	___awmod@dividend+1,w,c
 10099  0041E8  A0D8               	btfss	status,0,c
 10100  0041EA  D004               	goto	l9743
 10101  0041EC  5008               	movf	___awmod@divisor,w,c
 10102  0041EE  5E06               	subwf	___awmod@dividend,f,c
 10103  0041F0  5009               	movf	___awmod@divisor+1,w,c
 10104  0041F2  5A07               	subwfb	___awmod@dividend+1,f,c
 10105  0041F4                     l9743:
 10106  0041F4  90D8               	bcf	status,0,c
 10107  0041F6  3209               	rrcf	___awmod@divisor+1,f,c
 10108  0041F8  3208               	rrcf	___awmod@divisor,f,c
 10109  0041FA  2E0A               	decfsz	___awmod@counter,f,c
 10110  0041FC  D7F1               	goto	u11250
 10111  0041FE                     l9747:
 10112  0041FE  500B               	movf	___awmod@sign,w,c
 10113  004200  B4D8               	btfsc	status,2,c
 10114  004202  D004               	goto	l9751
 10115  004204  6C06               	negf	___awmod@dividend,c
 10116  004206  1E07               	comf	___awmod@dividend+1,f,c
 10117  004208  B0D8               	btfsc	status,0,c
 10118  00420A  2A07               	incf	___awmod@dividend+1,f,c
 10119  00420C                     l9751:
 10120  00420C  C006  F006         	movff	___awmod@dividend,?___awmod
 10121  004210  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 10122  004214  0012               	return		;funcret
 10123  004216                     __end_of___awmod:
 10124                           	opt callstack 0
 10125                           
 10126 ;; *************** function _TIMER_INIT *****************
 10127 ;; Defined at:
 10128 ;;		line 223 in file "main.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;		None
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      void 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;Total ram usage:        0 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    2
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_doOperation
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text38
 10157  0049D4                     __ptext38:
 10158                           	opt callstack 0
 10159  0049D4                     _TIMER_INIT:
 10160                           	opt callstack 27
 10161                           
 10162                           ;main.c: 224:     T0CONbits.TMR0ON = 0;
 10163                           
 10164                           ;incstack = 0
 10165  0049D4  9ED5               	bcf	4053,7,c	;volatile
 10166                           
 10167                           ;main.c: 225:     T0CONbits.T08BIT = 0;
 10168  0049D6  9CD5               	bcf	4053,6,c	;volatile
 10169                           
 10170                           ;main.c: 226:     T0CONbits.T0CS = 0;
 10171  0049D8  9AD5               	bcf	4053,5,c	;volatile
 10172                           
 10173                           ;main.c: 227:     T0CONbits.PSA = 0;
 10174  0049DA  96D5               	bcf	4053,3,c	;volatile
 10175                           
 10176                           ;main.c: 228:     T0CONbits.T0PS = 0b000;
 10177  0049DC  0EF8               	movlw	-8
 10178  0049DE  16D5               	andwf	4053,f,c	;volatile
 10179                           
 10180                           ;main.c: 229:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 10181  0049E0  0EFB               	movlw	251
 10182  0049E2  6ED7               	movwf	4055,c	;volatile
 10183                           
 10184                           ;main.c: 230:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 10185  0049E4  0E1E               	movlw	30
 10186  0049E6  6ED6               	movwf	4054,c	;volatile
 10187                           
 10188                           ;main.c: 231:     T0CONbits.TMR0ON = 1;
 10189  0049E8  8ED5               	bsf	4053,7,c	;volatile
 10190                           
 10191                           ;main.c: 232:     INTCONbits.TMR0IE = 1;
 10192  0049EA  8AF2               	bsf	4082,5,c	;volatile
 10193                           
 10194                           ;main.c: 234:     INTCONbits.GIE = 1;
 10195  0049EC  8EF2               	bsf	4082,7,c	;volatile
 10196                           
 10197                           ;main.c: 235:     INTCONbits.PEIE = 1;
 10198  0049EE  8CF2               	bsf	4082,6,c	;volatile
 10199  0049F0  0012               	return		;funcret
 10200  0049F2                     __end_of_TIMER_INIT:
 10201                           	opt callstack 0
 10202                           
 10203 ;; *************** function _doDisplayLog *****************
 10204 ;; Defined at:
 10205 ;;		line 46 in file "main.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  logNumber       2   39[BANK0 ] int 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  keyValue        1  106[COMRAM] unsigned char 
 10210 ;;  keypress        1  104[COMRAM] unsigned char 
 10211 ;;  currentPole     2  109[COMRAM] int 
 10212 ;;  currentDispl    1  105[COMRAM] enum E3251
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  1    wreg      void 
 10215 ;; Registers used:
 10216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10226 ;;Total ram usage:       12 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; Hardware stack levels required when called:   13
 10229 ;; This function calls:
 10230 ;;		___wmul
 10231 ;;		_lcdInst
 10232 ;;		_printf
 10233 ;; This function is called by:
 10234 ;;		_main
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           	psect	text39
 10239  001600                     __ptext39:
 10240                           	opt callstack 0
 10241  001600                     _doDisplayLog:
 10242                           	opt callstack 17
 10243                           
 10244                           ;main.c: 47:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
 10245                           
 10246                           ;incstack = 0
 10247  001600  0E80               	movlw	128
 10248  001602  EC3F  F025         	call	_lcdInst
 10249  001606  0E07               	movlw	7
 10250  001608  6E66               	movwf	??_doDisplayLog& (0+255),c
 10251  00160A  0E7D               	movlw	125
 10252  00160C                     u12787:
 10253  00160C  2EE8               	decfsz	wreg,f,c
 10254  00160E  D7FE               	bra	u12787
 10255  001610  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10256  001612  D7FC               	bra	u12787
 10257  001614  F000               	nop	
 10258                           
 10259                           ;main.c: 52:     int currentPole = 1;
 10260  001616  0E00               	movlw	0
 10261  001618  6E6F               	movwf	doDisplayLog@currentPole+1,c
 10262  00161A  0E01               	movlw	1
 10263  00161C  6E6E               	movwf	doDisplayLog@currentPole,c
 10264                           
 10265                           ;main.c: 54:     enum displayStates currentDisplayState = opTime;
 10266  00161E  0E00               	movlw	0
 10267  001620  6E6A               	movwf	doDisplayLog@currentDisplayState,c
 10268  001622  D15C               	goto	l10109
 10269  001624                     l10059:
 10270                           
 10271                           ;main.c: 59:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
 10272  001624  0E80               	movlw	128
 10273  001626  EC3F  F025         	call	_lcdInst
 10274  00162A  0E07               	movlw	7
 10275  00162C  6E66               	movwf	??_doDisplayLog& (0+255),c
 10276  00162E  0E7D               	movlw	125
 10277  001630                     u12797:
 10278  001630  2EE8               	decfsz	wreg,f,c
 10279  001632  D7FE               	bra	u12797
 10280  001634  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10281  001636  D7FC               	bra	u12797
 10282  001638  F000               	nop	
 10283                           
 10284                           ;main.c: 60:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
 10285  00163A  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10286  00163E  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10287  001642  0E00               	movlw	0
 10288  001644  6E09               	movwf	___wmul@multiplicand+1,c
 10289  001646  0E60               	movlw	96
 10290  001648  6E08               	movwf	___wmul@multiplicand,c
 10291  00164A  EC81  F024         	call	___wmul	;wreg free
 10292  00164E  0EA7               	movlw	low _logs
 10293  001650  2406               	addwf	?___wmul,w,c
 10294  001652  6ED9               	movwf	fsr2l,c
 10295  001654  0E01               	movlw	high _logs
 10296  001656  2007               	addwfc	?___wmul+1,w,c
 10297  001658  6EDA               	movwf	fsr2h,c
 10298  00165A  CFDE F06C          	movff	postinc2,_doDisplayLog$2422
 10299  00165E  CFDD F06D          	movff	postdec2,_doDisplayLog$2422+1
 10300                           
 10301                           ;main.c: 60:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
 10302  001662  0ECD               	movlw	low STR_1
 10303  001664  0100               	movlb	0	; () banked
 10304  001666  6F9D               	movwf	printf@fmt& (0+255),b
 10305  001668  0EFF               	movlw	high STR_1
 10306  00166A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10307  00166C  0E71               	movlw	low STR_2
 10308  00166E  6F9F               	movwf	(?_printf+2)& (0+255),b
 10309  001670  0EFF               	movlw	high STR_2
 10310  001672  6FA0               	movwf	(?_printf+3)& (0+255),b
 10311  001674  C06C  F0A1         	movff	_doDisplayLog$2422,?_printf+4
 10312  001678  C06D  F0A2         	movff	_doDisplayLog$2422+1,?_printf+5
 10313  00167C  0ED2               	movlw	low (STR_1+5)
 10314  00167E  6FA3               	movwf	(?_printf+6)& (0+255),b
 10315  001680  0EFF               	movlw	high (STR_1+5)
 10316  001682  6FA4               	movwf	(?_printf+7)& (0+255),b
 10317  001684  EC6D  F024         	call	_printf	;wreg free
 10318  001688  0EC0               	movlw	192
 10319  00168A  EC3F  F025         	call	_lcdInst
 10320                           
 10321                           ;main.c: 62:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
 10322  00168E  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10323  001692  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10324  001696  0E00               	movlw	0
 10325  001698  6E09               	movwf	___wmul@multiplicand+1,c
 10326  00169A  0E60               	movlw	96
 10327  00169C  6E08               	movwf	___wmul@multiplicand,c
 10328  00169E  EC81  F024         	call	___wmul	;wreg free
 10329  0016A2  0EA9               	movlw	low (_logs+2)
 10330  0016A4  2406               	addwf	?___wmul,w,c
 10331  0016A6  6ED9               	movwf	fsr2l,c
 10332  0016A8  0E01               	movlw	high (_logs+2)
 10333  0016AA  2007               	addwfc	?___wmul+1,w,c
 10334  0016AC  6EDA               	movwf	fsr2h,c
 10335  0016AE  CFDE F06C          	movff	postinc2,_doDisplayLog$2422
 10336  0016B2  CFDD F06D          	movff	postdec2,_doDisplayLog$2422+1
 10337                           
 10338                           ;main.c: 62:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
 10339  0016B6  0EC1               	movlw	low (STR_10+4)
 10340  0016B8  0100               	movlb	0	; () banked
 10341  0016BA  6F9D               	movwf	printf@fmt& (0+255),b
 10342  0016BC  0EFF               	movlw	high (STR_10+4)
 10343  0016BE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10344  0016C0  0EAC               	movlw	low STR_5
 10345  0016C2  6F9F               	movwf	(?_printf+2)& (0+255),b
 10346  0016C4  0EFE               	movlw	high STR_5
 10347  0016C6  6FA0               	movwf	(?_printf+3)& (0+255),b
 10348  0016C8  C06C  F0A1         	movff	_doDisplayLog$2422,?_printf+4
 10349  0016CC  C06D  F0A2         	movff	_doDisplayLog$2422+1,?_printf+5
 10350  0016D0  EC6D  F024         	call	_printf	;wreg free
 10351  0016D4  0E90               	movlw	144
 10352  0016D6  EC3F  F025         	call	_lcdInst
 10353                           
 10354                           ;main.c: 64:                 printf("%s","(1) POLE INFO");
 10355  0016DA  0ED1               	movlw	low (STR_1+4)
 10356  0016DC  0100               	movlb	0	; () banked
 10357  0016DE  6F9D               	movwf	printf@fmt& (0+255),b
 10358  0016E0  0EFF               	movlw	high (STR_1+4)
 10359  0016E2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10360  0016E4  0EE7               	movlw	low STR_7
 10361  0016E6  6F9F               	movwf	(?_printf+2)& (0+255),b
 10362  0016E8  0EFE               	movlw	high STR_7
 10363  0016EA  6FA0               	movwf	(?_printf+3)& (0+255),b
 10364  0016EC  EC6D  F024         	call	_printf	;wreg free
 10365  0016F0  0ED0               	movlw	208
 10366  0016F2  EC3F  F025         	call	_lcdInst
 10367                           
 10368                           ;main.c: 66:                 printf("%s","(2) SAVE & EXIT");
 10369  0016F6  0ED1               	movlw	low (STR_1+4)
 10370  0016F8  0100               	movlb	0	; () banked
 10371  0016FA  6F9D               	movwf	printf@fmt& (0+255),b
 10372  0016FC  0EFF               	movlw	high (STR_1+4)
 10373  0016FE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10374  001700  0E7C               	movlw	low STR_9
 10375  001702  6F9F               	movwf	(?_printf+2)& (0+255),b
 10376  001704  0EFE               	movlw	high STR_9
 10377  001706  6FA0               	movwf	(?_printf+3)& (0+255),b
 10378  001708  EC6D  F024         	call	_printf	;wreg free
 10379                           
 10380                           ;main.c: 67:                 break;
 10381  00170C  D0F5               	goto	l10111
 10382  00170E                     l10081:
 10383                           
 10384                           ;main.c: 69:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
 10385  00170E  0E80               	movlw	128
 10386  001710  EC3F  F025         	call	_lcdInst
 10387  001714  0E07               	movlw	7
 10388  001716  6E66               	movwf	??_doDisplayLog& (0+255),c
 10389  001718  0E7D               	movlw	125
 10390  00171A                     u12807:
 10391  00171A  2EE8               	decfsz	wreg,f,c
 10392  00171C  D7FE               	bra	u12807
 10393  00171E  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10394  001720  D7FC               	bra	u12807
 10395  001722  F000               	nop	
 10396                           
 10397                           ;main.c: 70:                 printf("%s%d%s%d", "POLE ", currentPole,"/", 1);
 10398  001724  0EBD               	movlw	low STR_10
 10399  001726  0100               	movlb	0	; () banked
 10400  001728  6F9D               	movwf	printf@fmt& (0+255),b
 10401  00172A  0EFF               	movlw	high STR_10
 10402  00172C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10403  00172E  0EDA               	movlw	low STR_11
 10404  001730  6F9F               	movwf	(?_printf+2)& (0+255),b
 10405  001732  0EFF               	movlw	high STR_11
 10406  001734  6FA0               	movwf	(?_printf+3)& (0+255),b
 10407  001736  C06E  F0A1         	movff	doDisplayLog@currentPole,?_printf+4
 10408  00173A  C06F  F0A2         	movff	doDisplayLog@currentPole+1,?_printf+5
 10409  00173E  0EFC               	movlw	low STR_12
 10410  001740  6FA3               	movwf	(?_printf+6)& (0+255),b
 10411  001742  0EFF               	movlw	high STR_12
 10412  001744  6FA4               	movwf	(?_printf+7)& (0+255),b
 10413  001746  0E00               	movlw	0
 10414  001748  6FA6               	movwf	(?_printf+9)& (0+255),b
 10415  00174A  0E01               	movlw	1
 10416  00174C  6FA5               	movwf	(?_printf+8)& (0+255),b
 10417  00174E  EC6D  F024         	call	_printf	;wreg free
 10418  001752  0EC0               	movlw	192
 10419  001754  EC3F  F025         	call	_lcdInst
 10420                           
 10421                           ;main.c: 72:                 printf("%s%d","DEPL: ", logs[logNumber][3+(currentPole-1)*3
      +                          ]);
 10422  001758  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10423  00175C  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10424  001760  0E00               	movlw	0
 10425  001762  6E09               	movwf	___wmul@multiplicand+1,c
 10426  001764  0E60               	movlw	96
 10427  001766  6E08               	movwf	___wmul@multiplicand,c
 10428  001768  EC81  F024         	call	___wmul	;wreg free
 10429  00176C  0EA7               	movlw	low _logs
 10430  00176E  6E66               	movwf	??_doDisplayLog& (0+255),c
 10431  001770  0E01               	movlw	high _logs
 10432  001772  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
 10433  001774  5006               	movf	?___wmul,w,c
 10434  001776  2666               	addwf	??_doDisplayLog,f,c
 10435  001778  5007               	movf	?___wmul+1,w,c
 10436  00177A  2267               	addwfc	??_doDisplayLog+1,f,c
 10437  00177C  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
 10438  001780  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
 10439  001784  0E00               	movlw	0
 10440  001786  6E09               	movwf	___wmul@multiplicand+1,c
 10441  001788  0E03               	movlw	3
 10442  00178A  6E08               	movwf	___wmul@multiplicand,c
 10443  00178C  EC81  F024         	call	___wmul	;wreg free
 10444  001790  90D8               	bcf	status,0,c
 10445  001792  3606               	rlcf	?___wmul,f,c
 10446  001794  3607               	rlcf	?___wmul+1,f,c
 10447  001796  5006               	movf	?___wmul,w,c
 10448  001798  2466               	addwf	??_doDisplayLog,w,c
 10449  00179A  6ED9               	movwf	fsr2l,c
 10450  00179C  5007               	movf	?___wmul+1,w,c
 10451  00179E  2067               	addwfc	??_doDisplayLog+1,w,c
 10452  0017A0  6EDA               	movwf	fsr2h,c
 10453  0017A2  CFDE F06C          	movff	postinc2,_doDisplayLog$2422
 10454  0017A6  CFDD F06D          	movff	postdec2,_doDisplayLog$2422+1
 10455                           
 10456                           ;main.c: 72:                 printf("%s%d","DEPL: ", logs[logNumber][3+(currentPole-1)*3
      +                          ]);
 10457  0017AA  0EC1               	movlw	low (STR_10+4)
 10458  0017AC  0100               	movlb	0	; () banked
 10459  0017AE  6F9D               	movwf	printf@fmt& (0+255),b
 10460  0017B0  0EFF               	movlw	high (STR_10+4)
 10461  0017B2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10462  0017B4  0EC6               	movlw	low STR_14
 10463  0017B6  6F9F               	movwf	(?_printf+2)& (0+255),b
 10464  0017B8  0EFF               	movlw	high STR_14
 10465  0017BA  6FA0               	movwf	(?_printf+3)& (0+255),b
 10466  0017BC  C06C  F0A1         	movff	_doDisplayLog$2422,?_printf+4
 10467  0017C0  C06D  F0A2         	movff	_doDisplayLog$2422+1,?_printf+5
 10468  0017C4  EC6D  F024         	call	_printf	;wreg free
 10469                           
 10470                           ;main.c: 73:                 printf("%s%d"," CM: ", logs[logNumber][5+(currentPole-1)*3]
      +                          );
 10471  0017C8  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10472  0017CC  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10473  0017D0  0E00               	movlw	0
 10474  0017D2  6E09               	movwf	___wmul@multiplicand+1,c
 10475  0017D4  0E60               	movlw	96
 10476  0017D6  6E08               	movwf	___wmul@multiplicand,c
 10477  0017D8  EC81  F024         	call	___wmul	;wreg free
 10478  0017DC  0EA7               	movlw	low _logs
 10479  0017DE  6E66               	movwf	??_doDisplayLog& (0+255),c
 10480  0017E0  0E01               	movlw	high _logs
 10481  0017E2  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
 10482  0017E4  0E04               	movlw	4
 10483  0017E6  2666               	addwf	??_doDisplayLog,f,c
 10484  0017E8  0E00               	movlw	0
 10485  0017EA  2267               	addwfc	??_doDisplayLog+1,f,c
 10486  0017EC  5006               	movf	?___wmul,w,c
 10487  0017EE  2666               	addwf	??_doDisplayLog,f,c
 10488  0017F0  5007               	movf	?___wmul+1,w,c
 10489  0017F2  2267               	addwfc	??_doDisplayLog+1,f,c
 10490  0017F4  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
 10491  0017F8  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
 10492  0017FC  0E00               	movlw	0
 10493  0017FE  6E09               	movwf	___wmul@multiplicand+1,c
 10494  001800  0E03               	movlw	3
 10495  001802  6E08               	movwf	___wmul@multiplicand,c
 10496  001804  EC81  F024         	call	___wmul	;wreg free
 10497  001808  90D8               	bcf	status,0,c
 10498  00180A  3606               	rlcf	?___wmul,f,c
 10499  00180C  3607               	rlcf	?___wmul+1,f,c
 10500  00180E  5006               	movf	?___wmul,w,c
 10501  001810  2466               	addwf	??_doDisplayLog,w,c
 10502  001812  6ED9               	movwf	fsr2l,c
 10503  001814  5007               	movf	?___wmul+1,w,c
 10504  001816  2067               	addwfc	??_doDisplayLog+1,w,c
 10505  001818  6EDA               	movwf	fsr2h,c
 10506  00181A  CFDE F06C          	movff	postinc2,_doDisplayLog$2422
 10507  00181E  CFDD F06D          	movff	postdec2,_doDisplayLog$2422+1
 10508                           
 10509                           ;main.c: 73:                 printf("%s%d"," CM: ", logs[logNumber][5+(currentPole-1)*3]
      +                          );
 10510  001822  0EC1               	movlw	low (STR_10+4)
 10511  001824  0100               	movlb	0	; () banked
 10512  001826  6F9D               	movwf	printf@fmt& (0+255),b
 10513  001828  0EFF               	movlw	high (STR_10+4)
 10514  00182A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10515  00182C  0ED4               	movlw	low STR_16
 10516  00182E  6F9F               	movwf	(?_printf+2)& (0+255),b
 10517  001830  0EFF               	movlw	high STR_16
 10518  001832  6FA0               	movwf	(?_printf+3)& (0+255),b
 10519  001834  C06C  F0A1         	movff	_doDisplayLog$2422,?_printf+4
 10520  001838  C06D  F0A2         	movff	_doDisplayLog$2422+1,?_printf+5
 10521  00183C  EC6D  F024         	call	_printf	;wreg free
 10522  001840  0E90               	movlw	144
 10523  001842  EC3F  F025         	call	_lcdInst
 10524                           
 10525                           ;main.c: 75:                 printf("%s%d","ON POLE: ", logs[logNumber][4+(currentPole-1
      +                          )*3]);
 10526  001846  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10527  00184A  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10528  00184E  0E00               	movlw	0
 10529  001850  6E09               	movwf	___wmul@multiplicand+1,c
 10530  001852  0E60               	movlw	96
 10531  001854  6E08               	movwf	___wmul@multiplicand,c
 10532  001856  EC81  F024         	call	___wmul	;wreg free
 10533  00185A  0EA7               	movlw	low _logs
 10534  00185C  6E66               	movwf	??_doDisplayLog& (0+255),c
 10535  00185E  0E01               	movlw	high _logs
 10536  001860  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
 10537  001862  0E02               	movlw	2
 10538  001864  2666               	addwf	??_doDisplayLog,f,c
 10539  001866  0E00               	movlw	0
 10540  001868  2267               	addwfc	??_doDisplayLog+1,f,c
 10541  00186A  5006               	movf	?___wmul,w,c
 10542  00186C  2666               	addwf	??_doDisplayLog,f,c
 10543  00186E  5007               	movf	?___wmul+1,w,c
 10544  001870  2267               	addwfc	??_doDisplayLog+1,f,c
 10545  001872  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
 10546  001876  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
 10547  00187A  0E00               	movlw	0
 10548  00187C  6E09               	movwf	___wmul@multiplicand+1,c
 10549  00187E  0E03               	movlw	3
 10550  001880  6E08               	movwf	___wmul@multiplicand,c
 10551  001882  EC81  F024         	call	___wmul	;wreg free
 10552  001886  90D8               	bcf	status,0,c
 10553  001888  3606               	rlcf	?___wmul,f,c
 10554  00188A  3607               	rlcf	?___wmul+1,f,c
 10555  00188C  5006               	movf	?___wmul,w,c
 10556  00188E  2466               	addwf	??_doDisplayLog,w,c
 10557  001890  6ED9               	movwf	fsr2l,c
 10558  001892  5007               	movf	?___wmul+1,w,c
 10559  001894  2067               	addwfc	??_doDisplayLog+1,w,c
 10560  001896  6EDA               	movwf	fsr2h,c
 10561  001898  CFDE F06C          	movff	postinc2,_doDisplayLog$2422
 10562  00189C  CFDD F06D          	movff	postdec2,_doDisplayLog$2422+1
 10563                           
 10564                           ;main.c: 75:                 printf("%s%d","ON POLE: ", logs[logNumber][4+(currentPole-1
      +                          )*3]);
 10565  0018A0  0EC1               	movlw	low (STR_10+4)
 10566  0018A2  0100               	movlb	0	; () banked
 10567  0018A4  6F9D               	movwf	printf@fmt& (0+255),b
 10568  0018A6  0EFF               	movlw	high (STR_10+4)
 10569  0018A8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10570  0018AA  0E67               	movlw	low STR_18
 10571  0018AC  6F9F               	movwf	(?_printf+2)& (0+255),b
 10572  0018AE  0EFF               	movlw	high STR_18
 10573  0018B0  6FA0               	movwf	(?_printf+3)& (0+255),b
 10574  0018B2  C06C  F0A1         	movff	_doDisplayLog$2422,?_printf+4
 10575  0018B6  C06D  F0A2         	movff	_doDisplayLog$2422+1,?_printf+5
 10576  0018BA  EC6D  F024         	call	_printf	;wreg free
 10577  0018BE  0ED0               	movlw	208
 10578  0018C0  EC3F  F025         	call	_lcdInst
 10579                           
 10580                           ;main.c: 77:                 printf("%s","1<- 2-> 3MENU");
 10581  0018C4  0ED1               	movlw	low (STR_1+4)
 10582  0018C6  0100               	movlb	0	; () banked
 10583  0018C8  6F9D               	movwf	printf@fmt& (0+255),b
 10584  0018CA  0EFF               	movlw	high (STR_1+4)
 10585  0018CC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10586  0018CE  0E03               	movlw	low STR_20
 10587  0018D0  6F9F               	movwf	(?_printf+2)& (0+255),b
 10588  0018D2  0EFF               	movlw	high STR_20
 10589  0018D4  6FA0               	movwf	(?_printf+3)& (0+255),b
 10590  0018D6  EC6D  F024         	call	_printf	;wreg free
 10591                           
 10592                           ;main.c: 78:                 break;
 10593  0018DA  D00E               	goto	l10111
 10594  0018DC                     l10109:
 10595  0018DC  506A               	movf	doDisplayLog@currentDisplayState,w,c
 10596  0018DE  6E66               	movwf	??_doDisplayLog& (0+255),c
 10597  0018E0  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
 10598                           
 10599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10600                           ; Switch size 1, requested type "simple"
 10601                           ; Number of cases is 1, Range of values is 0 to 0
 10602                           ; switch strategies available:
 10603                           ; Name         Instructions Cycles
 10604                           ; simple_byte            4     3 (average)
 10605                           ;	Chosen strategy is simple_byte
 10606  0018E2  5067               	movf	??_doDisplayLog+1,w,c
 10607  0018E4  0A00               	xorlw	0	; case 0
 10608  0018E6  A4D8               	btfss	status,2,c
 10609  0018E8  D007               	goto	l10111
 10610                           
 10611                           ; Switch size 1, requested type "simple"
 10612                           ; Number of cases is 2, Range of values is 0 to 1
 10613                           ; switch strategies available:
 10614                           ; Name         Instructions Cycles
 10615                           ; simple_byte            7     4 (average)
 10616                           ;	Chosen strategy is simple_byte
 10617  0018EA  5066               	movf	??_doDisplayLog,w,c
 10618  0018EC  0A00               	xorlw	0	; case 0
 10619  0018EE  B4D8               	btfsc	status,2,c
 10620  0018F0  D699               	goto	l10059
 10621  0018F2  0A01               	xorlw	1	; case 1
 10622  0018F4  B4D8               	btfsc	status,2,c
 10623  0018F6  D70B               	goto	l10081
 10624  0018F8                     l10111:
 10625                           
 10626                           ;main.c: 81:         if(keyPressed){
 10627  0018F8  0100               	movlb	0	; () banked
 10628  0018FA  51E9               	movf	_keyPressed& (0+255),w,b	;volatile
 10629  0018FC  B4D8               	btfsc	status,2,c
 10630  0018FE  D070               	goto	l10151
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;main.c: 84:             keyPressed = 0;
 10634  001900  0E00               	movlw	0
 10635  001902  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;main.c: 87:             unsigned char keypress = (PORTB & 0xF0) >> 4;
 10639  001904  3881               	swapf	3969,w,c	;volatile
 10640  001906  0B0F               	andlw	15
 10641  001908  0B0F               	andlw	15
 10642  00190A  6E69               	movwf	doDisplayLog@keypress,c
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;main.c: 88:             char keyValue = keys[keypress];
 10646  00190C  0E47               	movlw	low _keys
 10647  00190E  2469               	addwf	doDisplayLog@keypress,w,c
 10648  001910  6EF6               	movwf	tblptrl,c
 10649  001912  6AF7               	clrf	tblptrh,c
 10650  001914  0EFE               	movlw	high _keys
 10651  001916  22F7               	addwfc	tblptrh,f,c
 10652  001918                     	if	0	;There are less than 3 active tblptr bytes
 10653  001918                     	endif
 10654  001918  0008               	tblrd		*
 10655  00191A  CFF5 F06B          	movff	tablat,doDisplayLog@keyValue
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;main.c: 89:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
 10659  00191E  0E01               	movlw	1
 10660  001920  EC3F  F025         	call	_lcdInst
 10661  001924  0E11               	movlw	17
 10662  001926  6E66               	movwf	??_doDisplayLog& (0+255),c
 10663  001928  0E3A               	movlw	58
 10664  00192A                     u12817:
 10665  00192A  2EE8               	decfsz	wreg,f,c
 10666  00192C  D7FE               	bra	u12817
 10667  00192E  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10668  001930  D7FC               	bra	u12817
 10669  001932  D000               	nop2	
 10670                           
 10671                           ;main.c: 90:             switch (currentDisplayState){
 10672  001934  D047               	goto	l10149
 10673  001936                     l10123:
 10674                           
 10675                           ;main.c: 92:                     if (keyValue == '1'){
 10676  001936  0E31               	movlw	49
 10677  001938  186B               	xorwf	doDisplayLog@keyValue,w,c
 10678  00193A  A4D8               	btfss	status,2,c
 10679  00193C  D003               	goto	l10127
 10680                           
 10681                           ;main.c: 93:                         currentDisplayState = pole;
 10682  00193E  0E01               	movlw	1
 10683  001940  6E6A               	movwf	doDisplayLog@currentDisplayState,c
 10684                           
 10685                           ;main.c: 94:                     } else if (keyValue == '2'){
 10686  001942  D04E               	goto	l10151
 10687  001944                     l10127:
 10688  001944  0E32               	movlw	50
 10689  001946  186B               	xorwf	doDisplayLog@keyValue,w,c
 10690  001948  B4D8               	btfsc	status,2,c
 10691  00194A  0012               	return	
 10692  00194C  D049               	goto	l10151
 10693  00194E                     l10131:
 10694                           
 10695                           ;main.c: 99:                     if (keyValue == '3'){
 10696  00194E  0E33               	movlw	51
 10697  001950  186B               	xorwf	doDisplayLog@keyValue,w,c
 10698  001952  A4D8               	btfss	status,2,c
 10699  001954  D007               	goto	l10135
 10700                           
 10701                           ;main.c: 100:                         currentDisplayState = opTime;
 10702  001956  0E00               	movlw	0
 10703  001958  6E6A               	movwf	doDisplayLog@currentDisplayState,c
 10704                           
 10705                           ;main.c: 101:                         currentPole = 1;
 10706  00195A  0E00               	movlw	0
 10707  00195C  6E6F               	movwf	doDisplayLog@currentPole+1,c
 10708  00195E  0E01               	movlw	1
 10709  001960  6E6E               	movwf	doDisplayLog@currentPole,c
 10710                           
 10711                           ;main.c: 103:                     } else if (keyValue == '2'){
 10712  001962  D03E               	goto	l10151
 10713  001964                     l10135:
 10714  001964  0E32               	movlw	50
 10715  001966  186B               	xorwf	doDisplayLog@keyValue,w,c
 10716  001968  A4D8               	btfss	status,2,c
 10717  00196A  D01D               	goto	l10141
 10718                           
 10719                           ;main.c: 104:                         if(currentPole < logs[logNumber][2]){
 10720  00196C  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10721  001970  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10722  001974  0E00               	movlw	0
 10723  001976  6E09               	movwf	___wmul@multiplicand+1,c
 10724  001978  0E60               	movlw	96
 10725  00197A  6E08               	movwf	___wmul@multiplicand,c
 10726  00197C  EC81  F024         	call	___wmul	;wreg free
 10727  001980  0EAB               	movlw	low (_logs+4)
 10728  001982  2406               	addwf	?___wmul,w,c
 10729  001984  6ED9               	movwf	fsr2l,c
 10730  001986  0E01               	movlw	high (_logs+4)
 10731  001988  2007               	addwfc	?___wmul+1,w,c
 10732  00198A  6EDA               	movwf	fsr2h,c
 10733  00198C  50DE               	movf	postinc2,w,c
 10734  00198E  5C6E               	subwf	doDisplayLog@currentPole,w,c
 10735  001990  506F               	movf	doDisplayLog@currentPole+1,w,c
 10736  001992  0A80               	xorlw	128
 10737  001994  6E68               	movwf	(??_doDisplayLog+2)& (0+255),c
 10738  001996  50DE               	movf	postinc2,w,c
 10739  001998  0A80               	xorlw	128
 10740  00199A  5868               	subwfb	(??_doDisplayLog+2)& (0+255),w,c
 10741  00199C  B0D8               	btfsc	status,0,c
 10742  00199E  D020               	goto	l10151
 10743                           
 10744                           ;main.c: 105:                             currentPole++;
 10745  0019A0  4A6E               	infsnz	doDisplayLog@currentPole,f,c
 10746  0019A2  2A6F               	incf	doDisplayLog@currentPole+1,f,c
 10747  0019A4  D01D               	goto	l10151
 10748  0019A6                     l10141:
 10749  0019A6  0E31               	movlw	49
 10750  0019A8  186B               	xorwf	doDisplayLog@keyValue,w,c
 10751  0019AA  B4D8               	btfsc	status,2,c
 10752                           
 10753                           ;main.c: 108:                         if (currentPole > 1){
 10754  0019AC  BE6F               	btfsc	doDisplayLog@currentPole+1,7,c
 10755  0019AE  D018               	goto	l10151
 10756  0019B0  506F               	movf	doDisplayLog@currentPole+1,w,c
 10757  0019B2  E104               	bnz	u11640
 10758  0019B4  0E02               	movlw	2
 10759  0019B6  5C6E               	subwf	doDisplayLog@currentPole,w,c
 10760  0019B8  A0D8               	btfss	status,0,c
 10761  0019BA  D012               	goto	l10151
 10762  0019BC                     u11640:
 10763                           
 10764                           ;main.c: 109:                             currentPole--;
 10765  0019BC  066E               	decf	doDisplayLog@currentPole,f,c
 10766  0019BE  A0D8               	btfss	status,0,c
 10767  0019C0  066F               	decf	doDisplayLog@currentPole+1,f,c
 10768  0019C2  D00E               	goto	l10151
 10769  0019C4                     l10149:
 10770  0019C4  506A               	movf	doDisplayLog@currentDisplayState,w,c
 10771  0019C6  6E66               	movwf	??_doDisplayLog& (0+255),c
 10772  0019C8  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
 10773                           
 10774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10775                           ; Switch size 1, requested type "simple"
 10776                           ; Number of cases is 1, Range of values is 0 to 0
 10777                           ; switch strategies available:
 10778                           ; Name         Instructions Cycles
 10779                           ; simple_byte            4     3 (average)
 10780                           ;	Chosen strategy is simple_byte
 10781  0019CA  5067               	movf	??_doDisplayLog+1,w,c
 10782  0019CC  0A00               	xorlw	0	; case 0
 10783  0019CE  A4D8               	btfss	status,2,c
 10784  0019D0  D007               	goto	l10151
 10785                           
 10786                           ; Switch size 1, requested type "simple"
 10787                           ; Number of cases is 2, Range of values is 0 to 1
 10788                           ; switch strategies available:
 10789                           ; Name         Instructions Cycles
 10790                           ; simple_byte            7     4 (average)
 10791                           ;	Chosen strategy is simple_byte
 10792  0019D2  5066               	movf	??_doDisplayLog,w,c
 10793  0019D4  0A00               	xorlw	0	; case 0
 10794  0019D6  B4D8               	btfsc	status,2,c
 10795  0019D8  D7AE               	goto	l10123
 10796  0019DA  0A01               	xorlw	1	; case 1
 10797  0019DC  B4D8               	btfsc	status,2,c
 10798  0019DE  D7B7               	goto	l10131
 10799  0019E0                     l10151:
 10800                           
 10801                           ;main.c: 117:     _delay((unsigned long)((1)*(10000000/4000.0)));
 10802  0019E0  0E04               	movlw	4
 10803  0019E2  6E66               	movwf	??_doDisplayLog& (0+255),c
 10804  0019E4  0E3E               	movlw	62
 10805  0019E6                     u12827:
 10806  0019E6  2EE8               	decfsz	wreg,f,c
 10807  0019E8  D7FE               	bra	u12827
 10808  0019EA  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10809  0019EC  D7FC               	bra	u12827
 10810  0019EE  D776               	goto	l10109
 10811  0019F0                     __end_of_doDisplayLog:
 10812                           	opt callstack 0
 10813                           
 10814 ;; *************** function _printf *****************
 10815 ;; Defined at:
 10816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 10819 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 10820 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 10821 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 10822 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 10823 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 10824 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 10825 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 10826 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 10827 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 10828 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  ap              2   99[COMRAM] PTR void [1]
 10831 ;;		 -> ?_printf(2), 
 10832 ;;  ret             2    0        int 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  2   29[BANK0 ] int 
 10835 ;; Registers used:
 10836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10842 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;Total ram usage:       14 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:   12
 10849 ;; This function calls:
 10850 ;;		_vfprintf
 10851 ;; This function is called by:
 10852 ;;		_doDisplayLog
 10853 ;;		_doOperation
 10854 ;;		_main
 10855 ;;		_mainEEPROM
 10856 ;;		_mainEEPROMTest
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text40
 10861  0048DA                     __ptext40:
 10862                           	opt callstack 0
 10863  0048DA                     _printf:
 10864                           	opt callstack 18
 10865                           
 10866                           ;incstack = 0
 10867  0048DA  0E9F               	movlw	low (?_printf+2)
 10868  0048DC  6E64               	movwf	printf@ap,c
 10869  0048DE  0E00               	movlw	high (?_printf+2)
 10870  0048E0  6E65               	movwf	printf@ap+1,c
 10871  0048E2  0E00               	movlw	0
 10872  0048E4  0100               	movlb	0	; () banked
 10873  0048E6  6F97               	movwf	vfprintf@fp& (0+255),b
 10874  0048E8  0E00               	movlw	0
 10875  0048EA  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
 10876  0048EC  C09D  F099         	movff	printf@fmt,vfprintf@fmt
 10877  0048F0  C09E  F09A         	movff	printf@fmt+1,vfprintf@fmt+1
 10878  0048F4  0E64               	movlw	low printf@ap
 10879  0048F6  6F9B               	movwf	vfprintf@ap& (0+255),b
 10880  0048F8  0E00               	movlw	high printf@ap
 10881  0048FA  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
 10882  0048FC  EC09  F022         	call	_vfprintf	;wreg free
 10883  004900  0012               	return		;funcret
 10884  004902                     __end_of_printf:
 10885                           	opt callstack 0
 10886                           
 10887 ;; *************** function _vfprintf *****************
 10888 ;; Defined at:
 10889 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 10892 ;;		 -> NULL(0), 
 10893 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 10894 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 10895 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 10896 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 10897 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 10898 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 10899 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 10900 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 10901 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 10902 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 10903 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 10904 ;;  ap              2   27[BANK0 ] PTR PTR void 
 10905 ;;		 -> printf@ap(2), 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  cfmt            2   95[COMRAM] PTR unsigned char 
 10908 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 10909 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 10910 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 10911 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 10912 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 10913 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 10914 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 10915 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 10916 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 10917 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  2   23[BANK0 ] int 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;Total ram usage:        8 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:   11
 10934 ;; This function calls:
 10935 ;;		_vfpfcnvrt
 10936 ;; This function is called by:
 10937 ;;		_printf
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text41
 10942  004412                     __ptext41:
 10943                           	opt callstack 0
 10944  004412                     _vfprintf:
 10945                           	opt callstack 18
 10946                           
 10947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10948                           
 10949                           ;incstack = 0
 10950  004412  C099  F060         	movff	vfprintf@fmt,vfprintf@cfmt
 10951  004416  C09A  F061         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10952                           
 10953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10954  00441A  0E00               	movlw	0
 10955  00441C  0100               	movlb	0	; () banked
 10956  00441E  6FE0               	movwf	(_nout+1)& (0+255),b
 10957  004420  0E00               	movlw	0
 10958  004422  6FDF               	movwf	_nout& (0+255),b
 10959                           
 10960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10961  004424  D013               	goto	l9673
 10962  004426                     l9671:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10966  004426  C097  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
 10967  00442A  C098  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10968  00442E  0E60               	movlw	low vfprintf@cfmt
 10969  004430  6E4E               	movwf	vfpfcnvrt@fmt,c
 10970  004432  0E00               	movlw	high vfprintf@cfmt
 10971  004434  6E4F               	movwf	vfpfcnvrt@fmt+1,c
 10972  004436  C09B  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
 10973  00443A  C09C  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10974  00443E  ECDD  F004         	call	_vfpfcnvrt	;wreg free
 10975  004442  504C               	movf	?_vfpfcnvrt,w,c
 10976  004444  0100               	movlb	0	; () banked
 10977  004446  27DF               	addwf	_nout& (0+255),f,b
 10978  004448  504D               	movf	?_vfpfcnvrt+1,w,c
 10979  00444A  23E0               	addwfc	(_nout+1)& (0+255),f,b
 10980  00444C                     l9673:
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10984  00444C  C060  FFF6         	movff	vfprintf@cfmt,tblptrl
 10985  004450  C061  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10986  004454                     	if	0	;tblptru may be non-zero
 10987  004454                     	endif
 10988  004454                     	if	0	;tblptru may be non-zero
 10989  004454                     	endif
 10990  004454  0008               	tblrd		*
 10991  004456  50F5               	movf	tablat,w,c
 10992  004458  0900               	iorlw	0
 10993  00445A  A4D8               	btfss	status,2,c
 10994  00445C  D7E4               	goto	l9671
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10998  00445E  C0DF  F097         	movff	_nout,?_vfprintf
 10999  004462  C0E0  F098         	movff	_nout+1,?_vfprintf+1
 11000                           
 11001                           ; BSR set to: 0
 11002  004466  0012               	return		;funcret
 11003  004468                     __end_of_vfprintf:
 11004                           	opt callstack 0
 11005                           
 11006 ;; *************** function _vfpfcnvrt *****************
 11007 ;; Defined at:
 11008 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
 11011 ;;		 -> NULL(0), 
 11012 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
 11013 ;;		 -> vfprintf@cfmt(2), 
 11014 ;;  ap              2   79[COMRAM] PTR PTR void 
 11015 ;;		 -> printf@ap(2), 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  llu             8   15[BANK0 ] unsigned long long 
 11018 ;;  ll              8    6[BANK0 ] long long 
 11019 ;;  f               4    0        long long 
 11020 ;;  vp              3    0        PTR void 
 11021 ;;  ct              3    0        unsigned char [3]
 11022 ;;  done            2    2[BANK0 ] int 
 11023 ;;  cp              2    0[BANK0 ] PTR unsigned char 
 11024 ;;		 -> ?_printf(2), STR_62(2), STR_55(16), STR_53(14), 
 11025 ;;		 -> STR_51(11), STR_49(9), STR_47(16), STR_45(13), 
 11026 ;;		 -> STR_43(13), STR_41(9), STR_39(13), STR_37(14), 
 11027 ;;		 -> STR_35(10), STR_31(9), STR_20(14), STR_18(10), 
 11028 ;;		 -> STR_16(6), STR_14(7), STR_12(2), STR_11(6), 
 11029 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11030 ;;		 -> STR_2(10), 
 11031 ;;  i               2    0        int 
 11032 ;;  c               1   14[BANK0 ] unsigned char 
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  2   75[COMRAM] int 
 11035 ;; Registers used:
 11036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11037 ;; Tracked objects:
 11038 ;;		On entry : 0/0
 11039 ;;		On exit  : 0/0
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11042 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11043 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11044 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11045 ;;      Totals:        20      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;Total ram usage:       43 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; Hardware stack levels required when called:   10
 11049 ;; This function calls:
 11050 ;;		_atoi
 11051 ;;		_ctoa
 11052 ;;		_dtoa
 11053 ;;		_fputc
 11054 ;;		_isdigit
 11055 ;;		_stoa
 11056 ;;		_strncmp
 11057 ;;		_utoa
 11058 ;;		_xtoa
 11059 ;; This function is called by:
 11060 ;;		_vfprintf
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text42
 11065  0009BA                     __ptext42:
 11066                           	opt callstack 0
 11067  0009BA                     _vfpfcnvrt:
 11068                           	opt callstack 18
 11069                           
 11070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;incstack = 0
 11074  0009BA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11075  0009BE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11076  0009C2  CFDE FFF6          	movff	postinc2,tblptrl
 11077  0009C6  CFDD FFF7          	movff	postdec2,tblptrh
 11078  0009CA                     	if	0	;tblptru may be non-zero
 11079  0009CA                     	endif
 11080  0009CA                     	if	0	;tblptru may be non-zero
 11081  0009CA                     	endif
 11082  0009CA  0008               	tblrd		*
 11083  0009CC  50F5               	movf	tablat,w,c
 11084  0009CE  0A25               	xorlw	37
 11085  0009D0  A4D8               	btfss	status,2,c
 11086  0009D2  D3D4               	goto	l9499
 11087                           
 11088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 11089  0009D4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11090  0009D8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11091  0009DC  2ADE               	incf	postinc2,f,c
 11092  0009DE  0E00               	movlw	0
 11093  0009E0  22DD               	addwfc	postdec2,f,c
 11094                           
 11095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 11096  0009E2  0E00               	movlw	0
 11097  0009E4  0100               	movlb	0	; () banked
 11098  0009E6  6FE2               	movwf	(_width+1)& (0+255),b
 11099  0009E8  0E00               	movlw	0
 11100  0009EA  6FE1               	movwf	_width& (0+255),b
 11101  0009EC  C0E1  F078         	movff	_width,_flags
 11102  0009F0  C0E2  F079         	movff	_width+1,_flags+1
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 11106  0009F4  69E3               	setf	_prec& (0+255),b
 11107  0009F6  69E4               	setf	(_prec+1)& (0+255),b
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 11111  0009F8  0E00               	movlw	0
 11112  0009FA  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11113  0009FC  0E00               	movlw	0
 11114  0009FE  D014               	goto	L21
 11115  000A00                     l9355:
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 11119  000A00  8078               	bsf	_flags,0,c
 11120  000A02                     l9357:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 11124  000A02  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11125  000A06  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11126  000A0A  2ADE               	incf	postinc2,f,c
 11127  000A0C  0E00               	movlw	0
 11128  000A0E  22DD               	addwfc	postdec2,f,c
 11129                           
 11130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 11131  000A10  D02E               	goto	l9381
 11132  000A12                     l9359:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 11136  000A12  8278               	bsf	_flags,1,c
 11137  000A14  D7F6               	goto	l9357
 11138  000A16                     l9363:
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 11142  000A16  8478               	bsf	_flags,2,c
 11143  000A18  D7F4               	goto	l9357
 11144  000A1A                     l9367:
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 11148  000A1A  8678               	bsf	_flags,3,c
 11149  000A1C  D7F2               	goto	l9357
 11150  000A1E                     l9371:
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 11154  000A1E  8878               	bsf	_flags,4,c
 11155  000A20  D7F0               	goto	l9357
 11156  000A22                     l9375:
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 11160  000A22  0E00               	movlw	0
 11161  000A24  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11162  000A26  0E01               	movlw	1
 11163  000A28                     L21:
 11164  000A28  6F82               	movwf	vfpfcnvrt@done& (0+255),b
 11165                           
 11166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 11167  000A2A  D021               	goto	l9381
 11168  000A2C                     l9379:
 11169                           
 11170                           ; BSR set to: 0
 11171  000A2C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11172  000A30  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11173  000A34  CFDE FFF6          	movff	postinc2,tblptrl
 11174  000A38  CFDD FFF7          	movff	postdec2,tblptrh
 11175  000A3C                     	if	0	;tblptru may be non-zero
 11176  000A3C                     	endif
 11177  000A3C                     	if	0	;tblptru may be non-zero
 11178  000A3C                     	endif
 11179  000A3C  0008               	tblrd		*
 11180  000A3E  50F5               	movf	tablat,w,c
 11181  000A40  6E52               	movwf	??_vfpfcnvrt& (0+255),c
 11182  000A42  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
 11183                           
 11184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11185                           ; Switch size 1, requested type "simple"
 11186                           ; Number of cases is 1, Range of values is 0 to 0
 11187                           ; switch strategies available:
 11188                           ; Name         Instructions Cycles
 11189                           ; simple_byte            4     3 (average)
 11190                           ;	Chosen strategy is simple_byte
 11191  000A44  5053               	movf	??_vfpfcnvrt+1,w,c
 11192  000A46  0A00               	xorlw	0	; case 0
 11193  000A48  A4D8               	btfss	status,2,c
 11194  000A4A  D7EB               	goto	l9375
 11195                           
 11196                           ; BSR set to: 0
 11197                           ; Switch size 1, requested type "simple"
 11198                           ; Number of cases is 5, Range of values is 32 to 48
 11199                           ; switch strategies available:
 11200                           ; Name         Instructions Cycles
 11201                           ; simple_byte           16     9 (average)
 11202                           ;	Chosen strategy is simple_byte
 11203  000A4C  5052               	movf	??_vfpfcnvrt,w,c
 11204  000A4E  0A20               	xorlw	32	; case 32
 11205  000A50  B4D8               	btfsc	status,2,c
 11206  000A52  D7E3               	goto	l9367
 11207  000A54  0A03               	xorlw	3	; case 35
 11208  000A56  B4D8               	btfsc	status,2,c
 11209  000A58  D7E2               	goto	l9371
 11210  000A5A  0A08               	xorlw	8	; case 43
 11211  000A5C  B4D8               	btfsc	status,2,c
 11212  000A5E  D7DB               	goto	l9363
 11213  000A60  0A06               	xorlw	6	; case 45
 11214  000A62  B4D8               	btfsc	status,2,c
 11215  000A64  D7CD               	goto	l9355
 11216  000A66  0A1D               	xorlw	29	; case 48
 11217  000A68  B4D8               	btfsc	status,2,c
 11218  000A6A  D7D3               	goto	l9359
 11219  000A6C  D7DA               	goto	l9375
 11220  000A6E                     l9381:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11224  000A6E  5182               	movf	vfpfcnvrt@done& (0+255),w,b
 11225  000A70  1183               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 11226  000A72  B4D8               	btfsc	status,2,c
 11227  000A74  D7DB               	goto	l9379
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 11231  000A76  B078               	btfsc	_flags,0,c
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11235  000A78  9278               	bcf	_flags,1,c
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11239  000A7A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11240  000A7E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11241  000A82  CFDE FFF6          	movff	postinc2,tblptrl
 11242  000A86  CFDD FFF7          	movff	postdec2,tblptrh
 11243  000A8A                     	if	0	;tblptru may be non-zero
 11244  000A8A                     	endif
 11245  000A8A                     	if	0	;tblptru may be non-zero
 11246  000A8A                     	endif
 11247  000A8A  0008               	tblrd		*
 11248  000A8C  50F5               	movf	tablat,w,c
 11249  000A8E  0A2A               	xorlw	42
 11250  000A90  A4D8               	btfss	status,2,c
 11251  000A92  D023               	goto	l9393
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11255  000A94  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11256  000A98  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11257  000A9C  2ADE               	incf	postinc2,f,c
 11258  000A9E  0E00               	movlw	0
 11259  000AA0  22DD               	addwfc	postdec2,f,c
 11260                           
 11261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11262  000AA2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11263  000AA6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11264  000AAA  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11265  000AAE  0E02               	movlw	2
 11266  000AB0  26DE               	addwf	postinc2,f,c
 11267  000AB2  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11268  000AB6  0E00               	movlw	0
 11269  000AB8  22DD               	addwfc	postdec2,f,c
 11270  000ABA  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11271  000ABE  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11272  000AC2  CFDE F0E1          	movff	postinc2,_width
 11273  000AC6  CFDD F0E2          	movff	postdec2,_width+1
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11277  000ACA  AFE2               	btfss	(_width+1)& (0+255),7,b
 11278  000ACC  D040               	goto	u10890
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11282  000ACE  8078               	bsf	_flags,0,c
 11283                           
 11284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11285  000AD0  6DE1               	negf	_width& (0+255),b
 11286  000AD2  1FE2               	comf	(_width+1)& (0+255),f,b
 11287  000AD4  B0D8               	btfsc	status,0,c
 11288  000AD6  2BE2               	incf	(_width+1)& (0+255),f,b
 11289  000AD8  D03A               	goto	u10890
 11290  000ADA                     l9393:
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11294  000ADA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11295  000ADE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11296  000AE2  CFDE F00D          	movff	postinc2,atoi@s
 11297  000AE6  CFDD F00E          	movff	postdec2,atoi@s+1
 11298  000AEA  EC44  F01A         	call	_atoi	;wreg free
 11299  000AEE  C00D  F0E1         	movff	?_atoi,_width
 11300  000AF2  C00E  F0E2         	movff	?_atoi+1,_width+1
 11301                           
 11302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11303  000AF6  D007               	goto	l9397
 11304  000AF8                     l9395:
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11308  000AF8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11309  000AFC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11310  000B00  2ADE               	incf	postinc2,f,c
 11311  000B02  0E00               	movlw	0
 11312  000B04  22DD               	addwfc	postdec2,f,c
 11313  000B06                     l9397:
 11314  000B06  0ED0               	movlw	208
 11315  000B08  6E52               	movwf	??_vfpfcnvrt& (0+255),c
 11316  000B0A  0EFF               	movlw	255
 11317  000B0C  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
 11318  000B0E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11319  000B12  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11320  000B16  CFDE FFF6          	movff	postinc2,tblptrl
 11321  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
 11322  000B1E                     	if	0	;tblptru may be non-zero
 11323  000B1E                     	endif
 11324  000B1E                     	if	0	;tblptru may be non-zero
 11325  000B1E                     	endif
 11326  000B1E  0008               	tblrd		*
 11327  000B20  50F5               	movf	tablat,w,c
 11328  000B22  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
 11329  000B24  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
 11330  000B26  5052               	movf	??_vfpfcnvrt,w,c
 11331  000B28  2654               	addwf	??_vfpfcnvrt+2,f,c
 11332  000B2A  5053               	movf	??_vfpfcnvrt+1,w,c
 11333  000B2C  2255               	addwfc	??_vfpfcnvrt+3,f,c
 11334  000B2E  5055               	movf	??_vfpfcnvrt+3,w,c
 11335  000B30  E106               	bnz	u10870
 11336  000B32  0E0A               	movlw	10
 11337  000B34  5C54               	subwf	??_vfpfcnvrt+2,w,c
 11338  000B36  B0D8               	btfsc	status,0,c
 11339  000B38  D002               	goto	u10870
 11340  000B3A  0E01               	movlw	1
 11341  000B3C  D001               	goto	u10880
 11342  000B3E                     u10870:
 11343  000B3E  0E00               	movlw	0
 11344  000B40                     u10880:
 11345  000B40  0100               	movlb	0	; () banked
 11346  000B42  6F84               	movwf	_vfpfcnvrt$1516& (0+255),b
 11347  000B44  6B85               	clrf	(_vfpfcnvrt$1516+1)& (0+255),b
 11348                           
 11349                           ; BSR set to: 0
 11350  000B46  5184               	movf	_vfpfcnvrt$1516& (0+255),w,b
 11351  000B48  1185               	iorwf	(_vfpfcnvrt$1516+1)& (0+255),w,b
 11352  000B4A  A4D8               	btfss	status,2,c
 11353  000B4C  D7D5               	goto	l9395
 11354  000B4E                     u10890:
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 11358  000B4E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11359  000B52  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11360  000B56  CFDE FFF6          	movff	postinc2,tblptrl
 11361  000B5A  CFDD FFF7          	movff	postdec2,tblptrh
 11362  000B5E                     	if	0	;tblptru may be non-zero
 11363  000B5E                     	endif
 11364  000B5E                     	if	0	;tblptru may be non-zero
 11365  000B5E                     	endif
 11366  000B5E  0008               	tblrd		*
 11367  000B60  50F5               	movf	tablat,w,c
 11368  000B62  0A63               	xorlw	99
 11369  000B64  A4D8               	btfss	status,2,c
 11370  000B66  D026               	goto	l9411
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 11374  000B68  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11375  000B6C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11376  000B70  2ADE               	incf	postinc2,f,c
 11377  000B72  0E00               	movlw	0
 11378  000B74  22DD               	addwfc	postdec2,f,c
 11379                           
 11380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11381  000B76  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11382  000B7A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11383  000B7E  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11384  000B82  0E02               	movlw	2
 11385  000B84  26DE               	addwf	postinc2,f,c
 11386  000B86  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11387  000B8A  0E00               	movlw	0
 11388  000B8C  22DD               	addwfc	postdec2,f,c
 11389  000B8E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11390  000B92  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11391  000B96  50DF               	movf	indf2,w,c
 11392  000B98  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 11396  000B9A  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
 11397  000B9E  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 11398  000BA2  C08E  F027         	movff	vfpfcnvrt@c,ctoa@c
 11399  000BA6  EC8A  F022         	call	_ctoa	;wreg free
 11400  000BAA  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
 11401  000BAE  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
 11402  000BB2  0012               	return	
 11403  000BB4                     l9411:
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11407  000BB4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11408  000BB8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11409  000BBC  CFDE FFF6          	movff	postinc2,tblptrl
 11410  000BC0  CFDD FFF7          	movff	postdec2,tblptrh
 11411  000BC4                     	if	0	;tblptru may be non-zero
 11412  000BC4                     	endif
 11413  000BC4                     	if	0	;tblptru may be non-zero
 11414  000BC4                     	endif
 11415  000BC4  0008               	tblrd		*
 11416  000BC6  50F5               	movf	tablat,w,c
 11417  000BC8  0A64               	xorlw	100
 11418  000BCA  B4D8               	btfsc	status,2,c
 11419  000BCC  D00D               	goto	u10920
 11420                           
 11421                           ; BSR set to: 0
 11422  000BCE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11423  000BD2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11424  000BD6  CFDE FFF6          	movff	postinc2,tblptrl
 11425  000BDA  CFDD FFF7          	movff	postdec2,tblptrh
 11426  000BDE                     	if	0	;tblptru may be non-zero
 11427  000BDE                     	endif
 11428  000BDE                     	if	0	;tblptru may be non-zero
 11429  000BDE                     	endif
 11430  000BDE  0008               	tblrd		*
 11431  000BE0  50F5               	movf	tablat,w,c
 11432  000BE2  0A69               	xorlw	105
 11433  000BE4  A4D8               	btfss	status,2,c
 11434  000BE6  D03F               	goto	l9421
 11435  000BE8                     u10920:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11439  000BE8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11440  000BEC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11441  000BF0  2ADE               	incf	postinc2,f,c
 11442  000BF2  0E00               	movlw	0
 11443  000BF4  22DD               	addwfc	postdec2,f,c
 11444                           
 11445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11446  000BF6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11447  000BFA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11448  000BFE  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11449  000C02  0E02               	movlw	2
 11450  000C04  26DE               	addwf	postinc2,f,c
 11451  000C06  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11452  000C0A  0E00               	movlw	0
 11453  000C0C  22DD               	addwfc	postdec2,f,c
 11454  000C0E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11455  000C12  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11456  000C16  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
 11457  000C1A  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
 11458  000C1E  0E00               	movlw	0
 11459  000C20  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11460  000C22  0EFF               	movlw	-1
 11461  000C24  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11462  000C26  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11463  000C28  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11464  000C2A  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11465  000C2C  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11466  000C2E  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11470  000C30  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
 11471  000C34  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11472  000C38  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
 11473  000C3C  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11474  000C40  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11475  000C44  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11476  000C48  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11477  000C4C  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11478  000C50  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11479  000C54  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11480  000C58  EC4B  F014         	call	_dtoa	;wreg free
 11481  000C5C  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
 11482  000C60  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11483  000C64  0012               	return	
 11484  000C66                     l9421:
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 11488  000C66  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11489  000C6A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11490  000C6E  CFDE F006          	movff	postinc2,strncmp@_l
 11491  000C72  CFDD F007          	movff	postdec2,strncmp@_l+1
 11492  000C76  0EF3               	movlw	low STR_64
 11493  000C78  6E08               	movwf	strncmp@_r,c
 11494  000C7A  0EFF               	movlw	high STR_64
 11495  000C7C  6E09               	movwf	strncmp@_r+1,c
 11496  000C7E  0E00               	movlw	0
 11497  000C80  6E0B               	movwf	strncmp@n+1,c
 11498  000C82  0E02               	movlw	2
 11499  000C84  6E0A               	movwf	strncmp@n,c
 11500  000C86  EC63  F01F         	call	_strncmp	;wreg free
 11501  000C8A  5006               	movf	?_strncmp,w,c
 11502  000C8C  1007               	iorwf	?_strncmp+1,w,c
 11503  000C8E  B4D8               	btfsc	status,2,c
 11504  000C90  D016               	goto	u10940
 11505  000C92  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11506  000C96  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11507  000C9A  CFDE F006          	movff	postinc2,strncmp@_l
 11508  000C9E  CFDD F007          	movff	postdec2,strncmp@_l+1
 11509  000CA2  0EF6               	movlw	low STR_68
 11510  000CA4  6E08               	movwf	strncmp@_r,c
 11511  000CA6  0EFF               	movlw	high STR_68
 11512  000CA8  6E09               	movwf	strncmp@_r+1,c
 11513  000CAA  0E00               	movlw	0
 11514  000CAC  6E0B               	movwf	strncmp@n+1,c
 11515  000CAE  0E02               	movlw	2
 11516  000CB0  6E0A               	movwf	strncmp@n,c
 11517  000CB2  EC63  F01F         	call	_strncmp	;wreg free
 11518  000CB6  5006               	movf	?_strncmp,w,c
 11519  000CB8  1007               	iorwf	?_strncmp+1,w,c
 11520  000CBA  A4D8               	btfss	status,2,c
 11521  000CBC  D05C               	goto	l9431
 11522  000CBE                     u10940:
 11523                           
 11524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 11525  000CBE  0E02               	movlw	2
 11526  000CC0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11527  000CC4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11528  000CC8  26DE               	addwf	postinc2,f,c
 11529  000CCA  0E00               	movlw	0
 11530  000CCC  22DD               	addwfc	postdec2,f,c
 11531                           
 11532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 11533  000CCE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11534  000CD2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11535  000CD6  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11536  000CDA  0E04               	movlw	4
 11537  000CDC  26DE               	addwf	postinc2,f,c
 11538  000CDE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11539  000CE2  0E00               	movlw	0
 11540  000CE4  22DD               	addwfc	postdec2,f,c
 11541  000CE6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11542  000CEA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11543  000CEE  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11544  000CF2  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 11545  000CF6  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 11546  000CFA  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 11547  000CFE  C054  F058         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 11548  000D02  C055  F059         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 11549  000D06  C056  F05A         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 11550  000D0A  C057  F05B         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 11551  000D0E  6A5C               	clrf	(??_vfpfcnvrt+10)& (0+255),c
 11552  000D10  BE5B               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
 11553  000D12  685C               	setf	(??_vfpfcnvrt+10)& (0+255),c
 11554  000D14  C05C  F05D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 11555  000D18  C05C  F05E         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 11556  000D1C  C05C  F05F         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 11557  000D20  C058  F086         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 11558  000D24  C059  F087         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 11559  000D28  C05A  F088         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 11560  000D2C  C05B  F089         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 11561  000D30  C05C  F08A         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 11562  000D34  C05D  F08B         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 11563  000D38  C05E  F08C         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 11564  000D3C  C05F  F08D         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 11565                           
 11566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 11567  000D40  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
 11568  000D44  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11569  000D48  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
 11570  000D4C  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11571  000D50  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11572  000D54  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11573  000D58  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11574  000D5C  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11575  000D60  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11576  000D64  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11577  000D68  EC4B  F014         	call	_dtoa	;wreg free
 11578  000D6C  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
 11579  000D70  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11580  000D74  0012               	return	
 11581  000D76                     l9431:
 11582                           
 11583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 11584  000D76  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11585  000D7A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11586  000D7E  CFDE FFF6          	movff	postinc2,tblptrl
 11587  000D82  CFDD FFF7          	movff	postdec2,tblptrh
 11588  000D86                     	if	0	;tblptru may be non-zero
 11589  000D86                     	endif
 11590  000D86                     	if	0	;tblptru may be non-zero
 11591  000D86                     	endif
 11592  000D86  0008               	tblrd		*
 11593  000D88  50F5               	movf	tablat,w,c
 11594  000D8A  0A73               	xorlw	115
 11595  000D8C  A4D8               	btfss	status,2,c
 11596  000D8E  D02A               	goto	l9439
 11597                           
 11598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 11599  000D90  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11600  000D94  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11601  000D98  2ADE               	incf	postinc2,f,c
 11602  000D9A  0E00               	movlw	0
 11603  000D9C  22DD               	addwfc	postdec2,f,c
 11604                           
 11605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11606  000D9E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11607  000DA2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11608  000DA6  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11609  000DAA  0E02               	movlw	2
 11610  000DAC  26DE               	addwf	postinc2,f,c
 11611  000DAE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11612  000DB2  0E00               	movlw	0
 11613  000DB4  22DD               	addwfc	postdec2,f,c
 11614  000DB6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11615  000DBA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11616  000DBE  CFDE F080          	movff	postinc2,vfpfcnvrt@cp
 11617  000DC2  CFDD F081          	movff	postdec2,vfpfcnvrt@cp+1
 11618                           
 11619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 11620  000DC6  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
 11621  000DCA  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11622  000DCE  C080  F015         	movff	vfpfcnvrt@cp,stoa@s
 11623  000DD2  C081  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11624  000DD6  ECA4  F019         	call	_stoa	;wreg free
 11625  000DDA  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
 11626  000DDE  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
 11627  000DE2  0012               	return	
 11628  000DE4                     l9439:
 11629                           
 11630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11631  000DE4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11632  000DE8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11633  000DEC  CFDE FFF6          	movff	postinc2,tblptrl
 11634  000DF0  CFDD FFF7          	movff	postdec2,tblptrh
 11635  000DF4                     	if	0	;tblptru may be non-zero
 11636  000DF4                     	endif
 11637  000DF4                     	if	0	;tblptru may be non-zero
 11638  000DF4                     	endif
 11639  000DF4  0008               	tblrd		*
 11640  000DF6  50F5               	movf	tablat,w,c
 11641  000DF8  0A75               	xorlw	117
 11642  000DFA  A4D8               	btfss	status,2,c
 11643  000DFC  D041               	goto	l9447
 11644                           
 11645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11646  000DFE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11647  000E02  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11648  000E06  2ADE               	incf	postinc2,f,c
 11649  000E08  0E00               	movlw	0
 11650  000E0A  22DD               	addwfc	postdec2,f,c
 11651                           
 11652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11653  000E0C  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11654  000E10  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11655  000E14  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11656  000E18  0E02               	movlw	2
 11657  000E1A  26DE               	addwf	postinc2,f,c
 11658  000E1C  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11659  000E20  0E00               	movlw	0
 11660  000E22  22DD               	addwfc	postdec2,f,c
 11661  000E24  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11662  000E28  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11663  000E2C  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11664  000E30  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 11665  000E34  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11666  000E38  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11667  000E3C  0100               	movlb	0	; () banked
 11668  000E3E  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11669  000E40  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11670  000E42  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11671  000E44  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11672  000E46  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11673  000E48  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11677  000E4A  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
 11678  000E4E  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11679  000E52  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
 11680  000E56  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11681  000E5A  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11682  000E5E  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11683  000E62  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11684  000E66  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11685  000E6A  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11686  000E6E  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11687  000E72  EC88  F017         	call	_utoa	;wreg free
 11688  000E76  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 11689  000E7A  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 11690  000E7E  0012               	return	
 11691  000E80                     l9447:
 11692                           
 11693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11694  000E80  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11695  000E84  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11696  000E88  CFDE F006          	movff	postinc2,strncmp@_l
 11697  000E8C  CFDD F007          	movff	postdec2,strncmp@_l+1
 11698  000E90  0EED               	movlw	low (STR_21+1)
 11699  000E92  6E08               	movwf	strncmp@_r,c
 11700  000E94  0EFF               	movlw	high (STR_21+1)
 11701  000E96  6E09               	movwf	strncmp@_r+1,c
 11702  000E98  0E00               	movlw	0
 11703  000E9A  6E0B               	movwf	strncmp@n+1,c
 11704  000E9C  0E02               	movlw	2
 11705  000E9E  6E0A               	movwf	strncmp@n,c
 11706  000EA0  EC63  F01F         	call	_strncmp	;wreg free
 11707  000EA4  5006               	movf	?_strncmp,w,c
 11708  000EA6  1007               	iorwf	?_strncmp+1,w,c
 11709  000EA8  A4D8               	btfss	status,2,c
 11710  000EAA  D048               	goto	l9455
 11711                           
 11712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 11713  000EAC  0E02               	movlw	2
 11714  000EAE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11715  000EB2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11716  000EB6  26DE               	addwf	postinc2,f,c
 11717  000EB8  0E00               	movlw	0
 11718  000EBA  22DD               	addwfc	postdec2,f,c
 11719                           
 11720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 11721  000EBC  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11722  000EC0  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11723  000EC4  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11724  000EC8  0E04               	movlw	4
 11725  000ECA  26DE               	addwf	postinc2,f,c
 11726  000ECC  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11727  000ED0  0E00               	movlw	0
 11728  000ED2  22DD               	addwfc	postdec2,f,c
 11729  000ED4  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11730  000ED8  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11731  000EDC  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11732  000EE0  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 11733  000EE4  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 11734  000EE8  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 11735  000EEC  5054               	movf	??_vfpfcnvrt+2,w,c
 11736  000EEE  0100               	movlb	0	; () banked
 11737  000EF0  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 11738  000EF2  5055               	movf	??_vfpfcnvrt+3,w,c
 11739  000EF4  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 11740  000EF6  5056               	movf	??_vfpfcnvrt+4,w,c
 11741  000EF8  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 11742  000EFA  5057               	movf	??_vfpfcnvrt+5,w,c
 11743  000EFC  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 11744  000EFE  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11745  000F00  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11746  000F02  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11747  000F04  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 11751  000F06  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
 11752  000F0A  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11753  000F0E  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
 11754  000F12  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11755  000F16  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11756  000F1A  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11757  000F1E  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11758  000F22  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11759  000F26  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11760  000F2A  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11761  000F2E  EC88  F017         	call	_utoa	;wreg free
 11762  000F32  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 11763  000F36  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 11764  000F3A  0012               	return	
 11765  000F3C                     l9455:
 11766                           
 11767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11768  000F3C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11769  000F40  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11770  000F44  CFDE FFF6          	movff	postinc2,tblptrl
 11771  000F48  CFDD FFF7          	movff	postdec2,tblptrh
 11772  000F4C                     	if	0	;tblptru may be non-zero
 11773  000F4C                     	endif
 11774  000F4C                     	if	0	;tblptru may be non-zero
 11775  000F4C                     	endif
 11776  000F4C  0008               	tblrd		*
 11777  000F4E  50F5               	movf	tablat,w,c
 11778  000F50  0A78               	xorlw	120
 11779  000F52  B4D8               	btfsc	status,2,c
 11780  000F54  D00D               	goto	u10990
 11781  000F56  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11782  000F5A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11783  000F5E  CFDE FFF6          	movff	postinc2,tblptrl
 11784  000F62  CFDD FFF7          	movff	postdec2,tblptrh
 11785  000F66                     	if	0	;tblptru may be non-zero
 11786  000F66                     	endif
 11787  000F66                     	if	0	;tblptru may be non-zero
 11788  000F66                     	endif
 11789  000F66  0008               	tblrd		*
 11790  000F68  50F5               	movf	tablat,w,c
 11791  000F6A  0A58               	xorlw	88
 11792  000F6C  A4D8               	btfss	status,2,c
 11793  000F6E  D04E               	goto	l9469
 11794  000F70                     u10990:
 11795                           
 11796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11797  000F70  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11798  000F74  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11799  000F78  CFDE FFF6          	movff	postinc2,tblptrl
 11800  000F7C  CFDD FFF7          	movff	postdec2,tblptrh
 11801  000F80                     	if	0	;tblptru may be non-zero
 11802  000F80                     	endif
 11803  000F80                     	if	0	;tblptru may be non-zero
 11804  000F80                     	endif
 11805  000F80  0008               	tblrd		*
 11806  000F82  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 11807                           
 11808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11809  000F86  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11810  000F8A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11811  000F8E  2ADE               	incf	postinc2,f,c
 11812  000F90  0E00               	movlw	0
 11813  000F92  22DD               	addwfc	postdec2,f,c
 11814                           
 11815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11816  000F94  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11817  000F98  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11818  000F9C  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11819  000FA0  0E02               	movlw	2
 11820  000FA2  26DE               	addwf	postinc2,f,c
 11821  000FA4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11822  000FA8  0E00               	movlw	0
 11823  000FAA  22DD               	addwfc	postdec2,f,c
 11824  000FAC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11825  000FB0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11826  000FB4  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11827  000FB8  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 11828  000FBC  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11829  000FC0  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11830  000FC4  0100               	movlb	0	; () banked
 11831  000FC6  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11832  000FC8  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11833  000FCA  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11834  000FCC  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11835  000FCE  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11836  000FD0  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11840  000FD2  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 11841  000FD6  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11842  000FDA  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 11843  000FDE  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11844  000FE2  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11845  000FE6  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11846  000FEA  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11847  000FEE  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11848  000FF2  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11849  000FF6  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11850  000FFA  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 11851  000FFE  EC6D  F015         	call	_xtoa	;wreg free
 11852  001002  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 11853  001006  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11854  00100A  0012               	return	
 11855  00100C                     l9469:
 11856                           
 11857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 11858  00100C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11859  001010  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11860  001014  CFDE F006          	movff	postinc2,strncmp@_l
 11861  001018  CFDD F007          	movff	postdec2,strncmp@_l+1
 11862  00101C  0EF9               	movlw	low STR_78
 11863  00101E  6E08               	movwf	strncmp@_r,c
 11864  001020  0EFF               	movlw	high STR_78
 11865  001022  6E09               	movwf	strncmp@_r+1,c
 11866  001024  0E00               	movlw	0
 11867  001026  6E0B               	movwf	strncmp@n+1,c
 11868  001028  0E02               	movlw	2
 11869  00102A  6E0A               	movwf	strncmp@n,c
 11870  00102C  EC63  F01F         	call	_strncmp	;wreg free
 11871  001030  5006               	movf	?_strncmp,w,c
 11872  001032  1007               	iorwf	?_strncmp+1,w,c
 11873  001034  B4D8               	btfsc	status,2,c
 11874  001036  D016               	goto	u11010
 11875  001038  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11876  00103C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11877  001040  CFDE F006          	movff	postinc2,strncmp@_l
 11878  001044  CFDD F007          	movff	postdec2,strncmp@_l+1
 11879  001048  0EF0               	movlw	low STR_82
 11880  00104A  6E08               	movwf	strncmp@_r,c
 11881  00104C  0EFF               	movlw	high STR_82
 11882  00104E  6E09               	movwf	strncmp@_r+1,c
 11883  001050  0E00               	movlw	0
 11884  001052  6E0B               	movwf	strncmp@n+1,c
 11885  001054  0E02               	movlw	2
 11886  001056  6E0A               	movwf	strncmp@n,c
 11887  001058  EC63  F01F         	call	_strncmp	;wreg free
 11888  00105C  5006               	movf	?_strncmp,w,c
 11889  00105E  1007               	iorwf	?_strncmp+1,w,c
 11890  001060  A4D8               	btfss	status,2,c
 11891  001062  D05D               	goto	l9483
 11892  001064                     u11010:
 11893                           
 11894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 11895  001064  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11896  001068  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11897  00106C  CFDE F052          	movff	postinc2,??_vfpfcnvrt
 11898  001070  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
 11899  001074  0E01               	movlw	1
 11900  001076  2652               	addwf	??_vfpfcnvrt,f,c
 11901  001078  0E00               	movlw	0
 11902  00107A  2253               	addwfc	??_vfpfcnvrt+1,f,c
 11903  00107C  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
 11904  001080  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 11905  001084                     	if	0	;tblptru may be non-zero
 11906  001084                     	endif
 11907  001084                     	if	0	;tblptru may be non-zero
 11908  001084                     	endif
 11909  001084  0008               	tblrd		*
 11910  001086  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 11911                           
 11912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 11913  00108A  0E02               	movlw	2
 11914  00108C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11915  001090  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11916  001094  26DE               	addwf	postinc2,f,c
 11917  001096  0E00               	movlw	0
 11918  001098  22DD               	addwfc	postdec2,f,c
 11919                           
 11920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 11921  00109A  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11922  00109E  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11923  0010A2  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11924  0010A6  0E04               	movlw	4
 11925  0010A8  26DE               	addwf	postinc2,f,c
 11926  0010AA  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11927  0010AE  0E00               	movlw	0
 11928  0010B0  22DD               	addwfc	postdec2,f,c
 11929  0010B2  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11930  0010B6  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11931  0010BA  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11932  0010BE  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 11933  0010C2  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 11934  0010C6  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 11935  0010CA  5054               	movf	??_vfpfcnvrt+2,w,c
 11936  0010CC  0100               	movlb	0	; () banked
 11937  0010CE  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 11938  0010D0  5055               	movf	??_vfpfcnvrt+3,w,c
 11939  0010D2  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 11940  0010D4  5056               	movf	??_vfpfcnvrt+4,w,c
 11941  0010D6  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 11942  0010D8  5057               	movf	??_vfpfcnvrt+5,w,c
 11943  0010DA  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 11944  0010DC  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11945  0010DE  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11946  0010E0  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11947  0010E2  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 11951  0010E4  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 11952  0010E8  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11953  0010EC  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 11954  0010F0  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11955  0010F4  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11956  0010F8  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11957  0010FC  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11958  001100  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11959  001104  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11960  001108  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11961  00110C  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 11962  001110  EC6D  F015         	call	_xtoa	;wreg free
 11963  001114  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 11964  001118  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11965  00111C  0012               	return	
 11966  00111E                     l9483:
 11967                           
 11968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11969  00111E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11970  001122  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11971  001126  CFDE FFF6          	movff	postinc2,tblptrl
 11972  00112A  CFDD FFF7          	movff	postdec2,tblptrh
 11973  00112E                     	if	0	;tblptru may be non-zero
 11974  00112E                     	endif
 11975  00112E                     	if	0	;tblptru may be non-zero
 11976  00112E                     	endif
 11977  00112E  0008               	tblrd		*
 11978  001130  50F5               	movf	tablat,w,c
 11979  001132  0A25               	xorlw	37
 11980  001134  A4D8               	btfss	status,2,c
 11981  001136  D016               	goto	l9493
 11982                           
 11983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11984  001138  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11985  00113C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11986  001140  2ADE               	incf	postinc2,f,c
 11987  001142  0E00               	movlw	0
 11988  001144  22DD               	addwfc	postdec2,f,c
 11989                           
 11990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11991  001146  0E00               	movlw	0
 11992  001148  6E0B               	movwf	fputc@c+1,c
 11993  00114A  0E25               	movlw	37
 11994  00114C  6E0A               	movwf	fputc@c,c
 11995  00114E  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 11996  001152  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11997  001156  EC0B  F021         	call	_fputc	;wreg free
 11998  00115A                     l9489:
 11999                           
 12000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 12001  00115A  0E00               	movlw	0
 12002  00115C  6E4D               	movwf	?_vfpfcnvrt+1,c
 12003  00115E  0E01               	movlw	1
 12004  001160  6E4C               	movwf	?_vfpfcnvrt,c
 12005  001162  0012               	return	
 12006  001164                     l9493:
 12007                           
 12008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 12009  001164  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12010  001168  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12011  00116C  2ADE               	incf	postinc2,f,c
 12012  00116E  0E00               	movlw	0
 12013  001170  22DD               	addwfc	postdec2,f,c
 12014                           
 12015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 12016  001172  0E00               	movlw	0
 12017  001174  6E4D               	movwf	?_vfpfcnvrt+1,c
 12018  001176  0E00               	movlw	0
 12019  001178  6E4C               	movwf	?_vfpfcnvrt,c
 12020  00117A  0012               	return	
 12021  00117C                     l9499:
 12022                           
 12023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 12024  00117C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12025  001180  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12026  001184  CFDE FFF6          	movff	postinc2,tblptrl
 12027  001188  CFDD FFF7          	movff	postdec2,tblptrh
 12028  00118C                     	if	0	;tblptru may be non-zero
 12029  00118C                     	endif
 12030  00118C                     	if	0	;tblptru may be non-zero
 12031  00118C                     	endif
 12032  00118C  0008               	tblrd		*
 12033  00118E  50F5               	movf	tablat,w,c
 12034  001190  6E0A               	movwf	fputc@c,c
 12035  001192  6A0B               	clrf	fputc@c+1,c
 12036  001194  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 12037  001198  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12038  00119C  EC0B  F021         	call	_fputc	;wreg free
 12039                           
 12040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 12041  0011A0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12042  0011A4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12043  0011A8  2ADE               	incf	postinc2,f,c
 12044  0011AA  0E00               	movlw	0
 12045  0011AC  22DD               	addwfc	postdec2,f,c
 12046  0011AE  D7D5               	goto	l9489
 12047  0011B0                     __end_of_vfpfcnvrt:
 12048                           	opt callstack 0
 12049                           
 12050 ;; *************** function _xtoa *****************
 12051 ;; Defined at:
 12052 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12055 ;;		 -> NULL(0), 
 12056 ;;  d               8   38[COMRAM] unsigned long long 
 12057 ;;  x               1   46[COMRAM] unsigned char 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;  n               8   63[COMRAM] unsigned long long 
 12060 ;;  c               2   73[COMRAM] int 
 12061 ;;  i               2   71[COMRAM] int 
 12062 ;;  w               2   61[COMRAM] int 
 12063 ;;  p               2   59[COMRAM] int 
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  2   36[COMRAM] int 
 12066 ;; Registers used:
 12067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12073 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12076 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;Total ram usage:       39 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; Hardware stack levels required when called:    9
 12080 ;; This function calls:
 12081 ;;		_isalpha
 12082 ;;		_isupper
 12083 ;;		_pad
 12084 ;;		_toupper
 12085 ;; This function is called by:
 12086 ;;		_vfpfcnvrt
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text43
 12091  002ADA                     __ptext43:
 12092                           	opt callstack 0
 12093  002ADA                     _xtoa:
 12094                           	opt callstack 18
 12095                           
 12096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 12097                           
 12098                           ;incstack = 0
 12099  002ADA  0100               	movlb	0	; () banked
 12100  002ADC  AFE4               	btfss	(_prec+1)& (0+255),7,b
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 12104  002ADE  9278               	bcf	_flags,1,c
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 12108  002AE0  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 12109  002AE2  D005               	goto	u10110
 12110  002AE4  51E4               	movf	(_prec+1)& (0+255),w,b
 12111  002AE6  E108               	bnz	l752
 12112  002AE8  05E3               	decf	_prec& (0+255),w,b
 12113  002AEA  B0D8               	btfsc	status,0,c
 12114  002AEC  D005               	goto	l752
 12115  002AEE                     u10110:
 12116                           
 12117                           ; BSR set to: 0
 12118  002AEE  0E00               	movlw	0
 12119  002AF0  6E3D               	movwf	xtoa@p+1,c
 12120  002AF2  0E01               	movlw	1
 12121  002AF4  6E3C               	movwf	xtoa@p,c
 12122  002AF6  D004               	goto	l754
 12123  002AF8                     l752:
 12124                           
 12125                           ; BSR set to: 0
 12126  002AF8  C0E3  F03C         	movff	_prec,xtoa@p
 12127  002AFC  C0E4  F03D         	movff	_prec+1,xtoa@p+1
 12128  002B00                     l754:
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 12132  002B00  C0E1  F03E         	movff	_width,xtoa@w
 12133  002B04  C0E2  F03F         	movff	_width+1,xtoa@w+1
 12134                           
 12135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 12136  002B08  A878               	btfss	_flags,4,c
 12137  002B0A  D004               	goto	l9003
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 12141  002B0C  0EFE               	movlw	254
 12142  002B0E  263E               	addwf	xtoa@w,f,c
 12143  002B10  0EFF               	movlw	255
 12144  002B12  223F               	addwfc	xtoa@w+1,f,c
 12145  002B14                     l9003:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 12149  002B14  C027  F040         	movff	xtoa@d,xtoa@n
 12150  002B18  C028  F041         	movff	xtoa@d+1,xtoa@n+1
 12151  002B1C  C029  F042         	movff	xtoa@d+2,xtoa@n+2
 12152  002B20  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
 12153  002B24  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
 12154  002B28  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
 12155  002B2C  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
 12156  002B30  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 12160  002B34  0E00               	movlw	0
 12161  002B36  6E49               	movwf	xtoa@i+1,c
 12162  002B38  0E1F               	movlw	31
 12163  002B3A  6E48               	movwf	xtoa@i,c
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 12167  002B3C  0E00               	movlw	0
 12168  002B3E  0101               	movlb	1	; () banked
 12169  002B40  6F92               	movwf	(_dbuf+31)& (0+255),b
 12170                           
 12171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12172  002B42  D093               	goto	l9039
 12173  002B44                     l9009:
 12174                           
 12175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 12176  002B44  0648               	decf	xtoa@i,f,c
 12177  002B46  A0D8               	btfss	status,0,c
 12178  002B48  0649               	decf	xtoa@i+1,f,c
 12179                           
 12180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 12181  002B4A  0E0F               	movlw	15
 12182  002B4C  1440               	andwf	xtoa@n,w,c
 12183  002B4E  6E4A               	movwf	xtoa@c,c
 12184  002B50  6A4B               	clrf	xtoa@c+1,c
 12185                           
 12186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 12187  002B52  BE4B               	btfsc	xtoa@c+1,7,c
 12188  002B54  D008               	goto	l9017
 12189  002B56  504B               	movf	xtoa@c+1,w,c
 12190  002B58  E104               	bnz	u10130
 12191  002B5A  0E0A               	movlw	10
 12192  002B5C  5C4A               	subwf	xtoa@c,w,c
 12193  002B5E  A0D8               	btfss	status,0,c
 12194  002B60  D002               	goto	l9017
 12195  002B62                     u10130:
 12196  002B62  0E57               	movlw	87
 12197  002B64  D001               	goto	L22
 12198  002B66                     l9017:
 12199  002B66  0E30               	movlw	48
 12200  002B68                     L22:
 12201  002B68  244A               	addwf	xtoa@c,w,c
 12202  002B6A  6E4A               	movwf	xtoa@c,c
 12203  002B6C  0E00               	movlw	0
 12204  002B6E  204B               	addwfc	xtoa@c+1,w,c
 12205  002B70  6E4B               	movwf	xtoa@c+1,c
 12206                           
 12207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 12208  002B72  0EBF               	movlw	191
 12209  002B74  6E30               	movwf	??_xtoa& (0+255),c
 12210  002B76  0EFF               	movlw	255
 12211  002B78  6E31               	movwf	(??_xtoa+1)& (0+255),c
 12212  002B7A  502F               	movf	xtoa@x,w,c
 12213  002B7C  6E32               	movwf	(??_xtoa+2)& (0+255),c
 12214  002B7E  6A33               	clrf	(??_xtoa+3)& (0+255),c
 12215  002B80  5030               	movf	??_xtoa,w,c
 12216  002B82  2632               	addwf	??_xtoa+2,f,c
 12217  002B84  5031               	movf	??_xtoa+1,w,c
 12218  002B86  2233               	addwfc	??_xtoa+3,f,c
 12219  002B88  5033               	movf	??_xtoa+3,w,c
 12220  002B8A  E106               	bnz	u10140
 12221  002B8C  0E1A               	movlw	26
 12222  002B8E  5C32               	subwf	??_xtoa+2,w,c
 12223  002B90  B0D8               	btfsc	status,0,c
 12224  002B92  D002               	goto	u10140
 12225  002B94  0E01               	movlw	1
 12226  002B96  D001               	goto	u10150
 12227  002B98                     u10140:
 12228  002B98  0E00               	movlw	0
 12229  002B9A                     u10150:
 12230  002B9A  6E38               	movwf	_xtoa$1501,c
 12231  002B9C  6A39               	clrf	_xtoa$1501+1,c
 12232  002B9E  5038               	movf	_xtoa$1501,w,c
 12233  002BA0  1039               	iorwf	_xtoa$1501+1,w,c
 12234  002BA2  B4D8               	btfsc	status,2,c
 12235  002BA4  D027               	goto	l9031
 12236  002BA6  0E9F               	movlw	159
 12237  002BA8  6E30               	movwf	??_xtoa& (0+255),c
 12238  002BAA  0EFF               	movlw	255
 12239  002BAC  6E31               	movwf	(??_xtoa+1)& (0+255),c
 12240  002BAE  0E20               	movlw	32
 12241  002BB0  104A               	iorwf	xtoa@c,w,c
 12242  002BB2  6E32               	movwf	(??_xtoa+2)& (0+255),c
 12243  002BB4  0E00               	movlw	0
 12244  002BB6  104B               	iorwf	xtoa@c+1,w,c
 12245  002BB8  6E33               	movwf	(??_xtoa+3)& (0+255),c
 12246  002BBA  5030               	movf	??_xtoa,w,c
 12247  002BBC  2632               	addwf	??_xtoa+2,f,c
 12248  002BBE  5031               	movf	??_xtoa+1,w,c
 12249  002BC0  2233               	addwfc	??_xtoa+3,f,c
 12250  002BC2  5033               	movf	??_xtoa+3,w,c
 12251  002BC4  E106               	bnz	u10170
 12252  002BC6  0E1A               	movlw	26
 12253  002BC8  5C32               	subwf	??_xtoa+2,w,c
 12254  002BCA  B0D8               	btfsc	status,0,c
 12255  002BCC  D002               	goto	u10170
 12256  002BCE  0E01               	movlw	1
 12257  002BD0  D001               	goto	u10180
 12258  002BD2                     u10170:
 12259  002BD2  0E00               	movlw	0
 12260  002BD4                     u10180:
 12261  002BD4  6E3A               	movwf	_xtoa$1502,c
 12262  002BD6  6A3B               	clrf	_xtoa$1502+1,c
 12263  002BD8  503A               	movf	_xtoa$1502,w,c
 12264  002BDA  103B               	iorwf	_xtoa$1502+1,w,c
 12265  002BDC  B4D8               	btfsc	status,2,c
 12266  002BDE  D00A               	goto	l9031
 12267                           
 12268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 12269  002BE0  C04A  F00C         	movff	xtoa@c,toupper@c
 12270  002BE4  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
 12271  002BE8  ECB2  F022         	call	_toupper	;wreg free
 12272  002BEC  C00C  F04A         	movff	?_toupper,xtoa@c
 12273  002BF0  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
 12274  002BF4                     l9031:
 12275                           
 12276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 12277  002BF4  0E73               	movlw	low _dbuf
 12278  002BF6  2448               	addwf	xtoa@i,w,c
 12279  002BF8  6ED9               	movwf	fsr2l,c
 12280  002BFA  0E01               	movlw	high _dbuf
 12281  002BFC  2049               	addwfc	xtoa@i+1,w,c
 12282  002BFE  6EDA               	movwf	fsr2h,c
 12283  002C00  C04A  FFDF         	movff	xtoa@c,indf2
 12284                           
 12285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 12286  002C04  063C               	decf	xtoa@p,f,c
 12287  002C06  A0D8               	btfss	status,0,c
 12288  002C08  063D               	decf	xtoa@p+1,f,c
 12289                           
 12290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 12291  002C0A  063E               	decf	xtoa@w,f,c
 12292  002C0C  A0D8               	btfss	status,0,c
 12293  002C0E  063F               	decf	xtoa@w+1,f,c
 12294                           
 12295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 12296  002C10  C040  F030         	movff	xtoa@n,??_xtoa
 12297  002C14  C041  F031         	movff	xtoa@n+1,??_xtoa+1
 12298  002C18  C042  F032         	movff	xtoa@n+2,??_xtoa+2
 12299  002C1C  C043  F033         	movff	xtoa@n+3,??_xtoa+3
 12300  002C20  C044  F034         	movff	xtoa@n+4,??_xtoa+4
 12301  002C24  C045  F035         	movff	xtoa@n+5,??_xtoa+5
 12302  002C28  C046  F036         	movff	xtoa@n+6,??_xtoa+6
 12303  002C2C  C047  F037         	movff	xtoa@n+7,??_xtoa+7
 12304  002C30  0E05               	movlw	5
 12305  002C32  D009               	goto	u10200
 12306  002C34                     u10205:
 12307  002C34  90D8               	bcf	status,0,c
 12308  002C36  3237               	rrcf	??_xtoa+7,f,c
 12309  002C38  3236               	rrcf	??_xtoa+6,f,c
 12310  002C3A  3235               	rrcf	??_xtoa+5,f,c
 12311  002C3C  3234               	rrcf	??_xtoa+4,f,c
 12312  002C3E  3233               	rrcf	??_xtoa+3,f,c
 12313  002C40  3232               	rrcf	??_xtoa+2,f,c
 12314  002C42  3231               	rrcf	??_xtoa+1,f,c
 12315  002C44  3230               	rrcf	??_xtoa,f,c
 12316  002C46                     u10200:
 12317  002C46  2EE8               	decfsz	wreg,f,c
 12318  002C48  D7F5               	goto	u10205
 12319  002C4A  C030  F040         	movff	??_xtoa,xtoa@n
 12320  002C4E  C031  F041         	movff	??_xtoa+1,xtoa@n+1
 12321  002C52  C032  F042         	movff	??_xtoa+2,xtoa@n+2
 12322  002C56  C033  F043         	movff	??_xtoa+3,xtoa@n+3
 12323  002C5A  C034  F044         	movff	??_xtoa+4,xtoa@n+4
 12324  002C5E  C035  F045         	movff	??_xtoa+5,xtoa@n+5
 12325  002C62  C036  F046         	movff	??_xtoa+6,xtoa@n+6
 12326  002C66  C037  F047         	movff	??_xtoa+7,xtoa@n+7
 12327  002C6A                     l9039:
 12328                           
 12329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12330  002C6A  BE49               	btfsc	xtoa@i+1,7,c
 12331  002C6C  D020               	goto	u10250
 12332  002C6E  5049               	movf	xtoa@i+1,w,c
 12333  002C70  E104               	bnz	u10210
 12334  002C72  0E02               	movlw	2
 12335  002C74  5C48               	subwf	xtoa@i,w,c
 12336  002C76  A0D8               	btfss	status,0,c
 12337  002C78  D01A               	goto	u10250
 12338  002C7A                     u10210:
 12339  002C7A  5040               	movf	xtoa@n,w,c
 12340  002C7C  1041               	iorwf	xtoa@n+1,w,c
 12341  002C7E  1042               	iorwf	xtoa@n+2,w,c
 12342  002C80  1043               	iorwf	xtoa@n+3,w,c
 12343  002C82  1044               	iorwf	xtoa@n+4,w,c
 12344  002C84  1045               	iorwf	xtoa@n+5,w,c
 12345  002C86  1046               	iorwf	xtoa@n+6,w,c
 12346  002C88  1047               	iorwf	xtoa@n+7,w,c
 12347  002C8A  A4D8               	btfss	status,2,c
 12348  002C8C  D75B               	goto	l9009
 12349  002C8E  BE3D               	btfsc	xtoa@p+1,7,c
 12350  002C90  D005               	goto	u10230
 12351  002C92  503D               	movf	xtoa@p+1,w,c
 12352  002C94  E102               	bnz	u10231
 12353  002C96  043C               	decf	xtoa@p,w,c
 12354  002C98  B0D8               	btfsc	status,0,c
 12355  002C9A                     u10231:
 12356  002C9A  D754               	goto	l9009
 12357  002C9C                     u10230:
 12358  002C9C  BE3F               	btfsc	xtoa@w+1,7,c
 12359  002C9E  D007               	goto	u10250
 12360  002CA0  503F               	movf	xtoa@w+1,w,c
 12361  002CA2  E103               	bnz	u10240
 12362  002CA4  043E               	decf	xtoa@w,w,c
 12363  002CA6  A0D8               	btfss	status,0,c
 12364  002CA8  D002               	goto	u10250
 12365  002CAA                     u10240:
 12366  002CAA  B278               	btfsc	_flags,1,c
 12367  002CAC  D74B               	goto	l9009
 12368  002CAE                     u10250:
 12369                           
 12370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 12371  002CAE  A878               	btfss	_flags,4,c
 12372  002CB0  D016               	goto	l9055
 12373                           
 12374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 12375  002CB2  0648               	decf	xtoa@i,f,c
 12376  002CB4  A0D8               	btfss	status,0,c
 12377  002CB6  0649               	decf	xtoa@i+1,f,c
 12378                           
 12379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 12380  002CB8  0E73               	movlw	low _dbuf
 12381  002CBA  2448               	addwf	xtoa@i,w,c
 12382  002CBC  6ED9               	movwf	fsr2l,c
 12383  002CBE  0E01               	movlw	high _dbuf
 12384  002CC0  2049               	addwfc	xtoa@i+1,w,c
 12385  002CC2  6EDA               	movwf	fsr2h,c
 12386  002CC4  C02F  FFDF         	movff	xtoa@x,indf2
 12387                           
 12388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 12389  002CC8  0648               	decf	xtoa@i,f,c
 12390  002CCA  A0D8               	btfss	status,0,c
 12391  002CCC  0649               	decf	xtoa@i+1,f,c
 12392                           
 12393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 12394  002CCE  0E73               	movlw	low _dbuf
 12395  002CD0  2448               	addwf	xtoa@i,w,c
 12396  002CD2  6ED9               	movwf	fsr2l,c
 12397  002CD4  0E01               	movlw	high _dbuf
 12398  002CD6  2049               	addwfc	xtoa@i+1,w,c
 12399  002CD8  6EDA               	movwf	fsr2h,c
 12400  002CDA  0E30               	movlw	48
 12401  002CDC  6EDF               	movwf	indf2,c
 12402  002CDE                     l9055:
 12403                           
 12404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 12405  002CDE  C025  F01A         	movff	xtoa@fp,pad@fp
 12406  002CE2  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 12407  002CE6  0E73               	movlw	low _dbuf
 12408  002CE8  2448               	addwf	xtoa@i,w,c
 12409  002CEA  6E1C               	movwf	pad@buf,c
 12410  002CEC  0E01               	movlw	high _dbuf
 12411  002CEE  2049               	addwfc	xtoa@i+1,w,c
 12412  002CF0  6E1D               	movwf	pad@buf+1,c
 12413  002CF2  C03E  F01E         	movff	xtoa@w,pad@p
 12414  002CF6  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 12415  002CFA  EC04  F020         	call	_pad	;wreg free
 12416  002CFE  C01A  F025         	movff	?_pad,?_xtoa
 12417  002D02  C01B  F026         	movff	?_pad+1,?_xtoa+1
 12418  002D06  0012               	return		;funcret
 12419  002D08                     __end_of_xtoa:
 12420                           	opt callstack 0
 12421                           
 12422 ;; *************** function _toupper *****************
 12423 ;; Defined at:
 12424 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;  c               2   11[COMRAM] int 
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  2   11[COMRAM] int 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2, status,0
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;Total ram usage:        8 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    3
 12445 ;; This function calls:
 12446 ;;		_islower
 12447 ;; This function is called by:
 12448 ;;		_xtoa
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text44
 12453  004564                     __ptext44:
 12454                           	opt callstack 0
 12455  004564                     _toupper:
 12456                           	opt callstack 23
 12457                           
 12458                           ;incstack = 0
 12459  004564  0E9F               	movlw	159
 12460  004566  6E0E               	movwf	??_toupper& (0+255),c
 12461  004568  0EFF               	movlw	255
 12462  00456A  6E0F               	movwf	(??_toupper+1)& (0+255),c
 12463  00456C  C00C  F010         	movff	toupper@c,??_toupper+2
 12464  004570  C00D  F011         	movff	toupper@c+1,??_toupper+3
 12465  004574  500E               	movf	??_toupper,w,c
 12466  004576  2610               	addwf	??_toupper+2,f,c
 12467  004578  500F               	movf	??_toupper+1,w,c
 12468  00457A  2211               	addwfc	??_toupper+3,f,c
 12469  00457C  5011               	movf	??_toupper+3,w,c
 12470  00457E  E106               	bnz	u8780
 12471  004580  0E1A               	movlw	26
 12472  004582  5C10               	subwf	??_toupper+2,w,c
 12473  004584  B0D8               	btfsc	status,0,c
 12474  004586  D002               	goto	u8780
 12475  004588  0E01               	movlw	1
 12476  00458A  D001               	goto	u8790
 12477  00458C                     u8780:
 12478  00458C  0E00               	movlw	0
 12479  00458E                     u8790:
 12480  00458E  6E12               	movwf	_toupper$2097,c
 12481  004590  6A13               	clrf	_toupper$2097+1,c
 12482  004592  5012               	movf	_toupper$2097,w,c
 12483  004594  1013               	iorwf	_toupper$2097+1,w,c
 12484  004596  B4D8               	btfsc	status,2,c
 12485  004598  D005               	goto	l1611
 12486  00459A  0E5F               	movlw	95
 12487  00459C  140C               	andwf	toupper@c,w,c
 12488  00459E  6E0C               	movwf	?_toupper,c
 12489  0045A0  6A0D               	clrf	?_toupper+1,c
 12490  0045A2  0012               	return	
 12491  0045A4                     l1611:
 12492  0045A4  C00C  F00C         	movff	toupper@c,?_toupper
 12493  0045A8  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 12494  0045AC  0012               	return		;funcret
 12495  0045AE                     __end_of_toupper:
 12496                           	opt callstack 0
 12497                           
 12498 ;; *************** function _islower *****************
 12499 ;; Defined at:
 12500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  c               2    5[COMRAM] int 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;		None
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  2    5[COMRAM] int 
 12507 ;; Registers used:
 12508 ;;		wreg, status,2, status,0
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;Total ram usage:        6 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:    2
 12521 ;; This function calls:
 12522 ;;		Nothing
 12523 ;; This function is called by:
 12524 ;;		_toupper
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           	psect	text45
 12529  00479E                     __ptext45:
 12530                           	opt callstack 0
 12531  00479E                     _islower:
 12532                           	opt callstack 23
 12533                           
 12534                           ;incstack = 0
 12535  00479E  0E9F               	movlw	159
 12536  0047A0  6E08               	movwf	??_islower& (0+255),c
 12537  0047A2  0EFF               	movlw	255
 12538  0047A4  6E09               	movwf	(??_islower+1)& (0+255),c
 12539  0047A6  C006  F00A         	movff	islower@c,??_islower+2
 12540  0047AA  C007  F00B         	movff	islower@c+1,??_islower+3
 12541  0047AE  5008               	movf	??_islower,w,c
 12542  0047B0  260A               	addwf	??_islower+2,f,c
 12543  0047B2  5009               	movf	??_islower+1,w,c
 12544  0047B4  220B               	addwfc	??_islower+3,f,c
 12545  0047B6  500B               	movf	??_islower+3,w,c
 12546  0047B8  E106               	bnz	u8670
 12547  0047BA  0E1A               	movlw	26
 12548  0047BC  5C0A               	subwf	??_islower+2,w,c
 12549  0047BE  B0D8               	btfsc	status,0,c
 12550  0047C0  D002               	goto	u8670
 12551  0047C2  0E01               	movlw	1
 12552  0047C4  D001               	goto	u8680
 12553  0047C6                     u8670:
 12554  0047C6  0E00               	movlw	0
 12555  0047C8                     u8680:
 12556  0047C8  6E06               	movwf	?_islower,c
 12557  0047CA  6A07               	clrf	?_islower+1,c
 12558  0047CC  0012               	return		;funcret
 12559  0047CE                     __end_of_islower:
 12560                           	opt callstack 0
 12561                           
 12562 ;; *************** function _isupper *****************
 12563 ;; Defined at:
 12564 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;  c               2    5[COMRAM] int 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  2    5[COMRAM] int 
 12571 ;; Registers used:
 12572 ;;		wreg, status,2, status,0
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;Total ram usage:        6 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:    2
 12585 ;; This function calls:
 12586 ;;		Nothing
 12587 ;; This function is called by:
 12588 ;;		_xtoa
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           	psect	text46
 12593  0047CE                     __ptext46:
 12594                           	opt callstack 0
 12595  0047CE                     _isupper:
 12596                           	opt callstack 24
 12597                           
 12598                           ;incstack = 0
 12599  0047CE  0EBF               	movlw	191
 12600  0047D0  6E08               	movwf	??_isupper& (0+255),c
 12601  0047D2  0EFF               	movlw	255
 12602  0047D4  6E09               	movwf	(??_isupper+1)& (0+255),c
 12603  0047D6  C006  F00A         	movff	isupper@c,??_isupper+2
 12604  0047DA  C007  F00B         	movff	isupper@c+1,??_isupper+3
 12605  0047DE  5008               	movf	??_isupper,w,c
 12606  0047E0  260A               	addwf	??_isupper+2,f,c
 12607  0047E2  5009               	movf	??_isupper+1,w,c
 12608  0047E4  220B               	addwfc	??_isupper+3,f,c
 12609  0047E6  500B               	movf	??_isupper+3,w,c
 12610  0047E8  E106               	bnz	u8740
 12611  0047EA  0E1A               	movlw	26
 12612  0047EC  5C0A               	subwf	??_isupper+2,w,c
 12613  0047EE  B0D8               	btfsc	status,0,c
 12614  0047F0  D002               	goto	u8740
 12615  0047F2  0E01               	movlw	1
 12616  0047F4  D001               	goto	u8750
 12617  0047F6                     u8740:
 12618  0047F6  0E00               	movlw	0
 12619  0047F8                     u8750:
 12620  0047F8  6E06               	movwf	?_isupper,c
 12621  0047FA  6A07               	clrf	?_isupper+1,c
 12622  0047FC  0012               	return		;funcret
 12623  0047FE                     __end_of_isupper:
 12624                           	opt callstack 0
 12625                           
 12626 ;; *************** function _isalpha *****************
 12627 ;; Defined at:
 12628 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;  c               2    5[COMRAM] int 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  2    5[COMRAM] int 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;Total ram usage:        6 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:    2
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_xtoa
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text47
 12657  004738                     __ptext47:
 12658                           	opt callstack 0
 12659  004738                     _isalpha:
 12660                           	opt callstack 24
 12661                           
 12662                           ;incstack = 0
 12663  004738  0E9F               	movlw	159
 12664  00473A  6E08               	movwf	??_isalpha& (0+255),c
 12665  00473C  0EFF               	movlw	255
 12666  00473E  6E09               	movwf	(??_isalpha+1)& (0+255),c
 12667  004740  0E20               	movlw	32
 12668  004742  1006               	iorwf	isalpha@c,w,c
 12669  004744  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 12670  004746  0E00               	movlw	0
 12671  004748  1007               	iorwf	isalpha@c+1,w,c
 12672  00474A  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 12673  00474C  5008               	movf	??_isalpha,w,c
 12674  00474E  260A               	addwf	??_isalpha+2,f,c
 12675  004750  5009               	movf	??_isalpha+1,w,c
 12676  004752  220B               	addwfc	??_isalpha+3,f,c
 12677  004754  500B               	movf	??_isalpha+3,w,c
 12678  004756  E106               	bnz	u8760
 12679  004758  0E1A               	movlw	26
 12680  00475A  5C0A               	subwf	??_isalpha+2,w,c
 12681  00475C  B0D8               	btfsc	status,0,c
 12682  00475E  D002               	goto	u8760
 12683  004760  0E01               	movlw	1
 12684  004762  D001               	goto	u8770
 12685  004764                     u8760:
 12686  004764  0E00               	movlw	0
 12687  004766                     u8770:
 12688  004766  6E06               	movwf	?_isalpha,c
 12689  004768  6A07               	clrf	?_isalpha+1,c
 12690  00476A  0012               	return		;funcret
 12691  00476C                     __end_of_isalpha:
 12692                           	opt callstack 0
 12693                           
 12694 ;; *************** function _utoa *****************
 12695 ;; Defined at:
 12696 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12697 ;; Parameters:    Size  Location     Type
 12698 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12699 ;;		 -> NULL(0), 
 12700 ;;  d               8   38[COMRAM] unsigned long long 
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;  n               8   58[COMRAM] unsigned long long 
 12703 ;;  i               2   66[COMRAM] int 
 12704 ;;  w               2   56[COMRAM] int 
 12705 ;;  p               2   54[COMRAM] int 
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  2   36[COMRAM] int 
 12708 ;; Registers used:
 12709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12715 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12716 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12717 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12718 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12719 ;;Total ram usage:       32 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    9
 12722 ;; This function calls:
 12723 ;;		___lodiv
 12724 ;;		___lomod
 12725 ;;		_pad
 12726 ;; This function is called by:
 12727 ;;		_vfpfcnvrt
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           	psect	text48
 12732  002F10                     __ptext48:
 12733                           	opt callstack 0
 12734  002F10                     _utoa:
 12735                           	opt callstack 18
 12736                           
 12737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12738                           
 12739                           ;incstack = 0
 12740  002F10  0100               	movlb	0	; () banked
 12741  002F12  AFE4               	btfss	(_prec+1)& (0+255),7,b
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12745  002F14  9278               	bcf	_flags,1,c
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12749  002F16  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 12750  002F18  D005               	goto	u10040
 12751  002F1A  51E4               	movf	(_prec+1)& (0+255),w,b
 12752  002F1C  E108               	bnz	l737
 12753  002F1E  05E3               	decf	_prec& (0+255),w,b
 12754  002F20  B0D8               	btfsc	status,0,c
 12755  002F22  D005               	goto	l737
 12756  002F24                     u10040:
 12757                           
 12758                           ; BSR set to: 0
 12759  002F24  0E00               	movlw	0
 12760  002F26  6E38               	movwf	utoa@p+1,c
 12761  002F28  0E01               	movlw	1
 12762  002F2A  6E37               	movwf	utoa@p,c
 12763  002F2C  D004               	goto	l739
 12764  002F2E                     l737:
 12765                           
 12766                           ; BSR set to: 0
 12767  002F2E  C0E3  F037         	movff	_prec,utoa@p
 12768  002F32  C0E4  F038         	movff	_prec+1,utoa@p+1
 12769  002F36                     l739:
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12773  002F36  C0E1  F039         	movff	_width,utoa@w
 12774  002F3A  C0E2  F03A         	movff	_width+1,utoa@w+1
 12775                           
 12776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12777  002F3E  C027  F03B         	movff	utoa@d,utoa@n
 12778  002F42  C028  F03C         	movff	utoa@d+1,utoa@n+1
 12779  002F46  C029  F03D         	movff	utoa@d+2,utoa@n+2
 12780  002F4A  C02A  F03E         	movff	utoa@d+3,utoa@n+3
 12781  002F4E  C02B  F03F         	movff	utoa@d+4,utoa@n+4
 12782  002F52  C02C  F040         	movff	utoa@d+5,utoa@n+5
 12783  002F56  C02D  F041         	movff	utoa@d+6,utoa@n+6
 12784  002F5A  C02E  F042         	movff	utoa@d+7,utoa@n+7
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12788  002F5E  0E00               	movlw	0
 12789  002F60  6E44               	movwf	utoa@i+1,c
 12790  002F62  0E1F               	movlw	31
 12791  002F64  6E43               	movwf	utoa@i,c
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12795  002F66  0E00               	movlw	0
 12796  002F68  0101               	movlb	1	; () banked
 12797  002F6A  6F92               	movwf	(_dbuf+31)& (0+255),b
 12798                           
 12799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12800  002F6C  D076               	goto	l8979
 12801  002F6E                     l8969:
 12802                           
 12803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12804  002F6E  0643               	decf	utoa@i,f,c
 12805  002F70  A0D8               	btfss	status,0,c
 12806  002F72  0644               	decf	utoa@i+1,f,c
 12807                           
 12808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12809  002F74  0E73               	movlw	low _dbuf
 12810  002F76  2443               	addwf	utoa@i,w,c
 12811  002F78  6ED9               	movwf	fsr2l,c
 12812  002F7A  0E01               	movlw	high _dbuf
 12813  002F7C  2044               	addwfc	utoa@i+1,w,c
 12814  002F7E  6EDA               	movwf	fsr2h,c
 12815  002F80  C03B  F006         	movff	utoa@n,___lomod@dividend
 12816  002F84  C03C  F007         	movff	utoa@n+1,___lomod@dividend+1
 12817  002F88  C03D  F008         	movff	utoa@n+2,___lomod@dividend+2
 12818  002F8C  C03E  F009         	movff	utoa@n+3,___lomod@dividend+3
 12819  002F90  C03F  F00A         	movff	utoa@n+4,___lomod@dividend+4
 12820  002F94  C040  F00B         	movff	utoa@n+5,___lomod@dividend+5
 12821  002F98  C041  F00C         	movff	utoa@n+6,___lomod@dividend+6
 12822  002F9C  C042  F00D         	movff	utoa@n+7,___lomod@dividend+7
 12823  002FA0  0E0A               	movlw	10
 12824  002FA2  6E0E               	movwf	___lomod@divisor,c
 12825  002FA4  0E00               	movlw	0
 12826  002FA6  6E0F               	movwf	___lomod@divisor+1,c
 12827  002FA8  0E00               	movlw	0
 12828  002FAA  6E10               	movwf	___lomod@divisor+2,c
 12829  002FAC  0E00               	movlw	0
 12830  002FAE  6E11               	movwf	___lomod@divisor+3,c
 12831  002FB0  0E00               	movlw	0
 12832  002FB2  6E12               	movwf	___lomod@divisor+4,c
 12833  002FB4  0E00               	movlw	0
 12834  002FB6  6E13               	movwf	___lomod@divisor+5,c
 12835  002FB8  0E00               	movlw	0
 12836  002FBA  6E14               	movwf	___lomod@divisor+6,c
 12837  002FBC  0E00               	movlw	0
 12838  002FBE  6E15               	movwf	___lomod@divisor+7,c
 12839  002FC0  EC0C  F01F         	call	___lomod	;wreg free
 12840  002FC4  C006  F02F         	movff	?___lomod,??_utoa
 12841  002FC8  C007  F030         	movff	?___lomod+1,??_utoa+1
 12842  002FCC  C008  F031         	movff	?___lomod+2,??_utoa+2
 12843  002FD0  C009  F032         	movff	?___lomod+3,??_utoa+3
 12844  002FD4  C00A  F033         	movff	?___lomod+4,??_utoa+4
 12845  002FD8  C00B  F034         	movff	?___lomod+5,??_utoa+5
 12846  002FDC  C00C  F035         	movff	?___lomod+6,??_utoa+6
 12847  002FE0  C00D  F036         	movff	?___lomod+7,??_utoa+7
 12848  002FE4  502F               	movf	??_utoa,w,c
 12849  002FE6  0F30               	addlw	48
 12850  002FE8  6EDF               	movwf	indf2,c
 12851                           
 12852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12853  002FEA  0637               	decf	utoa@p,f,c
 12854  002FEC  A0D8               	btfss	status,0,c
 12855  002FEE  0638               	decf	utoa@p+1,f,c
 12856                           
 12857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12858  002FF0  0639               	decf	utoa@w,f,c
 12859  002FF2  A0D8               	btfss	status,0,c
 12860  002FF4  063A               	decf	utoa@w+1,f,c
 12861                           
 12862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12863  002FF6  C03B  F006         	movff	utoa@n,___lodiv@dividend
 12864  002FFA  C03C  F007         	movff	utoa@n+1,___lodiv@dividend+1
 12865  002FFE  C03D  F008         	movff	utoa@n+2,___lodiv@dividend+2
 12866  003002  C03E  F009         	movff	utoa@n+3,___lodiv@dividend+3
 12867  003006  C03F  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 12868  00300A  C040  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 12869  00300E  C041  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 12870  003012  C042  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 12871  003016  0E0A               	movlw	10
 12872  003018  6E0E               	movwf	___lodiv@divisor,c
 12873  00301A  0E00               	movlw	0
 12874  00301C  6E0F               	movwf	___lodiv@divisor+1,c
 12875  00301E  0E00               	movlw	0
 12876  003020  6E10               	movwf	___lodiv@divisor+2,c
 12877  003022  0E00               	movlw	0
 12878  003024  6E11               	movwf	___lodiv@divisor+3,c
 12879  003026  0E00               	movlw	0
 12880  003028  6E12               	movwf	___lodiv@divisor+4,c
 12881  00302A  0E00               	movlw	0
 12882  00302C  6E13               	movwf	___lodiv@divisor+5,c
 12883  00302E  0E00               	movlw	0
 12884  003030  6E14               	movwf	___lodiv@divisor+6,c
 12885  003032  0E00               	movlw	0
 12886  003034  6E15               	movwf	___lodiv@divisor+7,c
 12887  003036  ECE2  F01D         	call	___lodiv	;wreg free
 12888  00303A  C006  F03B         	movff	?___lodiv,utoa@n
 12889  00303E  C007  F03C         	movff	?___lodiv+1,utoa@n+1
 12890  003042  C008  F03D         	movff	?___lodiv+2,utoa@n+2
 12891  003046  C009  F03E         	movff	?___lodiv+3,utoa@n+3
 12892  00304A  C00A  F03F         	movff	?___lodiv+4,utoa@n+4
 12893  00304E  C00B  F040         	movff	?___lodiv+5,utoa@n+5
 12894  003052  C00C  F041         	movff	?___lodiv+6,utoa@n+6
 12895  003056  C00D  F042         	movff	?___lodiv+7,utoa@n+7
 12896  00305A                     l8979:
 12897                           
 12898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12899  00305A  5043               	movf	utoa@i,w,c
 12900  00305C  1044               	iorwf	utoa@i+1,w,c
 12901  00305E  B4D8               	btfsc	status,2,c
 12902  003060  D01A               	goto	u10090
 12903  003062  503B               	movf	utoa@n,w,c
 12904  003064  103C               	iorwf	utoa@n+1,w,c
 12905  003066  103D               	iorwf	utoa@n+2,w,c
 12906  003068  103E               	iorwf	utoa@n+3,w,c
 12907  00306A  103F               	iorwf	utoa@n+4,w,c
 12908  00306C  1040               	iorwf	utoa@n+5,w,c
 12909  00306E  1041               	iorwf	utoa@n+6,w,c
 12910  003070  1042               	iorwf	utoa@n+7,w,c
 12911  003072  A4D8               	btfss	status,2,c
 12912  003074  D77C               	goto	l8969
 12913  003076  BE38               	btfsc	utoa@p+1,7,c
 12914  003078  D005               	goto	u10070
 12915  00307A  5038               	movf	utoa@p+1,w,c
 12916  00307C  E102               	bnz	u10071
 12917  00307E  0437               	decf	utoa@p,w,c
 12918  003080  B0D8               	btfsc	status,0,c
 12919  003082                     u10071:
 12920  003082  D775               	goto	l8969
 12921  003084                     u10070:
 12922  003084  BE3A               	btfsc	utoa@w+1,7,c
 12923  003086  D007               	goto	u10090
 12924  003088  503A               	movf	utoa@w+1,w,c
 12925  00308A  E103               	bnz	u10080
 12926  00308C  0439               	decf	utoa@w,w,c
 12927  00308E  A0D8               	btfss	status,0,c
 12928  003090  D002               	goto	u10090
 12929  003092                     u10080:
 12930  003092  B278               	btfsc	_flags,1,c
 12931  003094  D76C               	goto	l8969
 12932  003096                     u10090:
 12933                           
 12934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12935  003096  C025  F01A         	movff	utoa@fp,pad@fp
 12936  00309A  C026  F01B         	movff	utoa@fp+1,pad@fp+1
 12937  00309E  0E73               	movlw	low _dbuf
 12938  0030A0  2443               	addwf	utoa@i,w,c
 12939  0030A2  6E1C               	movwf	pad@buf,c
 12940  0030A4  0E01               	movlw	high _dbuf
 12941  0030A6  2044               	addwfc	utoa@i+1,w,c
 12942  0030A8  6E1D               	movwf	pad@buf+1,c
 12943  0030AA  C039  F01E         	movff	utoa@w,pad@p
 12944  0030AE  C03A  F01F         	movff	utoa@w+1,pad@p+1
 12945  0030B2  EC04  F020         	call	_pad	;wreg free
 12946  0030B6  C01A  F025         	movff	?_pad,?_utoa
 12947  0030BA  C01B  F026         	movff	?_pad+1,?_utoa+1
 12948  0030BE  0012               	return		;funcret
 12949  0030C0                     __end_of_utoa:
 12950                           	opt callstack 0
 12951                           
 12952 ;; *************** function ___lomod *****************
 12953 ;; Defined at:
 12954 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  dividend        8    5[COMRAM] unsigned long long 
 12957 ;;  divisor         8   13[COMRAM] unsigned long long 
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;  counter         1   21[COMRAM] unsigned char 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  8    5[COMRAM] unsigned long long 
 12962 ;; Registers used:
 12963 ;;		wreg, status,2, status,0
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:       17 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    2
 12976 ;; This function calls:
 12977 ;;		Nothing
 12978 ;; This function is called by:
 12979 ;;		_utoa
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text49
 12984  003E18                     __ptext49:
 12985                           	opt callstack 0
 12986  003E18                     ___lomod:
 12987                           	opt callstack 24
 12988                           
 12989                           ;incstack = 0
 12990  003E18  500E               	movf	___lomod@divisor,w,c
 12991  003E1A  100F               	iorwf	___lomod@divisor+1,w,c
 12992  003E1C  1010               	iorwf	___lomod@divisor+2,w,c
 12993  003E1E  1011               	iorwf	___lomod@divisor+3,w,c
 12994  003E20  1012               	iorwf	___lomod@divisor+4,w,c
 12995  003E22  1013               	iorwf	___lomod@divisor+5,w,c
 12996  003E24  1014               	iorwf	___lomod@divisor+6,w,c
 12997  003E26  1015               	iorwf	___lomod@divisor+7,w,c
 12998  003E28  B4D8               	btfsc	status,2,c
 12999  003E2A  D03C               	goto	l1277
 13000  003E2C  0E01               	movlw	1
 13001  003E2E  6E16               	movwf	___lomod@counter,c
 13002  003E30  D00A               	goto	l8745
 13003  003E32                     l8743:
 13004  003E32  90D8               	bcf	status,0,c
 13005  003E34  360E               	rlcf	___lomod@divisor,f,c
 13006  003E36  360F               	rlcf	___lomod@divisor+1,f,c
 13007  003E38  3610               	rlcf	___lomod@divisor+2,f,c
 13008  003E3A  3611               	rlcf	___lomod@divisor+3,f,c
 13009  003E3C  3612               	rlcf	___lomod@divisor+4,f,c
 13010  003E3E  3613               	rlcf	___lomod@divisor+5,f,c
 13011  003E40  3614               	rlcf	___lomod@divisor+6,f,c
 13012  003E42  3615               	rlcf	___lomod@divisor+7,f,c
 13013  003E44  2A16               	incf	___lomod@counter,f,c
 13014  003E46                     l8745:
 13015  003E46  AE15               	btfss	___lomod@divisor+7,7,c
 13016  003E48  D7F4               	goto	l8743
 13017  003E4A                     u9550:
 13018  003E4A  500E               	movf	___lomod@divisor,w,c
 13019  003E4C  5C06               	subwf	___lomod@dividend,w,c
 13020  003E4E  500F               	movf	___lomod@divisor+1,w,c
 13021  003E50  5807               	subwfb	___lomod@dividend+1,w,c
 13022  003E52  5010               	movf	___lomod@divisor+2,w,c
 13023  003E54  5808               	subwfb	___lomod@dividend+2,w,c
 13024  003E56  5011               	movf	___lomod@divisor+3,w,c
 13025  003E58  5809               	subwfb	___lomod@dividend+3,w,c
 13026  003E5A  5012               	movf	___lomod@divisor+4,w,c
 13027  003E5C  580A               	subwfb	___lomod@dividend+4,w,c
 13028  003E5E  5013               	movf	___lomod@divisor+5,w,c
 13029  003E60  580B               	subwfb	___lomod@dividend+5,w,c
 13030  003E62  5014               	movf	___lomod@divisor+6,w,c
 13031  003E64  580C               	subwfb	___lomod@dividend+6,w,c
 13032  003E66  5015               	movf	___lomod@divisor+7,w,c
 13033  003E68  580D               	subwfb	___lomod@dividend+7,w,c
 13034  003E6A  A0D8               	btfss	status,0,c
 13035  003E6C  D010               	goto	l8751
 13036  003E6E  500E               	movf	___lomod@divisor,w,c
 13037  003E70  5E06               	subwf	___lomod@dividend,f,c
 13038  003E72  500F               	movf	___lomod@divisor+1,w,c
 13039  003E74  5A07               	subwfb	___lomod@dividend+1,f,c
 13040  003E76  5010               	movf	___lomod@divisor+2,w,c
 13041  003E78  5A08               	subwfb	___lomod@dividend+2,f,c
 13042  003E7A  5011               	movf	___lomod@divisor+3,w,c
 13043  003E7C  5A09               	subwfb	___lomod@dividend+3,f,c
 13044  003E7E  5012               	movf	___lomod@divisor+4,w,c
 13045  003E80  5A0A               	subwfb	___lomod@dividend+4,f,c
 13046  003E82  5013               	movf	___lomod@divisor+5,w,c
 13047  003E84  5A0B               	subwfb	___lomod@dividend+5,f,c
 13048  003E86  5014               	movf	___lomod@divisor+6,w,c
 13049  003E88  5A0C               	subwfb	___lomod@dividend+6,f,c
 13050  003E8A  5015               	movf	___lomod@divisor+7,w,c
 13051  003E8C  5A0D               	subwfb	___lomod@dividend+7,f,c
 13052  003E8E                     l8751:
 13053  003E8E  90D8               	bcf	status,0,c
 13054  003E90  3215               	rrcf	___lomod@divisor+7,f,c
 13055  003E92  3214               	rrcf	___lomod@divisor+6,f,c
 13056  003E94  3213               	rrcf	___lomod@divisor+5,f,c
 13057  003E96  3212               	rrcf	___lomod@divisor+4,f,c
 13058  003E98  3211               	rrcf	___lomod@divisor+3,f,c
 13059  003E9A  3210               	rrcf	___lomod@divisor+2,f,c
 13060  003E9C  320F               	rrcf	___lomod@divisor+1,f,c
 13061  003E9E  320E               	rrcf	___lomod@divisor,f,c
 13062  003EA0  2E16               	decfsz	___lomod@counter,f,c
 13063  003EA2  D7D3               	goto	u9550
 13064  003EA4                     l1277:
 13065  003EA4  C006  F006         	movff	___lomod@dividend,?___lomod
 13066  003EA8  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 13067  003EAC  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 13068  003EB0  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 13069  003EB4  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 13070  003EB8  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 13071  003EBC  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 13072  003EC0  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 13073  003EC4  0012               	return		;funcret
 13074  003EC6                     __end_of___lomod:
 13075                           	opt callstack 0
 13076                           
 13077 ;; *************** function ___lodiv *****************
 13078 ;; Defined at:
 13079 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;  dividend        8    5[COMRAM] unsigned long long 
 13082 ;;  divisor         8   13[COMRAM] unsigned long long 
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;  quotient        8   21[COMRAM] unsigned long long 
 13085 ;;  counter         1   29[COMRAM] unsigned char 
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  8    5[COMRAM] unsigned long long 
 13088 ;; Registers used:
 13089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13090 ;; Tracked objects:
 13091 ;;		On entry : 0/0
 13092 ;;		On exit  : 0/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13095 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13098 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13099 ;;Total ram usage:       25 bytes
 13100 ;; Hardware stack levels used:    1
 13101 ;; Hardware stack levels required when called:    2
 13102 ;; This function calls:
 13103 ;;		Nothing
 13104 ;; This function is called by:
 13105 ;;		_utoa
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           	psect	text50
 13110  003BC4                     __ptext50:
 13111                           	opt callstack 0
 13112  003BC4                     ___lodiv:
 13113                           	opt callstack 24
 13114                           
 13115                           ;incstack = 0
 13116  003BC4  EE20  F016         	lfsr	2,___lodiv@quotient
 13117  003BC8  0E07               	movlw	7
 13118  003BCA                     u9501:
 13119  003BCA  6ADE               	clrf	postinc2,c
 13120  003BCC  06E8               	decf	wreg,f,c
 13121  003BCE  E2FD               	bc	u9501
 13122  003BD0  500E               	movf	___lodiv@divisor,w,c
 13123  003BD2  100F               	iorwf	___lodiv@divisor+1,w,c
 13124  003BD4  1010               	iorwf	___lodiv@divisor+2,w,c
 13125  003BD6  1011               	iorwf	___lodiv@divisor+3,w,c
 13126  003BD8  1012               	iorwf	___lodiv@divisor+4,w,c
 13127  003BDA  1013               	iorwf	___lodiv@divisor+5,w,c
 13128  003BDC  1014               	iorwf	___lodiv@divisor+6,w,c
 13129  003BDE  1015               	iorwf	___lodiv@divisor+7,w,c
 13130  003BE0  B4D8               	btfsc	status,2,c
 13131  003BE2  D046               	goto	l1267
 13132  003BE4  0E01               	movlw	1
 13133  003BE6  6E1E               	movwf	___lodiv@counter,c
 13134  003BE8  D00A               	goto	l8725
 13135  003BEA                     l8723:
 13136  003BEA  90D8               	bcf	status,0,c
 13137  003BEC  360E               	rlcf	___lodiv@divisor,f,c
 13138  003BEE  360F               	rlcf	___lodiv@divisor+1,f,c
 13139  003BF0  3610               	rlcf	___lodiv@divisor+2,f,c
 13140  003BF2  3611               	rlcf	___lodiv@divisor+3,f,c
 13141  003BF4  3612               	rlcf	___lodiv@divisor+4,f,c
 13142  003BF6  3613               	rlcf	___lodiv@divisor+5,f,c
 13143  003BF8  3614               	rlcf	___lodiv@divisor+6,f,c
 13144  003BFA  3615               	rlcf	___lodiv@divisor+7,f,c
 13145  003BFC  2A1E               	incf	___lodiv@counter,f,c
 13146  003BFE                     l8725:
 13147  003BFE  AE15               	btfss	___lodiv@divisor+7,7,c
 13148  003C00  D7F4               	goto	l8723
 13149  003C02                     u9520:
 13150  003C02  90D8               	bcf	status,0,c
 13151  003C04  3616               	rlcf	___lodiv@quotient,f,c
 13152  003C06  3617               	rlcf	___lodiv@quotient+1,f,c
 13153  003C08  3618               	rlcf	___lodiv@quotient+2,f,c
 13154  003C0A  3619               	rlcf	___lodiv@quotient+3,f,c
 13155  003C0C  361A               	rlcf	___lodiv@quotient+4,f,c
 13156  003C0E  361B               	rlcf	___lodiv@quotient+5,f,c
 13157  003C10  361C               	rlcf	___lodiv@quotient+6,f,c
 13158  003C12  361D               	rlcf	___lodiv@quotient+7,f,c
 13159  003C14  500E               	movf	___lodiv@divisor,w,c
 13160  003C16  5C06               	subwf	___lodiv@dividend,w,c
 13161  003C18  500F               	movf	___lodiv@divisor+1,w,c
 13162  003C1A  5807               	subwfb	___lodiv@dividend+1,w,c
 13163  003C1C  5010               	movf	___lodiv@divisor+2,w,c
 13164  003C1E  5808               	subwfb	___lodiv@dividend+2,w,c
 13165  003C20  5011               	movf	___lodiv@divisor+3,w,c
 13166  003C22  5809               	subwfb	___lodiv@dividend+3,w,c
 13167  003C24  5012               	movf	___lodiv@divisor+4,w,c
 13168  003C26  580A               	subwfb	___lodiv@dividend+4,w,c
 13169  003C28  5013               	movf	___lodiv@divisor+5,w,c
 13170  003C2A  580B               	subwfb	___lodiv@dividend+5,w,c
 13171  003C2C  5014               	movf	___lodiv@divisor+6,w,c
 13172  003C2E  580C               	subwfb	___lodiv@dividend+6,w,c
 13173  003C30  5015               	movf	___lodiv@divisor+7,w,c
 13174  003C32  580D               	subwfb	___lodiv@dividend+7,w,c
 13175  003C34  A0D8               	btfss	status,0,c
 13176  003C36  D011               	goto	l8735
 13177  003C38  500E               	movf	___lodiv@divisor,w,c
 13178  003C3A  5E06               	subwf	___lodiv@dividend,f,c
 13179  003C3C  500F               	movf	___lodiv@divisor+1,w,c
 13180  003C3E  5A07               	subwfb	___lodiv@dividend+1,f,c
 13181  003C40  5010               	movf	___lodiv@divisor+2,w,c
 13182  003C42  5A08               	subwfb	___lodiv@dividend+2,f,c
 13183  003C44  5011               	movf	___lodiv@divisor+3,w,c
 13184  003C46  5A09               	subwfb	___lodiv@dividend+3,f,c
 13185  003C48  5012               	movf	___lodiv@divisor+4,w,c
 13186  003C4A  5A0A               	subwfb	___lodiv@dividend+4,f,c
 13187  003C4C  5013               	movf	___lodiv@divisor+5,w,c
 13188  003C4E  5A0B               	subwfb	___lodiv@dividend+5,f,c
 13189  003C50  5014               	movf	___lodiv@divisor+6,w,c
 13190  003C52  5A0C               	subwfb	___lodiv@dividend+6,f,c
 13191  003C54  5015               	movf	___lodiv@divisor+7,w,c
 13192  003C56  5A0D               	subwfb	___lodiv@dividend+7,f,c
 13193  003C58  8016               	bsf	___lodiv@quotient,0,c
 13194  003C5A                     l8735:
 13195  003C5A  90D8               	bcf	status,0,c
 13196  003C5C  3215               	rrcf	___lodiv@divisor+7,f,c
 13197  003C5E  3214               	rrcf	___lodiv@divisor+6,f,c
 13198  003C60  3213               	rrcf	___lodiv@divisor+5,f,c
 13199  003C62  3212               	rrcf	___lodiv@divisor+4,f,c
 13200  003C64  3211               	rrcf	___lodiv@divisor+3,f,c
 13201  003C66  3210               	rrcf	___lodiv@divisor+2,f,c
 13202  003C68  320F               	rrcf	___lodiv@divisor+1,f,c
 13203  003C6A  320E               	rrcf	___lodiv@divisor,f,c
 13204  003C6C  2E1E               	decfsz	___lodiv@counter,f,c
 13205  003C6E  D7C9               	goto	u9520
 13206  003C70                     l1267:
 13207  003C70  C016  F006         	movff	___lodiv@quotient,?___lodiv
 13208  003C74  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 13209  003C78  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 13210  003C7C  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 13211  003C80  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 13212  003C84  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 13213  003C88  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 13214  003C8C  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 13215  003C90  0012               	return		;funcret
 13216  003C92                     __end_of___lodiv:
 13217                           	opt callstack 0
 13218                           
 13219 ;; *************** function _strncmp *****************
 13220 ;; Defined at:
 13221 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 13224 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 13225 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 13226 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 13227 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 13228 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 13229 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 13230 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 13231 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 13232 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 13233 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 13234 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 13235 ;;		 -> STR_84(3), STR_80(3), STR_75(3), STR_70(3), 
 13236 ;;		 -> STR_66(3), 
 13237 ;;  n               2    9[COMRAM] unsigned int 
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;  r               2   14[COMRAM] PTR const unsigned char 
 13240 ;;		 -> STR_84(3), STR_80(3), STR_75(3), STR_70(3), 
 13241 ;;		 -> STR_66(3), 
 13242 ;;  l               2   12[COMRAM] PTR const unsigned char 
 13243 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 13244 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 13245 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 13246 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 13247 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 13248 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 13249 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 13250 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 13251 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 13252 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 13253 ;; Return value:  Size  Location     Type
 13254 ;;                  2    5[COMRAM] int 
 13255 ;; Registers used:
 13256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13257 ;; Tracked objects:
 13258 ;;		On entry : 0/0
 13259 ;;		On exit  : 0/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13265 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13266 ;;Total ram usage:       11 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; Hardware stack levels required when called:    2
 13269 ;; This function calls:
 13270 ;;		Nothing
 13271 ;; This function is called by:
 13272 ;;		_vfpfcnvrt
 13273 ;; This function uses a non-reentrant model
 13274 ;;
 13275                           
 13276                           	psect	text51
 13277  003EC6                     __ptext51:
 13278                           	opt callstack 0
 13279  003EC6                     _strncmp:
 13280                           	opt callstack 25
 13281                           
 13282                           ;incstack = 0
 13283  003EC6  C006  F00D         	movff	strncmp@_l,strncmp@l
 13284  003ECA  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 13285  003ECE  C008  F00F         	movff	strncmp@_r,strncmp@r
 13286  003ED2  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 13287  003ED6  060A               	decf	strncmp@n,f,c
 13288  003ED8  A0D8               	btfss	status,0,c
 13289  003EDA  060B               	decf	strncmp@n+1,f,c
 13290  003EDC  280A               	incf	strncmp@n,w,c
 13291  003EDE  E10F               	bnz	l9109
 13292  003EE0  280B               	incf	strncmp@n+1,w,c
 13293  003EE2  A4D8               	btfss	status,2,c
 13294  003EE4  D00C               	goto	l9109
 13295  003EE6  0E00               	movlw	0
 13296  003EE8  6E07               	movwf	?_strncmp+1,c
 13297  003EEA  0E00               	movlw	0
 13298  003EEC  6E06               	movwf	?_strncmp,c
 13299  003EEE  0012               	return	
 13300  003EF0                     l9107:
 13301  003EF0  4A0D               	infsnz	strncmp@l,f,c
 13302  003EF2  2A0E               	incf	strncmp@l+1,f,c
 13303  003EF4  4A0F               	infsnz	strncmp@r,f,c
 13304  003EF6  2A10               	incf	strncmp@r+1,f,c
 13305  003EF8  060A               	decf	strncmp@n,f,c
 13306  003EFA  A0D8               	btfss	status,0,c
 13307  003EFC  060B               	decf	strncmp@n+1,f,c
 13308  003EFE                     l9109:
 13309  003EFE  C00D  FFF6         	movff	strncmp@l,tblptrl
 13310  003F02  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13311  003F06                     	if	0	;tblptru may be non-zero
 13312  003F06                     	endif
 13313  003F06                     	if	0	;tblptru may be non-zero
 13314  003F06                     	endif
 13315  003F06  0008               	tblrd		*
 13316  003F08  50F5               	movf	tablat,w,c
 13317  003F0A  0900               	iorlw	0
 13318  003F0C  B4D8               	btfsc	status,2,c
 13319  003F0E  D01D               	goto	u10380
 13320  003F10  C00F  FFF6         	movff	strncmp@r,tblptrl
 13321  003F14  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13322  003F18                     	if	0	;tblptru may be non-zero
 13323  003F18                     	endif
 13324  003F18                     	if	0	;tblptru may be non-zero
 13325  003F18                     	endif
 13326  003F18  0008               	tblrd		*
 13327  003F1A  50F5               	movf	tablat,w,c
 13328  003F1C  0900               	iorlw	0
 13329  003F1E  B4D8               	btfsc	status,2,c
 13330  003F20  D014               	goto	u10380
 13331  003F22  500A               	movf	strncmp@n,w,c
 13332  003F24  100B               	iorwf	strncmp@n+1,w,c
 13333  003F26  B4D8               	btfsc	status,2,c
 13334  003F28  D010               	goto	u10380
 13335  003F2A  C00D  FFF6         	movff	strncmp@l,tblptrl
 13336  003F2E  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13337  003F32                     	if	0	;tblptru may be non-zero
 13338  003F32                     	endif
 13339  003F32                     	if	0	;tblptru may be non-zero
 13340  003F32                     	endif
 13341  003F32  0008               	tblrd		*
 13342  003F34  CFF5 F00C          	movff	tablat,??_strncmp
 13343  003F38  C00F  FFF6         	movff	strncmp@r,tblptrl
 13344  003F3C  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13345  003F40                     	if	0	;tblptru may be non-zero
 13346  003F40                     	endif
 13347  003F40                     	if	0	;tblptru may be non-zero
 13348  003F40                     	endif
 13349  003F40  0008               	tblrd		*
 13350  003F42  50F5               	movf	tablat,w,c
 13351  003F44  180C               	xorwf	??_strncmp,w,c
 13352  003F46  B4D8               	btfsc	status,2,c
 13353  003F48  D7D3               	goto	l9107
 13354  003F4A                     u10380:
 13355  003F4A  C00D  FFF6         	movff	strncmp@l,tblptrl
 13356  003F4E  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13357  003F52                     	if	0	;tblptru may be non-zero
 13358  003F52                     	endif
 13359  003F52                     	if	0	;tblptru may be non-zero
 13360  003F52                     	endif
 13361  003F52  0008               	tblrd		*
 13362  003F54  CFF5 F00C          	movff	tablat,??_strncmp
 13363  003F58  C00F  FFF6         	movff	strncmp@r,tblptrl
 13364  003F5C  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13365  003F60                     	if	0	;tblptru may be non-zero
 13366  003F60                     	endif
 13367  003F60                     	if	0	;tblptru may be non-zero
 13368  003F60                     	endif
 13369  003F60  0008               	tblrd		*
 13370  003F62  50F5               	movf	tablat,w,c
 13371  003F64  5C0C               	subwf	??_strncmp,w,c
 13372  003F66  6E06               	movwf	?_strncmp,c
 13373  003F68  6A07               	clrf	?_strncmp+1,c
 13374  003F6A  A0D8               	btfss	status,0,c
 13375  003F6C  0607               	decf	?_strncmp+1,f,c
 13376  003F6E  0012               	return		;funcret
 13377  003F70                     __end_of_strncmp:
 13378                           	opt callstack 0
 13379                           
 13380 ;; *************** function _stoa *****************
 13381 ;; Defined at:
 13382 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 13385 ;;		 -> NULL(0), 
 13386 ;;  s               2   20[COMRAM] PTR unsigned char 
 13387 ;;		 -> ?_printf(2), STR_62(2), STR_55(16), STR_53(14), 
 13388 ;;		 -> STR_51(11), STR_49(9), STR_47(16), STR_45(13), 
 13389 ;;		 -> STR_43(13), STR_41(9), STR_39(13), STR_37(14), 
 13390 ;;		 -> STR_35(10), STR_31(9), STR_20(14), STR_18(10), 
 13391 ;;		 -> STR_16(6), STR_14(7), STR_12(2), STR_11(6), 
 13392 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 13393 ;;		 -> STR_2(10), 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;  nuls            7   23[COMRAM] unsigned char [7]
 13396 ;;  l               2   38[COMRAM] int 
 13397 ;;  p               2   36[COMRAM] int 
 13398 ;;  cp              2   34[COMRAM] PTR unsigned char 
 13399 ;;		 -> ?_printf(2), stoa@nuls(7), STR_62(2), STR_55(16), 
 13400 ;;		 -> STR_53(14), STR_51(11), STR_49(9), STR_47(16), 
 13401 ;;		 -> STR_45(13), STR_43(13), STR_41(9), STR_39(13), 
 13402 ;;		 -> STR_37(14), STR_35(10), STR_31(9), STR_20(14), 
 13403 ;;		 -> STR_18(10), STR_16(6), STR_14(7), STR_12(2), 
 13404 ;;		 -> STR_11(6), STR_9(16), STR_7(14), STR_5(15), 
 13405 ;;		 -> STR_3(2), STR_2(10), 
 13406 ;;  w               2   32[COMRAM] int 
 13407 ;;  i               2   30[COMRAM] int 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  2   18[COMRAM] int 
 13410 ;; Registers used:
 13411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;Total ram usage:       22 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    7
 13424 ;; This function calls:
 13425 ;;		_fputc
 13426 ;;		_strlen
 13427 ;; This function is called by:
 13428 ;;		_vfpfcnvrt
 13429 ;; This function uses a non-reentrant model
 13430 ;;
 13431                           
 13432                           	psect	text52
 13433  003348                     __ptext52:
 13434                           	opt callstack 0
 13435  003348                     _stoa:
 13436                           	opt callstack 20
 13437                           
 13438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13439                           
 13440                           ;incstack = 0
 13441  003348  EE20  F0EA         	lfsr	2,stoa@F1144
 13442  00334C  EE10  F018         	lfsr	1,stoa@nuls
 13443  003350  0E06               	movlw	6
 13444  003352                     u9931:
 13445  003352  CFDB FFE3          	movff	plusw2,plusw1
 13446  003356  06E8               	decf	wreg,f,c
 13447  003358  E2FC               	bc	u9931
 13448                           
 13449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 13450  00335A  C015  F023         	movff	stoa@s,stoa@cp
 13451  00335E  C016  F024         	movff	stoa@s+1,stoa@cp+1
 13452                           
 13453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 13454  003362  5023               	movf	stoa@cp,w,c
 13455  003364  1024               	iorwf	stoa@cp+1,w,c
 13456  003366  A4D8               	btfss	status,2,c
 13457  003368  D004               	goto	l8923
 13458                           
 13459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 13460  00336A  0E18               	movlw	low stoa@nuls
 13461  00336C  6E23               	movwf	stoa@cp,c
 13462  00336E  0E00               	movlw	high stoa@nuls
 13463  003370  6E24               	movwf	stoa@cp+1,c
 13464  003372                     l8923:
 13465                           
 13466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 13467  003372  C023  F006         	movff	stoa@cp,strlen@s
 13468  003376  C024  F007         	movff	stoa@cp+1,strlen@s+1
 13469  00337A  EC3F  F023         	call	_strlen	;wreg free
 13470  00337E  C006  F027         	movff	?_strlen,stoa@l
 13471  003382  C007  F028         	movff	?_strlen+1,stoa@l+1
 13472                           
 13473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 13474  003386  C0E3  F025         	movff	_prec,stoa@p
 13475  00338A  C0E4  F026         	movff	_prec+1,stoa@p+1
 13476                           
 13477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 13478  00338E  BE26               	btfsc	stoa@p+1,7,c
 13479  003390  D00E               	goto	l718
 13480  003392  5027               	movf	stoa@l,w,c
 13481  003394  5C25               	subwf	stoa@p,w,c
 13482  003396  5026               	movf	stoa@p+1,w,c
 13483  003398  0A80               	xorlw	128
 13484  00339A  6E17               	movwf	??_stoa& (0+255),c
 13485  00339C  5028               	movf	stoa@l+1,w,c
 13486  00339E  0A80               	xorlw	128
 13487  0033A0  5817               	subwfb	??_stoa& (0+255),w,c
 13488  0033A2  B0D8               	btfsc	status,0,c
 13489  0033A4  D004               	goto	l718
 13490  0033A6  C025  F027         	movff	stoa@p,stoa@l
 13491  0033AA  C026  F028         	movff	stoa@p+1,stoa@l+1
 13492  0033AE                     l718:
 13493                           
 13494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 13495  0033AE  C027  F025         	movff	stoa@l,stoa@p
 13496  0033B2  C028  F026         	movff	stoa@l+1,stoa@p+1
 13497                           
 13498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 13499  0033B6  C0E1  F021         	movff	_width,stoa@w
 13500  0033BA  C0E2  F022         	movff	_width+1,stoa@w+1
 13501                           
 13502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 13503  0033BE  A078               	btfss	_flags,0,c
 13504  0033C0  D00D               	goto	l8937
 13505  0033C2  D016               	goto	u9980
 13506  0033C4                     l8933:
 13507                           
 13508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 13509  0033C4  0E00               	movlw	0
 13510  0033C6  6E0B               	movwf	fputc@c+1,c
 13511  0033C8  0E20               	movlw	32
 13512  0033CA  6E0A               	movwf	fputc@c,c
 13513  0033CC  C013  F00C         	movff	stoa@fp,fputc@fp
 13514  0033D0  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 13515  0033D4  EC0B  F021         	call	_fputc	;wreg free
 13516                           
 13517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 13518  0033D8  4A27               	infsnz	stoa@l,f,c
 13519  0033DA  2A28               	incf	stoa@l+1,f,c
 13520  0033DC                     l8937:
 13521                           
 13522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 13523  0033DC  5021               	movf	stoa@w,w,c
 13524  0033DE  5C27               	subwf	stoa@l,w,c
 13525  0033E0  5028               	movf	stoa@l+1,w,c
 13526  0033E2  0A80               	xorlw	128
 13527  0033E4  6E17               	movwf	??_stoa& (0+255),c
 13528  0033E6  5022               	movf	stoa@w+1,w,c
 13529  0033E8  0A80               	xorlw	128
 13530  0033EA  5817               	subwfb	??_stoa& (0+255),w,c
 13531  0033EC  A0D8               	btfss	status,0,c
 13532  0033EE  D7EA               	goto	l8933
 13533  0033F0                     u9980:
 13534                           
 13535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 13536  0033F0  0E00               	movlw	0
 13537  0033F2  6E20               	movwf	stoa@i+1,c
 13538  0033F4  0E00               	movlw	0
 13539  0033F6  6E1F               	movwf	stoa@i,c
 13540                           
 13541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13542  0033F8  D01F               	goto	l8947
 13543  0033FA                     l8941:
 13544                           
 13545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 13546  0033FA  C023  FFF6         	movff	stoa@cp,tblptrl
 13547  0033FE  C024  FFF7         	movff	stoa@cp+1,tblptrh
 13548  003402  0E00               	movlw	low (__mediumconst shr (0+16))
 13549  003404  6EF8               	movwf	tblptru,c
 13550  003406  0E0F               	movlw	(high __ramtop+-1)
 13551  003408  64F7               	cpfsgt	tblptrh,c
 13552  00340A  D003               	bra	u9997
 13553  00340C  0008               	tblrd		*
 13554  00340E  50F5               	movf	tablat,w,c
 13555  003410  D005               	bra	u9990
 13556  003412                     u9997:
 13557  003412  CFF6 FFE1          	movff	tblptrl,fsr1l
 13558  003416  CFF7 FFE2          	movff	tblptrh,fsr1h
 13559  00341A  50E7               	movf	indf1,w,c
 13560  00341C                     u9990:
 13561  00341C  6E17               	movwf	??_stoa& (0+255),c
 13562  00341E  5017               	movf	??_stoa,w,c
 13563  003420  6E0A               	movwf	fputc@c,c
 13564  003422  6A0B               	clrf	fputc@c+1,c
 13565  003424  C013  F00C         	movff	stoa@fp,fputc@fp
 13566  003428  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 13567  00342C  EC0B  F021         	call	_fputc	;wreg free
 13568                           
 13569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 13570  003430  4A23               	infsnz	stoa@cp,f,c
 13571  003432  2A24               	incf	stoa@cp+1,f,c
 13572                           
 13573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 13574  003434  4A1F               	infsnz	stoa@i,f,c
 13575  003436  2A20               	incf	stoa@i+1,f,c
 13576  003438                     l8947:
 13577                           
 13578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13579  003438  5025               	movf	stoa@p,w,c
 13580  00343A  5C1F               	subwf	stoa@i,w,c
 13581  00343C  5020               	movf	stoa@i+1,w,c
 13582  00343E  0A80               	xorlw	128
 13583  003440  6E17               	movwf	??_stoa& (0+255),c
 13584  003442  5026               	movf	stoa@p+1,w,c
 13585  003444  0A80               	xorlw	128
 13586  003446  5817               	subwfb	??_stoa& (0+255),w,c
 13587  003448  A0D8               	btfss	status,0,c
 13588  00344A  D7D7               	goto	l8941
 13589                           
 13590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 13591  00344C  B078               	btfsc	_flags,0,c
 13592  00344E  D00D               	goto	l8955
 13593  003450  D016               	goto	u10020
 13594  003452                     l8951:
 13595                           
 13596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 13597  003452  0E00               	movlw	0
 13598  003454  6E0B               	movwf	fputc@c+1,c
 13599  003456  0E20               	movlw	32
 13600  003458  6E0A               	movwf	fputc@c,c
 13601  00345A  C013  F00C         	movff	stoa@fp,fputc@fp
 13602  00345E  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 13603  003462  EC0B  F021         	call	_fputc	;wreg free
 13604                           
 13605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 13606  003466  4A27               	infsnz	stoa@l,f,c
 13607  003468  2A28               	incf	stoa@l+1,f,c
 13608  00346A                     l8955:
 13609                           
 13610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 13611  00346A  5021               	movf	stoa@w,w,c
 13612  00346C  5C27               	subwf	stoa@l,w,c
 13613  00346E  5028               	movf	stoa@l+1,w,c
 13614  003470  0A80               	xorlw	128
 13615  003472  6E17               	movwf	??_stoa& (0+255),c
 13616  003474  5022               	movf	stoa@w+1,w,c
 13617  003476  0A80               	xorlw	128
 13618  003478  5817               	subwfb	??_stoa& (0+255),w,c
 13619  00347A  A0D8               	btfss	status,0,c
 13620  00347C  D7EA               	goto	l8951
 13621  00347E                     u10020:
 13622                           
 13623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 13624                           
 13625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 13626  00347E  C027  F013         	movff	stoa@l,?_stoa
 13627  003482  C028  F014         	movff	stoa@l+1,?_stoa+1
 13628  003486  0012               	return		;funcret
 13629  003488                     __end_of_stoa:
 13630                           	opt callstack 0
 13631                           
 13632 ;; *************** function _dtoa *****************
 13633 ;; Defined at:
 13634 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13635 ;; Parameters:    Size  Location     Type
 13636 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 13637 ;;		 -> NULL(0), 
 13638 ;;  d               8   38[COMRAM] long long 
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;  n               8   62[COMRAM] long long 
 13641 ;;  i               2   70[COMRAM] int 
 13642 ;;  s               2   60[COMRAM] int 
 13643 ;;  w               2   58[COMRAM] int 
 13644 ;;  p               2   56[COMRAM] int 
 13645 ;; Return value:  Size  Location     Type
 13646 ;;                  2   36[COMRAM] int 
 13647 ;; Registers used:
 13648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13649 ;; Tracked objects:
 13650 ;;		On entry : 0/0
 13651 ;;		On exit  : 0/0
 13652 ;;		Unchanged: 0/0
 13653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13654 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13655 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13656 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13657 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13658 ;;Total ram usage:       36 bytes
 13659 ;; Hardware stack levels used:    1
 13660 ;; Hardware stack levels required when called:    9
 13661 ;; This function calls:
 13662 ;;		___aodiv
 13663 ;;		___aomod
 13664 ;;		_abs
 13665 ;;		_pad
 13666 ;; This function is called by:
 13667 ;;		_vfpfcnvrt
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text53
 13672  002896                     __ptext53:
 13673                           	opt callstack 0
 13674  002896                     _dtoa:
 13675                           	opt callstack 18
 13676                           
 13677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13678                           
 13679                           ;incstack = 0
 13680  002896  C027  F03F         	movff	dtoa@d,dtoa@n
 13681  00289A  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 13682  00289E  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 13683  0028A2  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 13684  0028A6  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 13685  0028AA  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 13686  0028AE  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 13687  0028B2  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 13688                           
 13689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13690  0028B6  AE46               	btfss	dtoa@n+7,7,c
 13691  0028B8  D002               	goto	u9780
 13692  0028BA  0E01               	movlw	1
 13693  0028BC  D001               	goto	u9790
 13694  0028BE                     u9780:
 13695  0028BE  0E00               	movlw	0
 13696  0028C0                     u9790:
 13697  0028C0  6E3D               	movwf	dtoa@s,c
 13698  0028C2  6A3E               	clrf	dtoa@s+1,c
 13699                           
 13700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13701  0028C4  503D               	movf	dtoa@s,w,c
 13702  0028C6  103E               	iorwf	dtoa@s+1,w,c
 13703  0028C8  B4D8               	btfsc	status,2,c
 13704  0028CA  D010               	goto	l8859
 13705                           
 13706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13707  0028CC  1E46               	comf	dtoa@n+7,f,c
 13708  0028CE  1E45               	comf	dtoa@n+6,f,c
 13709  0028D0  1E44               	comf	dtoa@n+5,f,c
 13710  0028D2  1E43               	comf	dtoa@n+4,f,c
 13711  0028D4  1E42               	comf	dtoa@n+3,f,c
 13712  0028D6  1E41               	comf	dtoa@n+2,f,c
 13713  0028D8  1E40               	comf	dtoa@n+1,f,c
 13714  0028DA  6C3F               	negf	dtoa@n,c
 13715  0028DC  0E00               	movlw	0
 13716  0028DE  2240               	addwfc	dtoa@n+1,f,c
 13717  0028E0  2241               	addwfc	dtoa@n+2,f,c
 13718  0028E2  2242               	addwfc	dtoa@n+3,f,c
 13719  0028E4  2243               	addwfc	dtoa@n+4,f,c
 13720  0028E6  2244               	addwfc	dtoa@n+5,f,c
 13721  0028E8  2245               	addwfc	dtoa@n+6,f,c
 13722  0028EA  2246               	addwfc	dtoa@n+7,f,c
 13723  0028EC                     l8859:
 13724                           
 13725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13726  0028EC  0100               	movlb	0	; () banked
 13727  0028EE  AFE4               	btfss	(_prec+1)& (0+255),7,b
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13731  0028F0  9278               	bcf	_flags,1,c
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13735  0028F2  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 13736  0028F4  D005               	goto	u9820
 13737  0028F6  51E4               	movf	(_prec+1)& (0+255),w,b
 13738  0028F8  E108               	bnz	l689
 13739  0028FA  05E3               	decf	_prec& (0+255),w,b
 13740  0028FC  B0D8               	btfsc	status,0,c
 13741  0028FE  D005               	goto	l689
 13742  002900                     u9820:
 13743                           
 13744                           ; BSR set to: 0
 13745  002900  0E00               	movlw	0
 13746  002902  6E3A               	movwf	dtoa@p+1,c
 13747  002904  0E01               	movlw	1
 13748  002906  6E39               	movwf	dtoa@p,c
 13749  002908  D004               	goto	l691
 13750  00290A                     l689:
 13751                           
 13752                           ; BSR set to: 0
 13753  00290A  C0E3  F039         	movff	_prec,dtoa@p
 13754  00290E  C0E4  F03A         	movff	_prec+1,dtoa@p+1
 13755  002912                     l691:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13759  002912  C0E1  F03B         	movff	_width,dtoa@w
 13760  002916  C0E2  F03C         	movff	_width+1,dtoa@w+1
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13764  00291A  503D               	movf	dtoa@s,w,c
 13765  00291C  103E               	iorwf	dtoa@s+1,w,c
 13766  00291E  A4D8               	btfss	status,2,c
 13767  002920  D002               	goto	u9840
 13768                           
 13769                           ; BSR set to: 0
 13770  002922  A478               	btfss	_flags,2,c
 13771  002924  D003               	goto	l8873
 13772  002926                     u9840:
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13776  002926  063B               	decf	dtoa@w,f,c
 13777  002928  A0D8               	btfss	status,0,c
 13778  00292A  063C               	decf	dtoa@w+1,f,c
 13779  00292C                     l8873:
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13783  00292C  0E00               	movlw	0
 13784  00292E  6E48               	movwf	dtoa@i+1,c
 13785  002930  0E1F               	movlw	31
 13786  002932  6E47               	movwf	dtoa@i,c
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13790  002934  0E00               	movlw	0
 13791  002936  0101               	movlb	1	; () banked
 13792  002938  6F92               	movwf	(_dbuf+31)& (0+255),b
 13793                           
 13794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13795  00293A  D07C               	goto	l8887
 13796  00293C                     l8877:
 13797                           
 13798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13799  00293C  0647               	decf	dtoa@i,f,c
 13800  00293E  A0D8               	btfss	status,0,c
 13801  002940  0648               	decf	dtoa@i+1,f,c
 13802                           
 13803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13804  002942  0E73               	movlw	low _dbuf
 13805  002944  2447               	addwf	dtoa@i,w,c
 13806  002946  6ED9               	movwf	fsr2l,c
 13807  002948  0E01               	movlw	high _dbuf
 13808  00294A  2048               	addwfc	dtoa@i+1,w,c
 13809  00294C  6EDA               	movwf	fsr2h,c
 13810  00294E  C03F  F006         	movff	dtoa@n,___aomod@dividend
 13811  002952  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 13812  002956  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 13813  00295A  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 13814  00295E  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 13815  002962  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 13816  002966  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 13817  00296A  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 13818  00296E  0E0A               	movlw	10
 13819  002970  6E0E               	movwf	___aomod@divisor,c
 13820  002972  0E00               	movlw	0
 13821  002974  6E0F               	movwf	___aomod@divisor+1,c
 13822  002976  0E00               	movlw	0
 13823  002978  6E10               	movwf	___aomod@divisor+2,c
 13824  00297A  0E00               	movlw	0
 13825  00297C  6E11               	movwf	___aomod@divisor+3,c
 13826  00297E  0E00               	movlw	0
 13827  002980  6E12               	movwf	___aomod@divisor+4,c
 13828  002982  0E00               	movlw	0
 13829  002984  6E13               	movwf	___aomod@divisor+5,c
 13830  002986  0E00               	movlw	0
 13831  002988  6E14               	movwf	___aomod@divisor+6,c
 13832  00298A  0E00               	movlw	0
 13833  00298C  6E15               	movwf	___aomod@divisor+7,c
 13834  00298E  EC79  F01B         	call	___aomod	;wreg free
 13835  002992  C006  F02F         	movff	?___aomod,??_dtoa
 13836  002996  C007  F030         	movff	?___aomod+1,??_dtoa+1
 13837  00299A  C008  F031         	movff	?___aomod+2,??_dtoa+2
 13838  00299E  C009  F032         	movff	?___aomod+3,??_dtoa+3
 13839  0029A2  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 13840  0029A6  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 13841  0029AA  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 13842  0029AE  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 13843  0029B2  C02F  F018         	movff	??_dtoa,abs@a
 13844  0029B6  C031  F019         	movff	??_dtoa+2,abs@a+1
 13845  0029BA  ECB6  F023         	call	_abs	;wreg free
 13846  0029BE  5018               	movf	?_abs,w,c
 13847  0029C0  0F30               	addlw	48
 13848  0029C2  6EDF               	movwf	indf2,c
 13849                           
 13850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13851  0029C4  0639               	decf	dtoa@p,f,c
 13852  0029C6  A0D8               	btfss	status,0,c
 13853  0029C8  063A               	decf	dtoa@p+1,f,c
 13854                           
 13855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13856  0029CA  063B               	decf	dtoa@w,f,c
 13857  0029CC  A0D8               	btfss	status,0,c
 13858  0029CE  063C               	decf	dtoa@w+1,f,c
 13859                           
 13860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13861  0029D0  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 13862  0029D4  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 13863  0029D8  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 13864  0029DC  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 13865  0029E0  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 13866  0029E4  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 13867  0029E8  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 13868  0029EC  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 13869  0029F0  0E0A               	movlw	10
 13870  0029F2  6E0E               	movwf	___aodiv@divisor,c
 13871  0029F4  0E00               	movlw	0
 13872  0029F6  6E0F               	movwf	___aodiv@divisor+1,c
 13873  0029F8  0E00               	movlw	0
 13874  0029FA  6E10               	movwf	___aodiv@divisor+2,c
 13875  0029FC  0E00               	movlw	0
 13876  0029FE  6E11               	movwf	___aodiv@divisor+3,c
 13877  002A00  0E00               	movlw	0
 13878  002A02  6E12               	movwf	___aodiv@divisor+4,c
 13879  002A04  0E00               	movlw	0
 13880  002A06  6E13               	movwf	___aodiv@divisor+5,c
 13881  002A08  0E00               	movlw	0
 13882  002A0A  6E14               	movwf	___aodiv@divisor+6,c
 13883  002A0C  0E00               	movlw	0
 13884  002A0E  6E15               	movwf	___aodiv@divisor+7,c
 13885  002A10  EC60  F018         	call	___aodiv	;wreg free
 13886  002A14  C006  F03F         	movff	?___aodiv,dtoa@n
 13887  002A18  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 13888  002A1C  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 13889  002A20  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 13890  002A24  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 13891  002A28  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 13892  002A2C  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 13893  002A30  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 13894  002A34                     l8887:
 13895                           
 13896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13897  002A34  BE48               	btfsc	dtoa@i+1,7,c
 13898  002A36  D01F               	goto	u9890
 13899  002A38  5048               	movf	dtoa@i+1,w,c
 13900  002A3A  E103               	bnz	u9850
 13901  002A3C  0447               	decf	dtoa@i,w,c
 13902  002A3E  A0D8               	btfss	status,0,c
 13903  002A40  D01A               	goto	u9890
 13904  002A42                     u9850:
 13905  002A42  503F               	movf	dtoa@n,w,c
 13906  002A44  1040               	iorwf	dtoa@n+1,w,c
 13907  002A46  1041               	iorwf	dtoa@n+2,w,c
 13908  002A48  1042               	iorwf	dtoa@n+3,w,c
 13909  002A4A  1043               	iorwf	dtoa@n+4,w,c
 13910  002A4C  1044               	iorwf	dtoa@n+5,w,c
 13911  002A4E  1045               	iorwf	dtoa@n+6,w,c
 13912  002A50  1046               	iorwf	dtoa@n+7,w,c
 13913  002A52  A4D8               	btfss	status,2,c
 13914  002A54  D773               	goto	l8877
 13915  002A56  BE3A               	btfsc	dtoa@p+1,7,c
 13916  002A58  D005               	goto	u9870
 13917  002A5A  503A               	movf	dtoa@p+1,w,c
 13918  002A5C  E102               	bnz	u9871
 13919  002A5E  0439               	decf	dtoa@p,w,c
 13920  002A60  B0D8               	btfsc	status,0,c
 13921  002A62                     u9871:
 13922  002A62  D76C               	goto	l8877
 13923  002A64                     u9870:
 13924  002A64  BE3C               	btfsc	dtoa@w+1,7,c
 13925  002A66  D007               	goto	u9890
 13926  002A68  503C               	movf	dtoa@w+1,w,c
 13927  002A6A  E103               	bnz	u9880
 13928  002A6C  043B               	decf	dtoa@w,w,c
 13929  002A6E  A0D8               	btfss	status,0,c
 13930  002A70  D002               	goto	u9890
 13931  002A72                     u9880:
 13932  002A72  B278               	btfsc	_flags,1,c
 13933  002A74  D763               	goto	l8877
 13934  002A76                     u9890:
 13935                           
 13936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13937  002A76  503D               	movf	dtoa@s,w,c
 13938  002A78  103E               	iorwf	dtoa@s+1,w,c
 13939  002A7A  A4D8               	btfss	status,2,c
 13940  002A7C  D002               	goto	u9910
 13941  002A7E  A478               	btfss	_flags,2,c
 13942  002A80  D017               	goto	l8911
 13943  002A82                     u9910:
 13944                           
 13945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13946  002A82  0647               	decf	dtoa@i,f,c
 13947  002A84  A0D8               	btfss	status,0,c
 13948  002A86  0648               	decf	dtoa@i+1,f,c
 13949                           
 13950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13951  002A88  503D               	movf	dtoa@s,w,c
 13952  002A8A  103E               	iorwf	dtoa@s+1,w,c
 13953  002A8C  A4D8               	btfss	status,2,c
 13954  002A8E  D004               	goto	l8907
 13955  002A90  0E00               	movlw	0
 13956  002A92  6E38               	movwf	_dtoa$1473+1,c
 13957  002A94  0E2B               	movlw	43
 13958  002A96  D003               	goto	L23
 13959  002A98                     l8907:
 13960  002A98  0E00               	movlw	0
 13961  002A9A  6E38               	movwf	_dtoa$1473+1,c
 13962  002A9C  0E2D               	movlw	45
 13963  002A9E                     L23:
 13964  002A9E  6E37               	movwf	_dtoa$1473,c
 13965  002AA0  0E73               	movlw	low _dbuf
 13966  002AA2  2447               	addwf	dtoa@i,w,c
 13967  002AA4  6ED9               	movwf	fsr2l,c
 13968  002AA6  0E01               	movlw	high _dbuf
 13969  002AA8  2048               	addwfc	dtoa@i+1,w,c
 13970  002AAA  6EDA               	movwf	fsr2h,c
 13971  002AAC  C037  FFDF         	movff	_dtoa$1473,indf2
 13972  002AB0                     l8911:
 13973                           
 13974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13975  002AB0  C025  F01A         	movff	dtoa@fp,pad@fp
 13976  002AB4  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 13977  002AB8  0E73               	movlw	low _dbuf
 13978  002ABA  2447               	addwf	dtoa@i,w,c
 13979  002ABC  6E1C               	movwf	pad@buf,c
 13980  002ABE  0E01               	movlw	high _dbuf
 13981  002AC0  2048               	addwfc	dtoa@i+1,w,c
 13982  002AC2  6E1D               	movwf	pad@buf+1,c
 13983  002AC4  C03B  F01E         	movff	dtoa@w,pad@p
 13984  002AC8  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 13985  002ACC  EC04  F020         	call	_pad	;wreg free
 13986  002AD0  C01A  F025         	movff	?_pad,?_dtoa
 13987  002AD4  C01B  F026         	movff	?_pad+1,?_dtoa+1
 13988  002AD8  0012               	return		;funcret
 13989  002ADA                     __end_of_dtoa:
 13990                           	opt callstack 0
 13991                           
 13992 ;; *************** function _abs *****************
 13993 ;; Defined at:
 13994 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  a               2   23[COMRAM] int 
 13997 ;; Auto vars:     Size  Location     Type
 13998 ;;		None
 13999 ;; Return value:  Size  Location     Type
 14000 ;;                  2   23[COMRAM] int 
 14001 ;; Registers used:
 14002 ;;		wreg, status,2, status,0
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;Total ram usage:        4 bytes
 14013 ;; Hardware stack levels used:    1
 14014 ;; Hardware stack levels required when called:    2
 14015 ;; This function calls:
 14016 ;;		Nothing
 14017 ;; This function is called by:
 14018 ;;		_tirePositioning
 14019 ;;		_opErrorCorrectionDegrees
 14020 ;;		_dtoa
 14021 ;; This function uses a non-reentrant model
 14022 ;;
 14023                           
 14024                           	psect	text54
 14025  00476C                     __ptext54:
 14026                           	opt callstack 0
 14027  00476C                     _abs:
 14028                           	opt callstack 24
 14029                           
 14030                           ;incstack = 0
 14031  00476C  BE19               	btfsc	abs@a+1,7,c
 14032  00476E  D005               	goto	u8690
 14033  004770  5019               	movf	abs@a+1,w,c
 14034  004772  E110               	bnz	l1504
 14035  004774  0418               	decf	abs@a,w,c
 14036  004776  B0D8               	btfsc	status,0,c
 14037  004778  D00D               	goto	l1504
 14038  00477A                     u8690:
 14039  00477A  C018  F01A         	movff	abs@a,??_abs
 14040  00477E  C019  F01B         	movff	abs@a+1,??_abs+1
 14041  004782  1E1A               	comf	??_abs,f,c
 14042  004784  1E1B               	comf	??_abs+1,f,c
 14043  004786  4A1A               	infsnz	??_abs,f,c
 14044  004788  2A1B               	incf	??_abs+1,f,c
 14045  00478A  C01A  F018         	movff	??_abs,?_abs
 14046  00478E  C01B  F019         	movff	??_abs+1,?_abs+1
 14047  004792  0012               	return	
 14048  004794                     l1504:
 14049  004794  C018  F018         	movff	abs@a,?_abs
 14050  004798  C019  F019         	movff	abs@a+1,?_abs+1
 14051  00479C  0012               	return		;funcret
 14052  00479E                     __end_of_abs:
 14053                           	opt callstack 0
 14054                           
 14055 ;; *************** function ___aomod *****************
 14056 ;; Defined at:
 14057 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;  dividend        8    5[COMRAM] long long 
 14060 ;;  divisor         8   13[COMRAM] long long 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  sign            1   22[COMRAM] unsigned char 
 14063 ;;  counter         1   21[COMRAM] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  8    5[COMRAM] long long 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, status,0
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14073 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;Total ram usage:       18 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; Hardware stack levels required when called:    2
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_dtoa
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text55
 14088  0036F2                     __ptext55:
 14089                           	opt callstack 0
 14090  0036F2                     ___aomod:
 14091                           	opt callstack 24
 14092                           
 14093                           ;incstack = 0
 14094  0036F2  0E00               	movlw	0
 14095  0036F4  6E17               	movwf	___aomod@sign,c
 14096  0036F6  AE0D               	btfss	___aomod@dividend+7,7,c
 14097  0036F8  D012               	goto	l8355
 14098  0036FA  1E0D               	comf	___aomod@dividend+7,f,c
 14099  0036FC  1E0C               	comf	___aomod@dividend+6,f,c
 14100  0036FE  1E0B               	comf	___aomod@dividend+5,f,c
 14101  003700  1E0A               	comf	___aomod@dividend+4,f,c
 14102  003702  1E09               	comf	___aomod@dividend+3,f,c
 14103  003704  1E08               	comf	___aomod@dividend+2,f,c
 14104  003706  1E07               	comf	___aomod@dividend+1,f,c
 14105  003708  6C06               	negf	___aomod@dividend,c
 14106  00370A  0E00               	movlw	0
 14107  00370C  2207               	addwfc	___aomod@dividend+1,f,c
 14108  00370E  2208               	addwfc	___aomod@dividend+2,f,c
 14109  003710  2209               	addwfc	___aomod@dividend+3,f,c
 14110  003712  220A               	addwfc	___aomod@dividend+4,f,c
 14111  003714  220B               	addwfc	___aomod@dividend+5,f,c
 14112  003716  220C               	addwfc	___aomod@dividend+6,f,c
 14113  003718  220D               	addwfc	___aomod@dividend+7,f,c
 14114  00371A  0E01               	movlw	1
 14115  00371C  6E17               	movwf	___aomod@sign,c
 14116  00371E                     l8355:
 14117  00371E  AE15               	btfss	___aomod@divisor+7,7,c
 14118  003720  D010               	goto	l8359
 14119  003722  1E15               	comf	___aomod@divisor+7,f,c
 14120  003724  1E14               	comf	___aomod@divisor+6,f,c
 14121  003726  1E13               	comf	___aomod@divisor+5,f,c
 14122  003728  1E12               	comf	___aomod@divisor+4,f,c
 14123  00372A  1E11               	comf	___aomod@divisor+3,f,c
 14124  00372C  1E10               	comf	___aomod@divisor+2,f,c
 14125  00372E  1E0F               	comf	___aomod@divisor+1,f,c
 14126  003730  6C0E               	negf	___aomod@divisor,c
 14127  003732  0E00               	movlw	0
 14128  003734  220F               	addwfc	___aomod@divisor+1,f,c
 14129  003736  2210               	addwfc	___aomod@divisor+2,f,c
 14130  003738  2211               	addwfc	___aomod@divisor+3,f,c
 14131  00373A  2212               	addwfc	___aomod@divisor+4,f,c
 14132  00373C  2213               	addwfc	___aomod@divisor+5,f,c
 14133  00373E  2214               	addwfc	___aomod@divisor+6,f,c
 14134  003740  2215               	addwfc	___aomod@divisor+7,f,c
 14135  003742                     l8359:
 14136  003742  500E               	movf	___aomod@divisor,w,c
 14137  003744  100F               	iorwf	___aomod@divisor+1,w,c
 14138  003746  1010               	iorwf	___aomod@divisor+2,w,c
 14139  003748  1011               	iorwf	___aomod@divisor+3,w,c
 14140  00374A  1012               	iorwf	___aomod@divisor+4,w,c
 14141  00374C  1013               	iorwf	___aomod@divisor+5,w,c
 14142  00374E  1014               	iorwf	___aomod@divisor+6,w,c
 14143  003750  1015               	iorwf	___aomod@divisor+7,w,c
 14144  003752  B4D8               	btfsc	status,2,c
 14145  003754  D03C               	goto	l8375
 14146  003756  0E01               	movlw	1
 14147  003758  6E16               	movwf	___aomod@counter,c
 14148  00375A  D00A               	goto	l8365
 14149  00375C                     l8363:
 14150  00375C  90D8               	bcf	status,0,c
 14151  00375E  360E               	rlcf	___aomod@divisor,f,c
 14152  003760  360F               	rlcf	___aomod@divisor+1,f,c
 14153  003762  3610               	rlcf	___aomod@divisor+2,f,c
 14154  003764  3611               	rlcf	___aomod@divisor+3,f,c
 14155  003766  3612               	rlcf	___aomod@divisor+4,f,c
 14156  003768  3613               	rlcf	___aomod@divisor+5,f,c
 14157  00376A  3614               	rlcf	___aomod@divisor+6,f,c
 14158  00376C  3615               	rlcf	___aomod@divisor+7,f,c
 14159  00376E  2A16               	incf	___aomod@counter,f,c
 14160  003770                     l8365:
 14161  003770  AE15               	btfss	___aomod@divisor+7,7,c
 14162  003772  D7F4               	goto	l8363
 14163  003774                     u8930:
 14164  003774  500E               	movf	___aomod@divisor,w,c
 14165  003776  5C06               	subwf	___aomod@dividend,w,c
 14166  003778  500F               	movf	___aomod@divisor+1,w,c
 14167  00377A  5807               	subwfb	___aomod@dividend+1,w,c
 14168  00377C  5010               	movf	___aomod@divisor+2,w,c
 14169  00377E  5808               	subwfb	___aomod@dividend+2,w,c
 14170  003780  5011               	movf	___aomod@divisor+3,w,c
 14171  003782  5809               	subwfb	___aomod@dividend+3,w,c
 14172  003784  5012               	movf	___aomod@divisor+4,w,c
 14173  003786  580A               	subwfb	___aomod@dividend+4,w,c
 14174  003788  5013               	movf	___aomod@divisor+5,w,c
 14175  00378A  580B               	subwfb	___aomod@dividend+5,w,c
 14176  00378C  5014               	movf	___aomod@divisor+6,w,c
 14177  00378E  580C               	subwfb	___aomod@dividend+6,w,c
 14178  003790  5015               	movf	___aomod@divisor+7,w,c
 14179  003792  580D               	subwfb	___aomod@dividend+7,w,c
 14180  003794  A0D8               	btfss	status,0,c
 14181  003796  D010               	goto	l8371
 14182  003798  500E               	movf	___aomod@divisor,w,c
 14183  00379A  5E06               	subwf	___aomod@dividend,f,c
 14184  00379C  500F               	movf	___aomod@divisor+1,w,c
 14185  00379E  5A07               	subwfb	___aomod@dividend+1,f,c
 14186  0037A0  5010               	movf	___aomod@divisor+2,w,c
 14187  0037A2  5A08               	subwfb	___aomod@dividend+2,f,c
 14188  0037A4  5011               	movf	___aomod@divisor+3,w,c
 14189  0037A6  5A09               	subwfb	___aomod@dividend+3,f,c
 14190  0037A8  5012               	movf	___aomod@divisor+4,w,c
 14191  0037AA  5A0A               	subwfb	___aomod@dividend+4,f,c
 14192  0037AC  5013               	movf	___aomod@divisor+5,w,c
 14193  0037AE  5A0B               	subwfb	___aomod@dividend+5,f,c
 14194  0037B0  5014               	movf	___aomod@divisor+6,w,c
 14195  0037B2  5A0C               	subwfb	___aomod@dividend+6,f,c
 14196  0037B4  5015               	movf	___aomod@divisor+7,w,c
 14197  0037B6  5A0D               	subwfb	___aomod@dividend+7,f,c
 14198  0037B8                     l8371:
 14199  0037B8  90D8               	bcf	status,0,c
 14200  0037BA  3215               	rrcf	___aomod@divisor+7,f,c
 14201  0037BC  3214               	rrcf	___aomod@divisor+6,f,c
 14202  0037BE  3213               	rrcf	___aomod@divisor+5,f,c
 14203  0037C0  3212               	rrcf	___aomod@divisor+4,f,c
 14204  0037C2  3211               	rrcf	___aomod@divisor+3,f,c
 14205  0037C4  3210               	rrcf	___aomod@divisor+2,f,c
 14206  0037C6  320F               	rrcf	___aomod@divisor+1,f,c
 14207  0037C8  320E               	rrcf	___aomod@divisor,f,c
 14208  0037CA  2E16               	decfsz	___aomod@counter,f,c
 14209  0037CC  D7D3               	goto	u8930
 14210  0037CE                     l8375:
 14211  0037CE  5017               	movf	___aomod@sign,w,c
 14212  0037D0  B4D8               	btfsc	status,2,c
 14213  0037D2  D010               	goto	l8379
 14214  0037D4  1E0D               	comf	___aomod@dividend+7,f,c
 14215  0037D6  1E0C               	comf	___aomod@dividend+6,f,c
 14216  0037D8  1E0B               	comf	___aomod@dividend+5,f,c
 14217  0037DA  1E0A               	comf	___aomod@dividend+4,f,c
 14218  0037DC  1E09               	comf	___aomod@dividend+3,f,c
 14219  0037DE  1E08               	comf	___aomod@dividend+2,f,c
 14220  0037E0  1E07               	comf	___aomod@dividend+1,f,c
 14221  0037E2  6C06               	negf	___aomod@dividend,c
 14222  0037E4  0E00               	movlw	0
 14223  0037E6  2207               	addwfc	___aomod@dividend+1,f,c
 14224  0037E8  2208               	addwfc	___aomod@dividend+2,f,c
 14225  0037EA  2209               	addwfc	___aomod@dividend+3,f,c
 14226  0037EC  220A               	addwfc	___aomod@dividend+4,f,c
 14227  0037EE  220B               	addwfc	___aomod@dividend+5,f,c
 14228  0037F0  220C               	addwfc	___aomod@dividend+6,f,c
 14229  0037F2  220D               	addwfc	___aomod@dividend+7,f,c
 14230  0037F4                     l8379:
 14231  0037F4  C006  F006         	movff	___aomod@dividend,?___aomod
 14232  0037F8  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14233  0037FC  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14234  003800  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14235  003804  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14236  003808  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14237  00380C  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14238  003810  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14239  003814  0012               	return		;funcret
 14240  003816                     __end_of___aomod:
 14241                           	opt callstack 0
 14242                           
 14243 ;; *************** function ___aodiv *****************
 14244 ;; Defined at:
 14245 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;  dividend        8    5[COMRAM] long long 
 14248 ;;  divisor         8   13[COMRAM] long long 
 14249 ;; Auto vars:     Size  Location     Type
 14250 ;;  quotient        8   23[COMRAM] long long 
 14251 ;;  sign            1   22[COMRAM] unsigned char 
 14252 ;;  counter         1   21[COMRAM] unsigned char 
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  8    5[COMRAM] long long 
 14255 ;; Registers used:
 14256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14262 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;Total ram usage:       26 bytes
 14267 ;; Hardware stack levels used:    1
 14268 ;; Hardware stack levels required when called:    2
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_dtoa
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276                           	psect	text56
 14277  0030C0                     __ptext56:
 14278                           	opt callstack 0
 14279  0030C0                     ___aodiv:
 14280                           	opt callstack 24
 14281                           
 14282                           ;incstack = 0
 14283  0030C0  0E00               	movlw	0
 14284  0030C2  6E17               	movwf	___aodiv@sign,c
 14285  0030C4  AE15               	btfss	___aodiv@divisor+7,7,c
 14286  0030C6  D012               	goto	l8311
 14287  0030C8  1E15               	comf	___aodiv@divisor+7,f,c
 14288  0030CA  1E14               	comf	___aodiv@divisor+6,f,c
 14289  0030CC  1E13               	comf	___aodiv@divisor+5,f,c
 14290  0030CE  1E12               	comf	___aodiv@divisor+4,f,c
 14291  0030D0  1E11               	comf	___aodiv@divisor+3,f,c
 14292  0030D2  1E10               	comf	___aodiv@divisor+2,f,c
 14293  0030D4  1E0F               	comf	___aodiv@divisor+1,f,c
 14294  0030D6  6C0E               	negf	___aodiv@divisor,c
 14295  0030D8  0E00               	movlw	0
 14296  0030DA  220F               	addwfc	___aodiv@divisor+1,f,c
 14297  0030DC  2210               	addwfc	___aodiv@divisor+2,f,c
 14298  0030DE  2211               	addwfc	___aodiv@divisor+3,f,c
 14299  0030E0  2212               	addwfc	___aodiv@divisor+4,f,c
 14300  0030E2  2213               	addwfc	___aodiv@divisor+5,f,c
 14301  0030E4  2214               	addwfc	___aodiv@divisor+6,f,c
 14302  0030E6  2215               	addwfc	___aodiv@divisor+7,f,c
 14303  0030E8  0E01               	movlw	1
 14304  0030EA  6E17               	movwf	___aodiv@sign,c
 14305  0030EC                     l8311:
 14306  0030EC  AE0D               	btfss	___aodiv@dividend+7,7,c
 14307  0030EE  D012               	goto	l8317
 14308  0030F0  1E0D               	comf	___aodiv@dividend+7,f,c
 14309  0030F2  1E0C               	comf	___aodiv@dividend+6,f,c
 14310  0030F4  1E0B               	comf	___aodiv@dividend+5,f,c
 14311  0030F6  1E0A               	comf	___aodiv@dividend+4,f,c
 14312  0030F8  1E09               	comf	___aodiv@dividend+3,f,c
 14313  0030FA  1E08               	comf	___aodiv@dividend+2,f,c
 14314  0030FC  1E07               	comf	___aodiv@dividend+1,f,c
 14315  0030FE  6C06               	negf	___aodiv@dividend,c
 14316  003100  0E00               	movlw	0
 14317  003102  2207               	addwfc	___aodiv@dividend+1,f,c
 14318  003104  2208               	addwfc	___aodiv@dividend+2,f,c
 14319  003106  2209               	addwfc	___aodiv@dividend+3,f,c
 14320  003108  220A               	addwfc	___aodiv@dividend+4,f,c
 14321  00310A  220B               	addwfc	___aodiv@dividend+5,f,c
 14322  00310C  220C               	addwfc	___aodiv@dividend+6,f,c
 14323  00310E  220D               	addwfc	___aodiv@dividend+7,f,c
 14324  003110  0E01               	movlw	1
 14325  003112  1A17               	xorwf	___aodiv@sign,f,c
 14326  003114                     l8317:
 14327  003114  EE20  F018         	lfsr	2,___aodiv@quotient
 14328  003118  0E07               	movlw	7
 14329  00311A                     u8851:
 14330  00311A  6ADE               	clrf	postinc2,c
 14331  00311C  06E8               	decf	wreg,f,c
 14332  00311E  E2FD               	bc	u8851
 14333  003120  500E               	movf	___aodiv@divisor,w,c
 14334  003122  100F               	iorwf	___aodiv@divisor+1,w,c
 14335  003124  1010               	iorwf	___aodiv@divisor+2,w,c
 14336  003126  1011               	iorwf	___aodiv@divisor+3,w,c
 14337  003128  1012               	iorwf	___aodiv@divisor+4,w,c
 14338  00312A  1013               	iorwf	___aodiv@divisor+5,w,c
 14339  00312C  1014               	iorwf	___aodiv@divisor+6,w,c
 14340  00312E  1015               	iorwf	___aodiv@divisor+7,w,c
 14341  003130  B4D8               	btfsc	status,2,c
 14342  003132  D046               	goto	l8339
 14343  003134  0E01               	movlw	1
 14344  003136  6E16               	movwf	___aodiv@counter,c
 14345  003138  D00A               	goto	l8325
 14346  00313A                     l8323:
 14347  00313A  90D8               	bcf	status,0,c
 14348  00313C  360E               	rlcf	___aodiv@divisor,f,c
 14349  00313E  360F               	rlcf	___aodiv@divisor+1,f,c
 14350  003140  3610               	rlcf	___aodiv@divisor+2,f,c
 14351  003142  3611               	rlcf	___aodiv@divisor+3,f,c
 14352  003144  3612               	rlcf	___aodiv@divisor+4,f,c
 14353  003146  3613               	rlcf	___aodiv@divisor+5,f,c
 14354  003148  3614               	rlcf	___aodiv@divisor+6,f,c
 14355  00314A  3615               	rlcf	___aodiv@divisor+7,f,c
 14356  00314C  2A16               	incf	___aodiv@counter,f,c
 14357  00314E                     l8325:
 14358  00314E  AE15               	btfss	___aodiv@divisor+7,7,c
 14359  003150  D7F4               	goto	l8323
 14360  003152                     u8870:
 14361  003152  90D8               	bcf	status,0,c
 14362  003154  3618               	rlcf	___aodiv@quotient,f,c
 14363  003156  3619               	rlcf	___aodiv@quotient+1,f,c
 14364  003158  361A               	rlcf	___aodiv@quotient+2,f,c
 14365  00315A  361B               	rlcf	___aodiv@quotient+3,f,c
 14366  00315C  361C               	rlcf	___aodiv@quotient+4,f,c
 14367  00315E  361D               	rlcf	___aodiv@quotient+5,f,c
 14368  003160  361E               	rlcf	___aodiv@quotient+6,f,c
 14369  003162  361F               	rlcf	___aodiv@quotient+7,f,c
 14370  003164  500E               	movf	___aodiv@divisor,w,c
 14371  003166  5C06               	subwf	___aodiv@dividend,w,c
 14372  003168  500F               	movf	___aodiv@divisor+1,w,c
 14373  00316A  5807               	subwfb	___aodiv@dividend+1,w,c
 14374  00316C  5010               	movf	___aodiv@divisor+2,w,c
 14375  00316E  5808               	subwfb	___aodiv@dividend+2,w,c
 14376  003170  5011               	movf	___aodiv@divisor+3,w,c
 14377  003172  5809               	subwfb	___aodiv@dividend+3,w,c
 14378  003174  5012               	movf	___aodiv@divisor+4,w,c
 14379  003176  580A               	subwfb	___aodiv@dividend+4,w,c
 14380  003178  5013               	movf	___aodiv@divisor+5,w,c
 14381  00317A  580B               	subwfb	___aodiv@dividend+5,w,c
 14382  00317C  5014               	movf	___aodiv@divisor+6,w,c
 14383  00317E  580C               	subwfb	___aodiv@dividend+6,w,c
 14384  003180  5015               	movf	___aodiv@divisor+7,w,c
 14385  003182  580D               	subwfb	___aodiv@dividend+7,w,c
 14386  003184  A0D8               	btfss	status,0,c
 14387  003186  D011               	goto	l8335
 14388  003188  500E               	movf	___aodiv@divisor,w,c
 14389  00318A  5E06               	subwf	___aodiv@dividend,f,c
 14390  00318C  500F               	movf	___aodiv@divisor+1,w,c
 14391  00318E  5A07               	subwfb	___aodiv@dividend+1,f,c
 14392  003190  5010               	movf	___aodiv@divisor+2,w,c
 14393  003192  5A08               	subwfb	___aodiv@dividend+2,f,c
 14394  003194  5011               	movf	___aodiv@divisor+3,w,c
 14395  003196  5A09               	subwfb	___aodiv@dividend+3,f,c
 14396  003198  5012               	movf	___aodiv@divisor+4,w,c
 14397  00319A  5A0A               	subwfb	___aodiv@dividend+4,f,c
 14398  00319C  5013               	movf	___aodiv@divisor+5,w,c
 14399  00319E  5A0B               	subwfb	___aodiv@dividend+5,f,c
 14400  0031A0  5014               	movf	___aodiv@divisor+6,w,c
 14401  0031A2  5A0C               	subwfb	___aodiv@dividend+6,f,c
 14402  0031A4  5015               	movf	___aodiv@divisor+7,w,c
 14403  0031A6  5A0D               	subwfb	___aodiv@dividend+7,f,c
 14404  0031A8  8018               	bsf	___aodiv@quotient,0,c
 14405  0031AA                     l8335:
 14406  0031AA  90D8               	bcf	status,0,c
 14407  0031AC  3215               	rrcf	___aodiv@divisor+7,f,c
 14408  0031AE  3214               	rrcf	___aodiv@divisor+6,f,c
 14409  0031B0  3213               	rrcf	___aodiv@divisor+5,f,c
 14410  0031B2  3212               	rrcf	___aodiv@divisor+4,f,c
 14411  0031B4  3211               	rrcf	___aodiv@divisor+3,f,c
 14412  0031B6  3210               	rrcf	___aodiv@divisor+2,f,c
 14413  0031B8  320F               	rrcf	___aodiv@divisor+1,f,c
 14414  0031BA  320E               	rrcf	___aodiv@divisor,f,c
 14415  0031BC  2E16               	decfsz	___aodiv@counter,f,c
 14416  0031BE  D7C9               	goto	u8870
 14417  0031C0                     l8339:
 14418  0031C0  5017               	movf	___aodiv@sign,w,c
 14419  0031C2  B4D8               	btfsc	status,2,c
 14420  0031C4  D010               	goto	l8343
 14421  0031C6  1E1F               	comf	___aodiv@quotient+7,f,c
 14422  0031C8  1E1E               	comf	___aodiv@quotient+6,f,c
 14423  0031CA  1E1D               	comf	___aodiv@quotient+5,f,c
 14424  0031CC  1E1C               	comf	___aodiv@quotient+4,f,c
 14425  0031CE  1E1B               	comf	___aodiv@quotient+3,f,c
 14426  0031D0  1E1A               	comf	___aodiv@quotient+2,f,c
 14427  0031D2  1E19               	comf	___aodiv@quotient+1,f,c
 14428  0031D4  6C18               	negf	___aodiv@quotient,c
 14429  0031D6  0E00               	movlw	0
 14430  0031D8  2219               	addwfc	___aodiv@quotient+1,f,c
 14431  0031DA  221A               	addwfc	___aodiv@quotient+2,f,c
 14432  0031DC  221B               	addwfc	___aodiv@quotient+3,f,c
 14433  0031DE  221C               	addwfc	___aodiv@quotient+4,f,c
 14434  0031E0  221D               	addwfc	___aodiv@quotient+5,f,c
 14435  0031E2  221E               	addwfc	___aodiv@quotient+6,f,c
 14436  0031E4  221F               	addwfc	___aodiv@quotient+7,f,c
 14437  0031E6                     l8343:
 14438  0031E6  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14439  0031EA  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14440  0031EE  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14441  0031F2  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14442  0031F6  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14443  0031FA  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14444  0031FE  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14445  003202  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14446  003206  0012               	return		;funcret
 14447  003208                     __end_of___aodiv:
 14448                           	opt callstack 0
 14449                           
 14450 ;; *************** function _ctoa *****************
 14451 ;; Defined at:
 14452 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 14455 ;;		 -> NULL(0), 
 14456 ;;  c               1   38[COMRAM] unsigned char 
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;  w               2   39[COMRAM] int 
 14459 ;;  l               2    0        int 
 14460 ;; Return value:  Size  Location     Type
 14461 ;;                  2   36[COMRAM] int 
 14462 ;; Registers used:
 14463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14469 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14473 ;;Total ram usage:        5 bytes
 14474 ;; Hardware stack levels used:    1
 14475 ;; Hardware stack levels required when called:    9
 14476 ;; This function calls:
 14477 ;;		_pad
 14478 ;; This function is called by:
 14479 ;;		_vfpfcnvrt
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text57
 14484  004514                     __ptext57:
 14485                           	opt callstack 0
 14486  004514                     _ctoa:
 14487                           	opt callstack 18
 14488                           
 14489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14490                           
 14491                           ;incstack = 0
 14492  004514  0100               	movlb	0	; () banked
 14493  004516  51E1               	movf	_width& (0+255),w,b
 14494  004518  11E2               	iorwf	(_width+1)& (0+255),w,b
 14495  00451A  A4D8               	btfss	status,2,c
 14496  00451C  D005               	goto	l8843
 14497                           
 14498                           ; BSR set to: 0
 14499  00451E  C0E1  F028         	movff	_width,ctoa@w
 14500  004522  C0E2  F029         	movff	_width+1,ctoa@w+1
 14501  004526  D006               	goto	l8845
 14502  004528                     l8843:
 14503                           
 14504                           ; BSR set to: 0
 14505  004528  0EFF               	movlw	255
 14506  00452A  25E1               	addwf	_width& (0+255),w,b
 14507  00452C  6E28               	movwf	ctoa@w,c
 14508  00452E  0EFF               	movlw	255
 14509  004530  21E2               	addwfc	(_width+1)& (0+255),w,b
 14510  004532  6E29               	movwf	ctoa@w+1,c
 14511  004534                     l8845:
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14515  004534  C027  F173         	movff	ctoa@c,_dbuf
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14519  004538  0E00               	movlw	0
 14520  00453A  0101               	movlb	1	; () banked
 14521  00453C  6F74               	movwf	(_dbuf+1)& (0+255),b
 14522                           
 14523                           ; BSR set to: 1
 14524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14525  00453E  C025  F01A         	movff	ctoa@fp,pad@fp
 14526  004542  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 14527  004546  0E73               	movlw	low _dbuf
 14528  004548  6E1C               	movwf	pad@buf,c
 14529  00454A  0E01               	movlw	high _dbuf
 14530  00454C  6E1D               	movwf	pad@buf+1,c
 14531  00454E  C028  F01E         	movff	ctoa@w,pad@p
 14532  004552  C029  F01F         	movff	ctoa@w+1,pad@p+1
 14533  004556  EC04  F020         	call	_pad	;wreg free
 14534  00455A  C01A  F025         	movff	?_pad,?_ctoa
 14535  00455E  C01B  F026         	movff	?_pad+1,?_ctoa+1
 14536  004562  0012               	return		;funcret
 14537  004564                     __end_of_ctoa:
 14538                           	opt callstack 0
 14539                           
 14540 ;; *************** function _pad *****************
 14541 ;; Defined at:
 14542 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 14545 ;;		 -> NULL(0), 
 14546 ;;  buf             2   27[COMRAM] PTR unsigned char 
 14547 ;;		 -> dbuf(32), 
 14548 ;;  p               2   29[COMRAM] int 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;  w               2   34[COMRAM] int 
 14551 ;;  i               2   32[COMRAM] int 
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  2   25[COMRAM] int 
 14554 ;; Registers used:
 14555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14561 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14562 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14565 ;;Total ram usage:       11 bytes
 14566 ;; Hardware stack levels used:    1
 14567 ;; Hardware stack levels required when called:    8
 14568 ;; This function calls:
 14569 ;;		_fputc
 14570 ;;		_fputs
 14571 ;;		_strlen
 14572 ;; This function is called by:
 14573 ;;		_ctoa
 14574 ;;		_dtoa
 14575 ;;		_utoa
 14576 ;;		_xtoa
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text58
 14581  004008                     __ptext58:
 14582                           	opt callstack 0
 14583  004008                     _pad:
 14584                           	opt callstack 18
 14585                           
 14586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14587                           
 14588                           ;incstack = 0
 14589  004008  A078               	btfss	_flags,0,c
 14590  00400A  D00A               	goto	l8257
 14591                           
 14592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14593  00400C  C01C  F013         	movff	pad@buf,fputs@s
 14594  004010  C01D  F014         	movff	pad@buf+1,fputs@s+1
 14595  004014  C01A  F015         	movff	pad@fp,fputs@fp
 14596  004018  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 14597  00401C  EC80  F023         	call	_fputs	;wreg free
 14598  004020                     l8257:
 14599                           
 14600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14601  004020  BE1F               	btfsc	pad@p+1,7,c
 14602  004022  D005               	goto	l8261
 14603  004024  C01E  F023         	movff	pad@p,pad@w
 14604  004028  C01F  F024         	movff	pad@p+1,pad@w+1
 14605  00402C  D004               	goto	l671
 14606  00402E                     l8261:
 14607  00402E  0E00               	movlw	0
 14608  004030  6E24               	movwf	pad@w+1,c
 14609  004032  0E00               	movlw	0
 14610  004034  6E23               	movwf	pad@w,c
 14611  004036                     l671:
 14612                           
 14613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14614  004036  0E00               	movlw	0
 14615  004038  6E22               	movwf	pad@i+1,c
 14616  00403A  0E00               	movlw	0
 14617  00403C  6E21               	movwf	pad@i,c
 14618                           
 14619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14620  00403E  D00C               	goto	l8267
 14621  004040                     l8263:
 14622                           
 14623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14624  004040  0E00               	movlw	0
 14625  004042  6E0B               	movwf	fputc@c+1,c
 14626  004044  0E20               	movlw	32
 14627  004046  6E0A               	movwf	fputc@c,c
 14628  004048  C01A  F00C         	movff	pad@fp,fputc@fp
 14629  00404C  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 14630  004050  EC0B  F021         	call	_fputc	;wreg free
 14631                           
 14632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14633  004054  4A21               	infsnz	pad@i,f,c
 14634  004056  2A22               	incf	pad@i+1,f,c
 14635  004058                     l8267:
 14636                           
 14637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14638  004058  5023               	movf	pad@w,w,c
 14639  00405A  5C21               	subwf	pad@i,w,c
 14640  00405C  5022               	movf	pad@i+1,w,c
 14641  00405E  0A80               	xorlw	128
 14642  004060  6E20               	movwf	??_pad& (0+255),c
 14643  004062  5024               	movf	pad@w+1,w,c
 14644  004064  0A80               	xorlw	128
 14645  004066  5820               	subwfb	??_pad& (0+255),w,c
 14646  004068  A0D8               	btfss	status,0,c
 14647  00406A  D7EA               	goto	l8263
 14648                           
 14649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14650  00406C  B078               	btfsc	_flags,0,c
 14651  00406E  D00A               	goto	l8271
 14652                           
 14653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14654  004070  C01C  F013         	movff	pad@buf,fputs@s
 14655  004074  C01D  F014         	movff	pad@buf+1,fputs@s+1
 14656  004078  C01A  F015         	movff	pad@fp,fputs@fp
 14657  00407C  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 14658  004080  EC80  F023         	call	_fputs	;wreg free
 14659  004084                     l8271:
 14660                           
 14661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14662  004084  C01C  F006         	movff	pad@buf,strlen@s
 14663  004088  C01D  F007         	movff	pad@buf+1,strlen@s+1
 14664  00408C  EC3F  F023         	call	_strlen	;wreg free
 14665  004090  5023               	movf	pad@w,w,c
 14666  004092  2406               	addwf	?_strlen,w,c
 14667  004094  6E1A               	movwf	?_pad,c
 14668  004096  5024               	movf	pad@w+1,w,c
 14669  004098  2007               	addwfc	?_strlen+1,w,c
 14670  00409A  6E1B               	movwf	?_pad+1,c
 14671  00409C  0012               	return		;funcret
 14672  00409E                     __end_of_pad:
 14673                           	opt callstack 0
 14674                           
 14675 ;; *************** function _strlen *****************
 14676 ;; Defined at:
 14677 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14678 ;; Parameters:    Size  Location     Type
 14679 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14680 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_62(2), 
 14681 ;;		 -> STR_55(16), STR_53(14), STR_51(11), STR_49(9), 
 14682 ;;		 -> STR_47(16), STR_45(13), STR_43(13), STR_41(9), 
 14683 ;;		 -> STR_39(13), STR_37(14), STR_35(10), STR_31(9), 
 14684 ;;		 -> STR_20(14), STR_18(10), STR_16(6), STR_14(7), 
 14685 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 14686 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14689 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_62(2), 
 14690 ;;		 -> STR_55(16), STR_53(14), STR_51(11), STR_49(9), 
 14691 ;;		 -> STR_47(16), STR_45(13), STR_43(13), STR_41(9), 
 14692 ;;		 -> STR_39(13), STR_37(14), STR_35(10), STR_31(9), 
 14693 ;;		 -> STR_20(14), STR_18(10), STR_16(6), STR_14(7), 
 14694 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 14695 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  2    5[COMRAM] unsigned int 
 14698 ;; Registers used:
 14699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14708 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14709 ;;Total ram usage:        4 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    2
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		_pad
 14716 ;;		_stoa
 14717 ;; This function uses a non-reentrant model
 14718 ;;
 14719                           
 14720                           	psect	text59
 14721  00467E                     __ptext59:
 14722                           	opt callstack 0
 14723  00467E                     _strlen:
 14724                           	opt callstack 23
 14725                           
 14726                           ;incstack = 0
 14727  00467E  C006  F008         	movff	strlen@s,strlen@a
 14728  004682  C007  F009         	movff	strlen@s+1,strlen@a+1
 14729  004686  D002               	goto	l8239
 14730  004688                     l8237:
 14731  004688  4A06               	infsnz	strlen@s,f,c
 14732  00468A  2A07               	incf	strlen@s+1,f,c
 14733  00468C                     l8239:
 14734  00468C  C006  FFF6         	movff	strlen@s,tblptrl
 14735  004690  C007  FFF7         	movff	strlen@s+1,tblptrh
 14736  004694  0E00               	movlw	low (__mediumconst shr (0+16))
 14737  004696  6EF8               	movwf	tblptru,c
 14738  004698  0E0F               	movlw	(high __ramtop+-1)
 14739  00469A  64F7               	cpfsgt	tblptrh,c
 14740  00469C  D003               	bra	u8657
 14741  00469E  0008               	tblrd		*
 14742  0046A0  50F5               	movf	tablat,w,c
 14743  0046A2  D005               	bra	u8650
 14744  0046A4                     u8657:
 14745  0046A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 14746  0046A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 14747  0046AC  50E7               	movf	indf1,w,c
 14748  0046AE                     u8650:
 14749  0046AE  0900               	iorlw	0
 14750  0046B0  A4D8               	btfss	status,2,c
 14751  0046B2  D7EA               	goto	l8237
 14752  0046B4  5008               	movf	strlen@a,w,c
 14753  0046B6  5C06               	subwf	strlen@s,w,c
 14754  0046B8  6E06               	movwf	?_strlen,c
 14755  0046BA  5009               	movf	strlen@a+1,w,c
 14756  0046BC  5807               	subwfb	strlen@s+1,w,c
 14757  0046BE  6E07               	movwf	?_strlen+1,c
 14758  0046C0  0012               	return		;funcret
 14759  0046C2                     __end_of_strlen:
 14760                           	opt callstack 0
 14761                           
 14762 ;; *************** function _fputs *****************
 14763 ;; Defined at:
 14764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  s               2   18[COMRAM] PTR const unsigned char 
 14767 ;;		 -> dbuf(32), 
 14768 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 14769 ;;		 -> NULL(0), 
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;  i               2   23[COMRAM] int 
 14772 ;;  c               1   22[COMRAM] unsigned char 
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  2   18[COMRAM] int 
 14775 ;; Registers used:
 14776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14785 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14786 ;;Total ram usage:        7 bytes
 14787 ;; Hardware stack levels used:    1
 14788 ;; Hardware stack levels required when called:    7
 14789 ;; This function calls:
 14790 ;;		_fputc
 14791 ;; This function is called by:
 14792 ;;		_pad
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text60
 14797  004700                     __ptext60:
 14798                           	opt callstack 0
 14799  004700                     _fputs:
 14800                           	opt callstack 18
 14801                           
 14802                           ;incstack = 0
 14803  004700  0E00               	movlw	0
 14804  004702  6E19               	movwf	fputs@i+1,c
 14805  004704  0E00               	movlw	0
 14806  004706  6E18               	movwf	fputs@i,c
 14807  004708  D00B               	goto	l8233
 14808  00470A                     l8229:
 14809  00470A  C017  F00A         	movff	fputs@c,fputc@c
 14810  00470E  6A0B               	clrf	fputc@c+1,c
 14811  004710  C015  F00C         	movff	fputs@fp,fputc@fp
 14812  004714  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 14813  004718  EC0B  F021         	call	_fputc	;wreg free
 14814  00471C  4A18               	infsnz	fputs@i,f,c
 14815  00471E  2A19               	incf	fputs@i+1,f,c
 14816  004720                     l8233:
 14817  004720  5018               	movf	fputs@i,w,c
 14818  004722  2413               	addwf	fputs@s,w,c
 14819  004724  6ED9               	movwf	fsr2l,c
 14820  004726  5019               	movf	fputs@i+1,w,c
 14821  004728  2014               	addwfc	fputs@s+1,w,c
 14822  00472A  6EDA               	movwf	fsr2h,c
 14823  00472C  50DF               	movf	indf2,w,c
 14824  00472E  6E17               	movwf	fputs@c,c
 14825  004730  5017               	movf	fputs@c,w,c
 14826  004732  B4D8               	btfsc	status,2,c
 14827  004734  0012               	return	
 14828  004736  D7E9               	goto	l8229
 14829  004738                     __end_of_fputs:
 14830                           	opt callstack 0
 14831                           
 14832 ;; *************** function _fputc *****************
 14833 ;; Defined at:
 14834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  c               2    9[COMRAM] int 
 14837 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 14838 ;;		 -> NULL(0), 
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;		None
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  2    9[COMRAM] int 
 14843 ;; Registers used:
 14844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14852 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14853 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14854 ;;Total ram usage:        9 bytes
 14855 ;; Hardware stack levels used:    1
 14856 ;; Hardware stack levels required when called:    6
 14857 ;; This function calls:
 14858 ;;		_putch
 14859 ;; This function is called by:
 14860 ;;		_pad
 14861 ;;		_stoa
 14862 ;;		_vfpfcnvrt
 14863 ;;		_fputs
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867                           	psect	text61
 14868  004216                     __ptext61:
 14869                           	opt callstack 0
 14870  004216                     _fputc:
 14871                           	opt callstack 18
 14872                           
 14873                           ;incstack = 0
 14874  004216  500C               	movf	fputc@fp,w,c
 14875  004218  100D               	iorwf	fputc@fp+1,w,c
 14876  00421A  B4D8               	btfsc	status,2,c
 14877  00421C  D004               	goto	u8610
 14878  00421E  500C               	movf	fputc@fp,w,c
 14879  004220  100D               	iorwf	fputc@fp+1,w,c
 14880  004222  A4D8               	btfss	status,2,c
 14881  004224  D004               	goto	l8219
 14882  004226                     u8610:
 14883  004226  500A               	movf	fputc@c,w,c
 14884  004228  EC39  F025         	call	_putch
 14885  00422C  0012               	return	
 14886  00422E                     l8219:
 14887  00422E  EE20 F004          	lfsr	2,4
 14888  004232  500C               	movf	fputc@fp,w,c
 14889  004234  26D9               	addwf	fsr2l,f,c
 14890  004236  500D               	movf	fputc@fp+1,w,c
 14891  004238  22DA               	addwfc	fsr2h,f,c
 14892  00423A  50DE               	movf	postinc2,w,c
 14893  00423C  10DE               	iorwf	postinc2,w,c
 14894  00423E  B4D8               	btfsc	status,2,c
 14895  004240  D016               	goto	u8630
 14896  004242  EE20 F004          	lfsr	2,4
 14897  004246  500C               	movf	fputc@fp,w,c
 14898  004248  26D9               	addwf	fsr2l,f,c
 14899  00424A  500D               	movf	fputc@fp+1,w,c
 14900  00424C  22DA               	addwfc	fsr2h,f,c
 14901  00424E  EE10 F002          	lfsr	1,2
 14902  004252  500C               	movf	fputc@fp,w,c
 14903  004254  26E1               	addwf	fsr1l,f,c
 14904  004256  500D               	movf	fputc@fp+1,w,c
 14905  004258  22E2               	addwfc	fsr1h,f,c
 14906  00425A  50DE               	movf	postinc2,w,c
 14907  00425C  5CE6               	subwf	postinc1,w,c
 14908  00425E  50E6               	movf	postinc1,w,c
 14909  004260  0A80               	xorlw	128
 14910  004262  6E12               	movwf	(??_fputc+4)& (0+255),c
 14911  004264  50DE               	movf	postinc2,w,c
 14912  004266  0A80               	xorlw	128
 14913  004268  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 14914  00426A  B0D8               	btfsc	status,0,c
 14915  00426C  0012               	return	
 14916  00426E                     u8630:
 14917  00426E  EE20 F002          	lfsr	2,2
 14918  004272  500C               	movf	fputc@fp,w,c
 14919  004274  26D9               	addwf	fsr2l,f,c
 14920  004276  500D               	movf	fputc@fp+1,w,c
 14921  004278  22DA               	addwfc	fsr2h,f,c
 14922  00427A  2ADE               	incf	postinc2,f,c
 14923  00427C  0E00               	movlw	0
 14924  00427E  22DD               	addwfc	postdec2,f,c
 14925  004280  0012               	return		;funcret
 14926  004282                     __end_of_fputc:
 14927                           	opt callstack 0
 14928                           
 14929 ;; *************** function _putch *****************
 14930 ;; Defined at:
 14931 ;;		line 102 in file "lcd.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;  data            1    wreg     unsigned char 
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;  data            1    8[COMRAM] unsigned char 
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      void 
 14938 ;; Registers used:
 14939 ;;		wreg, status,2, status,0, cstack
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;Total ram usage:        1 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:    5
 14952 ;; This function calls:
 14953 ;;		_send_byte
 14954 ;; This function is called by:
 14955 ;;		_fputc
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text62
 14960  004A72                     __ptext62:
 14961                           	opt callstack 0
 14962  004A72                     _putch:
 14963                           	opt callstack 18
 14964                           
 14965                           ;incstack = 0
 14966                           ;putch@data stored from wreg
 14967  004A72  6E09               	movwf	putch@data,c
 14968                           
 14969                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 14970  004A74  848C               	bsf	3980,2,c	;volatile
 14971                           
 14972                           ;lcd.c: 104:     send_byte((unsigned char)data);
 14973  004A76  5009               	movf	putch@data,w,c
 14974  004A78  EC30  F025         	call	_send_byte
 14975  004A7C  0012               	return		;funcret
 14976  004A7E                     __end_of_putch:
 14977                           	opt callstack 0
 14978                           
 14979 ;; *************** function _atoi *****************
 14980 ;; Defined at:
 14981 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14984 ;;		 -> STR_63(3), STR_61(3), STR_60(3), STR_59(9), 
 14985 ;;		 -> STR_58(9), STR_57(10), STR_56(10), STR_54(3), 
 14986 ;;		 -> STR_52(3), STR_50(3), STR_48(3), STR_46(3), 
 14987 ;;		 -> STR_44(3), STR_42(3), STR_40(3), STR_38(3), 
 14988 ;;		 -> STR_36(3), STR_34(3), STR_33(15), STR_32(15), 
 14989 ;;		 -> STR_30(3), STR_29(13), STR_28(16), STR_27(12), 
 14990 ;;		 -> STR_26(11), STR_25(10), STR_24(6), STR_23(6), 
 14991 ;;		 -> STR_22(3), STR_21(4), STR_19(3), STR_17(5), 
 14992 ;;		 -> STR_15(5), STR_13(5), STR_10(9), STR_8(3), 
 14993 ;;		 -> STR_6(3), STR_4(5), STR_1(7), 
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  n               2   25[COMRAM] int 
 14996 ;;  neg             2   18[COMRAM] int 
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  2   12[COMRAM] int 
 14999 ;; Registers used:
 15000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15001 ;; Tracked objects:
 15002 ;;		On entry : 0/0
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15010 ;;Total ram usage:       15 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:    3
 15013 ;; This function calls:
 15014 ;;		___wmul
 15015 ;;		_isdigit
 15016 ;;		_isspace
 15017 ;; This function is called by:
 15018 ;;		_vfpfcnvrt
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           	psect	text63
 15023  003488                     __ptext63:
 15024                           	opt callstack 0
 15025  003488                     _atoi:
 15026                           	opt callstack 24
 15027                           
 15028                           ;incstack = 0
 15029  003488  0E00               	movlw	0
 15030  00348A  6E1B               	movwf	atoi@n+1,c
 15031  00348C  0E00               	movlw	0
 15032  00348E  6E1A               	movwf	atoi@n,c
 15033  003490  0E00               	movlw	0
 15034  003492  6E14               	movwf	atoi@neg+1,c
 15035  003494  0E00               	movlw	0
 15036  003496  6E13               	movwf	atoi@neg,c
 15037  003498  D002               	goto	l9063
 15038  00349A                     l9061:
 15039  00349A  4A0D               	infsnz	atoi@s,f,c
 15040  00349C  2A0E               	incf	atoi@s+1,f,c
 15041  00349E                     l9063:
 15042  00349E  0E01               	movlw	1
 15043  0034A0  6E19               	movwf	_atoi$2001,c
 15044  0034A2  C00D  FFF6         	movff	atoi@s,tblptrl
 15045  0034A6  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15046  0034AA                     	if	0	;tblptru may be non-zero
 15047  0034AA                     	endif
 15048  0034AA                     	if	0	;tblptru may be non-zero
 15049  0034AA                     	endif
 15050  0034AA  0008               	tblrd		*
 15051  0034AC  50F5               	movf	tablat,w,c
 15052  0034AE  0A20               	xorlw	32
 15053  0034B0  B4D8               	btfsc	status,2,c
 15054  0034B2  D018               	goto	l9071
 15055  0034B4  0EF7               	movlw	247
 15056  0034B6  6E0F               	movwf	??_atoi& (0+255),c
 15057  0034B8  0EFF               	movlw	255
 15058  0034BA  6E10               	movwf	(??_atoi+1)& (0+255),c
 15059  0034BC  C00D  FFF6         	movff	atoi@s,tblptrl
 15060  0034C0  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15061  0034C4                     	if	0	;tblptru may be non-zero
 15062  0034C4                     	endif
 15063  0034C4                     	if	0	;tblptru may be non-zero
 15064  0034C4                     	endif
 15065  0034C4  0008               	tblrd		*
 15066  0034C6  50F5               	movf	tablat,w,c
 15067  0034C8  6E11               	movwf	(??_atoi+2)& (0+255),c
 15068  0034CA  6A12               	clrf	(??_atoi+3)& (0+255),c
 15069  0034CC  500F               	movf	??_atoi,w,c
 15070  0034CE  2611               	addwf	??_atoi+2,f,c
 15071  0034D0  5010               	movf	??_atoi+1,w,c
 15072  0034D2  2212               	addwfc	??_atoi+3,f,c
 15073  0034D4  5012               	movf	??_atoi+3,w,c
 15074  0034D6  E104               	bnz	u10280
 15075  0034D8  0E05               	movlw	5
 15076  0034DA  5C11               	subwf	??_atoi+2,w,c
 15077  0034DC  A0D8               	btfss	status,0,c
 15078  0034DE  D002               	goto	l9071
 15079  0034E0                     u10280:
 15080  0034E0  0E00               	movlw	0
 15081  0034E2  6E19               	movwf	_atoi$2001,c
 15082  0034E4                     l9071:
 15083  0034E4  C019  F015         	movff	_atoi$2001,_atoi$2000
 15084  0034E8  6A16               	clrf	_atoi$2000+1,c
 15085  0034EA  5015               	movf	_atoi$2000,w,c
 15086  0034EC  1016               	iorwf	_atoi$2000+1,w,c
 15087  0034EE  B4D8               	btfsc	status,2,c
 15088  0034F0  D008               	goto	l9081
 15089  0034F2  D7D3               	goto	l9061
 15090  0034F4                     l9077:
 15091  0034F4  0E00               	movlw	0
 15092  0034F6  6E14               	movwf	atoi@neg+1,c
 15093  0034F8  0E01               	movlw	1
 15094  0034FA  6E13               	movwf	atoi@neg,c
 15095  0034FC                     l9079:
 15096  0034FC  4A0D               	infsnz	atoi@s,f,c
 15097  0034FE  2A0E               	incf	atoi@s+1,f,c
 15098  003500  D02E               	goto	l9087
 15099  003502                     l9081:
 15100  003502  C00D  FFF6         	movff	atoi@s,tblptrl
 15101  003506  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15102  00350A                     	if	0	;tblptru may be non-zero
 15103  00350A                     	endif
 15104  00350A                     	if	0	;tblptru may be non-zero
 15105  00350A                     	endif
 15106  00350A  0008               	tblrd		*
 15107  00350C  50F5               	movf	tablat,w,c
 15108  00350E  6E0F               	movwf	??_atoi& (0+255),c
 15109  003510  6A10               	clrf	(??_atoi+1)& (0+255),c
 15110                           
 15111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15112                           ; Switch size 1, requested type "simple"
 15113                           ; Number of cases is 1, Range of values is 0 to 0
 15114                           ; switch strategies available:
 15115                           ; Name         Instructions Cycles
 15116                           ; simple_byte            4     3 (average)
 15117                           ;	Chosen strategy is simple_byte
 15118  003512  5010               	movf	??_atoi+1,w,c
 15119  003514  0A00               	xorlw	0	; case 0
 15120  003516  A4D8               	btfss	status,2,c
 15121  003518  D022               	goto	l9087
 15122                           
 15123                           ; Switch size 1, requested type "simple"
 15124                           ; Number of cases is 2, Range of values is 43 to 45
 15125                           ; switch strategies available:
 15126                           ; Name         Instructions Cycles
 15127                           ; simple_byte            7     4 (average)
 15128                           ;	Chosen strategy is simple_byte
 15129  00351A  500F               	movf	??_atoi,w,c
 15130  00351C  0A2B               	xorlw	43	; case 43
 15131  00351E  B4D8               	btfsc	status,2,c
 15132  003520  D7ED               	goto	l9079
 15133  003522  0A06               	xorlw	6	; case 45
 15134  003524  B4D8               	btfsc	status,2,c
 15135  003526  D7E6               	goto	l9077
 15136  003528  D01A               	goto	l9087
 15137  00352A                     l9083:
 15138  00352A  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15139  00352E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15140  003532  0E00               	movlw	0
 15141  003534  6E09               	movwf	___wmul@multiplicand+1,c
 15142  003536  0E0A               	movlw	10
 15143  003538  6E08               	movwf	___wmul@multiplicand,c
 15144  00353A  EC81  F024         	call	___wmul	;wreg free
 15145  00353E  C00D  FFF6         	movff	atoi@s,tblptrl
 15146  003542  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15147  003546                     	if	0	;tblptru may be non-zero
 15148  003546                     	endif
 15149  003546                     	if	0	;tblptru may be non-zero
 15150  003546                     	endif
 15151  003546  0008               	tblrd		*
 15152  003548  50F5               	movf	tablat,w,c
 15153  00354A  5E06               	subwf	?___wmul,f,c
 15154  00354C  0E00               	movlw	0
 15155  00354E  5A07               	subwfb	?___wmul+1,f,c
 15156  003550  0E30               	movlw	48
 15157  003552  2406               	addwf	?___wmul,w,c
 15158  003554  6E1A               	movwf	atoi@n,c
 15159  003556  0E00               	movlw	0
 15160  003558  2007               	addwfc	?___wmul+1,w,c
 15161  00355A  6E1B               	movwf	atoi@n+1,c
 15162  00355C  D7CF               	goto	l9079
 15163  00355E                     l9087:
 15164  00355E  0ED0               	movlw	208
 15165  003560  6E0F               	movwf	??_atoi& (0+255),c
 15166  003562  0EFF               	movlw	255
 15167  003564  6E10               	movwf	(??_atoi+1)& (0+255),c
 15168  003566  C00D  FFF6         	movff	atoi@s,tblptrl
 15169  00356A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15170  00356E                     	if	0	;tblptru may be non-zero
 15171  00356E                     	endif
 15172  00356E                     	if	0	;tblptru may be non-zero
 15173  00356E                     	endif
 15174  00356E  0008               	tblrd		*
 15175  003570  50F5               	movf	tablat,w,c
 15176  003572  6E11               	movwf	(??_atoi+2)& (0+255),c
 15177  003574  6A12               	clrf	(??_atoi+3)& (0+255),c
 15178  003576  500F               	movf	??_atoi,w,c
 15179  003578  2611               	addwf	??_atoi+2,f,c
 15180  00357A  5010               	movf	??_atoi+1,w,c
 15181  00357C  2212               	addwfc	??_atoi+3,f,c
 15182  00357E  5012               	movf	??_atoi+3,w,c
 15183  003580  E106               	bnz	u10300
 15184  003582  0E0A               	movlw	10
 15185  003584  5C11               	subwf	??_atoi+2,w,c
 15186  003586  B0D8               	btfsc	status,0,c
 15187  003588  D002               	goto	u10300
 15188  00358A  0E01               	movlw	1
 15189  00358C  D001               	goto	u10310
 15190  00358E                     u10300:
 15191  00358E  0E00               	movlw	0
 15192  003590                     u10310:
 15193  003590  6E17               	movwf	_atoi$2002,c
 15194  003592  6A18               	clrf	_atoi$2002+1,c
 15195  003594  5017               	movf	_atoi$2002,w,c
 15196  003596  1018               	iorwf	_atoi$2002+1,w,c
 15197  003598  A4D8               	btfss	status,2,c
 15198  00359A  D7C7               	goto	l9083
 15199  00359C  5013               	movf	atoi@neg,w,c
 15200  00359E  1014               	iorwf	atoi@neg+1,w,c
 15201  0035A0  A4D8               	btfss	status,2,c
 15202  0035A2  D00D               	goto	l1535
 15203  0035A4  C01A  F00F         	movff	atoi@n,??_atoi
 15204  0035A8  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15205  0035AC  1E0F               	comf	??_atoi,f,c
 15206  0035AE  1E10               	comf	??_atoi+1,f,c
 15207  0035B0  4A0F               	infsnz	??_atoi,f,c
 15208  0035B2  2A10               	incf	??_atoi+1,f,c
 15209  0035B4  C00F  F00D         	movff	??_atoi,?_atoi
 15210  0035B8  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15211  0035BC  0012               	return	
 15212  0035BE                     l1535:
 15213  0035BE  C01A  F00D         	movff	atoi@n,?_atoi
 15214  0035C2  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15215  0035C6  0012               	return		;funcret
 15216  0035C8                     __end_of_atoi:
 15217                           	opt callstack 0
 15218                           
 15219 ;; *************** function _isspace *****************
 15220 ;; Defined at:
 15221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  c               2    5[COMRAM] int 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  2    5[COMRAM] int 
 15228 ;; Registers used:
 15229 ;;		wreg, status,2, status,0
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15239 ;;Total ram usage:        7 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    2
 15242 ;; This function calls:
 15243 ;;		Nothing
 15244 ;; This function is called by:
 15245 ;;		_atoi
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text64
 15250  0046C2                     __ptext64:
 15251                           	opt callstack 0
 15252  0046C2                     _isspace:
 15253                           	opt callstack 24
 15254                           
 15255                           ;incstack = 0
 15256  0046C2  0E01               	movlw	1
 15257  0046C4  6E0C               	movwf	_isspace$2027,c
 15258  0046C6  0E20               	movlw	32
 15259  0046C8  1806               	xorwf	isspace@c,w,c
 15260  0046CA  1007               	iorwf	isspace@c+1,w,c
 15261  0046CC  B4D8               	btfsc	status,2,c
 15262  0046CE  D014               	goto	l8809
 15263  0046D0  0EF7               	movlw	247
 15264  0046D2  6E08               	movwf	??_isspace& (0+255),c
 15265  0046D4  0EFF               	movlw	255
 15266  0046D6  6E09               	movwf	(??_isspace+1)& (0+255),c
 15267  0046D8  C006  F00A         	movff	isspace@c,??_isspace+2
 15268  0046DC  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15269  0046E0  5008               	movf	??_isspace,w,c
 15270  0046E2  260A               	addwf	??_isspace+2,f,c
 15271  0046E4  5009               	movf	??_isspace+1,w,c
 15272  0046E6  220B               	addwfc	??_isspace+3,f,c
 15273  0046E8  500B               	movf	??_isspace+3,w,c
 15274  0046EA  E104               	bnz	u9680
 15275  0046EC  0E05               	movlw	5
 15276  0046EE  5C0A               	subwf	??_isspace+2,w,c
 15277  0046F0  A0D8               	btfss	status,0,c
 15278  0046F2  D002               	goto	l8809
 15279  0046F4                     u9680:
 15280  0046F4  0E00               	movlw	0
 15281  0046F6  6E0C               	movwf	_isspace$2027,c
 15282  0046F8                     l8809:
 15283  0046F8  C00C  F006         	movff	_isspace$2027,?_isspace
 15284  0046FC  6A07               	clrf	?_isspace+1,c
 15285  0046FE  0012               	return		;funcret
 15286  004700                     __end_of_isspace:
 15287                           	opt callstack 0
 15288                           
 15289 ;; *************** function _isdigit *****************
 15290 ;; Defined at:
 15291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 15292 ;; Parameters:    Size  Location     Type
 15293 ;;  c               2    5[COMRAM] int 
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;		None
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  2    5[COMRAM] int 
 15298 ;; Registers used:
 15299 ;;		wreg, status,2, status,0
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15309 ;;Total ram usage:        6 bytes
 15310 ;; Hardware stack levels used:    1
 15311 ;; Hardware stack levels required when called:    2
 15312 ;; This function calls:
 15313 ;;		Nothing
 15314 ;; This function is called by:
 15315 ;;		_vfpfcnvrt
 15316 ;;		_atoi
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           	psect	text65
 15321  0047FE                     __ptext65:
 15322                           	opt callstack 0
 15323  0047FE                     _isdigit:
 15324                           	opt callstack 25
 15325                           
 15326                           ;incstack = 0
 15327  0047FE  0ED0               	movlw	208
 15328  004800  6E08               	movwf	??_isdigit& (0+255),c
 15329  004802  0EFF               	movlw	255
 15330  004804  6E09               	movwf	(??_isdigit+1)& (0+255),c
 15331  004806  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15332  00480A  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15333  00480E  5008               	movf	??_isdigit,w,c
 15334  004810  260A               	addwf	??_isdigit+2,f,c
 15335  004812  5009               	movf	??_isdigit+1,w,c
 15336  004814  220B               	addwfc	??_isdigit+3,f,c
 15337  004816  500B               	movf	??_isdigit+3,w,c
 15338  004818  E106               	bnz	u8810
 15339  00481A  0E0A               	movlw	10
 15340  00481C  5C0A               	subwf	??_isdigit+2,w,c
 15341  00481E  B0D8               	btfsc	status,0,c
 15342  004820  D002               	goto	u8810
 15343  004822  0E01               	movlw	1
 15344  004824  D001               	goto	u8820
 15345  004826                     u8810:
 15346  004826  0E00               	movlw	0
 15347  004828                     u8820:
 15348  004828  6E06               	movwf	?_isdigit,c
 15349  00482A  6A07               	clrf	?_isdigit+1,c
 15350  00482C  0012               	return		;funcret
 15351  00482E                     __end_of_isdigit:
 15352                           	opt callstack 0
 15353                           
 15354 ;; *************** function ___wmul *****************
 15355 ;; Defined at:
 15356 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  multiplier      2    5[COMRAM] unsigned int 
 15359 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;  product         2    9[COMRAM] unsigned int 
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  2    5[COMRAM] unsigned int 
 15364 ;; Registers used:
 15365 ;;		wreg, status,2, status,0, prodl, prodh
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;Total ram usage:        6 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; Hardware stack levels required when called:    2
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_doDisplayLog
 15382 ;;		_saveLogs
 15383 ;;		_readLogs
 15384 ;;		_doOperation
 15385 ;;		_atoi
 15386 ;;		_saveLogsOld
 15387 ;;		_readLogsOld
 15388 ;;		_mainEEPROMTest
 15389 ;; This function uses a non-reentrant model
 15390 ;;
 15391                           
 15392                           	psect	text66
 15393  004902                     __ptext66:
 15394                           	opt callstack 0
 15395  004902                     ___wmul:
 15396                           	opt callstack 26
 15397                           
 15398                           ;incstack = 0
 15399  004902  5006               	movf	___wmul@multiplier,w,c
 15400  004904  0208               	mulwf	___wmul@multiplicand,c
 15401  004906  CFF3 F00A          	movff	prodl,___wmul@product
 15402  00490A  CFF4 F00B          	movff	prodh,___wmul@product+1
 15403  00490E  5006               	movf	___wmul@multiplier,w,c
 15404  004910  0209               	mulwf	___wmul@multiplicand+1,c
 15405  004912  50F3               	movf	prodl,w,c
 15406  004914  260B               	addwf	___wmul@product+1,f,c
 15407  004916  5007               	movf	___wmul@multiplier+1,w,c
 15408  004918  0208               	mulwf	___wmul@multiplicand,c
 15409  00491A  50F3               	movf	prodl,w,c
 15410  00491C  260B               	addwf	___wmul@product+1,f,c
 15411  00491E  C00A  F006         	movff	___wmul@product,?___wmul
 15412  004922  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15413  004926  0012               	return		;funcret
 15414  004928                     __end_of___wmul:
 15415                           	opt callstack 0
 15416                           
 15417 ;; *************** function _lcdInst *****************
 15418 ;; Defined at:
 15419 ;;		line 64 in file "lcd.c"
 15420 ;; Parameters:    Size  Location     Type
 15421 ;;  data            1    wreg     unsigned char 
 15422 ;; Auto vars:     Size  Location     Type
 15423 ;;  data            1    8[COMRAM] unsigned char 
 15424 ;; Return value:  Size  Location     Type
 15425 ;;                  1    wreg      void 
 15426 ;; Registers used:
 15427 ;;		wreg, status,2, status,0, cstack
 15428 ;; Tracked objects:
 15429 ;;		On entry : 0/0
 15430 ;;		On exit  : 0/0
 15431 ;;		Unchanged: 0/0
 15432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;Total ram usage:        1 bytes
 15438 ;; Hardware stack levels used:    1
 15439 ;; Hardware stack levels required when called:    5
 15440 ;; This function calls:
 15441 ;;		_send_byte
 15442 ;; This function is called by:
 15443 ;;		_doDisplayLog
 15444 ;;		_tirePositioning
 15445 ;;		_doOperation
 15446 ;;		_main
 15447 ;;		_initLCD
 15448 ;;		_mainEEPROM
 15449 ;;		_mainEEPROMTest
 15450 ;;		_lcd_shift_cursor
 15451 ;;		_lcd_shift_display
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           
 15455                           	psect	text67
 15456  004A7E                     __ptext67:
 15457                           	opt callstack 0
 15458  004A7E                     _lcdInst:
 15459                           	opt callstack 23
 15460                           
 15461                           ;incstack = 0
 15462                           ;lcdInst@data stored from wreg
 15463  004A7E  6E09               	movwf	lcdInst@data,c
 15464                           
 15465                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 15466  004A80  948C               	bcf	3980,2,c	;volatile
 15467                           
 15468                           ;lcd.c: 66:     send_byte(data);
 15469  004A82  5009               	movf	lcdInst@data,w,c
 15470  004A84  EC30  F025         	call	_send_byte
 15471  004A88  0012               	return		;funcret
 15472  004A8A                     __end_of_lcdInst:
 15473                           	opt callstack 0
 15474                           
 15475 ;; *************** function _send_byte *****************
 15476 ;; Defined at:
 15477 ;;		line 55 in file "lcd.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  data            1    wreg     unsigned char 
 15480 ;; Auto vars:     Size  Location     Type
 15481 ;;  data            1    7[COMRAM] unsigned char 
 15482 ;; Return value:  Size  Location     Type
 15483 ;;                  1    wreg      void 
 15484 ;; Registers used:
 15485 ;;		wreg, status,2, status,0, cstack
 15486 ;; Tracked objects:
 15487 ;;		On entry : 0/0
 15488 ;;		On exit  : 0/0
 15489 ;;		Unchanged: 0/0
 15490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15495 ;;Total ram usage:        1 bytes
 15496 ;; Hardware stack levels used:    1
 15497 ;; Hardware stack levels required when called:    4
 15498 ;; This function calls:
 15499 ;;		_send_nibble
 15500 ;; This function is called by:
 15501 ;;		_lcdInst
 15502 ;;		_initLCD
 15503 ;;		_putch
 15504 ;; This function uses a non-reentrant model
 15505 ;;
 15506                           
 15507                           	psect	text68
 15508  004A60                     __ptext68:
 15509                           	opt callstack 0
 15510  004A60                     _send_byte:
 15511                           	opt callstack 24
 15512                           
 15513                           ;incstack = 0
 15514                           ;send_byte@data stored from wreg
 15515  004A60  6E08               	movwf	send_byte@data,c
 15516                           
 15517                           ;lcd.c: 57:     send_nibble(data >> 4);
 15518  004A62  3808               	swapf	send_byte@data,w,c
 15519  004A64  0B0F               	andlw	15
 15520  004A66  EC12  F025         	call	_send_nibble
 15521                           
 15522                           ;lcd.c: 60:     send_nibble(data);
 15523  004A6A  5008               	movf	send_byte@data,w,c
 15524  004A6C  EC12  F025         	call	_send_nibble
 15525  004A70  0012               	return		;funcret
 15526  004A72                     __end_of_send_byte:
 15527                           	opt callstack 0
 15528                           
 15529 ;; *************** function _send_nibble *****************
 15530 ;; Defined at:
 15531 ;;		line 44 in file "lcd.c"
 15532 ;; Parameters:    Size  Location     Type
 15533 ;;  data            1    wreg     unsigned char 
 15534 ;; Auto vars:     Size  Location     Type
 15535 ;;  data            1    6[COMRAM] unsigned char 
 15536 ;; Return value:  Size  Location     Type
 15537 ;;                  1    wreg      void 
 15538 ;; Registers used:
 15539 ;;		wreg, status,2, status,0, cstack
 15540 ;; Tracked objects:
 15541 ;;		On entry : 0/0
 15542 ;;		On exit  : 0/0
 15543 ;;		Unchanged: 0/0
 15544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;Total ram usage:        1 bytes
 15550 ;; Hardware stack levels used:    1
 15551 ;; Hardware stack levels required when called:    3
 15552 ;; This function calls:
 15553 ;;		_pulse_e
 15554 ;; This function is called by:
 15555 ;;		_send_byte
 15556 ;;		_initLCD
 15557 ;; This function uses a non-reentrant model
 15558 ;;
 15559                           
 15560                           	psect	text69
 15561  004A24                     __ptext69:
 15562                           	opt callstack 0
 15563  004A24                     _send_nibble:
 15564                           	opt callstack 25
 15565                           
 15566                           ;incstack = 0
 15567                           ;send_nibble@data stored from wreg
 15568  004A24  6E07               	movwf	send_nibble@data,c
 15569                           
 15570                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 15571  004A26  508C               	movf	3980,w,c	;volatile
 15572  004A28  0B0F               	andlw	15
 15573  004A2A  6E8C               	movwf	3980,c	;volatile
 15574                           
 15575                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 15576  004A2C  3807               	swapf	send_nibble@data,w,c
 15577  004A2E  0BF0               	andlw	240
 15578  004A30  108C               	iorwf	3980,w,c	;volatile
 15579  004A32  6E8C               	movwf	3980,c	;volatile
 15580                           
 15581                           ;lcd.c: 48:     pulse_e();
 15582  004A34  EC44  F024         	call	_pulse_e	;wreg free
 15583  004A38  0012               	return		;funcret
 15584  004A3A                     __end_of_send_nibble:
 15585                           	opt callstack 0
 15586                           
 15587 ;; *************** function _pulse_e *****************
 15588 ;; Defined at:
 15589 ;;		line 28 in file "lcd.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;  interruptSta    1    5[COMRAM] unsigned char 
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1    wreg      void 
 15596 ;; Registers used:
 15597 ;;		wreg
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;Total ram usage:        1 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; Hardware stack levels required when called:    2
 15610 ;; This function calls:
 15611 ;;		Nothing
 15612 ;; This function is called by:
 15613 ;;		_send_nibble
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text70
 15618  004888                     __ptext70:
 15619                           	opt callstack 0
 15620  004888                     _pulse_e:
 15621                           	opt callstack 25
 15622                           
 15623                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 15624                           
 15625                           ;incstack = 0
 15626  004888  0E00               	movlw	0
 15627  00488A  BEF2               	btfsc	4082,7,c	;volatile
 15628  00488C  0E01               	movlw	1
 15629  00488E  6E06               	movwf	pulse_e@interruptState,c
 15630                           
 15631                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 15632  004890  9EF2               	bcf	4082,7,c	;volatile
 15633                           
 15634                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 15635  004892  868C               	bsf	3980,3,c	;volatile
 15636                           
 15637                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 15638  004894  0E14               	movlw	20
 15639  004896                     u12837:
 15640  004896  2EE8               	decfsz	wreg,f,c
 15641  004898  D7FE               	bra	u12837
 15642  00489A  D000               	nop2	
 15643                           
 15644                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 15645  00489C  968C               	bcf	3980,3,c	;volatile
 15646                           
 15647                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 15648  00489E  0E53               	movlw	83
 15649  0048A0                     u12847:
 15650  0048A0  2EE8               	decfsz	wreg,f,c
 15651  0048A2  D7FE               	bra	u12847
 15652  0048A4  F000               	nop	
 15653                           
 15654                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 15655  0048A6  B006               	btfsc	pulse_e@interruptState,0,c
 15656  0048A8  D002               	bra	u8595
 15657  0048AA  9EF2               	bcf	4082,7,c	;volatile
 15658  0048AC  D001               	bra	u8596
 15659  0048AE                     u8595:
 15660  0048AE  8EF2               	bsf	4082,7,c	;volatile
 15661  0048B0                     u8596:
 15662  0048B0  0012               	return		;funcret
 15663  0048B2                     __end_of_pulse_e:
 15664                           	opt callstack 0
 15665                           
 15666 ;; *************** function ___llmod *****************
 15667 ;; Defined at:
 15668 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;  dividend        4    5[COMRAM] unsigned long 
 15671 ;;  divisor         4    9[COMRAM] unsigned long 
 15672 ;; Auto vars:     Size  Location     Type
 15673 ;;  counter         1   13[COMRAM] unsigned char 
 15674 ;; Return value:  Size  Location     Type
 15675 ;;                  4    5[COMRAM] unsigned long 
 15676 ;; Registers used:
 15677 ;;		wreg, status,2, status,0
 15678 ;; Tracked objects:
 15679 ;;		On entry : 0/0
 15680 ;;		On exit  : 0/0
 15681 ;;		Unchanged: 0/0
 15682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15686 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15687 ;;Total ram usage:        9 bytes
 15688 ;; Hardware stack levels used:    1
 15689 ;; Hardware stack levels required when called:    2
 15690 ;; This function calls:
 15691 ;;		Nothing
 15692 ;; This function is called by:
 15693 ;;		_main
 15694 ;; This function uses a non-reentrant model
 15695 ;;
 15696                           
 15697                           	psect	text71
 15698  0042EC                     __ptext71:
 15699                           	opt callstack 0
 15700  0042EC                     ___llmod:
 15701                           	opt callstack 28
 15702                           
 15703                           ;incstack = 0
 15704  0042EC  500A               	movf	___llmod@divisor,w,c
 15705  0042EE  100B               	iorwf	___llmod@divisor+1,w,c
 15706  0042F0  100C               	iorwf	___llmod@divisor+2,w,c
 15707  0042F2  100D               	iorwf	___llmod@divisor+3,w,c
 15708  0042F4  B4D8               	btfsc	status,2,c
 15709  0042F6  D024               	goto	l1249
 15710  0042F8  0E01               	movlw	1
 15711  0042FA  6E0E               	movwf	___llmod@counter,c
 15712  0042FC  D006               	goto	l10599
 15713  0042FE                     l10597:
 15714  0042FE  90D8               	bcf	status,0,c
 15715  004300  360A               	rlcf	___llmod@divisor,f,c
 15716  004302  360B               	rlcf	___llmod@divisor+1,f,c
 15717  004304  360C               	rlcf	___llmod@divisor+2,f,c
 15718  004306  360D               	rlcf	___llmod@divisor+3,f,c
 15719  004308  2A0E               	incf	___llmod@counter,f,c
 15720  00430A                     l10599:
 15721  00430A  AE0D               	btfss	___llmod@divisor+3,7,c
 15722  00430C  D7F8               	goto	l10597
 15723  00430E                     u12000:
 15724  00430E  500A               	movf	___llmod@divisor,w,c
 15725  004310  5C06               	subwf	___llmod@dividend,w,c
 15726  004312  500B               	movf	___llmod@divisor+1,w,c
 15727  004314  5807               	subwfb	___llmod@dividend+1,w,c
 15728  004316  500C               	movf	___llmod@divisor+2,w,c
 15729  004318  5808               	subwfb	___llmod@dividend+2,w,c
 15730  00431A  500D               	movf	___llmod@divisor+3,w,c
 15731  00431C  5809               	subwfb	___llmod@dividend+3,w,c
 15732  00431E  A0D8               	btfss	status,0,c
 15733  004320  D008               	goto	l10605
 15734  004322  500A               	movf	___llmod@divisor,w,c
 15735  004324  5E06               	subwf	___llmod@dividend,f,c
 15736  004326  500B               	movf	___llmod@divisor+1,w,c
 15737  004328  5A07               	subwfb	___llmod@dividend+1,f,c
 15738  00432A  500C               	movf	___llmod@divisor+2,w,c
 15739  00432C  5A08               	subwfb	___llmod@dividend+2,f,c
 15740  00432E  500D               	movf	___llmod@divisor+3,w,c
 15741  004330  5A09               	subwfb	___llmod@dividend+3,f,c
 15742  004332                     l10605:
 15743  004332  90D8               	bcf	status,0,c
 15744  004334  320D               	rrcf	___llmod@divisor+3,f,c
 15745  004336  320C               	rrcf	___llmod@divisor+2,f,c
 15746  004338  320B               	rrcf	___llmod@divisor+1,f,c
 15747  00433A  320A               	rrcf	___llmod@divisor,f,c
 15748  00433C  2E0E               	decfsz	___llmod@counter,f,c
 15749  00433E  D7E7               	goto	u12000
 15750  004340                     l1249:
 15751  004340  C006  F006         	movff	___llmod@dividend,?___llmod
 15752  004344  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 15753  004348  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 15754  00434C  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 15755  004350  0012               	return		;funcret
 15756  004352                     __end_of___llmod:
 15757                           	opt callstack 0
 15758                           
 15759 ;; *************** function _interruptHandler *****************
 15760 ;; Defined at:
 15761 ;;		line 1592 in file "main.c"
 15762 ;; Parameters:    Size  Location     Type
 15763 ;;		None
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;		None
 15766 ;; Return value:  Size  Location     Type
 15767 ;;                  1    wreg      void 
 15768 ;; Registers used:
 15769 ;;		wreg, status,2, status,0, cstack
 15770 ;; Tracked objects:
 15771 ;;		On entry : 0/0
 15772 ;;		On exit  : 0/0
 15773 ;;		Unchanged: 0/0
 15774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;Total ram usage:        0 bytes
 15780 ;; Hardware stack levels used:    1
 15781 ;; Hardware stack levels required when called:    1
 15782 ;; This function calls:
 15783 ;;		_updateMotorAEncoder
 15784 ;;		_updateMotorBEncoder
 15785 ;; This function is called by:
 15786 ;;		Interrupt level 2
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           	psect	intcode
 15791  000008                     __pintcode:
 15792                           	opt callstack 0
 15793  000008                     _interruptHandler:
 15794                           	opt callstack 17
 15795                           
 15796                           ;incstack = 0
 15797  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15798  00000A  EDFA  F022         	call	int_func,f	;refresh shadow registers
 15799                           
 15800                           	psect	intcode_body
 15801  0045F4                     __pintcode_body:
 15802                           	opt callstack 17
 15803  0045F4                     int_func:
 15804                           	opt callstack 17
 15805  0045F4  0006               	pop		; remove dummy address from shadow register refresh
 15806                           
 15807                           ;main.c: 1594:     if(INT1IF){
 15808  0045F6  A0F0               	btfss	4080,0,c	;volatile
 15809  0045F8  D005               	goto	i2l513
 15810                           
 15811                           ;main.c: 1597:         keyPressed = 1;
 15812  0045FA  0E01               	movlw	1
 15813  0045FC  0100               	movlb	0	; () banked
 15814  0045FE  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
 15815                           
 15816                           ; BSR set to: 0
 15817                           ;main.c: 1598:         INT1IF = 0;
 15818  004600  90F0               	bcf	4080,0,c	;volatile
 15819                           
 15820                           ;main.c: 1599:     } else if (TMR0IF) {
 15821  004602  D019               	goto	i2l516
 15822  004604                     i2l513:
 15823  004604  A4F2               	btfss	4082,2,c	;volatile
 15824  004606  D00C               	goto	i2l515
 15825                           
 15826                           ;main.c: 1600:     INTCONbits.TMR0IF = 0;
 15827  004608  94F2               	bcf	4082,2,c	;volatile
 15828                           
 15829                           ;main.c: 1601:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 15830  00460A  0EFB               	movlw	251
 15831  00460C  6ED7               	movwf	4055,c	;volatile
 15832                           
 15833                           ;main.c: 1602:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 15834  00460E  0E1E               	movlw	30
 15835  004610  6ED6               	movwf	4054,c	;volatile
 15836                           
 15837                           ;main.c: 1603:     millisecondsMeasured++;
 15838  004612  0E01               	movlw	1
 15839  004614  2674               	addwf	_millisecondsMeasured,f,c	;volatile
 15840  004616  0E00               	movlw	0
 15841  004618  2275               	addwfc	_millisecondsMeasured+1,f,c	;volatile
 15842  00461A  2276               	addwfc	_millisecondsMeasured+2,f,c	;volatile
 15843  00461C  2277               	addwfc	_millisecondsMeasured+3,f,c	;volatile
 15844                           
 15845                           ;main.c: 1604:    } else if (INT2IF){
 15846  00461E  D00B               	goto	i2l516
 15847  004620                     i2l515:
 15848  004620  A2F0               	btfss	4080,1,c	;volatile
 15849  004622  D004               	goto	i2l517
 15850                           
 15851                           ;main.c: 1605:        INT2IF = 0;
 15852  004624  92F0               	bcf	4080,1,c	;volatile
 15853                           
 15854                           ;main.c: 1606:        updateMotorBEncoder();
 15855  004626  EC34  F022         	call	_updateMotorBEncoder	;wreg free
 15856                           
 15857                           ;main.c: 1607:    } else if (INT0IF){
 15858  00462A  D005               	goto	i2l516
 15859  00462C                     i2l517:
 15860  00462C  A2F2               	btfss	4082,1,c	;volatile
 15861  00462E  D003               	goto	i2l516
 15862                           
 15863                           ;main.c: 1608:        INT0IF = 0;
 15864  004630  92F2               	bcf	4082,1,c	;volatile
 15865                           
 15866                           ;main.c: 1609:        updateMotorAEncoder();
 15867  004632  EC5F  F022         	call	_updateMotorAEncoder	;wreg free
 15868  004636                     i2l516:
 15869  004636  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15870  004638  0011               	retfie		f
 15871  00463A                     __end_of_interruptHandler:
 15872                           	opt callstack 0
 15873                           
 15874 ;; *************** function _updateMotorBEncoder *****************
 15875 ;; Defined at:
 15876 ;;		line 153 in file "main.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;		None
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  directionPin    2    3[COMRAM] int 
 15881 ;;  interruptPin    2    1[COMRAM] int 
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		wreg, status,2, status,0
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15892 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15894 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15895 ;;Total ram usage:        5 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		_interruptHandler
 15901 ;; This function uses a non-reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text73
 15905  004468                     __ptext73:
 15906                           	opt callstack 0
 15907  004468                     _updateMotorBEncoder:
 15908                           	opt callstack 17
 15909                           
 15910                           ;main.c: 154:   int interruptPinState = PORTBbits.RB2;
 15911                           
 15912                           ;incstack = 0
 15913  004468  A481               	btfss	3969,2,c	;volatile
 15914  00446A  D003               	goto	i2u736_40
 15915  00446C  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15916  00446E  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 15917  004470  D001               	goto	i2u736_48
 15918  004472                     i2u736_40:
 15919  004472  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15920  004474                     i2u736_48:
 15921  004474  5001               	movf	??_updateMotorBEncoder,w,c
 15922  004476  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 15923  004478  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 15924                           
 15925                           ;main.c: 155:   int directionPin = PORTCbits.RC0;
 15926  00447A  A082               	btfss	3970,0,c	;volatile
 15927  00447C  D003               	goto	i2u737_40
 15928  00447E  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15929  004480  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 15930  004482  D001               	goto	i2u737_48
 15931  004484                     i2u737_40:
 15932  004484  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15933  004486                     i2u737_48:
 15934  004486  5001               	movf	??_updateMotorBEncoder,w,c
 15935  004488  6E04               	movwf	updateMotorBEncoder@directionPin,c
 15936  00448A  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 15937                           
 15938                           ;main.c: 156:   if(directionPin == interruptPinState){
 15939  00448C  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 15940  00448E  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 15941  004490  E10E               	bnz	i2l6881
 15942  004492  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 15943  004494  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 15944  004496  A4D8               	btfss	status,2,c
 15945  004498  D00A               	goto	i2l6881
 15946                           
 15947                           ;main.c: 157:     motorBDistance--;
 15948  00449A  0EFF               	movlw	255
 15949  00449C  0100               	movlb	0	; () banked
 15950  00449E  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 15951  0044A0  0EFF               	movlw	255
 15952  0044A2  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 15953  0044A4  0EFF               	movlw	255
 15954  0044A6  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 15955  0044A8  0EFF               	movlw	255
 15956  0044AA  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 15957                           
 15958                           ;main.c: 158:   } else {
 15959  0044AC  0012               	return	
 15960  0044AE                     i2l6881:
 15961                           
 15962                           ;main.c: 159:     motorBDistance++;
 15963  0044AE  0E01               	movlw	1
 15964  0044B0  0100               	movlb	0	; () banked
 15965  0044B2  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 15966  0044B4  0E00               	movlw	0
 15967  0044B6  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 15968  0044B8  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 15969  0044BA  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 15970                           
 15971                           ; BSR set to: 0
 15972  0044BC  0012               	return		;funcret
 15973  0044BE                     __end_of_updateMotorBEncoder:
 15974                           	opt callstack 0
 15975                           
 15976 ;; *************** function _updateMotorAEncoder *****************
 15977 ;; Defined at:
 15978 ;;		line 184 in file "main.c"
 15979 ;; Parameters:    Size  Location     Type
 15980 ;;		None
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;  directionPin    2    3[COMRAM] int 
 15983 ;;  interruptPin    2    1[COMRAM] int 
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2, status,0
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15994 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;Total ram usage:        5 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; This function calls:
 16000 ;;		Nothing
 16001 ;; This function is called by:
 16002 ;;		_interruptHandler
 16003 ;; This function uses a non-reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text74
 16007  0044BE                     __ptext74:
 16008                           	opt callstack 0
 16009  0044BE                     _updateMotorAEncoder:
 16010                           	opt callstack 17
 16011                           
 16012                           ;main.c: 185:   int interruptPinState = PORTBbits.RB0;
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;incstack = 0
 16016  0044BE  A081               	btfss	3969,0,c	;volatile
 16017  0044C0  D003               	goto	i2u739_40
 16018  0044C2  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 16019  0044C4  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 16020  0044C6  D001               	goto	i2u739_48
 16021  0044C8                     i2u739_40:
 16022  0044C8  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 16023  0044CA                     i2u739_48:
 16024  0044CA  5001               	movf	??_updateMotorAEncoder,w,c
 16025  0044CC  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 16026  0044CE  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 16027                           
 16028                           ;main.c: 186:   int directionPin = PORTEbits.RE1;
 16029  0044D0  A284               	btfss	3972,1,c	;volatile
 16030  0044D2  D003               	goto	i2u740_40
 16031  0044D4  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 16032  0044D6  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 16033  0044D8  D001               	goto	i2u740_48
 16034  0044DA                     i2u740_40:
 16035  0044DA  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 16036  0044DC                     i2u740_48:
 16037  0044DC  5001               	movf	??_updateMotorAEncoder,w,c
 16038  0044DE  6E04               	movwf	updateMotorAEncoder@directionPin,c
 16039  0044E0  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 16040                           
 16041                           ;main.c: 187:   if(directionPin == interruptPinState){
 16042  0044E2  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 16043  0044E4  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 16044  0044E6  E10C               	bnz	i2l6889
 16045  0044E8  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 16046  0044EA  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 16047  0044EC  A4D8               	btfss	status,2,c
 16048  0044EE  D008               	goto	i2l6889
 16049                           
 16050                           ;main.c: 188:     motorADistance++;
 16051  0044F0  0E01               	movlw	1
 16052  0044F2  0100               	movlb	0	; () banked
 16053  0044F4  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 16054  0044F6  0E00               	movlw	0
 16055  0044F8  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 16056  0044FA  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 16057  0044FC  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 16058                           
 16059                           ;main.c: 189:   } else {
 16060  0044FE  0012               	return	
 16061  004500                     i2l6889:
 16062                           
 16063                           ;main.c: 190:     motorADistance--;
 16064  004500  0EFF               	movlw	255
 16065  004502  0100               	movlb	0	; () banked
 16066  004504  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 16067  004506  0EFF               	movlw	255
 16068  004508  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 16069  00450A  0EFF               	movlw	255
 16070  00450C  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 16071  00450E  0EFF               	movlw	255
 16072  004510  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 16073                           
 16074                           ; BSR set to: 0
 16075  004512  0012               	return		;funcret
 16076  004514                     __end_of_updateMotorAEncoder:
 16077                           	opt callstack 0
 16078                           
 16079                           	psect	rparam
 16080  0000                     
 16081                           	psect	temp
 16082  00007A                     btemp:
 16083                           	opt callstack 0
 16084  00007A                     	ds	1
 16085  0000                     int$flags	set	btemp
 16086  0000                     wtemp8	set	btemp+1
 16087  0000                     ttemp5	set	btemp+1
 16088  0000                     ttemp6	set	btemp+4
 16089  0000                     ttemp7	set	btemp+8
 16090                           tosu	equ	0xFFF
 16091                           tosh	equ	0xFFE
 16092                           tosl	equ	0xFFD
 16093                           stkptr	equ	0xFFC
 16094                           pclatu	equ	0xFFB
 16095                           pclath	equ	0xFFA
 16096                           pcl	equ	0xFF9
 16097                           tblptru	equ	0xFF8
 16098                           tblptrh	equ	0xFF7
 16099                           tblptrl	equ	0xFF6
 16100                           tablat	equ	0xFF5
 16101                           prodh	equ	0xFF4
 16102                           prodl	equ	0xFF3
 16103                           indf0	equ	0xFEF
 16104                           postinc0	equ	0xFEE
 16105                           postdec0	equ	0xFED
 16106                           preinc0	equ	0xFEC
 16107                           plusw0	equ	0xFEB
 16108                           fsr0h	equ	0xFEA
 16109                           fsr0l	equ	0xFE9
 16110                           wreg	equ	0xFE8
 16111                           indf1	equ	0xFE7
 16112                           postinc1	equ	0xFE6
 16113                           postdec1	equ	0xFE5
 16114                           preinc1	equ	0xFE4
 16115                           plusw1	equ	0xFE3
 16116                           fsr1h	equ	0xFE2
 16117                           fsr1l	equ	0xFE1
 16118                           bsr	equ	0xFE0
 16119                           indf2	equ	0xFDF
 16120                           postinc2	equ	0xFDE
 16121                           postdec2	equ	0xFDD
 16122                           preinc2	equ	0xFDC
 16123                           plusw2	equ	0xFDB
 16124                           fsr2h	equ	0xFDA
 16125                           fsr2l	equ	0xFD9
 16126                           status	equ	0xFD8


Data Sizes:
    Strings     402
    Constant    37
    Data        29
    BSS         545
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    115     121
    BANK0           128     87     115
    BANK1           256    107     167
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_66(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_84(CODE[3]), STR_80(CODE[3]), STR_75(CODE[3]), STR_70(CODE[3]), 
		 -> STR_66(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_62(CODE[2]), 
		 -> STR_55(CODE[16]), STR_53(CODE[14]), STR_51(CODE[11]), STR_49(CODE[9]), 
		 -> STR_47(CODE[16]), STR_45(CODE[13]), STR_43(CODE[13]), STR_41(CODE[9]), 
		 -> STR_39(CODE[13]), STR_37(CODE[14]), STR_35(CODE[10]), STR_31(CODE[9]), 
		 -> STR_20(CODE[14]), STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_62(CODE[2]), 
		 -> STR_55(CODE[16]), STR_53(CODE[14]), STR_51(CODE[11]), STR_49(CODE[9]), 
		 -> STR_47(CODE[16]), STR_45(CODE[13]), STR_43(CODE[13]), STR_41(CODE[9]), 
		 -> STR_39(CODE[13]), STR_37(CODE[14]), STR_35(CODE[10]), STR_31(CODE[9]), 
		 -> STR_20(CODE[14]), STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2040_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_63(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[9]), 
		 -> STR_58(CODE[9]), STR_57(CODE[10]), STR_56(CODE[10]), STR_54(CODE[3]), 
		 -> STR_52(CODE[3]), STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), 
		 -> STR_44(CODE[3]), STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_30(CODE[3]), STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), 
		 -> STR_26(CODE[11]), STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[3]), STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), 
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[5]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_62(CODE[2]), STR_55(CODE[16]), STR_53(CODE[14]), 
		 -> STR_51(CODE[11]), STR_49(CODE[9]), STR_47(CODE[16]), STR_45(CODE[13]), 
		 -> STR_43(CODE[13]), STR_41(CODE[9]), STR_39(CODE[13]), STR_37(CODE[14]), 
		 -> STR_35(CODE[10]), STR_31(CODE[9]), STR_20(CODE[14]), STR_18(CODE[10]), 
		 -> STR_16(CODE[6]), STR_14(CODE[7]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_62(CODE[2]), STR_55(CODE[16]), STR_53(CODE[14]), 
		 -> STR_51(CODE[11]), STR_49(CODE[9]), STR_47(CODE[16]), STR_45(CODE[13]), 
		 -> STR_43(CODE[13]), STR_41(CODE[9]), STR_39(CODE[13]), STR_37(CODE[14]), 
		 -> STR_35(CODE[10]), STR_31(CODE[9]), STR_20(CODE[14]), STR_18(CODE[10]), 
		 -> STR_16(CODE[6]), STR_14(CODE[7]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_62(CODE[2]), STR_55(CODE[16]), 
		 -> STR_53(CODE[14]), STR_51(CODE[11]), STR_49(CODE[9]), STR_47(CODE[16]), 
		 -> STR_45(CODE[13]), STR_43(CODE[13]), STR_41(CODE[9]), STR_39(CODE[13]), 
		 -> STR_37(CODE[14]), STR_35(CODE[10]), STR_31(CODE[9]), STR_20(CODE[14]), 
		 -> STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), STR_12(CODE[2]), 
		 -> STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), 
		 -> STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    ee_read_byte@_data	PTR unsigned char  size(2) Largest target is 1
		 -> mainEEPROMTest@b(COMRAM[1]), mainEEPROMTest@a(COMRAM[1]), mainEEPROM@b(COMRAM[1]), mainEEPROM@a(COMRAM[1]), 
		 -> readLogs@b(COMRAM[1]), readLogs@a(COMRAM[1]), readLogsOld@b(COMRAM[1]), readLogsOld@a(COMRAM[1]), 

    ee_write_byte@_data	PTR unsigned char  size(2) Largest target is 1
		 -> mainEEPROMTest@b(COMRAM[1]), mainEEPROMTest@a(COMRAM[1]), mainEEPROM@b(COMRAM[1]), mainEEPROM@a(COMRAM[1]), 
		 -> saveLogs@b(COMRAM[1]), saveLogs@a(COMRAM[1]), saveLogsOld@b(COMRAM[1]), saveLogsOld@a(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _sendArduinoStandbyClampRequest->_I2C_Master_Write
    _saveLogs->___awmod
    _saveLogs->___wmul
    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _readLogs->___awmod
    _readLogs->___wmul
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _sendArduinoAbortOperationMessage->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___fldiv
    ___flge->___xxtofl
    ___fldiv->___xxtofl
    ___flsub->___fladd
    ___fladd->___flmul
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_opErrorCorrectionDegrees
    _tirePositioning->_setMotorSpeeds
    _opErrorCorrectionDegrees->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doOperation

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  357130
                                            113 COMRAM     2     2      0
                                             91 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                           _readLogs
                      _replaceOldLog
                          _robotInit
     _sendArduinoStandbyClampRequest
 ---------------------------------------------------------------------------------
 (1) _sendArduinoStandbyClampRequest                       1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        8     8      0   10165
                                             26 COMRAM     8     8      0
                          _robotInit
                           _saveLogs
 ---------------------------------------------------------------------------------
 (2) _saveLogs                                            11    11      0    8573
                                             11 COMRAM    11    11      0
                            ___awmod
                             ___wmul
                      _ee_write_byte
 ---------------------------------------------------------------------------------
 (3) _ee_write_byte                                        3     1      2    1052
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0    1072
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readLogs                                            11    11      0    8638
                                             11 COMRAM    11    11      0
                            ___awmod
                             ___wmul
                       _ee_read_byte
 ---------------------------------------------------------------------------------
 (2) _ee_read_byte                                         3     1      2    1052
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         99    99      0  227529
                                             83 BANK0      4     4      0
                                              0 BANK1     91    91      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lldiv
                             ___wmul
                           ___xxtofl
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                            _opDelay
           _opErrorCorrectionDegrees
                             _printf
              _requestIsTireDropDone
   _sendArduinoAbortOperationMessage
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     37    33      4   25232
                                             24 BANK0     37    33      4
                            ___aldiv
                                _abs
                            _lcdInst
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                             18    12      6     636
                                              5 COMRAM    18    12      6
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     625
                                              5 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoAbortOperationMessage                     1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1840
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1741
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _opErrorCorrectionDegrees                            33    17     16   50924
                                             50 BANK0     33    17     16
                           ___xxtofl
                                _abs
                 _errorCorrectedMove
 ---------------------------------------------------------------------------------
 (3) _errorCorrectedMove                                  26     8     18   46557
                                             24 BANK0     26     8     18
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   22372
                                             10 BANK0     14     8      6
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   14774
                                            103 COMRAM    10     2      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    3086
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1597
                                             93 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5393
                                             44 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             19 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5267
                                             85 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4162
                                             69 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1333
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        12    10      2   55683
                                            101 COMRAM    10    10      0
                                             39 BANK0      2     0      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   48996
                                             97 COMRAM     4     4      0
                                             29 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   45357
                                             95 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           55    49      6   44749
                                             75 COMRAM    20    14      6
                                              0 BANK0     23    23      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7827
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7119
                                             36 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8333
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     543
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5806
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5527
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    6725
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    5622
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___wmul
     ___xxtofl
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___xxtofl (ARG)
           ___flge
             ___xxtofl (ARG)
           ___flmul
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opDelay
     _opErrorCorrectionDegrees
       ___xxtofl
       _abs
         ___aomod (ARG)
       _errorCorrectedMove
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _setMotorSpeeds
           ___xxtofl
           _set_pwm_duty_cycle
             ___fldiv
               ___xxtofl (ARG)
             ___flge
               ___xxtofl (ARG)
             ___flmul
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoAbortOperationMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___xxtofl (ARG)
         ___flge
           ___xxtofl (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___aldiv
       _abs
         ___aomod (ARG)
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___xxtofl (ARG)
           ___flge
             ___xxtofl (ARG)
           ___flmul
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _readLogs
     ___awmod
     ___wmul
     _ee_read_byte
   _replaceOldLog
     _robotInit
       _EncoderInit
       _I2C_Master_Init
         ___lldiv
       _initLCD
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _send_byte
           _send_nibble
             _pulse_e
         _send_nibble
           _pulse_e
     _saveLogs
       ___awmod
       ___wmul
       _ee_write_byte
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
   _sendArduinoStandbyClampRequest
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     1E0      37       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6B      A7       7       65.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     57      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     73      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     193      34        0.0%
DATA                 0      0     373       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 02 20:43:01 2019

                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CPD$ON 000000  
                          ___wmul@multiplicand 0008                                    __CFG_BORV$3 000000  
               doOperation@motorBStartDistance 0135                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                                    __CFG_OSC$HS 000000  
             __end_of_opErrorCorrectionDegrees 3A08                                            l304 3F7E  
                                          l306 3F8E                                            l317 1B02  
                                          l245 4852                                            l268 3AB4  
                                          l490 15E2                                            l718 33AE  
                                          l671 4036                                            l752 2AF8  
                                          l737 2F2E                                            l754 2B00  
                                          l691 2912                                            l739 2F36  
                                          l856 4194                                            l689 290A  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                          _PSA 007EAB                                            _abs 476C  
                                          _pad 4008                                   ___awmod@sign 000B  
                             ??_init_motor_PWM 0006                                            wreg 000FE8  
                                 ___flmul@aexp 003A                                   ___flmul@bexp 003F  
                                 ___flmul@sign 0039                                   ___flmul@temp 0044  
                                 ___flmul@prod 0040                              _doDisplayLog$2422 006C  
                         __end_of_ee_read_byte 4A0C                     __end_of_errorCorrectedMove 2896  
                                 __CFG_LVP$OFF 000000                                   ___fltol@exp1 0067  
                                 __CFG_WDT$OFF 000000                                           ?_abs 0018  
                                         l1413 2524                                           l1094 3B88  
                                         l1504 4794                                           l1424 2592  
                                         l1249 4340                                           l1425 258E  
                                         l1267 3C70                                           l1611 45A4  
                                         l1443 1DD4                                           l1460 2072  
                                         l1452 1FEC                                           l1277 3EA4  
                                         l1453 1FE8                                           l1374 22BA  
                                         l1358 21E8                                           l1535 35BE  
                                         l1383 2320                                           l1359 21C6  
                                         l1384 231C                                           l1491 32C4  
                                         l1484 3246                                           ?_pad 001A  
                                         l9003 2B14                                           l8311 30EC  
                                         l9031 2BF4                                           l8233 4720  
                                         l9017 2B66                                           l9009 2B44  
                                         l8219 422E                                           l8323 313A  
                                         l9107 3EF0                                           l9211 21D4  
                                         l9061 349A                                           l8229 470A  
                                         l8237 4688                                           l8261 402E  
                                         l8325 314E                                           l8317 3114  
                                         l9109 3EFE                                           l9213 21D8  
                                         l9133 20D2                                           l8501 25FA  
                                         l9071 34E4                                           l9063 349E  
                                         l8239 468C                                           l8271 4084  
                                         l8263 4040                                           l8343 31E6  
                                         l8335 31AA                                           l9055 2CDE  
                                         l9039 2C6A                                           l9311 2394  
                                         l8511 2630                                           l8415 241E  
                                         l9081 3502                                           l8257 4020  
                                         l9313 2396                                           l9161 211E  
                                         l9137 20D6                                           l8513 2632  
                                         l8505 2624                                           l8441 2484  
                                         l8433 246C                                           l9083 352A  
                                         l8267 4058                                           l8339 31C0  
                                         l8371 37B8                                           l8363 375C  
                                         l8355 371E                                           l9411 0BB4  
                                         l9307 238C                                           l9235 222E  
                                         l9227 220C                                           l8451 24D4  
                                         l8427 2456                                           l8419 2422  
                                         l8603 1F94                                           l9331 3F82  
                                         l9077 34F4                                           l8365 3770  
                                         l9421 0C66                                           l9237 2232  
                                         l9245 2244                                           l9157 211A  
                                         l8533 1D80                                           l9087 355E  
                                         l9079 34FC                                           l8375 37CE  
                                         l8359 3742                                           l9431 0D76  
                                         l9263 22DE                                           l9255 22AA  
                                         l8471 253A                                           l8551 1DC0  
                                         l8535 1D84                                           l9335 3F92  
                                         l9273 22F4                                           l9169 213E  
                                         l8465 2522                                           l8633 204E  
                                         l8609 1FB2                                           l8561 1DF2  
                                         l8553 1DC4                                           l8537 1D94  
                                         l8713 3E06                                           l8705 3DDE  
                                         l8379 37F4                                           l8723 3BEA  
                                         l9371 0A1E                                           l9363 0A16  
                                         l9355 0A00                                           l9523 4146  
                                         l8459 24FC                                           l8395 23DE  
                                         l8707 3DEA                                           l8725 3BFE  
                                         l9357 0A02                                           l9381 0A6E  
                                         l9525 4152                                           l8477 2558  
                                         l8645 2090                                           l8629 2030  
                                         l9621 2848                                           l8911 2AB0  
                                         l8735 3C5A                                           l8751 3E8E  
                                         l8743 3E32                                           l9455 0F3C  
                                         l9447 0E80                                           l9439 0DE4  
                                         l9375 0A22                                           l9367 0A1A  
                                         l9359 0A12                                           l9535 4186  
                                         l9279 22FE                                           l9199 217A  
                                         l8399 23E2                                           l8663 3B72  
                                         l8655 3B28                                           l9711 3D36  
                                         l8809 46F8                                           l8745 3E46  
                                         l9393 0ADA                                           l8497 25D6  
                                         l8761 3256                                           l9633 2878  
                                         l9625 2854                                           l8843 4528  
                                         l8907 2A98                                           l8923 3372  
                                         l9483 111E                                           l9395 0AF8  
                                         l9379 0A2C                                           l9731 41C6  
                                         l9299 2366                                           l8659 3B5C  
                                         l8771 3286                                           l9715 3D4C  
                                         l9707 3D28                                           l9547 4362  
                                         l8845 4534                                           l8941 33FA  
                                         l8933 33C4                                           l9493 1164  
                                         l9469 100C                                           l9397 0B06  
                                         l8669 3BC0                                           l8781 32F6  
                                         l8773 32AC                                           l9629 286C  
                                         _P1M0 007DEE                                           l8951 3452  
                                         l9671 4426                                           l9751 420C  
                                         l9743 41F4                                           l9735 41D4  
                                         l9727 41BA                                           l8695 3DC6  
                                         l8679 3D7C                                           l8767 3274  
                                         l9815 3AC8                                           _P1M1 007DEF  
                                         l8873 292C                                           l8937 33DC  
                                         l9489 115A                                           l9673 444C  
                                         l9737 41DC                                           l8769 327A  
                                         l9905 1B74                                           l9913 1BC8  
                                         l8859 28EC                                           l8955 346A  
                                         l8947 3438                                           l9499 117C  
                                         l9747 41FE                                           l8699 3DD6  
                                         l8779 32EA                                           l9683 3CAE  
                                         l9923 1C4A                                           l9931 1CE4  
                                         l9907 1B90                                           l8877 293C  
                                         l8797 3336                                           l9941 1D18  
                                         l9925 1C66                                           l9917 1C02  
                                         l8887 2A34                                           l9695 3CE8  
                                         l9951 1D4A                                           l9919 1C1E  
                                         STR_1 FFCD                                           STR_2 FF71  
                                         l8969 2F6E                                           l9697 3CF4  
                                         l9689 3CC6                                           STR_3 FFD2  
                                         STR_4 FFC1                                           l8979 305A  
                                         l9891 1AF2                                           l9883 1A9A  
                                         l9795 3A1C                                           STR_5 FEAC  
                                         STR_6 FFD1                                           l9877 1A7A  
                                         l9869 1A32                                           l9789 3A14  
                                         STR_7 FEE7                                           STR_8 FFD1  
                                         l9887 1AC6                                           STR_9 FE7C  
                                         l9897 1B12                                           l9999 4884  
                                         _LATB 000F8A                                           _LATD 000F8C  
                                         u9120 2588                                           u9310 1FE2  
                                         u9160 25E4                                           u8610 4226  
                                         u9170 2608                                           u9260 1DE0  
                                         u9501 3BCA                                           u8630 426E  
                                         u9350 203E                                           u9270 1F56  
                                         u9430 3D6A                                           u9520 3C02  
                                         u9360 205C                                           u9440 3D9A  
                                         u8810 4826                                           u8650 46AE  
                                         u9275 1F4C                                           u8820 4828  
                                         u8740 47F6                                           u9445 3D90  
                                         u9550 3E4A                                           u8750 47F8  
                                         u8670 47C6                                           u9630 3300  
                                         u8760 4764                                           u8680 47C8  
                                         u9480 3DF0                                           u8657 46A4  
                                         u8930 3774                                           u8690 477A  
                                         u8770 4766                                           u9730 2ECE  
                                         u8595 48AE                                           u8851 311A  
                                         u8596 48B0                                           u9820 2900  
                                         u8780 458C                                           u8870 3152  
                                         u9910 2A82                                           u8790 458E  
                                         u9750 2EF4                                           u9680 46F4  
                                         u9840 2926                                           u9745 2ED0  
                                         u9850 2A42                                           u9931 3352  
                                         u9780 28BE                                           u9765 2EF6  
                                         u9870 2A64                                           u9790 28C0  
                                         u9871 2A62                                           u9880 2A72  
                                         u9890 2A76                                           u9980 33F0  
                                         u9990 341C                                           u9997 3412  
                                 __CFG_PWRT$ON 000000                                           abs@a 0018  
                                         _dbuf 0173                                           _atoi 3488  
                                         _ctoa 4514                                           _main 11B0  
                                         _dtoa 2896                       __end_of_interruptHandler 463A  
                                         _keys FE47                                           _logs 01A7  
                                         _prec 00E3                                           _nout 00DF  
                                         pad@i 0021                                           pad@p 001E  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0023  
                                         fsr2l 000FD9                                           _stoa 3348  
                                         btemp 007A                                           _utoa 2F10  
                                         _xtoa 2ADA                                           prodh 000FF4  
                                         prodl 000FF3                                           start 000E  
                                __CFG_IESO$OFF 000000                        __size_of_setMotorSpeeds 0098  
                              ___fldiv@new_exp 0025                            __end_of_EncoderInit 4A24  
                                __CFG_MCLRE$ON 000000             tirePositioning@bottomPreviousState 00AF  
                                 ___param_bank 000000                                          ??_abs 001A  
                                        ??_pad 0020                       __size_of_tirePositioning 0364  
                        I2C_Master_Read@ackBit 0007                               ?_I2C_Master_Init 0013  
                             ?_I2C_Master_Read 0001                               ?_I2C_Master_Wait 0001  
                             ?_I2C_Master_Stop 0001                                 replaceOldLog@i 001B  
                    doOperation@distanceToPole 013E                                          l10005 393C  
                                        l10111 18F8                                          l10009 39B0  
                                        l10131 194E                                          l10123 1936  
                                        l10141 19A6                                          l10109 18DC  
                                        l10301 01A0                                          l10135 1964  
                                        l10127 1944                                          l10151 19E0  
                                        l10311 01C8                                          l10081 170E  
                                        l10059 1624                                          l10149 19C4  
                                        l10333 0292                                          l10173 382A  
                                        l10407 059E                                          l10191 38B0  
                                        l10167 3822                                          l10521 0966  
                                        l10513 0948                                          l10409 05A2  
                                        l10185 389A                                          l10435 0690  
                                        l10371 04D6                                          l10339 02FC  
                                        l10507 08EA                                          l10605 4332  
                                        l10525 0972                                          l10461 0790  
                                        l10437 0696                                          l10509 092C  
                                        l10293 013E                                          l10529 0978  
                                        l10377 04EE                                          l10393 054E  
                                        l10545 35D0                                          l10459 0788  
                                        l10387 0542                                          l10379 04F8  
                                        l10493 089A                                          l10581 36A8  
                                        l10557 3618                                          l10569 3660  
                                        l10921 149A                                          l10841 126C  
                                        l10907 1434                                          l10827 1202  
                                        l10597 42FE                                          l10599 430A  
                                        l10951 1544                                          l10927 14AA  
                                        l10849 129A                                          l10937 14D4  
                                        l10971 1584                                          l10963 156A  
                                        l10955 1550                                          l10939 1504  
                                        l10869 1346                                          l10983 15A8  
                                        l10975 1590                                          l10967 1576  
                                        l10959 155C                                          l10991 15B6  
                                        l10887 13AC                                          l10979 159C  
                                ___fltol@sign1 0066                                __end_of___aldiv 3D5E  
                                  ?_TIMER_INIT 0001                                __end_of___aodiv 3208  
                                        ?_atoi 000D                                          ?_ctoa 0025  
                              __end_of___fladd 23B2                                          ?_main 0001  
                                        ?_dtoa 0025                                __end_of___aomod 3816  
                                        _CCP1X 007DED                                __end_of___fldiv 263A  
                                        _CCP1Y 007DEC                                          _CCP2X 007DD5  
                                        _CCP2Y 007DD4                                          _EEADR 000FA9  
                                        STR_10 FFBD                                          STR_11 FFDA  
                                        STR_12 FFFC                                          STR_20 FF03  
                                        STR_13 FFC1                                          STR_21 FFEC  
                                        STR_22 FFE3                                          STR_30 FFD1  
                                        STR_14 FFC6                                          STR_15 FFC1  
                                        STR_23 FFE6                                          STR_31 FF99  
                                        STR_40 FFD1                                          STR_24 FFE0  
                                        STR_16 FFD4                                          STR_32 FEBB  
                                        STR_17 FFC1                                          STR_41 FFAB  
                                        STR_25 FF7B                                          STR_33 FECA  
                                        STR_50 FFD1                                          STR_42 FFD1  
                                        STR_34 FFD1                                          STR_18 FF67  
                                        STR_26 FF5C                                          STR_19 FFD1  
                                        STR_35 FF85                                          STR_51 FF51  
                                        STR_27 FF45                                          STR_43 FF11  
                                        STR_52 FFD1                                          STR_44 FFD1  
                                        STR_36 FFD1                                          STR_28 FE9C  
                              __end_of___awmod 4216                                          STR_29 FF38  
                                        STR_45 FF1E                                          STR_37 FEF5  
                                        STR_53 FED9                                          STR_70 FFF6  
                                        STR_54 FFD1                                          STR_46 FFD1  
                                        STR_38 FFD1                                          STR_39 FF2B  
                                        STR_47 FE8C                                          STR_55 FE6C  
                                        STR_48 FFD1                                          STR_80 FFF9  
                                        STR_64 FFF3                                          STR_56 FF8F  
                                        STR_49 FFA2                                          STR_66 FFF3  
                                        STR_82 FFF0                                          STR_58 FFB4  
                                        STR_75 FFED                                          STR_84 FFF0  
                                        STR_68 FFF6                                          STR_78 FFF9  
                              __end_of___flmul 20A6                                __end_of___flsub 45F4  
                              __end_of___fltol 3E18                                          ?_stoa 0013  
                              __end_of___lldiv 41A6                                          u10020 347E  
                                        u10110 2AEE                                          ?_utoa 0025  
                                        u10040 2F24                                          u10200 2C46  
                                        u10210 2C7A                                          u10130 2B62  
                                        u11010 1064                                          u10300 358E  
                                        u10140 2B98                                          u11100 2840  
                                        u10205 2C34                                          u10310 3590  
                                        u10070 3084                                          u10230 2C9C  
                                        u10150 2B9A                                          u10071 3082  
                                        u10231 2C9A                                          u12000 430E  
                                        u10080 3092                                          u10240 2CAA  
                                        u11040 4156                                          u11120 2864  
                                        u10090 3096                                          u10250 2CAE  
                                        u10170 2BD2                                          u10180 2BD4  
                                        u10500 21AE                                          u11300 3ADC  
                                        u11310 3AF2                                          u10280 34E0  
                                        u11320 1A3C                                          u11145 43DE  
                                        u11250 41E0                                          u10530 21F0  
                                        u11330 1A50                                __end_of___lodiv 3C92  
                                        u10380 3F4A                                          u11500 1CFA  
                                        u11420 1B26                                          u11190 3CF8  
                                        u11510 1D0E                                          u11430 1B3A  
                                        u11095 4944                                          ?_xtoa 0025  
                                        u10480 219C                                          u11096 4946  
                                        u11520 1D2C                                          u11328 1A40  
                                        u11280 3A6A                                __end_of___llmod 4352  
                                        u10490 21AC                                          u11530 1D40  
                                        u11450 1BAA                                          u11338 1A54  
                                        u10740 2372                                          u10660 2302  
                                        u11470 1C38                                          u11710 0182  
                                        u10920 0BE8                                          u11640 19BC  
                                        u10680 2316                                          u11720 0194  
                                        u11730 01B2                                          u11650 383A  
                                        u12370 1572                                          u10940 0CBE  
                                        u11740 01C2                                          u11716 0184  
                                        u10870 0B3E                                          u11830 0596  
                                        u11726 0196                                          u11670 3902  
                                        u12607 139E                                          u10880 0B40  
                                        u11920 095A                                          u11760 02F8  
                                        u11736 01B4                                          u11680 3918  
                                        u12617 13B8                                          u10890 0B4E  
                                        u11770 04CE                                          u11746 01C4  
                                        u12707 01F2                                          u11691 00A6  
                                        u12627 1440                                          u11860 0870  
                                        u12717 020A                                          u12637 14C2  
                                        u10990 0F70                                          u11870 087C  
                                        u11790 04E6                                          u11950 3610  
                                        _T0PS0 007EA8                                          u12807 171A  
                                        u12727 045A                                          u12647 1538  
                                        u12567 11C0                                          _T0PS1 007EA9  
                                        u11880 0888                                          u11960 3658  
                                        _T0PS2 007EAA                                __end_of___lomod 3EC6  
                                        u12817 192A                                          u12737 0472  
                                        u12657 15F6                                          u12577 11D6  
                                        u11890 0894                                          u11866 0872  
                                        u11970 36A0                                          u12827 19E6  
                                        u12747 079E                                          u12667 4288  
                                        u12587 12A6                                          u11876 087E  
                                        u11980 36E8                                          u12837 4896  
                                        u12757 07B6                                          u12677 42A0  
                                        u12597 1352                                          u11886 088A  
                                        u12847 48A0                                          u12767 19FE  
                                        u12687 42B2                                          u11896 0896  
                                        u12777 1A16                                          u12697 42D4  
                                        u12787 160C                                          u12797 1630  
                                        i2l513 4604                                          i2l515 4620  
                                        i2l516 4636                                          i2l517 462C  
                                 main@keyValue 016A                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 008F  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 4A8A  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 0166                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0082  
                  set_pwm_duty_cycle@duty_valB 0084                                __end_of_opDelay 43B6  
                              __end_of_initLCD 42EC                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 00AD                                          _flags 0078  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FE63                 init_motor_PWM@TIMER2_PRESCALER FE62  
                                        _fputc 4216                                __end_of_isalpha 476C  
                                        _fputs 4700                                __end_of_isdigit 482E  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 00E1  
                                        ctoa@c 0027                                          _putch 4A72  
                                        ctoa@w 0028                                          main@i 0167  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 47CE                                __end_of_isspace 4700  
                              __end_of_isupper 47FE                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 4514                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 09A8                    __end_of_updateMotorBEncoder 44BE  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 48B2  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          utoa@d 0027  
                                        utoa@i 0043                                          utoa@n 003B  
                                        utoa@p 0037                                          utoa@w 0039  
                                        status 000FD8                    I2C_Master_Read@receivedByte 0008  
                    requestIsTireDropDone@data 0009                                          wtemp8 007B  
                                        xtoa@c 004A                                          xtoa@d 0027  
                                        xtoa@i 0048                                          xtoa@n 0040  
                                        xtoa@p 003C                                          xtoa@w 003E  
                                        xtoa@x 002F                                __end_of_strncmp 3F70  
                              __end_of_toupper 45AE                       errorCorrectedMove@ASpeed 00AE  
                             ___lodiv@dividend 0006                       errorCorrectedMove@BSpeed 00B0  
                               __CFG_PBADEN$ON 000000                                   _toupper$2097 0012  
                              __initialization 409E                            main@currentLogState 0168  
                                 __end_of_atoi 35C8                                   __end_of_ctoa 4564  
                                 __end_of_main 1600                                   __end_of_dtoa 2ADA  
                                 __end_of_keys FE58                                   __end_of_stoa 3488  
                        __size_of_doDisplayLog 03F0                                   __end_of_utoa 30C0  
                                 __end_of_xtoa 2D08                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 0072  
                                       ??_dtoa 002F                               opDelay@startTime 0014  
                                       ??_stoa 0017                                         ??_utoa 002F  
                                       ??_xtoa 0030                                  __activetblptr 000002  
                      set_pwm_duty_cycle@dutyA 0068                        set_pwm_duty_cycle@dutyB 006C  
                            ?_I2C_Master_Start 0001                               ___lodiv@quotient 0016  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 36F2  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0074  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                         doOperation@tiresOnPole 0157  
                                       ?_putch 0001                         doOperation@tiresToDrop 0152  
                                       _INT0IE 007F94                                         _INT0IF 007F91  
                                       _INT1IE 007F83                                         _INT1IF 007F80  
                                       _INT2IE 007F84                                         _INT2IF 007F81  
                                       i2l6881 44AE                                         i2l6889 4500  
                           _set_pwm_duty_cycle 2D08                                    _EncoderInit 4A0C  
                                vfpfcnvrt@done 0082                                         _TMR0IE 007F95  
                                       _TMR0IF 007F92                                         _TMR0ON 007EAF  
                                       _TMR2ON 007E52                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                               __end_of___xxtofl 3348  
            __size_of_opErrorCorrectionDegrees 00EE                                   _doDisplayLog 1600  
                          __size_of_TIMER_INIT 001E                      ?_opErrorCorrectionDegrees 00B2  
     opErrorCorrectionDegrees@maxOperationTime 00BE                            ?_set_pwm_duty_cycle 0068  
                               __CFG_XINST$OFF 000000                          _encoderAInterruptLast 00E5  
                                 vfprintf@cfmt 0060                          __end_of_ee_write_byte 485C  
                                       ___flge 3AF4                                      ??___aldiv 000E  
                                    ??___aodiv 0016                                      ??___fladd 004E  
                                    ??___aomod 0016                                         ___wmul 4902  
                                    ??___fldiv 001C                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 000A                                      ??___flmul 0035  
                                    ??___flsub 005E                                      ??___fltol 0062  
                                    ??___lldiv 000E                                      ??___lodiv 0016  
                                    ??___llmod 000E                                      ??___lomod 0016  
                             doOperation@F3432 016B                               __end_of_readLogs 391A  
                                       clear_0 40E6                                         clear_1 40F8  
                                       clear_2 4104                                ___awmod@divisor 0008  
                              ___awmod@counter 000A                                      ??_lcdInst 0009  
                                       _printf 48DA                                         pad@buf 001C  
                                       ctoa@fp 0025                    ?_sendArduinoTireDropRequest 0001  
                                       dtoa@fp 0025                updateMotorBEncoder@directionPin 0004  
                                       _strlen 467E                          __size_of_ee_read_byte 001A  
                             __end_of_saveLogs 3AF4                                      ??_opDelay 000C  
                                    ??_initLCD 000A                                         fputc@c 000A  
                                       fputs@c 0017                                         fputs@i 0018  
                                       fputs@s 0013                                      ??_isalpha 0008  
                                    ??_isdigit 0008                          _requestIsTireDropDone 485C  
                         ??_set_pwm_duty_cycle 0070                              ??_tirePositioning 009C  
                                    ??_islower 0008                                   __mediumconst FE46  
                                    ??_isspace 0008               doOperation@currentOperationState 0151  
                _opErrorCorrectionDegrees$2427 00CB                                         tblptrh 000FF7  
                                    ??_isupper 0008                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0023  
                                       stoa@fp 0013                               __end_of_vfprintf 4468  
                                    ??_pulse_e 0006                                         utoa@fp 0025  
                                       xtoa@fp 0025                                      ??_strncmp 000C  
                                    ??_toupper 000E                                     ___flge@ff1 0014  
                                   ___flge@ff2 0018                                   ___xxtofl@arg 0010  
                        pulse_e@interruptState 0006                                   ___xxtofl@exp 000F  
                                 ___xxtofl@val 0006                                     __accesstop 0080  
                      __end_of__initialization 4116                            _setMotorSpeeds$2424 0090  
                          _setMotorSpeeds$2425 0094                                  ___rparam_used 000001  
                               _setMotorSpeeds 3F70                  doOperation@tiresOnPoleAfterOp 012B  
                                   ___fltol@f1 005E                           __end_of_happynewyear FE5F  
                               __pcstackCOMRAM 0001                                   _ee_read_byte 49F2  
                                 __pidataBANK0 4A94                                   __pidataBANK1 4A3A  
                      opDelay@maxOperationTime 0008                                  __end_of_fputc 4282  
                                __end_of_fputs 4738                                  __end_of_putch 4A7E  
                                      ??_fputc 000E                                        ??_fputs 0017  
                                      ??_putch 0009                                     __pbssBANK0 00D7  
                                   __pbssBANK1 016B                         __end_of_setMotorSpeeds 4008  
     __end_of_sendArduinoAbortOperationMessage 49D4      __size_of_sendArduinoAbortOperationMessage 0022  
           ??_sendArduinoAbortOperationMessage 0009              ?_sendArduinoAbortOperationMessage 0001  
             _sendArduinoAbortOperationMessage 49B2                              ?_interruptHandler 0001  
                           _errorCorrectedMove 263A                             ??_interruptHandler 0006  
                        _encoderBInterruptLast 00E6                                        ?___flge 0014  
                                      ?___wmul 0006             tirePositioning@distanceRecordedTop 00B1  
                                   _clicksPerM FE67                            ?_errorCorrectedMove 0098  
                           __size_of_send_byte 0012                                   ??_TIMER_INIT 0006  
                                      ?_printf 009D                                        ?_strlen 0006  
                                      _T2CKPS0 007E50                                        _T2CKPS1 007E51  
                  tirePositioning@topBreakbeam 00B9                         ?_requestIsTireDropDone 0001  
                           __size_of_robotInit 0044                                      ?___xxtofl 0006  
       __end_of_sendArduinoStandbyClampRequest 496E        __size_of_sendArduinoStandbyClampRequest 0022  
               _sendArduinoStandbyClampRequest 494C                             __size_of_vfpfcnvrt 07F6  
      opErrorCorrectionDegrees@distanceDegrees 00BA                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                         ??_errorCorrectedMove 0072                               ___lomod@dividend 0006  
                         __size_of_send_nibble 0016                                ?_setMotorSpeeds 008A  
                                    ?_readLogs 0001    opErrorCorrectionDegrees@motorAStartDistance 00CF  
                                opDelay@millis 0006                             __end_of_TIMER_INIT 49F2  
                                    ?_saveLogs 0001                                        __Hparam 0000  
                                   _keyPressed 00E9                                        __Lparam 0000  
              tirePositioning@maxOperationTime 0098                                        ___aldiv 3C92  
                              __size_of___flge 00D0                                        ___aodiv 30C0  
                                      ___fladd 20A6                                        ___aomod 36F2  
                                      ___fldiv 23B2                                        ___awmod 41A6  
                                      ___flmul 1D54                                        ___flsub 45AE  
                                      ___fltol 3D5E                                        ___lldiv 4124  
                              __size_of___wmul 0026                                        ___lodiv 3BC4  
                                      ___llmod 42EC                                        ___lomod 3E18  
                                    ?_vfprintf 0097                                        __pcinit 409E  
                                      __ramtop 1000                                        _lcdInst 4A7E  
                                      __ptext0 11B0                                        __ptext1 494C  
                                      __ptext2 35C8                                        __ptext3 3A08  
                                      __ptext4 482E                                        __ptext5 463A  
                                      __ptext6 4282                                        __ptext7 43B6  
                                      __ptext8 4A0C                                        __ptext9 3816  
                              __size_of_printf 0028                                      _T0CONbits 000FD5  
                                      _opDelay 4352                                __size_of_strlen 0044  
                                      _initLCD 4282                                 _motorADistance 00DB  
                                 __size_of_abs 0032                                   __size_of_pad 0096  
                                      _isalpha 4738                                        _isdigit 47FE  
                                   ??___xxtofl 000A                               ___awmod@dividend 0006  
                               _motorBDistance 00D7                               ___aldiv@dividend 0006  
                                      _islower 479E                                        _isspace 46C2  
                      doOperation@startedDistA 0108                        doOperation@startedDistB 010C  
                                      _isupper 47CE                       __size_of_I2C_Master_Init 005C  
                     __size_of_I2C_Master_Read 0024                       __size_of_I2C_Master_Wait 0012  
                     __size_of_I2C_Master_Stop 0008                                        atoi@neg 0013  
                                      _pulse_e 4888                                  ??_doOperation 00D3  
            opErrorCorrectionDegrees@goalSpeed 00B2                                        _strncmp 3EC6  
                               __pintcode_body 45F4                                        _toupper 4564  
                  _topBreakBeamTriggeredChange 00E8                           end_of_initialization 4116  
                        __end_of_LCD_SIZE_HORZ FE62                              __end_of_send_byte 4A72  
                        __end_of_LCD_SIZE_VERT FE61                                   ?_EncoderInit 0001  
                        doOperation@isDoneDrop 0139                                        fputc@fp 000C  
                                   ??_readLogs 000C                                  __Lmediumconst FE46  
                                      int_func 45F4                                        fputs@fp 0015  
                      __size_of_init_motor_PWM 0028                              __end_of_robotInit 467E  
                          ee_read_byte@address 0008                      __size_of_I2C_Master_Start 0008  
                    __size_of_I2C_Master_Write 000A                                     ??_saveLogs 000C  
                              ___lldiv@divisor 000A                                ___lldiv@counter 0012  
                 __size_of_updateMotorAEncoder 0056                              __end_of_vfpfcnvrt 11B0  
           tirePositioning@startDistanceBottom 00A5                   __size_of_updateMotorBEncoder 0056  
                             ___aldiv@quotient 0010                           doDisplayLog@keyValue 006B  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE              doOperation@distanceFromLastPoleCM 013C  
                              _tirePositioning 19F0                                     ??_vfprintf 0060  
                         doDisplayLog@keypress 0069                                        strlen@a 0008  
                                      strlen@s 0006                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82                                      _PORTEbits 000F84  
         updateMotorBEncoder@interruptPinState 0002                                    ___fladd@grs 0055  
                                ___xxtofl@sign 000E                                      _TRISAbits 000F92  
                  doOperation@bottomLaserState 0150                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISEbits 000F96  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
                                 _happynewyear FE58                    doOperation@distanceToPoleCM 0148  
                 tirePositioning@startDistance 00A9                                    ___flmul@grs 003B  
  opErrorCorrectionDegrees@motorBStartDistance 00C7                  doOperation@totalTiresSupplied 0146  
                                send_byte@data 0008                            __end_of_doOperation 09BA  
            opErrorCorrectionDegrees@turnRatio 00B4                         __size_of_replaceOldLog 012A  
                               __end_of___flge 3BC4                                    vfpfcnvrt@ap 0050  
                                  vfpfcnvrt@cp 0080                                    vfpfcnvrt@fp 004C  
                                  vfpfcnvrt@ll 0086                                 __end_of___wmul 4928  
                        doOperation@poleNumber 0159                                 __end_of_printf 4902  
                               __end_of_strlen 46C2                            start_initialization 409E  
                              ___lodiv@divisor 000E                    __size_of_set_pwm_duty_cycle 0208  
                              ___lodiv@counter 001E                      setMotorSpeeds@motorASpeed 008A  
                    setMotorSpeeds@motorBSpeed 008E                                    __end_of_abs 479E  
                                  __end_of_pad 409E                         __size_of_ee_write_byte 002E  
                      errorCorrectedMove@error 00AA                       _opErrorCorrectionDegrees 391A  
                            ??_I2C_Master_Init 0017                              ??_I2C_Master_Read 0007  
                            ??_I2C_Master_Wait 0006                                 readLogs@bigNum 000F  
                            ??_I2C_Master_Stop 0007                                ___llmod@divisor 000A  
                              ___llmod@counter 000E                        __end_of_tirePositioning 1D54  
                                  vfprintf@fmt 0099                                       ??___flge 001C  
                                     ??___wmul 000A                          main@currentRobotState 0169  
                     I2C_Master_Init@clockFreq 0013                                    __pdataBANK0 00EA  
                                  __pdataBANK1 0193                        ??_requestIsTireDropDone 0009  
                          replaceOldLog@i_1097 001D                            replaceOldLog@i_1098 001F  
                          replaceOldLog@i_1099 0021                               __CFG_LPT1OSC$OFF 000000  
                            ee_read_byte@_data 0006                 doOperation@tiresDeployedOnPole 0155  
              tirePositioning@startDistanceTop 00A1                                doOperation@send 0126  
                                     ??_printf 0062                      __size_of_interruptHandler 4632  
                                     ??_strlen 0008                                      ___fladd@a 004A  
                                    ___fladd@b 0046                                      ___fldiv@a 0018  
                                    ___fldiv@b 0014                           ee_write_byte@address 0008  
                                  __pbssBIGRAM 01A7                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                    __pbssCOMRAM 0074  
                                    ___flsub@a 005A                                      ___flsub@b 0056  
                                __pcstackBANK0 0080                                  __pcstackBANK1 0100  
                             ___aodiv@dividend 0006                                  _replaceOldLog 35C8  
                             ??_setMotorSpeeds 0072                              __size_of___xxtofl 0140  
                                  _doOperation 0012                         setMotorSpeeds@Aforward 008C  
                       setMotorSpeeds@Bforward 008D                                 _init_motor_PWM 48B2  
                           ee_write_byte@_data 0006                                      _atoi$2000 0015  
                                    _atoi$2001 0019                                      _atoi$2002 0017  
                         __size_of_EncoderInit 0018                               _I2C_Master_Start 4AA6  
             ??_sendArduinoStandbyClampRequest 0009                ?_sendArduinoStandbyClampRequest 0001  
                             _I2C_Master_Write 4A8A                              __size_of_readLogs 0104  
                     doOperation@topLaserState 0154                                      _dtoa$1473 0037  
                            __CFG_CCP2MX$PORTC 000000                                      __pintcode 0008  
                            __size_of_saveLogs 00EC                                  __pmediumconst FE46  
                                     ?___aldiv 0006                                  _ee_write_byte 482E  
                                     ?___aodiv 0006                                       ?___fladd 0046  
                                     ?___aomod 0006                                       ?___fldiv 0014  
                             ___aodiv@quotient 0018                                       ?___awmod 0006  
                                     ?___flmul 002D                                       ?___flsub 0056  
                                     ?___fltol 005E                                       ?___lldiv 0006  
                                     ?___lodiv 0006          errorCorrectedMove@motorAStartDistance 009E  
                                     ?___llmod 0006                                       ?___lomod 0006  
                                     ?_lcdInst 0001                              __size_of_vfprintf 0056  
                                     ?_opDelay 0006                                ___lomod@divisor 000E  
                                     ?_initLCD 0001                         doOperation@badCountBot 0129  
                              ___lomod@counter 0016                                       ?_isalpha 0006  
                                     ?_isdigit 0006                                       ?_islower 0006  
                                     ?_isspace 0006                                 ?_replaceOldLog 0001  
                                     ?_isupper 0006                            _updateMotorAEncoder 44BE  
                          _updateMotorBEncoder 4468                                  ??_send_nibble 0007  
                                     ?_pulse_e 0001                                 __size_of_fputc 006C  
                               __size_of_fputs 0038                                       ?_strncmp 0006  
                                     ?_toupper 000C                         __end_of_init_motor_PWM 48DA  
                 doOperation@topLaserStatePrev 014A                                 __size_of_putch 000C  
                  __size_of_errorCorrectedMove 025C                            mainEEPROMTest@F3511 0193  
                              ___aldiv@divisor 000A                                ___aldiv@counter 000E  
                               ___wmul@product 000A                                       _LATAbits 000F89  
                                     _LATBbits 000F8A                                  ?_doDisplayLog 00A7  
                                     _LATDbits 000F8C                               ?_tirePositioning 0098  
                                    _send_byte 4A60                    errorCorrectedMove@goalSpeed 0098  
                               _LCD_LINE1_ADDR FE5F                                 _LCD_LINE2_ADDR FE6B  
                               _LCD_LINE3_ADDR FE6A                                 _LCD_LINE4_ADDR FE69  
                   doOperation@timeInOperation 014C                        init_motor_PWM@FREQUENCY FE63  
                         ?_updateMotorAEncoder 0001                                       i2u740_40 44DA  
                                     i2u740_48 44DC                                       i2u736_40 4472  
                                     i2u737_40 4484                                       i2u736_48 4474  
                                     i2u737_48 4486                                       i2u739_40 44C8  
                                     i2u739_48 44CA                           ?_updateMotorBEncoder 0001  
                    doOperation@motorStartTime 0122                                 ?_ee_write_byte 0006  
                             __CFG_WDTPS$32768 000000                                      _robotInit 463A  
                                    _vfpfcnvrt 09BA                                      _xtoa$1501 0038  
                                    _xtoa$1502 003A                              ___wmul@multiplier 0006  
                 ??_sendArduinoTireDropRequest 0009                                   _isspace$2027 000C  
                               saveLogs@bigNum 0010                                     vfpfcnvrt@c 008E  
                                    copy_data0 40B2                                      copy_data1 40D2  
                      _set_pwm_duty_cycle$2423 0086                                ?_init_motor_PWM 0001  
                           __end_of_clicksPerM FE69                                 ??_doDisplayLog 0066  
                         doOperation@timeStart 012D                         __end_of_LCD_LINE1_ADDR FE60  
                       __end_of_LCD_LINE2_ADDR FE6C                         __end_of_LCD_LINE3_ADDR FE6B  
                       __end_of_LCD_LINE4_ADDR FE6A                            __end_of_send_nibble 4A3A  
                                   _EECON1bits 000FA6                                     ?_send_byte 0001  
                                     __Hrparam 0000                          ??_updateMotorAEncoder 0001  
                        ??_updateMotorBEncoder 0001                                      readLogs@a 0014  
                                    readLogs@b 000E                                      readLogs@i 0011  
                                    readLogs@j 0015                        doDisplayLog@currentPole 006E  
              doDisplayLog@currentDisplayState 006A                                      readLogs@x 0013  
                                   vfprintf@ap 009B                                       __Lrparam 0000  
                                   vfprintf@fp 0097                                  ?_ee_read_byte 0006  
                           __CFG_BOREN$SBORDIS 000000            __size_of_sendArduinoTireDropRequest 0022  
                                   ?_robotInit 0001           updateMotorAEncoder@interruptPinState 0002  
                             __size_of___aldiv 00CC                               __size_of___aodiv 0148  
                             __size_of___fladd 030C          errorCorrectedMove@motorBStartDistance 00A2  
                             __size_of___aomod 0124                               __size_of___fldiv 0288  
                             __size_of___awmod 0070                               __size_of___flmul 0352  
                             __size_of___flsub 0046                               __size_of___fltol 00BA  
                             __size_of___lldiv 0082                               __size_of___lodiv 00CE  
                             __size_of___llmod 0066                    errorCorrectedMove@turnRatio 009A  
                             __size_of___lomod 00AE                                     ?_vfpfcnvrt 004C  
                              ___aodiv@divisor 000E                               _interruptHandler 0008  
                              ___aodiv@counter 0016                               __size_of_lcdInst 000C  
                              ??_replaceOldLog 001B                     ??_opErrorCorrectionDegrees 00C2  
                             __size_of_opDelay 0064                                _I2C_Master_Init 43B6  
                              _I2C_Master_Read 4928                               __size_of_initLCD 006A  
                                     ___xxtofl 3208                                _I2C_Master_Wait 4A4E  
                              _I2C_Master_Stop 4A9E                               __size_of_isalpha 0034  
                             __size_of_isdigit 0030                               __size_of_islower 0030  
                             __size_of_isspace 003E                            doOperation@badCount 0127  
                                    saveLogs@a 000F                                      saveLogs@b 000E  
                                    saveLogs@i 0012                                      saveLogs@j 0015  
                                    saveLogs@x 0014                                       __ptext10 49F2  
                                     __ptext11 0012                                       __ptext20 4A9E  
                                     __ptext12 19F0                                       __ptext21 4AA6  
                                     __ptext13 4352                                       __ptext30 1D54  
                                     __ptext22 4928                                       __ptext14 3C92  
                                     __ptext31 3AF4                                       __ptext23 4A4E  
                                     __ptext15 496E                                       __ptext40 48DA  
                                     __ptext32 23B2                                       __ptext24 391A  
                                     __ptext16 4990                                       __ptext41 4412  
                                     __ptext33 45AE                                       __ptext25 263A  
                                     __ptext17 49B2                                       __ptext50 3BC4  
                                     __ptext42 09BA                                       __ptext34 20A6  
                                     __ptext26 3F70                                       __ptext18 485C  
                                     __ptext51 3EC6                                       __ptext43 2ADA  
                                     __ptext35 48B2                                       __ptext27 2D08  
                                     __ptext19 4A8A                                       __ptext60 4700  
                                     __ptext52 3348                                       __ptext44 4564  
                                     __ptext36 4124                                       __ptext28 3208  
                                     __ptext61 4216                                       __ptext53 2896  
                                     __ptext45 479E                                       __ptext37 41A6  
                                     __ptext29 3D5E                                       __ptext70 4888  
                                     __ptext62 4A72                                       __ptext54 476C  
                                     __ptext46 47CE                                       __ptext38 49D4  
                                     __ptext71 42EC                                       __ptext63 3488  
                                     __ptext55 36F2                                       __ptext47 4738  
                                     __ptext39 1600                                       __ptext64 46C2  
                                     __ptext56 30C0                                       __ptext48 2F10  
                                     __ptext73 4468                                       __ptext65 47FE  
                                     __ptext57 4514                                       __ptext49 3E18  
                                     __ptext74 44BE                                       __ptext66 4902  
                                     __ptext58 4008                                       __ptext67 4A7E  
                                     __ptext59 467E                                       __ptext68 4A60  
                                     __ptext69 4A24                               __size_of_isupper 0030  
                             __size_of_pulse_e 002A                                _motorADirection 00F1  
                             __size_of_strncmp 00AA                               __size_of_toupper 004A  
                                     _readLogs 3816                                  __size_of_atoi 0140  
                                __size_of_ctoa 0050                                  __size_of_main 0450  
                              _motorBDirection 00F2                                  __size_of_dtoa 0244  
                                __size_of_stoa 0140                                  __size_of_utoa 01B0  
                                __size_of_xtoa 022E                                ??_ee_write_byte 0008  
                                     _saveLogs 3A08                                 ??_ee_read_byte 0008  
                                    stoa@F1144 00EA                doOperation@distanceFromLastPole 0142  
                  doOperation@rightRangeFinder 011E                 set_pwm_duty_cycle@max_duty_val 0080  
                                     int$flags 007A                             doOperation@PIDData 0100  
                                     _vfprintf 4412                                      printf@fmt 009D  
               doOperation@motorAStartDistance 0131                                       main@tick 0162  
                                     main@time 015B                 __size_of_requestIsTireDropDone 002C  
                __end_of_requestIsTireDropDone 4888                    I2C_Master_Write@byteToWrite 0007  
 __end_of_sendArduinoTireOperationStartMessage 4990  __size_of_sendArduinoTireOperationStartMessage 0022  
       ??_sendArduinoTireOperationStartMessage 0009          ?_sendArduinoTireOperationStartMessage 0001  
         _sendArduinoTireOperationStartMessage 496E                updateMotorAEncoder@directionPin 0004  
                             ___aomod@dividend 0006                     __end_of_set_pwm_duty_cycle 2F10  
                                    putch@data 0009                       __end_of_I2C_Master_Start 4AAE  
                               _vfpfcnvrt$1516 0084                       __end_of_I2C_Master_Write 4A94  
                                   _INTCONbits 000FF2          tirePositioning@distanceRecordedBottom 00B5  
                                     isalpha@c 0006                                       isdigit@c 0006  
                                  _send_nibble 4A24                                   ?_doOperation 0001  
               _bottomBreakBeamTriggeredChange 00E7                                       intlevel2 0000  
                                _LCD_SIZE_HORZ FE61                                       islower@c 0006  
         errorCorrectedMove@correctionConstant 00A6                                  _LCD_SIZE_VERT FE60  
                                     isspace@c 0006                               ___lldiv@dividend 0006  
                                  ??_send_byte 0008                                       isupper@c 0006  
                                    strncmp@_l 0006                                      strncmp@_r 0008  
              doOperation@bottomLaserStatePrev 014B                                     _OSCCONbits 000FD3  
                           doOperation@counted 013A                                    ??_robotInit 001B  
                                     printf@ap 0064                        __end_of_I2C_Master_Init 4412  
                              ___aomod@divisor 000E                        __end_of_I2C_Master_Read 494C  
                      __end_of_I2C_Master_Wait 4A60                        __end_of_I2C_Master_Stop 4AA6  
                                  ??_vfpfcnvrt 0052                                    lcdInst@data 0009  
                                     stoa@nuls 0018                                ___aomod@counter 0016  
                        doDisplayLog@logNumber 00A7             __end_of_sendArduinoTireDropRequest 49B2  
                   _sendArduinoTireDropRequest 4990                                     _TIMER_INIT 49D4  
              __end_ofinit_motor_PWM@FREQUENCY FE67                           __end_of_doDisplayLog 19F0  
                 doOperation@accelerationDelay 0120                 tirePositioning@bottomBreakbeam 00BB  
                             ___lldiv@quotient 000E                                       strncmp@l 000D  
                                     strncmp@n 000A                                       strncmp@r 000F  
                                     toupper@c 000C                                   ___aldiv@sign 000F  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                                ___fladd@signs 0052     opErrorCorrectionDegrees@correctionConstant 00B6  
                                 ___aodiv@sign 0017                                  ??_EncoderInit 0006  
                                 ___fladd@aexp 0053                                   ___fladd@bexp 0054  
                                 ___aomod@sign 0017  
