

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 20 23:13:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4620 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  001A96                     __pidataBANK0:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for stoa@F1139
   100  001A96  28                 	db	40
   101  001A97  6E                 	db	110
   102  001A98  75                 	db	117
   103  001A99  6C                 	db	108
   104  001A9A  6C                 	db	108
   105  001A9B  29                 	db	41
   106  001A9C  00                 	db	0
   107                           
   108                           	psect	mediumconst
   109  00FEB8                     __pmediumconst:
   110                           	opt callstack 0
   111  00FEB8  00                 	db	0
   112  00FEB9                     _keys:
   113                           	opt callstack 0
   114  00FEB9  31                 	db	49
   115  00FEBA  32                 	db	50
   116  00FEBB  33                 	db	51
   117  00FEBC  41                 	db	65
   118  00FEBD  34                 	db	52
   119  00FEBE  35                 	db	53
   120  00FEBF  36                 	db	54
   121  00FEC0  42                 	db	66
   122  00FEC1  37                 	db	55
   123  00FEC2  38                 	db	56
   124  00FEC3  39                 	db	57
   125  00FEC4  43                 	db	67
   126  00FEC5  2A                 	db	42
   127  00FEC6  30                 	db	48
   128  00FEC7  23                 	db	35
   129  00FEC8  44                 	db	68
   130  00FEC9  00                 	db	0
   131  00FECA                     __end_of_keys:
   132                           	opt callstack 0
   133  00FECA                     _happynewyear:
   134                           	opt callstack 0
   135  00FECA  00                 	db	0
   136  00FECB  37                 	db	55
   137  00FECC  0E                 	db	14
   138  00FECD  02                 	db	2
   139  00FECE  13                 	db	19
   140  00FECF  02                 	db	2
   141  00FED0  13                 	db	19
   142  00FED1                     __end_of_happynewyear:
   143                           	opt callstack 0
   144  00FED1                     _LCD_LINE1_ADDR:
   145                           	opt callstack 0
   146  00FED1  00                 	db	0
   147  00FED2                     __end_of_LCD_LINE1_ADDR:
   148                           	opt callstack 0
   149  00FED2                     _LCD_SIZE_VERT:
   150                           	opt callstack 0
   151  00FED2  04                 	db	4
   152  00FED3                     __end_of_LCD_SIZE_VERT:
   153                           	opt callstack 0
   154  00FED3                     _LCD_SIZE_HORZ:
   155                           	opt callstack 0
   156  00FED3  10                 	db	16
   157  00FED4                     __end_of_LCD_SIZE_HORZ:
   158                           	opt callstack 0
   159  00FED4  50                 	db	80
   160  00FED5                     __end_of_LCD_LINE4_ADDR:
   161                           	opt callstack 0
   162  00FED5  10                 	db	16
   163  00FED6                     __end_of_LCD_LINE3_ADDR:
   164                           	opt callstack 0
   165  00FED6  40                 	db	64
   166  00FED7                     __end_of_LCD_LINE2_ADDR:
   167                           	opt callstack 0
   168  0000                     _SSPBUF	set	4041
   169  0000                     _SSPCON2bits	set	4037
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPADD	set	4040
   172  0000                     _TRISCbits	set	3988
   173  0000                     _SSPCON1bits	set	4038
   174  0000                     _SSPCON2	set	4037
   175  0000                     _SSPSTAT	set	4039
   176  0000                     _LATDbits	set	3980
   177  0000                     _ADCON1	set	4033
   178  0000                     _TRISB	set	3987
   179  0000                     _LATB	set	3978
   180  0000                     _TRISD	set	3989
   181  0000                     _LATD	set	3980
   182  0000                     _LATAbits	set	3977
   183  0000                     _INTCONbits	set	4082
   184  0000                     _TMR0L	set	4054
   185  0000                     _TMR0H	set	4055
   186  0000                     _T0CONbits	set	4053
   187  0000                     _OSCCONbits	set	4051
   188  0000                     _PORTB	set	3969
   189  0000                     _TMR0IF	set	32658
   190  0000                     _INT1IF	set	32640
   191  0000                     _INT1IE	set	32643
   192  0000                     _TMR0ON	set	32431
   193  0000                     _TMR0IE	set	32661
   194  0000                     _PSA	set	32427
   195  0000                     _T0PS0	set	32424
   196  0000                     _T0PS1	set	32425
   197  0000                     _T0PS2	set	32426
   198  0000                     _T08BIT	set	32430
   199  00FED7                     STR_14:
   200  00FED7  54                 	db	84	;'T'
   201  00FED8  49                 	db	73	;'I'
   202  00FED9  52                 	db	82	;'R'
   203  00FEDA  45                 	db	69	;'E'
   204  00FEDB  2E                 	db	46
   205  00FEDC  20                 	db	32
   206  00FEDD  4F                 	db	79	;'O'
   207  00FEDE  4E                 	db	78	;'N'
   208  00FEDF  20                 	db	32
   209  00FEE0  50                 	db	80	;'P'
   210  00FEE1  4F                 	db	79	;'O'
   211  00FEE2  4C                 	db	76	;'L'
   212  00FEE3  45                 	db	69	;'E'
   213  00FEE4  3A                 	db	58	;':'
   214  00FEE5  20                 	db	32
   215  00FEE6  58                 	db	88	;'X'
   216  00FEE7  00                 	db	0
   217  00FEE8                     STR_43:
   218  00FEE8  28                 	db	40
   219  00FEE9  31                 	db	49	;'1'
   220  00FEEA  29                 	db	41
   221  00FEEB  20                 	db	32
   222  00FEEC  28                 	db	40
   223  00FEED  32                 	db	50	;'2'
   224  00FEEE  29                 	db	41
   225  00FEEF  20                 	db	32
   226  00FEF0  28                 	db	40
   227  00FEF1  33                 	db	51	;'3'
   228  00FEF2  29                 	db	41
   229  00FEF3  20                 	db	32
   230  00FEF4  28                 	db	40
   231  00FEF5  34                 	db	52	;'4'
   232  00FEF6  29                 	db	41
   233  00FEF7  00                 	db	0
   234  00FEF8                     STR_4:
   235  00FEF8  58                 	db	88	;'X'
   236  00FEF9  20                 	db	32
   237  00FEFA  54                 	db	84	;'T'
   238  00FEFB  49                 	db	73	;'I'
   239  00FEFC  52                 	db	82	;'R'
   240  00FEFD  2E                 	db	46
   241  00FEFE  20                 	db	32
   242  00FEFF  53                 	db	83	;'S'
   243  00FF00  55                 	db	85	;'U'
   244  00FF01  50                 	db	80	;'P'
   245  00FF02  50                 	db	80	;'P'
   246  00FF03  4C                 	db	76	;'L'
   247  00FF04  49                 	db	73	;'I'
   248  00FF05  45                 	db	69	;'E'
   249  00FF06  44                 	db	68	;'D'
   250  00FF07  00                 	db	0
   251  00FF08                     STR_8:
   252  00FF08  28                 	db	40
   253  00FF09  32                 	db	50	;'2'
   254  00FF0A  29                 	db	41
   255  00FF0B  20                 	db	32
   256  00FF0C  53                 	db	83	;'S'
   257  00FF0D  41                 	db	65	;'A'
   258  00FF0E  56                 	db	86	;'V'
   259  00FF0F  45                 	db	69	;'E'
   260  00FF10  20                 	db	32
   261  00FF11  26                 	db	38
   262  00FF12  20                 	db	32
   263  00FF13  45                 	db	69	;'E'
   264  00FF14  58                 	db	88	;'X'
   265  00FF15  49                 	db	73	;'I'
   266  00FF16  54                 	db	84	;'T'
   267  00FF17  00                 	db	0
   268  00FF18                     STR_35:
   269  00FF18  28                 	db	40
   270  00FF19  32                 	db	50	;'2'
   271  00FF1A  29                 	db	41
   272  00FF1B  20                 	db	32
   273  00FF1C  51                 	db	81	;'Q'
   274  00FF1D  55                 	db	85	;'U'
   275  00FF1E  49                 	db	73	;'I'
   276  00FF1F  54                 	db	84	;'T'
   277  00FF20  20                 	db	32
   278  00FF21  44                 	db	68	;'D'
   279  00FF22  4F                 	db	79	;'O'
   280  00FF23  20                 	db	32
   281  00FF24  4E                 	db	78	;'N'
   282  00FF25  4F                 	db	79	;'O'
   283  00FF26  54                 	db	84	;'T'
   284  00FF27  00                 	db	0
   285  00FF28                     STR_12:
   286  00FF28  54                 	db	84	;'T'
   287  00FF29  49                 	db	73	;'I'
   288  00FF2A  52                 	db	82	;'R'
   289  00FF2B  2E                 	db	46
   290  00FF2C  20                 	db	32
   291  00FF2D  44                 	db	68	;'D'
   292  00FF2E  45                 	db	69	;'E'
   293  00FF2F  50                 	db	80	;'P'
   294  00FF30  4C                 	db	76	;'L'
   295  00FF31  4F                 	db	79	;'O'
   296  00FF32  59                 	db	89	;'Y'
   297  00FF33  3A                 	db	58	;':'
   298  00FF34  20                 	db	32
   299  00FF35  58                 	db	88	;'X'
   300  00FF36  00                 	db	0
   301  00FF37                     STR_20:
   302  00FF37  25                 	db	37
   303  00FF38  30                 	db	48	;'0'
   304  00FF39  32                 	db	50	;'2'
   305  00FF3A  78                 	db	120	;'x'
   306  00FF3B  2F                 	db	47
   307  00FF3C  25                 	db	37
   308  00FF3D  30                 	db	48	;'0'
   309  00FF3E  32                 	db	50	;'2'
   310  00FF3F  78                 	db	120	;'x'
   311  00FF40  2F                 	db	47
   312  00FF41  25                 	db	37
   313  00FF42  30                 	db	48	;'0'
   314  00FF43  32                 	db	50	;'2'
   315  00FF44  78                 	db	120	;'x'
   316  00FF45  00                 	db	0
   317  00FF46                     STR_21:
   318  00FF46  25                 	db	37
   319  00FF47  30                 	db	48	;'0'
   320  00FF48  32                 	db	50	;'2'
   321  00FF49  78                 	db	120	;'x'
   322  00FF4A  3A                 	db	58	;':'
   323  00FF4B  25                 	db	37
   324  00FF4C  30                 	db	48	;'0'
   325  00FF4D  32                 	db	50	;'2'
   326  00FF4E  78                 	db	120	;'x'
   327  00FF4F  3A                 	db	58	;':'
   328  00FF50  25                 	db	37
   329  00FF51  30                 	db	48	;'0'
   330  00FF52  32                 	db	50	;'2'
   331  00FF53  78                 	db	120	;'x'
   332  00FF54  00                 	db	0
   333  00FF55                     STR_41:
   334  00FF55  28                 	db	40
   335  00FF56  31                 	db	49	;'1'
   336  00FF57  20                 	db	32
   337  00FF58  49                 	db	73	;'I'
   338  00FF59  53                 	db	83	;'S'
   339  00FF5A  20                 	db	32
   340  00FF5B  4F                 	db	79	;'O'
   341  00FF5C  4C                 	db	76	;'L'
   342  00FF5D  44                 	db	68	;'D'
   343  00FF5E  45                 	db	69	;'E'
   344  00FF5F  53                 	db	83	;'S'
   345  00FF60  54                 	db	84	;'T'
   346  00FF61  29                 	db	41
   347  00FF62  00                 	db	0
   348  00FF63                     STR_6:
   349  00FF63  28                 	db	40
   350  00FF64  31                 	db	49	;'1'
   351  00FF65  29                 	db	41
   352  00FF66  20                 	db	32
   353  00FF67  50                 	db	80	;'P'
   354  00FF68  4F                 	db	79	;'O'
   355  00FF69  4C                 	db	76	;'L'
   356  00FF6A  45                 	db	69	;'E'
   357  00FF6B  20                 	db	32
   358  00FF6C  49                 	db	73	;'I'
   359  00FF6D  4E                 	db	78	;'N'
   360  00FF6E  46                 	db	70	;'F'
   361  00FF6F  4F                 	db	79	;'O'
   362  00FF70  00                 	db	0
   363  00FF71                     STR_25:
   364  00FF71  28                 	db	40
   365  00FF72  32                 	db	50	;'2'
   366  00FF73  29                 	db	41
   367  00FF74  20                 	db	32
   368  00FF75  56                 	db	86	;'V'
   369  00FF76  49                 	db	73	;'I'
   370  00FF77  45                 	db	69	;'E'
   371  00FF78  57                 	db	87	;'W'
   372  00FF79  20                 	db	32
   373  00FF7A  4C                 	db	76	;'L'
   374  00FF7B  4F                 	db	79	;'O'
   375  00FF7C  47                 	db	71	;'G'
   376  00FF7D  53                 	db	83	;'S'
   377  00FF7E  00                 	db	0
   378  00FF7F                     STR_16:
   379  00FF7F  31                 	db	49	;'1'
   380  00FF80  3C                 	db	60	;'<'
   381  00FF81  2D                 	db	45
   382  00FF82  20                 	db	32
   383  00FF83  32                 	db	50	;'2'
   384  00FF84  2D                 	db	45
   385  00FF85  3E                 	db	62	;'>'
   386  00FF86  20                 	db	32
   387  00FF87  33                 	db	51	;'3'
   388  00FF88  4D                 	db	77	;'M'
   389  00FF89  45                 	db	69	;'E'
   390  00FF8A  4E                 	db	78	;'N'
   391  00FF8B  55                 	db	85	;'U'
   392  00FF8C  00                 	db	0
   393  00FF8D                     STR_31:
   394  00FF8D  4F                 	db	79	;'O'
   395  00FF8E  50                 	db	80	;'P'
   396  00FF8F  2E                 	db	46
   397  00FF90  20                 	db	32
   398  00FF91  43                 	db	67	;'C'
   399  00FF92  4F                 	db	79	;'O'
   400  00FF93  4D                 	db	77	;'M'
   401  00FF94  50                 	db	80	;'P'
   402  00FF95  4C                 	db	76	;'L'
   403  00FF96  45                 	db	69	;'E'
   404  00FF97  54                 	db	84	;'T'
   405  00FF98  45                 	db	69	;'E'
   406  00FF99  00                 	db	0
   407  00FF9A                     STR_33:
   408  00FF9A  28                 	db	40
   409  00FF9B  31                 	db	49	;'1'
   410  00FF9C  29                 	db	41
   411  00FF9D  20                 	db	32
   412  00FF9E  56                 	db	86	;'V'
   413  00FF9F  49                 	db	73	;'I'
   414  00FFA0  45                 	db	69	;'E'
   415  00FFA1  57                 	db	87	;'W'
   416  00FFA2  20                 	db	32
   417  00FFA3  4C                 	db	76	;'L'
   418  00FFA4  4F                 	db	79	;'O'
   419  00FFA5  47                 	db	71	;'G'
   420  00FFA6  00                 	db	0
   421  00FFA7                     STR_27:
   422  00FFA7  4F                 	db	79	;'O'
   423  00FFA8  50                 	db	80	;'P'
   424  00FFA9  45                 	db	69	;'E'
   425  00FFAA  52                 	db	82	;'R'
   426  00FFAB  41                 	db	65	;'A'
   427  00FFAC  54                 	db	84	;'T'
   428  00FFAD  49                 	db	73	;'I'
   429  00FFAE  4F                 	db	79	;'O'
   430  00FFAF  4E                 	db	78	;'N'
   431  00FFB0  20                 	db	32
   432  00FFB1  49                 	db	73	;'I'
   433  00FFB2  4E                 	db	78	;'N'
   434  00FFB3  00                 	db	0
   435  00FFB4                     STR_2:
   436  00FFB4  4F                 	db	79	;'O'
   437  00FFB5  50                 	db	80	;'P'
   438  00FFB6  2E                 	db	46
   439  00FFB7  20                 	db	32
   440  00FFB8  54                 	db	84	;'T'
   441  00FFB9  49                 	db	73	;'I'
   442  00FFBA  4D                 	db	77	;'M'
   443  00FFBB  45                 	db	69	;'E'
   444  00FFBC  20                 	db	32
   445  00FFBD  58                 	db	88	;'X'
   446  00FFBE  73                 	db	115	;'s'
   447  00FFBF  00                 	db	0
   448  00FFC0                     STR_39:
   449  00FFC0  53                 	db	83	;'S'
   450  00FFC1  45                 	db	69	;'E'
   451  00FFC2  4C                 	db	76	;'L'
   452  00FFC3  45                 	db	69	;'E'
   453  00FFC4  43                 	db	67	;'C'
   454  00FFC5  54                 	db	84	;'T'
   455  00FFC6  20                 	db	32
   456  00FFC7  4C                 	db	76	;'L'
   457  00FFC8  4F                 	db	79	;'O'
   458  00FFC9  47                 	db	71	;'G'
   459  00FFCA  00                 	db	0
   460  00FFCB                     STR_23:
   461  00FFCB  28                 	db	40
   462  00FFCC  31                 	db	49	;'1'
   463  00FFCD  29                 	db	41
   464  00FFCE  20                 	db	32
   465  00FFCF  53                 	db	83	;'S'
   466  00FFD0  54                 	db	84	;'T'
   467  00FFD1  41                 	db	65	;'A'
   468  00FFD2  52                 	db	82	;'R'
   469  00FFD3  54                 	db	84	;'T'
   470  00FFD4  00                 	db	0
   471  00FFD5                     STR_19:
   472  00FFD5  57                 	db	87	;'W'
   473  00FFD6  45                 	db	69	;'E'
   474  00FFD7  4C                 	db	76	;'L'
   475  00FFD8  43                 	db	67	;'C'
   476  00FFD9  4F                 	db	79	;'O'
   477  00FFDA  4D                 	db	77	;'M'
   478  00FFDB  45                 	db	69	;'E'
   479  00FFDC  20                 	db	32
   480  00FFDD  00                 	db	0
   481  00FFDE                     STR_37:
   482  00FFDE  53                 	db	83	;'S'
   483  00FFDF  41                 	db	65	;'A'
   484  00FFE0  56                 	db	86	;'V'
   485  00FFE1  45                 	db	69	;'E'
   486  00FFE2  20                 	db	32
   487  00FFE3  4C                 	db	76	;'L'
   488  00FFE4  4F                 	db	79	;'O'
   489  00FFE5  47                 	db	71	;'G'
   490  00FFE6  00                 	db	0
   491  00FFE7                     STR_29:
   492  00FFE7  50                 	db	80	;'P'
   493  00FFE8  52                 	db	82	;'R'
   494  00FFE9  4F                 	db	79	;'O'
   495  00FFEA  47                 	db	71	;'G'
   496  00FFEB  52                 	db	82	;'R'
   497  00FFEC  45                 	db	69	;'E'
   498  00FFED  53                 	db	83	;'S'
   499  00FFEE  53                 	db	83	;'S'
   500  00FFEF  00                 	db	0
   501  00FFF0                     STR_10:
   502  00FFF0  50                 	db	80	;'P'
   503  00FFF1  4F                 	db	79	;'O'
   504  00FFF2  4C                 	db	76	;'L'
   505  00FFF3  45                 	db	69	;'E'
   506  00FFF4  20                 	db	32
   507  00FFF5  58                 	db	88	;'X'
   508  00FFF6  2F                 	db	47
   509  00FFF7  59                 	db	89	;'Y'
   510  00FFF8  00                 	db	0
   511  00FFF9                     STR_17:
   512  00FFF9  25                 	db	37
   513  00FFFA  64                 	db	100	;'d'
   514  00FFFB  00                 	db	0
   515  00FFFC                     STR_1:
   516  00FFFC  25                 	db	37
   517  00FFFD  73                 	db	115	;'s'
   518  00FFFE  00                 	db	0
   519  0000                     
   520                           ; #config settings
   521  00FFFF  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           	psect	cinit
   524  0017AC                     __pcinit:
   525                           	opt callstack 0
   526  0017AC                     start_initialization:
   527                           	opt callstack 0
   528  0017AC                     __initialization:
   529                           	opt callstack 0
   530                           
   531                           ; Initialize objects allocated to BANK0 (7 bytes)
   532                           ; load TBLPTR registers with __pidataBANK0
   533  0017AC  0E96               	movlw	low __pidataBANK0
   534  0017AE  6EF6               	movwf	tblptrl,c
   535  0017B0  0E1A               	movlw	high __pidataBANK0
   536  0017B2  6EF7               	movwf	tblptrh,c
   537  0017B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   538  0017B6  6EF8               	movwf	tblptru,c
   539  0017B8  EE00  F0D9         	lfsr	0,__pdataBANK0
   540  0017BC  EE10 F007          	lfsr	1,7
   541  0017C0                     copy_data0:
   542  0017C0  0009               	tblrd		*+
   543  0017C2  CFF5 FFEE          	movff	tablat,postinc0
   544  0017C6  50E5               	movf	postdec1,w,c
   545  0017C8  50E1               	movf	fsr1l,w,c
   546  0017CA  E1FA               	bnz	copy_data0
   547                           
   548                           ; Clear objects allocated to BANK0 (48 bytes)
   549  0017CC  EE00  F080         	lfsr	0,__pbssBANK0
   550  0017D0  0E30               	movlw	48
   551  0017D2                     clear_0:
   552  0017D2  6AEE               	clrf	postinc0,c
   553  0017D4  06E8               	decf	wreg,f,c
   554  0017D6  E1FD               	bnz	clear_0
   555                           
   556                           ; Clear objects allocated to COMRAM (1 bytes)
   557  0017D8  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   558  0017DA                     end_of_initialization:
   559                           	opt callstack 0
   560  0017DA                     __end_of__initialization:
   561                           	opt callstack 0
   562  0017DA  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   563  0017DC  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   564  0017DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   565  0017E0  6EF8               	movwf	tblptru,c
   566  0017E2  0100               	movlb	0
   567  0017E4  EF18  F002         	goto	_main	;jump to C main() function
   568                           
   569                           	psect	bssCOMRAM
   570  00007E                     __pbssCOMRAM:
   571                           	opt callstack 0
   572  00007E                     _keyPressed:
   573                           	opt callstack 0
   574  00007E                     	ds	1
   575                           
   576                           	psect	bssBANK0
   577  000080                     __pbssBANK0:
   578                           	opt callstack 0
   579  000080                     _nout:
   580                           	opt callstack 0
   581  000080                     	ds	2
   582  000082                     _width:
   583                           	opt callstack 0
   584  000082                     	ds	2
   585  000084                     _prec:
   586                           	opt callstack 0
   587  000084                     	ds	2
   588  000086                     _flags:
   589                           	opt callstack 0
   590  000086                     	ds	2
   591  000088                     _secondsMeasured:
   592                           	opt callstack 0
   593  000088                     	ds	2
   594  00008A                     _motorBDistance:
   595                           	opt callstack 0
   596  00008A                     	ds	2
   597  00008C                     _motorADistance:
   598                           	opt callstack 0
   599  00008C                     	ds	2
   600  00008E                     _bottomBreakBeamTriggeredChange:
   601                           	opt callstack 0
   602  00008E                     	ds	1
   603  00008F                     _topBreakBeamTriggeredChange:
   604                           	opt callstack 0
   605  00008F                     	ds	1
   606  000090                     _dbuf:
   607                           	opt callstack 0
   608  000090                     	ds	32
   609                           
   610                           	psect	dataBANK0
   611  0000D9                     __pdataBANK0:
   612                           	opt callstack 0
   613  0000D9                     stoa@F1139:
   614                           	opt callstack 0
   615  0000D9                     	ds	7
   616                           
   617                           	psect	cstackBANK0
   618  0000B0                     __pcstackBANK0:
   619                           	opt callstack 0
   620  0000B0                     ??_doDisplayLog:
   621                           
   622                           ; 1 bytes @ 0x0
   623  0000B0                     	ds	4
   624  0000B4                     doDisplayLog@keypress:
   625                           	opt callstack 0
   626                           
   627                           ; 1 bytes @ 0x4
   628  0000B4                     	ds	1
   629  0000B5                     doDisplayLog@currentDisplayState:
   630                           	opt callstack 0
   631                           
   632                           ; 1 bytes @ 0x5
   633  0000B5                     	ds	1
   634  0000B6                     doDisplayLog@keyValue:
   635                           	opt callstack 0
   636                           
   637                           ; 1 bytes @ 0x6
   638  0000B6                     	ds	15
   639  0000C5                     doOperation@secondsMeasuredOld:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x15
   643  0000C5                     	ds	2
   644  0000C7                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x17
   647  0000C7                     	ds	2
   648  0000C9                     main@time:
   649                           	opt callstack 0
   650                           
   651                           ; 7 bytes @ 0x19
   652  0000C9                     	ds	7
   653  0000D0                     main@tick:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x20
   657  0000D0                     	ds	4
   658  0000D4                     main@keypress:
   659                           	opt callstack 0
   660                           
   661                           ; 1 bytes @ 0x24
   662  0000D4                     	ds	1
   663  0000D5                     main@i:
   664                           	opt callstack 0
   665                           
   666                           ; 1 bytes @ 0x25
   667  0000D5                     	ds	1
   668  0000D6                     main@currentLogState:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x26
   672  0000D6                     	ds	1
   673  0000D7                     main@currentRobotState:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x27
   677  0000D7                     	ds	1
   678  0000D8                     main@keyValue:
   679                           	opt callstack 0
   680                           
   681                           ; 1 bytes @ 0x28
   682  0000D8                     	ds	1
   683                           
   684                           	psect	cstackCOMRAM
   685  000001                     __pcstackCOMRAM:
   686                           	opt callstack 0
   687  000001                     ??_I2C_Master_Wait:
   688  000001                     ?_strlen:
   689                           	opt callstack 0
   690  000001                     ?_isupper:
   691                           	opt callstack 0
   692  000001                     ?_isalpha:
   693                           	opt callstack 0
   694  000001                     ?_isdigit:
   695                           	opt callstack 0
   696  000001                     ?_isspace:
   697                           	opt callstack 0
   698  000001                     ?_islower:
   699                           	opt callstack 0
   700  000001                     ?___wmul:
   701                           	opt callstack 0
   702  000001                     ?___lldiv:
   703                           	opt callstack 0
   704  000001                     ?___llmod:
   705                           	opt callstack 0
   706  000001                     ?___aodiv:
   707                           	opt callstack 0
   708  000001                     ?___aomod:
   709                           	opt callstack 0
   710  000001                     pulse_e@interruptState:
   711                           	opt callstack 0
   712  000001                     ___wmul@multiplier:
   713                           	opt callstack 0
   714  000001                     isalpha@c:
   715                           	opt callstack 0
   716  000001                     isdigit@c:
   717                           	opt callstack 0
   718  000001                     isspace@c:
   719                           	opt callstack 0
   720  000001                     isupper@c:
   721                           	opt callstack 0
   722  000001                     strlen@s:
   723                           	opt callstack 0
   724  000001                     islower@c:
   725                           	opt callstack 0
   726  000001                     ___lldiv@dividend:
   727                           	opt callstack 0
   728  000001                     ___llmod@dividend:
   729                           	opt callstack 0
   730  000001                     ___aodiv@dividend:
   731                           	opt callstack 0
   732  000001                     ___aomod@dividend:
   733                           	opt callstack 0
   734                           
   735                           ; 8 bytes @ 0x0
   736  000001                     	ds	1
   737  000002                     send_nibble@data:
   738                           	opt callstack 0
   739  000002                     I2C_Master_Read@ackBit:
   740                           	opt callstack 0
   741  000002                     I2C_Master_Write@byteToWrite:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x1
   745  000002                     	ds	1
   746  000003                     ??_isupper:
   747  000003                     ??_isalpha:
   748  000003                     ??_isdigit:
   749  000003                     ??_isspace:
   750  000003                     ??_islower:
   751  000003                     send_byte@data:
   752                           	opt callstack 0
   753  000003                     I2C_Master_Read@receivedByte:
   754                           	opt callstack 0
   755  000003                     ___wmul@multiplicand:
   756                           	opt callstack 0
   757  000003                     strlen@a:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x2
   761  000003                     	ds	1
   762  000004                     lcdInst@data:
   763                           	opt callstack 0
   764  000004                     putch@data:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x3
   768  000004                     	ds	1
   769  000005                     ??_initLCD:
   770  000005                     ___wmul@product:
   771                           	opt callstack 0
   772  000005                     fputc@c:
   773                           	opt callstack 0
   774  000005                     ___lldiv@divisor:
   775                           	opt callstack 0
   776  000005                     ___llmod@divisor:
   777                           	opt callstack 0
   778                           
   779                           ; 4 bytes @ 0x4
   780  000005                     	ds	2
   781  000007                     ?_toupper:
   782                           	opt callstack 0
   783  000007                     _isspace$1230:
   784                           	opt callstack 0
   785  000007                     fputc@fp:
   786                           	opt callstack 0
   787  000007                     toupper@c:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x6
   791  000007                     	ds	1
   792  000008                     ?_atoi:
   793                           	opt callstack 0
   794  000008                     atoi@s:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x7
   798  000008                     	ds	1
   799  000009                     ??_fputc:
   800  000009                     ??_toupper:
   801  000009                     ___llmod@counter:
   802                           	opt callstack 0
   803  000009                     ___lldiv@quotient:
   804                           	opt callstack 0
   805  000009                     ___aodiv@divisor:
   806                           	opt callstack 0
   807  000009                     ___aomod@divisor:
   808                           	opt callstack 0
   809                           
   810                           ; 8 bytes @ 0x8
   811  000009                     	ds	1
   812  00000A                     ??_atoi:
   813                           
   814                           ; 1 bytes @ 0x9
   815  00000A                     	ds	3
   816  00000D                     ___lldiv@counter:
   817                           	opt callstack 0
   818  00000D                     _toupper$1294:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0xC
   822  00000D                     	ds	1
   823  00000E                     ?_stoa:
   824                           	opt callstack 0
   825  00000E                     stoa@fp:
   826                           	opt callstack 0
   827  00000E                     atoi@neg:
   828                           	opt callstack 0
   829  00000E                     fputs@s:
   830                           	opt callstack 0
   831  00000E                     I2C_Master_Init@clockFreq:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0xD
   835  00000E                     	ds	2
   836  000010                     stoa@s:
   837                           	opt callstack 0
   838  000010                     _atoi$1203:
   839                           	opt callstack 0
   840  000010                     fputs@fp:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0xF
   844  000010                     	ds	1
   845  000011                     ___aodiv@counter:
   846                           	opt callstack 0
   847  000011                     ___aomod@counter:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x10
   851  000011                     	ds	1
   852  000012                     ??_I2C_Master_Init:
   853  000012                     ??_stoa:
   854  000012                     ___aodiv@sign:
   855                           	opt callstack 0
   856  000012                     ___aomod@sign:
   857                           	opt callstack 0
   858  000012                     fputs@c:
   859                           	opt callstack 0
   860  000012                     _atoi$1205:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x11
   864  000012                     	ds	1
   865  000013                     ?_abs:
   866                           	opt callstack 0
   867  000013                     abs@a:
   868                           	opt callstack 0
   869  000013                     fputs@i:
   870                           	opt callstack 0
   871  000013                     stoa@nuls:
   872                           	opt callstack 0
   873  000013                     ___aodiv@quotient:
   874                           	opt callstack 0
   875                           
   876                           ; 8 bytes @ 0x12
   877  000013                     	ds	1
   878  000014                     _atoi$1204:
   879                           	opt callstack 0
   880                           
   881                           ; 1 bytes @ 0x13
   882  000014                     	ds	1
   883  000015                     ??_abs:
   884  000015                     ?_pad:
   885                           	opt callstack 0
   886  000015                     pad@fp:
   887                           	opt callstack 0
   888  000015                     atoi@n:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x14
   892  000015                     	ds	1
   893  000016                     
   894                           ; 1 bytes @ 0x15
   895  000016                     	ds	1
   896  000017                     pad@buf:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x16
   900  000017                     	ds	2
   901  000019                     pad@p:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x18
   905  000019                     	ds	1
   906  00001A                     stoa@i:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x19
   910  00001A                     	ds	1
   911  00001B                     ??_pad:
   912                           
   913                           ; 1 bytes @ 0x1A
   914  00001B                     	ds	1
   915  00001C                     pad@i:
   916                           	opt callstack 0
   917  00001C                     stoa@w:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x1B
   921  00001C                     	ds	2
   922  00001E                     pad@w:
   923                           	opt callstack 0
   924  00001E                     stoa@cp:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x1D
   928  00001E                     	ds	2
   929  000020                     ?_dtoa:
   930                           	opt callstack 0
   931  000020                     ?_xtoa:
   932                           	opt callstack 0
   933  000020                     dtoa@fp:
   934                           	opt callstack 0
   935  000020                     stoa@p:
   936                           	opt callstack 0
   937  000020                     xtoa@fp:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x1F
   941  000020                     	ds	2
   942  000022                     stoa@l:
   943                           	opt callstack 0
   944  000022                     dtoa@d:
   945                           	opt callstack 0
   946  000022                     xtoa@d:
   947                           	opt callstack 0
   948                           
   949                           ; 8 bytes @ 0x21
   950  000022                     	ds	8
   951  00002A                     ??_dtoa:
   952  00002A                     xtoa@x:
   953                           	opt callstack 0
   954                           
   955                           ; 1 bytes @ 0x29
   956  00002A                     	ds	1
   957  00002B                     ??_xtoa:
   958                           
   959                           ; 1 bytes @ 0x2A
   960  00002B                     	ds	7
   961  000032                     _dtoa$707:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x31
   965  000032                     	ds	1
   966  000033                     _xtoa$729:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x32
   970  000033                     	ds	1
   971  000034                     dtoa@p:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x33
   975  000034                     	ds	1
   976  000035                     _xtoa$730:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x34
   980  000035                     	ds	1
   981  000036                     dtoa@w:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x35
   985  000036                     	ds	1
   986  000037                     xtoa@p:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x36
   990  000037                     	ds	1
   991  000038                     dtoa@s:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x37
   995  000038                     	ds	1
   996  000039                     xtoa@w:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x38
  1000  000039                     	ds	1
  1001  00003A                     dtoa@n:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x39
  1005  00003A                     	ds	1
  1006  00003B                     xtoa@n:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 8 bytes @ 0x3A
  1010  00003B                     	ds	7
  1011  000042                     dtoa@i:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x41
  1015  000042                     	ds	1
  1016  000043                     xtoa@i:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x42
  1020  000043                     	ds	2
  1021  000045                     xtoa@c:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x44
  1025  000045                     	ds	2
  1026  000047                     ?_vfpfcnvrt:
  1027                           	opt callstack 0
  1028  000047                     vfpfcnvrt@fp:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x46
  1032  000047                     	ds	2
  1033  000049                     vfpfcnvrt@fmt:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x48
  1037  000049                     	ds	2
  1038  00004B                     vfpfcnvrt@ap:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x4A
  1042  00004B                     	ds	2
  1043  00004D                     ??_vfpfcnvrt:
  1044                           
  1045                           ; 1 bytes @ 0x4C
  1046  00004D                     	ds	4
  1047  000051                     vfpfcnvrt@ll:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x50
  1051  000051                     	ds	8
  1052  000059                     vfpfcnvrt@llu:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 8 bytes @ 0x58
  1056  000059                     	ds	8
  1057  000061                     vfpfcnvrt@cp:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x60
  1061  000061                     	ds	2
  1062  000063                     vfpfcnvrt@done:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x62
  1066  000063                     	ds	2
  1067  000065                     _vfpfcnvrt$744:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x64
  1071  000065                     	ds	2
  1072  000067                     vfpfcnvrt@c:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x66
  1076  000067                     	ds	1
  1077  000068                     ?_vfprintf:
  1078                           	opt callstack 0
  1079  000068                     vfprintf@fp:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x67
  1083  000068                     	ds	2
  1084  00006A                     vfprintf@fmt:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x69
  1088  00006A                     	ds	2
  1089  00006C                     vfprintf@ap:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x6B
  1093  00006C                     	ds	2
  1094  00006E                     vfprintf@cfmt:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x6D
  1098  00006E                     	ds	2
  1099  000070                     ?_printf:
  1100                           	opt callstack 0
  1101  000070                     printf@fmt:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x6F
  1105  000070                     	ds	8
  1106  000078                     
  1107                           ; 1 bytes @ 0x77
  1108  000078                     	ds	2
  1109  00007A                     printf@ap:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x79
  1113  00007A                     	ds	2
  1114  00007C                     ??_doOperation:
  1115  00007C                     doDisplayLog@currentLogState:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x7B
  1119  00007C                     	ds	2
  1120                           
  1121 ;;
  1122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1123 ;;
  1124 ;; *************** function _main *****************
  1125 ;; Defined at:
  1126 ;;		line 435 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  i               1   37[BANK0 ] unsigned char 
  1131 ;;  keyValue        1   40[BANK0 ] unsigned char 
  1132 ;;  keypress        1   36[BANK0 ] unsigned char 
  1133 ;;  time            7   25[BANK0 ] unsigned char [7]
  1134 ;;  tick            4   32[BANK0 ] unsigned long 
  1135 ;;  currentRobot    1   39[BANK0 ] enum E2832
  1136 ;;  currentLogSt    1   38[BANK0 ] enum E2839
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:       18 bytes
  1151 ;; Hardware stack levels required when called:   13
  1152 ;; This function calls:
  1153 ;;		_I2C_Master_Read
  1154 ;;		_I2C_Master_Start
  1155 ;;		_I2C_Master_Stop
  1156 ;;		_I2C_Master_Write
  1157 ;;		___llmod
  1158 ;;		_doDisplayLog
  1159 ;;		_doOperation
  1160 ;;		_lcdInst
  1161 ;;		_printf
  1162 ;;		_replaceOldLog
  1163 ;;		_robotInit
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text0
  1170  000430                     __ptext0:
  1171                           	opt callstack 0
  1172  000430                     _main:
  1173                           	opt callstack 18
  1174                           
  1175                           ;main.c: 436:     robotInit();
  1176                           
  1177                           ;incstack = 0
  1178  000430  EC2A  F00C         	call	_robotInit	;wreg free
  1179                           
  1180                           ;main.c: 438:     unsigned char time[7];;main.c: 442:     enum robotStates currentRobotS
      +                          tate = standby;
  1181  000434  0E00               	movlw	0
  1182  000436  0100               	movlb	0	; () banked
  1183  000438  6FD7               	movwf	main@currentRobotState& (0+255),b
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;main.c: 444:     enum logStates currentLogState = one;
  1187  00043A  0E01               	movlw	1
  1188  00043C  6FD6               	movwf	main@currentLogState& (0+255),b
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;main.c: 446:     unsigned long tick = 0;
  1192  00043E  0E00               	movlw	0
  1193  000440  6FD0               	movwf	main@tick& (0+255),b
  1194  000442  0E00               	movlw	0
  1195  000444  6FD1               	movwf	(main@tick+1)& (0+255),b
  1196  000446  0E00               	movlw	0
  1197  000448  6FD2               	movwf	(main@tick+2)& (0+255),b
  1198  00044A  0E00               	movlw	0
  1199  00044C  6FD3               	movwf	(main@tick+3)& (0+255),b
  1200  00044E                     l3163:
  1201                           
  1202                           ;main.c: 449:             if (tick%10==0){
  1203  00044E  C0D0  F001         	movff	main@tick,___llmod@dividend
  1204  000452  C0D1  F002         	movff	main@tick+1,___llmod@dividend+1
  1205  000456  C0D2  F003         	movff	main@tick+2,___llmod@dividend+2
  1206  00045A  C0D3  F004         	movff	main@tick+3,___llmod@dividend+3
  1207  00045E  0E0A               	movlw	10
  1208  000460  6E05               	movwf	___llmod@divisor,c
  1209  000462  0E00               	movlw	0
  1210  000464  6E06               	movwf	___llmod@divisor+1,c
  1211  000466  0E00               	movlw	0
  1212  000468  6E07               	movwf	___llmod@divisor+2,c
  1213  00046A  0E00               	movlw	0
  1214  00046C  6E08               	movwf	___llmod@divisor+3,c
  1215  00046E  ECE4  F00A         	call	___llmod	;wreg free
  1216  000472  5001               	movf	?___llmod,w,c
  1217  000474  1002               	iorwf	?___llmod+1,w,c
  1218  000476  1003               	iorwf	?___llmod+2,w,c
  1219  000478  1004               	iorwf	?___llmod+3,w,c
  1220  00047A  A4D8               	btfss	status,2,c
  1221  00047C  D142               	goto	l3269
  1222                           
  1223                           ;main.c: 451:                 I2C_Master_Start();
  1224  00047E  EC47  F00D         	call	_I2C_Master_Start	;wreg free
  1225                           
  1226                           ;main.c: 452:                 I2C_Master_Write(0b11010000);
  1227  000482  0E00               	movlw	0
  1228  000484  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1229  000486  0ED0               	movlw	208
  1230  000488  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1231  00048A  EC3E  F00D         	call	_I2C_Master_Write	;wreg free
  1232                           
  1233                           ;main.c: 453:                 I2C_Master_Write(0x00);
  1234  00048E  0E00               	movlw	0
  1235  000490  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1236  000492  0E00               	movlw	0
  1237  000494  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1238  000496  EC3E  F00D         	call	_I2C_Master_Write	;wreg free
  1239                           
  1240                           ;main.c: 454:                 I2C_Master_Stop();
  1241  00049A  EC43  F00D         	call	_I2C_Master_Stop	;wreg free
  1242                           
  1243                           ;main.c: 457:                 I2C_Master_Start();
  1244  00049E  EC47  F00D         	call	_I2C_Master_Start	;wreg free
  1245                           
  1246                           ;main.c: 458:                 I2C_Master_Write(0b11010001);
  1247  0004A2  0E00               	movlw	0
  1248  0004A4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1249  0004A6  0ED1               	movlw	209
  1250  0004A8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1251  0004AA  EC3E  F00D         	call	_I2C_Master_Write	;wreg free
  1252                           
  1253                           ;main.c: 459:                 for(unsigned char i = 0; i < 6; i++){
  1254  0004AE  0E00               	movlw	0
  1255  0004B0  0100               	movlb	0	; () banked
  1256  0004B2  6FD5               	movwf	main@i& (0+255),b
  1257  0004B4                     l3173:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 460:                     time[i] = I2C_Master_Read(0);
  1261  0004B4  0EC9               	movlw	low main@time
  1262  0004B6  25D5               	addwf	main@i& (0+255),w,b
  1263  0004B8  6ED9               	movwf	fsr2l,c
  1264  0004BA  6ADA               	clrf	fsr2h,c
  1265  0004BC  0E00               	movlw	high main@time
  1266  0004BE  22DA               	addwfc	fsr2h,f,c
  1267  0004C0  0E00               	movlw	0
  1268  0004C2  ECF2  F00C         	call	_I2C_Master_Read
  1269  0004C6  6EDF               	movwf	indf2,c
  1270                           
  1271                           ;main.c: 461:                 }
  1272  0004C8  0100               	movlb	0	; () banked
  1273  0004CA  2BD5               	incf	main@i& (0+255),f,b
  1274                           
  1275                           ; BSR set to: 0
  1276  0004CC  0E05               	movlw	5
  1277  0004CE  65D5               	cpfsgt	main@i& (0+255),b
  1278  0004D0  D7F1               	goto	l3173
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;main.c: 462:                 time[6] = I2C_Master_Read(1);
  1282  0004D2  0E01               	movlw	1
  1283  0004D4  ECF2  F00C         	call	_I2C_Master_Read
  1284  0004D8  0100               	movlb	0	; () banked
  1285  0004DA  6FCF               	movwf	(main@time+6)& (0+255),b
  1286                           
  1287                           ;main.c: 463:                 I2C_Master_Stop();
  1288  0004DC  EC43  F00D         	call	_I2C_Master_Stop	;wreg free
  1289  0004E0  D110               	goto	l3269
  1290  0004E2                     l3181:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 476:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1294  0004E2  0E80               	movlw	128
  1295  0004E4  EC38  F00D         	call	_lcdInst
  1296  0004E8  0E07               	movlw	7
  1297  0004EA  0100               	movlb	0	; () banked
  1298  0004EC  6FC7               	movwf	??_main& (0+255),b
  1299  0004EE  0E7D               	movlw	125
  1300  0004F0                     u2737:
  1301  0004F0  2EE8               	decfsz	wreg,f,c
  1302  0004F2  D7FE               	bra	u2737
  1303  0004F4  2FC7               	decfsz	??_main& (0+255),f,b
  1304  0004F6  D7FC               	bra	u2737
  1305                           
  1306                           ;main.c: 478:                 printf("%s", "WELCOME ");
  1307  0004F8  0EFC               	movlw	low STR_1
  1308  0004FA  6E70               	movwf	printf@fmt,c
  1309  0004FC  0EFF               	movlw	high STR_1
  1310  0004FE  6E71               	movwf	printf@fmt+1,c
  1311  000500  0ED5               	movlw	low STR_19
  1312  000502  6E72               	movwf	?_printf+2,c
  1313  000504  0EFF               	movlw	high STR_19
  1314  000506  6E73               	movwf	?_printf+3,c
  1315  000508  ECB9  F00C         	call	_printf	;wreg free
  1316                           
  1317                           ;main.c: 479:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1318  00050C  0E37               	movlw	low STR_20
  1319  00050E  6E70               	movwf	printf@fmt,c
  1320  000510  0EFF               	movlw	high STR_20
  1321  000512  6E71               	movwf	printf@fmt+1,c
  1322  000514  C0CF  F072         	movff	main@time+6,?_printf+2
  1323  000518  6A73               	clrf	?_printf+3,c
  1324  00051A  C0CE  F074         	movff	main@time+5,?_printf+4
  1325  00051E  6A75               	clrf	?_printf+5,c
  1326  000520  C0CD  F076         	movff	main@time+4,?_printf+6
  1327  000524  6A77               	clrf	?_printf+7,c
  1328  000526  ECB9  F00C         	call	_printf	;wreg free
  1329  00052A  0EC0               	movlw	192
  1330  00052C  EC38  F00D         	call	_lcdInst
  1331                           
  1332                           ;main.c: 481:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1333  000530  0E46               	movlw	low STR_21
  1334  000532  6E70               	movwf	printf@fmt,c
  1335  000534  0EFF               	movlw	high STR_21
  1336  000536  6E71               	movwf	printf@fmt+1,c
  1337  000538  C0CB  F072         	movff	main@time+2,?_printf+2
  1338  00053C  6A73               	clrf	?_printf+3,c
  1339  00053E  C0CA  F074         	movff	main@time+1,?_printf+4
  1340  000542  6A75               	clrf	?_printf+5,c
  1341  000544  C0C9  F076         	movff	main@time,?_printf+6
  1342  000548  6A77               	clrf	?_printf+7,c
  1343  00054A  ECB9  F00C         	call	_printf	;wreg free
  1344  00054E  0E90               	movlw	144
  1345  000550  EC38  F00D         	call	_lcdInst
  1346                           
  1347                           ;main.c: 483:                 printf("%s","(1) START");
  1348  000554  0EFC               	movlw	low STR_1
  1349  000556  6E70               	movwf	printf@fmt,c
  1350  000558  0EFF               	movlw	high STR_1
  1351  00055A  6E71               	movwf	printf@fmt+1,c
  1352  00055C  0ECB               	movlw	low STR_23
  1353  00055E  6E72               	movwf	?_printf+2,c
  1354  000560  0EFF               	movlw	high STR_23
  1355  000562  6E73               	movwf	?_printf+3,c
  1356  000564  ECB9  F00C         	call	_printf	;wreg free
  1357  000568  0ED0               	movlw	208
  1358  00056A  EC38  F00D         	call	_lcdInst
  1359                           
  1360                           ;main.c: 485:                 printf("%s","(2) VIEW LOGS");
  1361  00056E  0EFC               	movlw	low STR_1
  1362  000570  6E70               	movwf	printf@fmt,c
  1363  000572  0EFF               	movlw	high STR_1
  1364  000574  6E71               	movwf	printf@fmt+1,c
  1365  000576  0E71               	movlw	low STR_25
  1366  000578  6E72               	movwf	?_printf+2,c
  1367  00057A  0EFF               	movlw	high STR_25
  1368  00057C  6E73               	movwf	?_printf+3,c
  1369  00057E  ECB9  F00C         	call	_printf	;wreg free
  1370                           
  1371                           ;main.c: 486:                 break;
  1372  000582  D0D7               	goto	l3271
  1373  000584                     l3201:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;main.c: 489:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1377  000584  0E80               	movlw	128
  1378  000586  EC38  F00D         	call	_lcdInst
  1379  00058A  0E07               	movlw	7
  1380  00058C  0100               	movlb	0	; () banked
  1381  00058E  6FC7               	movwf	??_main& (0+255),b
  1382  000590  0E7D               	movlw	125
  1383  000592                     u2747:
  1384  000592  2EE8               	decfsz	wreg,f,c
  1385  000594  D7FE               	bra	u2747
  1386  000596  2FC7               	decfsz	??_main& (0+255),f,b
  1387  000598  D7FC               	bra	u2747
  1388                           
  1389                           ;main.c: 490:                 printf("%s", "OPERATION IN");
  1390  00059A  0EFC               	movlw	low STR_1
  1391  00059C  6E70               	movwf	printf@fmt,c
  1392  00059E  0EFF               	movlw	high STR_1
  1393  0005A0  6E71               	movwf	printf@fmt+1,c
  1394  0005A2  0EA7               	movlw	low STR_27
  1395  0005A4  6E72               	movwf	?_printf+2,c
  1396  0005A6  0EFF               	movlw	high STR_27
  1397  0005A8  6E73               	movwf	?_printf+3,c
  1398  0005AA  ECB9  F00C         	call	_printf	;wreg free
  1399  0005AE  0EC0               	movlw	192
  1400  0005B0  EC38  F00D         	call	_lcdInst
  1401                           
  1402                           ;main.c: 492:                 printf("%s","PROGRESS");
  1403  0005B4  0EFC               	movlw	low STR_1
  1404  0005B6  6E70               	movwf	printf@fmt,c
  1405  0005B8  0EFF               	movlw	high STR_1
  1406  0005BA  6E71               	movwf	printf@fmt+1,c
  1407  0005BC  0EE7               	movlw	low STR_29
  1408  0005BE  6E72               	movwf	?_printf+2,c
  1409  0005C0  0EFF               	movlw	high STR_29
  1410  0005C2  6E73               	movwf	?_printf+3,c
  1411  0005C4  ECB9  F00C         	call	_printf	;wreg free
  1412                           
  1413                           ;main.c: 493:                 doOperation();
  1414  0005C8  ECF5  F009         	call	_doOperation	;wreg free
  1415                           
  1416                           ;main.c: 494:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1417  0005CC  0E01               	movlw	1
  1418  0005CE  EC38  F00D         	call	_lcdInst
  1419  0005D2  0E11               	movlw	17
  1420  0005D4  0100               	movlb	0	; () banked
  1421  0005D6  6FC7               	movwf	??_main& (0+255),b
  1422  0005D8  0E3A               	movlw	58
  1423  0005DA                     u2757:
  1424  0005DA  2EE8               	decfsz	wreg,f,c
  1425  0005DC  D7FE               	bra	u2757
  1426  0005DE  2FC7               	decfsz	??_main& (0+255),f,b
  1427  0005E0  D7FC               	bra	u2757
  1428  0005E2  F000               	nop	
  1429                           
  1430                           ;main.c: 495:                 currentRobotState = operationComplete;
  1431  0005E4  0E02               	movlw	2
  1432  0005E6  D08A               	goto	L1
  1433  0005E8                     l3219:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;main.c: 499:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1437  0005E8  0E80               	movlw	128
  1438  0005EA  EC38  F00D         	call	_lcdInst
  1439  0005EE  0E07               	movlw	7
  1440  0005F0  0100               	movlb	0	; () banked
  1441  0005F2  6FC7               	movwf	??_main& (0+255),b
  1442  0005F4  0E7D               	movlw	125
  1443  0005F6                     u2767:
  1444  0005F6  2EE8               	decfsz	wreg,f,c
  1445  0005F8  D7FE               	bra	u2767
  1446  0005FA  2FC7               	decfsz	??_main& (0+255),f,b
  1447  0005FC  D7FC               	bra	u2767
  1448                           
  1449                           ;main.c: 500:                 printf("%s", "OP. COMPLETE");
  1450  0005FE  0EFC               	movlw	low STR_1
  1451  000600  6E70               	movwf	printf@fmt,c
  1452  000602  0EFF               	movlw	high STR_1
  1453  000604  6E71               	movwf	printf@fmt+1,c
  1454  000606  0E8D               	movlw	low STR_31
  1455  000608  6E72               	movwf	?_printf+2,c
  1456  00060A  0EFF               	movlw	high STR_31
  1457  00060C  6E73               	movwf	?_printf+3,c
  1458  00060E  ECB9  F00C         	call	_printf	;wreg free
  1459  000612  0EC0               	movlw	192
  1460  000614  EC38  F00D         	call	_lcdInst
  1461                           
  1462                           ;main.c: 502:                 printf("%s","(1) VIEW LOG");
  1463  000618  0EFC               	movlw	low STR_1
  1464  00061A  6E70               	movwf	printf@fmt,c
  1465  00061C  0EFF               	movlw	high STR_1
  1466  00061E  6E71               	movwf	printf@fmt+1,c
  1467  000620  0E9A               	movlw	low STR_33
  1468  000622  6E72               	movwf	?_printf+2,c
  1469  000624  0EFF               	movlw	high STR_33
  1470  000626  6E73               	movwf	?_printf+3,c
  1471  000628  ECB9  F00C         	call	_printf	;wreg free
  1472  00062C  0E90               	movlw	144
  1473  00062E  EC38  F00D         	call	_lcdInst
  1474                           
  1475                           ;main.c: 504:                 printf("%s","(2) QUIT DO NOT");
  1476  000632  0EFC               	movlw	low STR_1
  1477  000634  6E70               	movwf	printf@fmt,c
  1478  000636  0EFF               	movlw	high STR_1
  1479  000638  6E71               	movwf	printf@fmt+1,c
  1480  00063A  0E18               	movlw	low STR_35
  1481  00063C  6E72               	movwf	?_printf+2,c
  1482  00063E  0EFF               	movlw	high STR_35
  1483  000640  6E73               	movwf	?_printf+3,c
  1484  000642  ECB9  F00C         	call	_printf	;wreg free
  1485  000646  0ED0               	movlw	208
  1486  000648  EC38  F00D         	call	_lcdInst
  1487                           
  1488                           ;main.c: 506:                 printf("%s","SAVE LOG");
  1489  00064C  0EFC               	movlw	low STR_1
  1490  00064E  6E70               	movwf	printf@fmt,c
  1491  000650  0EFF               	movlw	high STR_1
  1492  000652  6E71               	movwf	printf@fmt+1,c
  1493  000654  0EDE               	movlw	low STR_37
  1494  000656  6E72               	movwf	?_printf+2,c
  1495  000658  0EFF               	movlw	high STR_37
  1496  00065A  6E73               	movwf	?_printf+3,c
  1497  00065C  ECB9  F00C         	call	_printf	;wreg free
  1498                           
  1499                           ;main.c: 507:                 currentLogState = justRan;
  1500  000660  0E00               	movlw	0
  1501  000662  0100               	movlb	0	; () banked
  1502  000664  6FD6               	movwf	main@currentLogState& (0+255),b
  1503                           
  1504                           ;main.c: 508:                 break;
  1505  000666  D065               	goto	l3271
  1506  000668                     l3239:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;main.c: 511:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1510  000668  0E80               	movlw	128
  1511  00066A  EC38  F00D         	call	_lcdInst
  1512  00066E  0E07               	movlw	7
  1513  000670  0100               	movlb	0	; () banked
  1514  000672  6FC7               	movwf	??_main& (0+255),b
  1515  000674  0E7D               	movlw	125
  1516  000676                     u2777:
  1517  000676  2EE8               	decfsz	wreg,f,c
  1518  000678  D7FE               	bra	u2777
  1519  00067A  2FC7               	decfsz	??_main& (0+255),f,b
  1520  00067C  D7FC               	bra	u2777
  1521                           
  1522                           ;main.c: 512:                 printf("%s", "SELECT LOG");
  1523  00067E  0EFC               	movlw	low STR_1
  1524  000680  6E70               	movwf	printf@fmt,c
  1525  000682  0EFF               	movlw	high STR_1
  1526  000684  6E71               	movwf	printf@fmt+1,c
  1527  000686  0EC0               	movlw	low STR_39
  1528  000688  6E72               	movwf	?_printf+2,c
  1529  00068A  0EFF               	movlw	high STR_39
  1530  00068C  6E73               	movwf	?_printf+3,c
  1531  00068E  ECB9  F00C         	call	_printf	;wreg free
  1532  000692  0EC0               	movlw	192
  1533  000694  EC38  F00D         	call	_lcdInst
  1534                           
  1535                           ;main.c: 514:                 printf("%s","(1 IS OLDEST)");
  1536  000698  0EFC               	movlw	low STR_1
  1537  00069A  6E70               	movwf	printf@fmt,c
  1538  00069C  0EFF               	movlw	high STR_1
  1539  00069E  6E71               	movwf	printf@fmt+1,c
  1540  0006A0  0E55               	movlw	low STR_41
  1541  0006A2  6E72               	movwf	?_printf+2,c
  1542  0006A4  0EFF               	movlw	high STR_41
  1543  0006A6  6E73               	movwf	?_printf+3,c
  1544  0006A8  ECB9  F00C         	call	_printf	;wreg free
  1545  0006AC  0E90               	movlw	144
  1546  0006AE  EC38  F00D         	call	_lcdInst
  1547                           
  1548                           ;main.c: 516:                 printf("%s","(1) (2) (3) (4)");
  1549  0006B2  0EFC               	movlw	low STR_1
  1550  0006B4  6E70               	movwf	printf@fmt,c
  1551  0006B6  0EFF               	movlw	high STR_1
  1552  0006B8  6E71               	movwf	printf@fmt+1,c
  1553  0006BA  0EE8               	movlw	low STR_43
  1554  0006BC  6E72               	movwf	?_printf+2,c
  1555  0006BE  0EFE               	movlw	high STR_43
  1556  0006C0  6E73               	movwf	?_printf+3,c
  1557  0006C2  ECB9  F00C         	call	_printf	;wreg free
  1558                           
  1559                           ;main.c: 517:                 break;
  1560  0006C6  D035               	goto	l3271
  1561  0006C8                     l3253:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 519:                 if (currentLogState == justRan){
  1565  0006C8  51D6               	movf	main@currentLogState& (0+255),w,b
  1566  0006CA  A4D8               	btfss	status,2,c
  1567  0006CC  D005               	goto	l3259
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 520:                     replaceOldLog();
  1571  0006CE  EC4F  F00D         	call	_replaceOldLog	;wreg free
  1572                           
  1573                           ;main.c: 521:                     currentLogState = four;
  1574  0006D2  0E04               	movlw	4
  1575  0006D4  0100               	movlb	0	; () banked
  1576  0006D6  6FD6               	movwf	main@currentLogState& (0+255),b
  1577  0006D8                     l3259:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;main.c: 523:                 doDisplayLog(currentLogState);
  1581  0006D8  C0D6  F07C         	movff	main@currentLogState,doDisplayLog@currentLogState
  1582  0006DC  6A7D               	clrf	doDisplayLog@currentLogState+1,c
  1583  0006DE  EC4D  F006         	call	_doDisplayLog	;wreg free
  1584                           
  1585                           ;main.c: 524:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1586  0006E2  0E01               	movlw	1
  1587  0006E4  EC38  F00D         	call	_lcdInst
  1588  0006E8  0E11               	movlw	17
  1589  0006EA  0100               	movlb	0	; () banked
  1590  0006EC  6FC7               	movwf	??_main& (0+255),b
  1591  0006EE  0E3A               	movlw	58
  1592  0006F0                     u2787:
  1593  0006F0  2EE8               	decfsz	wreg,f,c
  1594  0006F2  D7FE               	bra	u2787
  1595  0006F4  2FC7               	decfsz	??_main& (0+255),f,b
  1596  0006F6  D7FC               	bra	u2787
  1597  0006F8  F000               	nop	
  1598                           
  1599                           ;main.c: 525:                 currentRobotState = standby;
  1600  0006FA  0E00               	movlw	0
  1601  0006FC                     L1:
  1602  0006FC  0100               	movlb	0	; () banked
  1603  0006FE  6FD7               	movwf	main@currentRobotState& (0+255),b
  1604                           
  1605                           ;main.c: 526:                 break;
  1606  000700  D018               	goto	l3271
  1607  000702                     l3269:
  1608  000702  0100               	movlb	0	; () banked
  1609  000704  51D7               	movf	main@currentRobotState& (0+255),w,b
  1610  000706  6FC7               	movwf	??_main& (0+255),b
  1611  000708  6BC8               	clrf	(??_main+1)& (0+255),b
  1612                           
  1613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1614                           ; Switch size 1, requested type "simple"
  1615                           ; Number of cases is 1, Range of values is 0 to 0
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte            4     3 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  00070A  51C8               	movf	(??_main+1)& (0+255),w,b
  1621  00070C  0A00               	xorlw	0	; case 0
  1622  00070E  A4D8               	btfss	status,2,c
  1623  000710  D010               	goto	l3271
  1624                           
  1625                           ; BSR set to: 0
  1626                           ; Switch size 1, requested type "simple"
  1627                           ; Number of cases is 5, Range of values is 0 to 4
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte           16     9 (average)
  1631                           ;	Chosen strategy is simple_byte
  1632  000712  51C7               	movf	??_main& (0+255),w,b
  1633  000714  0A00               	xorlw	0	; case 0
  1634  000716  B4D8               	btfsc	status,2,c
  1635  000718  D6E4               	goto	l3181
  1636  00071A  0A01               	xorlw	1	; case 1
  1637  00071C  B4D8               	btfsc	status,2,c
  1638  00071E  D732               	goto	l3201
  1639  000720  0A03               	xorlw	3	; case 2
  1640  000722  B4D8               	btfsc	status,2,c
  1641  000724  D761               	goto	l3219
  1642  000726  0A01               	xorlw	1	; case 3
  1643  000728  B4D8               	btfsc	status,2,c
  1644  00072A  D79E               	goto	l3239
  1645  00072C  0A07               	xorlw	7	; case 4
  1646  00072E  B4D8               	btfsc	status,2,c
  1647  000730  D7CB               	goto	l3253
  1648  000732                     l3271:
  1649                           
  1650                           ;main.c: 530:         if(keyPressed){
  1651  000732  507E               	movf	_keyPressed,w,c	;volatile
  1652  000734  B4D8               	btfsc	status,2,c
  1653  000736  D065               	goto	l156
  1654                           
  1655                           ;main.c: 533:             keyPressed = 0;
  1656  000738  0E00               	movlw	0
  1657  00073A  6E7E               	movwf	_keyPressed,c	;volatile
  1658                           
  1659                           ;main.c: 536:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1660  00073C  3881               	swapf	3969,w,c	;volatile
  1661  00073E  0B0F               	andlw	15
  1662  000740  0B0F               	andlw	15
  1663  000742  0100               	movlb	0	; () banked
  1664  000744  6FD4               	movwf	main@keypress& (0+255),b
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 537:             char keyValue = keys[keypress];
  1668  000746  0EB9               	movlw	low _keys
  1669  000748  25D4               	addwf	main@keypress& (0+255),w,b
  1670  00074A  6EF6               	movwf	tblptrl,c
  1671  00074C  6AF7               	clrf	tblptrh,c
  1672  00074E  0EFE               	movlw	high _keys
  1673  000750  22F7               	addwfc	tblptrh,f,c
  1674  000752                     	if	0	;There are less than 3 active tblptr bytes
  1675  000752                     	endif
  1676  000752  0008               	tblrd		*
  1677  000754  CFF5 F0D8          	movff	tablat,main@keyValue
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 538:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1681  000758  0E01               	movlw	1
  1682  00075A  EC38  F00D         	call	_lcdInst
  1683  00075E  0E11               	movlw	17
  1684  000760  0100               	movlb	0	; () banked
  1685  000762  6FC7               	movwf	??_main& (0+255),b
  1686  000764  0E3A               	movlw	58
  1687  000766                     u2797:
  1688  000766  2EE8               	decfsz	wreg,f,c
  1689  000768  D7FE               	bra	u2797
  1690  00076A  2FC7               	decfsz	??_main& (0+255),f,b
  1691  00076C  D7FC               	bra	u2797
  1692  00076E  F000               	nop	
  1693                           
  1694                           ;main.c: 539:             switch (currentRobotState){
  1695  000770  D032               	goto	l3319
  1696  000772                     l3283:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;main.c: 541:                     if (keyValue == '1'){
  1700  000772  0E31               	movlw	49
  1701  000774  19D8               	xorwf	main@keyValue& (0+255),w,b
  1702  000776  A4D8               	btfss	status,2,c
  1703  000778  D002               	goto	l3287
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main.c: 542:                         currentRobotState = operation;
  1707  00077A  0E01               	movlw	1
  1708  00077C  D011               	goto	L4
  1709  00077E                     l3287:
  1710                           
  1711                           ; BSR set to: 0
  1712  00077E  0E32               	movlw	50
  1713  000780  19D8               	xorwf	main@keyValue& (0+255),w,b
  1714  000782  A4D8               	btfss	status,2,c
  1715  000784  D03E               	goto	l156
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;main.c: 544:                         currentRobotState = selectLog;
  1719  000786  0E03               	movlw	3
  1720  000788  D00B               	goto	L4
  1721  00078A                     l3291:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 550:                     if (keyValue == '1'){
  1725  00078A  0E31               	movlw	49
  1726  00078C  19D8               	xorwf	main@keyValue& (0+255),w,b
  1727  00078E  A4D8               	btfss	status,2,c
  1728  000790  D002               	goto	l3295
  1729  000792                     u2630:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;main.c: 551:                         currentRobotState = displayLog;
  1733  000792  0E04               	movlw	4
  1734  000794  D005               	goto	L4
  1735  000796                     l3295:
  1736                           
  1737                           ; BSR set to: 0
  1738  000796  0E32               	movlw	50
  1739  000798  19D8               	xorwf	main@keyValue& (0+255),w,b
  1740  00079A  A4D8               	btfss	status,2,c
  1741  00079C  D032               	goto	l156
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;main.c: 553:                         currentRobotState = standby;
  1745  00079E  0E00               	movlw	0
  1746  0007A0                     L4:
  1747  0007A0  6FD7               	movwf	main@currentRobotState& (0+255),b
  1748  0007A2  D02F               	goto	l156
  1749  0007A4                     l3299:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 557:                     if (keyValue == '1'){
  1753  0007A4  0E31               	movlw	49
  1754  0007A6  19D8               	xorwf	main@keyValue& (0+255),w,b
  1755  0007A8  A4D8               	btfss	status,2,c
  1756  0007AA  D002               	goto	l3303
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;main.c: 558:                         currentLogState = one;
  1760  0007AC  0E01               	movlw	1
  1761  0007AE  D011               	goto	L7
  1762  0007B0                     l3303:
  1763                           
  1764                           ; BSR set to: 0
  1765  0007B0  0E32               	movlw	50
  1766  0007B2  19D8               	xorwf	main@keyValue& (0+255),w,b
  1767  0007B4  A4D8               	btfss	status,2,c
  1768  0007B6  D002               	goto	l3307
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 560:                         currentLogState = two;
  1772  0007B8  0E02               	movlw	2
  1773  0007BA  D00B               	goto	L7
  1774  0007BC                     l3307:
  1775                           
  1776                           ; BSR set to: 0
  1777  0007BC  0E33               	movlw	51
  1778  0007BE  19D8               	xorwf	main@keyValue& (0+255),w,b
  1779  0007C0  A4D8               	btfss	status,2,c
  1780  0007C2  D002               	goto	l3311
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 562:                         currentLogState = three;
  1784  0007C4  0E03               	movlw	3
  1785  0007C6  D005               	goto	L7
  1786  0007C8                     l3311:
  1787                           
  1788                           ; BSR set to: 0
  1789  0007C8  0E34               	movlw	52
  1790  0007CA  19D8               	xorwf	main@keyValue& (0+255),w,b
  1791  0007CC  A4D8               	btfss	status,2,c
  1792  0007CE  D019               	goto	l156
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 564:                         currentLogState = '4';
  1796  0007D0  0E34               	movlw	52
  1797  0007D2                     L7:
  1798  0007D2  6FD6               	movwf	main@currentLogState& (0+255),b
  1799                           
  1800                           ;main.c: 565:                     } else {
  1801  0007D4  D7DE               	goto	u2630
  1802  0007D6                     l3319:
  1803  0007D6  0100               	movlb	0	; () banked
  1804  0007D8  51D7               	movf	main@currentRobotState& (0+255),w,b
  1805  0007DA  6FC7               	movwf	??_main& (0+255),b
  1806  0007DC  6BC8               	clrf	(??_main+1)& (0+255),b
  1807                           
  1808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1809                           ; Switch size 1, requested type "simple"
  1810                           ; Number of cases is 1, Range of values is 0 to 0
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte            4     3 (average)
  1814                           ;	Chosen strategy is simple_byte
  1815  0007DE  51C8               	movf	(??_main+1)& (0+255),w,b
  1816  0007E0  0A00               	xorlw	0	; case 0
  1817  0007E2  A4D8               	btfss	status,2,c
  1818  0007E4  D00E               	goto	l156
  1819                           
  1820                           ; BSR set to: 0
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 5, Range of values is 0 to 4
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           16     9 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827  0007E6  51C7               	movf	??_main& (0+255),w,b
  1828  0007E8  0A00               	xorlw	0	; case 0
  1829  0007EA  B4D8               	btfsc	status,2,c
  1830  0007EC  D7C2               	goto	l3283
  1831  0007EE  0A01               	xorlw	1	; case 1
  1832  0007F0  B4D8               	btfsc	status,2,c
  1833  0007F2  D007               	goto	l156
  1834  0007F4  0A03               	xorlw	3	; case 2
  1835  0007F6  B4D8               	btfsc	status,2,c
  1836  0007F8  D7C8               	goto	l3291
  1837  0007FA  0A01               	xorlw	1	; case 3
  1838  0007FC  B4D8               	btfsc	status,2,c
  1839  0007FE  D7D2               	goto	l3299
  1840  000800  0A07               	xorlw	7	; case 4
  1841  000802                     l156:
  1842                           
  1843                           ;main.c: 585:         tick++;
  1844                           
  1845                           ; BSR set to: 0
  1846  000802  0E01               	movlw	1
  1847  000804  0100               	movlb	0	; () banked
  1848  000806  27D0               	addwf	main@tick& (0+255),f,b
  1849  000808  0E00               	movlw	0
  1850  00080A  23D1               	addwfc	(main@tick+1)& (0+255),f,b
  1851  00080C  23D2               	addwfc	(main@tick+2)& (0+255),f,b
  1852  00080E  23D3               	addwfc	(main@tick+3)& (0+255),f,b
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;main.c: 586:         _delay((unsigned long)((1)*(10000000/4000.0)));
  1856  000810  0E04               	movlw	4
  1857  000812  0100               	movlb	0	; () banked
  1858  000814  6FC7               	movwf	??_main& (0+255),b
  1859  000816  0E3D               	movlw	61
  1860  000818                     u2807:
  1861  000818  2EE8               	decfsz	wreg,f,c
  1862  00081A  D7FE               	bra	u2807
  1863  00081C  2FC7               	decfsz	??_main& (0+255),f,b
  1864  00081E  D7FC               	bra	u2807
  1865  000820  D000               	nop2	
  1866  000822  D615               	goto	l3163
  1867  000824                     __end_of_main:
  1868                           	opt callstack 0
  1869                           
  1870 ;; *************** function _robotInit *****************
  1871 ;; Defined at:
  1872 ;;		line 399 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    6
  1893 ;; This function calls:
  1894 ;;		_I2C_Master_Init
  1895 ;;		_initLCD
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text1
  1902  001854                     __ptext1:
  1903                           	opt callstack 0
  1904  001854                     _robotInit:
  1905                           	opt callstack 24
  1906                           
  1907                           ;main.c: 403:     LATD = 0x00;
  1908                           
  1909                           ;incstack = 0
  1910  001854  0E00               	movlw	0
  1911  001856  6E8C               	movwf	3980,c	;volatile
  1912                           
  1913                           ;main.c: 404:     TRISD = 0x00;
  1914  001858  0E00               	movlw	0
  1915  00185A  6E95               	movwf	3989,c	;volatile
  1916                           
  1917                           ;main.c: 407:     LATB = 0x00;
  1918  00185C  0E00               	movlw	0
  1919  00185E  6E8A               	movwf	3978,c	;volatile
  1920                           
  1921                           ;main.c: 408:     TRISB = 0b11110010;
  1922  001860  0EF2               	movlw	242
  1923  001862  6E93               	movwf	3987,c	;volatile
  1924                           
  1925                           ;main.c: 411:     I2C_Master_Init(100000);
  1926  001864  0EA0               	movlw	160
  1927  001866  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1928  001868  0E86               	movlw	134
  1929  00186A  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1930  00186C  0E01               	movlw	1
  1931  00186E  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1932  001870  0E00               	movlw	0
  1933  001872  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1934  001874  EC17  F00B         	call	_I2C_Master_Init	;wreg free
  1935                           
  1936                           ;main.c: 418:     ADCON1 = 0b00001111;
  1937  001878  0E0F               	movlw	15
  1938  00187A  6EC1               	movwf	4033,c	;volatile
  1939                           
  1940                           ;main.c: 421:     INT1IE = 1;
  1941  00187C  86F0               	bsf	4080,3,c	;volatile
  1942                           
  1943                           ;main.c: 424:     initLCD();
  1944  00187E  ECAF  F00A         	call	_initLCD	;wreg free
  1945                           
  1946                           ;main.c: 427:     (INTCONbits.GIE = 1);
  1947  001882  8EF2               	bsf	4082,7,c	;volatile
  1948  001884  0012               	return		;funcret
  1949  001886                     __end_of_robotInit:
  1950                           	opt callstack 0
  1951                           
  1952 ;; *************** function _initLCD *****************
  1953 ;; Defined at:
  1954 ;;		line 69 in file "lcd.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;Total ram usage:        1 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    5
  1975 ;; This function calls:
  1976 ;;		_lcdInst
  1977 ;;		_send_byte
  1978 ;;		_send_nibble
  1979 ;; This function is called by:
  1980 ;;		_robotInit
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text2
  1985  00155E                     __ptext2:
  1986                           	opt callstack 0
  1987  00155E                     _initLCD:
  1988                           	opt callstack 24
  1989                           
  1990                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  1991                           
  1992                           ;incstack = 0
  1993  00155E  0E31               	movlw	49
  1994  001560  6E05               	movwf	??_initLCD& (0+255),c
  1995  001562  0EB2               	movlw	178
  1996  001564                     u2817:
  1997  001564  2EE8               	decfsz	wreg,f,c
  1998  001566  D7FE               	bra	u2817
  1999  001568  2E05               	decfsz	??_initLCD& (0+255),f,c
  2000  00156A  D7FC               	bra	u2817
  2001  00156C  D000               	nop2	
  2002                           
  2003                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2004  00156E  948C               	bcf	3980,2,c	;volatile
  2005                           
  2006                           ;lcd.c: 74:     send_nibble(0b0011);
  2007  001570  0E03               	movlw	3
  2008  001572  EC15  F00D         	call	_send_nibble
  2009                           
  2010                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2011  001576  0E11               	movlw	17
  2012  001578  6E05               	movwf	??_initLCD& (0+255),c
  2013  00157A  0E3A               	movlw	58
  2014  00157C                     u2827:
  2015  00157C  2EE8               	decfsz	wreg,f,c
  2016  00157E  D7FE               	bra	u2827
  2017  001580  2E05               	decfsz	??_initLCD& (0+255),f,c
  2018  001582  D7FC               	bra	u2827
  2019  001584  D000               	nop2	
  2020                           
  2021                           ;lcd.c: 76:     send_nibble(0b0011);
  2022  001586  0E03               	movlw	3
  2023  001588  EC15  F00D         	call	_send_nibble
  2024                           
  2025                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2026  00158C  0E7D               	movlw	125
  2027  00158E                     u2837:
  2028  00158E  2EE8               	decfsz	wreg,f,c
  2029  001590  D7FE               	bra	u2837
  2030                           
  2031                           ;lcd.c: 78:     send_byte(0b00110010);
  2032  001592  0E32               	movlw	50
  2033  001594  EC20  F00D         	call	_send_byte
  2034                           
  2035                           ;lcd.c: 80:     send_byte(0b00101000);
  2036  001598  0E28               	movlw	40
  2037  00159A  EC20  F00D         	call	_send_byte
  2038                           
  2039                           ;lcd.c: 81:     send_byte(0b00001000);
  2040  00159E  0E08               	movlw	8
  2041  0015A0  EC20  F00D         	call	_send_byte
  2042                           
  2043                           ;lcd.c: 82:     send_byte(0b00000001);
  2044  0015A4  0E01               	movlw	1
  2045  0015A6  EC20  F00D         	call	_send_byte
  2046                           
  2047                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2048  0015AA  0E11               	movlw	17
  2049  0015AC  6E05               	movwf	??_initLCD& (0+255),c
  2050  0015AE  0E3A               	movlw	58
  2051  0015B0                     u2847:
  2052  0015B0  2EE8               	decfsz	wreg,f,c
  2053  0015B2  D7FE               	bra	u2847
  2054  0015B4  2E05               	decfsz	??_initLCD& (0+255),f,c
  2055  0015B6  D7FC               	bra	u2847
  2056  0015B8  D000               	nop2	
  2057                           
  2058                           ;lcd.c: 84:     send_byte(0b00000110);
  2059  0015BA  0E06               	movlw	6
  2060  0015BC  EC20  F00D         	call	_send_byte
  2061                           
  2062                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2063  0015C0  0E0C               	movlw	12
  2064  0015C2  EC38  F00D         	call	_lcdInst
  2065  0015C6  0012               	return		;funcret
  2066  0015C8                     __end_of_initLCD:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _I2C_Master_Init *****************
  2070 ;; Defined at:
  2071 ;;		line 32 in file "I2C.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        8 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		___lldiv
  2094 ;; This function is called by:
  2095 ;;		_robotInit
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text3
  2100  00162E                     __ptext3:
  2101                           	opt callstack 0
  2102  00162E                     _I2C_Master_Init:
  2103                           	opt callstack 27
  2104                           
  2105                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2106                           
  2107                           ;incstack = 0
  2108  00162E  9AC6               	bcf	4038,5,c	;volatile
  2109                           
  2110                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2111  001630  8694               	bsf	3988,3,c	;volatile
  2112                           
  2113                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2114  001632  8894               	bsf	3988,4,c	;volatile
  2115                           
  2116                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2117  001634  0E80               	movlw	128
  2118  001636  6E01               	movwf	___lldiv@dividend,c
  2119  001638  0E96               	movlw	150
  2120  00163A  6E02               	movwf	___lldiv@dividend+1,c
  2121  00163C  0E98               	movlw	152
  2122  00163E  6E03               	movwf	___lldiv@dividend+2,c
  2123  001640  0E00               	movlw	0
  2124  001642  6E04               	movwf	___lldiv@dividend+3,c
  2125  001644  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2126  001648  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2127  00164C  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2128  001650  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2129  001654  0E02               	movlw	2
  2130  001656                     u2455:
  2131  001656  90D8               	bcf	status,0,c
  2132  001658  3612               	rlcf	??_I2C_Master_Init,f,c
  2133  00165A  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2134  00165C  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2135  00165E  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2136  001660  2EE8               	decfsz	wreg,f,c
  2137  001662  D7F9               	goto	u2455
  2138  001664  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2139  001668  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2140  00166C  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2141  001670  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2142  001674  EC38  F00A         	call	___lldiv	;wreg free
  2143  001678  0401               	decf	?___lldiv,w,c
  2144  00167A  6EC8               	movwf	4040,c	;volatile
  2145                           
  2146                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2147  00167C  0E80               	movlw	128
  2148  00167E  6EC7               	movwf	4039,c	;volatile
  2149                           
  2150                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2151  001680  0E28               	movlw	40
  2152  001682  6EC6               	movwf	4038,c	;volatile
  2153                           
  2154                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2155  001684  0E00               	movlw	0
  2156  001686  6EC5               	movwf	4037,c	;volatile
  2157  001688  0012               	return		;funcret
  2158  00168A                     __end_of_I2C_Master_Init:
  2159                           	opt callstack 0
  2160                           
  2161 ;; *************** function ___lldiv *****************
  2162 ;; Defined at:
  2163 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  dividend        4    0[COMRAM] unsigned long 
  2166 ;;  divisor         4    4[COMRAM] unsigned long 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  quotient        4    8[COMRAM] unsigned long 
  2169 ;;  counter         1   12[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  4    0[COMRAM] unsigned long 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:       13 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_I2C_Master_Init
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text4
  2194  001470                     __ptext4:
  2195                           	opt callstack 0
  2196  001470                     ___lldiv:
  2197                           	opt callstack 27
  2198                           
  2199                           ;incstack = 0
  2200  001470  0E00               	movlw	0
  2201  001472  6E09               	movwf	___lldiv@quotient,c
  2202  001474  0E00               	movlw	0
  2203  001476  6E0A               	movwf	___lldiv@quotient+1,c
  2204  001478  0E00               	movlw	0
  2205  00147A  6E0B               	movwf	___lldiv@quotient+2,c
  2206  00147C  0E00               	movlw	0
  2207  00147E  6E0C               	movwf	___lldiv@quotient+3,c
  2208  001480  5005               	movf	___lldiv@divisor,w,c
  2209  001482  1006               	iorwf	___lldiv@divisor+1,w,c
  2210  001484  1007               	iorwf	___lldiv@divisor+2,w,c
  2211  001486  1008               	iorwf	___lldiv@divisor+3,w,c
  2212  001488  B4D8               	btfsc	status,2,c
  2213  00148A  D02A               	goto	l461
  2214  00148C  0E01               	movlw	1
  2215  00148E  6E0D               	movwf	___lldiv@counter,c
  2216  001490  D006               	goto	l2869
  2217  001492                     l2867:
  2218  001492  90D8               	bcf	status,0,c
  2219  001494  3605               	rlcf	___lldiv@divisor,f,c
  2220  001496  3606               	rlcf	___lldiv@divisor+1,f,c
  2221  001498  3607               	rlcf	___lldiv@divisor+2,f,c
  2222  00149A  3608               	rlcf	___lldiv@divisor+3,f,c
  2223  00149C  2A0D               	incf	___lldiv@counter,f,c
  2224  00149E                     l2869:
  2225  00149E  AE08               	btfss	___lldiv@divisor+3,7,c
  2226  0014A0  D7F8               	goto	l2867
  2227  0014A2                     u2430:
  2228  0014A2  90D8               	bcf	status,0,c
  2229  0014A4  3609               	rlcf	___lldiv@quotient,f,c
  2230  0014A6  360A               	rlcf	___lldiv@quotient+1,f,c
  2231  0014A8  360B               	rlcf	___lldiv@quotient+2,f,c
  2232  0014AA  360C               	rlcf	___lldiv@quotient+3,f,c
  2233  0014AC  5005               	movf	___lldiv@divisor,w,c
  2234  0014AE  5C01               	subwf	___lldiv@dividend,w,c
  2235  0014B0  5006               	movf	___lldiv@divisor+1,w,c
  2236  0014B2  5802               	subwfb	___lldiv@dividend+1,w,c
  2237  0014B4  5007               	movf	___lldiv@divisor+2,w,c
  2238  0014B6  5803               	subwfb	___lldiv@dividend+2,w,c
  2239  0014B8  5008               	movf	___lldiv@divisor+3,w,c
  2240  0014BA  5804               	subwfb	___lldiv@dividend+3,w,c
  2241  0014BC  A0D8               	btfss	status,0,c
  2242  0014BE  D009               	goto	l2879
  2243  0014C0  5005               	movf	___lldiv@divisor,w,c
  2244  0014C2  5E01               	subwf	___lldiv@dividend,f,c
  2245  0014C4  5006               	movf	___lldiv@divisor+1,w,c
  2246  0014C6  5A02               	subwfb	___lldiv@dividend+1,f,c
  2247  0014C8  5007               	movf	___lldiv@divisor+2,w,c
  2248  0014CA  5A03               	subwfb	___lldiv@dividend+2,f,c
  2249  0014CC  5008               	movf	___lldiv@divisor+3,w,c
  2250  0014CE  5A04               	subwfb	___lldiv@dividend+3,f,c
  2251  0014D0  8009               	bsf	___lldiv@quotient,0,c
  2252  0014D2                     l2879:
  2253  0014D2  90D8               	bcf	status,0,c
  2254  0014D4  3208               	rrcf	___lldiv@divisor+3,f,c
  2255  0014D6  3207               	rrcf	___lldiv@divisor+2,f,c
  2256  0014D8  3206               	rrcf	___lldiv@divisor+1,f,c
  2257  0014DA  3205               	rrcf	___lldiv@divisor,f,c
  2258  0014DC  2E0D               	decfsz	___lldiv@counter,f,c
  2259  0014DE  D7E1               	goto	u2430
  2260  0014E0                     l461:
  2261  0014E0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2262  0014E4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2263  0014E8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2264  0014EC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2265  0014F0  0012               	return		;funcret
  2266  0014F2                     __end_of___lldiv:
  2267                           	opt callstack 0
  2268                           
  2269 ;; *************** function _replaceOldLog *****************
  2270 ;; Defined at:
  2271 ;;		line 370 in file "main.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		None
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text5
  2300  001A9E                     __ptext5:
  2301                           	opt callstack 0
  2302  001A9E                     _replaceOldLog:
  2303                           	opt callstack 29
  2304                           
  2305                           ;main.c: 371:     return;
  2306                           
  2307                           ;incstack = 0
  2308  001A9E  0012               	return		;funcret
  2309  001AA0                     __end_of_replaceOldLog:
  2310                           	opt callstack 0
  2311                           
  2312 ;; *************** function _doOperation *****************
  2313 ;; Defined at:
  2314 ;;		line 190 in file "main.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  mem             3    0        unsigned char [3]
  2319 ;;  secondsMeasu    2   21[BANK0 ] int 
  2320 ;;  tiresToDrop     2    0        int 
  2321 ;;  rightRangeFi    2    0        int 
  2322 ;;  leftRangeFin    2    0        int 
  2323 ;;  currentAngle    2    0        int 
  2324 ;;  error           2    0        int 
  2325 ;;  errorScaleFa    2    0        int 
  2326 ;;  motorBSpeed     2    0        int 
  2327 ;;  motorASpeed     2    0        int 
  2328 ;;  goalSpeed       2    0        int 
  2329 ;;  fourMetreEqu    2    0        int 
  2330 ;;  minimumSafeD    2    0        int 
  2331 ;;  counter         1    0        unsigned char 
  2332 ;;  send            1    0        _Bool 
  2333 ;;  currentOpera    1    0        enum E2807
  2334 ;;  data            1    0        unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:       24 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:   12
  2351 ;; This function calls:
  2352 ;;		_I2C_Master_Start
  2353 ;;		_I2C_Master_Stop
  2354 ;;		_I2C_Master_Write
  2355 ;;		_TIMER_INIT
  2356 ;;		_lcdInst
  2357 ;;		_printf
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text6
  2364  0013EA                     __ptext6:
  2365                           	opt callstack 0
  2366  0013EA                     _doOperation:
  2367                           	opt callstack 18
  2368                           
  2369                           ;main.c: 196:     I2C_Master_Start();
  2370                           
  2371                           ;incstack = 0
  2372  0013EA  EC47  F00D         	call	_I2C_Master_Start	;wreg free
  2373                           
  2374                           ;main.c: 197:     I2C_Master_Write(0b00010000);
  2375  0013EE  0E00               	movlw	0
  2376  0013F0  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  2377  0013F2  0E10               	movlw	16
  2378  0013F4  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  2379  0013F6  EC3E  F00D         	call	_I2C_Master_Write	;wreg free
  2380                           
  2381                           ;main.c: 198:     I2C_Master_Stop();
  2382  0013FA  EC43  F00D         	call	_I2C_Master_Stop	;wreg free
  2383                           
  2384                           ;main.c: 203:     TIMER_INIT();
  2385  0013FE  EC04  F00D         	call	_TIMER_INIT	;wreg free
  2386                           
  2387                           ;main.c: 204:     secondsMeasured = 0;
  2388  001402  0E00               	movlw	0
  2389  001404  0100               	movlb	0	; () banked
  2390  001406  6F89               	movwf	(_secondsMeasured+1)& (0+255),b	;volatile
  2391  001408  0E00               	movlw	0
  2392  00140A  6F88               	movwf	_secondsMeasured& (0+255),b	;volatile
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;main.c: 217:     int minimumSafeDistanceToPole;;main.c: 218:     int fourMetreEquivalen
      +                          t;;main.c: 220:     LATAbits.LATA4 = 1;
  2396                           
  2397                           ; BSR set to: 0
  2398                           
  2399                           ; BSR set to: 0
  2400                           
  2401                           ; BSR set to: 0
  2402                           
  2403                           ; BSR set to: 0
  2404                           
  2405                           ; BSR set to: 0
  2406                           
  2407                           ; BSR set to: 0
  2408                           
  2409                           ; BSR set to: 0
  2410                           
  2411                           ; BSR set to: 0
  2412                           
  2413                           ; BSR set to: 0
  2414                           
  2415                           ; BSR set to: 0
  2416  00140C  8889               	bsf	3977,4,c	;volatile
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 226:     int secondsMeasuredOld = 0;
  2420                           
  2421                           ; BSR set to: 0
  2422  00140E  0E00               	movlw	0
  2423  001410  6FC6               	movwf	(doOperation@secondsMeasuredOld+1)& (0+255),b
  2424  001412  0E00               	movlw	0
  2425  001414  6FC5               	movwf	doOperation@secondsMeasuredOld& (0+255),b
  2426                           
  2427                           ;main.c: 228:     while (secondsMeasured < 10){
  2428  001416  D022               	goto	l3071
  2429  001418                     l3061:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 229:   if (secondsMeasured > secondsMeasuredOld){
  2433  001418  5188               	movf	_secondsMeasured& (0+255),w,b	;volatile
  2434  00141A  5DC5               	subwf	doOperation@secondsMeasuredOld& (0+255),w,b
  2435  00141C  51C6               	movf	(doOperation@secondsMeasuredOld+1)& (0+255),w,b
  2436  00141E  0A80               	xorlw	128
  2437  001420  6E7C               	movwf	??_doOperation& (0+255),c
  2438  001422  5189               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2439  001424  0A80               	xorlw	128
  2440  001426  587C               	subwfb	??_doOperation& (0+255),w,c
  2441  001428  B0D8               	btfsc	status,0,c
  2442  00142A  D018               	goto	l3071
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 230:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2446  00142C  0E01               	movlw	1
  2447  00142E  EC38  F00D         	call	_lcdInst
  2448  001432  0E11               	movlw	17
  2449  001434  6E7C               	movwf	??_doOperation& (0+255),c
  2450  001436  0E3A               	movlw	58
  2451  001438                     u2857:
  2452  001438  2EE8               	decfsz	wreg,f,c
  2453  00143A  D7FE               	bra	u2857
  2454  00143C  2E7C               	decfsz	??_doOperation& (0+255),f,c
  2455  00143E  D7FC               	bra	u2857
  2456  001440  D000               	nop2	
  2457                           
  2458                           ;main.c: 231:             printf("%d", secondsMeasured);
  2459  001442  0EF9               	movlw	low STR_17
  2460  001444  6E70               	movwf	printf@fmt,c
  2461  001446  0EFF               	movlw	high STR_17
  2462  001448  6E71               	movwf	printf@fmt+1,c
  2463  00144A  C088  F072         	movff	_secondsMeasured,?_printf+2	;volatile
  2464  00144E  C089  F073         	movff	_secondsMeasured+1,?_printf+3	;volatile
  2465  001452  ECB9  F00C         	call	_printf	;wreg free
  2466                           
  2467                           ;main.c: 232:             secondsMeasuredOld++;
  2468  001456  0100               	movlb	0	; () banked
  2469  001458  4BC5               	infsnz	doOperation@secondsMeasuredOld& (0+255),f,b
  2470  00145A  2BC6               	incf	(doOperation@secondsMeasuredOld+1)& (0+255),f,b
  2471  00145C                     l3071:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;main.c: 228:     while (secondsMeasured < 10){
  2475  00145C  BF89               	btfsc	(_secondsMeasured+1)& (0+255),7,b	;volatile
  2476  00145E  D7DC               	goto	l3061
  2477  001460  5189               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2478  001462  E105               	bnz	u2510
  2479  001464  0E0A               	movlw	10
  2480  001466  5D88               	subwf	_secondsMeasured& (0+255),w,b	;volatile
  2481  001468  B0D8               	btfsc	status,0,c
  2482  00146A  0012               	return	
  2483  00146C  D7D5               	goto	l3061
  2484  00146E                     u2510:
  2485                           
  2486                           ; BSR set to: 0
  2487                           
  2488                           ; BSR set to: 0
  2489  00146E  0012               	return		;funcret
  2490  001470                     __end_of_doOperation:
  2491                           	opt callstack 0
  2492                           
  2493 ;; *************** function _TIMER_INIT *****************
  2494 ;; Defined at:
  2495 ;;		line 113 in file "main.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_doOperation
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text7
  2524  001A08                     __ptext7:
  2525                           	opt callstack 0
  2526  001A08                     _TIMER_INIT:
  2527                           	opt callstack 28
  2528                           
  2529                           ;main.c: 114:     T0CONbits.TMR0ON = 0;
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;incstack = 0
  2533  001A08  9ED5               	bcf	4053,7,c	;volatile
  2534                           
  2535                           ;main.c: 115:     T0CONbits.T08BIT = 0;
  2536  001A0A  9CD5               	bcf	4053,6,c	;volatile
  2537                           
  2538                           ;main.c: 116:     T0CONbits.T0CS = 0;
  2539  001A0C  9AD5               	bcf	4053,5,c	;volatile
  2540                           
  2541                           ;main.c: 117:     T0CONbits.PSA = 0;
  2542  001A0E  96D5               	bcf	4053,3,c	;volatile
  2543                           
  2544                           ;main.c: 118:     T0CONbits.T0PS = 0b101;
  2545  001A10  50D5               	movf	4053,w,c	;volatile
  2546  001A12  0BF8               	andlw	-8
  2547  001A14  0905               	iorlw	5
  2548  001A16  6ED5               	movwf	4053,c	;volatile
  2549                           
  2550                           ;main.c: 119:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  2551  001A18  0EB3               	movlw	179
  2552  001A1A  6ED7               	movwf	4055,c	;volatile
  2553                           
  2554                           ;main.c: 120:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  2555  001A1C  0EB5               	movlw	181
  2556  001A1E  6ED6               	movwf	4054,c	;volatile
  2557                           
  2558                           ;main.c: 121:     T0CONbits.TMR0ON = 1;
  2559  001A20  8ED5               	bsf	4053,7,c	;volatile
  2560                           
  2561                           ;main.c: 122:     INTCONbits.TMR0IE = 1;
  2562  001A22  8AF2               	bsf	4082,5,c	;volatile
  2563                           
  2564                           ;main.c: 124:     INTCONbits.GIE = 1;
  2565  001A24  8EF2               	bsf	4082,7,c	;volatile
  2566                           
  2567                           ;main.c: 125:     INTCONbits.PEIE = 1;
  2568  001A26  8CF2               	bsf	4082,6,c	;volatile
  2569  001A28  0012               	return		;funcret
  2570  001A2A                     __end_of_TIMER_INIT:
  2571                           	opt callstack 0
  2572                           
  2573 ;; *************** function _I2C_Master_Write *****************
  2574 ;; Defined at:
  2575 ;;		line 70 in file "I2C.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		_I2C_Master_Wait
  2598 ;; This function is called by:
  2599 ;;		_doOperation
  2600 ;;		_main
  2601 ;;		_rtc_set_time
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text8
  2606  001A7C                     __ptext8:
  2607                           	opt callstack 0
  2608  001A7C                     _I2C_Master_Write:
  2609                           	opt callstack 27
  2610                           
  2611                           ;I2C.c: 71:     I2C_Master_Wait();
  2612                           
  2613                           ;incstack = 0
  2614  001A7C  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  2615                           
  2616                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  2617  001A80  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2618  001A84  0012               	return		;funcret
  2619  001A86                     __end_of_I2C_Master_Write:
  2620                           	opt callstack 0
  2621                           
  2622 ;; *************** function _I2C_Master_Stop *****************
  2623 ;; Defined at:
  2624 ;;		line 65 in file "I2C.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    2
  2645 ;; This function calls:
  2646 ;;		_I2C_Master_Wait
  2647 ;; This function is called by:
  2648 ;;		_doOperation
  2649 ;;		_main
  2650 ;;		_rtc_set_time
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  001A86                     __ptext9:
  2656                           	opt callstack 0
  2657  001A86                     _I2C_Master_Stop:
  2658                           	opt callstack 27
  2659                           
  2660                           ;I2C.c: 66:     I2C_Master_Wait();
  2661                           
  2662                           ;incstack = 0
  2663  001A86  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  2664                           
  2665                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  2666  001A8A  84C5               	bsf	4037,2,c	;volatile
  2667  001A8C  0012               	return		;funcret
  2668  001A8E                     __end_of_I2C_Master_Stop:
  2669                           	opt callstack 0
  2670                           
  2671 ;; *************** function _I2C_Master_Start *****************
  2672 ;; Defined at:
  2673 ;;		line 55 in file "I2C.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    2
  2694 ;; This function calls:
  2695 ;;		_I2C_Master_Wait
  2696 ;; This function is called by:
  2697 ;;		_doOperation
  2698 ;;		_main
  2699 ;;		_rtc_set_time
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text10
  2704  001A8E                     __ptext10:
  2705                           	opt callstack 0
  2706  001A8E                     _I2C_Master_Start:
  2707                           	opt callstack 27
  2708                           
  2709                           ;I2C.c: 56:     I2C_Master_Wait();
  2710                           
  2711                           ;incstack = 0
  2712  001A8E  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  2713                           
  2714                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  2715  001A92  80C5               	bsf	4037,0,c	;volatile
  2716  001A94  0012               	return		;funcret
  2717  001A96                     __end_of_I2C_Master_Start:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _doDisplayLog *****************
  2721 ;; Defined at:
  2722 ;;		line 39 in file "main.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  currentLogSt    2  123[COMRAM] int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  keyValue        1    6[BANK0 ] unsigned char 
  2727 ;;  keypress        1    4[BANK0 ] unsigned char 
  2728 ;;  currentPole     2    0        int 
  2729 ;;  currentDispl    1    5[BANK0 ] enum E2790
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        9 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:   12
  2746 ;; This function calls:
  2747 ;;		_lcdInst
  2748 ;;		_printf
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text11
  2755  000C9A                     __ptext11:
  2756                           	opt callstack 0
  2757  000C9A                     _doDisplayLog:
  2758                           	opt callstack 18
  2759                           
  2760                           ;main.c: 40:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2761                           
  2762                           ;incstack = 0
  2763  000C9A  0E80               	movlw	128
  2764  000C9C  EC38  F00D         	call	_lcdInst
  2765  000CA0  0E07               	movlw	7
  2766  000CA2  0100               	movlb	0	; () banked
  2767  000CA4  6FB0               	movwf	??_doDisplayLog& (0+255),b
  2768  000CA6  0E7D               	movlw	125
  2769  000CA8                     u2867:
  2770  000CA8  2EE8               	decfsz	wreg,f,c
  2771  000CAA  D7FE               	bra	u2867
  2772  000CAC  2FB0               	decfsz	??_doDisplayLog& (0+255),f,b
  2773  000CAE  D7FC               	bra	u2867
  2774                           
  2775                           ;main.c: 47:     enum displayStates currentDisplayState = opTime;
  2776  000CB0  0E00               	movlw	0
  2777  000CB2  0100               	movlb	0	; () banked
  2778  000CB4  6FB5               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  2779  000CB6  D07A               	goto	l2989
  2780  000CB8                     l2951:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;main.c: 52:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  2784  000CB8  0E80               	movlw	128
  2785  000CBA  EC38  F00D         	call	_lcdInst
  2786  000CBE  0E07               	movlw	7
  2787  000CC0  0100               	movlb	0	; () banked
  2788  000CC2  6FB0               	movwf	??_doDisplayLog& (0+255),b
  2789  000CC4  0E7D               	movlw	125
  2790  000CC6                     u2877:
  2791  000CC6  2EE8               	decfsz	wreg,f,c
  2792  000CC8  D7FE               	bra	u2877
  2793  000CCA  2FB0               	decfsz	??_doDisplayLog& (0+255),f,b
  2794  000CCC  D7FC               	bra	u2877
  2795                           
  2796                           ;main.c: 53:                 printf("%s", "OP. TIME Xs");
  2797  000CCE  0EFC               	movlw	low STR_1
  2798  000CD0  6E70               	movwf	printf@fmt,c
  2799  000CD2  0EFF               	movlw	high STR_1
  2800  000CD4  6E71               	movwf	printf@fmt+1,c
  2801  000CD6  0EB4               	movlw	low STR_2
  2802  000CD8  6E72               	movwf	?_printf+2,c
  2803  000CDA  0EFF               	movlw	high STR_2
  2804  000CDC  6E73               	movwf	?_printf+3,c
  2805  000CDE  ECB9  F00C         	call	_printf	;wreg free
  2806  000CE2  0EC0               	movlw	192
  2807  000CE4  EC38  F00D         	call	_lcdInst
  2808                           
  2809                           ;main.c: 55:                 printf("%s","X TIR. SUPPLIED");
  2810  000CE8  0EFC               	movlw	low STR_1
  2811  000CEA  6E70               	movwf	printf@fmt,c
  2812  000CEC  0EFF               	movlw	high STR_1
  2813  000CEE  6E71               	movwf	printf@fmt+1,c
  2814  000CF0  0EF8               	movlw	low STR_4
  2815  000CF2  6E72               	movwf	?_printf+2,c
  2816  000CF4  0EFE               	movlw	high STR_4
  2817  000CF6  6E73               	movwf	?_printf+3,c
  2818  000CF8  ECB9  F00C         	call	_printf	;wreg free
  2819  000CFC  0E90               	movlw	144
  2820  000CFE  EC38  F00D         	call	_lcdInst
  2821                           
  2822                           ;main.c: 57:                 printf("%s","(1) POLE INFO");
  2823  000D02  0EFC               	movlw	low STR_1
  2824  000D04  6E70               	movwf	printf@fmt,c
  2825  000D06  0EFF               	movlw	high STR_1
  2826  000D08  6E71               	movwf	printf@fmt+1,c
  2827  000D0A  0E63               	movlw	low STR_6
  2828  000D0C  6E72               	movwf	?_printf+2,c
  2829  000D0E  0EFF               	movlw	high STR_6
  2830  000D10  6E73               	movwf	?_printf+3,c
  2831  000D12  ECB9  F00C         	call	_printf	;wreg free
  2832  000D16  0ED0               	movlw	208
  2833  000D18  EC38  F00D         	call	_lcdInst
  2834                           
  2835                           ;main.c: 59:                 printf("%s","(2) SAVE & EXIT");
  2836  000D1C  0EFC               	movlw	low STR_1
  2837  000D1E  6E70               	movwf	printf@fmt,c
  2838  000D20  0EFF               	movlw	high STR_1
  2839  000D22  6E71               	movwf	printf@fmt+1,c
  2840  000D24  0E08               	movlw	low STR_8
  2841  000D26  6E72               	movwf	?_printf+2,c
  2842  000D28  0EFF               	movlw	high STR_8
  2843  000D2A  6E73               	movwf	?_printf+3,c
  2844  000D2C  ECB9  F00C         	call	_printf	;wreg free
  2845                           
  2846                           ;main.c: 60:                 break;
  2847  000D30  D04C               	goto	l2991
  2848  000D32                     l2969:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;main.c: 62:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  2852  000D32  0E80               	movlw	128
  2853  000D34  EC38  F00D         	call	_lcdInst
  2854  000D38  0E07               	movlw	7
  2855  000D3A  0100               	movlb	0	; () banked
  2856  000D3C  6FB0               	movwf	??_doDisplayLog& (0+255),b
  2857  000D3E  0E7D               	movlw	125
  2858  000D40                     u2887:
  2859  000D40  2EE8               	decfsz	wreg,f,c
  2860  000D42  D7FE               	bra	u2887
  2861  000D44  2FB0               	decfsz	??_doDisplayLog& (0+255),f,b
  2862  000D46  D7FC               	bra	u2887
  2863                           
  2864                           ;main.c: 63:                 printf("%s", "POLE X/Y");
  2865  000D48  0EFC               	movlw	low STR_1
  2866  000D4A  6E70               	movwf	printf@fmt,c
  2867  000D4C  0EFF               	movlw	high STR_1
  2868  000D4E  6E71               	movwf	printf@fmt+1,c
  2869  000D50  0EF0               	movlw	low STR_10
  2870  000D52  6E72               	movwf	?_printf+2,c
  2871  000D54  0EFF               	movlw	high STR_10
  2872  000D56  6E73               	movwf	?_printf+3,c
  2873  000D58  ECB9  F00C         	call	_printf	;wreg free
  2874  000D5C  0EC0               	movlw	192
  2875  000D5E  EC38  F00D         	call	_lcdInst
  2876                           
  2877                           ;main.c: 65:                 printf("%s","TIR. DEPLOY: X");
  2878  000D62  0EFC               	movlw	low STR_1
  2879  000D64  6E70               	movwf	printf@fmt,c
  2880  000D66  0EFF               	movlw	high STR_1
  2881  000D68  6E71               	movwf	printf@fmt+1,c
  2882  000D6A  0E28               	movlw	low STR_12
  2883  000D6C  6E72               	movwf	?_printf+2,c
  2884  000D6E  0EFF               	movlw	high STR_12
  2885  000D70  6E73               	movwf	?_printf+3,c
  2886  000D72  ECB9  F00C         	call	_printf	;wreg free
  2887  000D76  0E90               	movlw	144
  2888  000D78  EC38  F00D         	call	_lcdInst
  2889                           
  2890                           ;main.c: 67:                 printf("%s","TIRE. ON POLE: X");
  2891  000D7C  0EFC               	movlw	low STR_1
  2892  000D7E  6E70               	movwf	printf@fmt,c
  2893  000D80  0EFF               	movlw	high STR_1
  2894  000D82  6E71               	movwf	printf@fmt+1,c
  2895  000D84  0ED7               	movlw	low STR_14
  2896  000D86  6E72               	movwf	?_printf+2,c
  2897  000D88  0EFE               	movlw	high STR_14
  2898  000D8A  6E73               	movwf	?_printf+3,c
  2899  000D8C  ECB9  F00C         	call	_printf	;wreg free
  2900  000D90  0ED0               	movlw	208
  2901  000D92  EC38  F00D         	call	_lcdInst
  2902                           
  2903                           ;main.c: 69:                 printf("%s","1<- 2-> 3MENU");
  2904  000D96  0EFC               	movlw	low STR_1
  2905  000D98  6E70               	movwf	printf@fmt,c
  2906  000D9A  0EFF               	movlw	high STR_1
  2907  000D9C  6E71               	movwf	printf@fmt+1,c
  2908  000D9E  0E7F               	movlw	low STR_16
  2909  000DA0  6E72               	movwf	?_printf+2,c
  2910  000DA2  0EFF               	movlw	high STR_16
  2911  000DA4  6E73               	movwf	?_printf+3,c
  2912  000DA6  ECB9  F00C         	call	_printf	;wreg free
  2913                           
  2914                           ;main.c: 70:                 break;
  2915  000DAA  D00F               	goto	l2991
  2916  000DAC                     l2989:
  2917  000DAC  0100               	movlb	0	; () banked
  2918  000DAE  51B5               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  2919  000DB0  6FB0               	movwf	??_doDisplayLog& (0+255),b
  2920  000DB2  6BB1               	clrf	(??_doDisplayLog+1)& (0+255),b
  2921                           
  2922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2923                           ; Switch size 1, requested type "simple"
  2924                           ; Number of cases is 1, Range of values is 0 to 0
  2925                           ; switch strategies available:
  2926                           ; Name         Instructions Cycles
  2927                           ; simple_byte            4     3 (average)
  2928                           ;	Chosen strategy is simple_byte
  2929  000DB4  51B1               	movf	(??_doDisplayLog+1)& (0+255),w,b
  2930  000DB6  0A00               	xorlw	0	; case 0
  2931  000DB8  A4D8               	btfss	status,2,c
  2932  000DBA  D007               	goto	l2991
  2933                           
  2934                           ; BSR set to: 0
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 2, Range of values is 0 to 1
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            7     4 (average)
  2940                           ;	Chosen strategy is simple_byte
  2941  000DBC  51B0               	movf	??_doDisplayLog& (0+255),w,b
  2942  000DBE  0A00               	xorlw	0	; case 0
  2943  000DC0  B4D8               	btfsc	status,2,c
  2944  000DC2  D77A               	goto	l2951
  2945  000DC4  0A01               	xorlw	1	; case 1
  2946  000DC6  B4D8               	btfsc	status,2,c
  2947  000DC8  D7B4               	goto	l2969
  2948  000DCA                     l2991:
  2949                           
  2950                           ;main.c: 73:         if(keyPressed){
  2951  000DCA  507E               	movf	_keyPressed,w,c	;volatile
  2952  000DCC  B4D8               	btfsc	status,2,c
  2953  000DCE  D03E               	goto	l97
  2954                           
  2955                           ;main.c: 76:             keyPressed = 0;
  2956  000DD0  0E00               	movlw	0
  2957  000DD2  6E7E               	movwf	_keyPressed,c	;volatile
  2958                           
  2959                           ;main.c: 79:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2960  000DD4  3881               	swapf	3969,w,c	;volatile
  2961  000DD6  0B0F               	andlw	15
  2962  000DD8  0B0F               	andlw	15
  2963  000DDA  0100               	movlb	0	; () banked
  2964  000DDC  6FB4               	movwf	doDisplayLog@keypress& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 80:             char keyValue = keys[keypress];
  2968  000DDE  0EB9               	movlw	low _keys
  2969  000DE0  25B4               	addwf	doDisplayLog@keypress& (0+255),w,b
  2970  000DE2  6EF6               	movwf	tblptrl,c
  2971  000DE4  6AF7               	clrf	tblptrh,c
  2972  000DE6  0EFE               	movlw	high _keys
  2973  000DE8  22F7               	addwfc	tblptrh,f,c
  2974  000DEA                     	if	0	;There are less than 3 active tblptr bytes
  2975  000DEA                     	endif
  2976  000DEA  0008               	tblrd		*
  2977  000DEC  CFF5 F0B6          	movff	tablat,doDisplayLog@keyValue
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;main.c: 81:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  2981  000DF0  0E01               	movlw	1
  2982  000DF2  EC38  F00D         	call	_lcdInst
  2983  000DF6  0E11               	movlw	17
  2984  000DF8  0100               	movlb	0	; () banked
  2985  000DFA  6FB0               	movwf	??_doDisplayLog& (0+255),b
  2986  000DFC  0E3A               	movlw	58
  2987  000DFE                     u2897:
  2988  000DFE  2EE8               	decfsz	wreg,f,c
  2989  000E00  D7FE               	bra	u2897
  2990  000E02  2FB0               	decfsz	??_doDisplayLog& (0+255),f,b
  2991  000E04  D7FC               	bra	u2897
  2992  000E06  F000               	nop	
  2993                           
  2994                           ;main.c: 82:             switch (currentDisplayState){
  2995  000E08  D012               	goto	l3017
  2996  000E0A                     l3003:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;main.c: 84:                     if (keyValue == '1'){
  3000  000E0A  0E31               	movlw	49
  3001  000E0C  19B6               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  3002  000E0E  A4D8               	btfss	status,2,c
  3003  000E10  D002               	goto	l3007
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;main.c: 85:                         currentDisplayState = pole;
  3007  000E12  0E01               	movlw	1
  3008  000E14  D00A               	goto	L8
  3009  000E16                     l3007:
  3010                           
  3011                           ; BSR set to: 0
  3012  000E16  0E32               	movlw	50
  3013  000E18  19B6               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  3014  000E1A  B4D8               	btfsc	status,2,c
  3015  000E1C  0012               	return	
  3016  000E1E  D016               	goto	l97
  3017  000E20                     l3011:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;main.c: 91:                     if (keyValue == '3'){
  3021  000E20  0E33               	movlw	51
  3022  000E22  19B6               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  3023  000E24  A4D8               	btfss	status,2,c
  3024  000E26  D012               	goto	l97
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;main.c: 92:                         currentDisplayState = opTime;
  3028  000E28  0E00               	movlw	0
  3029  000E2A                     L8:
  3030  000E2A  6FB5               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  3031  000E2C  D00F               	goto	l97
  3032  000E2E                     l3017:
  3033  000E2E  0100               	movlb	0	; () banked
  3034  000E30  51B5               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  3035  000E32  6FB0               	movwf	??_doDisplayLog& (0+255),b
  3036  000E34  6BB1               	clrf	(??_doDisplayLog+1)& (0+255),b
  3037                           
  3038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 1, Range of values is 0 to 0
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte            4     3 (average)
  3044                           ;	Chosen strategy is simple_byte
  3045  000E36  51B1               	movf	(??_doDisplayLog+1)& (0+255),w,b
  3046  000E38  0A00               	xorlw	0	; case 0
  3047  000E3A  A4D8               	btfss	status,2,c
  3048  000E3C  D007               	goto	l97
  3049                           
  3050                           ; BSR set to: 0
  3051                           ; Switch size 1, requested type "simple"
  3052                           ; Number of cases is 2, Range of values is 0 to 1
  3053                           ; switch strategies available:
  3054                           ; Name         Instructions Cycles
  3055                           ; simple_byte            7     4 (average)
  3056                           ;	Chosen strategy is simple_byte
  3057  000E3E  51B0               	movf	??_doDisplayLog& (0+255),w,b
  3058  000E40  0A00               	xorlw	0	; case 0
  3059  000E42  B4D8               	btfsc	status,2,c
  3060  000E44  D7E2               	goto	l3003
  3061  000E46  0A01               	xorlw	1	; case 1
  3062  000E48  B4D8               	btfsc	status,2,c
  3063  000E4A  D7EA               	goto	l3011
  3064  000E4C                     l97:
  3065                           
  3066                           ;main.c: 101:     _delay((unsigned long)((1)*(10000000/4000.0)));
  3067                           
  3068                           ; BSR set to: 0
  3069  000E4C  0E04               	movlw	4
  3070  000E4E  0100               	movlb	0	; () banked
  3071  000E50  6FB0               	movwf	??_doDisplayLog& (0+255),b
  3072  000E52  0E3D               	movlw	61
  3073  000E54                     u2907:
  3074  000E54  2EE8               	decfsz	wreg,f,c
  3075  000E56  D7FE               	bra	u2907
  3076  000E58  2FB0               	decfsz	??_doDisplayLog& (0+255),f,b
  3077  000E5A  D7FC               	bra	u2907
  3078  000E5C  D000               	nop2	
  3079  000E5E  D7A6               	goto	l2989
  3080  000E60                     __end_of_doDisplayLog:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _printf *****************
  3084 ;; Defined at:
  3085 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  fmt             2  111[COMRAM] PTR const unsigned char 
  3088 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3089 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3090 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3091 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3092 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3093 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  ap              2  121[COMRAM] PTR void [1]
  3096 ;;		 -> ?_printf(2), 
  3097 ;;  ret             2    0        int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2  111[COMRAM] int 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3107 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;Total ram usage:       12 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:   11
  3114 ;; This function calls:
  3115 ;;		_vfprintf
  3116 ;; This function is called by:
  3117 ;;		_doDisplayLog
  3118 ;;		_doOperation
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text12
  3124  001972                     __ptext12:
  3125                           	opt callstack 0
  3126  001972                     _printf:
  3127                           	opt callstack 19
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;incstack = 0
  3131  001972  0E72               	movlw	low (?_printf+2)
  3132  001974  6E7A               	movwf	printf@ap,c
  3133  001976  0E00               	movlw	high (?_printf+2)
  3134  001978  6E7B               	movwf	printf@ap+1,c
  3135  00197A  0E00               	movlw	0
  3136  00197C  6E68               	movwf	vfprintf@fp,c
  3137  00197E  0E00               	movlw	0
  3138  001980  6E69               	movwf	vfprintf@fp+1,c
  3139  001982  C070  F06A         	movff	printf@fmt,vfprintf@fmt
  3140  001986  C071  F06B         	movff	printf@fmt+1,vfprintf@fmt+1
  3141  00198A  0E7A               	movlw	low printf@ap
  3142  00198C  6E6C               	movwf	vfprintf@ap,c
  3143  00198E  0E00               	movlw	high printf@ap
  3144  001990  6E6D               	movwf	vfprintf@ap+1,c
  3145  001992  EC45  F00B         	call	_vfprintf	;wreg free
  3146  001996  0012               	return		;funcret
  3147  001998                     __end_of_printf:
  3148                           	opt callstack 0
  3149                           
  3150 ;; *************** function _vfprintf *****************
  3151 ;; Defined at:
  3152 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3155 ;;		 -> NULL(0), 
  3156 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3157 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3158 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3159 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3160 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3161 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3162 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3163 ;;  ap              2  107[COMRAM] PTR PTR void 
  3164 ;;		 -> printf@ap(2), 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3167 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3168 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3169 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3170 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3171 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3172 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  2  103[COMRAM] int 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        8 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:   10
  3189 ;; This function calls:
  3190 ;;		_vfpfcnvrt
  3191 ;; This function is called by:
  3192 ;;		_printf
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text13
  3197  00168A                     __ptext13:
  3198                           	opt callstack 0
  3199  00168A                     _vfprintf:
  3200                           	opt callstack 19
  3201                           
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3203                           
  3204                           ;incstack = 0
  3205  00168A  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3206  00168E  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3207                           
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3209  001692  0E00               	movlw	0
  3210  001694  0100               	movlb	0	; () banked
  3211  001696  6F81               	movwf	(_nout+1)& (0+255),b
  3212  001698  0E00               	movlw	0
  3213  00169A  6F80               	movwf	_nout& (0+255),b
  3214                           
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3216  00169C  D013               	goto	l2859
  3217  00169E                     l2857:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3221  00169E  C068  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  3222  0016A2  C069  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3223  0016A6  0E6E               	movlw	low vfprintf@cfmt
  3224  0016A8  6E49               	movwf	vfpfcnvrt@fmt,c
  3225  0016AA  0E00               	movlw	high vfprintf@cfmt
  3226  0016AC  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  3227  0016AE  C06C  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  3228  0016B2  C06D  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3229  0016B6  EC09  F000         	call	_vfpfcnvrt	;wreg free
  3230  0016BA  5047               	movf	?_vfpfcnvrt,w,c
  3231  0016BC  0100               	movlb	0	; () banked
  3232  0016BE  2780               	addwf	_nout& (0+255),f,b
  3233  0016C0  5048               	movf	?_vfpfcnvrt+1,w,c
  3234  0016C2  2381               	addwfc	(_nout+1)& (0+255),f,b
  3235  0016C4                     l2859:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3239  0016C4  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3240  0016C8  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3241  0016CC                     	if	0	;tblptru may be non-zero
  3242  0016CC                     	endif
  3243  0016CC                     	if	0	;tblptru may be non-zero
  3244  0016CC                     	endif
  3245  0016CC  0008               	tblrd		*
  3246  0016CE  50F5               	movf	tablat,w,c
  3247  0016D0  0900               	iorlw	0
  3248  0016D2  A4D8               	btfss	status,2,c
  3249  0016D4  D7E4               	goto	l2857
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3253  0016D6  C080  F068         	movff	_nout,?_vfprintf
  3254  0016DA  C081  F069         	movff	_nout+1,?_vfprintf+1
  3255                           
  3256                           ; BSR set to: 0
  3257  0016DE  0012               	return		;funcret
  3258  0016E0                     __end_of_vfprintf:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function _vfpfcnvrt *****************
  3262 ;; Defined at:
  3263 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  3266 ;;		 -> NULL(0), 
  3267 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  3268 ;;		 -> vfprintf@cfmt(2), 
  3269 ;;  ap              2   74[COMRAM] PTR PTR void 
  3270 ;;		 -> printf@ap(2), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  llu             8   88[COMRAM] unsigned long long 
  3273 ;;  ll              8   80[COMRAM] long long 
  3274 ;;  f               4    0        long long 
  3275 ;;  vp              3    0        PTR void 
  3276 ;;  ct              3    0        unsigned char [3]
  3277 ;;  done            2   98[COMRAM] int 
  3278 ;;  cp              2   96[COMRAM] PTR unsigned char 
  3279 ;;		 -> ?_printf(2), STR_43(16), STR_41(14), STR_39(11), 
  3280 ;;		 -> STR_37(9), STR_35(16), STR_33(13), STR_31(13), 
  3281 ;;		 -> STR_29(9), STR_27(13), STR_25(14), STR_23(10), 
  3282 ;;		 -> STR_19(9), STR_16(14), STR_14(17), STR_12(15), 
  3283 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  3284 ;;		 -> STR_2(12), 
  3285 ;;  i               2    0        int 
  3286 ;;  c               1  102[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2   70[COMRAM] int 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:       33 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    9
  3303 ;; This function calls:
  3304 ;;		_atoi
  3305 ;;		_dtoa
  3306 ;;		_fputc
  3307 ;;		_isdigit
  3308 ;;		_stoa
  3309 ;;		_xtoa
  3310 ;; This function is called by:
  3311 ;;		_vfprintf
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text14
  3316  000012                     __ptext14:
  3317                           	opt callstack 0
  3318  000012                     _vfpfcnvrt:
  3319                           	opt callstack 19
  3320                           
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;incstack = 0
  3325  000012  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3326  000016  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3327  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  3328  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  3329  000022                     	if	0	;tblptru may be non-zero
  3330  000022                     	endif
  3331  000022                     	if	0	;tblptru may be non-zero
  3332  000022                     	endif
  3333  000022  0008               	tblrd		*
  3334  000024  50F5               	movf	tablat,w,c
  3335  000026  0A25               	xorlw	37
  3336  000028  A4D8               	btfss	status,2,c
  3337  00002A  D1E8               	goto	l2831
  3338                           
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3340  00002C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3341  000030  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3342  000034  2ADE               	incf	postinc2,f,c
  3343  000036  0E00               	movlw	0
  3344  000038  22DD               	addwfc	postdec2,f,c
  3345                           
  3346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3347  00003A  0E00               	movlw	0
  3348  00003C  0100               	movlb	0	; () banked
  3349  00003E  6F83               	movwf	(_width+1)& (0+255),b
  3350  000040  0E00               	movlw	0
  3351  000042  6F82               	movwf	_width& (0+255),b
  3352  000044  C082  F086         	movff	_width,_flags
  3353  000048  C083  F087         	movff	_width+1,_flags+1
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3357  00004C  6984               	setf	_prec& (0+255),b
  3358  00004E  6985               	setf	(_prec+1)& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3362  000050  0E00               	movlw	0
  3363  000052  6E64               	movwf	vfpfcnvrt@done+1,c
  3364  000054  0E00               	movlw	0
  3365  000056  D019               	goto	L9
  3366  000058                     l2735:
  3367                           
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3369  000058  0100               	movlb	0	; () banked
  3370  00005A  8186               	bsf	_flags& (0+255),0,b
  3371  00005C                     l2737:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3375  00005C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3376  000060  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  000064  2ADE               	incf	postinc2,f,c
  3378  000066  0E00               	movlw	0
  3379  000068  22DD               	addwfc	postdec2,f,c
  3380                           
  3381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3382  00006A  D032               	goto	l2761
  3383  00006C                     l2739:
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3386  00006C  0100               	movlb	0	; () banked
  3387  00006E  8386               	bsf	_flags& (0+255),1,b
  3388  000070  D7F5               	goto	l2737
  3389  000072                     l2743:
  3390                           
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3392  000072  0100               	movlb	0	; () banked
  3393  000074  8586               	bsf	_flags& (0+255),2,b
  3394  000076  D7F2               	goto	l2737
  3395  000078                     l2747:
  3396                           
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3398  000078  0100               	movlb	0	; () banked
  3399  00007A  8786               	bsf	_flags& (0+255),3,b
  3400  00007C  D7EF               	goto	l2737
  3401  00007E                     l2751:
  3402                           
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3404  00007E  0100               	movlb	0	; () banked
  3405  000080  8986               	bsf	_flags& (0+255),4,b
  3406  000082  D7EC               	goto	l2737
  3407  000084                     l2755:
  3408                           
  3409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3410  000084  0E00               	movlw	0
  3411  000086  6E64               	movwf	vfpfcnvrt@done+1,c
  3412  000088  0E01               	movlw	1
  3413  00008A                     L9:
  3414  00008A  6E63               	movwf	vfpfcnvrt@done,c
  3415                           
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3417  00008C  D021               	goto	l2761
  3418  00008E                     l2759:
  3419  00008E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3420  000092  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3421  000096  CFDE FFF6          	movff	postinc2,tblptrl
  3422  00009A  CFDD FFF7          	movff	postdec2,tblptrh
  3423  00009E                     	if	0	;tblptru may be non-zero
  3424  00009E                     	endif
  3425  00009E                     	if	0	;tblptru may be non-zero
  3426  00009E                     	endif
  3427  00009E  0008               	tblrd		*
  3428  0000A0  50F5               	movf	tablat,w,c
  3429  0000A2  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3430  0000A4  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3431                           
  3432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3433                           ; Switch size 1, requested type "simple"
  3434                           ; Number of cases is 1, Range of values is 0 to 0
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte            4     3 (average)
  3438                           ;	Chosen strategy is simple_byte
  3439  0000A6  504E               	movf	??_vfpfcnvrt+1,w,c
  3440  0000A8  0A00               	xorlw	0	; case 0
  3441  0000AA  A4D8               	btfss	status,2,c
  3442  0000AC  D7EB               	goto	l2755
  3443                           
  3444                           ; Switch size 1, requested type "simple"
  3445                           ; Number of cases is 5, Range of values is 32 to 48
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte           16     9 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450  0000AE  504D               	movf	??_vfpfcnvrt,w,c
  3451  0000B0  0A20               	xorlw	32	; case 32
  3452  0000B2  B4D8               	btfsc	status,2,c
  3453  0000B4  D7E1               	goto	l2747
  3454  0000B6  0A03               	xorlw	3	; case 35
  3455  0000B8  B4D8               	btfsc	status,2,c
  3456  0000BA  D7E1               	goto	l2751
  3457  0000BC  0A08               	xorlw	8	; case 43
  3458  0000BE  B4D8               	btfsc	status,2,c
  3459  0000C0  D7D8               	goto	l2743
  3460  0000C2  0A06               	xorlw	6	; case 45
  3461  0000C4  B4D8               	btfsc	status,2,c
  3462  0000C6  D7C8               	goto	l2735
  3463  0000C8  0A1D               	xorlw	29	; case 48
  3464  0000CA  B4D8               	btfsc	status,2,c
  3465  0000CC  D7CF               	goto	l2739
  3466  0000CE  D7DA               	goto	l2755
  3467  0000D0                     l2761:
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3470  0000D0  5063               	movf	vfpfcnvrt@done,w,c
  3471  0000D2  1064               	iorwf	vfpfcnvrt@done+1,w,c
  3472  0000D4  B4D8               	btfsc	status,2,c
  3473  0000D6  D7DB               	goto	l2759
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3476  0000D8  0100               	movlb	0	; () banked
  3477  0000DA  B186               	btfsc	_flags& (0+255),0,b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3481  0000DC  9386               	bcf	_flags& (0+255),1,b
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3485  0000DE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  0000E2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  0000E6  CFDE FFF6          	movff	postinc2,tblptrl
  3488  0000EA  CFDD FFF7          	movff	postdec2,tblptrh
  3489  0000EE                     	if	0	;tblptru may be non-zero
  3490  0000EE                     	endif
  3491  0000EE                     	if	0	;tblptru may be non-zero
  3492  0000EE                     	endif
  3493  0000EE  0008               	tblrd		*
  3494  0000F0  50F5               	movf	tablat,w,c
  3495  0000F2  0A2A               	xorlw	42
  3496  0000F4  A4D8               	btfss	status,2,c
  3497  0000F6  D023               	goto	l2773
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3501  0000F8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3502  0000FC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3503  000100  2ADE               	incf	postinc2,f,c
  3504  000102  0E00               	movlw	0
  3505  000104  22DD               	addwfc	postdec2,f,c
  3506                           
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3508  000106  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3509  00010A  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3510  00010E  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3511  000112  0E02               	movlw	2
  3512  000114  26DE               	addwf	postinc2,f,c
  3513  000116  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3514  00011A  0E00               	movlw	0
  3515  00011C  22DD               	addwfc	postdec2,f,c
  3516  00011E  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3517  000122  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3518  000126  CFDE F082          	movff	postinc2,_width
  3519  00012A  CFDD F083          	movff	postdec2,_width+1
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3523  00012E  AF83               	btfss	(_width+1)& (0+255),7,b
  3524  000130  D03F               	goto	u2320
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3528  000132  8186               	bsf	_flags& (0+255),0,b
  3529                           
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3531  000134  6D82               	negf	_width& (0+255),b
  3532  000136  1F83               	comf	(_width+1)& (0+255),f,b
  3533  000138  B0D8               	btfsc	status,0,c
  3534  00013A  2B83               	incf	(_width+1)& (0+255),f,b
  3535  00013C  D039               	goto	u2320
  3536  00013E                     l2773:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3540  00013E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3541  000142  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3542  000146  CFDE F008          	movff	postinc2,atoi@s
  3543  00014A  CFDD F009          	movff	postdec2,atoi@s+1
  3544  00014E  EC76  F008         	call	_atoi	;wreg free
  3545  000152  C008  F082         	movff	?_atoi,_width
  3546  000156  C009  F083         	movff	?_atoi+1,_width+1
  3547                           
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3549  00015A  D007               	goto	l2777
  3550  00015C                     l2775:
  3551                           
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3553  00015C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3554  000160  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  000164  2ADE               	incf	postinc2,f,c
  3556  000166  0E00               	movlw	0
  3557  000168  22DD               	addwfc	postdec2,f,c
  3558  00016A                     l2777:
  3559  00016A  0ED0               	movlw	208
  3560  00016C  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3561  00016E  0EFF               	movlw	255
  3562  000170  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3563  000172  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3564  000176  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3565  00017A  CFDE FFF6          	movff	postinc2,tblptrl
  3566  00017E  CFDD FFF7          	movff	postdec2,tblptrh
  3567  000182                     	if	0	;tblptru may be non-zero
  3568  000182                     	endif
  3569  000182                     	if	0	;tblptru may be non-zero
  3570  000182                     	endif
  3571  000182  0008               	tblrd		*
  3572  000184  50F5               	movf	tablat,w,c
  3573  000186  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3574  000188  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3575  00018A  504D               	movf	??_vfpfcnvrt,w,c
  3576  00018C  264F               	addwf	??_vfpfcnvrt+2,f,c
  3577  00018E  504E               	movf	??_vfpfcnvrt+1,w,c
  3578  000190  2250               	addwfc	??_vfpfcnvrt+3,f,c
  3579  000192  5050               	movf	??_vfpfcnvrt+3,w,c
  3580  000194  E106               	bnz	u2300
  3581  000196  0E0A               	movlw	10
  3582  000198  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  3583  00019A  B0D8               	btfsc	status,0,c
  3584  00019C  D002               	goto	u2300
  3585  00019E  0E01               	movlw	1
  3586  0001A0  D001               	goto	u2310
  3587  0001A2                     u2300:
  3588  0001A2  0E00               	movlw	0
  3589  0001A4                     u2310:
  3590  0001A4  6E65               	movwf	_vfpfcnvrt$744,c
  3591  0001A6  6A66               	clrf	_vfpfcnvrt$744+1,c
  3592  0001A8  5065               	movf	_vfpfcnvrt$744,w,c
  3593  0001AA  1066               	iorwf	_vfpfcnvrt$744+1,w,c
  3594  0001AC  A4D8               	btfss	status,2,c
  3595  0001AE  D7D6               	goto	l2775
  3596  0001B0                     u2320:
  3597                           
  3598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3599  0001B0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3600  0001B4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3601  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3602  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3603  0001C0                     	if	0	;tblptru may be non-zero
  3604  0001C0                     	endif
  3605  0001C0                     	if	0	;tblptru may be non-zero
  3606  0001C0                     	endif
  3607  0001C0  0008               	tblrd		*
  3608  0001C2  50F5               	movf	tablat,w,c
  3609  0001C4  0A64               	xorlw	100
  3610  0001C6  B4D8               	btfsc	status,2,c
  3611  0001C8  D00D               	goto	u2340
  3612  0001CA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3613  0001CE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3614  0001D2  CFDE FFF6          	movff	postinc2,tblptrl
  3615  0001D6  CFDD FFF7          	movff	postdec2,tblptrh
  3616  0001DA                     	if	0	;tblptru may be non-zero
  3617  0001DA                     	endif
  3618  0001DA                     	if	0	;tblptru may be non-zero
  3619  0001DA                     	endif
  3620  0001DA  0008               	tblrd		*
  3621  0001DC  50F5               	movf	tablat,w,c
  3622  0001DE  0A69               	xorlw	105
  3623  0001E0  A4D8               	btfss	status,2,c
  3624  0001E2  D03F               	goto	l2793
  3625  0001E4                     u2340:
  3626                           
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3628  0001E4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3629  0001E8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3630  0001EC  2ADE               	incf	postinc2,f,c
  3631  0001EE  0E00               	movlw	0
  3632  0001F0  22DD               	addwfc	postdec2,f,c
  3633                           
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3635  0001F2  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3636  0001F6  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3637  0001FA  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3638  0001FE  0E02               	movlw	2
  3639  000200  26DE               	addwf	postinc2,f,c
  3640  000202  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3641  000206  0E00               	movlw	0
  3642  000208  22DD               	addwfc	postdec2,f,c
  3643  00020A  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3644  00020E  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3645  000212  CFDE F051          	movff	postinc2,vfpfcnvrt@ll
  3646  000216  CFDD F052          	movff	postdec2,vfpfcnvrt@ll+1
  3647  00021A  0E00               	movlw	0
  3648  00021C  BE52               	btfsc	vfpfcnvrt@ll+1,7,c
  3649  00021E  0EFF               	movlw	-1
  3650  000220  6E53               	movwf	vfpfcnvrt@ll+2,c
  3651  000222  6E54               	movwf	vfpfcnvrt@ll+3,c
  3652  000224  6E55               	movwf	vfpfcnvrt@ll+4,c
  3653  000226  6E56               	movwf	vfpfcnvrt@ll+5,c
  3654  000228  6E57               	movwf	vfpfcnvrt@ll+6,c
  3655  00022A  6E58               	movwf	vfpfcnvrt@ll+7,c
  3656                           
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3658  00022C  C047  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3659  000230  C048  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3660  000234  C051  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3661  000238  C052  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3662  00023C  C053  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3663  000240  C054  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3664  000244  C055  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3665  000248  C056  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3666  00024C  C057  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3667  000250  C058  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3668  000254  EC12  F004         	call	_dtoa	;wreg free
  3669  000258  C020  F047         	movff	?_dtoa,?_vfpfcnvrt
  3670  00025C  C021  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3671  000260  0012               	return	
  3672  000262                     l2793:
  3673                           
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3675  000262  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3676  000266  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3677  00026A  CFDE FFF6          	movff	postinc2,tblptrl
  3678  00026E  CFDD FFF7          	movff	postdec2,tblptrh
  3679  000272                     	if	0	;tblptru may be non-zero
  3680  000272                     	endif
  3681  000272                     	if	0	;tblptru may be non-zero
  3682  000272                     	endif
  3683  000272  0008               	tblrd		*
  3684  000274  50F5               	movf	tablat,w,c
  3685  000276  0A73               	xorlw	115
  3686  000278  A4D8               	btfss	status,2,c
  3687  00027A  D02A               	goto	l2801
  3688                           
  3689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3690  00027C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  000280  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  000284  2ADE               	incf	postinc2,f,c
  3693  000286  0E00               	movlw	0
  3694  000288  22DD               	addwfc	postdec2,f,c
  3695                           
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3697  00028A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3698  00028E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3699  000292  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3700  000296  0E02               	movlw	2
  3701  000298  26DE               	addwf	postinc2,f,c
  3702  00029A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3703  00029E  0E00               	movlw	0
  3704  0002A0  22DD               	addwfc	postdec2,f,c
  3705  0002A2  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3706  0002A6  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3707  0002AA  CFDE F061          	movff	postinc2,vfpfcnvrt@cp
  3708  0002AE  CFDD F062          	movff	postdec2,vfpfcnvrt@cp+1
  3709                           
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3711  0002B2  C047  F00E         	movff	vfpfcnvrt@fp,stoa@fp
  3712  0002B6  C048  F00F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3713  0002BA  C061  F010         	movff	vfpfcnvrt@cp,stoa@s
  3714  0002BE  C062  F011         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3715  0002C2  ECD4  F007         	call	_stoa	;wreg free
  3716  0002C6  C00E  F047         	movff	?_stoa,?_vfpfcnvrt
  3717  0002CA  C00F  F048         	movff	?_stoa+1,?_vfpfcnvrt+1
  3718  0002CE  0012               	return	
  3719  0002D0                     l2801:
  3720                           
  3721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3722  0002D0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3723  0002D4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3724  0002D8  CFDE FFF6          	movff	postinc2,tblptrl
  3725  0002DC  CFDD FFF7          	movff	postdec2,tblptrh
  3726  0002E0                     	if	0	;tblptru may be non-zero
  3727  0002E0                     	endif
  3728  0002E0                     	if	0	;tblptru may be non-zero
  3729  0002E0                     	endif
  3730  0002E0  0008               	tblrd		*
  3731  0002E2  50F5               	movf	tablat,w,c
  3732  0002E4  0A78               	xorlw	120
  3733  0002E6  B4D8               	btfsc	status,2,c
  3734  0002E8  D00D               	goto	u2370
  3735  0002EA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3736  0002EE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3737  0002F2  CFDE FFF6          	movff	postinc2,tblptrl
  3738  0002F6  CFDD FFF7          	movff	postdec2,tblptrh
  3739  0002FA                     	if	0	;tblptru may be non-zero
  3740  0002FA                     	endif
  3741  0002FA                     	if	0	;tblptru may be non-zero
  3742  0002FA                     	endif
  3743  0002FA  0008               	tblrd		*
  3744  0002FC  50F5               	movf	tablat,w,c
  3745  0002FE  0A58               	xorlw	88
  3746  000300  A4D8               	btfss	status,2,c
  3747  000302  D04D               	goto	l2815
  3748  000304                     u2370:
  3749                           
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3751  000304  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3752  000308  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3753  00030C  CFDE FFF6          	movff	postinc2,tblptrl
  3754  000310  CFDD FFF7          	movff	postdec2,tblptrh
  3755  000314                     	if	0	;tblptru may be non-zero
  3756  000314                     	endif
  3757  000314                     	if	0	;tblptru may be non-zero
  3758  000314                     	endif
  3759  000314  0008               	tblrd		*
  3760  000316  CFF5 F067          	movff	tablat,vfpfcnvrt@c
  3761                           
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3763  00031A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3764  00031E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  000322  2ADE               	incf	postinc2,f,c
  3766  000324  0E00               	movlw	0
  3767  000326  22DD               	addwfc	postdec2,f,c
  3768                           
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3770  000328  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3771  00032C  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3772  000330  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3773  000334  0E02               	movlw	2
  3774  000336  26DE               	addwf	postinc2,f,c
  3775  000338  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3776  00033C  0E00               	movlw	0
  3777  00033E  22DD               	addwfc	postdec2,f,c
  3778  000340  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3779  000344  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3780  000348  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  3781  00034C  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  3782  000350  C04F  F059         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3783  000354  C050  F05A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3784  000358  6A5B               	clrf	vfpfcnvrt@llu+2,c
  3785  00035A  6A5C               	clrf	vfpfcnvrt@llu+3,c
  3786  00035C  6A5D               	clrf	vfpfcnvrt@llu+4,c
  3787  00035E  6A5E               	clrf	vfpfcnvrt@llu+5,c
  3788  000360  6A5F               	clrf	vfpfcnvrt@llu+6,c
  3789  000362  6A60               	clrf	vfpfcnvrt@llu+7,c
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3792  000364  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  3793  000368  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3794  00036C  C059  F022         	movff	vfpfcnvrt@llu,xtoa@d
  3795  000370  C05A  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3796  000374  C05B  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3797  000378  C05C  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3798  00037C  C05D  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3799  000380  C05E  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3800  000384  C05F  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3801  000388  C060  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3802  00038C  C067  F02A         	movff	vfpfcnvrt@c,xtoa@x
  3803  000390  EC35  F005         	call	_xtoa	;wreg free
  3804  000394  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  3805  000398  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3806  00039C  0012               	return	
  3807  00039E                     l2815:
  3808                           
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3810  00039E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3811  0003A2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3812  0003A6  CFDE FFF6          	movff	postinc2,tblptrl
  3813  0003AA  CFDD FFF7          	movff	postdec2,tblptrh
  3814  0003AE                     	if	0	;tblptru may be non-zero
  3815  0003AE                     	endif
  3816  0003AE                     	if	0	;tblptru may be non-zero
  3817  0003AE                     	endif
  3818  0003AE  0008               	tblrd		*
  3819  0003B0  50F5               	movf	tablat,w,c
  3820  0003B2  0A25               	xorlw	37
  3821  0003B4  A4D8               	btfss	status,2,c
  3822  0003B6  D016               	goto	l2825
  3823                           
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3825  0003B8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3826  0003BC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3827  0003C0  2ADE               	incf	postinc2,f,c
  3828  0003C2  0E00               	movlw	0
  3829  0003C4  22DD               	addwfc	postdec2,f,c
  3830                           
  3831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3832  0003C6  0E00               	movlw	0
  3833  0003C8  6E06               	movwf	fputc@c+1,c
  3834  0003CA  0E25               	movlw	37
  3835  0003CC  6E05               	movwf	fputc@c,c
  3836  0003CE  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3837  0003D2  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3838  0003D6  EC79  F00A         	call	_fputc	;wreg free
  3839  0003DA                     l2821:
  3840                           
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3842  0003DA  0E00               	movlw	0
  3843  0003DC  6E48               	movwf	?_vfpfcnvrt+1,c
  3844  0003DE  0E01               	movlw	1
  3845  0003E0  6E47               	movwf	?_vfpfcnvrt,c
  3846  0003E2  0012               	return	
  3847  0003E4                     l2825:
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3850  0003E4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3851  0003E8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3852  0003EC  2ADE               	incf	postinc2,f,c
  3853  0003EE  0E00               	movlw	0
  3854  0003F0  22DD               	addwfc	postdec2,f,c
  3855                           
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3857  0003F2  0E00               	movlw	0
  3858  0003F4  6E48               	movwf	?_vfpfcnvrt+1,c
  3859  0003F6  0E00               	movlw	0
  3860  0003F8  6E47               	movwf	?_vfpfcnvrt,c
  3861  0003FA  0012               	return	
  3862  0003FC                     l2831:
  3863                           
  3864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3865  0003FC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3866  000400  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3867  000404  CFDE FFF6          	movff	postinc2,tblptrl
  3868  000408  CFDD FFF7          	movff	postdec2,tblptrh
  3869  00040C                     	if	0	;tblptru may be non-zero
  3870  00040C                     	endif
  3871  00040C                     	if	0	;tblptru may be non-zero
  3872  00040C                     	endif
  3873  00040C  0008               	tblrd		*
  3874  00040E  50F5               	movf	tablat,w,c
  3875  000410  6E05               	movwf	fputc@c,c
  3876  000412  6A06               	clrf	fputc@c+1,c
  3877  000414  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3878  000418  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3879  00041C  EC79  F00A         	call	_fputc	;wreg free
  3880                           
  3881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3882  000420  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3883  000424  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3884  000428  2ADE               	incf	postinc2,f,c
  3885  00042A  0E00               	movlw	0
  3886  00042C  22DD               	addwfc	postdec2,f,c
  3887  00042E  D7D5               	goto	l2821
  3888  000430                     __end_of_vfpfcnvrt:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _xtoa *****************
  3892 ;; Defined at:
  3893 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3896 ;;		 -> NULL(0), 
  3897 ;;  d               8   33[COMRAM] unsigned long long 
  3898 ;;  x               1   41[COMRAM] unsigned char 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  n               8   58[COMRAM] unsigned long long 
  3901 ;;  c               2   68[COMRAM] int 
  3902 ;;  i               2   66[COMRAM] int 
  3903 ;;  w               2   56[COMRAM] int 
  3904 ;;  p               2   54[COMRAM] int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2   31[COMRAM] int 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3914 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;Total ram usage:       39 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    8
  3921 ;; This function calls:
  3922 ;;		_isalpha
  3923 ;;		_isupper
  3924 ;;		_pad
  3925 ;;		_toupper
  3926 ;; This function is called by:
  3927 ;;		_vfpfcnvrt
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text15
  3932  000A6A                     __ptext15:
  3933                           	opt callstack 0
  3934  000A6A                     _xtoa:
  3935                           	opt callstack 19
  3936                           
  3937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3938                           
  3939                           ;incstack = 0
  3940  000A6A  0100               	movlb	0	; () banked
  3941  000A6C  AF85               	btfss	(_prec+1)& (0+255),7,b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3945  000A6E  9386               	bcf	_flags& (0+255),1,b
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3949  000A70  BF85               	btfsc	(_prec+1)& (0+255),7,b
  3950  000A72  D005               	goto	u2020
  3951  000A74  5185               	movf	(_prec+1)& (0+255),w,b
  3952  000A76  E108               	bnz	l366
  3953  000A78  0584               	decf	_prec& (0+255),w,b
  3954  000A7A  B0D8               	btfsc	status,0,c
  3955  000A7C  D005               	goto	l366
  3956  000A7E                     u2020:
  3957                           
  3958                           ; BSR set to: 0
  3959  000A7E  0E00               	movlw	0
  3960  000A80  6E38               	movwf	xtoa@p+1,c
  3961  000A82  0E01               	movlw	1
  3962  000A84  6E37               	movwf	xtoa@p,c
  3963  000A86  D004               	goto	l368
  3964  000A88                     l366:
  3965                           
  3966                           ; BSR set to: 0
  3967  000A88  C084  F037         	movff	_prec,xtoa@p
  3968  000A8C  C085  F038         	movff	_prec+1,xtoa@p+1
  3969  000A90                     l368:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3973  000A90  C082  F039         	movff	_width,xtoa@w
  3974  000A94  C083  F03A         	movff	_width+1,xtoa@w+1
  3975                           
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3977  000A98  A986               	btfss	_flags& (0+255),4,b
  3978  000A9A  D004               	goto	l2627
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3982  000A9C  0EFE               	movlw	254
  3983  000A9E  2639               	addwf	xtoa@w,f,c
  3984  000AA0  0EFF               	movlw	255
  3985  000AA2  223A               	addwfc	xtoa@w+1,f,c
  3986  000AA4                     l2627:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3990  000AA4  C022  F03B         	movff	xtoa@d,xtoa@n
  3991  000AA8  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  3992  000AAC  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  3993  000AB0  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  3994  000AB4  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  3995  000AB8  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  3996  000ABC  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  3997  000AC0  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4001  000AC4  0E00               	movlw	0
  4002  000AC6  6E44               	movwf	xtoa@i+1,c
  4003  000AC8  0E1F               	movlw	31
  4004  000ACA  6E43               	movwf	xtoa@i,c
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4008  000ACC  0E00               	movlw	0
  4009  000ACE  6FAF               	movwf	(_dbuf+31)& (0+255),b
  4010                           
  4011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4012  000AD0  D093               	goto	l2663
  4013  000AD2                     l2633:
  4014                           
  4015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4016  000AD2  0643               	decf	xtoa@i,f,c
  4017  000AD4  A0D8               	btfss	status,0,c
  4018  000AD6  0644               	decf	xtoa@i+1,f,c
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4021  000AD8  0E0F               	movlw	15
  4022  000ADA  143B               	andwf	xtoa@n,w,c
  4023  000ADC  6E45               	movwf	xtoa@c,c
  4024  000ADE  6A46               	clrf	xtoa@c+1,c
  4025                           
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4027  000AE0  BE46               	btfsc	xtoa@c+1,7,c
  4028  000AE2  D008               	goto	l2641
  4029  000AE4  5046               	movf	xtoa@c+1,w,c
  4030  000AE6  E104               	bnz	u2040
  4031  000AE8  0E0A               	movlw	10
  4032  000AEA  5C45               	subwf	xtoa@c,w,c
  4033  000AEC  A0D8               	btfss	status,0,c
  4034  000AEE  D002               	goto	l2641
  4035  000AF0                     u2040:
  4036  000AF0  0E57               	movlw	87
  4037  000AF2  D001               	goto	L10
  4038  000AF4                     l2641:
  4039  000AF4  0E30               	movlw	48
  4040  000AF6                     L10:
  4041  000AF6  2445               	addwf	xtoa@c,w,c
  4042  000AF8  6E45               	movwf	xtoa@c,c
  4043  000AFA  0E00               	movlw	0
  4044  000AFC  2046               	addwfc	xtoa@c+1,w,c
  4045  000AFE  6E46               	movwf	xtoa@c+1,c
  4046                           
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  4048  000B00  0EBF               	movlw	191
  4049  000B02  6E2B               	movwf	??_xtoa& (0+255),c
  4050  000B04  0EFF               	movlw	255
  4051  000B06  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  4052  000B08  502A               	movf	xtoa@x,w,c
  4053  000B0A  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  4054  000B0C  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  4055  000B0E  502B               	movf	??_xtoa,w,c
  4056  000B10  262D               	addwf	??_xtoa+2,f,c
  4057  000B12  502C               	movf	??_xtoa+1,w,c
  4058  000B14  222E               	addwfc	??_xtoa+3,f,c
  4059  000B16  502E               	movf	??_xtoa+3,w,c
  4060  000B18  E106               	bnz	u2050
  4061  000B1A  0E1A               	movlw	26
  4062  000B1C  5C2D               	subwf	??_xtoa+2,w,c
  4063  000B1E  B0D8               	btfsc	status,0,c
  4064  000B20  D002               	goto	u2050
  4065  000B22  0E01               	movlw	1
  4066  000B24  D001               	goto	u2060
  4067  000B26                     u2050:
  4068  000B26  0E00               	movlw	0
  4069  000B28                     u2060:
  4070  000B28  6E33               	movwf	_xtoa$729,c
  4071  000B2A  6A34               	clrf	_xtoa$729+1,c
  4072  000B2C  5033               	movf	_xtoa$729,w,c
  4073  000B2E  1034               	iorwf	_xtoa$729+1,w,c
  4074  000B30  B4D8               	btfsc	status,2,c
  4075  000B32  D027               	goto	l2655
  4076  000B34  0E9F               	movlw	159
  4077  000B36  6E2B               	movwf	??_xtoa& (0+255),c
  4078  000B38  0EFF               	movlw	255
  4079  000B3A  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  4080  000B3C  0E20               	movlw	32
  4081  000B3E  1045               	iorwf	xtoa@c,w,c
  4082  000B40  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  4083  000B42  0E00               	movlw	0
  4084  000B44  1046               	iorwf	xtoa@c+1,w,c
  4085  000B46  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  4086  000B48  502B               	movf	??_xtoa,w,c
  4087  000B4A  262D               	addwf	??_xtoa+2,f,c
  4088  000B4C  502C               	movf	??_xtoa+1,w,c
  4089  000B4E  222E               	addwfc	??_xtoa+3,f,c
  4090  000B50  502E               	movf	??_xtoa+3,w,c
  4091  000B52  E106               	bnz	u2080
  4092  000B54  0E1A               	movlw	26
  4093  000B56  5C2D               	subwf	??_xtoa+2,w,c
  4094  000B58  B0D8               	btfsc	status,0,c
  4095  000B5A  D002               	goto	u2080
  4096  000B5C  0E01               	movlw	1
  4097  000B5E  D001               	goto	u2090
  4098  000B60                     u2080:
  4099  000B60  0E00               	movlw	0
  4100  000B62                     u2090:
  4101  000B62  6E35               	movwf	_xtoa$730,c
  4102  000B64  6A36               	clrf	_xtoa$730+1,c
  4103  000B66  5035               	movf	_xtoa$730,w,c
  4104  000B68  1036               	iorwf	_xtoa$730+1,w,c
  4105  000B6A  B4D8               	btfsc	status,2,c
  4106  000B6C  D00A               	goto	l2655
  4107                           
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4109  000B6E  C045  F007         	movff	xtoa@c,toupper@c
  4110  000B72  C046  F008         	movff	xtoa@c+1,toupper@c+1
  4111  000B76  EC70  F00B         	call	_toupper	;wreg free
  4112  000B7A  C007  F045         	movff	?_toupper,xtoa@c
  4113  000B7E  C008  F046         	movff	?_toupper+1,xtoa@c+1
  4114  000B82                     l2655:
  4115                           
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4117  000B82  0E90               	movlw	low _dbuf
  4118  000B84  2443               	addwf	xtoa@i,w,c
  4119  000B86  6ED9               	movwf	fsr2l,c
  4120  000B88  0E00               	movlw	high _dbuf
  4121  000B8A  2044               	addwfc	xtoa@i+1,w,c
  4122  000B8C  6EDA               	movwf	fsr2h,c
  4123  000B8E  C045  FFDF         	movff	xtoa@c,indf2
  4124                           
  4125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4126  000B92  0637               	decf	xtoa@p,f,c
  4127  000B94  A0D8               	btfss	status,0,c
  4128  000B96  0638               	decf	xtoa@p+1,f,c
  4129                           
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4131  000B98  0639               	decf	xtoa@w,f,c
  4132  000B9A  A0D8               	btfss	status,0,c
  4133  000B9C  063A               	decf	xtoa@w+1,f,c
  4134                           
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4136  000B9E  C03B  F02B         	movff	xtoa@n,??_xtoa
  4137  000BA2  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  4138  000BA6  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  4139  000BAA  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  4140  000BAE  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  4141  000BB2  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  4142  000BB6  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  4143  000BBA  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  4144  000BBE  0E05               	movlw	5
  4145  000BC0  D009               	goto	u2110
  4146  000BC2                     u2115:
  4147  000BC2  90D8               	bcf	status,0,c
  4148  000BC4  3232               	rrcf	??_xtoa+7,f,c
  4149  000BC6  3231               	rrcf	??_xtoa+6,f,c
  4150  000BC8  3230               	rrcf	??_xtoa+5,f,c
  4151  000BCA  322F               	rrcf	??_xtoa+4,f,c
  4152  000BCC  322E               	rrcf	??_xtoa+3,f,c
  4153  000BCE  322D               	rrcf	??_xtoa+2,f,c
  4154  000BD0  322C               	rrcf	??_xtoa+1,f,c
  4155  000BD2  322B               	rrcf	??_xtoa,f,c
  4156  000BD4                     u2110:
  4157  000BD4  2EE8               	decfsz	wreg,f,c
  4158  000BD6  D7F5               	goto	u2115
  4159  000BD8  C02B  F03B         	movff	??_xtoa,xtoa@n
  4160  000BDC  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  4161  000BE0  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  4162  000BE4  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  4163  000BE8  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  4164  000BEC  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  4165  000BF0  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  4166  000BF4  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  4167  000BF8                     l2663:
  4168                           
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4170  000BF8  BE44               	btfsc	xtoa@i+1,7,c
  4171  000BFA  D021               	goto	u2160
  4172  000BFC  5044               	movf	xtoa@i+1,w,c
  4173  000BFE  E104               	bnz	u2120
  4174  000C00  0E02               	movlw	2
  4175  000C02  5C43               	subwf	xtoa@i,w,c
  4176  000C04  A0D8               	btfss	status,0,c
  4177  000C06  D01B               	goto	u2160
  4178  000C08                     u2120:
  4179  000C08  503B               	movf	xtoa@n,w,c
  4180  000C0A  103C               	iorwf	xtoa@n+1,w,c
  4181  000C0C  103D               	iorwf	xtoa@n+2,w,c
  4182  000C0E  103E               	iorwf	xtoa@n+3,w,c
  4183  000C10  103F               	iorwf	xtoa@n+4,w,c
  4184  000C12  1040               	iorwf	xtoa@n+5,w,c
  4185  000C14  1041               	iorwf	xtoa@n+6,w,c
  4186  000C16  1042               	iorwf	xtoa@n+7,w,c
  4187  000C18  A4D8               	btfss	status,2,c
  4188  000C1A  D75B               	goto	l2633
  4189  000C1C  BE38               	btfsc	xtoa@p+1,7,c
  4190  000C1E  D005               	goto	u2140
  4191  000C20  5038               	movf	xtoa@p+1,w,c
  4192  000C22  E102               	bnz	u2141
  4193  000C24  0437               	decf	xtoa@p,w,c
  4194  000C26  B0D8               	btfsc	status,0,c
  4195  000C28                     u2141:
  4196  000C28  D754               	goto	l2633
  4197  000C2A                     u2140:
  4198  000C2A  BE3A               	btfsc	xtoa@w+1,7,c
  4199  000C2C  D008               	goto	u2160
  4200  000C2E  503A               	movf	xtoa@w+1,w,c
  4201  000C30  E103               	bnz	u2150
  4202  000C32  0439               	decf	xtoa@w,w,c
  4203  000C34  A0D8               	btfss	status,0,c
  4204  000C36  D003               	goto	u2160
  4205  000C38                     u2150:
  4206  000C38  0100               	movlb	0	; () banked
  4207  000C3A  B386               	btfsc	_flags& (0+255),1,b
  4208  000C3C  D74A               	goto	l2633
  4209  000C3E                     u2160:
  4210                           
  4211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4212  000C3E  0100               	movlb	0	; () banked
  4213  000C40  A986               	btfss	_flags& (0+255),4,b
  4214  000C42  D016               	goto	l2679
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4218  000C44  0643               	decf	xtoa@i,f,c
  4219  000C46  A0D8               	btfss	status,0,c
  4220  000C48  0644               	decf	xtoa@i+1,f,c
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4224  000C4A  0E90               	movlw	low _dbuf
  4225  000C4C  2443               	addwf	xtoa@i,w,c
  4226  000C4E  6ED9               	movwf	fsr2l,c
  4227  000C50  0E00               	movlw	high _dbuf
  4228  000C52  2044               	addwfc	xtoa@i+1,w,c
  4229  000C54  6EDA               	movwf	fsr2h,c
  4230  000C56  C02A  FFDF         	movff	xtoa@x,indf2
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4234  000C5A  0643               	decf	xtoa@i,f,c
  4235  000C5C  A0D8               	btfss	status,0,c
  4236  000C5E  0644               	decf	xtoa@i+1,f,c
  4237                           
  4238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4239  000C60  0E90               	movlw	low _dbuf
  4240  000C62  2443               	addwf	xtoa@i,w,c
  4241  000C64  6ED9               	movwf	fsr2l,c
  4242  000C66  0E00               	movlw	high _dbuf
  4243  000C68  2044               	addwfc	xtoa@i+1,w,c
  4244  000C6A  6EDA               	movwf	fsr2h,c
  4245  000C6C  0E30               	movlw	48
  4246  000C6E  6EDF               	movwf	indf2,c
  4247  000C70                     l2679:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4251  000C70  C020  F015         	movff	xtoa@fp,pad@fp
  4252  000C74  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  4253  000C78  0E90               	movlw	low _dbuf
  4254  000C7A  2443               	addwf	xtoa@i,w,c
  4255  000C7C  6E17               	movwf	pad@buf,c
  4256  000C7E  0E00               	movlw	high _dbuf
  4257  000C80  2044               	addwfc	xtoa@i+1,w,c
  4258  000C82  6E18               	movwf	pad@buf+1,c
  4259  000C84  C039  F019         	movff	xtoa@w,pad@p
  4260  000C88  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  4261  000C8C  ECA8  F009         	call	_pad	;wreg free
  4262  000C90  C015  F020         	movff	?_pad,?_xtoa
  4263  000C94  C016  F021         	movff	?_pad+1,?_xtoa+1
  4264  000C98  0012               	return		;funcret
  4265  000C9A                     __end_of_xtoa:
  4266                           	opt callstack 0
  4267                           
  4268 ;; *************** function _toupper *****************
  4269 ;; Defined at:
  4270 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  c               2    6[COMRAM] int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2    6[COMRAM] int 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        8 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    2
  4291 ;; This function calls:
  4292 ;;		_islower
  4293 ;; This function is called by:
  4294 ;;		_xtoa
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text16
  4299  0016E0                     __ptext16:
  4300                           	opt callstack 0
  4301  0016E0                     _toupper:
  4302                           	opt callstack 24
  4303                           
  4304                           ;incstack = 0
  4305  0016E0  0E9F               	movlw	159
  4306  0016E2  6E09               	movwf	??_toupper& (0+255),c
  4307  0016E4  0EFF               	movlw	255
  4308  0016E6  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4309  0016E8  C007  F00B         	movff	toupper@c,??_toupper+2
  4310  0016EC  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4311  0016F0  5009               	movf	??_toupper,w,c
  4312  0016F2  260B               	addwf	??_toupper+2,f,c
  4313  0016F4  500A               	movf	??_toupper+1,w,c
  4314  0016F6  220C               	addwfc	??_toupper+3,f,c
  4315  0016F8  500C               	movf	??_toupper+3,w,c
  4316  0016FA  E106               	bnz	u1560
  4317  0016FC  0E1A               	movlw	26
  4318  0016FE  5C0B               	subwf	??_toupper+2,w,c
  4319  001700  B0D8               	btfsc	status,0,c
  4320  001702  D002               	goto	u1560
  4321  001704  0E01               	movlw	1
  4322  001706  D001               	goto	u1570
  4323  001708                     u1560:
  4324  001708  0E00               	movlw	0
  4325  00170A                     u1570:
  4326  00170A  6E0D               	movwf	_toupper$1294,c
  4327  00170C  6A0E               	clrf	_toupper$1294+1,c
  4328  00170E  500D               	movf	_toupper$1294,w,c
  4329  001710  100E               	iorwf	_toupper$1294+1,w,c
  4330  001712  B4D8               	btfsc	status,2,c
  4331  001714  D005               	goto	l1207
  4332  001716  0E5F               	movlw	95
  4333  001718  1407               	andwf	toupper@c,w,c
  4334  00171A  6E07               	movwf	?_toupper,c
  4335  00171C  6A08               	clrf	?_toupper+1,c
  4336  00171E  0012               	return	
  4337  001720                     l1207:
  4338  001720  C007  F007         	movff	toupper@c,?_toupper
  4339  001724  C008  F008         	movff	toupper@c+1,?_toupper+1
  4340  001728  0012               	return		;funcret
  4341  00172A                     __end_of_toupper:
  4342                           	opt callstack 0
  4343                           
  4344 ;; *************** function _islower *****************
  4345 ;; Defined at:
  4346 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  c               2    0[COMRAM] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    0[COMRAM] int 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        6 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_toupper
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text17
  4375  0018B8                     __ptext17:
  4376                           	opt callstack 0
  4377  0018B8                     _islower:
  4378                           	opt callstack 24
  4379                           
  4380                           ;incstack = 0
  4381  0018B8  0E9F               	movlw	159
  4382  0018BA  6E03               	movwf	??_islower& (0+255),c
  4383  0018BC  0EFF               	movlw	255
  4384  0018BE  6E04               	movwf	(??_islower+1)& (0+255),c
  4385  0018C0  C001  F005         	movff	islower@c,??_islower+2
  4386  0018C4  C002  F006         	movff	islower@c+1,??_islower+3
  4387  0018C8  5003               	movf	??_islower,w,c
  4388  0018CA  2605               	addwf	??_islower+2,f,c
  4389  0018CC  5004               	movf	??_islower+1,w,c
  4390  0018CE  2206               	addwfc	??_islower+3,f,c
  4391  0018D0  5006               	movf	??_islower+3,w,c
  4392  0018D2  E106               	bnz	u1450
  4393  0018D4  0E1A               	movlw	26
  4394  0018D6  5C05               	subwf	??_islower+2,w,c
  4395  0018D8  B0D8               	btfsc	status,0,c
  4396  0018DA  D002               	goto	u1450
  4397  0018DC  0E01               	movlw	1
  4398  0018DE  D001               	goto	u1460
  4399  0018E0                     u1450:
  4400  0018E0  0E00               	movlw	0
  4401  0018E2                     u1460:
  4402  0018E2  6E01               	movwf	?_islower,c
  4403  0018E4  6A02               	clrf	?_islower+1,c
  4404  0018E6  0012               	return		;funcret
  4405  0018E8                     __end_of_islower:
  4406                           	opt callstack 0
  4407                           
  4408 ;; *************** function _isupper *****************
  4409 ;; Defined at:
  4410 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  c               2    0[COMRAM] int 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    0[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:        6 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_xtoa
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text18
  4439  0018E8                     __ptext18:
  4440                           	opt callstack 0
  4441  0018E8                     _isupper:
  4442                           	opt callstack 25
  4443                           
  4444                           ;incstack = 0
  4445  0018E8  0EBF               	movlw	191
  4446  0018EA  6E03               	movwf	??_isupper& (0+255),c
  4447  0018EC  0EFF               	movlw	255
  4448  0018EE  6E04               	movwf	(??_isupper+1)& (0+255),c
  4449  0018F0  C001  F005         	movff	isupper@c,??_isupper+2
  4450  0018F4  C002  F006         	movff	isupper@c+1,??_isupper+3
  4451  0018F8  5003               	movf	??_isupper,w,c
  4452  0018FA  2605               	addwf	??_isupper+2,f,c
  4453  0018FC  5004               	movf	??_isupper+1,w,c
  4454  0018FE  2206               	addwfc	??_isupper+3,f,c
  4455  001900  5006               	movf	??_isupper+3,w,c
  4456  001902  E106               	bnz	u1520
  4457  001904  0E1A               	movlw	26
  4458  001906  5C05               	subwf	??_isupper+2,w,c
  4459  001908  B0D8               	btfsc	status,0,c
  4460  00190A  D002               	goto	u1520
  4461  00190C  0E01               	movlw	1
  4462  00190E  D001               	goto	u1530
  4463  001910                     u1520:
  4464  001910  0E00               	movlw	0
  4465  001912                     u1530:
  4466  001912  6E01               	movwf	?_isupper,c
  4467  001914  6A02               	clrf	?_isupper+1,c
  4468  001916  0012               	return		;funcret
  4469  001918                     __end_of_isupper:
  4470                           	opt callstack 0
  4471                           
  4472 ;; *************** function _isalpha *****************
  4473 ;; Defined at:
  4474 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  c               2    0[COMRAM] int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    0[COMRAM] int 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        6 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_xtoa
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text19
  4503  001820                     __ptext19:
  4504                           	opt callstack 0
  4505  001820                     _isalpha:
  4506                           	opt callstack 25
  4507                           
  4508                           ;incstack = 0
  4509  001820  0E9F               	movlw	159
  4510  001822  6E03               	movwf	??_isalpha& (0+255),c
  4511  001824  0EFF               	movlw	255
  4512  001826  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4513  001828  0E20               	movlw	32
  4514  00182A  1001               	iorwf	isalpha@c,w,c
  4515  00182C  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4516  00182E  0E00               	movlw	0
  4517  001830  1002               	iorwf	isalpha@c+1,w,c
  4518  001832  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4519  001834  5003               	movf	??_isalpha,w,c
  4520  001836  2605               	addwf	??_isalpha+2,f,c
  4521  001838  5004               	movf	??_isalpha+1,w,c
  4522  00183A  2206               	addwfc	??_isalpha+3,f,c
  4523  00183C  5006               	movf	??_isalpha+3,w,c
  4524  00183E  E106               	bnz	u1540
  4525  001840  0E1A               	movlw	26
  4526  001842  5C05               	subwf	??_isalpha+2,w,c
  4527  001844  B0D8               	btfsc	status,0,c
  4528  001846  D002               	goto	u1540
  4529  001848  0E01               	movlw	1
  4530  00184A  D001               	goto	u1550
  4531  00184C                     u1540:
  4532  00184C  0E00               	movlw	0
  4533  00184E                     u1550:
  4534  00184E  6E01               	movwf	?_isalpha,c
  4535  001850  6A02               	clrf	?_isalpha+1,c
  4536  001852  0012               	return		;funcret
  4537  001854                     __end_of_isalpha:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _stoa *****************
  4541 ;; Defined at:
  4542 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4545 ;;		 -> NULL(0), 
  4546 ;;  s               2   15[COMRAM] PTR unsigned char 
  4547 ;;		 -> ?_printf(2), STR_43(16), STR_41(14), STR_39(11), 
  4548 ;;		 -> STR_37(9), STR_35(16), STR_33(13), STR_31(13), 
  4549 ;;		 -> STR_29(9), STR_27(13), STR_25(14), STR_23(10), 
  4550 ;;		 -> STR_19(9), STR_16(14), STR_14(17), STR_12(15), 
  4551 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  4552 ;;		 -> STR_2(12), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  nuls            7   18[COMRAM] unsigned char [7]
  4555 ;;  l               2   33[COMRAM] int 
  4556 ;;  p               2   31[COMRAM] int 
  4557 ;;  cp              2   29[COMRAM] PTR unsigned char 
  4558 ;;		 -> ?_printf(2), stoa@nuls(7), STR_43(16), STR_41(14), 
  4559 ;;		 -> STR_39(11), STR_37(9), STR_35(16), STR_33(13), 
  4560 ;;		 -> STR_31(13), STR_29(9), STR_27(13), STR_25(14), 
  4561 ;;		 -> STR_23(10), STR_19(9), STR_16(14), STR_14(17), 
  4562 ;;		 -> STR_12(15), STR_10(9), STR_8(16), STR_6(14), 
  4563 ;;		 -> STR_4(16), STR_2(12), 
  4564 ;;  w               2   27[COMRAM] int 
  4565 ;;  i               2   25[COMRAM] int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2   13[COMRAM] int 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;Total ram usage:       22 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    6
  4582 ;; This function calls:
  4583 ;;		_fputc
  4584 ;;		_strlen
  4585 ;; This function is called by:
  4586 ;;		_vfpfcnvrt
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text20
  4591  000FA8                     __ptext20:
  4592                           	opt callstack 0
  4593  000FA8                     _stoa:
  4594                           	opt callstack 21
  4595                           
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4597                           
  4598                           ;incstack = 0
  4599  000FA8  EE20  F0D9         	lfsr	2,stoa@F1139
  4600  000FAC  EE10  F013         	lfsr	1,stoa@nuls
  4601  000FB0  0E06               	movlw	6
  4602  000FB2                     u1911:
  4603  000FB2  CFDB FFE3          	movff	plusw2,plusw1
  4604  000FB6  06E8               	decf	wreg,f,c
  4605  000FB8  E2FC               	bc	u1911
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4608  000FBA  C010  F01E         	movff	stoa@s,stoa@cp
  4609  000FBE  C011  F01F         	movff	stoa@s+1,stoa@cp+1
  4610                           
  4611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4612  000FC2  501E               	movf	stoa@cp,w,c
  4613  000FC4  101F               	iorwf	stoa@cp+1,w,c
  4614  000FC6  A4D8               	btfss	status,2,c
  4615  000FC8  D004               	goto	l2583
  4616                           
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4618  000FCA  0E13               	movlw	low stoa@nuls
  4619  000FCC  6E1E               	movwf	stoa@cp,c
  4620  000FCE  0E00               	movlw	high stoa@nuls
  4621  000FD0  6E1F               	movwf	stoa@cp+1,c
  4622  000FD2                     l2583:
  4623                           
  4624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4625  000FD2  C01E  F001         	movff	stoa@cp,strlen@s
  4626  000FD6  C01F  F002         	movff	stoa@cp+1,strlen@s+1
  4627  000FDA  EC95  F00B         	call	_strlen	;wreg free
  4628  000FDE  C001  F022         	movff	?_strlen,stoa@l
  4629  000FE2  C002  F023         	movff	?_strlen+1,stoa@l+1
  4630                           
  4631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4632  000FE6  C084  F020         	movff	_prec,stoa@p
  4633  000FEA  C085  F021         	movff	_prec+1,stoa@p+1
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4636  000FEE  BE21               	btfsc	stoa@p+1,7,c
  4637  000FF0  D00E               	goto	l347
  4638  000FF2  5022               	movf	stoa@l,w,c
  4639  000FF4  5C20               	subwf	stoa@p,w,c
  4640  000FF6  5021               	movf	stoa@p+1,w,c
  4641  000FF8  0A80               	xorlw	128
  4642  000FFA  6E12               	movwf	??_stoa& (0+255),c
  4643  000FFC  5023               	movf	stoa@l+1,w,c
  4644  000FFE  0A80               	xorlw	128
  4645  001000  5812               	subwfb	??_stoa& (0+255),w,c
  4646  001002  B0D8               	btfsc	status,0,c
  4647  001004  D004               	goto	l347
  4648  001006  C020  F022         	movff	stoa@p,stoa@l
  4649  00100A  C021  F023         	movff	stoa@p+1,stoa@l+1
  4650  00100E                     l347:
  4651                           
  4652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4653  00100E  C022  F020         	movff	stoa@l,stoa@p
  4654  001012  C023  F021         	movff	stoa@l+1,stoa@p+1
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4657  001016  C082  F01C         	movff	_width,stoa@w
  4658  00101A  C083  F01D         	movff	_width+1,stoa@w+1
  4659                           
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4661  00101E  0100               	movlb	0	; () banked
  4662  001020  A186               	btfss	_flags& (0+255),0,b
  4663  001022  D00D               	goto	l2597
  4664  001024  D016               	goto	u1960
  4665  001026                     l2593:
  4666                           
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4668  001026  0E00               	movlw	0
  4669  001028  6E06               	movwf	fputc@c+1,c
  4670  00102A  0E20               	movlw	32
  4671  00102C  6E05               	movwf	fputc@c,c
  4672  00102E  C00E  F007         	movff	stoa@fp,fputc@fp
  4673  001032  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4674  001036  EC79  F00A         	call	_fputc	;wreg free
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4677  00103A  4A22               	infsnz	stoa@l,f,c
  4678  00103C  2A23               	incf	stoa@l+1,f,c
  4679  00103E                     l2597:
  4680                           
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4682  00103E  501C               	movf	stoa@w,w,c
  4683  001040  5C22               	subwf	stoa@l,w,c
  4684  001042  5023               	movf	stoa@l+1,w,c
  4685  001044  0A80               	xorlw	128
  4686  001046  6E12               	movwf	??_stoa& (0+255),c
  4687  001048  501D               	movf	stoa@w+1,w,c
  4688  00104A  0A80               	xorlw	128
  4689  00104C  5812               	subwfb	??_stoa& (0+255),w,c
  4690  00104E  A0D8               	btfss	status,0,c
  4691  001050  D7EA               	goto	l2593
  4692  001052                     u1960:
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4695  001052  0E00               	movlw	0
  4696  001054  6E1B               	movwf	stoa@i+1,c
  4697  001056  0E00               	movlw	0
  4698  001058  6E1A               	movwf	stoa@i,c
  4699                           
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4701  00105A  D01F               	goto	l2607
  4702  00105C                     l2601:
  4703                           
  4704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4705  00105C  C01E  FFF6         	movff	stoa@cp,tblptrl
  4706  001060  C01F  FFF7         	movff	stoa@cp+1,tblptrh
  4707  001064  0E00               	movlw	low (__mediumconst shr (0+16))
  4708  001066  6EF8               	movwf	tblptru,c
  4709  001068  0E0F               	movlw	(high __ramtop+-1)
  4710  00106A  64F7               	cpfsgt	tblptrh,c
  4711  00106C  D003               	bra	u1977
  4712  00106E  0008               	tblrd		*
  4713  001070  50F5               	movf	tablat,w,c
  4714  001072  D005               	bra	u1970
  4715  001074                     u1977:
  4716  001074  CFF6 FFE1          	movff	tblptrl,fsr1l
  4717  001078  CFF7 FFE2          	movff	tblptrh,fsr1h
  4718  00107C  50E7               	movf	indf1,w,c
  4719  00107E                     u1970:
  4720  00107E  6E12               	movwf	??_stoa& (0+255),c
  4721  001080  5012               	movf	??_stoa,w,c
  4722  001082  6E05               	movwf	fputc@c,c
  4723  001084  6A06               	clrf	fputc@c+1,c
  4724  001086  C00E  F007         	movff	stoa@fp,fputc@fp
  4725  00108A  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4726  00108E  EC79  F00A         	call	_fputc	;wreg free
  4727                           
  4728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4729  001092  4A1E               	infsnz	stoa@cp,f,c
  4730  001094  2A1F               	incf	stoa@cp+1,f,c
  4731                           
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4733  001096  4A1A               	infsnz	stoa@i,f,c
  4734  001098  2A1B               	incf	stoa@i+1,f,c
  4735  00109A                     l2607:
  4736                           
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4738  00109A  5020               	movf	stoa@p,w,c
  4739  00109C  5C1A               	subwf	stoa@i,w,c
  4740  00109E  501B               	movf	stoa@i+1,w,c
  4741  0010A0  0A80               	xorlw	128
  4742  0010A2  6E12               	movwf	??_stoa& (0+255),c
  4743  0010A4  5021               	movf	stoa@p+1,w,c
  4744  0010A6  0A80               	xorlw	128
  4745  0010A8  5812               	subwfb	??_stoa& (0+255),w,c
  4746  0010AA  A0D8               	btfss	status,0,c
  4747  0010AC  D7D7               	goto	l2601
  4748                           
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4750  0010AE  0100               	movlb	0	; () banked
  4751  0010B0  B186               	btfsc	_flags& (0+255),0,b
  4752  0010B2  D00D               	goto	l2615
  4753  0010B4  D016               	goto	u2000
  4754  0010B6                     l2611:
  4755                           
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4757  0010B6  0E00               	movlw	0
  4758  0010B8  6E06               	movwf	fputc@c+1,c
  4759  0010BA  0E20               	movlw	32
  4760  0010BC  6E05               	movwf	fputc@c,c
  4761  0010BE  C00E  F007         	movff	stoa@fp,fputc@fp
  4762  0010C2  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4763  0010C6  EC79  F00A         	call	_fputc	;wreg free
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4766  0010CA  4A22               	infsnz	stoa@l,f,c
  4767  0010CC  2A23               	incf	stoa@l+1,f,c
  4768  0010CE                     l2615:
  4769                           
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4771  0010CE  501C               	movf	stoa@w,w,c
  4772  0010D0  5C22               	subwf	stoa@l,w,c
  4773  0010D2  5023               	movf	stoa@l+1,w,c
  4774  0010D4  0A80               	xorlw	128
  4775  0010D6  6E12               	movwf	??_stoa& (0+255),c
  4776  0010D8  501D               	movf	stoa@w+1,w,c
  4777  0010DA  0A80               	xorlw	128
  4778  0010DC  5812               	subwfb	??_stoa& (0+255),w,c
  4779  0010DE  A0D8               	btfss	status,0,c
  4780  0010E0  D7EA               	goto	l2611
  4781  0010E2                     u2000:
  4782                           
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4784                           
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  4786  0010E2  C022  F00E         	movff	stoa@l,?_stoa
  4787  0010E6  C023  F00F         	movff	stoa@l+1,?_stoa+1
  4788  0010EA  0012               	return		;funcret
  4789  0010EC                     __end_of_stoa:
  4790                           	opt callstack 0
  4791                           
  4792 ;; *************** function _dtoa *****************
  4793 ;; Defined at:
  4794 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4797 ;;		 -> NULL(0), 
  4798 ;;  d               8   33[COMRAM] long long 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  n               8   57[COMRAM] long long 
  4801 ;;  i               2   65[COMRAM] int 
  4802 ;;  s               2   55[COMRAM] int 
  4803 ;;  w               2   53[COMRAM] int 
  4804 ;;  p               2   51[COMRAM] int 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  2   31[COMRAM] int 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4814 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;Total ram usage:       36 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    8
  4821 ;; This function calls:
  4822 ;;		___aodiv
  4823 ;;		___aomod
  4824 ;;		_abs
  4825 ;;		_pad
  4826 ;; This function is called by:
  4827 ;;		_vfpfcnvrt
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text21
  4832  000824                     __ptext21:
  4833                           	opt callstack 0
  4834  000824                     _dtoa:
  4835                           	opt callstack 19
  4836                           
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4838                           
  4839                           ;incstack = 0
  4840  000824  C022  F03A         	movff	dtoa@d,dtoa@n
  4841  000828  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  4842  00082C  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  4843  000830  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  4844  000834  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  4845  000838  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  4846  00083C  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  4847  000840  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  4848                           
  4849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4850  000844  AE41               	btfss	dtoa@n+7,7,c
  4851  000846  D002               	goto	u1760
  4852  000848  0E01               	movlw	1
  4853  00084A  D001               	goto	u1770
  4854  00084C                     u1760:
  4855  00084C  0E00               	movlw	0
  4856  00084E                     u1770:
  4857  00084E  6E38               	movwf	dtoa@s,c
  4858  000850  6A39               	clrf	dtoa@s+1,c
  4859                           
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4861  000852  5038               	movf	dtoa@s,w,c
  4862  000854  1039               	iorwf	dtoa@s+1,w,c
  4863  000856  B4D8               	btfsc	status,2,c
  4864  000858  D010               	goto	l2519
  4865                           
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4867  00085A  1E41               	comf	dtoa@n+7,f,c
  4868  00085C  1E40               	comf	dtoa@n+6,f,c
  4869  00085E  1E3F               	comf	dtoa@n+5,f,c
  4870  000860  1E3E               	comf	dtoa@n+4,f,c
  4871  000862  1E3D               	comf	dtoa@n+3,f,c
  4872  000864  1E3C               	comf	dtoa@n+2,f,c
  4873  000866  1E3B               	comf	dtoa@n+1,f,c
  4874  000868  6C3A               	negf	dtoa@n,c
  4875  00086A  0E00               	movlw	0
  4876  00086C  223B               	addwfc	dtoa@n+1,f,c
  4877  00086E  223C               	addwfc	dtoa@n+2,f,c
  4878  000870  223D               	addwfc	dtoa@n+3,f,c
  4879  000872  223E               	addwfc	dtoa@n+4,f,c
  4880  000874  223F               	addwfc	dtoa@n+5,f,c
  4881  000876  2240               	addwfc	dtoa@n+6,f,c
  4882  000878  2241               	addwfc	dtoa@n+7,f,c
  4883  00087A                     l2519:
  4884                           
  4885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4886  00087A  0100               	movlb	0	; () banked
  4887  00087C  AF85               	btfss	(_prec+1)& (0+255),7,b
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4891  00087E  9386               	bcf	_flags& (0+255),1,b
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4895  000880  BF85               	btfsc	(_prec+1)& (0+255),7,b
  4896  000882  D005               	goto	u1800
  4897  000884  5185               	movf	(_prec+1)& (0+255),w,b
  4898  000886  E108               	bnz	l318
  4899  000888  0584               	decf	_prec& (0+255),w,b
  4900  00088A  B0D8               	btfsc	status,0,c
  4901  00088C  D005               	goto	l318
  4902  00088E                     u1800:
  4903                           
  4904                           ; BSR set to: 0
  4905  00088E  0E00               	movlw	0
  4906  000890  6E35               	movwf	dtoa@p+1,c
  4907  000892  0E01               	movlw	1
  4908  000894  6E34               	movwf	dtoa@p,c
  4909  000896  D004               	goto	l320
  4910  000898                     l318:
  4911                           
  4912                           ; BSR set to: 0
  4913  000898  C084  F034         	movff	_prec,dtoa@p
  4914  00089C  C085  F035         	movff	_prec+1,dtoa@p+1
  4915  0008A0                     l320:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4919  0008A0  C082  F036         	movff	_width,dtoa@w
  4920  0008A4  C083  F037         	movff	_width+1,dtoa@w+1
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4924  0008A8  5038               	movf	dtoa@s,w,c
  4925  0008AA  1039               	iorwf	dtoa@s+1,w,c
  4926  0008AC  A4D8               	btfss	status,2,c
  4927  0008AE  D002               	goto	u1820
  4928                           
  4929                           ; BSR set to: 0
  4930  0008B0  A586               	btfss	_flags& (0+255),2,b
  4931  0008B2  D003               	goto	l2533
  4932  0008B4                     u1820:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4936  0008B4  0636               	decf	dtoa@w,f,c
  4937  0008B6  A0D8               	btfss	status,0,c
  4938  0008B8  0637               	decf	dtoa@w+1,f,c
  4939  0008BA                     l2533:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4943  0008BA  0E00               	movlw	0
  4944  0008BC  6E43               	movwf	dtoa@i+1,c
  4945  0008BE  0E1F               	movlw	31
  4946  0008C0  6E42               	movwf	dtoa@i,c
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4950  0008C2  0E00               	movlw	0
  4951  0008C4  6FAF               	movwf	(_dbuf+31)& (0+255),b
  4952                           
  4953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4954  0008C6  D07C               	goto	l2547
  4955  0008C8                     l2537:
  4956                           
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4958  0008C8  0642               	decf	dtoa@i,f,c
  4959  0008CA  A0D8               	btfss	status,0,c
  4960  0008CC  0643               	decf	dtoa@i+1,f,c
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4963  0008CE  0E90               	movlw	low _dbuf
  4964  0008D0  2442               	addwf	dtoa@i,w,c
  4965  0008D2  6ED9               	movwf	fsr2l,c
  4966  0008D4  0E00               	movlw	high _dbuf
  4967  0008D6  2043               	addwfc	dtoa@i+1,w,c
  4968  0008D8  6EDA               	movwf	fsr2h,c
  4969  0008DA  C03A  F001         	movff	dtoa@n,___aomod@dividend
  4970  0008DE  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4971  0008E2  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4972  0008E6  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4973  0008EA  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4974  0008EE  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4975  0008F2  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4976  0008F6  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4977  0008FA  0E0A               	movlw	10
  4978  0008FC  6E09               	movwf	___aomod@divisor,c
  4979  0008FE  0E00               	movlw	0
  4980  000900  6E0A               	movwf	___aomod@divisor+1,c
  4981  000902  0E00               	movlw	0
  4982  000904  6E0B               	movwf	___aomod@divisor+2,c
  4983  000906  0E00               	movlw	0
  4984  000908  6E0C               	movwf	___aomod@divisor+3,c
  4985  00090A  0E00               	movlw	0
  4986  00090C  6E0D               	movwf	___aomod@divisor+4,c
  4987  00090E  0E00               	movlw	0
  4988  000910  6E0E               	movwf	___aomod@divisor+5,c
  4989  000912  0E00               	movlw	0
  4990  000914  6E0F               	movwf	___aomod@divisor+6,c
  4991  000916  0E00               	movlw	0
  4992  000918  6E10               	movwf	___aomod@divisor+7,c
  4993  00091A  EC16  F009         	call	___aomod	;wreg free
  4994  00091E  C001  F02A         	movff	?___aomod,??_dtoa
  4995  000922  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  4996  000926  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  4997  00092A  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  4998  00092E  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  4999  000932  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  5000  000936  C007  F030         	movff	?___aomod+6,??_dtoa+6
  5001  00093A  C008  F031         	movff	?___aomod+7,??_dtoa+7
  5002  00093E  C02A  F013         	movff	??_dtoa,abs@a
  5003  000942  C02C  F014         	movff	??_dtoa+2,abs@a+1
  5004  000946  EC43  F00C         	call	_abs	;wreg free
  5005  00094A  5013               	movf	?_abs,w,c
  5006  00094C  0F30               	addlw	48
  5007  00094E  6EDF               	movwf	indf2,c
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5010  000950  0634               	decf	dtoa@p,f,c
  5011  000952  A0D8               	btfss	status,0,c
  5012  000954  0635               	decf	dtoa@p+1,f,c
  5013                           
  5014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5015  000956  0636               	decf	dtoa@w,f,c
  5016  000958  A0D8               	btfss	status,0,c
  5017  00095A  0637               	decf	dtoa@w+1,f,c
  5018                           
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5020  00095C  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  5021  000960  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5022  000964  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5023  000968  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5024  00096C  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5025  000970  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5026  000974  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5027  000978  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5028  00097C  0E0A               	movlw	10
  5029  00097E  6E09               	movwf	___aodiv@divisor,c
  5030  000980  0E00               	movlw	0
  5031  000982  6E0A               	movwf	___aodiv@divisor+1,c
  5032  000984  0E00               	movlw	0
  5033  000986  6E0B               	movwf	___aodiv@divisor+2,c
  5034  000988  0E00               	movlw	0
  5035  00098A  6E0C               	movwf	___aodiv@divisor+3,c
  5036  00098C  0E00               	movlw	0
  5037  00098E  6E0D               	movwf	___aodiv@divisor+4,c
  5038  000990  0E00               	movlw	0
  5039  000992  6E0E               	movwf	___aodiv@divisor+5,c
  5040  000994  0E00               	movlw	0
  5041  000996  6E0F               	movwf	___aodiv@divisor+6,c
  5042  000998  0E00               	movlw	0
  5043  00099A  6E10               	movwf	___aodiv@divisor+7,c
  5044  00099C  EC30  F007         	call	___aodiv	;wreg free
  5045  0009A0  C001  F03A         	movff	?___aodiv,dtoa@n
  5046  0009A4  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  5047  0009A8  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  5048  0009AC  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  5049  0009B0  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  5050  0009B4  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  5051  0009B8  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  5052  0009BC  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  5053  0009C0                     l2547:
  5054                           
  5055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5056  0009C0  BE43               	btfsc	dtoa@i+1,7,c
  5057  0009C2  D020               	goto	u1870
  5058  0009C4  5043               	movf	dtoa@i+1,w,c
  5059  0009C6  E103               	bnz	u1830
  5060  0009C8  0442               	decf	dtoa@i,w,c
  5061  0009CA  A0D8               	btfss	status,0,c
  5062  0009CC  D01B               	goto	u1870
  5063  0009CE                     u1830:
  5064  0009CE  503A               	movf	dtoa@n,w,c
  5065  0009D0  103B               	iorwf	dtoa@n+1,w,c
  5066  0009D2  103C               	iorwf	dtoa@n+2,w,c
  5067  0009D4  103D               	iorwf	dtoa@n+3,w,c
  5068  0009D6  103E               	iorwf	dtoa@n+4,w,c
  5069  0009D8  103F               	iorwf	dtoa@n+5,w,c
  5070  0009DA  1040               	iorwf	dtoa@n+6,w,c
  5071  0009DC  1041               	iorwf	dtoa@n+7,w,c
  5072  0009DE  A4D8               	btfss	status,2,c
  5073  0009E0  D773               	goto	l2537
  5074  0009E2  BE35               	btfsc	dtoa@p+1,7,c
  5075  0009E4  D005               	goto	u1850
  5076  0009E6  5035               	movf	dtoa@p+1,w,c
  5077  0009E8  E102               	bnz	u1851
  5078  0009EA  0434               	decf	dtoa@p,w,c
  5079  0009EC  B0D8               	btfsc	status,0,c
  5080  0009EE                     u1851:
  5081  0009EE  D76C               	goto	l2537
  5082  0009F0                     u1850:
  5083  0009F0  BE37               	btfsc	dtoa@w+1,7,c
  5084  0009F2  D008               	goto	u1870
  5085  0009F4  5037               	movf	dtoa@w+1,w,c
  5086  0009F6  E103               	bnz	u1860
  5087  0009F8  0436               	decf	dtoa@w,w,c
  5088  0009FA  A0D8               	btfss	status,0,c
  5089  0009FC  D003               	goto	u1870
  5090  0009FE                     u1860:
  5091  0009FE  0100               	movlb	0	; () banked
  5092  000A00  B386               	btfsc	_flags& (0+255),1,b
  5093  000A02  D762               	goto	l2537
  5094  000A04                     u1870:
  5095                           
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5097  000A04  5038               	movf	dtoa@s,w,c
  5098  000A06  1039               	iorwf	dtoa@s+1,w,c
  5099  000A08  A4D8               	btfss	status,2,c
  5100  000A0A  D003               	goto	u1890
  5101  000A0C  0100               	movlb	0	; () banked
  5102  000A0E  A586               	btfss	_flags& (0+255),2,b
  5103  000A10  D017               	goto	l2571
  5104  000A12                     u1890:
  5105                           
  5106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5107  000A12  0642               	decf	dtoa@i,f,c
  5108  000A14  A0D8               	btfss	status,0,c
  5109  000A16  0643               	decf	dtoa@i+1,f,c
  5110                           
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5112  000A18  5038               	movf	dtoa@s,w,c
  5113  000A1A  1039               	iorwf	dtoa@s+1,w,c
  5114  000A1C  A4D8               	btfss	status,2,c
  5115  000A1E  D004               	goto	l2567
  5116  000A20  0E00               	movlw	0
  5117  000A22  6E33               	movwf	_dtoa$707+1,c
  5118  000A24  0E2B               	movlw	43
  5119  000A26  D003               	goto	L11
  5120  000A28                     l2567:
  5121  000A28  0E00               	movlw	0
  5122  000A2A  6E33               	movwf	_dtoa$707+1,c
  5123  000A2C  0E2D               	movlw	45
  5124  000A2E                     L11:
  5125  000A2E  6E32               	movwf	_dtoa$707,c
  5126  000A30  0E90               	movlw	low _dbuf
  5127  000A32  2442               	addwf	dtoa@i,w,c
  5128  000A34  6ED9               	movwf	fsr2l,c
  5129  000A36  0E00               	movlw	high _dbuf
  5130  000A38  2043               	addwfc	dtoa@i+1,w,c
  5131  000A3A  6EDA               	movwf	fsr2h,c
  5132  000A3C  C032  FFDF         	movff	_dtoa$707,indf2
  5133  000A40                     l2571:
  5134                           
  5135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5136  000A40  C020  F015         	movff	dtoa@fp,pad@fp
  5137  000A44  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5138  000A48  0E90               	movlw	low _dbuf
  5139  000A4A  2442               	addwf	dtoa@i,w,c
  5140  000A4C  6E17               	movwf	pad@buf,c
  5141  000A4E  0E00               	movlw	high _dbuf
  5142  000A50  2043               	addwfc	dtoa@i+1,w,c
  5143  000A52  6E18               	movwf	pad@buf+1,c
  5144  000A54  C036  F019         	movff	dtoa@w,pad@p
  5145  000A58  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5146  000A5C  ECA8  F009         	call	_pad	;wreg free
  5147  000A60  C015  F020         	movff	?_pad,?_dtoa
  5148  000A64  C016  F021         	movff	?_pad+1,?_dtoa+1
  5149  000A68  0012               	return		;funcret
  5150  000A6A                     __end_of_dtoa:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function _pad *****************
  5154 ;; Defined at:
  5155 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5158 ;;		 -> NULL(0), 
  5159 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5160 ;;		 -> dbuf(32), 
  5161 ;;  p               2   24[COMRAM] int 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  w               2   29[COMRAM] int 
  5164 ;;  i               2   27[COMRAM] int 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  2   20[COMRAM] int 
  5167 ;; Registers used:
  5168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;Total ram usage:       11 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    7
  5181 ;; This function calls:
  5182 ;;		_fputc
  5183 ;;		_fputs
  5184 ;;		_strlen
  5185 ;; This function is called by:
  5186 ;;		_dtoa
  5187 ;;		_xtoa
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text22
  5192  001350                     __ptext22:
  5193                           	opt callstack 0
  5194  001350                     _pad:
  5195                           	opt callstack 19
  5196                           
  5197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5198                           
  5199                           ;incstack = 0
  5200  001350  0100               	movlb	0	; () banked
  5201  001352  A186               	btfss	_flags& (0+255),0,b
  5202  001354  D00A               	goto	l2371
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5206  001356  C017  F00E         	movff	pad@buf,fputs@s
  5207  00135A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5208  00135E  C015  F010         	movff	pad@fp,fputs@fp
  5209  001362  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5210  001366  ECF4  F00B         	call	_fputs	;wreg free
  5211  00136A                     l2371:
  5212                           
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5214  00136A  BE1A               	btfsc	pad@p+1,7,c
  5215  00136C  D005               	goto	l2375
  5216  00136E  C019  F01E         	movff	pad@p,pad@w
  5217  001372  C01A  F01F         	movff	pad@p+1,pad@w+1
  5218  001376  D004               	goto	l307
  5219  001378                     l2375:
  5220  001378  0E00               	movlw	0
  5221  00137A  6E1F               	movwf	pad@w+1,c
  5222  00137C  0E00               	movlw	0
  5223  00137E  6E1E               	movwf	pad@w,c
  5224  001380                     l307:
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5227  001380  0E00               	movlw	0
  5228  001382  6E1D               	movwf	pad@i+1,c
  5229  001384  0E00               	movlw	0
  5230  001386  6E1C               	movwf	pad@i,c
  5231                           
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5233  001388  D00C               	goto	l2381
  5234  00138A                     l2377:
  5235                           
  5236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5237  00138A  0E00               	movlw	0
  5238  00138C  6E06               	movwf	fputc@c+1,c
  5239  00138E  0E20               	movlw	32
  5240  001390  6E05               	movwf	fputc@c,c
  5241  001392  C015  F007         	movff	pad@fp,fputc@fp
  5242  001396  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5243  00139A  EC79  F00A         	call	_fputc	;wreg free
  5244                           
  5245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5246  00139E  4A1C               	infsnz	pad@i,f,c
  5247  0013A0  2A1D               	incf	pad@i+1,f,c
  5248  0013A2                     l2381:
  5249                           
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5251  0013A2  501E               	movf	pad@w,w,c
  5252  0013A4  5C1C               	subwf	pad@i,w,c
  5253  0013A6  501D               	movf	pad@i+1,w,c
  5254  0013A8  0A80               	xorlw	128
  5255  0013AA  6E1B               	movwf	??_pad& (0+255),c
  5256  0013AC  501F               	movf	pad@w+1,w,c
  5257  0013AE  0A80               	xorlw	128
  5258  0013B0  581B               	subwfb	??_pad& (0+255),w,c
  5259  0013B2  A0D8               	btfss	status,0,c
  5260  0013B4  D7EA               	goto	l2377
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5263  0013B6  0100               	movlb	0	; () banked
  5264  0013B8  B186               	btfsc	_flags& (0+255),0,b
  5265  0013BA  D00A               	goto	l2385
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5269  0013BC  C017  F00E         	movff	pad@buf,fputs@s
  5270  0013C0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5271  0013C4  C015  F010         	movff	pad@fp,fputs@fp
  5272  0013C8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5273  0013CC  ECF4  F00B         	call	_fputs	;wreg free
  5274  0013D0                     l2385:
  5275                           
  5276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5277  0013D0  C017  F001         	movff	pad@buf,strlen@s
  5278  0013D4  C018  F002         	movff	pad@buf+1,strlen@s+1
  5279  0013D8  EC95  F00B         	call	_strlen	;wreg free
  5280  0013DC  501E               	movf	pad@w,w,c
  5281  0013DE  2401               	addwf	?_strlen,w,c
  5282  0013E0  6E15               	movwf	?_pad,c
  5283  0013E2  501F               	movf	pad@w+1,w,c
  5284  0013E4  2002               	addwfc	?_strlen+1,w,c
  5285  0013E6  6E16               	movwf	?_pad+1,c
  5286  0013E8  0012               	return		;funcret
  5287  0013EA                     __end_of_pad:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _strlen *****************
  5291 ;; Defined at:
  5292 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5295 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_43(16), 
  5296 ;;		 -> STR_41(14), STR_39(11), STR_37(9), STR_35(16), 
  5297 ;;		 -> STR_33(13), STR_31(13), STR_29(9), STR_27(13), 
  5298 ;;		 -> STR_25(14), STR_23(10), STR_19(9), STR_16(14), 
  5299 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  5300 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5303 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_43(16), 
  5304 ;;		 -> STR_41(14), STR_39(11), STR_37(9), STR_35(16), 
  5305 ;;		 -> STR_33(13), STR_31(13), STR_29(9), STR_27(13), 
  5306 ;;		 -> STR_25(14), STR_23(10), STR_19(9), STR_16(14), 
  5307 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  5308 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2    0[COMRAM] unsigned int 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;Total ram usage:        4 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_pad
  5329 ;;		_stoa
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text23
  5334  00172A                     __ptext23:
  5335                           	opt callstack 0
  5336  00172A                     _strlen:
  5337                           	opt callstack 24
  5338                           
  5339                           ;incstack = 0
  5340  00172A  C001  F003         	movff	strlen@s,strlen@a
  5341  00172E  C002  F004         	movff	strlen@s+1,strlen@a+1
  5342  001732  D002               	goto	l2357
  5343  001734                     l2355:
  5344  001734  4A01               	infsnz	strlen@s,f,c
  5345  001736  2A02               	incf	strlen@s+1,f,c
  5346  001738                     l2357:
  5347  001738  C001  FFF6         	movff	strlen@s,tblptrl
  5348  00173C  C002  FFF7         	movff	strlen@s+1,tblptrh
  5349  001740  0E00               	movlw	low (__mediumconst shr (0+16))
  5350  001742  6EF8               	movwf	tblptru,c
  5351  001744  0E0F               	movlw	(high __ramtop+-1)
  5352  001746  64F7               	cpfsgt	tblptrh,c
  5353  001748  D003               	bra	u1437
  5354  00174A  0008               	tblrd		*
  5355  00174C  50F5               	movf	tablat,w,c
  5356  00174E  D005               	bra	u1430
  5357  001750                     u1437:
  5358  001750  CFF6 FFE1          	movff	tblptrl,fsr1l
  5359  001754  CFF7 FFE2          	movff	tblptrh,fsr1h
  5360  001758  50E7               	movf	indf1,w,c
  5361  00175A                     u1430:
  5362  00175A  0900               	iorlw	0
  5363  00175C  A4D8               	btfss	status,2,c
  5364  00175E  D7EA               	goto	l2355
  5365  001760  5003               	movf	strlen@a,w,c
  5366  001762  5C01               	subwf	strlen@s,w,c
  5367  001764  6E01               	movwf	?_strlen,c
  5368  001766  5004               	movf	strlen@a+1,w,c
  5369  001768  5802               	subwfb	strlen@s+1,w,c
  5370  00176A  6E02               	movwf	?_strlen+1,c
  5371  00176C  0012               	return		;funcret
  5372  00176E                     __end_of_strlen:
  5373                           	opt callstack 0
  5374                           
  5375 ;; *************** function _fputs *****************
  5376 ;; Defined at:
  5377 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5380 ;;		 -> dbuf(32), 
  5381 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5382 ;;		 -> NULL(0), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  i               2   18[COMRAM] int 
  5385 ;;  c               1   17[COMRAM] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2   13[COMRAM] int 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;Total ram usage:        7 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    6
  5402 ;; This function calls:
  5403 ;;		_fputc
  5404 ;; This function is called by:
  5405 ;;		_pad
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text24
  5410  0017E8                     __ptext24:
  5411                           	opt callstack 0
  5412  0017E8                     _fputs:
  5413                           	opt callstack 19
  5414                           
  5415                           ;incstack = 0
  5416  0017E8  0E00               	movlw	0
  5417  0017EA  6E14               	movwf	fputs@i+1,c
  5418  0017EC  0E00               	movlw	0
  5419  0017EE  6E13               	movwf	fputs@i,c
  5420  0017F0  D00B               	goto	l2351
  5421  0017F2                     l2347:
  5422  0017F2  C012  F005         	movff	fputs@c,fputc@c
  5423  0017F6  6A06               	clrf	fputc@c+1,c
  5424  0017F8  C010  F007         	movff	fputs@fp,fputc@fp
  5425  0017FC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5426  001800  EC79  F00A         	call	_fputc	;wreg free
  5427  001804  4A13               	infsnz	fputs@i,f,c
  5428  001806  2A14               	incf	fputs@i+1,f,c
  5429  001808                     l2351:
  5430  001808  5013               	movf	fputs@i,w,c
  5431  00180A  240E               	addwf	fputs@s,w,c
  5432  00180C  6ED9               	movwf	fsr2l,c
  5433  00180E  5014               	movf	fputs@i+1,w,c
  5434  001810  200F               	addwfc	fputs@s+1,w,c
  5435  001812  6EDA               	movwf	fsr2h,c
  5436  001814  50DF               	movf	indf2,w,c
  5437  001816  6E12               	movwf	fputs@c,c
  5438  001818  5012               	movf	fputs@c,w,c
  5439  00181A  B4D8               	btfsc	status,2,c
  5440  00181C  0012               	return	
  5441  00181E  D7E9               	goto	l2347
  5442  001820                     __end_of_fputs:
  5443                           	opt callstack 0
  5444                           
  5445 ;; *************** function _fputc *****************
  5446 ;; Defined at:
  5447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  c               2    4[COMRAM] int 
  5450 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5451 ;;		 -> NULL(0), 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  2    4[COMRAM] int 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;Total ram usage:        9 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    5
  5470 ;; This function calls:
  5471 ;;		_putch
  5472 ;; This function is called by:
  5473 ;;		_pad
  5474 ;;		_stoa
  5475 ;;		_vfpfcnvrt
  5476 ;;		_fputs
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text25
  5481  0014F2                     __ptext25:
  5482                           	opt callstack 0
  5483  0014F2                     _fputc:
  5484                           	opt callstack 19
  5485                           
  5486                           ;incstack = 0
  5487  0014F2  5007               	movf	fputc@fp,w,c
  5488  0014F4  1008               	iorwf	fputc@fp+1,w,c
  5489  0014F6  B4D8               	btfsc	status,2,c
  5490  0014F8  D004               	goto	u1390
  5491  0014FA  5007               	movf	fputc@fp,w,c
  5492  0014FC  1008               	iorwf	fputc@fp+1,w,c
  5493  0014FE  A4D8               	btfss	status,2,c
  5494  001500  D004               	goto	l2337
  5495  001502                     u1390:
  5496  001502  5005               	movf	fputc@c,w,c
  5497  001504  EC32  F00D         	call	_putch
  5498  001508  0012               	return	
  5499  00150A                     l2337:
  5500  00150A  EE20 F004          	lfsr	2,4
  5501  00150E  5007               	movf	fputc@fp,w,c
  5502  001510  26D9               	addwf	fsr2l,f,c
  5503  001512  5008               	movf	fputc@fp+1,w,c
  5504  001514  22DA               	addwfc	fsr2h,f,c
  5505  001516  50DE               	movf	postinc2,w,c
  5506  001518  10DE               	iorwf	postinc2,w,c
  5507  00151A  B4D8               	btfsc	status,2,c
  5508  00151C  D016               	goto	u1410
  5509  00151E  EE20 F004          	lfsr	2,4
  5510  001522  5007               	movf	fputc@fp,w,c
  5511  001524  26D9               	addwf	fsr2l,f,c
  5512  001526  5008               	movf	fputc@fp+1,w,c
  5513  001528  22DA               	addwfc	fsr2h,f,c
  5514  00152A  EE10 F002          	lfsr	1,2
  5515  00152E  5007               	movf	fputc@fp,w,c
  5516  001530  26E1               	addwf	fsr1l,f,c
  5517  001532  5008               	movf	fputc@fp+1,w,c
  5518  001534  22E2               	addwfc	fsr1h,f,c
  5519  001536  50DE               	movf	postinc2,w,c
  5520  001538  5CE6               	subwf	postinc1,w,c
  5521  00153A  50E6               	movf	postinc1,w,c
  5522  00153C  0A80               	xorlw	128
  5523  00153E  6E0D               	movwf	(??_fputc+4)& (0+255),c
  5524  001540  50DE               	movf	postinc2,w,c
  5525  001542  0A80               	xorlw	128
  5526  001544  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  5527  001546  B0D8               	btfsc	status,0,c
  5528  001548  0012               	return	
  5529  00154A                     u1410:
  5530  00154A  EE20 F002          	lfsr	2,2
  5531  00154E  5007               	movf	fputc@fp,w,c
  5532  001550  26D9               	addwf	fsr2l,f,c
  5533  001552  5008               	movf	fputc@fp+1,w,c
  5534  001554  22DA               	addwfc	fsr2h,f,c
  5535  001556  2ADE               	incf	postinc2,f,c
  5536  001558  0E00               	movlw	0
  5537  00155A  22DD               	addwfc	postdec2,f,c
  5538  00155C  0012               	return		;funcret
  5539  00155E                     __end_of_fputc:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function _putch *****************
  5543 ;; Defined at:
  5544 ;;		line 102 in file "lcd.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  data            1    wreg     unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  data            1    3[COMRAM] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        1 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    4
  5565 ;; This function calls:
  5566 ;;		_send_byte
  5567 ;; This function is called by:
  5568 ;;		_fputc
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text26
  5573  001A64                     __ptext26:
  5574                           	opt callstack 0
  5575  001A64                     _putch:
  5576                           	opt callstack 19
  5577                           
  5578                           ;incstack = 0
  5579                           ;putch@data stored from wreg
  5580  001A64  6E04               	movwf	putch@data,c
  5581                           
  5582                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  5583  001A66  848C               	bsf	3980,2,c	;volatile
  5584                           
  5585                           ;lcd.c: 104:     send_byte((unsigned char)data);
  5586  001A68  5004               	movf	putch@data,w,c
  5587  001A6A  EC20  F00D         	call	_send_byte
  5588  001A6E  0012               	return		;funcret
  5589  001A70                     __end_of_putch:
  5590                           	opt callstack 0
  5591                           
  5592 ;; *************** function _abs *****************
  5593 ;; Defined at:
  5594 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  a               2   18[COMRAM] int 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  2   18[COMRAM] int 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;Total ram usage:        4 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_dtoa
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text27
  5623  001886                     __ptext27:
  5624                           	opt callstack 0
  5625  001886                     _abs:
  5626                           	opt callstack 25
  5627                           
  5628                           ;incstack = 0
  5629  001886  BE14               	btfsc	abs@a+1,7,c
  5630  001888  D005               	goto	u1510
  5631  00188A  5014               	movf	abs@a+1,w,c
  5632  00188C  E110               	bnz	l1109
  5633  00188E  0413               	decf	abs@a,w,c
  5634  001890  B0D8               	btfsc	status,0,c
  5635  001892  D00D               	goto	l1109
  5636  001894                     u1510:
  5637  001894  C013  F015         	movff	abs@a,??_abs
  5638  001898  C014  F016         	movff	abs@a+1,??_abs+1
  5639  00189C  1E15               	comf	??_abs,f,c
  5640  00189E  1E16               	comf	??_abs+1,f,c
  5641  0018A0  4A15               	infsnz	??_abs,f,c
  5642  0018A2  2A16               	incf	??_abs+1,f,c
  5643  0018A4  C015  F013         	movff	??_abs,?_abs
  5644  0018A8  C016  F014         	movff	??_abs+1,?_abs+1
  5645  0018AC  0012               	return	
  5646  0018AE                     l1109:
  5647  0018AE  C013  F013         	movff	abs@a,?_abs
  5648  0018B2  C014  F014         	movff	abs@a+1,?_abs+1
  5649  0018B6  0012               	return		;funcret
  5650  0018B8                     __end_of_abs:
  5651                           	opt callstack 0
  5652                           
  5653 ;; *************** function ___aomod *****************
  5654 ;; Defined at:
  5655 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  dividend        8    0[COMRAM] long long 
  5658 ;;  divisor         8    8[COMRAM] long long 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  sign            1   17[COMRAM] unsigned char 
  5661 ;;  counter         1   16[COMRAM] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  8    0[COMRAM] long long 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:       18 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    1
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_dtoa
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text28
  5686  00122C                     __ptext28:
  5687                           	opt callstack 0
  5688  00122C                     ___aomod:
  5689                           	opt callstack 25
  5690                           
  5691                           ;incstack = 0
  5692  00122C  0E00               	movlw	0
  5693  00122E  6E12               	movwf	___aomod@sign,c
  5694  001230  AE08               	btfss	___aomod@dividend+7,7,c
  5695  001232  D012               	goto	l2473
  5696  001234  1E08               	comf	___aomod@dividend+7,f,c
  5697  001236  1E07               	comf	___aomod@dividend+6,f,c
  5698  001238  1E06               	comf	___aomod@dividend+5,f,c
  5699  00123A  1E05               	comf	___aomod@dividend+4,f,c
  5700  00123C  1E04               	comf	___aomod@dividend+3,f,c
  5701  00123E  1E03               	comf	___aomod@dividend+2,f,c
  5702  001240  1E02               	comf	___aomod@dividend+1,f,c
  5703  001242  6C01               	negf	___aomod@dividend,c
  5704  001244  0E00               	movlw	0
  5705  001246  2202               	addwfc	___aomod@dividend+1,f,c
  5706  001248  2203               	addwfc	___aomod@dividend+2,f,c
  5707  00124A  2204               	addwfc	___aomod@dividend+3,f,c
  5708  00124C  2205               	addwfc	___aomod@dividend+4,f,c
  5709  00124E  2206               	addwfc	___aomod@dividend+5,f,c
  5710  001250  2207               	addwfc	___aomod@dividend+6,f,c
  5711  001252  2208               	addwfc	___aomod@dividend+7,f,c
  5712  001254  0E01               	movlw	1
  5713  001256  6E12               	movwf	___aomod@sign,c
  5714  001258                     l2473:
  5715  001258  AE10               	btfss	___aomod@divisor+7,7,c
  5716  00125A  D010               	goto	l2477
  5717  00125C  1E10               	comf	___aomod@divisor+7,f,c
  5718  00125E  1E0F               	comf	___aomod@divisor+6,f,c
  5719  001260  1E0E               	comf	___aomod@divisor+5,f,c
  5720  001262  1E0D               	comf	___aomod@divisor+4,f,c
  5721  001264  1E0C               	comf	___aomod@divisor+3,f,c
  5722  001266  1E0B               	comf	___aomod@divisor+2,f,c
  5723  001268  1E0A               	comf	___aomod@divisor+1,f,c
  5724  00126A  6C09               	negf	___aomod@divisor,c
  5725  00126C  0E00               	movlw	0
  5726  00126E  220A               	addwfc	___aomod@divisor+1,f,c
  5727  001270  220B               	addwfc	___aomod@divisor+2,f,c
  5728  001272  220C               	addwfc	___aomod@divisor+3,f,c
  5729  001274  220D               	addwfc	___aomod@divisor+4,f,c
  5730  001276  220E               	addwfc	___aomod@divisor+5,f,c
  5731  001278  220F               	addwfc	___aomod@divisor+6,f,c
  5732  00127A  2210               	addwfc	___aomod@divisor+7,f,c
  5733  00127C                     l2477:
  5734  00127C  5009               	movf	___aomod@divisor,w,c
  5735  00127E  100A               	iorwf	___aomod@divisor+1,w,c
  5736  001280  100B               	iorwf	___aomod@divisor+2,w,c
  5737  001282  100C               	iorwf	___aomod@divisor+3,w,c
  5738  001284  100D               	iorwf	___aomod@divisor+4,w,c
  5739  001286  100E               	iorwf	___aomod@divisor+5,w,c
  5740  001288  100F               	iorwf	___aomod@divisor+6,w,c
  5741  00128A  1010               	iorwf	___aomod@divisor+7,w,c
  5742  00128C  B4D8               	btfsc	status,2,c
  5743  00128E  D03C               	goto	l2493
  5744  001290  0E01               	movlw	1
  5745  001292  6E11               	movwf	___aomod@counter,c
  5746  001294  D00A               	goto	l2483
  5747  001296                     l2481:
  5748  001296  90D8               	bcf	status,0,c
  5749  001298  3609               	rlcf	___aomod@divisor,f,c
  5750  00129A  360A               	rlcf	___aomod@divisor+1,f,c
  5751  00129C  360B               	rlcf	___aomod@divisor+2,f,c
  5752  00129E  360C               	rlcf	___aomod@divisor+3,f,c
  5753  0012A0  360D               	rlcf	___aomod@divisor+4,f,c
  5754  0012A2  360E               	rlcf	___aomod@divisor+5,f,c
  5755  0012A4  360F               	rlcf	___aomod@divisor+6,f,c
  5756  0012A6  3610               	rlcf	___aomod@divisor+7,f,c
  5757  0012A8  2A11               	incf	___aomod@counter,f,c
  5758  0012AA                     l2483:
  5759  0012AA  AE10               	btfss	___aomod@divisor+7,7,c
  5760  0012AC  D7F4               	goto	l2481
  5761  0012AE                     u1710:
  5762  0012AE  5009               	movf	___aomod@divisor,w,c
  5763  0012B0  5C01               	subwf	___aomod@dividend,w,c
  5764  0012B2  500A               	movf	___aomod@divisor+1,w,c
  5765  0012B4  5802               	subwfb	___aomod@dividend+1,w,c
  5766  0012B6  500B               	movf	___aomod@divisor+2,w,c
  5767  0012B8  5803               	subwfb	___aomod@dividend+2,w,c
  5768  0012BA  500C               	movf	___aomod@divisor+3,w,c
  5769  0012BC  5804               	subwfb	___aomod@dividend+3,w,c
  5770  0012BE  500D               	movf	___aomod@divisor+4,w,c
  5771  0012C0  5805               	subwfb	___aomod@dividend+4,w,c
  5772  0012C2  500E               	movf	___aomod@divisor+5,w,c
  5773  0012C4  5806               	subwfb	___aomod@dividend+5,w,c
  5774  0012C6  500F               	movf	___aomod@divisor+6,w,c
  5775  0012C8  5807               	subwfb	___aomod@dividend+6,w,c
  5776  0012CA  5010               	movf	___aomod@divisor+7,w,c
  5777  0012CC  5808               	subwfb	___aomod@dividend+7,w,c
  5778  0012CE  A0D8               	btfss	status,0,c
  5779  0012D0  D010               	goto	l2489
  5780  0012D2  5009               	movf	___aomod@divisor,w,c
  5781  0012D4  5E01               	subwf	___aomod@dividend,f,c
  5782  0012D6  500A               	movf	___aomod@divisor+1,w,c
  5783  0012D8  5A02               	subwfb	___aomod@dividend+1,f,c
  5784  0012DA  500B               	movf	___aomod@divisor+2,w,c
  5785  0012DC  5A03               	subwfb	___aomod@dividend+2,f,c
  5786  0012DE  500C               	movf	___aomod@divisor+3,w,c
  5787  0012E0  5A04               	subwfb	___aomod@dividend+3,f,c
  5788  0012E2  500D               	movf	___aomod@divisor+4,w,c
  5789  0012E4  5A05               	subwfb	___aomod@dividend+4,f,c
  5790  0012E6  500E               	movf	___aomod@divisor+5,w,c
  5791  0012E8  5A06               	subwfb	___aomod@dividend+5,f,c
  5792  0012EA  500F               	movf	___aomod@divisor+6,w,c
  5793  0012EC  5A07               	subwfb	___aomod@dividend+6,f,c
  5794  0012EE  5010               	movf	___aomod@divisor+7,w,c
  5795  0012F0  5A08               	subwfb	___aomod@dividend+7,f,c
  5796  0012F2                     l2489:
  5797  0012F2  90D8               	bcf	status,0,c
  5798  0012F4  3210               	rrcf	___aomod@divisor+7,f,c
  5799  0012F6  320F               	rrcf	___aomod@divisor+6,f,c
  5800  0012F8  320E               	rrcf	___aomod@divisor+5,f,c
  5801  0012FA  320D               	rrcf	___aomod@divisor+4,f,c
  5802  0012FC  320C               	rrcf	___aomod@divisor+3,f,c
  5803  0012FE  320B               	rrcf	___aomod@divisor+2,f,c
  5804  001300  320A               	rrcf	___aomod@divisor+1,f,c
  5805  001302  3209               	rrcf	___aomod@divisor,f,c
  5806  001304  2E11               	decfsz	___aomod@counter,f,c
  5807  001306  D7D3               	goto	u1710
  5808  001308                     l2493:
  5809  001308  5012               	movf	___aomod@sign,w,c
  5810  00130A  B4D8               	btfsc	status,2,c
  5811  00130C  D010               	goto	l2497
  5812  00130E  1E08               	comf	___aomod@dividend+7,f,c
  5813  001310  1E07               	comf	___aomod@dividend+6,f,c
  5814  001312  1E06               	comf	___aomod@dividend+5,f,c
  5815  001314  1E05               	comf	___aomod@dividend+4,f,c
  5816  001316  1E04               	comf	___aomod@dividend+3,f,c
  5817  001318  1E03               	comf	___aomod@dividend+2,f,c
  5818  00131A  1E02               	comf	___aomod@dividend+1,f,c
  5819  00131C  6C01               	negf	___aomod@dividend,c
  5820  00131E  0E00               	movlw	0
  5821  001320  2202               	addwfc	___aomod@dividend+1,f,c
  5822  001322  2203               	addwfc	___aomod@dividend+2,f,c
  5823  001324  2204               	addwfc	___aomod@dividend+3,f,c
  5824  001326  2205               	addwfc	___aomod@dividend+4,f,c
  5825  001328  2206               	addwfc	___aomod@dividend+5,f,c
  5826  00132A  2207               	addwfc	___aomod@dividend+6,f,c
  5827  00132C  2208               	addwfc	___aomod@dividend+7,f,c
  5828  00132E                     l2497:
  5829  00132E  C001  F001         	movff	___aomod@dividend,?___aomod
  5830  001332  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5831  001336  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5832  00133A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5833  00133E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5834  001342  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5835  001346  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5836  00134A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5837  00134E  0012               	return		;funcret
  5838  001350                     __end_of___aomod:
  5839                           	opt callstack 0
  5840                           
  5841 ;; *************** function ___aodiv *****************
  5842 ;; Defined at:
  5843 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  dividend        8    0[COMRAM] long long 
  5846 ;;  divisor         8    8[COMRAM] long long 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  quotient        8   18[COMRAM] long long 
  5849 ;;  sign            1   17[COMRAM] unsigned char 
  5850 ;;  counter         1   16[COMRAM] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  8    0[COMRAM] long long 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5860 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;Total ram usage:       26 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    1
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_dtoa
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text29
  5875  000E60                     __ptext29:
  5876                           	opt callstack 0
  5877  000E60                     ___aodiv:
  5878                           	opt callstack 25
  5879                           
  5880                           ;incstack = 0
  5881  000E60  0E00               	movlw	0
  5882  000E62  6E12               	movwf	___aodiv@sign,c
  5883  000E64  AE10               	btfss	___aodiv@divisor+7,7,c
  5884  000E66  D012               	goto	l2429
  5885  000E68  1E10               	comf	___aodiv@divisor+7,f,c
  5886  000E6A  1E0F               	comf	___aodiv@divisor+6,f,c
  5887  000E6C  1E0E               	comf	___aodiv@divisor+5,f,c
  5888  000E6E  1E0D               	comf	___aodiv@divisor+4,f,c
  5889  000E70  1E0C               	comf	___aodiv@divisor+3,f,c
  5890  000E72  1E0B               	comf	___aodiv@divisor+2,f,c
  5891  000E74  1E0A               	comf	___aodiv@divisor+1,f,c
  5892  000E76  6C09               	negf	___aodiv@divisor,c
  5893  000E78  0E00               	movlw	0
  5894  000E7A  220A               	addwfc	___aodiv@divisor+1,f,c
  5895  000E7C  220B               	addwfc	___aodiv@divisor+2,f,c
  5896  000E7E  220C               	addwfc	___aodiv@divisor+3,f,c
  5897  000E80  220D               	addwfc	___aodiv@divisor+4,f,c
  5898  000E82  220E               	addwfc	___aodiv@divisor+5,f,c
  5899  000E84  220F               	addwfc	___aodiv@divisor+6,f,c
  5900  000E86  2210               	addwfc	___aodiv@divisor+7,f,c
  5901  000E88  0E01               	movlw	1
  5902  000E8A  6E12               	movwf	___aodiv@sign,c
  5903  000E8C                     l2429:
  5904  000E8C  AE08               	btfss	___aodiv@dividend+7,7,c
  5905  000E8E  D012               	goto	l2435
  5906  000E90  1E08               	comf	___aodiv@dividend+7,f,c
  5907  000E92  1E07               	comf	___aodiv@dividend+6,f,c
  5908  000E94  1E06               	comf	___aodiv@dividend+5,f,c
  5909  000E96  1E05               	comf	___aodiv@dividend+4,f,c
  5910  000E98  1E04               	comf	___aodiv@dividend+3,f,c
  5911  000E9A  1E03               	comf	___aodiv@dividend+2,f,c
  5912  000E9C  1E02               	comf	___aodiv@dividend+1,f,c
  5913  000E9E  6C01               	negf	___aodiv@dividend,c
  5914  000EA0  0E00               	movlw	0
  5915  000EA2  2202               	addwfc	___aodiv@dividend+1,f,c
  5916  000EA4  2203               	addwfc	___aodiv@dividend+2,f,c
  5917  000EA6  2204               	addwfc	___aodiv@dividend+3,f,c
  5918  000EA8  2205               	addwfc	___aodiv@dividend+4,f,c
  5919  000EAA  2206               	addwfc	___aodiv@dividend+5,f,c
  5920  000EAC  2207               	addwfc	___aodiv@dividend+6,f,c
  5921  000EAE  2208               	addwfc	___aodiv@dividend+7,f,c
  5922  000EB0  0E01               	movlw	1
  5923  000EB2  1A12               	xorwf	___aodiv@sign,f,c
  5924  000EB4                     l2435:
  5925  000EB4  EE20  F013         	lfsr	2,___aodiv@quotient
  5926  000EB8  0E07               	movlw	7
  5927  000EBA                     u1631:
  5928  000EBA  6ADE               	clrf	postinc2,c
  5929  000EBC  06E8               	decf	wreg,f,c
  5930  000EBE  E2FD               	bc	u1631
  5931  000EC0  5009               	movf	___aodiv@divisor,w,c
  5932  000EC2  100A               	iorwf	___aodiv@divisor+1,w,c
  5933  000EC4  100B               	iorwf	___aodiv@divisor+2,w,c
  5934  000EC6  100C               	iorwf	___aodiv@divisor+3,w,c
  5935  000EC8  100D               	iorwf	___aodiv@divisor+4,w,c
  5936  000ECA  100E               	iorwf	___aodiv@divisor+5,w,c
  5937  000ECC  100F               	iorwf	___aodiv@divisor+6,w,c
  5938  000ECE  1010               	iorwf	___aodiv@divisor+7,w,c
  5939  000ED0  B4D8               	btfsc	status,2,c
  5940  000ED2  D046               	goto	l2457
  5941  000ED4  0E01               	movlw	1
  5942  000ED6  6E11               	movwf	___aodiv@counter,c
  5943  000ED8  D00A               	goto	l2443
  5944  000EDA                     l2441:
  5945  000EDA  90D8               	bcf	status,0,c
  5946  000EDC  3609               	rlcf	___aodiv@divisor,f,c
  5947  000EDE  360A               	rlcf	___aodiv@divisor+1,f,c
  5948  000EE0  360B               	rlcf	___aodiv@divisor+2,f,c
  5949  000EE2  360C               	rlcf	___aodiv@divisor+3,f,c
  5950  000EE4  360D               	rlcf	___aodiv@divisor+4,f,c
  5951  000EE6  360E               	rlcf	___aodiv@divisor+5,f,c
  5952  000EE8  360F               	rlcf	___aodiv@divisor+6,f,c
  5953  000EEA  3610               	rlcf	___aodiv@divisor+7,f,c
  5954  000EEC  2A11               	incf	___aodiv@counter,f,c
  5955  000EEE                     l2443:
  5956  000EEE  AE10               	btfss	___aodiv@divisor+7,7,c
  5957  000EF0  D7F4               	goto	l2441
  5958  000EF2                     u1650:
  5959  000EF2  90D8               	bcf	status,0,c
  5960  000EF4  3613               	rlcf	___aodiv@quotient,f,c
  5961  000EF6  3614               	rlcf	___aodiv@quotient+1,f,c
  5962  000EF8  3615               	rlcf	___aodiv@quotient+2,f,c
  5963  000EFA  3616               	rlcf	___aodiv@quotient+3,f,c
  5964  000EFC  3617               	rlcf	___aodiv@quotient+4,f,c
  5965  000EFE  3618               	rlcf	___aodiv@quotient+5,f,c
  5966  000F00  3619               	rlcf	___aodiv@quotient+6,f,c
  5967  000F02  361A               	rlcf	___aodiv@quotient+7,f,c
  5968  000F04  5009               	movf	___aodiv@divisor,w,c
  5969  000F06  5C01               	subwf	___aodiv@dividend,w,c
  5970  000F08  500A               	movf	___aodiv@divisor+1,w,c
  5971  000F0A  5802               	subwfb	___aodiv@dividend+1,w,c
  5972  000F0C  500B               	movf	___aodiv@divisor+2,w,c
  5973  000F0E  5803               	subwfb	___aodiv@dividend+2,w,c
  5974  000F10  500C               	movf	___aodiv@divisor+3,w,c
  5975  000F12  5804               	subwfb	___aodiv@dividend+3,w,c
  5976  000F14  500D               	movf	___aodiv@divisor+4,w,c
  5977  000F16  5805               	subwfb	___aodiv@dividend+4,w,c
  5978  000F18  500E               	movf	___aodiv@divisor+5,w,c
  5979  000F1A  5806               	subwfb	___aodiv@dividend+5,w,c
  5980  000F1C  500F               	movf	___aodiv@divisor+6,w,c
  5981  000F1E  5807               	subwfb	___aodiv@dividend+6,w,c
  5982  000F20  5010               	movf	___aodiv@divisor+7,w,c
  5983  000F22  5808               	subwfb	___aodiv@dividend+7,w,c
  5984  000F24  A0D8               	btfss	status,0,c
  5985  000F26  D011               	goto	l2453
  5986  000F28  5009               	movf	___aodiv@divisor,w,c
  5987  000F2A  5E01               	subwf	___aodiv@dividend,f,c
  5988  000F2C  500A               	movf	___aodiv@divisor+1,w,c
  5989  000F2E  5A02               	subwfb	___aodiv@dividend+1,f,c
  5990  000F30  500B               	movf	___aodiv@divisor+2,w,c
  5991  000F32  5A03               	subwfb	___aodiv@dividend+2,f,c
  5992  000F34  500C               	movf	___aodiv@divisor+3,w,c
  5993  000F36  5A04               	subwfb	___aodiv@dividend+3,f,c
  5994  000F38  500D               	movf	___aodiv@divisor+4,w,c
  5995  000F3A  5A05               	subwfb	___aodiv@dividend+4,f,c
  5996  000F3C  500E               	movf	___aodiv@divisor+5,w,c
  5997  000F3E  5A06               	subwfb	___aodiv@dividend+5,f,c
  5998  000F40  500F               	movf	___aodiv@divisor+6,w,c
  5999  000F42  5A07               	subwfb	___aodiv@dividend+6,f,c
  6000  000F44  5010               	movf	___aodiv@divisor+7,w,c
  6001  000F46  5A08               	subwfb	___aodiv@dividend+7,f,c
  6002  000F48  8013               	bsf	___aodiv@quotient,0,c
  6003  000F4A                     l2453:
  6004  000F4A  90D8               	bcf	status,0,c
  6005  000F4C  3210               	rrcf	___aodiv@divisor+7,f,c
  6006  000F4E  320F               	rrcf	___aodiv@divisor+6,f,c
  6007  000F50  320E               	rrcf	___aodiv@divisor+5,f,c
  6008  000F52  320D               	rrcf	___aodiv@divisor+4,f,c
  6009  000F54  320C               	rrcf	___aodiv@divisor+3,f,c
  6010  000F56  320B               	rrcf	___aodiv@divisor+2,f,c
  6011  000F58  320A               	rrcf	___aodiv@divisor+1,f,c
  6012  000F5A  3209               	rrcf	___aodiv@divisor,f,c
  6013  000F5C  2E11               	decfsz	___aodiv@counter,f,c
  6014  000F5E  D7C9               	goto	u1650
  6015  000F60                     l2457:
  6016  000F60  5012               	movf	___aodiv@sign,w,c
  6017  000F62  B4D8               	btfsc	status,2,c
  6018  000F64  D010               	goto	l2461
  6019  000F66  1E1A               	comf	___aodiv@quotient+7,f,c
  6020  000F68  1E19               	comf	___aodiv@quotient+6,f,c
  6021  000F6A  1E18               	comf	___aodiv@quotient+5,f,c
  6022  000F6C  1E17               	comf	___aodiv@quotient+4,f,c
  6023  000F6E  1E16               	comf	___aodiv@quotient+3,f,c
  6024  000F70  1E15               	comf	___aodiv@quotient+2,f,c
  6025  000F72  1E14               	comf	___aodiv@quotient+1,f,c
  6026  000F74  6C13               	negf	___aodiv@quotient,c
  6027  000F76  0E00               	movlw	0
  6028  000F78  2214               	addwfc	___aodiv@quotient+1,f,c
  6029  000F7A  2215               	addwfc	___aodiv@quotient+2,f,c
  6030  000F7C  2216               	addwfc	___aodiv@quotient+3,f,c
  6031  000F7E  2217               	addwfc	___aodiv@quotient+4,f,c
  6032  000F80  2218               	addwfc	___aodiv@quotient+5,f,c
  6033  000F82  2219               	addwfc	___aodiv@quotient+6,f,c
  6034  000F84  221A               	addwfc	___aodiv@quotient+7,f,c
  6035  000F86                     l2461:
  6036  000F86  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6037  000F8A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6038  000F8E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6039  000F92  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6040  000F96  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6041  000F9A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6042  000F9E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6043  000FA2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6044  000FA6  0012               	return		;funcret
  6045  000FA8                     __end_of___aodiv:
  6046                           	opt callstack 0
  6047                           
  6048 ;; *************** function _atoi *****************
  6049 ;; Defined at:
  6050 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6053 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  6054 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  6055 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  6056 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  6057 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  6058 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  n               2   20[COMRAM] int 
  6061 ;;  neg             2   13[COMRAM] int 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  2    7[COMRAM] int 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;Total ram usage:       15 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    2
  6078 ;; This function calls:
  6079 ;;		___wmul
  6080 ;;		_isdigit
  6081 ;;		_isspace
  6082 ;; This function is called by:
  6083 ;;		_vfpfcnvrt
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text30
  6088  0010EC                     __ptext30:
  6089                           	opt callstack 0
  6090  0010EC                     _atoi:
  6091                           	opt callstack 25
  6092                           
  6093                           ;incstack = 0
  6094  0010EC  0E00               	movlw	0
  6095  0010EE  6E16               	movwf	atoi@n+1,c
  6096  0010F0  0E00               	movlw	0
  6097  0010F2  6E15               	movwf	atoi@n,c
  6098  0010F4  0E00               	movlw	0
  6099  0010F6  6E0F               	movwf	atoi@neg+1,c
  6100  0010F8  0E00               	movlw	0
  6101  0010FA  6E0E               	movwf	atoi@neg,c
  6102  0010FC  D002               	goto	l2687
  6103  0010FE                     l2685:
  6104  0010FE  4A08               	infsnz	atoi@s,f,c
  6105  001100  2A09               	incf	atoi@s+1,f,c
  6106  001102                     l2687:
  6107  001102  0E01               	movlw	1
  6108  001104  6E14               	movwf	_atoi$1204,c
  6109  001106  C008  FFF6         	movff	atoi@s,tblptrl
  6110  00110A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6111  00110E                     	if	0	;tblptru may be non-zero
  6112  00110E                     	endif
  6113  00110E                     	if	0	;tblptru may be non-zero
  6114  00110E                     	endif
  6115  00110E  0008               	tblrd		*
  6116  001110  50F5               	movf	tablat,w,c
  6117  001112  0A20               	xorlw	32
  6118  001114  B4D8               	btfsc	status,2,c
  6119  001116  D018               	goto	l2695
  6120  001118  0EF7               	movlw	247
  6121  00111A  6E0A               	movwf	??_atoi& (0+255),c
  6122  00111C  0EFF               	movlw	255
  6123  00111E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6124  001120  C008  FFF6         	movff	atoi@s,tblptrl
  6125  001124  C009  FFF7         	movff	atoi@s+1,tblptrh
  6126  001128                     	if	0	;tblptru may be non-zero
  6127  001128                     	endif
  6128  001128                     	if	0	;tblptru may be non-zero
  6129  001128                     	endif
  6130  001128  0008               	tblrd		*
  6131  00112A  50F5               	movf	tablat,w,c
  6132  00112C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6133  00112E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6134  001130  500A               	movf	??_atoi,w,c
  6135  001132  260C               	addwf	??_atoi+2,f,c
  6136  001134  500B               	movf	??_atoi+1,w,c
  6137  001136  220D               	addwfc	??_atoi+3,f,c
  6138  001138  500D               	movf	??_atoi+3,w,c
  6139  00113A  E104               	bnz	u2190
  6140  00113C  0E05               	movlw	5
  6141  00113E  5C0C               	subwf	??_atoi+2,w,c
  6142  001140  A0D8               	btfss	status,0,c
  6143  001142  D002               	goto	l2695
  6144  001144                     u2190:
  6145  001144  0E00               	movlw	0
  6146  001146  6E14               	movwf	_atoi$1204,c
  6147  001148                     l2695:
  6148  001148  C014  F010         	movff	_atoi$1204,_atoi$1203
  6149  00114C  6A11               	clrf	_atoi$1203+1,c
  6150  00114E  5010               	movf	_atoi$1203,w,c
  6151  001150  1011               	iorwf	_atoi$1203+1,w,c
  6152  001152  B4D8               	btfsc	status,2,c
  6153  001154  D008               	goto	l2705
  6154  001156  D7D3               	goto	l2685
  6155  001158                     l2701:
  6156  001158  0E00               	movlw	0
  6157  00115A  6E0F               	movwf	atoi@neg+1,c
  6158  00115C  0E01               	movlw	1
  6159  00115E  6E0E               	movwf	atoi@neg,c
  6160  001160                     l2703:
  6161  001160  4A08               	infsnz	atoi@s,f,c
  6162  001162  2A09               	incf	atoi@s+1,f,c
  6163  001164  D02E               	goto	l2711
  6164  001166                     l2705:
  6165  001166  C008  FFF6         	movff	atoi@s,tblptrl
  6166  00116A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6167  00116E                     	if	0	;tblptru may be non-zero
  6168  00116E                     	endif
  6169  00116E                     	if	0	;tblptru may be non-zero
  6170  00116E                     	endif
  6171  00116E  0008               	tblrd		*
  6172  001170  50F5               	movf	tablat,w,c
  6173  001172  6E0A               	movwf	??_atoi& (0+255),c
  6174  001174  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6175                           
  6176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6177                           ; Switch size 1, requested type "simple"
  6178                           ; Number of cases is 1, Range of values is 0 to 0
  6179                           ; switch strategies available:
  6180                           ; Name         Instructions Cycles
  6181                           ; simple_byte            4     3 (average)
  6182                           ;	Chosen strategy is simple_byte
  6183  001176  500B               	movf	??_atoi+1,w,c
  6184  001178  0A00               	xorlw	0	; case 0
  6185  00117A  A4D8               	btfss	status,2,c
  6186  00117C  D022               	goto	l2711
  6187                           
  6188                           ; Switch size 1, requested type "simple"
  6189                           ; Number of cases is 2, Range of values is 43 to 45
  6190                           ; switch strategies available:
  6191                           ; Name         Instructions Cycles
  6192                           ; simple_byte            7     4 (average)
  6193                           ;	Chosen strategy is simple_byte
  6194  00117E  500A               	movf	??_atoi,w,c
  6195  001180  0A2B               	xorlw	43	; case 43
  6196  001182  B4D8               	btfsc	status,2,c
  6197  001184  D7ED               	goto	l2703
  6198  001186  0A06               	xorlw	6	; case 45
  6199  001188  B4D8               	btfsc	status,2,c
  6200  00118A  D7E6               	goto	l2701
  6201  00118C  D01A               	goto	l2711
  6202  00118E                     l2707:
  6203  00118E  C015  F001         	movff	atoi@n,___wmul@multiplier
  6204  001192  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6205  001196  0E00               	movlw	0
  6206  001198  6E04               	movwf	___wmul@multiplicand+1,c
  6207  00119A  0E0A               	movlw	10
  6208  00119C  6E03               	movwf	___wmul@multiplicand,c
  6209  00119E  ECCC  F00C         	call	___wmul	;wreg free
  6210  0011A2  C008  FFF6         	movff	atoi@s,tblptrl
  6211  0011A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6212  0011AA                     	if	0	;tblptru may be non-zero
  6213  0011AA                     	endif
  6214  0011AA                     	if	0	;tblptru may be non-zero
  6215  0011AA                     	endif
  6216  0011AA  0008               	tblrd		*
  6217  0011AC  50F5               	movf	tablat,w,c
  6218  0011AE  5E01               	subwf	?___wmul,f,c
  6219  0011B0  0E00               	movlw	0
  6220  0011B2  5A02               	subwfb	?___wmul+1,f,c
  6221  0011B4  0E30               	movlw	48
  6222  0011B6  2401               	addwf	?___wmul,w,c
  6223  0011B8  6E15               	movwf	atoi@n,c
  6224  0011BA  0E00               	movlw	0
  6225  0011BC  2002               	addwfc	?___wmul+1,w,c
  6226  0011BE  6E16               	movwf	atoi@n+1,c
  6227  0011C0  D7CF               	goto	l2703
  6228  0011C2                     l2711:
  6229  0011C2  0ED0               	movlw	208
  6230  0011C4  6E0A               	movwf	??_atoi& (0+255),c
  6231  0011C6  0EFF               	movlw	255
  6232  0011C8  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6233  0011CA  C008  FFF6         	movff	atoi@s,tblptrl
  6234  0011CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6235  0011D2                     	if	0	;tblptru may be non-zero
  6236  0011D2                     	endif
  6237  0011D2                     	if	0	;tblptru may be non-zero
  6238  0011D2                     	endif
  6239  0011D2  0008               	tblrd		*
  6240  0011D4  50F5               	movf	tablat,w,c
  6241  0011D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6242  0011D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6243  0011DA  500A               	movf	??_atoi,w,c
  6244  0011DC  260C               	addwf	??_atoi+2,f,c
  6245  0011DE  500B               	movf	??_atoi+1,w,c
  6246  0011E0  220D               	addwfc	??_atoi+3,f,c
  6247  0011E2  500D               	movf	??_atoi+3,w,c
  6248  0011E4  E106               	bnz	u2210
  6249  0011E6  0E0A               	movlw	10
  6250  0011E8  5C0C               	subwf	??_atoi+2,w,c
  6251  0011EA  B0D8               	btfsc	status,0,c
  6252  0011EC  D002               	goto	u2210
  6253  0011EE  0E01               	movlw	1
  6254  0011F0  D001               	goto	u2220
  6255  0011F2                     u2210:
  6256  0011F2  0E00               	movlw	0
  6257  0011F4                     u2220:
  6258  0011F4  6E12               	movwf	_atoi$1205,c
  6259  0011F6  6A13               	clrf	_atoi$1205+1,c
  6260  0011F8  5012               	movf	_atoi$1205,w,c
  6261  0011FA  1013               	iorwf	_atoi$1205+1,w,c
  6262  0011FC  A4D8               	btfss	status,2,c
  6263  0011FE  D7C7               	goto	l2707
  6264  001200  500E               	movf	atoi@neg,w,c
  6265  001202  100F               	iorwf	atoi@neg+1,w,c
  6266  001204  A4D8               	btfss	status,2,c
  6267  001206  D00D               	goto	l1140
  6268  001208  C015  F00A         	movff	atoi@n,??_atoi
  6269  00120C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6270  001210  1E0A               	comf	??_atoi,f,c
  6271  001212  1E0B               	comf	??_atoi+1,f,c
  6272  001214  4A0A               	infsnz	??_atoi,f,c
  6273  001216  2A0B               	incf	??_atoi+1,f,c
  6274  001218  C00A  F008         	movff	??_atoi,?_atoi
  6275  00121C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6276  001220  0012               	return	
  6277  001222                     l1140:
  6278  001222  C015  F008         	movff	atoi@n,?_atoi
  6279  001226  C016  F009         	movff	atoi@n+1,?_atoi+1
  6280  00122A  0012               	return		;funcret
  6281  00122C                     __end_of_atoi:
  6282                           	opt callstack 0
  6283                           
  6284 ;; *************** function _isspace *****************
  6285 ;; Defined at:
  6286 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  c               2    0[COMRAM] int 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  2    0[COMRAM] int 
  6293 ;; Registers used:
  6294 ;;		wreg, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;Total ram usage:        7 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    1
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_atoi
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text31
  6315  00176E                     __ptext31:
  6316                           	opt callstack 0
  6317  00176E                     _isspace:
  6318                           	opt callstack 25
  6319                           
  6320                           ;incstack = 0
  6321  00176E  0E01               	movlw	1
  6322  001770  6E07               	movwf	_isspace$1230,c
  6323  001772  0E20               	movlw	32
  6324  001774  1801               	xorwf	isspace@c,w,c
  6325  001776  1002               	iorwf	isspace@c+1,w,c
  6326  001778  B4D8               	btfsc	status,2,c
  6327  00177A  D014               	goto	l2509
  6328  00177C  0EF7               	movlw	247
  6329  00177E  6E03               	movwf	??_isspace& (0+255),c
  6330  001780  0EFF               	movlw	255
  6331  001782  6E04               	movwf	(??_isspace+1)& (0+255),c
  6332  001784  C001  F005         	movff	isspace@c,??_isspace+2
  6333  001788  C002  F006         	movff	isspace@c+1,??_isspace+3
  6334  00178C  5003               	movf	??_isspace,w,c
  6335  00178E  2605               	addwf	??_isspace+2,f,c
  6336  001790  5004               	movf	??_isspace+1,w,c
  6337  001792  2206               	addwfc	??_isspace+3,f,c
  6338  001794  5006               	movf	??_isspace+3,w,c
  6339  001796  E104               	bnz	u1750
  6340  001798  0E05               	movlw	5
  6341  00179A  5C05               	subwf	??_isspace+2,w,c
  6342  00179C  A0D8               	btfss	status,0,c
  6343  00179E  D002               	goto	l2509
  6344  0017A0                     u1750:
  6345  0017A0  0E00               	movlw	0
  6346  0017A2  6E07               	movwf	_isspace$1230,c
  6347  0017A4                     l2509:
  6348  0017A4  C007  F001         	movff	_isspace$1230,?_isspace
  6349  0017A8  6A02               	clrf	?_isspace+1,c
  6350  0017AA  0012               	return		;funcret
  6351  0017AC                     __end_of_isspace:
  6352                           	opt callstack 0
  6353                           
  6354 ;; *************** function _isdigit *****************
  6355 ;; Defined at:
  6356 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  c               2    0[COMRAM] int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2    0[COMRAM] int 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;Total ram usage:        6 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_vfpfcnvrt
  6381 ;;		_atoi
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text32
  6386  001918                     __ptext32:
  6387                           	opt callstack 0
  6388  001918                     _isdigit:
  6389                           	opt callstack 26
  6390                           
  6391                           ;incstack = 0
  6392  001918  0ED0               	movlw	208
  6393  00191A  6E03               	movwf	??_isdigit& (0+255),c
  6394  00191C  0EFF               	movlw	255
  6395  00191E  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6396  001920  C001  F005         	movff	isdigit@c,??_isdigit+2
  6397  001924  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6398  001928  5003               	movf	??_isdigit,w,c
  6399  00192A  2605               	addwf	??_isdigit+2,f,c
  6400  00192C  5004               	movf	??_isdigit+1,w,c
  6401  00192E  2206               	addwfc	??_isdigit+3,f,c
  6402  001930  5006               	movf	??_isdigit+3,w,c
  6403  001932  E106               	bnz	u1590
  6404  001934  0E0A               	movlw	10
  6405  001936  5C05               	subwf	??_isdigit+2,w,c
  6406  001938  B0D8               	btfsc	status,0,c
  6407  00193A  D002               	goto	u1590
  6408  00193C  0E01               	movlw	1
  6409  00193E  D001               	goto	u1600
  6410  001940                     u1590:
  6411  001940  0E00               	movlw	0
  6412  001942                     u1600:
  6413  001942  6E01               	movwf	?_isdigit,c
  6414  001944  6A02               	clrf	?_isdigit+1,c
  6415  001946  0012               	return		;funcret
  6416  001948                     __end_of_isdigit:
  6417                           	opt callstack 0
  6418                           
  6419 ;; *************** function ___wmul *****************
  6420 ;; Defined at:
  6421 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  multiplier      2    0[COMRAM] unsigned int 
  6424 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  product         2    4[COMRAM] unsigned int 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2    0[COMRAM] unsigned int 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0, prodl, prodh
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;Total ram usage:        6 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_atoi
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text33
  6451  001998                     __ptext33:
  6452                           	opt callstack 0
  6453  001998                     ___wmul:
  6454                           	opt callstack 25
  6455                           
  6456                           ;incstack = 0
  6457  001998  5001               	movf	___wmul@multiplier,w,c
  6458  00199A  0203               	mulwf	___wmul@multiplicand,c
  6459  00199C  CFF3 F005          	movff	prodl,___wmul@product
  6460  0019A0  CFF4 F006          	movff	prodh,___wmul@product+1
  6461  0019A4  5001               	movf	___wmul@multiplier,w,c
  6462  0019A6  0204               	mulwf	___wmul@multiplicand+1,c
  6463  0019A8  50F3               	movf	prodl,w,c
  6464  0019AA  2606               	addwf	___wmul@product+1,f,c
  6465  0019AC  5002               	movf	___wmul@multiplier+1,w,c
  6466  0019AE  0203               	mulwf	___wmul@multiplicand,c
  6467  0019B0  50F3               	movf	prodl,w,c
  6468  0019B2  2606               	addwf	___wmul@product+1,f,c
  6469  0019B4  C005  F001         	movff	___wmul@product,?___wmul
  6470  0019B8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6471  0019BC  0012               	return		;funcret
  6472  0019BE                     __end_of___wmul:
  6473                           	opt callstack 0
  6474                           
  6475 ;; *************** function _lcdInst *****************
  6476 ;; Defined at:
  6477 ;;		line 64 in file "lcd.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  data            1    wreg     unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  data            1    3[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;Total ram usage:        1 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    4
  6498 ;; This function calls:
  6499 ;;		_send_byte
  6500 ;; This function is called by:
  6501 ;;		_doDisplayLog
  6502 ;;		_doOperation
  6503 ;;		_main
  6504 ;;		_initLCD
  6505 ;;		_lcd_shift_cursor
  6506 ;;		_lcd_shift_display
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text34
  6511  001A70                     __ptext34:
  6512                           	opt callstack 0
  6513  001A70                     _lcdInst:
  6514                           	opt callstack 24
  6515                           
  6516                           ;incstack = 0
  6517                           ;lcdInst@data stored from wreg
  6518  001A70  6E04               	movwf	lcdInst@data,c
  6519                           
  6520                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  6521  001A72  948C               	bcf	3980,2,c	;volatile
  6522                           
  6523                           ;lcd.c: 66:     send_byte(data);
  6524  001A74  5004               	movf	lcdInst@data,w,c
  6525  001A76  EC20  F00D         	call	_send_byte
  6526  001A7A  0012               	return		;funcret
  6527  001A7C                     __end_of_lcdInst:
  6528                           	opt callstack 0
  6529                           
  6530 ;; *************** function _send_byte *****************
  6531 ;; Defined at:
  6532 ;;		line 55 in file "lcd.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  data            1    wreg     unsigned char 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  data            1    2[COMRAM] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;Total ram usage:        1 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    3
  6553 ;; This function calls:
  6554 ;;		_send_nibble
  6555 ;; This function is called by:
  6556 ;;		_lcdInst
  6557 ;;		_initLCD
  6558 ;;		_putch
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text35
  6563  001A40                     __ptext35:
  6564                           	opt callstack 0
  6565  001A40                     _send_byte:
  6566                           	opt callstack 25
  6567                           
  6568                           ;incstack = 0
  6569                           ;send_byte@data stored from wreg
  6570  001A40  6E03               	movwf	send_byte@data,c
  6571                           
  6572                           ;lcd.c: 57:     send_nibble(data >> 4);
  6573  001A42  3803               	swapf	send_byte@data,w,c
  6574  001A44  0B0F               	andlw	15
  6575  001A46  EC15  F00D         	call	_send_nibble
  6576                           
  6577                           ;lcd.c: 60:     send_nibble(data);
  6578  001A4A  5003               	movf	send_byte@data,w,c
  6579  001A4C  EC15  F00D         	call	_send_nibble
  6580  001A50  0012               	return		;funcret
  6581  001A52                     __end_of_send_byte:
  6582                           	opt callstack 0
  6583                           
  6584 ;; *************** function _send_nibble *****************
  6585 ;; Defined at:
  6586 ;;		line 44 in file "lcd.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  data            1    wreg     unsigned char 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  data            1    1[COMRAM] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;Total ram usage:        1 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    2
  6607 ;; This function calls:
  6608 ;;		_pulse_e
  6609 ;; This function is called by:
  6610 ;;		_send_byte
  6611 ;;		_initLCD
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text36
  6616  001A2A                     __ptext36:
  6617                           	opt callstack 0
  6618  001A2A                     _send_nibble:
  6619                           	opt callstack 26
  6620                           
  6621                           ;incstack = 0
  6622                           ;send_nibble@data stored from wreg
  6623  001A2A  6E02               	movwf	send_nibble@data,c
  6624                           
  6625                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  6626  001A2C  508C               	movf	3980,w,c	;volatile
  6627  001A2E  0B0F               	andlw	15
  6628  001A30  6E8C               	movwf	3980,c	;volatile
  6629                           
  6630                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  6631  001A32  3802               	swapf	send_nibble@data,w,c
  6632  001A34  0BF0               	andlw	240
  6633  001A36  108C               	iorwf	3980,w,c	;volatile
  6634  001A38  6E8C               	movwf	3980,c	;volatile
  6635                           
  6636                           ;lcd.c: 48:     pulse_e();
  6637  001A3A  ECA4  F00C         	call	_pulse_e	;wreg free
  6638  001A3E  0012               	return		;funcret
  6639  001A40                     __end_of_send_nibble:
  6640                           	opt callstack 0
  6641                           
  6642 ;; *************** function _pulse_e *****************
  6643 ;; Defined at:
  6644 ;;		line 28 in file "lcd.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  interruptSta    1    0[COMRAM] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        1 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_send_nibble
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text37
  6673  001948                     __ptext37:
  6674                           	opt callstack 0
  6675  001948                     _pulse_e:
  6676                           	opt callstack 26
  6677                           
  6678                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6679                           
  6680                           ;incstack = 0
  6681  001948  0E00               	movlw	0
  6682  00194A  BEF2               	btfsc	4082,7,c	;volatile
  6683  00194C  0E01               	movlw	1
  6684  00194E  6E01               	movwf	pulse_e@interruptState,c
  6685                           
  6686                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6687  001950  9EF2               	bcf	4082,7,c	;volatile
  6688                           
  6689                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6690  001952  868C               	bsf	3980,3,c	;volatile
  6691                           
  6692                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6693  001954  0E14               	movlw	20
  6694  001956                     u2917:
  6695  001956  2EE8               	decfsz	wreg,f,c
  6696  001958  D7FE               	bra	u2917
  6697  00195A  D000               	nop2	
  6698                           
  6699                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6700  00195C  968C               	bcf	3980,3,c	;volatile
  6701                           
  6702                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6703  00195E  0E53               	movlw	83
  6704  001960                     u2927:
  6705  001960  2EE8               	decfsz	wreg,f,c
  6706  001962  D7FE               	bra	u2927
  6707  001964  F000               	nop	
  6708                           
  6709                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6710  001966  B001               	btfsc	pulse_e@interruptState,0,c
  6711  001968  D002               	bra	u1375
  6712  00196A  9EF2               	bcf	4082,7,c	;volatile
  6713  00196C  D001               	bra	u1376
  6714  00196E                     u1375:
  6715  00196E  8EF2               	bsf	4082,7,c	;volatile
  6716  001970                     u1376:
  6717  001970  0012               	return		;funcret
  6718  001972                     __end_of_pulse_e:
  6719                           	opt callstack 0
  6720                           
  6721 ;; *************** function ___llmod *****************
  6722 ;; Defined at:
  6723 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  dividend        4    0[COMRAM] unsigned long 
  6726 ;;  divisor         4    4[COMRAM] unsigned long 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  counter         1    8[COMRAM] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  4    0[COMRAM] unsigned long 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;Total ram usage:        9 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text38
  6753  0015C8                     __ptext38:
  6754                           	opt callstack 0
  6755  0015C8                     ___llmod:
  6756                           	opt callstack 29
  6757                           
  6758                           ;incstack = 0
  6759  0015C8  5005               	movf	___llmod@divisor,w,c
  6760  0015CA  1006               	iorwf	___llmod@divisor+1,w,c
  6761  0015CC  1007               	iorwf	___llmod@divisor+2,w,c
  6762  0015CE  1008               	iorwf	___llmod@divisor+3,w,c
  6763  0015D0  B4D8               	btfsc	status,2,c
  6764  0015D2  D024               	goto	l854
  6765  0015D4  0E01               	movlw	1
  6766  0015D6  6E09               	movwf	___llmod@counter,c
  6767  0015D8  D006               	goto	l3111
  6768  0015DA                     l3109:
  6769  0015DA  90D8               	bcf	status,0,c
  6770  0015DC  3605               	rlcf	___llmod@divisor,f,c
  6771  0015DE  3606               	rlcf	___llmod@divisor+1,f,c
  6772  0015E0  3607               	rlcf	___llmod@divisor+2,f,c
  6773  0015E2  3608               	rlcf	___llmod@divisor+3,f,c
  6774  0015E4  2A09               	incf	___llmod@counter,f,c
  6775  0015E6                     l3111:
  6776  0015E6  AE08               	btfss	___llmod@divisor+3,7,c
  6777  0015E8  D7F8               	goto	l3109
  6778  0015EA                     u2540:
  6779  0015EA  5005               	movf	___llmod@divisor,w,c
  6780  0015EC  5C01               	subwf	___llmod@dividend,w,c
  6781  0015EE  5006               	movf	___llmod@divisor+1,w,c
  6782  0015F0  5802               	subwfb	___llmod@dividend+1,w,c
  6783  0015F2  5007               	movf	___llmod@divisor+2,w,c
  6784  0015F4  5803               	subwfb	___llmod@dividend+2,w,c
  6785  0015F6  5008               	movf	___llmod@divisor+3,w,c
  6786  0015F8  5804               	subwfb	___llmod@dividend+3,w,c
  6787  0015FA  A0D8               	btfss	status,0,c
  6788  0015FC  D008               	goto	l3117
  6789  0015FE  5005               	movf	___llmod@divisor,w,c
  6790  001600  5E01               	subwf	___llmod@dividend,f,c
  6791  001602  5006               	movf	___llmod@divisor+1,w,c
  6792  001604  5A02               	subwfb	___llmod@dividend+1,f,c
  6793  001606  5007               	movf	___llmod@divisor+2,w,c
  6794  001608  5A03               	subwfb	___llmod@dividend+2,f,c
  6795  00160A  5008               	movf	___llmod@divisor+3,w,c
  6796  00160C  5A04               	subwfb	___llmod@dividend+3,f,c
  6797  00160E                     l3117:
  6798  00160E  90D8               	bcf	status,0,c
  6799  001610  3208               	rrcf	___llmod@divisor+3,f,c
  6800  001612  3207               	rrcf	___llmod@divisor+2,f,c
  6801  001614  3206               	rrcf	___llmod@divisor+1,f,c
  6802  001616  3205               	rrcf	___llmod@divisor,f,c
  6803  001618  2E09               	decfsz	___llmod@counter,f,c
  6804  00161A  D7E7               	goto	u2540
  6805  00161C                     l854:
  6806  00161C  C001  F001         	movff	___llmod@dividend,?___llmod
  6807  001620  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  6808  001624  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  6809  001628  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  6810  00162C  0012               	return		;funcret
  6811  00162E                     __end_of___llmod:
  6812                           	opt callstack 0
  6813                           
  6814 ;; *************** function _I2C_Master_Read *****************
  6815 ;; Defined at:
  6816 ;;		line 77 in file "I2C.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  ackBit          1    wreg     unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  ackBit          1    1[COMRAM] unsigned char 
  6821 ;;  receivedByte    1    2[COMRAM] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      unsigned char 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    2
  6838 ;; This function calls:
  6839 ;;		_I2C_Master_Wait
  6840 ;; This function is called by:
  6841 ;;		_main
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           	psect	text39
  6846  0019E4                     __ptext39:
  6847                           	opt callstack 0
  6848  0019E4                     _I2C_Master_Read:
  6849                           	opt callstack 28
  6850                           
  6851                           ;incstack = 0
  6852                           ;I2C_Master_Read@ackBit stored from wreg
  6853  0019E4  6E02               	movwf	I2C_Master_Read@ackBit,c
  6854                           
  6855                           ;I2C.c: 78:     I2C_Master_Wait();
  6856  0019E6  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  6857                           
  6858                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  6859  0019EA  86C5               	bsf	4037,3,c	;volatile
  6860                           
  6861                           ;I2C.c: 81:     I2C_Master_Wait();
  6862  0019EC  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  6863                           
  6864                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  6865  0019F0  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  6866                           
  6867                           ;I2C.c: 86:     I2C_Master_Wait();
  6868  0019F4  EC29  F00D         	call	_I2C_Master_Wait	;wreg free
  6869                           
  6870                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  6871  0019F8  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  6872  0019FA  D002               	bra	u2525
  6873  0019FC  9AC5               	bcf	4037,5,c	;volatile
  6874  0019FE  D001               	bra	u2526
  6875  001A00                     u2525:
  6876  001A00  8AC5               	bsf	4037,5,c	;volatile
  6877  001A02                     u2526:
  6878                           
  6879                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  6880  001A02  88C5               	bsf	4037,4,c	;volatile
  6881                           
  6882                           ;I2C.c: 90:     return receivedByte;
  6883  001A04  5003               	movf	I2C_Master_Read@receivedByte,w,c
  6884  001A06  0012               	return		;funcret
  6885  001A08                     __end_of_I2C_Master_Read:
  6886                           	opt callstack 0
  6887                           
  6888 ;; *************** function _I2C_Master_Wait *****************
  6889 ;; Defined at:
  6890 ;;		line 21 in file "I2C.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;Total ram usage:        1 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_I2C_Master_Start
  6915 ;;		_I2C_Master_Stop
  6916 ;;		_I2C_Master_Write
  6917 ;;		_I2C_Master_Read
  6918 ;;		_I2C_Master_RepeatedStart
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text40
  6923  001A52                     __ptext40:
  6924                           	opt callstack 0
  6925  001A52                     _I2C_Master_Wait:
  6926                           	opt callstack 27
  6927                           
  6928                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6929                           
  6930                           ;I2C.c: 28:     }
  6931                           
  6932                           ;incstack = 0
  6933  001A52  B4C7               	btfsc	4039,2,c	;volatile
  6934  001A54  D7FE               	goto	_I2C_Master_Wait
  6935  001A56  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  6936  001A5A  0E1F               	movlw	31
  6937  001A5C  1601               	andwf	??_I2C_Master_Wait,f,c
  6938  001A5E  B4D8               	btfsc	status,2,c
  6939  001A60  0012               	return	
  6940  001A62  D7F7               	goto	_I2C_Master_Wait
  6941  001A64                     __end_of_I2C_Master_Wait:
  6942                           	opt callstack 0
  6943                           
  6944 ;; *************** function _interruptHandler *****************
  6945 ;; Defined at:
  6946 ;;		line 598 in file "main.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		Interrupt level 2
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	intcode
  6974  000008                     __pintcode:
  6975                           	opt callstack 0
  6976  000008                     _interruptHandler:
  6977                           	opt callstack 18
  6978                           
  6979                           ;incstack = 0
  6980  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6981  00000A  EDDF  F00C         	call	int_func,f	;refresh shadow registers
  6982                           
  6983                           	psect	intcode_body
  6984  0019BE                     __pintcode_body:
  6985                           	opt callstack 18
  6986  0019BE                     int_func:
  6987                           	opt callstack 18
  6988  0019BE  0006               	pop		; remove dummy address from shadow register refresh
  6989                           
  6990                           ;main.c: 600:     if(INT1IF){
  6991  0019C0  A0F0               	btfss	4080,0,c	;volatile
  6992  0019C2  D004               	goto	i2l179
  6993                           
  6994                           ;main.c: 603:         keyPressed = 1;
  6995  0019C4  0E01               	movlw	1
  6996  0019C6  6E7E               	movwf	_keyPressed,c	;volatile
  6997                           
  6998                           ;main.c: 604:         INT1IF = 0;
  6999  0019C8  90F0               	bcf	4080,0,c	;volatile
  7000                           
  7001                           ;main.c: 605:     } else if (TMR0IF) {
  7002  0019CA  D00A               	goto	i2l182
  7003  0019CC                     i2l179:
  7004  0019CC  A4F2               	btfss	4082,2,c	;volatile
  7005  0019CE  D008               	goto	i2l182
  7006                           
  7007                           ;main.c: 606:     INTCONbits.TMR0IF = 0;
  7008  0019D0  94F2               	bcf	4082,2,c	;volatile
  7009                           
  7010                           ;main.c: 607:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  7011  0019D2  0EB3               	movlw	179
  7012  0019D4  6ED7               	movwf	4055,c	;volatile
  7013                           
  7014                           ;main.c: 608:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  7015  0019D6  0EB5               	movlw	181
  7016  0019D8  6ED6               	movwf	4054,c	;volatile
  7017                           
  7018                           ;main.c: 609:     secondsMeasured++;
  7019  0019DA  0100               	movlb	0	; () banked
  7020  0019DC  4B88               	infsnz	_secondsMeasured& (0+255),f,b	;volatile
  7021  0019DE  2B89               	incf	(_secondsMeasured+1)& (0+255),f,b	;volatile
  7022  0019E0                     i2l182:
  7023  0019E0  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7024  0019E2  0011               	retfie		f
  7025  0019E4                     __end_of_interruptHandler:
  7026                           	opt callstack 0
  7027                           
  7028                           	psect	rparam
  7029  0000                     
  7030                           	psect	temp
  7031  00007F                     btemp:
  7032                           	opt callstack 0
  7033  00007F                     	ds	1
  7034  0000                     int$flags	set	btemp
  7035  0000                     wtemp8	set	btemp+1
  7036  0000                     ttemp5	set	btemp+1
  7037  0000                     ttemp6	set	btemp+4
  7038  0000                     ttemp7	set	btemp+8
  7039                           tosu	equ	0xFFF
  7040                           tosh	equ	0xFFE
  7041                           tosl	equ	0xFFD
  7042                           stkptr	equ	0xFFC
  7043                           pclatu	equ	0xFFB
  7044                           pclath	equ	0xFFA
  7045                           pcl	equ	0xFF9
  7046                           tblptru	equ	0xFF8
  7047                           tblptrh	equ	0xFF7
  7048                           tblptrl	equ	0xFF6
  7049                           tablat	equ	0xFF5
  7050                           prodh	equ	0xFF4
  7051                           prodl	equ	0xFF3
  7052                           indf0	equ	0xFEF
  7053                           postinc0	equ	0xFEE
  7054                           postdec0	equ	0xFED
  7055                           preinc0	equ	0xFEC
  7056                           plusw0	equ	0xFEB
  7057                           fsr0h	equ	0xFEA
  7058                           fsr0l	equ	0xFE9
  7059                           wreg	equ	0xFE8
  7060                           indf1	equ	0xFE7
  7061                           postinc1	equ	0xFE6
  7062                           postdec1	equ	0xFE5
  7063                           preinc1	equ	0xFE4
  7064                           plusw1	equ	0xFE3
  7065                           fsr1h	equ	0xFE2
  7066                           fsr1l	equ	0xFE1
  7067                           bsr	equ	0xFE0
  7068                           indf2	equ	0xFDF
  7069                           postinc2	equ	0xFDE
  7070                           postdec2	equ	0xFDD
  7071                           preinc2	equ	0xFDC
  7072                           plusw2	equ	0xFDB
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8


Data Sizes:
    Strings     296
    Constant    30
    Data        7
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     41      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_43(CODE[16]), 
		 -> STR_41(CODE[14]), STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), 
		 -> STR_33(CODE[13]), STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), 
		 -> STR_25(CODE[14]), STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_43(CODE[16]), 
		 -> STR_41(CODE[14]), STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), 
		 -> STR_33(CODE[13]), STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), 
		 -> STR_25(CODE[14]), STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1243_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_43(CODE[16]), STR_41(CODE[14]), STR_39(CODE[11]), 
		 -> STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), STR_31(CODE[13]), 
		 -> STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), STR_23(CODE[10]), 
		 -> STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_43(CODE[16]), STR_41(CODE[14]), STR_39(CODE[11]), 
		 -> STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), STR_31(CODE[13]), 
		 -> STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), STR_23(CODE[10]), 
		 -> STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_43(CODE[16]), STR_41(CODE[14]), 
		 -> STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), 
		 -> STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), 
		 -> STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), 
		 -> STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), 
		 -> STR_4(CODE[16]), STR_2(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_doDisplayLog
    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_printf
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_doOperation

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   62511
                                             23 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     657
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         32    32      0   20443
                                            123 COMRAM     1     1      0
                                              0 BANK0     23    23      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                         9     7      2   20068
                                            123 COMRAM     2     0      2
                                              0 BANK0      7     7      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   19742
                                            111 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17934
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   17553
                                             70 COMRAM    33    27      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5569
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2184
                                             13 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5664
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4015
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1736
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1335
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      60       5       75.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      34        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 20 23:13:04 2019

                             l97 0E4C                      __CFG_CPD$ON 000000  
            ___wmul@multiplicand 0003                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                              l320 08A0  
                            l307 1380                              l156 0802  
                            l318 0898                              l347 100E  
                            l461 14E0                              l366 0A88  
                            l368 0A90                              l854 161C  
                   __CFG_CPB$OFF 000000                              _PSA 007EAB  
                            _abs 1886                              _pad 1350  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_abs 0013  
                           l1140 1222                             l1109 18AE  
                           l1207 1720                             l3011 0E20  
                           l3003 0E0A                             l3111 15E6  
                           l3007 0E16                             l3017 0E2E  
                           l3201 0584                             l3117 160E  
                           l3109 15DA                             l3061 1418  
                           l2351 1808                             l3071 145C  
                           l3311 07C8                             l3303 07B0  
                           l2441 0EDA                             l2337 150A  
                           l2601 105C                             l2443 0EEE  
                           l2435 0EB4                             l2347 17F2  
                           l2355 1734                             l2371 136A  
                           l2611 10B6                             l3307 07BC  
                           l3219 05E8                             l3163 044E  
                           l2509 17A4                             l2701 1158  
                           l2461 0F86                             l2453 0F4A  
                           l2429 0E8C                             l2357 1738  
                           l2381 13A2                             l2533 08BA  
                           l3253 06C8                             l3181 04E2  
                           l3173 04B4                             l2711 11C2  
                           l2703 1160                             l2375 1378  
                           l2519 087A                             l2615 10CE  
                           l2607 109A                             l3319 07D6  
                           l3239 0668                             l3271 0732  
                           l2705 1166                             l2457 0F60  
                           l2481 1296                             l2473 1258  
                           l2385 13D0                             l2377 138A  
                           l2537 08C8                             l2641 0AF4  
                           l2633 0AD2                             l2801 02D0  
                           l2707 118E                             l2483 12AA  
                           l2571 0A40                             l2547 09C0  
                           l2627 0AA4                             l3291 078A  
                           l3283 0772                             l3259 06D8  
                           l2493 1308                             l2477 127C  
                           l2821 03DA                             l3269 0702  
                           l2567 0A28                             l2583 0FD2  
                           l2655 0B82                             l2663 0BF8  
                           l2815 039E                             l2751 007E  
                           l2743 0072                             l2735 0058  
                           l2831 03FC                             l3295 0796  
                           l3287 077E                             l2497 132E  
                           l2489 12F2                             l2593 1026  
                           l2825 03E4                             l2737 005C  
                           l2761 00D0                             l2755 0084  
                           l2747 0078                             l2739 006C  
                           l3299 07A4                             l2685 10FE  
                           l2597 103E                             l2773 013E  
                           ?_pad 0015                             l2695 1148  
                           l2687 1102                             l2679 0C70  
                           l2775 015C                             l2759 008E  
                           l2951 0CB8                             l2793 0262  
                           l2777 016A                             l2857 169E  
                           l2859 16C4                             l2867 1492  
                           l2869 149E                             l2991 0DCA  
                           l2879 14D2                             l2969 0D32  
                           l2989 0DAC                             STR_1 FFFC  
                           STR_2 FFB4                             STR_3 FFFC  
                           STR_4 FEF8                             STR_5 FFFC  
                           STR_6 FF63                             STR_7 FFFC  
                           STR_8 FF08                             STR_9 FFFC  
                           u2000 10E2                             u2020 0A7E  
                           u2110 0BD4                             u2120 0C08  
                           u2040 0AF0                             u2210 11F2  
                           u1410 154A                             u2050 0B26  
                           u2115 0BC2                             u2220 11F4  
                           u2140 0C2A                             u2060 0B28  
                           u2300 01A2                             u2141 0C28  
                           u1510 1894                             u1430 175A  
                           u2150 0C38                             u2310 01A4  
                           _LATB 000F8A                             u1600 1942  
                           u1520 1910                             u2160 0C3E  
                           u2080 0B60                             u2320 01B0  
                           _LATD 000F8C                             u1530 1912  
                           u1450 18E0                             u2090 0B62  
                           u1540 184C                             u1460 18E2  
                           u2340 01E4                             u1437 1750  
                           u2190 1144                             u1710 12AE  
                           u1390 1502                             u1550 184E  
                           u2510 146E                             u2430 14A2  
                           u1375 196E                             u1631 0EBA  
                           u1376 1970                             u1800 088E  
                           u1560 1708                             u1650 0EF2  
                           u1570 170A                             u2370 0304  
                           u2540 15EA                             u1820 08B4  
                           u2525 1A00                             u2526 1A02  
                           u1590 1940                             u1750 17A0  
                           u1830 09CE                             u2630 0792  
                           u1911 0FB2                             u2455 1656  
                           u1760 084C                             u1850 09F0  
                           u1770 084E                             u1851 09EE  
                           u1860 09FE                             u1870 0A04  
                           u2807 0818                             u1960 1052  
                           u2817 1564                             u2737 04F0  
                           u1890 0A12                             u1970 107E  
                           u2907 0E54                             u2827 157C  
                           u2747 0592                             u2917 1956  
                           u2837 158E                             u2757 05DA  
                           u2927 1960                             u2847 15B0  
                           u2767 05F6                             u1977 1074  
                           u2857 1438                             u2777 0676  
                           u2867 0CA8                             u2787 06F0  
                           u2877 0CC6                             u2797 0766  
                           u2887 0D40                             u2897 0DFE  
                           abs@a 0013                             _dbuf 0090  
                           _atoi 10EC                             _main 0430  
                           _dtoa 0824         __end_of_interruptHandler 19E4  
                           _keys FEB9                             _prec 0084  
                           _nout 0080                             pad@i 001C  
                           pad@p 0019                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001E                             fsr2l 000FD9  
                           _stoa 0FA8                             btemp 007F  
                           _xtoa 0A6A                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 001B            I2C_Master_Read@ackBit 0002  
               ?_I2C_Master_Init 000E                 ?_I2C_Master_Read 0001  
               ?_I2C_Master_Wait 0001                 ?_I2C_Master_Stop 0001  
                    ?_TIMER_INIT 0001                  __end_of___aodiv 0FA8  
                          ?_atoi 0008                            ?_main 0001  
                          ?_dtoa 0020                  __end_of___aomod 1350  
                          STR_10 FFF0                            STR_11 FFFC  
                          STR_20 FF37                            STR_12 FF28  
                          STR_13 FFFC                            STR_21 FF46  
                          STR_30 FFFC                            STR_22 FFFC  
                          STR_14 FED7                            STR_15 FFFC  
                          STR_23 FFCB                            STR_31 FF8D  
                          STR_40 FFFC                            STR_32 FFFC  
                          STR_24 FFFC                            STR_16 FF7F  
                          STR_17 FFF9                            STR_33 FF9A  
                          STR_25 FF71                            STR_41 FF55  
                          STR_42 FFFC                            STR_34 FFFC  
                          STR_26 FFFC                            STR_18 FFFC  
                          STR_19 FFD5                            STR_27 FFA7  
                          STR_35 FF18                            STR_43 FEE8  
                          STR_36 FFFC                            STR_28 FFFC  
                          STR_29 FFE7                            STR_37 FFDE  
                          STR_38 FFFC                            STR_39 FFC0  
                          ?_stoa 000E                  __end_of___lldiv 14F2  
                          ?_xtoa 0020                  __end_of___llmod 162E  
                          _T0PS0 007EA8                            _T0PS1 007EA9  
                          _T0PS2 007EAA                            i2l182 19E0  
                          i2l179 19CC                     main@keyValue 00D8  
                   vfpfcnvrt@fmt 0049                            _TMR0H 000FD7  
                   vfpfcnvrt@llu 0059                            _TMR0L 000FD6  
                          _PORTB 000F81                            _TRISB 000F93  
                          _TRISD 000F95                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                __end_of_lcdInst 1A7C                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                     main@keypress 00D4  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                __end_of_initLCD 15C8                   __CFG_EBTRB$OFF 000000  
                          _flags 0086                            _fputc 14F2  
                __end_of_isalpha 1854                            _fputs 17E8  
                __end_of_isdigit 1948                            atoi@n 0015  
                          pad@fp 0015                            atoi@s 0008  
                          _width 0082                            _putch 1A64  
                          main@i 00D5                            dtoa@d 0022  
                          dtoa@i 0042                            dtoa@n 003A  
                          dtoa@p 0034                            dtoa@s 0038  
                          dtoa@w 0036                  __end_of_islower 18E8  
                __end_of_isspace 17AC                  __end_of_isupper 1918  
                          tablat 000FF5                  send_nibble@data 0002  
                          plusw1 000FE3                            plusw2 000FDB  
           __size_of_doOperation 0086                            stoa@i 001A  
                          stoa@l 0022                            stoa@p 0020  
                          stoa@s 0010                            stoa@w 001C  
                __end_of_pulse_e 1972                            ttemp5 0080  
                          ttemp6 0083                            ttemp7 0087  
                          status 000FD8      I2C_Master_Read@receivedByte 0003  
                          wtemp8 0080                            xtoa@c 0045  
                          xtoa@d 0022                            xtoa@i 0043  
                          xtoa@n 003B                            xtoa@p 0037  
                          xtoa@w 0039                            xtoa@x 002A  
                __end_of_toupper 172A                   __CFG_PBADEN$ON 000000  
                   _toupper$1294 000D                  __initialization 17AC  
            main@currentLogState 00D6                     __end_of_atoi 122C  
                   __end_of_main 0824                     __end_of_dtoa 0A6A  
                   __end_of_keys FECA                     __end_of_stoa 10EC  
          __size_of_doDisplayLog 01C6                     __end_of_xtoa 0C9A  
                         ??_atoi 000A                           ??_main 00C7  
                         ??_dtoa 002A                           ??_stoa 0012  
                         ??_xtoa 002B                    __activetblptr 000002  
  doOperation@secondsMeasuredOld 00C5                ?_I2C_Master_Start 0001  
              ?_I2C_Master_Write 0002            __end_of_replaceOldLog 1AA0  
             ??_I2C_Master_Start 0002                           _ADCON1 000FC1  
             ??_I2C_Master_Write 0004                     ?_send_nibble 0001  
                         ?_fputc 0005                 ___llmod@dividend 0001  
                         ?_fputs 000E                           _T08BIT 007EAE  
                         ?_putch 0001                           _INT1IE 007F83  
                         _INT1IF 007F80                    vfpfcnvrt@done 0063  
                         _TMR0IE 007F95                           _TMR0IF 007F92  
                         _TMR0ON 007EAF                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                     _doDisplayLog 0C9A  
            __size_of_TIMER_INIT 0022                   __CFG_XINST$OFF 000000  
                   vfprintf@cfmt 006E                        ??___aodiv 0011  
                      ??___aomod 0011                           ___wmul 1998  
                 __CFG_STVREN$ON 000000                        ??___lldiv 0009  
                      ??___llmod 0009                           clear_0 17D2  
                      ??_lcdInst 0004                           _printf 1972  
                         pad@buf 0017                           dtoa@fp 0020  
                         _strlen 172A                        ??_initLCD 0005  
                         fputc@c 0005                           fputs@c 0012  
                         fputs@i 0013                           fputs@s 000E  
                      ??_isalpha 0003                        ??_isdigit 0003  
                      ??_islower 0003                     __mediumconst FEB8  
                      ??_isspace 0003                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         tblptru 000FF8                           stoa@cp 001E  
                         stoa@fp 000E                 __end_of_vfprintf 16E0  
                      ??_pulse_e 0001                           xtoa@fp 0020  
                      ??_toupper 0009            pulse_e@interruptState 0001  
                     __accesstop 0080          __end_of__initialization 17DA  
                  ___rparam_used 000001             __end_of_happynewyear FED1  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1A96  
                  __end_of_fputc 155E                    __end_of_fputs 1820  
                  __end_of_putch 1A70                          ??_fputc 0009  
                        ??_fputs 0012                          ??_putch 0004  
                     __pbssBANK0 0080                  _secondsMeasured 0088  
              ?_interruptHandler 0001      doDisplayLog@currentLogState 007C  
             ??_interruptHandler 0001                          ?___wmul 0001  
             __size_of_send_byte 0012                     ??_TIMER_INIT 0001  
                        ?_printf 0070                          ?_strlen 0001  
             __size_of_robotInit 0032               __size_of_vfpfcnvrt 041E  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7             __size_of_send_nibble 0016  
             __end_of_TIMER_INIT 1A2A                          __Hparam 0000  
                     _keyPressed 007E                          __Lparam 0000  
                        ___aodiv 0E60                          ___aomod 122C  
                        ___lldiv 1470                  __size_of___wmul 0026  
                        ___llmod 15C8                        ?_vfprintf 0068  
                        __pcinit 17AC                          __ramtop 1000  
                        _lcdInst 1A70                          __ptext0 0430  
                        __ptext1 1854                          __ptext2 155E  
                        __ptext3 162E                          __ptext4 1470  
                        __ptext5 1A9E                          __ptext6 13EA  
                        __ptext7 1A08                          __ptext8 1A7C  
                        __ptext9 1A86                  __size_of_printf 0026  
                      _T0CONbits 000FD5                  __size_of_strlen 0044  
                        _initLCD 155E                   _motorADistance 008C  
                   __size_of_abs 0032                     __size_of_pad 009A  
                        _isalpha 1820                          _isdigit 1918  
                 _motorBDistance 008A                          _islower 18B8  
                        _isspace 176E                          _isupper 18E8  
       __size_of_I2C_Master_Init 005C         __size_of_I2C_Master_Read 0024  
       __size_of_I2C_Master_Wait 0012         __size_of_I2C_Master_Stop 0008  
                        atoi@neg 000E                          _pulse_e 1948  
                  ??_doOperation 007C                   __pintcode_body 19BE  
                        _toupper 16E0      _topBreakBeamTriggeredChange 008F  
           end_of_initialization 17DA            __end_of_LCD_SIZE_HORZ FED4  
              __end_of_send_byte 1A52            __end_of_LCD_SIZE_VERT FED3  
                        fputc@fp 0007                    __Lmediumconst FEB8  
                        int_func 19BE                          fputs@fp 0010  
              __end_of_robotInit 1886        __size_of_I2C_Master_Start 0008  
      __size_of_I2C_Master_Write 000A                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 0430  
           doDisplayLog@keyValue 00B6                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 006E             doDisplayLog@keypress 00B4  
                        strlen@a 0003                          strlen@s 0001  
                      _TRISCbits 000F94                     _happynewyear FECA  
                  send_byte@data 0003              __end_of_doOperation 1470  
         __size_of_replaceOldLog 0002                      vfpfcnvrt@ap 004B  
                    vfpfcnvrt@cp 0061                      vfpfcnvrt@fp 0047  
                    vfpfcnvrt@ll 0051                   __end_of___wmul 19BE  
                 __end_of_printf 1998                   __end_of_strlen 176E  
            start_initialization 17AC                      __end_of_abs 18B8  
                    __end_of_pad 13EA                ??_I2C_Master_Init 0012  
              ??_I2C_Master_Read 0002                ??_I2C_Master_Wait 0001  
              ??_I2C_Master_Stop 0002                  ___llmod@divisor 0005  
                ___llmod@counter 0009                      vfprintf@fmt 006A  
                       ??___wmul 0005            main@currentRobotState 00D7  
       I2C_Master_Init@clockFreq 000E                      __pdataBANK0 00D9  
               __CFG_LPT1OSC$OFF 000000                         ??_printf 0078  
      __size_of_interruptHandler 19DC                         ??_strlen 0003  
                    __pbssCOMRAM 007E                    __pcstackBANK0 00B0  
               ___aodiv@dividend 0001                    _replaceOldLog 1A9E  
                    _doOperation 13EA                        _atoi$1203 0010  
                      _atoi$1204 0014                        _atoi$1205 0012  
               _I2C_Master_Start 1A8E                 _I2C_Master_Write 1A7C  
              __CFG_CCP2MX$PORTC 000000                        __pintcode 0008  
                  __pmediumconst FEB8                         ?___aodiv 0001  
                       ?___aomod 0001                 ___aodiv@quotient 0013  
                       ?___lldiv 0001                         ?___llmod 0001  
                       ?_lcdInst 0001                __size_of_vfprintf 0056  
                       ?_initLCD 0001                         ?_isalpha 0001  
                       ?_isdigit 0001                         ?_islower 0001  
                       ?_isspace 0001                   ?_replaceOldLog 0001  
                       ?_isupper 0001                    ??_send_nibble 0002  
                       ?_pulse_e 0001                   __size_of_fputc 006C  
                 __size_of_fputs 0038                         ?_toupper 0007  
                 __size_of_putch 000C                   ___wmul@product 0005  
                       _LATAbits 000F89                    ?_doDisplayLog 007C  
                       _LATDbits 000F8C                        _send_byte 1A40  
                 _LCD_LINE1_ADDR FED1                   _LCD_LINE2_ADDR FED6  
                 _LCD_LINE3_ADDR FED5                   _LCD_LINE4_ADDR FED4  
               __CFG_WDTPS$32768 000000                        _robotInit 1854  
                      _vfpfcnvrt 0012                ___wmul@multiplier 0001  
                   _isspace$1230 0007                       vfpfcnvrt@c 0067  
                      copy_data0 17C0                   ??_doDisplayLog 00B0  
         __end_of_LCD_LINE1_ADDR FED2           __end_of_LCD_LINE2_ADDR FED7  
         __end_of_LCD_LINE3_ADDR FED6           __end_of_LCD_LINE4_ADDR FED5  
            __end_of_send_nibble 1A40                       ?_send_byte 0001  
                       __Hrparam 0000  doDisplayLog@currentDisplayState 00B5  
                     vfprintf@ap 006C                         __Lrparam 0000  
                     vfprintf@fp 0068               __CFG_BOREN$SBORDIS 000000  
                     ?_robotInit 0001                 __size_of___aodiv 0148  
               __size_of___aomod 0124                 __size_of___lldiv 0082  
               __size_of___llmod 0066                       ?_vfpfcnvrt 0047  
                ___aodiv@divisor 0009                 _interruptHandler 0008  
                ___aodiv@counter 0011                 __size_of_lcdInst 000C  
                ??_replaceOldLog 0001                  _I2C_Master_Init 162E  
                _I2C_Master_Read 19E4                 __size_of_initLCD 006A  
                _I2C_Master_Wait 1A52                  _I2C_Master_Stop 1A86  
               __size_of_isalpha 0034                 __size_of_isdigit 0030  
                       _dtoa$707 0032                 __size_of_islower 0030  
               __size_of_isspace 003E                         __ptext10 1A8E  
                       __ptext11 0C9A                         __ptext20 0FA8  
                       __ptext12 1972                         __ptext21 0824  
                       __ptext13 168A                         __ptext30 10EC  
                       __ptext22 1350                         __ptext14 0012  
                       __ptext31 176E                         __ptext23 172A  
                       __ptext15 0A6A                         __ptext40 1A52  
                       __ptext32 1918                         __ptext24 17E8  
                       __ptext16 16E0                         __ptext33 1998  
                       __ptext25 14F2                         __ptext17 18B8  
                       __ptext34 1A70                         __ptext26 1A64  
                       __ptext18 18E8                         __ptext35 1A40  
                       __ptext27 1886                         __ptext19 1820  
                       __ptext36 1A2A                         __ptext28 122C  
                       __ptext37 1948                         __ptext29 0E60  
                       __ptext38 15C8                         __ptext39 19E4  
               __size_of_isupper 0030                 __size_of_pulse_e 002A  
               __size_of_toupper 004A                    __size_of_atoi 0140  
                  __size_of_main 03F4                    __size_of_dtoa 0246  
                  __size_of_stoa 0144                    __size_of_xtoa 0230  
                      stoa@F1139 00D9                         int$flags 007F  
                       _xtoa$730 0035                         _xtoa$729 0033  
                       _vfprintf 168A                        printf@fmt 0070  
                       main@tick 00D0                         main@time 00C9  
    I2C_Master_Write@byteToWrite 0002                 ___aomod@dividend 0001  
                      putch@data 0004         __end_of_I2C_Master_Start 1A96  
       __end_of_I2C_Master_Write 1A86                       _INTCONbits 000FF2  
                       isalpha@c 0001                         isdigit@c 0001  
                    _send_nibble 1A2A                     ?_doOperation 0001  
 _bottomBreakBeamTriggeredChange 008E                         intlevel2 0000  
                  _LCD_SIZE_HORZ FED3                         islower@c 0001  
                  _LCD_SIZE_VERT FED2                         isspace@c 0001  
               ___lldiv@dividend 0001                      ??_send_byte 0003  
                       isupper@c 0001                       _OSCCONbits 000FD3  
                    ??_robotInit 0016                         printf@ap 007A  
        __end_of_I2C_Master_Init 168A                  ___aomod@divisor 0009  
        __end_of_I2C_Master_Read 1A08          __end_of_I2C_Master_Wait 1A64  
        __end_of_I2C_Master_Stop 1A8E                      ??_vfpfcnvrt 004D  
                    lcdInst@data 0004                         stoa@nuls 0013  
                ___aomod@counter 0011                    _vfpfcnvrt$744 0065  
                     _TIMER_INIT 1A08             __end_of_doDisplayLog 0E60  
               ___lldiv@quotient 0009                         toupper@c 0007  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                   ___aodiv@sign 0012                     ___aomod@sign 0012  
