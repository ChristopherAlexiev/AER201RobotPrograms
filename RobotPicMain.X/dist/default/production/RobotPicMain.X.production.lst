

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 29 22:53:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.05
    92                           ; Generated 20/12/2018 GMT
    93                           ; 
    94                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4620 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataCOMRAM
   127  003ABB                     __pidataCOMRAM:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for _motorBDirection
   131  003ABB  01                 	db	1
   132                           
   133                           	psect	idataBANK0
   134  003ABC                     __pidataBANK0:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _motorADirection
   138  003ABC  01                 	db	1
   139                           
   140                           	psect	idataBANK1
   141  003AB4                     __pidataBANK1:
   142                           	opt callstack 0
   143                           
   144                           ;initializer for stoa@F1144
   145  003AB4  28                 	db	40
   146  003AB5  6E                 	db	110
   147  003AB6  75                 	db	117
   148  003AB7  6C                 	db	108
   149  003AB8  6C                 	db	108
   150  003AB9  29                 	db	41
   151  003ABA  00                 	db	0
   152                           
   153                           	psect	mediumconst
   154  00FE42                     __pmediumconst:
   155                           	opt callstack 0
   156  00FE42  00                 	db	0
   157  00FE43                     _keys:
   158                           	opt callstack 0
   159  00FE43  31                 	db	49
   160  00FE44  32                 	db	50
   161  00FE45  33                 	db	51
   162  00FE46  41                 	db	65
   163  00FE47  34                 	db	52
   164  00FE48  35                 	db	53
   165  00FE49  36                 	db	54
   166  00FE4A  42                 	db	66
   167  00FE4B  37                 	db	55
   168  00FE4C  38                 	db	56
   169  00FE4D  39                 	db	57
   170  00FE4E  43                 	db	67
   171  00FE4F  2A                 	db	42
   172  00FE50  30                 	db	48
   173  00FE51  23                 	db	35
   174  00FE52  44                 	db	68
   175  00FE53  00                 	db	0
   176  00FE54                     __end_of_keys:
   177                           	opt callstack 0
   178  00FE54                     _happynewyear:
   179                           	opt callstack 0
   180  00FE54  00                 	db	0
   181  00FE55  37                 	db	55
   182  00FE56  0E                 	db	14
   183  00FE57  02                 	db	2
   184  00FE58  13                 	db	19
   185  00FE59  02                 	db	2
   186  00FE5A  13                 	db	19
   187  00FE5B                     __end_of_happynewyear:
   188                           	opt callstack 0
   189  00FE5B                     _LCD_LINE1_ADDR:
   190                           	opt callstack 0
   191  00FE5B  00                 	db	0
   192  00FE5C                     __end_of_LCD_LINE1_ADDR:
   193                           	opt callstack 0
   194  00FE5C                     _LCD_SIZE_VERT:
   195                           	opt callstack 0
   196  00FE5C  04                 	db	4
   197  00FE5D                     __end_of_LCD_SIZE_VERT:
   198                           	opt callstack 0
   199  00FE5D                     _LCD_SIZE_HORZ:
   200                           	opt callstack 0
   201  00FE5D  10                 	db	16
   202  00FE5E                     __end_of_LCD_SIZE_HORZ:
   203                           	opt callstack 0
   204  00FE5E  10                 	db	16
   205  00FE5F                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   206                           	opt callstack 0
   207  00FE5F  03E8               	dw	1000
   208  00FE61  0000               	dw	0
   209  00FE63                     __end_ofinit_motor_PWM@FREQUENCY:
   210                           	opt callstack 0
   211  00FE63  50                 	db	80
   212  00FE64                     __end_of_LCD_LINE4_ADDR:
   213                           	opt callstack 0
   214  00FE64  10                 	db	16
   215  00FE65                     __end_of_LCD_LINE3_ADDR:
   216                           	opt callstack 0
   217  00FE65  40                 	db	64
   218  00FE66                     __end_of_LCD_LINE2_ADDR:
   219                           	opt callstack 0
   220  0000                     _SSPBUF	set	4041
   221  0000                     _SSPCON2bits	set	4037
   222  0000                     _SSPCON1	set	4038
   223  0000                     _SSPADD	set	4040
   224  0000                     _SSPCON1bits	set	4038
   225  0000                     _SSPCON2	set	4037
   226  0000                     _SSPSTAT	set	4039
   227  0000                     _LATDbits	set	3980
   228  0000                     _ADCON1	set	4033
   229  0000                     _LATB	set	3978
   230  0000                     _TRISD	set	3989
   231  0000                     _LATD	set	3980
   232  0000                     _EECON2	set	4007
   233  0000                     _EECON1bits	set	4006
   234  0000                     _EEADR	set	4009
   235  0000                     _EEDATA	set	4008
   236  0000                     _TRISAbits	set	3986
   237  0000                     _LATAbits	set	3977
   238  0000                     _CCPR2L	set	4027
   239  0000                     _CCPR1L	set	4030
   240  0000                     _PR2	set	4043
   241  0000                     _INTCONbits	set	4082
   242  0000                     _TMR0L	set	4054
   243  0000                     _TMR0H	set	4055
   244  0000                     _T0CONbits	set	4053
   245  0000                     _OSCCONbits	set	4051
   246  0000                     _TRISBbits	set	3987
   247  0000                     _TRISEbits	set	3990
   248  0000                     _TRISCbits	set	3988
   249  0000                     _PORTCbits	set	3970
   250  0000                     _PORTEbits	set	3972
   251  0000                     _PORTBbits	set	3969
   252  0000                     _PORTB	set	3969
   253  0000                     _INT0IF	set	32657
   254  0000                     _INT2IF	set	32641
   255  0000                     _TMR0IF	set	32658
   256  0000                     _INT1IF	set	32640
   257  0000                     _INT1IE	set	32643
   258  0000                     _CCP2Y	set	32212
   259  0000                     _CCP2X	set	32213
   260  0000                     _CCP1Y	set	32236
   261  0000                     _CCP1X	set	32237
   262  0000                     _TMR2ON	set	32338
   263  0000                     _T2CKPS1	set	32337
   264  0000                     _T2CKPS0	set	32336
   265  0000                     _CCP2M0	set	32208
   266  0000                     _CCP2M1	set	32209
   267  0000                     _CCP2M2	set	32210
   268  0000                     _CCP2M3	set	32211
   269  0000                     _CCP1M0	set	32232
   270  0000                     _CCP1M1	set	32233
   271  0000                     _CCP1M2	set	32234
   272  0000                     _CCP1M3	set	32235
   273  0000                     _P1M0	set	32238
   274  0000                     _P1M1	set	32239
   275  0000                     _TMR0ON	set	32431
   276  0000                     _TMR0IE	set	32661
   277  0000                     _PSA	set	32427
   278  0000                     _T0PS0	set	32424
   279  0000                     _T0PS1	set	32425
   280  0000                     _T0PS2	set	32426
   281  0000                     _T08BIT	set	32430
   282  0000                     _INT0IE	set	32660
   283  0000                     _INT2IE	set	32644
   284  00FE66                     STR_19:
   285                           
   286                           ; BSR set to: 0
   287  00FE66  54                 	db	84	;'T'
   288  00FE67  49                 	db	73	;'I'
   289  00FE68  52                 	db	82	;'R'
   290  00FE69  45                 	db	69	;'E'
   291  00FE6A  20                 	db	32
   292  00FE6B  50                 	db	80	;'P'
   293  00FE6C  4F                 	db	79	;'O'
   294  00FE6D  53                 	db	83	;'S'
   295  00FE6E  49                 	db	73	;'I'
   296  00FE6F  54                 	db	84	;'T'
   297  00FE70  49                 	db	73	;'I'
   298  00FE71  4F                 	db	79	;'O'
   299  00FE72  4E                 	db	78	;'N'
   300  00FE73  49                 	db	73	;'I'
   301  00FE74  4E                 	db	78	;'N'
   302  00FE75  47                 	db	71	;'G'
   303  00FE76  00                 	db	0
   304  00FE77                     STR_16:
   305                           
   306                           ; BSR set to: 0
   307  00FE77  54                 	db	84	;'T'
   308  00FE78  49                 	db	73	;'I'
   309  00FE79  52                 	db	82	;'R'
   310  00FE7A  45                 	db	69	;'E'
   311  00FE7B  2E                 	db	46
   312  00FE7C  20                 	db	32
   313  00FE7D  4F                 	db	79	;'O'
   314  00FE7E  4E                 	db	78	;'N'
   315  00FE7F  20                 	db	32
   316  00FE80  50                 	db	80	;'P'
   317  00FE81  4F                 	db	79	;'O'
   318  00FE82  4C                 	db	76	;'L'
   319  00FE83  45                 	db	69	;'E'
   320  00FE84  3A                 	db	58	;':'
   321  00FE85  20                 	db	32
   322  00FE86  00                 	db	0
   323  00FE87                     STR_52:
   324                           
   325                           ; BSR set to: 0
   326  00FE87  28                 	db	40
   327  00FE88  31                 	db	49	;'1'
   328  00FE89  29                 	db	41
   329  00FE8A  20                 	db	32
   330  00FE8B  28                 	db	40
   331  00FE8C  32                 	db	50	;'2'
   332  00FE8D  29                 	db	41
   333  00FE8E  20                 	db	32
   334  00FE8F  28                 	db	40
   335  00FE90  33                 	db	51	;'3'
   336  00FE91  29                 	db	41
   337  00FE92  20                 	db	32
   338  00FE93  28                 	db	40
   339  00FE94  34                 	db	52	;'4'
   340  00FE95  29                 	db	41
   341  00FE96  00                 	db	0
   342  00FE97                     STR_9:
   343                           
   344                           ; BSR set to: 0
   345  00FE97  28                 	db	40
   346  00FE98  32                 	db	50	;'2'
   347  00FE99  29                 	db	41
   348  00FE9A  20                 	db	32
   349  00FE9B  53                 	db	83	;'S'
   350  00FE9C  41                 	db	65	;'A'
   351  00FE9D  56                 	db	86	;'V'
   352  00FE9E  45                 	db	69	;'E'
   353  00FE9F  20                 	db	32
   354  00FEA0  26                 	db	38
   355  00FEA1  20                 	db	32
   356  00FEA2  45                 	db	69	;'E'
   357  00FEA3  58                 	db	88	;'X'
   358  00FEA4  49                 	db	73	;'I'
   359  00FEA5  54                 	db	84	;'T'
   360  00FEA6  00                 	db	0
   361  00FEA7                     STR_44:
   362                           
   363                           ; BSR set to: 0
   364  00FEA7  28                 	db	40
   365  00FEA8  32                 	db	50	;'2'
   366  00FEA9  29                 	db	41
   367  00FEAA  20                 	db	32
   368  00FEAB  51                 	db	81	;'Q'
   369  00FEAC  55                 	db	85	;'U'
   370  00FEAD  49                 	db	73	;'I'
   371  00FEAE  54                 	db	84	;'T'
   372  00FEAF  20                 	db	32
   373  00FEB0  44                 	db	68	;'D'
   374  00FEB1  4F                 	db	79	;'O'
   375  00FEB2  20                 	db	32
   376  00FEB3  4E                 	db	78	;'N'
   377  00FEB4  4F                 	db	79	;'O'
   378  00FEB5  54                 	db	84	;'T'
   379  00FEB6  00                 	db	0
   380  00FEB7                     STR_5:
   381                           
   382                           ; BSR set to: 0
   383  00FEB7  54                 	db	84	;'T'
   384  00FEB8  49                 	db	73	;'I'
   385  00FEB9  52                 	db	82	;'R'
   386  00FEBA  2E                 	db	46
   387  00FEBB  20                 	db	32
   388  00FEBC  53                 	db	83	;'S'
   389  00FEBD  55                 	db	85	;'U'
   390  00FEBE  50                 	db	80	;'P'
   391  00FEBF  50                 	db	80	;'P'
   392  00FEC0  4C                 	db	76	;'L'
   393  00FEC1  49                 	db	73	;'I'
   394  00FEC2  45                 	db	69	;'E'
   395  00FEC3  44                 	db	68	;'D'
   396  00FEC4  20                 	db	32
   397  00FEC5  00                 	db	0
   398  00FEC6                     STR_29:
   399                           
   400                           ; BSR set to: 0
   401  00FEC6  25                 	db	37
   402  00FEC7  30                 	db	48	;'0'
   403  00FEC8  32                 	db	50	;'2'
   404  00FEC9  78                 	db	120	;'x'
   405  00FECA  2F                 	db	47
   406  00FECB  25                 	db	37
   407  00FECC  30                 	db	48	;'0'
   408  00FECD  32                 	db	50	;'2'
   409  00FECE  78                 	db	120	;'x'
   410  00FECF  2F                 	db	47
   411  00FED0  25                 	db	37
   412  00FED1  30                 	db	48	;'0'
   413  00FED2  32                 	db	50	;'2'
   414  00FED3  78                 	db	120	;'x'
   415  00FED4  00                 	db	0
   416  00FED5                     STR_30:
   417                           
   418                           ; BSR set to: 0
   419  00FED5  25                 	db	37
   420  00FED6  30                 	db	48	;'0'
   421  00FED7  32                 	db	50	;'2'
   422  00FED8  78                 	db	120	;'x'
   423  00FED9  3A                 	db	58	;':'
   424  00FEDA  25                 	db	37
   425  00FEDB  30                 	db	48	;'0'
   426  00FEDC  32                 	db	50	;'2'
   427  00FEDD  78                 	db	120	;'x'
   428  00FEDE  3A                 	db	58	;':'
   429  00FEDF  25                 	db	37
   430  00FEE0  30                 	db	48	;'0'
   431  00FEE1  32                 	db	50	;'2'
   432  00FEE2  78                 	db	120	;'x'
   433  00FEE3  00                 	db	0
   434  00FEE4                     STR_14:
   435                           
   436                           ; BSR set to: 0
   437  00FEE4  54                 	db	84	;'T'
   438  00FEE5  49                 	db	73	;'I'
   439  00FEE6  52                 	db	82	;'R'
   440  00FEE7  2E                 	db	46
   441  00FEE8  20                 	db	32
   442  00FEE9  44                 	db	68	;'D'
   443  00FEEA  45                 	db	69	;'E'
   444  00FEEB  50                 	db	80	;'P'
   445  00FEEC  4C                 	db	76	;'L'
   446  00FEED  4F                 	db	79	;'O'
   447  00FEEE  59                 	db	89	;'Y'
   448  00FEEF  3A                 	db	58	;':'
   449  00FEF0  20                 	db	32
   450  00FEF1  00                 	db	0
   451  00FEF2                     STR_50:
   452                           
   453                           ; BSR set to: 0
   454  00FEF2  28                 	db	40
   455  00FEF3  31                 	db	49	;'1'
   456  00FEF4  20                 	db	32
   457  00FEF5  49                 	db	73	;'I'
   458  00FEF6  53                 	db	83	;'S'
   459  00FEF7  20                 	db	32
   460  00FEF8  4F                 	db	79	;'O'
   461  00FEF9  4C                 	db	76	;'L'
   462  00FEFA  44                 	db	68	;'D'
   463  00FEFB  45                 	db	69	;'E'
   464  00FEFC  53                 	db	83	;'S'
   465  00FEFD  54                 	db	84	;'T'
   466  00FEFE  29                 	db	41
   467  00FEFF  00                 	db	0
   468  00FF00                     STR_7:
   469                           
   470                           ; BSR set to: 0
   471  00FF00  28                 	db	40
   472  00FF01  31                 	db	49	;'1'
   473  00FF02  29                 	db	41
   474  00FF03  20                 	db	32
   475  00FF04  50                 	db	80	;'P'
   476  00FF05  4F                 	db	79	;'O'
   477  00FF06  4C                 	db	76	;'L'
   478  00FF07  45                 	db	69	;'E'
   479  00FF08  20                 	db	32
   480  00FF09  49                 	db	73	;'I'
   481  00FF0A  4E                 	db	78	;'N'
   482  00FF0B  46                 	db	70	;'F'
   483  00FF0C  4F                 	db	79	;'O'
   484  00FF0D  00                 	db	0
   485  00FF0E                     STR_34:
   486                           
   487                           ; BSR set to: 0
   488  00FF0E  28                 	db	40
   489  00FF0F  32                 	db	50	;'2'
   490  00FF10  29                 	db	41
   491  00FF11  20                 	db	32
   492  00FF12  56                 	db	86	;'V'
   493  00FF13  49                 	db	73	;'I'
   494  00FF14  45                 	db	69	;'E'
   495  00FF15  57                 	db	87	;'W'
   496  00FF16  20                 	db	32
   497  00FF17  4C                 	db	76	;'L'
   498  00FF18  4F                 	db	79	;'O'
   499  00FF19  47                 	db	71	;'G'
   500  00FF1A  53                 	db	83	;'S'
   501  00FF1B  00                 	db	0
   502  00FF1C                     STR_18:
   503                           
   504                           ; BSR set to: 0
   505  00FF1C  31                 	db	49	;'1'
   506  00FF1D  3C                 	db	60	;'<'
   507  00FF1E  2D                 	db	45
   508  00FF1F  20                 	db	32
   509  00FF20  32                 	db	50	;'2'
   510  00FF21  2D                 	db	45
   511  00FF22  3E                 	db	62	;'>'
   512  00FF23  20                 	db	32
   513  00FF24  33                 	db	51	;'3'
   514  00FF25  4D                 	db	77	;'M'
   515  00FF26  45                 	db	69	;'E'
   516  00FF27  4E                 	db	78	;'N'
   517  00FF28  55                 	db	85	;'U'
   518  00FF29  00                 	db	0
   519  00FF2A                     STR_40:
   520                           
   521                           ; BSR set to: 0
   522  00FF2A  4F                 	db	79	;'O'
   523  00FF2B  50                 	db	80	;'P'
   524  00FF2C  2E                 	db	46
   525  00FF2D  20                 	db	32
   526  00FF2E  43                 	db	67	;'C'
   527  00FF2F  4F                 	db	79	;'O'
   528  00FF30  4D                 	db	77	;'M'
   529  00FF31  50                 	db	80	;'P'
   530  00FF32  4C                 	db	76	;'L'
   531  00FF33  45                 	db	69	;'E'
   532  00FF34  54                 	db	84	;'T'
   533  00FF35  45                 	db	69	;'E'
   534  00FF36  00                 	db	0
   535  00FF37                     STR_42:
   536                           
   537                           ; BSR set to: 0
   538  00FF37  28                 	db	40
   539  00FF38  31                 	db	49	;'1'
   540  00FF39  29                 	db	41
   541  00FF3A  20                 	db	32
   542  00FF3B  56                 	db	86	;'V'
   543  00FF3C  49                 	db	73	;'I'
   544  00FF3D  45                 	db	69	;'E'
   545  00FF3E  57                 	db	87	;'W'
   546  00FF3F  20                 	db	32
   547  00FF40  4C                 	db	76	;'L'
   548  00FF41  4F                 	db	79	;'O'
   549  00FF42  47                 	db	71	;'G'
   550  00FF43  00                 	db	0
   551  00FF44                     STR_36:
   552                           
   553                           ; BSR set to: 0
   554  00FF44  4F                 	db	79	;'O'
   555  00FF45  50                 	db	80	;'P'
   556  00FF46  45                 	db	69	;'E'
   557  00FF47  52                 	db	82	;'R'
   558  00FF48  41                 	db	65	;'A'
   559  00FF49  54                 	db	84	;'T'
   560  00FF4A  49                 	db	73	;'I'
   561  00FF4B  4F                 	db	79	;'O'
   562  00FF4C  4E                 	db	78	;'N'
   563  00FF4D  20                 	db	32
   564  00FF4E  49                 	db	73	;'I'
   565  00FF4F  4E                 	db	78	;'N'
   566  00FF50  00                 	db	0
   567  00FF51                     STR_26:
   568                           
   569                           ; BSR set to: 0
   570  00FF51  4C                 	db	76	;'L'
   571  00FF52  65                 	db	101	;'e'
   572  00FF53  61                 	db	97	;'a'
   573  00FF54  76                 	db	118	;'v'
   574  00FF55  69                 	db	105	;'i'
   575  00FF56  6E                 	db	110	;'n'
   576  00FF57  67                 	db	103	;'g'
   577  00FF58  20                 	db	32
   578  00FF59  50                 	db	80	;'P'
   579  00FF5A  6F                 	db	111	;'o'
   580  00FF5B  6C                 	db	108	;'l'
   581  00FF5C  65                 	db	101	;'e'
   582  00FF5D  00                 	db	0
   583  00FF5E                     
   584                           ; BSR set to: 0
   585  00FF5E  45                 	db	69	;'E'
   586  00FF5F  45                 	db	69	;'E'
   587  00FF60  50                 	db	80	;'P'
   588  00FF61  52                 	db	82	;'R'
   589  00FF62  4F                 	db	79	;'O'
   590  00FF63  4D                 	db	77	;'M'
   591  00FF64  2D                 	db	45
   592  00FF65  44                 	db	68	;'D'
   593  00FF66  65                 	db	101	;'e'
   594  00FF67  6D                 	db	109	;'m'
   595  00FF68  6F                 	db	111	;'o'
   596  00FF69  6E                 	db	110	;'n'
   597  00FF6A  00                 	db	0
   598  00FF6B                     STR_48:
   599                           
   600                           ; BSR set to: 0
   601  00FF6B  53                 	db	83	;'S'
   602  00FF6C  45                 	db	69	;'E'
   603  00FF6D  4C                 	db	76	;'L'
   604  00FF6E  45                 	db	69	;'E'
   605  00FF6F  43                 	db	67	;'C'
   606  00FF70  54                 	db	84	;'T'
   607  00FF71  20                 	db	32
   608  00FF72  4C                 	db	76	;'L'
   609  00FF73  4F                 	db	79	;'O'
   610  00FF74  47                 	db	71	;'G'
   611  00FF75  00                 	db	0
   612  00FF76                     STR_25:
   613                           
   614                           ; BSR set to: 0
   615  00FF76  25                 	db	37
   616  00FF77  64                 	db	100	;'d'
   617  00FF78  20                 	db	32
   618  00FF79  6F                 	db	111	;'o'
   619  00FF7A  6E                 	db	110	;'n'
   620  00FF7B  20                 	db	32
   621  00FF7C  70                 	db	112	;'p'
   622  00FF7D  6F                 	db	111	;'o'
   623  00FF7E  6C                 	db	108	;'l'
   624  00FF7F  65                 	db	101	;'e'
   625  00FF80  00                 	db	0
   626  00FF81                     
   627                           ; BSR set to: 0
   628  00FF81  77                 	db	119	;'w'
   629  00FF82  72                 	db	114	;'r'
   630  00FF83  6F                 	db	111	;'o'
   631  00FF84  74                 	db	116	;'t'
   632  00FF85  65                 	db	101	;'e'
   633  00FF86  3A                 	db	58	;':'
   634  00FF87  20                 	db	32
   635  00FF88  25                 	db	37
   636  00FF89  63                 	db	99	;'c'
   637  00FF8A  6E                 	db	110	;'n'
   638  00FF8B  00                 	db	0
   639  00FF8C                     
   640                           ; BSR set to: 0
   641  00FF8C  72                 	db	114	;'r'
   642  00FF8D  65                 	db	101	;'e'
   643  00FF8E  61                 	db	97	;'a'
   644  00FF8F  64                 	db	100	;'d'
   645  00FF90  3A                 	db	58	;':'
   646  00FF91  20                 	db	32
   647  00FF92  25                 	db	37
   648  00FF93  63                 	db	99	;'c'
   649  00FF94  6E                 	db	110	;'n'
   650  00FF95  6E                 	db	110	;'n'
   651  00FF96  00                 	db	0
   652  00FF97                     STR_2:
   653                           
   654                           ; BSR set to: 0
   655  00FF97  4F                 	db	79	;'O'
   656  00FF98  50                 	db	80	;'P'
   657  00FF99  2E                 	db	46
   658  00FF9A  20                 	db	32
   659  00FF9B  54                 	db	84	;'T'
   660  00FF9C  49                 	db	73	;'I'
   661  00FF9D  4D                 	db	77	;'M'
   662  00FF9E  45                 	db	69	;'E'
   663  00FF9F  20                 	db	32
   664  00FFA0  00                 	db	0
   665  00FFA1                     STR_24:
   666                           
   667                           ; BSR set to: 0
   668  00FFA1  54                 	db	84	;'T'
   669  00FFA2  49                 	db	73	;'I'
   670  00FFA3  52                 	db	82	;'R'
   671  00FFA4  45                 	db	69	;'E'
   672  00FFA5  20                 	db	32
   673  00FFA6  44                 	db	68	;'D'
   674  00FFA7  52                 	db	82	;'R'
   675  00FFA8  4F                 	db	79	;'O'
   676  00FFA9  50                 	db	80	;'P'
   677  00FFAA  00                 	db	0
   678  00FFAB                     STR_32:
   679                           
   680                           ; BSR set to: 0
   681  00FFAB  28                 	db	40
   682  00FFAC  31                 	db	49	;'1'
   683  00FFAD  29                 	db	41
   684  00FFAE  20                 	db	32
   685  00FFAF  53                 	db	83	;'S'
   686  00FFB0  54                 	db	84	;'T'
   687  00FFB1  41                 	db	65	;'A'
   688  00FFB2  52                 	db	82	;'R'
   689  00FFB3  54                 	db	84	;'T'
   690  00FFB4  00                 	db	0
   691  00FFB5                     
   692                           ; BSR set to: 0
   693  00FFB5  72                 	db	114	;'r'
   694  00FFB6  65                 	db	101	;'e'
   695  00FFB7  61                 	db	97	;'a'
   696  00FFB8  64                 	db	100	;'d'
   697  00FFB9  3A                 	db	58	;':'
   698  00FFBA  20                 	db	32
   699  00FFBB  25                 	db	37
   700  00FFBC  63                 	db	99	;'c'
   701  00FFBD  6E                 	db	110	;'n'
   702  00FFBE  00                 	db	0
   703  00FFBF                     STR_28:
   704                           
   705                           ; BSR set to: 0
   706  00FFBF  57                 	db	87	;'W'
   707  00FFC0  45                 	db	69	;'E'
   708  00FFC1  4C                 	db	76	;'L'
   709  00FFC2  43                 	db	67	;'C'
   710  00FFC3  4F                 	db	79	;'O'
   711  00FFC4  4D                 	db	77	;'M'
   712  00FFC5  45                 	db	69	;'E'
   713  00FFC6  20                 	db	32
   714  00FFC7  00                 	db	0
   715  00FFC8                     STR_46:
   716                           
   717                           ; BSR set to: 0
   718  00FFC8  53                 	db	83	;'S'
   719  00FFC9  41                 	db	65	;'A'
   720  00FFCA  56                 	db	86	;'V'
   721  00FFCB  45                 	db	69	;'E'
   722  00FFCC  20                 	db	32
   723  00FFCD  4C                 	db	76	;'L'
   724  00FFCE  4F                 	db	79	;'O'
   725  00FFCF  47                 	db	71	;'G'
   726  00FFD0  00                 	db	0
   727  00FFD1                     STR_38:
   728                           
   729                           ; BSR set to: 0
   730  00FFD1  50                 	db	80	;'P'
   731  00FFD2  52                 	db	82	;'R'
   732  00FFD3  4F                 	db	79	;'O'
   733  00FFD4  47                 	db	71	;'G'
   734  00FFD5  52                 	db	82	;'R'
   735  00FFD6  45                 	db	69	;'E'
   736  00FFD7  53                 	db	83	;'S'
   737  00FFD8  53                 	db	83	;'S'
   738  00FFD9  00                 	db	0
   739  00FFDA                     STR_10:
   740                           
   741                           ; BSR set to: 0
   742  00FFDA  25                 	db	37
   743  00FFDB  73                 	db	115	;'s'
   744  00FFDC  25                 	db	37
   745  00FFDD  64                 	db	100	;'d'
   746  00FFDE  25                 	db	37
   747  00FFDF  73                 	db	115	;'s'
   748  00FFE0  25                 	db	37
   749  00FFE1  64                 	db	100	;'d'
   750  00FFE2  00                 	db	0
   751  00FFE3                     STR_1:
   752                           
   753                           ; BSR set to: 0
   754  00FFE3  25                 	db	37
   755  00FFE4  73                 	db	115	;'s'
   756  00FFE5  25                 	db	37
   757  00FFE6  64                 	db	100	;'d'
   758  00FFE7  25                 	db	37
   759  00FFE8  73                 	db	115	;'s'
   760  00FFE9  00                 	db	0
   761  00FFEA                     STR_11:
   762                           
   763                           ; BSR set to: 0
   764  00FFEA  50                 	db	80	;'P'
   765  00FFEB  4F                 	db	79	;'O'
   766  00FFEC  4C                 	db	76	;'L'
   767  00FFED  45                 	db	69	;'E'
   768  00FFEE  20                 	db	32
   769  00FFEF  00                 	db	0
   770  00FFF0                     STR_23:
   771                           
   772                           ; BSR set to: 0
   773  00FFF0  41                 	db	65	;'A'
   774  00FFF1  3A                 	db	58	;':'
   775  00FFF2  20                 	db	32
   776  00FFF3  25                 	db	37
   777  00FFF4  64                 	db	100	;'d'
   778  00FFF5  00                 	db	0
   779  00FFF6                     STR_22:
   780                           
   781                           ; BSR set to: 0
   782  00FFF6  42                 	db	66	;'B'
   783  00FFF7  3A                 	db	58	;':'
   784  00FFF8  20                 	db	32
   785  00FFF9  25                 	db	37
   786  00FFFA  64                 	db	100	;'d'
   787  00FFFB  00                 	db	0
   788  00FFFC                     STR_12:
   789                           
   790                           ; BSR set to: 0
   791  00FFFC  2F                 	db	47
   792  00FFFD  00                 	db	0
   793  0000                     
   794                           ; #config settings
   795  00FFFE  00                 	db	0	; dummy byte at the end
   796  0000                     
   797                           	psect	cinit
   798  003086                     __pcinit:
   799                           	opt callstack 0
   800  003086                     start_initialization:
   801                           	opt callstack 0
   802  003086                     __initialization:
   803                           	opt callstack 0
   804                           
   805                           ; Initialize objects allocated to BANK1 (7 bytes)
   806                           ; load TBLPTR registers with __pidataBANK1
   807  003086  0EB4               	movlw	low __pidataBANK1
   808  003088  6EF6               	movwf	tblptrl,c
   809  00308A  0E3A               	movlw	high __pidataBANK1
   810  00308C  6EF7               	movwf	tblptrh,c
   811  00308E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   812  003090  6EF8               	movwf	tblptru,c
   813  003092  EE01  F071         	lfsr	0,__pdataBANK1
   814  003096  EE10 F007          	lfsr	1,7
   815  00309A                     copy_data0:
   816  00309A  0009               	tblrd		*+
   817  00309C  CFF5 FFEE          	movff	tablat,postinc0
   818  0030A0  50E5               	movf	postdec1,w,c
   819  0030A2  50E1               	movf	fsr1l,w,c
   820  0030A4  E1FA               	bnz	copy_data0
   821                           
   822                           ; Initialize objects allocated to BANK0 (1 bytes)
   823                           ; load TBLPTR registers with __pidataBANK0
   824  0030A6  0EBC               	movlw	low __pidataBANK0
   825  0030A8  6EF6               	movwf	tblptrl,c
   826  0030AA  0E3A               	movlw	high __pidataBANK0
   827  0030AC  6EF7               	movwf	tblptrh,c
   828  0030AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   829  0030B0  6EF8               	movwf	tblptru,c
   830  0030B2  0009               	tblrd		*+	;fetch initializer
   831  0030B4  CFF5 F0D3          	movff	tablat,__pdataBANK0
   832                           
   833                           ; Initialize objects allocated to COMRAM (1 bytes)
   834                           ; load TBLPTR registers with __pidataCOMRAM
   835  0030B8  0EBB               	movlw	low __pidataCOMRAM
   836  0030BA  6EF6               	movwf	tblptrl,c
   837  0030BC  0E3A               	movlw	high __pidataCOMRAM
   838  0030BE  6EF7               	movwf	tblptrh,c
   839  0030C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   840  0030C2  6EF8               	movwf	tblptru,c
   841  0030C4  0009               	tblrd		*+	;fetch initializer
   842  0030C6  CFF5 F079          	movff	tablat,__pdataCOMRAM
   843                           
   844                           ; Clear objects allocated to BIGRAM (480 bytes)
   845  0030CA  EE01  F078         	lfsr	0,__pbssBIGRAM
   846  0030CE  EE11 F0E0          	lfsr	1,480
   847  0030D2                     clear_0:
   848  0030D2  6AEE               	clrf	postinc0,c
   849  0030D4  50E5               	movf	postdec1,w,c
   850  0030D6  50E1               	movf	fsr1l,w,c
   851  0030D8  E1FC               	bnz	clear_0
   852  0030DA  50E2               	movf	fsr1h,w,c
   853  0030DC  E1FA               	bnz	clear_0
   854                           
   855                           ; Clear objects allocated to BANK1 (46 bytes)
   856  0030DE  EE01  F043         	lfsr	0,__pbssBANK1
   857  0030E2  0E2E               	movlw	46
   858  0030E4                     clear_1:
   859  0030E4  6AEE               	clrf	postinc0,c
   860  0030E6  06E8               	decf	wreg,f,c
   861  0030E8  E1FD               	bnz	clear_1
   862                           
   863                           ; Clear objects allocated to BANK0 (7 bytes)
   864  0030EA  EE00  F0CC         	lfsr	0,__pbssBANK0
   865  0030EE  0E07               	movlw	7
   866  0030F0                     clear_2:
   867  0030F0  6AEE               	clrf	postinc0,c
   868  0030F2  06E8               	decf	wreg,f,c
   869  0030F4  E1FD               	bnz	clear_2
   870                           
   871                           ; Clear objects allocated to COMRAM (4 bytes)
   872  0030F6  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   873  0030F8  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   874  0030FA  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   875  0030FC  6A75               	clrf	__pbssCOMRAM& (0+255),c
   876  0030FE                     end_of_initialization:
   877                           	opt callstack 0
   878  0030FE                     __end_of__initialization:
   879                           	opt callstack 0
   880  0030FE  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   881  003100  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   882  003102  0E00               	movlw	low (__Lmediumconst shr (0+16))
   883  003104  6EF8               	movwf	tblptru,c
   884  003106  0100               	movlb	0
   885  003108  EF22  F005         	goto	_main	;jump to C main() function
   886                           
   887                           	psect	bssCOMRAM
   888  000075                     __pbssCOMRAM:
   889                           	opt callstack 0
   890  000075                     _millisecondsMeasured:
   891                           	opt callstack 0
   892  000075                     	ds	4
   893                           
   894                           	psect	dataCOMRAM
   895  000079                     __pdataCOMRAM:
   896                           	opt callstack 0
   897  000079                     _motorBDirection:
   898                           	opt callstack 0
   899  000079                     	ds	1
   900                           
   901                           	psect	bssBANK0
   902  0000CC                     __pbssBANK0:
   903                           	opt callstack 0
   904  0000CC                     _flags:
   905                           	opt callstack 0
   906  0000CC                     	ds	2
   907  0000CE                     _motorBDistance:
   908                           	opt callstack 0
   909  0000CE                     	ds	2
   910  0000D0                     _motorADistance:
   911                           	opt callstack 0
   912  0000D0                     	ds	2
   913  0000D2                     _keyPressed:
   914                           	opt callstack 0
   915  0000D2                     	ds	1
   916                           
   917                           	psect	dataBANK0
   918  0000D3                     __pdataBANK0:
   919                           	opt callstack 0
   920  0000D3                     _motorADirection:
   921                           	opt callstack 0
   922  0000D3                     	ds	1
   923                           
   924                           	psect	bssBANK1
   925  000143                     __pbssBANK1:
   926                           	opt callstack 0
   927  000143                     	ds	4
   928  000147                     _nout:
   929                           	opt callstack 0
   930  000147                     	ds	2
   931  000149                     _width:
   932                           	opt callstack 0
   933  000149                     	ds	2
   934  00014B                     _prec:
   935                           	opt callstack 0
   936  00014B                     	ds	2
   937  00014D                     _encoderAInterruptLast:
   938                           	opt callstack 0
   939  00014D                     	ds	1
   940  00014E                     _encoderBInterruptLast:
   941                           	opt callstack 0
   942  00014E                     	ds	1
   943  00014F                     _bottomBreakBeamTriggeredChange:
   944                           	opt callstack 0
   945  00014F                     	ds	1
   946  000150                     _topBreakBeamTriggeredChange:
   947                           	opt callstack 0
   948  000150                     	ds	1
   949  000151                     _dbuf:
   950                           	opt callstack 0
   951  000151                     	ds	32
   952                           
   953                           	psect	dataBANK1
   954  000171                     __pdataBANK1:
   955                           	opt callstack 0
   956  000171                     stoa@F1144:
   957                           	opt callstack 0
   958  000171                     	ds	7
   959                           
   960                           	psect	bssBIGRAM
   961  000178                     __pbssBIGRAM:
   962                           	opt callstack 0
   963  000178                     _logs:
   964                           	opt callstack 0
   965  000178                     	ds	480
   966                           
   967                           	psect	cstackBANK1
   968  000100                     __pcstackBANK1:
   969                           	opt callstack 0
   970  000100                     doOperation@PIDData:
   971                           	opt callstack 0
   972                           
   973                           ; 4 bytes @ 0x0
   974  000100                     	ds	18
   975  000112                     doOperation@tiresOnPoleAfterOp:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x12
   979  000112                     	ds	2
   980  000114                     doOperation@startedDistA:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x14
   984  000114                     	ds	2
   985  000116                     doOperation@startedDistB:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x16
   989  000116                     	ds	2
   990  000118                     doOperation@send:
   991                           	opt callstack 0
   992                           
   993                           ; 1 bytes @ 0x18
   994  000118                     	ds	1
   995  000119                     doOperation@badCount:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x19
   999  000119                     	ds	2
  1000  00011B                     doOperation@badCountBot:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x1B
  1004  00011B                     	ds	2
  1005  00011D                     doOperation@poleNumber:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x1D
  1009  00011D                     	ds	2
  1010  00011F                     doOperation@totalTiresSupplied:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1F
  1014  00011F                     	ds	2
  1015  000121                     doOperation@distanceFromLastPole:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x21
  1019  000121                     	ds	2
  1020  000123                     doOperation@timeStart:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x23
  1024  000123                     	ds	4
  1025  000127                     doOperation@goalSpeed:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x27
  1029  000127                     	ds	2
  1030  000129                     doOperation@isDoneDrop:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x29
  1034  000129                     	ds	1
  1035  00012A                     doOperation@motorAStartDistance:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x2A
  1039  00012A                     	ds	2
  1040  00012C                     doOperation@motorBStartDistance:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x2C
  1044  00012C                     	ds	2
  1045  00012E                     doOperation@counted:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x2E
  1049  00012E                     	ds	2
  1050  000130                     doOperation@distanceToPole:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x30
  1054  000130                     	ds	2
  1055  000132                     doOperation@tiresToDrop:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x32
  1059  000132                     	ds	2
  1060  000134                     doOperation@tiresDeployedOnPole:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x34
  1064  000134                     	ds	2
  1065  000136                     doOperation@tiresOnPole:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x36
  1069  000136                     	ds	2
  1070  000138                     doOperation@topLaserStatePrev:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x38
  1074  000138                     	ds	1
  1075  000139                     doOperation@bottomLaserStatePrev:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x39
  1079  000139                     	ds	1
  1080  00013A                     doOperation@i:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x3A
  1084  00013A                     	ds	2
  1085  00013C                     doOperation@timeInOperation:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x3C
  1089  00013C                     	ds	4
  1090  000140                     doOperation@currentOperationState:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x40
  1094  000140                     	ds	1
  1095  000141                     doOperation@bottomLaserState:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x41
  1099  000141                     	ds	1
  1100  000142                     doOperation@topLaserState:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x42
  1104  000142                     	ds	1
  1105                           
  1106                           	psect	cstackBANK0
  1107  000080                     __pcstackBANK0:
  1108                           	opt callstack 0
  1109  000080                     ?_printf:
  1110                           	opt callstack 0
  1111  000080                     printf@fmt:
  1112                           	opt callstack 0
  1113  000080                     _setMotorSpeeds$2226:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x0
  1117  000080                     	ds	4
  1118  000084                     _setMotorSpeeds$2227:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x4
  1122  000084                     	ds	4
  1123  000088                     errorCorrectedMove@goalSpeed:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x8
  1127  000088                     	ds	2
  1128  00008A                     errorCorrectedMove@turnRatio:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 4 bytes @ 0xA
  1132  00008A                     	ds	2
  1133  00008C                     printf@ap:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0xC
  1137  00008C                     	ds	2
  1138  00008E                     ?_tirePositioning:
  1139                           	opt callstack 0
  1140  00008E                     doDisplayLog@logNumber:
  1141                           	opt callstack 0
  1142  00008E                     errorCorrectedMove@motorAStartDistance:
  1143                           	opt callstack 0
  1144  00008E                     tirePositioning@maxOperationTime:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 4 bytes @ 0xE
  1148  00008E                     	ds	2
  1149  000090                     ??_doDisplayLog:
  1150  000090                     errorCorrectedMove@motorBStartDistance:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x10
  1154  000090                     	ds	2
  1155  000092                     ??_tirePositioning:
  1156  000092                     errorCorrectedMove@correctionConstant:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x12
  1160  000092                     	ds	2
  1161  000094                     doDisplayLog@keypress:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x14
  1165  000094                     	ds	1
  1166  000095                     doDisplayLog@currentDisplayState:
  1167                           	opt callstack 0
  1168  000095                     tirePositioning@startDistanceTop:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x15
  1172  000095                     	ds	1
  1173  000096                     ??_errorCorrectedMove:
  1174  000096                     doDisplayLog@keyValue:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x16
  1178  000096                     	ds	1
  1179  000097                     doDisplayLog@currentPole:
  1180                           	opt callstack 0
  1181  000097                     tirePositioning@startDistanceBottom:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x17
  1185  000097                     	ds	2
  1186  000099                     tirePositioning@startDistance:
  1187                           	opt callstack 0
  1188  000099                     _doDisplayLog$2224:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x19
  1192  000099                     	ds	1
  1193  00009A                     errorCorrectedMove@error:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x1A
  1197  00009A                     	ds	1
  1198  00009B                     tirePositioning@topPreviousState:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x1B
  1202  00009B                     	ds	1
  1203  00009C                     errorCorrectedMove@ASpeed:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x1C
  1207  00009C                     	ds	1
  1208  00009D                     tirePositioning@bottomPreviousState:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x1D
  1212  00009D                     	ds	1
  1213  00009E                     errorCorrectedMove@BSpeed:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x1E
  1217  00009E                     	ds	1
  1218  00009F                     tirePositioning@distanceRecordedTop:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x1F
  1222  00009F                     	ds	1
  1223  0000A0                     opErrorCorrectionDegrees@goalSpeed:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x20
  1227  0000A0                     	ds	1
  1228  0000A1                     tirePositioning@distanceRecordedBottom:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x21
  1232  0000A1                     	ds	1
  1233  0000A2                     opErrorCorrectionDegrees@turnRatio:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x22
  1237  0000A2                     	ds	1
  1238  0000A3                     tirePositioning@topBreakbeam:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x23
  1242  0000A3                     	ds	1
  1243  0000A4                     opErrorCorrectionDegrees@correctionConstant:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x24
  1247  0000A4                     	ds	1
  1248  0000A5                     tirePositioning@bottomBreakbeam:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x25
  1252  0000A5                     	ds	3
  1253  0000A8                     opErrorCorrectionDegrees@distanceDegrees:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x28
  1257  0000A8                     	ds	2
  1258  0000AA                     opErrorCorrectionDegrees@maxOperationTime:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2A
  1262  0000AA                     	ds	4
  1263  0000AE                     _opErrorCorrectionDegrees$2229:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x2E
  1267  0000AE                     	ds	4
  1268  0000B2                     opErrorCorrectionDegrees@motorBStartDistance:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x32
  1272  0000B2                     	ds	2
  1273  0000B4                     opErrorCorrectionDegrees@motorAStartDistance:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x34
  1277  0000B4                     	ds	2
  1278  0000B6                     ??_doOperation:
  1279                           
  1280                           ; 1 bytes @ 0x36
  1281  0000B6                     	ds	4
  1282  0000BA                     ??_main:
  1283                           
  1284                           ; 1 bytes @ 0x3A
  1285  0000BA                     	ds	2
  1286  0000BC                     main@time:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 7 bytes @ 0x3C
  1290  0000BC                     	ds	7
  1291  0000C3                     main@tick:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x43
  1295  0000C3                     	ds	4
  1296  0000C7                     main@keypress:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x47
  1300  0000C7                     	ds	1
  1301  0000C8                     main@i:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x48
  1305  0000C8                     	ds	1
  1306  0000C9                     main@currentLogState:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x49
  1310  0000C9                     	ds	1
  1311  0000CA                     main@currentRobotState:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x4A
  1315  0000CA                     	ds	1
  1316  0000CB                     main@keyValue:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x4B
  1320  0000CB                     	ds	1
  1321                           
  1322                           	psect	cstackCOMRAM
  1323  000001                     __pcstackCOMRAM:
  1324                           	opt callstack 0
  1325  000001                     ??_updateMotorBEncoder:
  1326  000001                     ??_updateMotorAEncoder:
  1327  000001                     
  1328                           ; 1 bytes @ 0x0
  1329  000001                     	ds	1
  1330  000002                     updateMotorBEncoder@interruptPinState:
  1331                           	opt callstack 0
  1332  000002                     updateMotorAEncoder@interruptPinState:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x1
  1336  000002                     	ds	2
  1337  000004                     updateMotorBEncoder@directionPin:
  1338                           	opt callstack 0
  1339  000004                     updateMotorAEncoder@directionPin:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x3
  1343  000004                     	ds	2
  1344  000006                     ??_I2C_Master_Wait:
  1345  000006                     ?_strlen:
  1346                           	opt callstack 0
  1347  000006                     ?_isupper:
  1348                           	opt callstack 0
  1349  000006                     ?_isalpha:
  1350                           	opt callstack 0
  1351  000006                     ?_isdigit:
  1352                           	opt callstack 0
  1353  000006                     ?_isspace:
  1354                           	opt callstack 0
  1355  000006                     ?_islower:
  1356                           	opt callstack 0
  1357  000006                     ?___wmul:
  1358                           	opt callstack 0
  1359  000006                     ?___awdiv:
  1360                           	opt callstack 0
  1361  000006                     ?___awmod:
  1362                           	opt callstack 0
  1363  000006                     ?___lldiv:
  1364                           	opt callstack 0
  1365  000006                     ?___llmod:
  1366                           	opt callstack 0
  1367  000006                     ?___xxtofl:
  1368                           	opt callstack 0
  1369  000006                     ?___aodiv:
  1370                           	opt callstack 0
  1371  000006                     ?___aomod:
  1372                           	opt callstack 0
  1373  000006                     pulse_e@interruptState:
  1374                           	opt callstack 0
  1375  000006                     opDelay@millis:
  1376                           	opt callstack 0
  1377  000006                     replaceOldLog@i:
  1378                           	opt callstack 0
  1379  000006                     ___wmul@multiplier:
  1380                           	opt callstack 0
  1381  000006                     ___awdiv@dividend:
  1382                           	opt callstack 0
  1383  000006                     ___awmod@dividend:
  1384                           	opt callstack 0
  1385  000006                     isalpha@c:
  1386                           	opt callstack 0
  1387  000006                     isdigit@c:
  1388                           	opt callstack 0
  1389  000006                     isspace@c:
  1390                           	opt callstack 0
  1391  000006                     isupper@c:
  1392                           	opt callstack 0
  1393  000006                     strlen@s:
  1394                           	opt callstack 0
  1395  000006                     islower@c:
  1396                           	opt callstack 0
  1397  000006                     ___lldiv@dividend:
  1398                           	opt callstack 0
  1399  000006                     ___flge@ff1:
  1400                           	opt callstack 0
  1401  000006                     ___llmod@dividend:
  1402                           	opt callstack 0
  1403  000006                     ___xxtofl@val:
  1404                           	opt callstack 0
  1405  000006                     ___aodiv@dividend:
  1406                           	opt callstack 0
  1407  000006                     ___aomod@dividend:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 8 bytes @ 0x5
  1411  000006                     	ds	1
  1412  000007                     send_nibble@data:
  1413                           	opt callstack 0
  1414  000007                     I2C_Master_Read@ackBit:
  1415                           	opt callstack 0
  1416  000007                     I2C_Master_Write@byteToWrite:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x6
  1420  000007                     	ds	1
  1421  000008                     ??_isupper:
  1422  000008                     ??_isalpha:
  1423  000008                     ??_isdigit:
  1424  000008                     ??_isspace:
  1425  000008                     ??_islower:
  1426  000008                     send_byte@data:
  1427                           	opt callstack 0
  1428  000008                     I2C_Master_Read@receivedByte:
  1429                           	opt callstack 0
  1430  000008                     ___wmul@multiplicand:
  1431                           	opt callstack 0
  1432  000008                     ___awdiv@divisor:
  1433                           	opt callstack 0
  1434  000008                     ___awmod@divisor:
  1435                           	opt callstack 0
  1436  000008                     strlen@a:
  1437                           	opt callstack 0
  1438  000008                     opDelay@maxOperationTime:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 4 bytes @ 0x7
  1442  000008                     	ds	1
  1443  000009                     requestIsTireDropDone@data:
  1444                           	opt callstack 0
  1445  000009                     lcdInst@data:
  1446                           	opt callstack 0
  1447  000009                     putch@data:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x8
  1451  000009                     	ds	1
  1452  00000A                     ??_initLCD:
  1453  00000A                     ??___xxtofl:
  1454  00000A                     ___awdiv@counter:
  1455                           	opt callstack 0
  1456  00000A                     ___awmod@counter:
  1457                           	opt callstack 0
  1458  00000A                     ___wmul@product:
  1459                           	opt callstack 0
  1460  00000A                     fputc@c:
  1461                           	opt callstack 0
  1462  00000A                     ___lldiv@divisor:
  1463                           	opt callstack 0
  1464  00000A                     ___flge@ff2:
  1465                           	opt callstack 0
  1466  00000A                     ___llmod@divisor:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x9
  1470  00000A                     	ds	1
  1471  00000B                     ___awdiv@sign:
  1472                           	opt callstack 0
  1473  00000B                     ___awmod@sign:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0xA
  1477  00000B                     	ds	1
  1478  00000C                     ??_opDelay:
  1479  00000C                     ?_toupper:
  1480                           	opt callstack 0
  1481  00000C                     _isspace$1858:
  1482                           	opt callstack 0
  1483  00000C                     ___awdiv@quotient:
  1484                           	opt callstack 0
  1485  00000C                     fputc@fp:
  1486                           	opt callstack 0
  1487  00000C                     toupper@c:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 2 bytes @ 0xB
  1491  00000C                     	ds	1
  1492  00000D                     ?_atoi:
  1493                           	opt callstack 0
  1494  00000D                     atoi@s:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0xC
  1498  00000D                     	ds	1
  1499  00000E                     ??_fputc:
  1500  00000E                     ??_toupper:
  1501  00000E                     ??___flge:
  1502  00000E                     ___llmod@counter:
  1503                           	opt callstack 0
  1504  00000E                     ___xxtofl@sign:
  1505                           	opt callstack 0
  1506  00000E                     ___lldiv@quotient:
  1507                           	opt callstack 0
  1508  00000E                     ___aodiv@divisor:
  1509                           	opt callstack 0
  1510  00000E                     ___aomod@divisor:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 8 bytes @ 0xD
  1514  00000E                     	ds	1
  1515  00000F                     ??_atoi:
  1516  00000F                     ___xxtofl@exp:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 1 bytes @ 0xE
  1520  00000F                     	ds	1
  1521  000010                     ___xxtofl@arg:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 4 bytes @ 0xF
  1525  000010                     	ds	2
  1526  000012                     ___lldiv@counter:
  1527                           	opt callstack 0
  1528  000012                     _toupper$1922:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x11
  1532  000012                     	ds	1
  1533  000013                     ?_stoa:
  1534                           	opt callstack 0
  1535  000013                     stoa@fp:
  1536                           	opt callstack 0
  1537  000013                     atoi@neg:
  1538                           	opt callstack 0
  1539  000013                     fputs@s:
  1540                           	opt callstack 0
  1541  000013                     I2C_Master_Init@clockFreq:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 4 bytes @ 0x12
  1545  000013                     	ds	1
  1546  000014                     ?___flmul:
  1547                           	opt callstack 0
  1548  000014                     opDelay@startTime:
  1549                           	opt callstack 0
  1550  000014                     ___flmul@b:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x13
  1554  000014                     	ds	1
  1555  000015                     stoa@s:
  1556                           	opt callstack 0
  1557  000015                     _atoi$1831:
  1558                           	opt callstack 0
  1559  000015                     fputs@fp:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x14
  1563  000015                     	ds	1
  1564  000016                     ___aodiv@counter:
  1565                           	opt callstack 0
  1566  000016                     ___aomod@counter:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 1 bytes @ 0x15
  1570  000016                     	ds	1
  1571  000017                     ??_I2C_Master_Init:
  1572  000017                     ??_stoa:
  1573  000017                     ___aodiv@sign:
  1574                           	opt callstack 0
  1575  000017                     ___aomod@sign:
  1576                           	opt callstack 0
  1577  000017                     fputs@c:
  1578                           	opt callstack 0
  1579  000017                     _atoi$1833:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x16
  1583  000017                     	ds	1
  1584  000018                     ?_abs:
  1585                           	opt callstack 0
  1586  000018                     abs@a:
  1587                           	opt callstack 0
  1588  000018                     fputs@i:
  1589                           	opt callstack 0
  1590  000018                     ___flmul@a:
  1591                           	opt callstack 0
  1592  000018                     stoa@nuls:
  1593                           	opt callstack 0
  1594  000018                     ___aodiv@quotient:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 8 bytes @ 0x17
  1598  000018                     	ds	1
  1599  000019                     _atoi$1832:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 1 bytes @ 0x18
  1603  000019                     	ds	1
  1604  00001A                     ??_abs:
  1605  00001A                     ?_pad:
  1606                           	opt callstack 0
  1607  00001A                     pad@fp:
  1608                           	opt callstack 0
  1609  00001A                     atoi@n:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x19
  1613  00001A                     	ds	1
  1614  00001B                     
  1615                           ; 1 bytes @ 0x1A
  1616  00001B                     	ds	1
  1617  00001C                     ??___flmul:
  1618  00001C                     pad@buf:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x1B
  1622  00001C                     	ds	2
  1623  00001E                     pad@p:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x1D
  1627  00001E                     	ds	1
  1628  00001F                     stoa@i:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x1E
  1632  00001F                     	ds	1
  1633  000020                     ??_pad:
  1634  000020                     ___flmul@sign:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x1F
  1638  000020                     	ds	1
  1639  000021                     ___flmul@aexp:
  1640                           	opt callstack 0
  1641  000021                     pad@i:
  1642                           	opt callstack 0
  1643  000021                     stoa@w:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x20
  1647  000021                     	ds	1
  1648  000022                     ___flmul@grs:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 4 bytes @ 0x21
  1652  000022                     	ds	1
  1653  000023                     pad@w:
  1654                           	opt callstack 0
  1655  000023                     stoa@cp:
  1656                           	opt callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x22
  1659  000023                     	ds	2
  1660  000025                     ?_ctoa:
  1661                           	opt callstack 0
  1662  000025                     ?_dtoa:
  1663                           	opt callstack 0
  1664  000025                     ?_xtoa:
  1665                           	opt callstack 0
  1666  000025                     ctoa@fp:
  1667                           	opt callstack 0
  1668  000025                     dtoa@fp:
  1669                           	opt callstack 0
  1670  000025                     stoa@p:
  1671                           	opt callstack 0
  1672  000025                     xtoa@fp:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x24
  1676  000025                     	ds	1
  1677  000026                     ___flmul@bexp:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x25
  1681  000026                     	ds	1
  1682  000027                     ctoa@c:
  1683                           	opt callstack 0
  1684  000027                     stoa@l:
  1685                           	opt callstack 0
  1686  000027                     ___flmul@prod:
  1687                           	opt callstack 0
  1688  000027                     dtoa@d:
  1689                           	opt callstack 0
  1690  000027                     xtoa@d:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 8 bytes @ 0x26
  1694  000027                     	ds	1
  1695  000028                     ctoa@w:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x27
  1699  000028                     	ds	3
  1700  00002B                     ___flmul@temp:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x2A
  1704  00002B                     	ds	2
  1705  00002D                     ?___fladd:
  1706                           	opt callstack 0
  1707  00002D                     ?___fldiv:
  1708                           	opt callstack 0
  1709  00002D                     ___fladd@b:
  1710                           	opt callstack 0
  1711  00002D                     ___fldiv@b:
  1712                           	opt callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x2C
  1715  00002D                     	ds	2
  1716  00002F                     ??_dtoa:
  1717  00002F                     xtoa@x:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x2E
  1721  00002F                     	ds	1
  1722  000030                     ??_xtoa:
  1723                           
  1724                           ; 1 bytes @ 0x2F
  1725  000030                     	ds	1
  1726  000031                     ___fladd@a:
  1727                           	opt callstack 0
  1728  000031                     ___fldiv@a:
  1729                           	opt callstack 0
  1730                           
  1731                           ; 4 bytes @ 0x30
  1732  000031                     	ds	4
  1733  000035                     ??___fladd:
  1734  000035                     ??___fldiv:
  1735                           
  1736                           ; 1 bytes @ 0x34
  1737  000035                     	ds	2
  1738  000037                     _dtoa$1335:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x36
  1742  000037                     	ds	1
  1743  000038                     _xtoa$1356:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x37
  1747  000038                     	ds	1
  1748  000039                     ___fladd@signs:
  1749                           	opt callstack 0
  1750  000039                     dtoa@p:
  1751                           	opt callstack 0
  1752  000039                     ___fldiv@rem:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 4 bytes @ 0x38
  1756  000039                     	ds	1
  1757  00003A                     ___fladd@aexp:
  1758                           	opt callstack 0
  1759  00003A                     _xtoa$1357:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x39
  1763  00003A                     	ds	1
  1764  00003B                     ___fladd@bexp:
  1765                           	opt callstack 0
  1766  00003B                     dtoa@w:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x3A
  1770  00003B                     	ds	1
  1771  00003C                     ___fladd@grs:
  1772                           	opt callstack 0
  1773  00003C                     xtoa@p:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x3B
  1777  00003C                     	ds	1
  1778  00003D                     ___fldiv@sign:
  1779                           	opt callstack 0
  1780  00003D                     dtoa@s:
  1781                           	opt callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x3C
  1784  00003D                     	ds	1
  1785  00003E                     xtoa@w:
  1786                           	opt callstack 0
  1787  00003E                     ___fldiv@new_exp:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x3D
  1791  00003E                     	ds	1
  1792  00003F                     dtoa@n:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 8 bytes @ 0x3E
  1796  00003F                     	ds	1
  1797  000040                     ___fldiv@grs:
  1798                           	opt callstack 0
  1799  000040                     xtoa@n:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 8 bytes @ 0x3F
  1803  000040                     	ds	4
  1804  000044                     ___fldiv@bexp:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 1 bytes @ 0x43
  1808  000044                     	ds	1
  1809  000045                     ___fldiv@aexp:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 1 bytes @ 0x44
  1813  000045                     	ds	1
  1814  000046                     ?___flsub:
  1815                           	opt callstack 0
  1816  000046                     ___flsub@b:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 4 bytes @ 0x45
  1820  000046                     	ds	1
  1821  000047                     dtoa@i:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x46
  1825  000047                     	ds	1
  1826  000048                     xtoa@i:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x47
  1830  000048                     	ds	2
  1831  00004A                     xtoa@c:
  1832                           	opt callstack 0
  1833  00004A                     ___flsub@a:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x49
  1837  00004A                     	ds	2
  1838  00004C                     ?_vfpfcnvrt:
  1839                           	opt callstack 0
  1840  00004C                     vfpfcnvrt@fp:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x4B
  1844  00004C                     	ds	2
  1845  00004E                     ?___fltol:
  1846                           	opt callstack 0
  1847  00004E                     vfpfcnvrt@fmt:
  1848                           	opt callstack 0
  1849  00004E                     ___fltol@f1:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 4 bytes @ 0x4D
  1853  00004E                     	ds	2
  1854  000050                     vfpfcnvrt@ap:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x4F
  1858  000050                     	ds	2
  1859  000052                     ??_vfpfcnvrt:
  1860  000052                     ??___fltol:
  1861                           
  1862                           ; 1 bytes @ 0x51
  1863  000052                     	ds	4
  1864  000056                     ___fltol@sign1:
  1865                           	opt callstack 0
  1866  000056                     vfpfcnvrt@ll:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 8 bytes @ 0x55
  1870  000056                     	ds	1
  1871  000057                     ___fltol@exp1:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x56
  1875  000057                     	ds	1
  1876  000058                     set_pwm_duty_cycle@dutyA:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 4 bytes @ 0x57
  1880  000058                     	ds	4
  1881  00005C                     set_pwm_duty_cycle@dutyB:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 4 bytes @ 0x5B
  1885  00005C                     	ds	2
  1886  00005E                     vfpfcnvrt@llu:
  1887                           	opt callstack 0
  1888                           
  1889                           ; 8 bytes @ 0x5D
  1890  00005E                     	ds	2
  1891  000060                     ??_set_pwm_duty_cycle:
  1892                           
  1893                           ; 1 bytes @ 0x5F
  1894  000060                     	ds	2
  1895  000062                     set_pwm_duty_cycle@max_duty_val:
  1896                           	opt callstack 0
  1897                           
  1898                           ; 2 bytes @ 0x61
  1899  000062                     	ds	2
  1900  000064                     set_pwm_duty_cycle@duty_valA:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x63
  1904  000064                     	ds	2
  1905  000066                     set_pwm_duty_cycle@duty_valB:
  1906                           	opt callstack 0
  1907  000066                     vfpfcnvrt@cp:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x65
  1911  000066                     	ds	2
  1912  000068                     vfpfcnvrt@done:
  1913                           	opt callstack 0
  1914  000068                     _set_pwm_duty_cycle$2225:
  1915                           	opt callstack 0
  1916                           
  1917                           ; 4 bytes @ 0x67
  1918  000068                     	ds	2
  1919  00006A                     _vfpfcnvrt$1371:
  1920                           	opt callstack 0
  1921                           
  1922                           ; 2 bytes @ 0x69
  1923  00006A                     	ds	2
  1924  00006C                     vfpfcnvrt@c:
  1925                           	opt callstack 0
  1926  00006C                     setMotorSpeeds@motorASpeed:
  1927                           	opt callstack 0
  1928                           
  1929                           ; 2 bytes @ 0x6B
  1930  00006C                     	ds	1
  1931  00006D                     ?_vfprintf:
  1932                           	opt callstack 0
  1933  00006D                     vfprintf@fp:
  1934                           	opt callstack 0
  1935                           
  1936                           ; 2 bytes @ 0x6C
  1937  00006D                     	ds	1
  1938  00006E                     setMotorSpeeds@Aforward:
  1939                           	opt callstack 0
  1940                           
  1941                           ; 1 bytes @ 0x6D
  1942  00006E                     	ds	1
  1943  00006F                     setMotorSpeeds@Bforward:
  1944                           	opt callstack 0
  1945  00006F                     vfprintf@fmt:
  1946                           	opt callstack 0
  1947                           
  1948                           ; 2 bytes @ 0x6E
  1949  00006F                     	ds	1
  1950  000070                     setMotorSpeeds@motorBSpeed:
  1951                           	opt callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x6F
  1954  000070                     	ds	1
  1955  000071                     vfprintf@ap:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 2 bytes @ 0x70
  1959  000071                     	ds	1
  1960  000072                     ??_opErrorCorrectionDegrees:
  1961                           
  1962                           ; 1 bytes @ 0x71
  1963  000072                     	ds	1
  1964  000073                     vfprintf@cfmt:
  1965                           	opt callstack 0
  1966                           
  1967                           ; 2 bytes @ 0x72
  1968  000073                     	ds	2
  1969  000075                     
  1970                           ; 1 bytes @ 0x74
  1971 ;;
  1972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1973 ;;
  1974 ;; *************** function _main *****************
  1975 ;; Defined at:
  1976 ;;		line 1036 in file "main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  i               1   72[BANK0 ] unsigned char 
  1981 ;;  keyValue        1   75[BANK0 ] unsigned char 
  1982 ;;  keypress        1   71[BANK0 ] unsigned char 
  1983 ;;  time            7   60[BANK0 ] unsigned char [7]
  1984 ;;  tick            4   67[BANK0 ] unsigned long 
  1985 ;;  currentRobot    1   74[BANK0 ] enum E3411
  1986 ;;  currentLogSt    1   73[BANK0 ] enum E3418
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;Total ram usage:       18 bytes
  2001 ;; Hardware stack levels required when called:   15
  2002 ;; This function calls:
  2003 ;;		_I2C_Master_Read
  2004 ;;		_I2C_Master_Start
  2005 ;;		_I2C_Master_Stop
  2006 ;;		_I2C_Master_Write
  2007 ;;		___llmod
  2008 ;;		_doDisplayLog
  2009 ;;		_doOperation
  2010 ;;		_lcdInst
  2011 ;;		_printf
  2012 ;;		_replaceOldLog
  2013 ;;		_robotInit
  2014 ;; This function is called by:
  2015 ;;		Startup code after reset
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text0
  2020  000A44                     __ptext0:
  2021                           	opt callstack 0
  2022  000A44                     _main:
  2023                           	opt callstack 16
  2024                           
  2025                           ;main.c: 1037:     robotInit();
  2026                           
  2027                           ;incstack = 0
  2028  000A44  EC88  F01B         	call	_robotInit	;wreg free
  2029                           
  2030                           ;main.c: 1040:     unsigned char time[7];;main.c: 1047:     enum robotStates currentRobo
      +                          tState = standby;
  2031  000A48  0E00               	movlw	0
  2032  000A4A  0100               	movlb	0	; () banked
  2033  000A4C  6FCA               	movwf	main@currentRobotState& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 1049:     enum logStates currentLogState = one;
  2037  000A4E  0E01               	movlw	1
  2038  000A50  6FC9               	movwf	main@currentLogState& (0+255),b
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;main.c: 1051:     unsigned long tick = 0;
  2042  000A52  0E00               	movlw	0
  2043  000A54  6FC3               	movwf	main@tick& (0+255),b
  2044  000A56  0E00               	movlw	0
  2045  000A58  6FC4               	movwf	(main@tick+1)& (0+255),b
  2046  000A5A  0E00               	movlw	0
  2047  000A5C  6FC5               	movwf	(main@tick+2)& (0+255),b
  2048  000A5E  0E00               	movlw	0
  2049  000A60  6FC6               	movwf	(main@tick+3)& (0+255),b
  2050  000A62                     l8804:
  2051                           
  2052                           ;main.c: 1054:             if (tick%10==0){
  2053  000A62  C0C3  F006         	movff	main@tick,___llmod@dividend
  2054  000A66  C0C4  F007         	movff	main@tick+1,___llmod@dividend+1
  2055  000A6A  C0C5  F008         	movff	main@tick+2,___llmod@dividend+2
  2056  000A6E  C0C6  F009         	movff	main@tick+3,___llmod@dividend+3
  2057  000A72  0E0A               	movlw	10
  2058  000A74  6E0A               	movwf	___llmod@divisor,c
  2059  000A76  0E00               	movlw	0
  2060  000A78  6E0B               	movwf	___llmod@divisor+1,c
  2061  000A7A  0E00               	movlw	0
  2062  000A7C  6E0C               	movwf	___llmod@divisor+2,c
  2063  000A7E  0E00               	movlw	0
  2064  000A80  6E0D               	movwf	___llmod@divisor+3,c
  2065  000A82  ECAC  F019         	call	___llmod	;wreg free
  2066  000A86  5006               	movf	?___llmod,w,c
  2067  000A88  1007               	iorwf	?___llmod+1,w,c
  2068  000A8A  1008               	iorwf	?___llmod+2,w,c
  2069  000A8C  1009               	iorwf	?___llmod+3,w,c
  2070  000A8E  A4D8               	btfss	status,2,c
  2071  000A90  D150               	goto	l8910
  2072                           
  2073                           ;main.c: 1056:                 I2C_Master_Start();
  2074  000A92  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  2075                           
  2076                           ;main.c: 1057:                 I2C_Master_Write(0b11010000);
  2077  000A96  0E00               	movlw	0
  2078  000A98  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2079  000A9A  0ED0               	movlw	208
  2080  000A9C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2081  000A9E  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  2082                           
  2083                           ;main.c: 1058:                 I2C_Master_Write(0x00);
  2084  000AA2  0E00               	movlw	0
  2085  000AA4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2086  000AA6  0E00               	movlw	0
  2087  000AA8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2088  000AAA  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  2089                           
  2090                           ;main.c: 1059:                 I2C_Master_Stop();
  2091  000AAE  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  2092                           
  2093                           ;main.c: 1062:                 I2C_Master_Start();
  2094  000AB2  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  2095                           
  2096                           ;main.c: 1063:                 I2C_Master_Write(0b11010001);
  2097  000AB6  0E00               	movlw	0
  2098  000AB8  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2099  000ABA  0ED1               	movlw	209
  2100  000ABC  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2101  000ABE  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  2102                           
  2103                           ;main.c: 1064:                 for(unsigned char i = 0; i < 6; i++){
  2104  000AC2  0E00               	movlw	0
  2105  000AC4  0100               	movlb	0	; () banked
  2106  000AC6  6FC8               	movwf	main@i& (0+255),b
  2107  000AC8                     l8814:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;main.c: 1065:                     time[i] = I2C_Master_Read(0);
  2111  000AC8  0EBC               	movlw	low main@time
  2112  000ACA  25C8               	addwf	main@i& (0+255),w,b
  2113  000ACC  6ED9               	movwf	fsr2l,c
  2114  000ACE  6ADA               	clrf	fsr2h,c
  2115  000AD0  0E00               	movlw	high main@time
  2116  000AD2  22DA               	addwfc	fsr2h,f,c
  2117  000AD4  0E00               	movlw	0
  2118  000AD6  ECC4  F01C         	call	_I2C_Master_Read
  2119  000ADA  6EDF               	movwf	indf2,c
  2120                           
  2121                           ;main.c: 1066:                 }
  2122  000ADC  0100               	movlb	0	; () banked
  2123  000ADE  2BC8               	incf	main@i& (0+255),f,b
  2124                           
  2125                           ; BSR set to: 0
  2126  000AE0  0E05               	movlw	5
  2127  000AE2  65C8               	cpfsgt	main@i& (0+255),b
  2128  000AE4  D7F1               	goto	l8814
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 1067:                 time[6] = I2C_Master_Read(1);
  2132  000AE6  0E01               	movlw	1
  2133  000AE8  ECC4  F01C         	call	_I2C_Master_Read
  2134  000AEC  0100               	movlb	0	; () banked
  2135  000AEE  6FC2               	movwf	(main@time+6)& (0+255),b
  2136                           
  2137                           ;main.c: 1068:                 I2C_Master_Stop();
  2138  000AF0  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  2139  000AF4  D11E               	goto	l8910
  2140  000AF6                     l8822:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 1081:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2144  000AF6  0E80               	movlw	128
  2145  000AF8  EC47  F01D         	call	_lcdInst
  2146  000AFC  0E07               	movlw	7
  2147  000AFE  0100               	movlb	0	; () banked
  2148  000B00  6FBA               	movwf	??_main& (0+255),b
  2149  000B02  0E7D               	movlw	125
  2150  000B04                     u10147:
  2151  000B04  2EE8               	decfsz	wreg,f,c
  2152  000B06  D7FE               	bra	u10147
  2153  000B08  2FBA               	decfsz	??_main& (0+255),f,b
  2154  000B0A  D7FC               	bra	u10147
  2155                           
  2156                           ;main.c: 1083:                 printf("%s", "WELCOME ");
  2157  000B0C  0EE7               	movlw	low (STR_1+4)
  2158  000B0E  0100               	movlb	0	; () banked
  2159  000B10  6F80               	movwf	printf@fmt& (0+255),b
  2160  000B12  0EFF               	movlw	high (STR_1+4)
  2161  000B14  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2162  000B16  0EBF               	movlw	low STR_28
  2163  000B18  6F82               	movwf	(?_printf+2)& (0+255),b
  2164  000B1A  0EFF               	movlw	high STR_28
  2165  000B1C  6F83               	movwf	(?_printf+3)& (0+255),b
  2166  000B1E  EC9D  F01C         	call	_printf	;wreg free
  2167                           
  2168                           ;main.c: 1084:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2169  000B22  0EC6               	movlw	low STR_29
  2170  000B24  0100               	movlb	0	; () banked
  2171  000B26  6F80               	movwf	printf@fmt& (0+255),b
  2172  000B28  0EFE               	movlw	high STR_29
  2173  000B2A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2174  000B2C  C0C2  F082         	movff	main@time+6,?_printf+2
  2175  000B30  6B83               	clrf	(?_printf+3)& (0+255),b
  2176  000B32  C0C1  F084         	movff	main@time+5,?_printf+4
  2177  000B36  6B85               	clrf	(?_printf+5)& (0+255),b
  2178  000B38  C0C0  F086         	movff	main@time+4,?_printf+6
  2179  000B3C  6B87               	clrf	(?_printf+7)& (0+255),b
  2180  000B3E  EC9D  F01C         	call	_printf	;wreg free
  2181  000B42  0EC0               	movlw	192
  2182  000B44  EC47  F01D         	call	_lcdInst
  2183                           
  2184                           ;main.c: 1086:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2185  000B48  0ED5               	movlw	low STR_30
  2186  000B4A  0100               	movlb	0	; () banked
  2187  000B4C  6F80               	movwf	printf@fmt& (0+255),b
  2188  000B4E  0EFE               	movlw	high STR_30
  2189  000B50  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2190  000B52  C0BE  F082         	movff	main@time+2,?_printf+2
  2191  000B56  6B83               	clrf	(?_printf+3)& (0+255),b
  2192  000B58  C0BD  F084         	movff	main@time+1,?_printf+4
  2193  000B5C  6B85               	clrf	(?_printf+5)& (0+255),b
  2194  000B5E  C0BC  F086         	movff	main@time,?_printf+6
  2195  000B62  6B87               	clrf	(?_printf+7)& (0+255),b
  2196  000B64  EC9D  F01C         	call	_printf	;wreg free
  2197  000B68  0E90               	movlw	144
  2198  000B6A  EC47  F01D         	call	_lcdInst
  2199                           
  2200                           ;main.c: 1088:                 printf("%s","(1) START");
  2201  000B6E  0EE7               	movlw	low (STR_1+4)
  2202  000B70  0100               	movlb	0	; () banked
  2203  000B72  6F80               	movwf	printf@fmt& (0+255),b
  2204  000B74  0EFF               	movlw	high (STR_1+4)
  2205  000B76  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2206  000B78  0EAB               	movlw	low STR_32
  2207  000B7A  6F82               	movwf	(?_printf+2)& (0+255),b
  2208  000B7C  0EFF               	movlw	high STR_32
  2209  000B7E  6F83               	movwf	(?_printf+3)& (0+255),b
  2210  000B80  EC9D  F01C         	call	_printf	;wreg free
  2211  000B84  0ED0               	movlw	208
  2212  000B86  EC47  F01D         	call	_lcdInst
  2213                           
  2214                           ;main.c: 1090:                 printf("%s","(2) VIEW LOGS");
  2215  000B8A  0EE7               	movlw	low (STR_1+4)
  2216  000B8C  0100               	movlb	0	; () banked
  2217  000B8E  6F80               	movwf	printf@fmt& (0+255),b
  2218  000B90  0EFF               	movlw	high (STR_1+4)
  2219  000B92  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2220  000B94  0E0E               	movlw	low STR_34
  2221  000B96  6F82               	movwf	(?_printf+2)& (0+255),b
  2222  000B98  0EFF               	movlw	high STR_34
  2223  000B9A  6F83               	movwf	(?_printf+3)& (0+255),b
  2224  000B9C  EC9D  F01C         	call	_printf	;wreg free
  2225                           
  2226                           ;main.c: 1091:                 break;
  2227  000BA0  D0E0               	goto	l8912
  2228  000BA2                     l8842:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;main.c: 1094:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2232  000BA2  0E80               	movlw	128
  2233  000BA4  EC47  F01D         	call	_lcdInst
  2234  000BA8  0E07               	movlw	7
  2235  000BAA  0100               	movlb	0	; () banked
  2236  000BAC  6FBA               	movwf	??_main& (0+255),b
  2237  000BAE  0E7D               	movlw	125
  2238  000BB0                     u10157:
  2239  000BB0  2EE8               	decfsz	wreg,f,c
  2240  000BB2  D7FE               	bra	u10157
  2241  000BB4  2FBA               	decfsz	??_main& (0+255),f,b
  2242  000BB6  D7FC               	bra	u10157
  2243                           
  2244                           ;main.c: 1095:                 printf("%s", "OPERATION IN");
  2245  000BB8  0EE7               	movlw	low (STR_1+4)
  2246  000BBA  0100               	movlb	0	; () banked
  2247  000BBC  6F80               	movwf	printf@fmt& (0+255),b
  2248  000BBE  0EFF               	movlw	high (STR_1+4)
  2249  000BC0  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2250  000BC2  0E44               	movlw	low STR_36
  2251  000BC4  6F82               	movwf	(?_printf+2)& (0+255),b
  2252  000BC6  0EFF               	movlw	high STR_36
  2253  000BC8  6F83               	movwf	(?_printf+3)& (0+255),b
  2254  000BCA  EC9D  F01C         	call	_printf	;wreg free
  2255  000BCE  0EC0               	movlw	192
  2256  000BD0  EC47  F01D         	call	_lcdInst
  2257                           
  2258                           ;main.c: 1097:                 printf("%s","PROGRESS");
  2259  000BD4  0EE7               	movlw	low (STR_1+4)
  2260  000BD6  0100               	movlb	0	; () banked
  2261  000BD8  6F80               	movwf	printf@fmt& (0+255),b
  2262  000BDA  0EFF               	movlw	high (STR_1+4)
  2263  000BDC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2264  000BDE  0ED1               	movlw	low STR_38
  2265  000BE0  6F82               	movwf	(?_printf+2)& (0+255),b
  2266  000BE2  0EFF               	movlw	high STR_38
  2267  000BE4  6F83               	movwf	(?_printf+3)& (0+255),b
  2268  000BE6  EC9D  F01C         	call	_printf	;wreg free
  2269                           
  2270                           ;main.c: 1098:                 doOperation();
  2271  000BEA  EC09  F000         	call	_doOperation	;wreg free
  2272                           
  2273                           ;main.c: 1099:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2274  000BEE  0E01               	movlw	1
  2275  000BF0  EC47  F01D         	call	_lcdInst
  2276  000BF4  0E11               	movlw	17
  2277  000BF6  0100               	movlb	0	; () banked
  2278  000BF8  6FBA               	movwf	??_main& (0+255),b
  2279  000BFA  0E3A               	movlw	58
  2280  000BFC                     u10167:
  2281  000BFC  2EE8               	decfsz	wreg,f,c
  2282  000BFE  D7FE               	bra	u10167
  2283  000C00  2FBA               	decfsz	??_main& (0+255),f,b
  2284  000C02  D7FC               	bra	u10167
  2285  000C04  F000               	nop	
  2286                           
  2287                           ;main.c: 1100:                 currentRobotState = operationComplete;
  2288  000C06  0E02               	movlw	2
  2289  000C08  D091               	goto	L1
  2290  000C0A                     l8860:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;main.c: 1106:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2294  000C0A  0E80               	movlw	128
  2295  000C0C  EC47  F01D         	call	_lcdInst
  2296  000C10  0E07               	movlw	7
  2297  000C12  0100               	movlb	0	; () banked
  2298  000C14  6FBA               	movwf	??_main& (0+255),b
  2299  000C16  0E7D               	movlw	125
  2300  000C18                     u10177:
  2301  000C18  2EE8               	decfsz	wreg,f,c
  2302  000C1A  D7FE               	bra	u10177
  2303  000C1C  2FBA               	decfsz	??_main& (0+255),f,b
  2304  000C1E  D7FC               	bra	u10177
  2305                           
  2306                           ;main.c: 1107:                 printf("%s", "OP. COMPLETE");
  2307  000C20  0EE7               	movlw	low (STR_1+4)
  2308  000C22  0100               	movlb	0	; () banked
  2309  000C24  6F80               	movwf	printf@fmt& (0+255),b
  2310  000C26  0EFF               	movlw	high (STR_1+4)
  2311  000C28  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2312  000C2A  0E2A               	movlw	low STR_40
  2313  000C2C  6F82               	movwf	(?_printf+2)& (0+255),b
  2314  000C2E  0EFF               	movlw	high STR_40
  2315  000C30  6F83               	movwf	(?_printf+3)& (0+255),b
  2316  000C32  EC9D  F01C         	call	_printf	;wreg free
  2317  000C36  0EC0               	movlw	192
  2318  000C38  EC47  F01D         	call	_lcdInst
  2319                           
  2320                           ;main.c: 1109:                 printf("%s","(1) VIEW LOG");
  2321  000C3C  0EE7               	movlw	low (STR_1+4)
  2322  000C3E  0100               	movlb	0	; () banked
  2323  000C40  6F80               	movwf	printf@fmt& (0+255),b
  2324  000C42  0EFF               	movlw	high (STR_1+4)
  2325  000C44  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2326  000C46  0E37               	movlw	low STR_42
  2327  000C48  6F82               	movwf	(?_printf+2)& (0+255),b
  2328  000C4A  0EFF               	movlw	high STR_42
  2329  000C4C  6F83               	movwf	(?_printf+3)& (0+255),b
  2330  000C4E  EC9D  F01C         	call	_printf	;wreg free
  2331  000C52  0E90               	movlw	144
  2332  000C54  EC47  F01D         	call	_lcdInst
  2333                           
  2334                           ;main.c: 1111:                 printf("%s","(2) QUIT DO NOT");
  2335  000C58  0EE7               	movlw	low (STR_1+4)
  2336  000C5A  0100               	movlb	0	; () banked
  2337  000C5C  6F80               	movwf	printf@fmt& (0+255),b
  2338  000C5E  0EFF               	movlw	high (STR_1+4)
  2339  000C60  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2340  000C62  0EA7               	movlw	low STR_44
  2341  000C64  6F82               	movwf	(?_printf+2)& (0+255),b
  2342  000C66  0EFE               	movlw	high STR_44
  2343  000C68  6F83               	movwf	(?_printf+3)& (0+255),b
  2344  000C6A  EC9D  F01C         	call	_printf	;wreg free
  2345  000C6E  0ED0               	movlw	208
  2346  000C70  EC47  F01D         	call	_lcdInst
  2347                           
  2348                           ;main.c: 1113:                 printf("%s","SAVE LOG");
  2349  000C74  0EE7               	movlw	low (STR_1+4)
  2350  000C76  0100               	movlb	0	; () banked
  2351  000C78  6F80               	movwf	printf@fmt& (0+255),b
  2352  000C7A  0EFF               	movlw	high (STR_1+4)
  2353  000C7C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2354  000C7E  0EC8               	movlw	low STR_46
  2355  000C80  6F82               	movwf	(?_printf+2)& (0+255),b
  2356  000C82  0EFF               	movlw	high STR_46
  2357  000C84  6F83               	movwf	(?_printf+3)& (0+255),b
  2358  000C86  EC9D  F01C         	call	_printf	;wreg free
  2359                           
  2360                           ;main.c: 1114:                 currentLogState = justRan;
  2361  000C8A  0E00               	movlw	0
  2362  000C8C  0100               	movlb	0	; () banked
  2363  000C8E  6FC9               	movwf	main@currentLogState& (0+255),b
  2364                           
  2365                           ;main.c: 1115:                 break;
  2366  000C90  D068               	goto	l8912
  2367  000C92                     l8880:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 1118:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2371  000C92  0E80               	movlw	128
  2372  000C94  EC47  F01D         	call	_lcdInst
  2373  000C98  0E07               	movlw	7
  2374  000C9A  0100               	movlb	0	; () banked
  2375  000C9C  6FBA               	movwf	??_main& (0+255),b
  2376  000C9E  0E7D               	movlw	125
  2377  000CA0                     u10187:
  2378  000CA0  2EE8               	decfsz	wreg,f,c
  2379  000CA2  D7FE               	bra	u10187
  2380  000CA4  2FBA               	decfsz	??_main& (0+255),f,b
  2381  000CA6  D7FC               	bra	u10187
  2382                           
  2383                           ;main.c: 1119:                 printf("%s", "SELECT LOG");
  2384  000CA8  0EE7               	movlw	low (STR_1+4)
  2385  000CAA  0100               	movlb	0	; () banked
  2386  000CAC  6F80               	movwf	printf@fmt& (0+255),b
  2387  000CAE  0EFF               	movlw	high (STR_1+4)
  2388  000CB0  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2389  000CB2  0E6B               	movlw	low STR_48
  2390  000CB4  6F82               	movwf	(?_printf+2)& (0+255),b
  2391  000CB6  0EFF               	movlw	high STR_48
  2392  000CB8  6F83               	movwf	(?_printf+3)& (0+255),b
  2393  000CBA  EC9D  F01C         	call	_printf	;wreg free
  2394  000CBE  0EC0               	movlw	192
  2395  000CC0  EC47  F01D         	call	_lcdInst
  2396                           
  2397                           ;main.c: 1121:                 printf("%s","(1 IS OLDEST)");
  2398  000CC4  0EE7               	movlw	low (STR_1+4)
  2399  000CC6  0100               	movlb	0	; () banked
  2400  000CC8  6F80               	movwf	printf@fmt& (0+255),b
  2401  000CCA  0EFF               	movlw	high (STR_1+4)
  2402  000CCC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2403  000CCE  0EF2               	movlw	low STR_50
  2404  000CD0  6F82               	movwf	(?_printf+2)& (0+255),b
  2405  000CD2  0EFE               	movlw	high STR_50
  2406  000CD4  6F83               	movwf	(?_printf+3)& (0+255),b
  2407  000CD6  EC9D  F01C         	call	_printf	;wreg free
  2408  000CDA  0E90               	movlw	144
  2409  000CDC  EC47  F01D         	call	_lcdInst
  2410                           
  2411                           ;main.c: 1123:                 printf("%s","(1) (2) (3) (4)");
  2412  000CE0  0EE7               	movlw	low (STR_1+4)
  2413  000CE2  0100               	movlb	0	; () banked
  2414  000CE4  6F80               	movwf	printf@fmt& (0+255),b
  2415  000CE6  0EFF               	movlw	high (STR_1+4)
  2416  000CE8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2417  000CEA  0E87               	movlw	low STR_52
  2418  000CEC  6F82               	movwf	(?_printf+2)& (0+255),b
  2419  000CEE  0EFE               	movlw	high STR_52
  2420  000CF0  6F83               	movwf	(?_printf+3)& (0+255),b
  2421  000CF2  EC9D  F01C         	call	_printf	;wreg free
  2422                           
  2423                           ;main.c: 1124:                 break;
  2424  000CF6  D035               	goto	l8912
  2425  000CF8                     l8894:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 1126:                 if (currentLogState == justRan){
  2429  000CF8  51C9               	movf	main@currentLogState& (0+255),w,b
  2430  000CFA  A4D8               	btfss	status,2,c
  2431  000CFC  D005               	goto	l8900
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;main.c: 1127:                     replaceOldLog();
  2435  000CFE  EC91  F01A         	call	_replaceOldLog	;wreg free
  2436                           
  2437                           ;main.c: 1128:                     currentLogState = four;
  2438  000D02  0E04               	movlw	4
  2439  000D04  0100               	movlb	0	; () banked
  2440  000D06  6FC9               	movwf	main@currentLogState& (0+255),b
  2441  000D08                     l8900:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 1130:                 doDisplayLog(currentLogState);
  2445  000D08  C0C9  F08E         	movff	main@currentLogState,doDisplayLog@logNumber
  2446  000D0C  6B8F               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2447  000D0E  EC29  F007         	call	_doDisplayLog	;wreg free
  2448                           
  2449                           ;main.c: 1131:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2450  000D12  0E01               	movlw	1
  2451  000D14  EC47  F01D         	call	_lcdInst
  2452  000D18  0E11               	movlw	17
  2453  000D1A  0100               	movlb	0	; () banked
  2454  000D1C  6FBA               	movwf	??_main& (0+255),b
  2455  000D1E  0E3A               	movlw	58
  2456  000D20                     u10197:
  2457  000D20  2EE8               	decfsz	wreg,f,c
  2458  000D22  D7FE               	bra	u10197
  2459  000D24  2FBA               	decfsz	??_main& (0+255),f,b
  2460  000D26  D7FC               	bra	u10197
  2461  000D28  F000               	nop	
  2462                           
  2463                           ;main.c: 1132:                 currentRobotState = standby;
  2464  000D2A  0E00               	movlw	0
  2465  000D2C                     L1:
  2466  000D2C  0100               	movlb	0	; () banked
  2467  000D2E  6FCA               	movwf	main@currentRobotState& (0+255),b
  2468                           
  2469                           ;main.c: 1133:                 break;
  2470  000D30  D018               	goto	l8912
  2471  000D32                     l8910:
  2472  000D32  0100               	movlb	0	; () banked
  2473  000D34  51CA               	movf	main@currentRobotState& (0+255),w,b
  2474  000D36  6FBA               	movwf	??_main& (0+255),b
  2475  000D38  6BBB               	clrf	(??_main+1)& (0+255),b
  2476                           
  2477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 1, Range of values is 0 to 0
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte            4     3 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484  000D3A  51BB               	movf	(??_main+1)& (0+255),w,b
  2485  000D3C  0A00               	xorlw	0	; case 0
  2486  000D3E  A4D8               	btfss	status,2,c
  2487  000D40  D010               	goto	l8912
  2488                           
  2489                           ; BSR set to: 0
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 5, Range of values is 0 to 4
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           16     9 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  000D42  51BA               	movf	??_main& (0+255),w,b
  2497  000D44  0A00               	xorlw	0	; case 0
  2498  000D46  B4D8               	btfsc	status,2,c
  2499  000D48  D6D6               	goto	l8822
  2500  000D4A  0A01               	xorlw	1	; case 1
  2501  000D4C  B4D8               	btfsc	status,2,c
  2502  000D4E  D729               	goto	l8842
  2503  000D50  0A03               	xorlw	3	; case 2
  2504  000D52  B4D8               	btfsc	status,2,c
  2505  000D54  D75A               	goto	l8860
  2506  000D56  0A01               	xorlw	1	; case 3
  2507  000D58  B4D8               	btfsc	status,2,c
  2508  000D5A  D79B               	goto	l8880
  2509  000D5C  0A07               	xorlw	7	; case 4
  2510  000D5E  B4D8               	btfsc	status,2,c
  2511  000D60  D7CB               	goto	l8894
  2512  000D62                     l8912:
  2513                           
  2514                           ;main.c: 1137:         if(keyPressed){
  2515  000D62  0100               	movlb	0	; () banked
  2516  000D64  51D2               	movf	_keyPressed& (0+255),w,b	;volatile
  2517  000D66  B4D8               	btfsc	status,2,c
  2518  000D68  D064               	goto	l410
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;main.c: 1140:             keyPressed = 0;
  2522  000D6A  0E00               	movlw	0
  2523  000D6C  6FD2               	movwf	_keyPressed& (0+255),b	;volatile
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 1143:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2527  000D6E  3881               	swapf	3969,w,c	;volatile
  2528  000D70  0B0F               	andlw	15
  2529  000D72  0B0F               	andlw	15
  2530  000D74  6FC7               	movwf	main@keypress& (0+255),b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 1144:             char keyValue = keys[keypress];
  2534  000D76  0E43               	movlw	low _keys
  2535  000D78  25C7               	addwf	main@keypress& (0+255),w,b
  2536  000D7A  6EF6               	movwf	tblptrl,c
  2537  000D7C  6AF7               	clrf	tblptrh,c
  2538  000D7E  0EFE               	movlw	high _keys
  2539  000D80  22F7               	addwfc	tblptrh,f,c
  2540  000D82                     	if	0	;There are less than 3 active tblptr bytes
  2541  000D82                     	endif
  2542  000D82  0008               	tblrd		*
  2543  000D84  CFF5 F0CB          	movff	tablat,main@keyValue
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;main.c: 1145:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2547  000D88  0E01               	movlw	1
  2548  000D8A  EC47  F01D         	call	_lcdInst
  2549  000D8E  0E11               	movlw	17
  2550  000D90  0100               	movlb	0	; () banked
  2551  000D92  6FBA               	movwf	??_main& (0+255),b
  2552  000D94  0E3A               	movlw	58
  2553  000D96                     u10207:
  2554  000D96  2EE8               	decfsz	wreg,f,c
  2555  000D98  D7FE               	bra	u10207
  2556  000D9A  2FBA               	decfsz	??_main& (0+255),f,b
  2557  000D9C  D7FC               	bra	u10207
  2558  000D9E  F000               	nop	
  2559                           
  2560                           ;main.c: 1146:             switch (currentRobotState){
  2561  000DA0  D032               	goto	l8960
  2562  000DA2                     l8924:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;main.c: 1148:                     if (keyValue == '1'){
  2566  000DA2  0E31               	movlw	49
  2567  000DA4  19CB               	xorwf	main@keyValue& (0+255),w,b
  2568  000DA6  A4D8               	btfss	status,2,c
  2569  000DA8  D002               	goto	l8928
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 1149:                         currentRobotState = operation;
  2573  000DAA  0E01               	movlw	1
  2574  000DAC  D011               	goto	L4
  2575  000DAE                     l8928:
  2576                           
  2577                           ; BSR set to: 0
  2578  000DAE  0E32               	movlw	50
  2579  000DB0  19CB               	xorwf	main@keyValue& (0+255),w,b
  2580  000DB2  A4D8               	btfss	status,2,c
  2581  000DB4  D03E               	goto	l410
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;main.c: 1151:                         currentRobotState = selectLog;
  2585  000DB6  0E03               	movlw	3
  2586  000DB8  D00B               	goto	L4
  2587  000DBA                     l8932:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;main.c: 1157:                     if (keyValue == '1'){
  2591  000DBA  0E31               	movlw	49
  2592  000DBC  19CB               	xorwf	main@keyValue& (0+255),w,b
  2593  000DBE  A4D8               	btfss	status,2,c
  2594  000DC0  D002               	goto	l8936
  2595  000DC2                     u10060:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 1158:                         currentRobotState = displayLog;
  2599  000DC2  0E04               	movlw	4
  2600  000DC4  D005               	goto	L4
  2601  000DC6                     l8936:
  2602                           
  2603                           ; BSR set to: 0
  2604  000DC6  0E32               	movlw	50
  2605  000DC8  19CB               	xorwf	main@keyValue& (0+255),w,b
  2606  000DCA  A4D8               	btfss	status,2,c
  2607  000DCC  D032               	goto	l410
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;main.c: 1160:                         currentRobotState = standby;
  2611  000DCE  0E00               	movlw	0
  2612  000DD0                     L4:
  2613  000DD0  6FCA               	movwf	main@currentRobotState& (0+255),b
  2614  000DD2  D02F               	goto	l410
  2615  000DD4                     l8940:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 1164:                     if (keyValue == '1'){
  2619  000DD4  0E31               	movlw	49
  2620  000DD6  19CB               	xorwf	main@keyValue& (0+255),w,b
  2621  000DD8  A4D8               	btfss	status,2,c
  2622  000DDA  D002               	goto	l8944
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;main.c: 1165:                         currentLogState = one;
  2626  000DDC  0E01               	movlw	1
  2627  000DDE  D011               	goto	L7
  2628  000DE0                     l8944:
  2629                           
  2630                           ; BSR set to: 0
  2631  000DE0  0E32               	movlw	50
  2632  000DE2  19CB               	xorwf	main@keyValue& (0+255),w,b
  2633  000DE4  A4D8               	btfss	status,2,c
  2634  000DE6  D002               	goto	l8948
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;main.c: 1167:                         currentLogState = two;
  2638  000DE8  0E02               	movlw	2
  2639  000DEA  D00B               	goto	L7
  2640  000DEC                     l8948:
  2641                           
  2642                           ; BSR set to: 0
  2643  000DEC  0E33               	movlw	51
  2644  000DEE  19CB               	xorwf	main@keyValue& (0+255),w,b
  2645  000DF0  A4D8               	btfss	status,2,c
  2646  000DF2  D002               	goto	l8952
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 1169:                         currentLogState = three;
  2650  000DF4  0E03               	movlw	3
  2651  000DF6  D005               	goto	L7
  2652  000DF8                     l8952:
  2653                           
  2654                           ; BSR set to: 0
  2655  000DF8  0E34               	movlw	52
  2656  000DFA  19CB               	xorwf	main@keyValue& (0+255),w,b
  2657  000DFC  A4D8               	btfss	status,2,c
  2658  000DFE  D019               	goto	l410
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;main.c: 1171:                         currentLogState = '4';
  2662  000E00  0E34               	movlw	52
  2663  000E02                     L7:
  2664  000E02  6FC9               	movwf	main@currentLogState& (0+255),b
  2665                           
  2666                           ;main.c: 1172:                     } else {
  2667  000E04  D7DE               	goto	u10060
  2668  000E06                     l8960:
  2669  000E06  0100               	movlb	0	; () banked
  2670  000E08  51CA               	movf	main@currentRobotState& (0+255),w,b
  2671  000E0A  6FBA               	movwf	??_main& (0+255),b
  2672  000E0C  6BBB               	clrf	(??_main+1)& (0+255),b
  2673                           
  2674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2675                           ; Switch size 1, requested type "simple"
  2676                           ; Number of cases is 1, Range of values is 0 to 0
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte            4     3 (average)
  2680                           ;	Chosen strategy is simple_byte
  2681  000E0E  51BB               	movf	(??_main+1)& (0+255),w,b
  2682  000E10  0A00               	xorlw	0	; case 0
  2683  000E12  A4D8               	btfss	status,2,c
  2684  000E14  D00E               	goto	l410
  2685                           
  2686                           ; BSR set to: 0
  2687                           ; Switch size 1, requested type "simple"
  2688                           ; Number of cases is 5, Range of values is 0 to 4
  2689                           ; switch strategies available:
  2690                           ; Name         Instructions Cycles
  2691                           ; simple_byte           16     9 (average)
  2692                           ;	Chosen strategy is simple_byte
  2693  000E16  51BA               	movf	??_main& (0+255),w,b
  2694  000E18  0A00               	xorlw	0	; case 0
  2695  000E1A  B4D8               	btfsc	status,2,c
  2696  000E1C  D7C2               	goto	l8924
  2697  000E1E  0A01               	xorlw	1	; case 1
  2698  000E20  B4D8               	btfsc	status,2,c
  2699  000E22  D007               	goto	l410
  2700  000E24  0A03               	xorlw	3	; case 2
  2701  000E26  B4D8               	btfsc	status,2,c
  2702  000E28  D7C8               	goto	l8932
  2703  000E2A  0A01               	xorlw	1	; case 3
  2704  000E2C  B4D8               	btfsc	status,2,c
  2705  000E2E  D7D2               	goto	l8940
  2706  000E30  0A07               	xorlw	7	; case 4
  2707  000E32                     l410:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;main.c: 1192:         tick++;
  2711                           
  2712                           ; BSR set to: 0
  2713  000E32  0E01               	movlw	1
  2714  000E34  27C3               	addwf	main@tick& (0+255),f,b
  2715  000E36  0E00               	movlw	0
  2716  000E38  23C4               	addwfc	(main@tick+1)& (0+255),f,b
  2717  000E3A  23C5               	addwfc	(main@tick+2)& (0+255),f,b
  2718  000E3C  23C6               	addwfc	(main@tick+3)& (0+255),f,b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;main.c: 1193:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2722  000E3E  0E04               	movlw	4
  2723  000E40  0100               	movlb	0	; () banked
  2724  000E42  6FBA               	movwf	??_main& (0+255),b
  2725  000E44  0E3D               	movlw	61
  2726  000E46                     u10217:
  2727  000E46  2EE8               	decfsz	wreg,f,c
  2728  000E48  D7FE               	bra	u10217
  2729  000E4A  2FBA               	decfsz	??_main& (0+255),f,b
  2730  000E4C  D7FC               	bra	u10217
  2731  000E4E  D000               	nop2	
  2732  000E50  D608               	goto	l8804
  2733  000E52                     __end_of_main:
  2734                           	opt callstack 0
  2735                           
  2736 ;; *************** function _robotInit *****************
  2737 ;; Defined at:
  2738 ;;		line 983 in file "main.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    7
  2759 ;; This function calls:
  2760 ;;		_EncoderInit
  2761 ;;		_I2C_Master_Init
  2762 ;;		_initLCD
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;;		_mainEEPROM
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text1
  2770  003710                     __ptext1:
  2771                           	opt callstack 0
  2772  003710                     _robotInit:
  2773                           	opt callstack 23
  2774                           
  2775                           ;main.c: 985:     EncoderInit();
  2776                           
  2777                           ;incstack = 0
  2778  003710  EC18  F01D         	call	_EncoderInit	;wreg free
  2779                           
  2780                           ;main.c: 989:     LATD = 0x00;
  2781  003714  0E00               	movlw	0
  2782  003716  6E8C               	movwf	3980,c	;volatile
  2783                           
  2784                           ;main.c: 990:     TRISD = 0x00;
  2785  003718  0E00               	movlw	0
  2786  00371A  6E95               	movwf	3989,c	;volatile
  2787                           
  2788                           ;main.c: 993:     LATB = 0x00;
  2789  00371C  0E00               	movlw	0
  2790  00371E  6E8A               	movwf	3978,c	;volatile
  2791                           
  2792                           ;main.c: 994:     TRISBbits.TRISB1 = 1;
  2793  003720  8293               	bsf	3987,1,c	;volatile
  2794                           
  2795                           ;main.c: 995:     TRISBbits.TRISB4 = 1;
  2796  003722  8893               	bsf	3987,4,c	;volatile
  2797                           
  2798                           ;main.c: 996:     TRISBbits.TRISB5 = 1;
  2799  003724  8A93               	bsf	3987,5,c	;volatile
  2800                           
  2801                           ;main.c: 997:     TRISBbits.TRISB6 = 1;
  2802  003726  8C93               	bsf	3987,6,c	;volatile
  2803                           
  2804                           ;main.c: 998:     TRISBbits.TRISB7 = 1;
  2805  003728  8E93               	bsf	3987,7,c	;volatile
  2806                           
  2807                           ;main.c: 1001:     TRISAbits.TRISA4 = 0;
  2808  00372A  9892               	bcf	3986,4,c	;volatile
  2809                           
  2810                           ;main.c: 1002:     LATAbits.LATA4 = 0;
  2811  00372C  9889               	bcf	3977,4,c	;volatile
  2812                           
  2813                           ;main.c: 1005:     I2C_Master_Init(100000);
  2814  00372E  0EA0               	movlw	160
  2815  003730  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2816  003732  0E86               	movlw	134
  2817  003734  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2818  003736  0E01               	movlw	1
  2819  003738  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2820  00373A  0E00               	movlw	0
  2821  00373C  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2822  00373E  EC11  F01A         	call	_I2C_Master_Init	;wreg free
  2823                           
  2824                           ;main.c: 1012:     ADCON1 = 0b00001111;
  2825  003742  0E0F               	movlw	15
  2826  003744  6EC1               	movwf	4033,c	;volatile
  2827                           
  2828                           ;main.c: 1015:     INT1IE = 1;
  2829  003746  86F0               	bsf	4080,3,c	;volatile
  2830                           
  2831                           ;main.c: 1018:     initLCD();
  2832  003748  EC77  F019         	call	_initLCD	;wreg free
  2833                           
  2834                           ;main.c: 1021:     (INTCONbits.GIE = 1);
  2835  00374C  8EF2               	bsf	4082,7,c	;volatile
  2836  00374E  0012               	return		;funcret
  2837  003750                     __end_of_robotInit:
  2838                           	opt callstack 0
  2839                           
  2840 ;; *************** function _initLCD *****************
  2841 ;; Defined at:
  2842 ;;		line 69 in file "lcd.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;Total ram usage:        1 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    6
  2863 ;; This function calls:
  2864 ;;		_lcdInst
  2865 ;;		_send_byte
  2866 ;;		_send_nibble
  2867 ;; This function is called by:
  2868 ;;		_robotInit
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text2
  2873  0032EE                     __ptext2:
  2874                           	opt callstack 0
  2875  0032EE                     _initLCD:
  2876                           	opt callstack 23
  2877                           
  2878                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2879                           
  2880                           ;incstack = 0
  2881  0032EE  0E31               	movlw	49
  2882  0032F0  6E0A               	movwf	??_initLCD& (0+255),c
  2883  0032F2  0EB2               	movlw	178
  2884  0032F4                     u10227:
  2885  0032F4  2EE8               	decfsz	wreg,f,c
  2886  0032F6  D7FE               	bra	u10227
  2887  0032F8  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2888  0032FA  D7FC               	bra	u10227
  2889  0032FC  D000               	nop2	
  2890                           
  2891                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2892  0032FE  948C               	bcf	3980,2,c	;volatile
  2893                           
  2894                           ;lcd.c: 74:     send_nibble(0b0011);
  2895  003300  0E03               	movlw	3
  2896  003302  EC24  F01D         	call	_send_nibble
  2897                           
  2898                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2899  003306  0E11               	movlw	17
  2900  003308  6E0A               	movwf	??_initLCD& (0+255),c
  2901  00330A  0E3A               	movlw	58
  2902  00330C                     u10237:
  2903  00330C  2EE8               	decfsz	wreg,f,c
  2904  00330E  D7FE               	bra	u10237
  2905  003310  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2906  003312  D7FC               	bra	u10237
  2907  003314  D000               	nop2	
  2908                           
  2909                           ;lcd.c: 76:     send_nibble(0b0011);
  2910  003316  0E03               	movlw	3
  2911  003318  EC24  F01D         	call	_send_nibble
  2912                           
  2913                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2914  00331C  0E7D               	movlw	125
  2915  00331E                     u10247:
  2916  00331E  2EE8               	decfsz	wreg,f,c
  2917  003320  D7FE               	bra	u10247
  2918                           
  2919                           ;lcd.c: 78:     send_byte(0b00110010);
  2920  003322  0E32               	movlw	50
  2921  003324  EC38  F01D         	call	_send_byte
  2922                           
  2923                           ;lcd.c: 80:     send_byte(0b00101000);
  2924  003328  0E28               	movlw	40
  2925  00332A  EC38  F01D         	call	_send_byte
  2926                           
  2927                           ;lcd.c: 81:     send_byte(0b00001000);
  2928  00332E  0E08               	movlw	8
  2929  003330  EC38  F01D         	call	_send_byte
  2930                           
  2931                           ;lcd.c: 82:     send_byte(0b00000001);
  2932  003334  0E01               	movlw	1
  2933  003336  EC38  F01D         	call	_send_byte
  2934                           
  2935                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2936  00333A  0E11               	movlw	17
  2937  00333C  6E0A               	movwf	??_initLCD& (0+255),c
  2938  00333E  0E3A               	movlw	58
  2939  003340                     u10257:
  2940  003340  2EE8               	decfsz	wreg,f,c
  2941  003342  D7FE               	bra	u10257
  2942  003344  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2943  003346  D7FC               	bra	u10257
  2944  003348  D000               	nop2	
  2945                           
  2946                           ;lcd.c: 84:     send_byte(0b00000110);
  2947  00334A  0E06               	movlw	6
  2948  00334C  EC38  F01D         	call	_send_byte
  2949                           
  2950                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2951  003350  0E0C               	movlw	12
  2952  003352  EC47  F01D         	call	_lcdInst
  2953  003356  0012               	return		;funcret
  2954  003358                     __end_of_initLCD:
  2955                           	opt callstack 0
  2956                           
  2957 ;; *************** function _I2C_Master_Init *****************
  2958 ;; Defined at:
  2959 ;;		line 32 in file "I2C.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        8 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    3
  2980 ;; This function calls:
  2981 ;;		___lldiv
  2982 ;; This function is called by:
  2983 ;;		_robotInit
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text3
  2988  003422                     __ptext3:
  2989                           	opt callstack 0
  2990  003422                     _I2C_Master_Init:
  2991                           	opt callstack 26
  2992                           
  2993                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2994                           
  2995                           ;incstack = 0
  2996  003422  9AC6               	bcf	4038,5,c	;volatile
  2997                           
  2998                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2999  003424  8694               	bsf	3988,3,c	;volatile
  3000                           
  3001                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3002  003426  8894               	bsf	3988,4,c	;volatile
  3003                           
  3004                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3005  003428  0E80               	movlw	128
  3006  00342A  6E06               	movwf	___lldiv@dividend,c
  3007  00342C  0E96               	movlw	150
  3008  00342E  6E07               	movwf	___lldiv@dividend+1,c
  3009  003430  0E98               	movlw	152
  3010  003432  6E08               	movwf	___lldiv@dividend+2,c
  3011  003434  0E00               	movlw	0
  3012  003436  6E09               	movwf	___lldiv@dividend+3,c
  3013  003438  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3014  00343C  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3015  003440  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3016  003444  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3017  003448  0E02               	movlw	2
  3018  00344A                     u9585:
  3019  00344A  90D8               	bcf	status,0,c
  3020  00344C  3617               	rlcf	??_I2C_Master_Init,f,c
  3021  00344E  3618               	rlcf	??_I2C_Master_Init+1,f,c
  3022  003450  3619               	rlcf	??_I2C_Master_Init+2,f,c
  3023  003452  361A               	rlcf	??_I2C_Master_Init+3,f,c
  3024  003454  2EE8               	decfsz	wreg,f,c
  3025  003456  D7F9               	goto	u9585
  3026  003458  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  3027  00345C  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3028  003460  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3029  003464  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3030  003468  ECC8  F018         	call	___lldiv	;wreg free
  3031  00346C  0406               	decf	?___lldiv,w,c
  3032  00346E  6EC8               	movwf	4040,c	;volatile
  3033                           
  3034                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3035  003470  0E80               	movlw	128
  3036  003472  6EC7               	movwf	4039,c	;volatile
  3037                           
  3038                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3039  003474  0E28               	movlw	40
  3040  003476  6EC6               	movwf	4038,c	;volatile
  3041                           
  3042                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3043  003478  0E00               	movlw	0
  3044  00347A  6EC5               	movwf	4037,c	;volatile
  3045  00347C  0012               	return		;funcret
  3046  00347E                     __end_of_I2C_Master_Init:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function ___lldiv *****************
  3050 ;; Defined at:
  3051 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  dividend        4    5[COMRAM] unsigned long 
  3054 ;;  divisor         4    9[COMRAM] unsigned long 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  quotient        4   13[COMRAM] unsigned long 
  3057 ;;  counter         1   17[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  4    5[COMRAM] unsigned long 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:       13 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    2
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_I2C_Master_Init
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text4
  3082  003190                     __ptext4:
  3083                           	opt callstack 0
  3084  003190                     ___lldiv:
  3085                           	opt callstack 26
  3086                           
  3087                           ;incstack = 0
  3088  003190  0E00               	movlw	0
  3089  003192  6E0E               	movwf	___lldiv@quotient,c
  3090  003194  0E00               	movlw	0
  3091  003196  6E0F               	movwf	___lldiv@quotient+1,c
  3092  003198  0E00               	movlw	0
  3093  00319A  6E10               	movwf	___lldiv@quotient+2,c
  3094  00319C  0E00               	movlw	0
  3095  00319E  6E11               	movwf	___lldiv@quotient+3,c
  3096  0031A0  500A               	movf	___lldiv@divisor,w,c
  3097  0031A2  100B               	iorwf	___lldiv@divisor+1,w,c
  3098  0031A4  100C               	iorwf	___lldiv@divisor+2,w,c
  3099  0031A6  100D               	iorwf	___lldiv@divisor+3,w,c
  3100  0031A8  B4D8               	btfsc	status,2,c
  3101  0031AA  D02A               	goto	l730
  3102  0031AC  0E01               	movlw	1
  3103  0031AE  6E12               	movwf	___lldiv@counter,c
  3104  0031B0  D006               	goto	l7982
  3105  0031B2                     l7980:
  3106  0031B2  90D8               	bcf	status,0,c
  3107  0031B4  360A               	rlcf	___lldiv@divisor,f,c
  3108  0031B6  360B               	rlcf	___lldiv@divisor+1,f,c
  3109  0031B8  360C               	rlcf	___lldiv@divisor+2,f,c
  3110  0031BA  360D               	rlcf	___lldiv@divisor+3,f,c
  3111  0031BC  2A12               	incf	___lldiv@counter,f,c
  3112  0031BE                     l7982:
  3113  0031BE  AE0D               	btfss	___lldiv@divisor+3,7,c
  3114  0031C0  D7F8               	goto	l7980
  3115  0031C2                     u9260:
  3116  0031C2  90D8               	bcf	status,0,c
  3117  0031C4  360E               	rlcf	___lldiv@quotient,f,c
  3118  0031C6  360F               	rlcf	___lldiv@quotient+1,f,c
  3119  0031C8  3610               	rlcf	___lldiv@quotient+2,f,c
  3120  0031CA  3611               	rlcf	___lldiv@quotient+3,f,c
  3121  0031CC  500A               	movf	___lldiv@divisor,w,c
  3122  0031CE  5C06               	subwf	___lldiv@dividend,w,c
  3123  0031D0  500B               	movf	___lldiv@divisor+1,w,c
  3124  0031D2  5807               	subwfb	___lldiv@dividend+1,w,c
  3125  0031D4  500C               	movf	___lldiv@divisor+2,w,c
  3126  0031D6  5808               	subwfb	___lldiv@dividend+2,w,c
  3127  0031D8  500D               	movf	___lldiv@divisor+3,w,c
  3128  0031DA  5809               	subwfb	___lldiv@dividend+3,w,c
  3129  0031DC  A0D8               	btfss	status,0,c
  3130  0031DE  D009               	goto	l7992
  3131  0031E0  500A               	movf	___lldiv@divisor,w,c
  3132  0031E2  5E06               	subwf	___lldiv@dividend,f,c
  3133  0031E4  500B               	movf	___lldiv@divisor+1,w,c
  3134  0031E6  5A07               	subwfb	___lldiv@dividend+1,f,c
  3135  0031E8  500C               	movf	___lldiv@divisor+2,w,c
  3136  0031EA  5A08               	subwfb	___lldiv@dividend+2,f,c
  3137  0031EC  500D               	movf	___lldiv@divisor+3,w,c
  3138  0031EE  5A09               	subwfb	___lldiv@dividend+3,f,c
  3139  0031F0  800E               	bsf	___lldiv@quotient,0,c
  3140  0031F2                     l7992:
  3141  0031F2  90D8               	bcf	status,0,c
  3142  0031F4  320D               	rrcf	___lldiv@divisor+3,f,c
  3143  0031F6  320C               	rrcf	___lldiv@divisor+2,f,c
  3144  0031F8  320B               	rrcf	___lldiv@divisor+1,f,c
  3145  0031FA  320A               	rrcf	___lldiv@divisor,f,c
  3146  0031FC  2E12               	decfsz	___lldiv@counter,f,c
  3147  0031FE  D7E1               	goto	u9260
  3148  003200                     l730:
  3149  003200  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  3150  003204  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  3151  003208  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  3152  00320C  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  3153  003210  0012               	return		;funcret
  3154  003212                     __end_of___lldiv:
  3155                           	opt callstack 0
  3156                           
  3157 ;; *************** function _EncoderInit *****************
  3158 ;; Defined at:
  3159 ;;		line 190 in file "main.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    2
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_robotInit
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text5
  3188  003A30                     __ptext5:
  3189                           	opt callstack 0
  3190  003A30                     _EncoderInit:
  3191                           	opt callstack 27
  3192                           
  3193                           ;main.c: 191:   motorBDirection = 1;
  3194                           
  3195                           ;incstack = 0
  3196  003A30  0E01               	movlw	1
  3197  003A32  6E79               	movwf	_motorBDirection,c	;volatile
  3198                           
  3199                           ;main.c: 192:   motorADirection = 1;
  3200  003A34  0E01               	movlw	1
  3201  003A36  0100               	movlb	0	; () banked
  3202  003A38  6FD3               	movwf	_motorADirection& (0+255),b	;volatile
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;main.c: 195:   TRISCbits.TRISC0 = 1;
  3206  003A3A  8094               	bsf	3988,0,c	;volatile
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;main.c: 196:   TRISEbits.TRISE1 = 1;
  3210  003A3C  8296               	bsf	3990,1,c	;volatile
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;main.c: 197:   TRISBbits.TRISB2 = 1;
  3214  003A3E  8493               	bsf	3987,2,c	;volatile
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;main.c: 198:   TRISBbits.TRISB0 = 1;
  3218  003A40  8093               	bsf	3987,0,c	;volatile
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;main.c: 201:   INT2IE = 1;
  3222  003A42  88F0               	bsf	4080,4,c	;volatile
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;main.c: 203:   INT0IE = 1;
  3226  003A44  88F2               	bsf	4082,4,c	;volatile
  3227                           
  3228                           ; BSR set to: 0
  3229  003A46  0012               	return		;funcret
  3230  003A48                     __end_of_EncoderInit:
  3231                           	opt callstack 0
  3232                           
  3233 ;; *************** function _replaceOldLog *****************
  3234 ;; Defined at:
  3235 ;;		line 1029 in file "main.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  i               2    5[COMRAM] int 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        2 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    2
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text6
  3264  003522                     __ptext6:
  3265                           	opt callstack 0
  3266  003522                     _replaceOldLog:
  3267                           	opt callstack 28
  3268                           
  3269                           ;main.c: 1030:     for (int i = 0; i< 48; i++){
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;incstack = 0
  3273  003522  0E00               	movlw	0
  3274  003524  6E07               	movwf	replaceOldLog@i+1,c
  3275  003526  0E00               	movlw	0
  3276  003528  6E06               	movwf	replaceOldLog@i,c
  3277  00352A                     l8724:
  3278                           
  3279                           ;main.c: 1031:         logs[4][i] = logs[0][i];
  3280  00352A  90D8               	bcf	status,0,c
  3281  00352C  3406               	rlcf	replaceOldLog@i,w,c
  3282  00352E  6ED9               	movwf	fsr2l,c
  3283  003530  3407               	rlcf	replaceOldLog@i+1,w,c
  3284  003532  6EDA               	movwf	fsr2h,c
  3285  003534  0E78               	movlw	low _logs
  3286  003536  26D9               	addwf	fsr2l,f,c
  3287  003538  0E01               	movlw	high _logs
  3288  00353A  22DA               	addwfc	fsr2h,f,c
  3289  00353C  90D8               	bcf	status,0,c
  3290  00353E  3406               	rlcf	replaceOldLog@i,w,c
  3291  003540  6EE1               	movwf	fsr1l,c
  3292  003542  3407               	rlcf	replaceOldLog@i+1,w,c
  3293  003544  6EE2               	movwf	fsr1h,c
  3294  003546  0EF8               	movlw	low (_logs+384)
  3295  003548  26E1               	addwf	fsr1l,f,c
  3296  00354A  0E02               	movlw	high (_logs+384)
  3297  00354C  22E2               	addwfc	fsr1h,f,c
  3298  00354E  CFDE FFE6          	movff	postinc2,postinc1
  3299  003552  CFDD FFE5          	movff	postdec2,postdec1
  3300                           
  3301                           ;main.c: 1032:     }
  3302  003556  4A06               	infsnz	replaceOldLog@i,f,c
  3303  003558  2A07               	incf	replaceOldLog@i+1,f,c
  3304  00355A  BE07               	btfsc	replaceOldLog@i+1,7,c
  3305  00355C  D7E6               	goto	l8724
  3306  00355E  5007               	movf	replaceOldLog@i+1,w,c
  3307  003560  E105               	bnz	u9910
  3308  003562  0E30               	movlw	48
  3309  003564  5C06               	subwf	replaceOldLog@i,w,c
  3310  003566  B0D8               	btfsc	status,0,c
  3311  003568  0012               	return	
  3312  00356A  D7DF               	goto	l8724
  3313  00356C                     u9910:
  3314  00356C  0012               	return		;funcret
  3315  00356E                     __end_of_replaceOldLog:
  3316                           	opt callstack 0
  3317                           
  3318 ;; *************** function _doOperation *****************
  3319 ;; Defined at:
  3320 ;;		line 615 in file "main.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  i               2   58[BANK1 ] int 
  3325 ;;  startedDistB    2   22[BANK1 ] int 
  3326 ;;  startedDistA    2   20[BANK1 ] int 
  3327 ;;  timeInOperat    4   60[BANK1 ] unsigned long 
  3328 ;;  timeStart       4   35[BANK1 ] unsigned long 
  3329 ;;  PIDData         4    0[BANK1 ] int [2]
  3330 ;;  tiresOnPole     2   54[BANK1 ] int 
  3331 ;;  tiresDeploye    2   52[BANK1 ] int 
  3332 ;;  tiresToDrop     2   50[BANK1 ] int 
  3333 ;;  distanceToPo    2   48[BANK1 ] int 
  3334 ;;  counted         2   46[BANK1 ] int 
  3335 ;;  motorBStartD    2   44[BANK1 ] int 
  3336 ;;  motorAStartD    2   42[BANK1 ] int 
  3337 ;;  goalSpeed       2   39[BANK1 ] int 
  3338 ;;  distanceFrom    2   33[BANK1 ] int 
  3339 ;;  totalTiresSu    2   31[BANK1 ] int 
  3340 ;;  poleNumber      2   29[BANK1 ] int 
  3341 ;;  badCountBot     2   27[BANK1 ] int 
  3342 ;;  badCount        2   25[BANK1 ] int 
  3343 ;;  tiresOnPoleA    2   18[BANK1 ] int 
  3344 ;;  rightRangeFi    2    0        int 
  3345 ;;  leftRangeFin    2    0        int 
  3346 ;;  currentAngle    2    0        int 
  3347 ;;  error           2    0        int 
  3348 ;;  errorScaleFa    2    0        int 
  3349 ;;  motorBSpeed     2    0        int 
  3350 ;;  motorASpeed     2    0        int 
  3351 ;;  fourMetreEqu    2    0        int 
  3352 ;;  minimumSafeD    2    0        int 
  3353 ;;  topLaserStat    1   66[BANK1 ] _Bool 
  3354 ;;  bottomLaserS    1   65[BANK1 ] _Bool 
  3355 ;;  currentOpera    1   64[BANK1 ] enum E3355
  3356 ;;  bottomLaserS    1   57[BANK1 ] _Bool 
  3357 ;;  topLaserStat    1   56[BANK1 ] _Bool 
  3358 ;;  isDoneDrop      1   41[BANK1 ] _Bool 
  3359 ;;  send            1   24[BANK1 ] _Bool 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:         0       4      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:       71 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:   14
  3376 ;; This function calls:
  3377 ;;		_I2C_Master_Start
  3378 ;;		_I2C_Master_Stop
  3379 ;;		_I2C_Master_Write
  3380 ;;		_TIMER_INIT
  3381 ;;		___awmod
  3382 ;;		_errorCorrectedMove
  3383 ;;		_init_motor_PWM
  3384 ;;		_lcdInst
  3385 ;;		_opDelay
  3386 ;;		_opErrorCorrectionDegrees
  3387 ;;		_printf
  3388 ;;		_requestIsTireDropDone
  3389 ;;		_sendArduinoAbortOperationMessage
  3390 ;;		_sendArduinoTireDropRequest
  3391 ;;		_sendArduinoTireOperationStartMessage
  3392 ;;		_setMotorSpeeds
  3393 ;;		_tirePositioning
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text7
  3400  000012                     __ptext7:
  3401                           	opt callstack 0
  3402  000012                     _doOperation:
  3403                           	opt callstack 16
  3404                           
  3405                           ;main.c: 621:     I2C_Master_Start();
  3406                           
  3407                           ;incstack = 0
  3408  000012  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  3409                           
  3410                           ;main.c: 622:     I2C_Master_Write(0b00010000);
  3411  000016  0E00               	movlw	0
  3412  000018  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3413  00001A  0E10               	movlw	16
  3414  00001C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3415  00001E  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  3416                           
  3417                           ;main.c: 623:     I2C_Master_Stop();
  3418  000022  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  3419                           
  3420                           ;main.c: 625:     sendArduinoTireOperationStartMessage();
  3421  000026  ECD6  F01C         	call	_sendArduinoTireOperationStartMessage	;wreg free
  3422                           
  3423                           ;main.c: 629:     TIMER_INIT();
  3424  00002A  EC09  F01D         	call	_TIMER_INIT	;wreg free
  3425                           
  3426                           ;main.c: 630:     millisecondsMeasured = 0;
  3427  00002E  0E00               	movlw	0
  3428  000030  6E75               	movwf	_millisecondsMeasured,c	;volatile
  3429  000032  0E00               	movlw	0
  3430  000034  6E76               	movwf	_millisecondsMeasured+1,c	;volatile
  3431  000036  0E00               	movlw	0
  3432  000038  6E77               	movwf	_millisecondsMeasured+2,c	;volatile
  3433  00003A  0E00               	movlw	0
  3434  00003C  6E78               	movwf	_millisecondsMeasured+3,c	;volatile
  3435                           
  3436                           ;main.c: 632:  int goalSpeed = 20;
  3437  00003E  0E00               	movlw	0
  3438  000040  0101               	movlb	1	; () banked
  3439  000042  6F28               	movwf	(doOperation@goalSpeed+1)& (0+255),b
  3440  000044  0E14               	movlw	20
  3441  000046  6F27               	movwf	doOperation@goalSpeed& (0+255),b
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;main.c: 639:  enum operationStates currentOperationState = moveForward;
  3445                           
  3446                           ; BSR set to: 1
  3447                           
  3448                           ; BSR set to: 1
  3449                           
  3450                           ; BSR set to: 1
  3451                           
  3452                           ; BSR set to: 1
  3453                           
  3454                           ; BSR set to: 1
  3455  000048  0E00               	movlw	0
  3456  00004A  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;main.c: 642:  int tiresToDrop = 0;
  3460                           
  3461                           ; BSR set to: 1
  3462                           
  3463                           ; BSR set to: 1
  3464  00004C  0E00               	movlw	0
  3465  00004E  6F33               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3466  000050  0E00               	movlw	0
  3467  000052  6F32               	movwf	doOperation@tiresToDrop& (0+255),b
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;main.c: 643:     int minimumSafeDistanceToPole;;main.c: 644:     int fourMetreEquivalen
      +                          t;;main.c: 645:     unsigned long timeInOperation = 150000;
  3471  000054  0EF0               	movlw	240
  3472  000056  6F3C               	movwf	doOperation@timeInOperation& (0+255),b
  3473  000058  0E49               	movlw	73
  3474  00005A  6F3D               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3475  00005C  0E02               	movlw	2
  3476  00005E  6F3E               	movwf	(doOperation@timeInOperation+2)& (0+255),b
  3477  000060  0E00               	movlw	0
  3478  000062  6F3F               	movwf	(doOperation@timeInOperation+3)& (0+255),b
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;main.c: 646:     int motorAStartDistance = motorADistance;
  3482  000064  C0D0  F12A         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3483  000068  C0D1  F12B         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;main.c: 647:     int motorBStartDistance = motorBDistance;
  3487  00006C  C0CE  F12C         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3488  000070  C0CF  F12D         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;main.c: 649:     int PIDData[2] = {0,0};
  3492  000074  0E00               	movlw	0
  3493  000076  6F00               	movwf	doOperation@PIDData& (0+255),b
  3494  000078  0E00               	movlw	0
  3495  00007A  6F01               	movwf	(doOperation@PIDData+1)& (0+255),b
  3496  00007C  0E00               	movlw	0
  3497  00007E  6F02               	movwf	(doOperation@PIDData+2)& (0+255),b
  3498  000080  0E00               	movlw	0
  3499  000082  6F03               	movwf	(doOperation@PIDData+3)& (0+255),b
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;main.c: 650:     _Bool topLaserState;;main.c: 651:     _Bool topLaserStatePrev;;main.c:
      +                           652:     _Bool bottomLaserState;;main.c: 653:     _Bool bottomLaserStatePrev;;main.c: 6
      +                          54:     _Bool isDoneDrop;;main.c: 655:     init_motor_PWM();
  3503  000084  EC89  F01C         	call	_init_motor_PWM	;wreg free
  3504                           
  3505                           ;main.c: 656:     int counted = 0;
  3506  000088  0E00               	movlw	0
  3507  00008A  0101               	movlb	1	; () banked
  3508  00008C  6F2F               	movwf	(doOperation@counted+1)& (0+255),b
  3509  00008E  0E00               	movlw	0
  3510  000090  6F2E               	movwf	doOperation@counted& (0+255),b
  3511                           
  3512                           ; BSR set to: 1
  3513                           ;main.c: 657:     int badCount = 0;
  3514  000092  0E00               	movlw	0
  3515  000094  6F1A               	movwf	(doOperation@badCount+1)& (0+255),b
  3516  000096  0E00               	movlw	0
  3517  000098  6F19               	movwf	doOperation@badCount& (0+255),b
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;main.c: 658:     int badCountBot = 0;
  3521  00009A  0E00               	movlw	0
  3522  00009C  6F1C               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3523  00009E  0E00               	movlw	0
  3524  0000A0  6F1B               	movwf	doOperation@badCountBot& (0+255),b
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;main.c: 661:     int poleNumber = 0;
  3528  0000A2  0E00               	movlw	0
  3529  0000A4  6F1E               	movwf	(doOperation@poleNumber+1)& (0+255),b
  3530  0000A6  0E00               	movlw	0
  3531  0000A8  6F1D               	movwf	doOperation@poleNumber& (0+255),b
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;main.c: 662:     int tiresDeployedOnPole = 0;
  3535  0000AA  0E00               	movlw	0
  3536  0000AC  6F35               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3537  0000AE  0E00               	movlw	0
  3538  0000B0  6F34               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3539                           
  3540                           ; BSR set to: 1
  3541                           ;main.c: 663:     int tiresOnPoleAfterOp = 0;
  3542  0000B2  0E00               	movlw	0
  3543  0000B4  6F13               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  3544  0000B6  0E00               	movlw	0
  3545  0000B8  6F12               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;main.c: 664:     int tiresOnPole = 0;
  3549  0000BA  0E00               	movlw	0
  3550  0000BC  6F37               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3551  0000BE  0E00               	movlw	0
  3552  0000C0  6F36               	movwf	doOperation@tiresOnPole& (0+255),b
  3553                           
  3554                           ; BSR set to: 1
  3555                           ;main.c: 666:     int totalTiresSupplied = 0;
  3556  0000C2  0E00               	movlw	0
  3557  0000C4  6F20               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  3558  0000C6  0E00               	movlw	0
  3559  0000C8  6F1F               	movwf	doOperation@totalTiresSupplied& (0+255),b
  3560                           
  3561                           ; BSR set to: 1
  3562                           ;main.c: 668:     int distanceToPole = 0;
  3563  0000CA  0E00               	movlw	0
  3564  0000CC  6F31               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  3565  0000CE  0E00               	movlw	0
  3566  0000D0  6F30               	movwf	doOperation@distanceToPole& (0+255),b
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;main.c: 669:     int distanceFromLastPole = 0;
  3570  0000D2  0E00               	movlw	0
  3571  0000D4  6F22               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3572  0000D6  0E00               	movlw	0
  3573  0000D8  6F21               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;main.c: 676:     TRISAbits.TRISA0 = 0;
  3577  0000DA  9092               	bcf	3986,0,c	;volatile
  3578                           
  3579                           ; BSR set to: 1
  3580                           ;main.c: 677:     TRISAbits.TRISA1 = 0;
  3581  0000DC  9292               	bcf	3986,1,c	;volatile
  3582                           
  3583                           ; BSR set to: 1
  3584                           ;main.c: 678:     TRISAbits.TRISA2 = 0;
  3585  0000DE  9492               	bcf	3986,2,c	;volatile
  3586                           
  3587                           ; BSR set to: 1
  3588                           ;main.c: 679:     TRISAbits.TRISA3 = 0;
  3589  0000E0  9692               	bcf	3986,3,c	;volatile
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;main.c: 682:     TRISAbits.TRISA4 = 0;
  3593  0000E2  9892               	bcf	3986,4,c	;volatile
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;main.c: 683:     LATAbits.LATA4 = 1;
  3597  0000E4  8889               	bsf	3977,4,c	;volatile
  3598                           
  3599                           ; BSR set to: 1
  3600                           ;main.c: 684:     unsigned long timeStart = millisecondsMeasured;
  3601  0000E6  C075  F123         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3602  0000EA  C076  F124         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3603  0000EE  C077  F125         	movff	_millisecondsMeasured+2,doOperation@timeStart+2	;volatile
  3604  0000F2  C078  F126         	movff	_millisecondsMeasured+3,doOperation@timeStart+3	;volatile
  3605  0000F6                     l8504:
  3606                           
  3607                           ;main.c: 685:     while(millisecondsMeasured < timeStart + 100){
  3608  0000F6  0E64               	movlw	100
  3609  0000F8  0101               	movlb	1	; () banked
  3610  0000FA  2523               	addwf	doOperation@timeStart& (0+255),w,b
  3611  0000FC  0100               	movlb	0	; () banked
  3612  0000FE  6FB6               	movwf	??_doOperation& (0+255),b
  3613  000100  0E00               	movlw	0
  3614  000102  0101               	movlb	1	; () banked
  3615  000104  2124               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3616  000106  0100               	movlb	0	; () banked
  3617  000108  6FB7               	movwf	(??_doOperation+1)& (0+255),b
  3618  00010A  0E00               	movlw	0
  3619  00010C  0101               	movlb	1	; () banked
  3620  00010E  2125               	addwfc	(doOperation@timeStart+2)& (0+255),w,b
  3621  000110  0100               	movlb	0	; () banked
  3622  000112  6FB8               	movwf	(??_doOperation+2)& (0+255),b
  3623  000114  0E00               	movlw	0
  3624  000116  0101               	movlb	1	; () banked
  3625  000118  2126               	addwfc	(doOperation@timeStart+3)& (0+255),w,b
  3626  00011A  0100               	movlb	0	; () banked
  3627  00011C  6FB9               	movwf	(??_doOperation+3)& (0+255),b
  3628  00011E  51B6               	movf	??_doOperation& (0+255),w,b
  3629  000120  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3630  000122  51B7               	movf	(??_doOperation+1)& (0+255),w,b
  3631  000124  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  3632  000126  51B8               	movf	(??_doOperation+2)& (0+255),w,b
  3633  000128  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  3634  00012A  51B9               	movf	(??_doOperation+3)& (0+255),w,b
  3635  00012C  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  3636  00012E  A0D8               	btfss	status,0,c
  3637  000130  D7E2               	goto	l8504
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;main.c: 689:     topLaserState = PORTBbits.RB4;
  3641  000132  A881               	btfss	3969,4,c	;volatile
  3642  000134  D002               	goto	u9740
  3643  000136  0E01               	movlw	1
  3644  000138  D001               	goto	u9746
  3645  00013A                     u9740:
  3646  00013A  0E00               	movlw	0
  3647  00013C                     u9746:
  3648  00013C  0101               	movlb	1	; () banked
  3649  00013E  6F42               	movwf	doOperation@topLaserState& (0+255),b
  3650                           
  3651                           ; BSR set to: 1
  3652                           ;main.c: 690:     topLaserStatePrev = topLaserState;
  3653  000140  C142  F138         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3654                           
  3655                           ;main.c: 691:     bottomLaserState = PORTBbits.RB5;
  3656  000144  AA81               	btfss	3969,5,c	;volatile
  3657  000146  D002               	goto	u9750
  3658  000148  0E01               	movlw	1
  3659  00014A  D001               	goto	u9756
  3660  00014C                     u9750:
  3661  00014C  0E00               	movlw	0
  3662  00014E                     u9756:
  3663  00014E  6F41               	movwf	doOperation@bottomLaserState& (0+255),b
  3664                           
  3665                           ; BSR set to: 1
  3666                           ;main.c: 692:     bottomLaserStatePrev = bottomLaserState;
  3667  000150  C141  F139         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3668                           
  3669                           ;main.c: 700:     _Bool send = 1;
  3670  000154  0E01               	movlw	1
  3671  000156  6F18               	movwf	doOperation@send& (0+255),b
  3672  000158                     l8512:
  3673                           
  3674                           ;main.c: 706:         counted ++;
  3675  000158  0101               	movlb	1	; () banked
  3676  00015A  4B2E               	infsnz	doOperation@counted& (0+255),f,b
  3677  00015C  2B2F               	incf	(doOperation@counted+1)& (0+255),f,b
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;main.c: 707:         topLaserStatePrev = topLaserState;
  3681  00015E  C142  F138         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;main.c: 708:         topLaserState = PORTBbits.RB4;
  3685  000162  A881               	btfss	3969,4,c	;volatile
  3686  000164  D002               	goto	u9760
  3687  000166  0E01               	movlw	1
  3688  000168  D001               	goto	u9766
  3689  00016A                     u9760:
  3690  00016A  0E00               	movlw	0
  3691  00016C                     u9766:
  3692  00016C  6F42               	movwf	doOperation@topLaserState& (0+255),b
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;main.c: 709:         bottomLaserStatePrev = bottomLaserState;
  3696  00016E  C141  F139         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3697                           
  3698                           ; BSR set to: 1
  3699                           ;main.c: 710:         bottomLaserState = PORTBbits.RB5;
  3700  000172  AA81               	btfss	3969,5,c	;volatile
  3701  000174  D002               	goto	u9770
  3702  000176  0E01               	movlw	1
  3703  000178  D001               	goto	u9776
  3704  00017A                     u9770:
  3705  00017A  0E00               	movlw	0
  3706  00017C                     u9776:
  3707  00017C  6F41               	movwf	doOperation@bottomLaserState& (0+255),b
  3708                           
  3709                           ;main.c: 713:         switch (currentOperationState){
  3710  00017E  D1BC               	goto	l8652
  3711  000180                     l8522:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 715:                 if (counted%100 == 0){
  3715  000180  C12E  F006         	movff	doOperation@counted,___awmod@dividend
  3716  000184  C12F  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3717  000188  0E00               	movlw	0
  3718  00018A  6E09               	movwf	___awmod@divisor+1,c
  3719  00018C  0E64               	movlw	100
  3720  00018E  6E08               	movwf	___awmod@divisor,c
  3721  000190  EC09  F019         	call	___awmod	;wreg free
  3722  000194  5006               	movf	?___awmod,w,c
  3723  000196  1007               	iorwf	?___awmod+1,w,c
  3724  000198  A4D8               	btfss	status,2,c
  3725  00019A  D04F               	goto	l8544
  3726                           
  3727                           ;main.c: 716:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3728  00019C  0E01               	movlw	1
  3729  00019E  EC47  F01D         	call	_lcdInst
  3730  0001A2  0E11               	movlw	17
  3731  0001A4  0100               	movlb	0	; () banked
  3732  0001A6  6FB6               	movwf	??_doOperation& (0+255),b
  3733  0001A8  0E3A               	movlw	58
  3734  0001AA                     u10267:
  3735  0001AA  2EE8               	decfsz	wreg,f,c
  3736  0001AC  D7FE               	bra	u10267
  3737  0001AE  2FB6               	decfsz	??_doOperation& (0+255),f,b
  3738  0001B0  D7FC               	bra	u10267
  3739  0001B2  F000               	nop	
  3740                           
  3741                           ;main.c: 717:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  3742  0001B4  0E80               	movlw	128
  3743  0001B6  EC47  F01D         	call	_lcdInst
  3744  0001BA  0E07               	movlw	7
  3745  0001BC  0100               	movlb	0	; () banked
  3746  0001BE  6FB6               	movwf	??_doOperation& (0+255),b
  3747  0001C0  0E7D               	movlw	125
  3748  0001C2                     u10277:
  3749  0001C2  2EE8               	decfsz	wreg,f,c
  3750  0001C4  D7FE               	bra	u10277
  3751  0001C6  2FB6               	decfsz	??_doOperation& (0+255),f,b
  3752  0001C8  D7FC               	bra	u10277
  3753                           
  3754                           ;main.c: 718:                 printf("%d", millisecondsMeasured);
  3755  0001CA  0EF3               	movlw	low (STR_23+3)
  3756  0001CC  0100               	movlb	0	; () banked
  3757  0001CE  6F80               	movwf	printf@fmt& (0+255),b
  3758  0001D0  0EFF               	movlw	high (STR_23+3)
  3759  0001D2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3760  0001D4  C075  F082         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3761  0001D8  C076  F083         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3762  0001DC  C077  F084         	movff	_millisecondsMeasured+2,?_printf+4	;volatile
  3763  0001E0  C078  F085         	movff	_millisecondsMeasured+3,?_printf+5	;volatile
  3764  0001E4  EC9D  F01C         	call	_printf	;wreg free
  3765  0001E8  0E90               	movlw	144
  3766  0001EA  EC47  F01D         	call	_lcdInst
  3767                           
  3768                           ;main.c: 720:                 printf("%d", topLaserState);
  3769  0001EE  0EF3               	movlw	low (STR_23+3)
  3770  0001F0  0100               	movlb	0	; () banked
  3771  0001F2  6F80               	movwf	printf@fmt& (0+255),b
  3772  0001F4  0EFF               	movlw	high (STR_23+3)
  3773  0001F6  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3774  0001F8  C142  F082         	movff	doOperation@topLaserState,?_printf+2
  3775  0001FC  6B83               	clrf	(?_printf+3)& (0+255),b
  3776  0001FE  EC9D  F01C         	call	_printf	;wreg free
  3777  000202  0EC0               	movlw	192
  3778  000204  EC47  F01D         	call	_lcdInst
  3779                           
  3780                           ;main.c: 722:                 printf("B: %d", motorBDistance);
  3781  000208  0EF6               	movlw	low STR_22
  3782  00020A  0100               	movlb	0	; () banked
  3783  00020C  6F80               	movwf	printf@fmt& (0+255),b
  3784  00020E  0EFF               	movlw	high STR_22
  3785  000210  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3786  000212  C0CE  F082         	movff	_motorBDistance,?_printf+2	;volatile
  3787  000216  C0CF  F083         	movff	_motorBDistance+1,?_printf+3	;volatile
  3788  00021A  EC9D  F01C         	call	_printf	;wreg free
  3789  00021E  0ED0               	movlw	208
  3790  000220  EC47  F01D         	call	_lcdInst
  3791                           
  3792                           ;main.c: 724:                 printf("A: %d", motorADistance);
  3793  000224  0EF0               	movlw	low STR_23
  3794  000226  0100               	movlb	0	; () banked
  3795  000228  6F80               	movwf	printf@fmt& (0+255),b
  3796  00022A  0EFF               	movlw	high STR_23
  3797  00022C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3798  00022E  C0D0  F082         	movff	_motorADistance,?_printf+2	;volatile
  3799  000232  C0D1  F083         	movff	_motorADistance+1,?_printf+3	;volatile
  3800  000236  EC9D  F01C         	call	_printf	;wreg free
  3801  00023A                     l8544:
  3802                           
  3803                           ;main.c: 743:                 errorCorrectedMove(goalSpeed, 1, motorAStartDistance, moto
      +                          rBStartDistance, 0.1);
  3804  00023A  C127  F088         	movff	doOperation@goalSpeed,errorCorrectedMove@goalSpeed
  3805  00023E  C128  F089         	movff	doOperation@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  3806  000242  0E00               	movlw	0
  3807  000244  0100               	movlb	0	; () banked
  3808  000246  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3809  000248  0E00               	movlw	0
  3810  00024A  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3811  00024C  0E80               	movlw	128
  3812  00024E  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3813  000250  0E3F               	movlw	63
  3814  000252  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3815  000254  C12A  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3816  000258  C12B  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3817  00025C  C12C  F090         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3818  000260  C12D  F091         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3819  000264  0ECD               	movlw	205
  3820  000266  6F92               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3821  000268  0ECC               	movlw	204
  3822  00026A  6F93               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3823  00026C  0ECC               	movlw	204
  3824  00026E  6F94               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3825  000270  0E3D               	movlw	61
  3826  000272  6F95               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3827  000274  ECFC  F00E         	call	_errorCorrectedMove	;wreg free
  3828                           
  3829                           ;main.c: 745:                 break;
  3830  000278  D15D               	goto	l8654
  3831  00027A                     l8546:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;main.c: 748:                 distanceFromLastPole = motorADistance - distanceToPole;
  3835  00027A  0101               	movlb	1	; () banked
  3836  00027C  5130               	movf	doOperation@distanceToPole& (0+255),w,b
  3837  00027E  0100               	movlb	0	; () banked
  3838  000280  5DD0               	subwf	_motorADistance& (0+255),w,b	;volatile
  3839  000282  0101               	movlb	1	; () banked
  3840  000284  6F21               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3841  000286  5131               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  3842  000288  0100               	movlb	0	; () banked
  3843  00028A  59D1               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  3844  00028C  0101               	movlb	1	; () banked
  3845  00028E  6F22               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3846                           
  3847                           ; BSR set to: 1
  3848                           ;main.c: 749:                 distanceToPole = motorADistance;
  3849  000290  C0D0  F130         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  3850  000294  C0D1  F131         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;main.c: 751:                 poleNumber++;
  3854  000298  4B1D               	infsnz	doOperation@poleNumber& (0+255),f,b
  3855  00029A  2B1E               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;main.c: 754:                 tiresOnPole = tirePositioning(timeInOperation);
  3859  00029C  C13C  F08E         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  3860  0002A0  C13D  F08F         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  3861  0002A4  C13E  F090         	movff	doOperation@timeInOperation+2,tirePositioning@maxOperationTime+2
  3862  0002A8  C13F  F091         	movff	doOperation@timeInOperation+3,tirePositioning@maxOperationTime+3
  3863  0002AC  ECA9  F00A         	call	_tirePositioning	;wreg free
  3864  0002B0  C08E  F136         	movff	?_tirePositioning,doOperation@tiresOnPole
  3865  0002B4  C08F  F137         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  3866                           
  3867                           ;main.c: 755:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3868  0002B8  0E01               	movlw	1
  3869  0002BA  EC47  F01D         	call	_lcdInst
  3870  0002BE  0E11               	movlw	17
  3871  0002C0  0100               	movlb	0	; () banked
  3872  0002C2  6FB6               	movwf	??_doOperation& (0+255),b
  3873  0002C4  0E3A               	movlw	58
  3874  0002C6                     u10287:
  3875  0002C6  2EE8               	decfsz	wreg,f,c
  3876  0002C8  D7FE               	bra	u10287
  3877  0002CA  2FB6               	decfsz	??_doOperation& (0+255),f,b
  3878  0002CC  D7FC               	bra	u10287
  3879  0002CE  F000               	nop	
  3880                           
  3881                           ;main.c: 756:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  3882  0002D0  0E80               	movlw	128
  3883  0002D2  EC47  F01D         	call	_lcdInst
  3884  0002D6  0E07               	movlw	7
  3885  0002D8  0100               	movlb	0	; () banked
  3886  0002DA  6FB6               	movwf	??_doOperation& (0+255),b
  3887  0002DC  0E7D               	movlw	125
  3888  0002DE                     u10297:
  3889  0002DE  2EE8               	decfsz	wreg,f,c
  3890  0002E0  D7FE               	bra	u10297
  3891  0002E2  2FB6               	decfsz	??_doOperation& (0+255),f,b
  3892  0002E4  D7FC               	bra	u10297
  3893                           
  3894                           ;main.c: 757:                 printf("TIRE DROP");
  3895  0002E6  0EA1               	movlw	low STR_24
  3896  0002E8  0100               	movlb	0	; () banked
  3897  0002EA  6F80               	movwf	printf@fmt& (0+255),b
  3898  0002EC  0EFF               	movlw	high STR_24
  3899  0002EE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3900  0002F0  EC9D  F01C         	call	_printf	;wreg free
  3901  0002F4  0EC0               	movlw	192
  3902  0002F6  EC47  F01D         	call	_lcdInst
  3903                           
  3904                           ;main.c: 759:                 printf("%d on pole", tiresOnPole);
  3905  0002FA  0E76               	movlw	low STR_25
  3906  0002FC  0100               	movlb	0	; () banked
  3907  0002FE  6F80               	movwf	printf@fmt& (0+255),b
  3908  000300  0EFF               	movlw	high STR_25
  3909  000302  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3910  000304  C136  F082         	movff	doOperation@tiresOnPole,?_printf+2
  3911  000308  C137  F083         	movff	doOperation@tiresOnPole+1,?_printf+3
  3912  00030C  EC9D  F01C         	call	_printf	;wreg free
  3913                           
  3914                           ;main.c: 761:                 setMotorSpeeds(0, 1, 1, 0);
  3915  000310  0E00               	movlw	0
  3916  000312  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3917  000314  0E00               	movlw	0
  3918  000316  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3919  000318  0E01               	movlw	1
  3920  00031A  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3921  00031C  0E01               	movlw	1
  3922  00031E  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3923  000320  0E00               	movlw	0
  3924  000322  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3925  000324  0E00               	movlw	0
  3926  000326  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3927  000328  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  3928                           
  3929                           ;main.c: 770:     sendArduinoTireDropRequest();
  3930  00032C  ECE7  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  3931                           
  3932                           ;main.c: 773:                 tiresToDrop = 1;
  3933  000330  0E00               	movlw	0
  3934  000332  0101               	movlb	1	; () banked
  3935  000334  6F33               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3936  000336  0E01               	movlw	1
  3937  000338  6F32               	movwf	doOperation@tiresToDrop& (0+255),b
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;main.c: 774:                 currentOperationState = tireDrop;
  3941  00033A  0E02               	movlw	2
  3942  00033C  D024               	goto	L8
  3943  00033E                     l8576:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;main.c: 781:     isDoneDrop = requestIsTireDropDone();
  3947  00033E  EC5E  F01C         	call	_requestIsTireDropDone	;wreg free
  3948  000342  0101               	movlb	1	; () banked
  3949  000344  6F29               	movwf	doOperation@isDoneDrop& (0+255),b
  3950                           
  3951                           ; BSR set to: 1
  3952                           ;main.c: 783:     if (isDoneDrop){
  3953  000346  5129               	movf	doOperation@isDoneDrop& (0+255),w,b
  3954  000348  B4D8               	btfsc	status,2,c
  3955  00034A  D0F4               	goto	l8654
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;main.c: 784:      tiresToDrop -- ;
  3959  00034C  0732               	decf	doOperation@tiresToDrop& (0+255),f,b
  3960  00034E  A0D8               	btfss	status,0,c
  3961  000350  0733               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3962                           
  3963                           ;main.c: 785:                     tiresDeployedOnPole++;
  3964  000352  4B34               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  3965  000354  2B35               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;main.c: 786:      if (tiresToDrop == 0){
  3969  000356  5132               	movf	doOperation@tiresToDrop& (0+255),w,b
  3970  000358  1133               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3971  00035A  A4D8               	btfss	status,2,c
  3972  00035C  D00F               	goto	l8590
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;main.c: 787:       currentOperationState = leavePole;
  3976  00035E  0E06               	movlw	6
  3977  000360  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  3978                           
  3979                           ;main.c: 789:                         tiresOnPole = 0;
  3980  000362  0E00               	movlw	0
  3981  000364  6F37               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3982  000366  0E00               	movlw	0
  3983  000368  6F36               	movwf	doOperation@tiresOnPole& (0+255),b
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;main.c: 790:                         totalTiresSupplied += tiresDeployedOnPole;
  3987  00036A  5134               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  3988  00036C  271F               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  3989  00036E  5135               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  3990  000370  2320               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;main.c: 791:                         tiresDeployedOnPole = 0;
  3994  000372  0E00               	movlw	0
  3995  000374  6F35               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3996  000376  0E00               	movlw	0
  3997  000378  6F34               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3998                           
  3999                           ;main.c: 792:      } else {
  4000  00037A  D0DC               	goto	l8654
  4001  00037C                     l8590:
  4002                           
  4003                           ; BSR set to: 1
  4004                           ;main.c: 794:       sendArduinoTireDropRequest();
  4005  00037C  ECE7  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  4006  000380  D0D9               	goto	l8654
  4007  000382                     l8592:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;main.c: 803:                 currentOperationState = moveForward;
  4011  000382  0E00               	movlw	0
  4012  000384  D088               	goto	L9
  4013  000386                     L8:
  4014  000386  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  4015                           
  4016                           ;main.c: 804:     break;
  4017  000388  D0D5               	goto	l8654
  4018  00038A                     l8594:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 807:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4022  00038A  0E01               	movlw	1
  4023  00038C  EC47  F01D         	call	_lcdInst
  4024  000390  0E11               	movlw	17
  4025  000392  0100               	movlb	0	; () banked
  4026  000394  6FB6               	movwf	??_doOperation& (0+255),b
  4027  000396  0E3A               	movlw	58
  4028  000398                     u10307:
  4029  000398  2EE8               	decfsz	wreg,f,c
  4030  00039A  D7FE               	bra	u10307
  4031  00039C  2FB6               	decfsz	??_doOperation& (0+255),f,b
  4032  00039E  D7FC               	bra	u10307
  4033  0003A0  F000               	nop	
  4034                           
  4035                           ;main.c: 808:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4036  0003A2  0E80               	movlw	128
  4037  0003A4  EC47  F01D         	call	_lcdInst
  4038  0003A8  0E07               	movlw	7
  4039  0003AA  0100               	movlb	0	; () banked
  4040  0003AC  6FB6               	movwf	??_doOperation& (0+255),b
  4041  0003AE  0E7D               	movlw	125
  4042  0003B0                     u10317:
  4043  0003B0  2EE8               	decfsz	wreg,f,c
  4044  0003B2  D7FE               	bra	u10317
  4045  0003B4  2FB6               	decfsz	??_doOperation& (0+255),f,b
  4046  0003B6  D7FC               	bra	u10317
  4047                           
  4048                           ;main.c: 809:                 printf("Leaving Pole");
  4049  0003B8  0E51               	movlw	low STR_26
  4050  0003BA  0100               	movlb	0	; () banked
  4051  0003BC  6F80               	movwf	printf@fmt& (0+255),b
  4052  0003BE  0EFF               	movlw	high STR_26
  4053  0003C0  6F81               	movwf	(printf@fmt+1)& (0+255),b
  4054  0003C2  EC9D  F01C         	call	_printf	;wreg free
  4055                           
  4056                           ;main.c: 810:                 int startedDistA = motorADistance;
  4057  0003C6  C0D0  F114         	movff	_motorADistance,doOperation@startedDistA	;volatile
  4058  0003CA  C0D1  F115         	movff	_motorADistance+1,doOperation@startedDistA+1	;volatile
  4059                           
  4060                           ;main.c: 811:                 int startedDistB = motorBDistance;
  4061  0003CE  C0CE  F116         	movff	_motorBDistance,doOperation@startedDistB	;volatile
  4062  0003D2  C0CF  F117         	movff	_motorBDistance+1,doOperation@startedDistB+1	;volatile
  4063                           
  4064                           ;main.c: 815:                 opErrorCorrectionDegrees(30, 1, 0.1, 3000, timeInOperation
      +                          );
  4065  0003D6  0E00               	movlw	0
  4066  0003D8  0100               	movlb	0	; () banked
  4067  0003DA  6FA1               	movwf	(opErrorCorrectionDegrees@goalSpeed+1)& (0+255),b
  4068  0003DC  0E1E               	movlw	30
  4069  0003DE  6FA0               	movwf	opErrorCorrectionDegrees@goalSpeed& (0+255),b
  4070  0003E0  0E00               	movlw	0
  4071  0003E2  6FA3               	movwf	(opErrorCorrectionDegrees@turnRatio+1)& (0+255),b
  4072  0003E4  0E01               	movlw	1
  4073  0003E6  6FA2               	movwf	opErrorCorrectionDegrees@turnRatio& (0+255),b
  4074  0003E8  0ECD               	movlw	205
  4075  0003EA  6FA4               	movwf	opErrorCorrectionDegrees@correctionConstant& (0+255),b
  4076  0003EC  0ECC               	movlw	204
  4077  0003EE  6FA5               	movwf	(opErrorCorrectionDegrees@correctionConstant+1)& (0+255),b
  4078  0003F0  0ECC               	movlw	204
  4079  0003F2  6FA6               	movwf	(opErrorCorrectionDegrees@correctionConstant+2)& (0+255),b
  4080  0003F4  0E3D               	movlw	61
  4081  0003F6  6FA7               	movwf	(opErrorCorrectionDegrees@correctionConstant+3)& (0+255),b
  4082  0003F8  0E0B               	movlw	11
  4083  0003FA  6FA9               	movwf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),b
  4084  0003FC  0EB8               	movlw	184
  4085  0003FE  6FA8               	movwf	opErrorCorrectionDegrees@distanceDegrees& (0+255),b
  4086  000400  C13C  F0AA         	movff	doOperation@timeInOperation,opErrorCorrectionDegrees@maxOperationTime
  4087  000404  C13D  F0AB         	movff	doOperation@timeInOperation+1,opErrorCorrectionDegrees@maxOperationTime+1
  4088  000408  C13E  F0AC         	movff	doOperation@timeInOperation+2,opErrorCorrectionDegrees@maxOperationTime+2
  4089  00040C  C13F  F0AD         	movff	doOperation@timeInOperation+3,opErrorCorrectionDegrees@maxOperationTime+3
  4090  000410  EC51  F017         	call	_opErrorCorrectionDegrees	;wreg free
  4091                           
  4092                           ;main.c: 816:                 setMotorSpeeds(0, 1, 1, 0);
  4093  000414  0E00               	movlw	0
  4094  000416  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4095  000418  0E00               	movlw	0
  4096  00041A  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4097  00041C  0E01               	movlw	1
  4098  00041E  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4099  000420  0E01               	movlw	1
  4100  000422  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4101  000424  0E00               	movlw	0
  4102  000426  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4103  000428  0E00               	movlw	0
  4104  00042A  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4105  00042C  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4106                           
  4107                           ;main.c: 817:                 opDelay(4000, timeInOperation);
  4108  000430  0E0F               	movlw	15
  4109  000432  6E07               	movwf	opDelay@millis+1,c
  4110  000434  0EA0               	movlw	160
  4111  000436  6E06               	movwf	opDelay@millis,c
  4112  000438  C13C  F008         	movff	doOperation@timeInOperation,opDelay@maxOperationTime
  4113  00043C  C13D  F009         	movff	doOperation@timeInOperation+1,opDelay@maxOperationTime+1
  4114  000440  C13E  F00A         	movff	doOperation@timeInOperation+2,opDelay@maxOperationTime+2
  4115  000444  C13F  F00B         	movff	doOperation@timeInOperation+3,opDelay@maxOperationTime+3
  4116  000448  ECDF  F019         	call	_opDelay	;wreg free
  4117                           
  4118                           ;main.c: 819:                 motorAStartDistance = 0;
  4119  00044C  0E00               	movlw	0
  4120  00044E  0101               	movlb	1	; () banked
  4121  000450  6F2B               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  4122  000452  0E00               	movlw	0
  4123  000454  6F2A               	movwf	doOperation@motorAStartDistance& (0+255),b
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;main.c: 820:                 motorBStartDistance = 0;
  4127  000456  0E00               	movlw	0
  4128  000458  6F2D               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  4129  00045A  0E00               	movlw	0
  4130  00045C  6F2C               	movwf	doOperation@motorBStartDistance& (0+255),b
  4131                           
  4132                           ; BSR set to: 1
  4133                           ;main.c: 821:                 currentOperationState = moveForward;
  4134  00045E  0E00               	movlw	0
  4135  000460  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  4136                           
  4137                           ; BSR set to: 1
  4138                           ;main.c: 824:                 topLaserState = PORTBbits.RB4;
  4139  000462  A881               	btfss	3969,4,c	;volatile
  4140  000464  D002               	goto	u9810
  4141  000466  0E01               	movlw	1
  4142  000468  D001               	goto	u9816
  4143  00046A                     u9810:
  4144  00046A  0E00               	movlw	0
  4145  00046C                     u9816:
  4146  00046C  6F42               	movwf	doOperation@topLaserState& (0+255),b
  4147                           
  4148                           ; BSR set to: 1
  4149                           ;main.c: 825:                 topLaserStatePrev = PORTBbits.RB4;
  4150  00046E  A881               	btfss	3969,4,c	;volatile
  4151  000470  D002               	goto	u9820
  4152  000472  0E01               	movlw	1
  4153  000474  D001               	goto	u9826
  4154  000476                     u9820:
  4155  000476  0E00               	movlw	0
  4156  000478                     u9826:
  4157  000478  6F38               	movwf	doOperation@topLaserStatePrev& (0+255),b
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;main.c: 826:                 bottomLaserState = PORTBbits.RB5;
  4161  00047A  AA81               	btfss	3969,5,c	;volatile
  4162  00047C  D002               	goto	u9830
  4163  00047E  0E01               	movlw	1
  4164  000480  D001               	goto	u9836
  4165  000482                     u9830:
  4166  000482  0E00               	movlw	0
  4167  000484                     u9836:
  4168  000484  6F41               	movwf	doOperation@bottomLaserState& (0+255),b
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;main.c: 827:                 bottomLaserStatePrev = PORTBbits.RB5;
  4172  000486  AA81               	btfss	3969,5,c	;volatile
  4173  000488  D002               	goto	u9840
  4174  00048A  0E01               	movlw	1
  4175  00048C  D001               	goto	u9846
  4176  00048E                     u9840:
  4177  00048E  0E00               	movlw	0
  4178  000490                     u9846:
  4179  000490  6F39               	movwf	doOperation@bottomLaserStatePrev& (0+255),b
  4180                           
  4181                           ;main.c: 829:                 break;
  4182  000492  D050               	goto	l8654
  4183  000494                     l8626:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;main.c: 832:     currentOperationState = complete;
  4187  000494  0E05               	movlw	5
  4188  000496                     L9:
  4189  000496  0101               	movlb	1	; () banked
  4190  000498  D776               	goto	L8
  4191  00049A                     l8628:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;main.c: 836:                 sendArduinoAbortOperationMessage();
  4195  00049A  ECF8  F01C         	call	_sendArduinoAbortOperationMessage	;wreg free
  4196                           
  4197                           ;main.c: 837:                 for (int i = 0; i < 48; i++){
  4198  00049E  0E00               	movlw	0
  4199  0004A0  0101               	movlb	1	; () banked
  4200  0004A2  6F3B               	movwf	(doOperation@i+1)& (0+255),b
  4201  0004A4  0E00               	movlw	0
  4202  0004A6  6F3A               	movwf	doOperation@i& (0+255),b
  4203  0004A8                     l8632:
  4204                           
  4205                           ; BSR set to: 1
  4206  0004A8  BF3B               	btfsc	(doOperation@i+1)& (0+255),7,b
  4207  0004AA  D006               	goto	l8636
  4208  0004AC  513B               	movf	(doOperation@i+1)& (0+255),w,b
  4209  0004AE  E114               	bnz	l8642
  4210  0004B0  0E30               	movlw	48
  4211  0004B2  5D3A               	subwf	doOperation@i& (0+255),w,b
  4212  0004B4  B0D8               	btfsc	status,0,c
  4213  0004B6  D010               	goto	l8642
  4214  0004B8                     l8636:
  4215                           
  4216                           ; BSR set to: 1
  4217                           ;main.c: 838:                     logs[0][i] = 3;
  4218  0004B8  90D8               	bcf	status,0,c
  4219  0004BA  353A               	rlcf	doOperation@i& (0+255),w,b
  4220  0004BC  6ED9               	movwf	fsr2l,c
  4221  0004BE  353B               	rlcf	(doOperation@i+1)& (0+255),w,b
  4222  0004C0  6EDA               	movwf	fsr2h,c
  4223  0004C2  0E78               	movlw	low _logs
  4224  0004C4  26D9               	addwf	fsr2l,f,c
  4225  0004C6  0E01               	movlw	high _logs
  4226  0004C8  22DA               	addwfc	fsr2h,f,c
  4227  0004CA  0E03               	movlw	3
  4228  0004CC  6EDE               	movwf	postinc2,c
  4229  0004CE  0E00               	movlw	0
  4230  0004D0  6EDD               	movwf	postdec2,c
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;main.c: 839:                 }
  4234  0004D2  4B3A               	infsnz	doOperation@i& (0+255),f,b
  4235  0004D4  2B3B               	incf	(doOperation@i+1)& (0+255),f,b
  4236  0004D6  D7E8               	goto	l8632
  4237  0004D8                     l8642:
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;main.c: 840:     setMotorSpeeds(0, 1, 1, 0);
  4241  0004D8  0E00               	movlw	0
  4242  0004DA  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4243  0004DC  0E00               	movlw	0
  4244  0004DE  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4245  0004E0  0E01               	movlw	1
  4246  0004E2  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4247  0004E4  0E01               	movlw	1
  4248  0004E6  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4249  0004E8  0E00               	movlw	0
  4250  0004EA  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4251  0004EC  0E00               	movlw	0
  4252  0004EE  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4253  0004F0  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4254                           
  4255                           ;main.c: 841:                 LATAbits.LATA4 = 0;
  4256  0004F4  9889               	bcf	3977,4,c	;volatile
  4257  0004F6  0012               	return	
  4258  0004F8                     l8652:
  4259                           
  4260                           ; BSR set to: 1
  4261  0004F8  5140               	movf	doOperation@currentOperationState& (0+255),w,b
  4262  0004FA  0100               	movlb	0	; () banked
  4263  0004FC  6FB6               	movwf	??_doOperation& (0+255),b
  4264  0004FE  6BB7               	clrf	(??_doOperation+1)& (0+255),b
  4265                           
  4266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 1, Range of values is 0 to 0
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte            4     3 (average)
  4272                           ;	Chosen strategy is simple_byte
  4273  000500  51B7               	movf	(??_doOperation+1)& (0+255),w,b
  4274  000502  0A00               	xorlw	0	; case 0
  4275  000504  A4D8               	btfss	status,2,c
  4276  000506  D016               	goto	l8654
  4277                           
  4278                           ; BSR set to: 0
  4279                           ; Switch size 1, requested type "simple"
  4280                           ; Number of cases is 7, Range of values is 0 to 6
  4281                           ; switch strategies available:
  4282                           ; Name         Instructions Cycles
  4283                           ; simple_byte           22    12 (average)
  4284                           ;	Chosen strategy is simple_byte
  4285  000508  51B6               	movf	??_doOperation& (0+255),w,b
  4286  00050A  0A00               	xorlw	0	; case 0
  4287  00050C  B4D8               	btfsc	status,2,c
  4288  00050E  D638               	goto	l8522
  4289  000510  0A01               	xorlw	1	; case 1
  4290  000512  B4D8               	btfsc	status,2,c
  4291  000514  D6B2               	goto	l8546
  4292  000516  0A03               	xorlw	3	; case 2
  4293  000518  B4D8               	btfsc	status,2,c
  4294  00051A  D711               	goto	l8576
  4295  00051C  0A01               	xorlw	1	; case 3
  4296  00051E  B4D8               	btfsc	status,2,c
  4297  000520  D730               	goto	l8592
  4298  000522  0A07               	xorlw	7	; case 4
  4299  000524  B4D8               	btfsc	status,2,c
  4300  000526  D7B6               	goto	l8626
  4301  000528  0A01               	xorlw	1	; case 5
  4302  00052A  B4D8               	btfsc	status,2,c
  4303  00052C  D7B6               	goto	l8628
  4304  00052E  0A03               	xorlw	3	; case 6
  4305  000530  B4D8               	btfsc	status,2,c
  4306  000532  D72B               	goto	l8594
  4307  000534                     l8654:
  4308                           
  4309                           ;main.c: 860:   if (millisecondsMeasured >= timeInOperation){
  4310  000534  0101               	movlb	1	; () banked
  4311  000536  513C               	movf	doOperation@timeInOperation& (0+255),w,b
  4312  000538  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4313  00053A  513D               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  4314  00053C  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4315  00053E  513E               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  4316  000540  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4317  000542  513F               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  4318  000544  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4319  000546  A0D8               	btfss	status,0,c
  4320  000548  D01B               	goto	l8674
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;main.c: 861:    currentOperationState = complete;
  4324  00054A  0E05               	movlw	5
  4325  00054C  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  4326  00054E  D018               	goto	l8674
  4327  000550                     l8658:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;main.c: 871:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  4331  000550  0101               	movlb	1	; () banked
  4332  000552  5142               	movf	doOperation@topLaserState& (0+255),w,b
  4333  000554  1938               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4334  000556  A4D8               	btfss	status,2,c
  4335  000558  D004               	goto	u9880
  4336                           
  4337                           ; BSR set to: 1
  4338  00055A  5141               	movf	doOperation@bottomLaserState& (0+255),w,b
  4339  00055C  1939               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4340  00055E  B4D8               	btfsc	status,2,c
  4341  000560  D5FB               	goto	l8512
  4342  000562                     u9880:
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;main.c: 872:                     if (topLaserStatePrev != topLaserState){
  4346  000562  5142               	movf	doOperation@topLaserState& (0+255),w,b
  4347  000564  1938               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4348  000566  B4D8               	btfsc	status,2,c
  4349  000568  D002               	goto	l8666
  4350                           
  4351                           ; BSR set to: 1
  4352                           ;main.c: 873:                         badCount++;
  4353  00056A  4B19               	infsnz	doOperation@badCount& (0+255),f,b
  4354  00056C  2B1A               	incf	(doOperation@badCount+1)& (0+255),f,b
  4355  00056E                     l8666:
  4356                           
  4357                           ; BSR set to: 1
  4358                           ;main.c: 875:                     if (bottomLaserStatePrev != bottomLaserState){
  4359  00056E  5141               	movf	doOperation@bottomLaserState& (0+255),w,b
  4360  000570  1939               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4361  000572  B4D8               	btfsc	status,2,c
  4362  000574  D002               	goto	l8670
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;main.c: 876:                         badCountBot++;
  4366  000576  4B1B               	infsnz	doOperation@badCountBot& (0+255),f,b
  4367  000578  2B1C               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  4368  00057A                     l8670:
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;main.c: 878:                     currentOperationState = poleFinding;
  4372  00057A  0E01               	movlw	1
  4373  00057C  6F40               	movwf	doOperation@currentOperationState& (0+255),b
  4374  00057E  D5EC               	goto	l8512
  4375  000580                     l8674:
  4376                           
  4377                           ; BSR set to: 1
  4378  000580  5140               	movf	doOperation@currentOperationState& (0+255),w,b
  4379  000582  0100               	movlb	0	; () banked
  4380  000584  6FB6               	movwf	??_doOperation& (0+255),b
  4381  000586  6BB7               	clrf	(??_doOperation+1)& (0+255),b
  4382                           
  4383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4384                           ; Switch size 1, requested type "simple"
  4385                           ; Number of cases is 1, Range of values is 0 to 0
  4386                           ; switch strategies available:
  4387                           ; Name         Instructions Cycles
  4388                           ; simple_byte            4     3 (average)
  4389                           ;	Chosen strategy is simple_byte
  4390  000588  51B7               	movf	(??_doOperation+1)& (0+255),w,b
  4391  00058A  0A00               	xorlw	0	; case 0
  4392  00058C  A4D8               	btfss	status,2,c
  4393  00058E  D5E4               	goto	l8512
  4394                           
  4395                           ; BSR set to: 0
  4396                           ; Switch size 1, requested type "simple"
  4397                           ; Number of cases is 7, Range of values is 0 to 6
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte           22    12 (average)
  4401                           ;	Chosen strategy is simple_byte
  4402  000590  51B6               	movf	??_doOperation& (0+255),w,b
  4403  000592  0A00               	xorlw	0	; case 0
  4404  000594  B4D8               	btfsc	status,2,c
  4405  000596  D7DC               	goto	l8658
  4406  000598  0A01               	xorlw	1	; case 1
  4407  00059A  B4D8               	btfsc	status,2,c
  4408  00059C  D5DD               	goto	l8512
  4409  00059E  0A03               	xorlw	3	; case 2
  4410  0005A0  B4D8               	btfsc	status,2,c
  4411  0005A2  D5DA               	goto	l8512
  4412  0005A4  0A01               	xorlw	1	; case 3
  4413  0005A6  B4D8               	btfsc	status,2,c
  4414  0005A8  D5D7               	goto	l8512
  4415  0005AA  0A07               	xorlw	7	; case 4
  4416  0005AC  B4D8               	btfsc	status,2,c
  4417  0005AE  D5D4               	goto	l8512
  4418  0005B0  0A01               	xorlw	1	; case 5
  4419  0005B2  B4D8               	btfsc	status,2,c
  4420  0005B4  D5D1               	goto	l8512
  4421  0005B6  0A03               	xorlw	3	; case 6
  4422  0005B8  D5CF               	goto	l8512
  4423  0005BA                     __end_of_doOperation:
  4424                           	opt callstack 0
  4425                           
  4426 ;; *************** function _tirePositioning *****************
  4427 ;; Defined at:
  4428 ;;		line 360 in file "main.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  maxOperation    4   14[BANK0 ] unsigned long 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  startDistanc    2   25[BANK0 ] int 
  4433 ;;  bottomBreakb    2   37[BANK0 ] int 
  4434 ;;  topBreakbeam    2   35[BANK0 ] int 
  4435 ;;  distanceReco    2   33[BANK0 ] int 
  4436 ;;  distanceReco    2   31[BANK0 ] int 
  4437 ;;  bottomPrevio    2   29[BANK0 ] int 
  4438 ;;  topPreviousS    2   27[BANK0 ] int 
  4439 ;;  startDistanc    2   23[BANK0 ] int 
  4440 ;;  startDistanc    2   21[BANK0 ] int 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2   14[BANK0 ] int 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:       25 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:   13
  4457 ;; This function calls:
  4458 ;;		___awdiv
  4459 ;;		_abs
  4460 ;;		_lcdInst
  4461 ;;		_opDelay
  4462 ;;		_printf
  4463 ;;		_setMotorSpeeds
  4464 ;; This function is called by:
  4465 ;;		_doOperation
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text8
  4470  001552                     __ptext8:
  4471                           	opt callstack 0
  4472  001552                     _tirePositioning:
  4473                           	opt callstack 16
  4474                           
  4475                           ;main.c: 361:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4476                           
  4477                           ;incstack = 0
  4478  001552  0E01               	movlw	1
  4479  001554  EC47  F01D         	call	_lcdInst
  4480  001558  0E11               	movlw	17
  4481  00155A  0100               	movlb	0	; () banked
  4482  00155C  6F92               	movwf	??_tirePositioning& (0+255),b
  4483  00155E  0E3A               	movlw	58
  4484  001560                     u10327:
  4485  001560  2EE8               	decfsz	wreg,f,c
  4486  001562  D7FE               	bra	u10327
  4487  001564  2F92               	decfsz	??_tirePositioning& (0+255),f,b
  4488  001566  D7FC               	bra	u10327
  4489  001568  F000               	nop	
  4490                           
  4491                           ;main.c: 362:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  4492  00156A  0E80               	movlw	128
  4493  00156C  EC47  F01D         	call	_lcdInst
  4494  001570  0E07               	movlw	7
  4495  001572  0100               	movlb	0	; () banked
  4496  001574  6F92               	movwf	??_tirePositioning& (0+255),b
  4497  001576  0E7D               	movlw	125
  4498  001578                     u10337:
  4499  001578  2EE8               	decfsz	wreg,f,c
  4500  00157A  D7FE               	bra	u10337
  4501  00157C  2F92               	decfsz	??_tirePositioning& (0+255),f,b
  4502  00157E  D7FC               	bra	u10337
  4503                           
  4504                           ;main.c: 363:     printf("TIRE POSITIONING");
  4505  001580  0E66               	movlw	low STR_19
  4506  001582  0100               	movlb	0	; () banked
  4507  001584  6F80               	movwf	printf@fmt& (0+255),b
  4508  001586  0EFE               	movlw	high STR_19
  4509  001588  6F81               	movwf	(printf@fmt+1)& (0+255),b
  4510  00158A  EC9D  F01C         	call	_printf	;wreg free
  4511                           
  4512                           ;main.c: 364:     int topBreakbeam;;main.c: 365:     int bottomBreakbeam;;main.c: 366:  
      +                             int distanceRecordedTop;;main.c: 367:     int startDistanceTop;;main.c: 368:     int 
      +                          distanceRecordedBottom;;main.c: 369:     int startDistanceBottom;;main.c: 370:     int t
      +                          opPreviousState = 1;
  4513  00158E  0E00               	movlw	0
  4514  001590  0100               	movlb	0	; () banked
  4515  001592  6F9C               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  4516  001594  0E01               	movlw	1
  4517  001596  6F9B               	movwf	tirePositioning@topPreviousState& (0+255),b
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;main.c: 371:     int bottomPreviousState = 1;
  4521  001598  0E00               	movlw	0
  4522  00159A  6F9E               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  4523  00159C  0E01               	movlw	1
  4524  00159E  6F9D               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  4525                           
  4526                           ;main.c: 374:     while(millisecondsMeasured < maxOperationTime){
  4527  0015A0  D05E               	goto	l8142
  4528  0015A2                     l8114:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 375:         topBreakbeam = PORTBbits.RB4;
  4532  0015A2  A881               	btfss	3969,4,c	;volatile
  4533  0015A4  D003               	goto	u9340
  4534  0015A6  6B92               	clrf	??_tirePositioning& (0+255),b
  4535  0015A8  2B92               	incf	??_tirePositioning& (0+255),f,b
  4536  0015AA  D002               	goto	u9348
  4537  0015AC                     u9340:
  4538  0015AC  0100               	movlb	0	; () banked
  4539  0015AE  6B92               	clrf	??_tirePositioning& (0+255),b
  4540  0015B0                     u9348:
  4541  0015B0  5192               	movf	??_tirePositioning& (0+255),w,b
  4542  0015B2  6FA3               	movwf	tirePositioning@topBreakbeam& (0+255),b
  4543  0015B4  6BA4               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  4544                           
  4545                           ;main.c: 376:         bottomBreakbeam = PORTBbits.RB5;
  4546  0015B6  AA81               	btfss	3969,5,c	;volatile
  4547  0015B8  D003               	goto	u9350
  4548  0015BA  6B92               	clrf	??_tirePositioning& (0+255),b
  4549  0015BC  2B92               	incf	??_tirePositioning& (0+255),f,b
  4550  0015BE  D002               	goto	u9358
  4551  0015C0                     u9350:
  4552  0015C0  0100               	movlb	0	; () banked
  4553  0015C2  6B92               	clrf	??_tirePositioning& (0+255),b
  4554  0015C4                     u9358:
  4555  0015C4  5192               	movf	??_tirePositioning& (0+255),w,b
  4556  0015C6  6FA5               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  4557  0015C8  6BA6               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;main.c: 377:         if (topBreakbeam == 0 && topPreviousState == 1){
  4561  0015CA  51A3               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4562  0015CC  11A4               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4563  0015CE  A4D8               	btfss	status,2,c
  4564  0015D0  D008               	goto	l8122
  4565                           
  4566                           ; BSR set to: 0
  4567  0015D2  059B               	decf	tirePositioning@topPreviousState& (0+255),w,b
  4568  0015D4  119C               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  4569  0015D6  A4D8               	btfss	status,2,c
  4570  0015D8  D004               	goto	l8122
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;main.c: 378:             startDistanceTop = motorADistance;
  4574  0015DA  C0D0  F095         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  4575  0015DE  C0D1  F096         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  4576  0015E2                     l8122:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;main.c: 380:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  4580  0015E2  51A5               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4581  0015E4  11A6               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4582  0015E6  A4D8               	btfss	status,2,c
  4583  0015E8  D008               	goto	l8128
  4584                           
  4585                           ; BSR set to: 0
  4586  0015EA  059D               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  4587  0015EC  119E               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  4588  0015EE  A4D8               	btfss	status,2,c
  4589  0015F0  D004               	goto	l8128
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;main.c: 381:             startDistanceBottom = motorADistance;
  4593  0015F2  C0D0  F097         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4594  0015F6  C0D1  F098         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4595  0015FA                     l8128:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;main.c: 383:         if(!topBreakbeam){
  4599  0015FA  51A3               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4600  0015FC  11A4               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4601  0015FE  A4D8               	btfss	status,2,c
  4602  001600  D00C               	goto	l8132
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 384:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  4606  001602  5195               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  4607  001604  5DD0               	subwf	_motorADistance& (0+255),w,b	;volatile
  4608  001606  6E18               	movwf	abs@a,c
  4609  001608  5196               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  4610  00160A  59D1               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4611  00160C  6E19               	movwf	abs@a+1,c
  4612  00160E  ECFD  F01B         	call	_abs	;wreg free
  4613  001612  C018  F09F         	movff	?_abs,tirePositioning@distanceRecordedTop
  4614  001616  C019  F0A0         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  4615  00161A                     l8132:
  4616                           
  4617                           ;main.c: 386:         if(!bottomBreakbeam){
  4618  00161A  0100               	movlb	0	; () banked
  4619  00161C  51A5               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4620  00161E  11A6               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4621  001620  A4D8               	btfss	status,2,c
  4622  001622  D00C               	goto	l8136
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;main.c: 387:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  4626  001624  5197               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  4627  001626  5DD0               	subwf	_motorADistance& (0+255),w,b	;volatile
  4628  001628  6E18               	movwf	abs@a,c
  4629  00162A  5198               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  4630  00162C  59D1               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4631  00162E  6E19               	movwf	abs@a+1,c
  4632  001630  ECFD  F01B         	call	_abs	;wreg free
  4633  001634  C018  F0A1         	movff	?_abs,tirePositioning@distanceRecordedBottom
  4634  001638  C019  F0A2         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  4635  00163C                     l8136:
  4636                           
  4637                           ;main.c: 389:         if(topBreakbeam && bottomBreakbeam){
  4638  00163C  0100               	movlb	0	; () banked
  4639  00163E  51A3               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4640  001640  11A4               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4641  001642  B4D8               	btfsc	status,2,c
  4642  001644  D004               	goto	l265
  4643                           
  4644                           ; BSR set to: 0
  4645  001646  51A5               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4646  001648  11A6               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4647  00164A  A4D8               	btfss	status,2,c
  4648  00164C  D012               	goto	u9440
  4649  00164E                     l265:
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;main.c: 392:         topPreviousState = topBreakbeam;
  4653  00164E  C0A3  F09B         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4654  001652  C0A4  F09C         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4655                           
  4656                           ;main.c: 393:         bottomPreviousState = bottomBreakbeam;
  4657  001656  C0A5  F09D         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4658  00165A  C0A6  F09E         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4659  00165E                     l8142:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;main.c: 374:     while(millisecondsMeasured < maxOperationTime){
  4663  00165E  518E               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4664  001660  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4665  001662  518F               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4666  001664  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4667  001666  5190               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4668  001668  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4669  00166A  5191               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4670  00166C  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4671  00166E  A0D8               	btfss	status,0,c
  4672  001670  D798               	goto	l8114
  4673  001672                     u9440:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;main.c: 396:     if (distanceRecordedTop < 170){
  4677  001672  BFA0               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4678  001674  D006               	goto	u9450
  4679  001676  51A0               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4680  001678  E14B               	bnz	l8158
  4681  00167A  0EAA               	movlw	170
  4682  00167C  5D9F               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4683  00167E  B0D8               	btfsc	status,0,c
  4684  001680  D047               	goto	l8158
  4685  001682                     u9450:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;main.c: 397:         setMotorSpeeds(0, 1, 1, 0);
  4689  001682  0E00               	movlw	0
  4690  001684  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4691  001686  0E00               	movlw	0
  4692  001688  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4693  00168A  0E01               	movlw	1
  4694  00168C  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4695  00168E  0E01               	movlw	1
  4696  001690  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4697  001692  0E00               	movlw	0
  4698  001694  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4699  001696  0E00               	movlw	0
  4700  001698  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4701  00169A  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4702                           
  4703                           ;main.c: 398:         opDelay(100, maxOperationTime);
  4704  00169E  0E00               	movlw	0
  4705  0016A0  6E07               	movwf	opDelay@millis+1,c
  4706  0016A2  0E64               	movlw	100
  4707  0016A4  6E06               	movwf	opDelay@millis,c
  4708  0016A6  C08E  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4709  0016AA  C08F  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4710  0016AE  C090  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  4711  0016B2  C091  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  4712  0016B6  ECDF  F019         	call	_opDelay	;wreg free
  4713                           
  4714                           ;main.c: 399:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4715  0016BA  D00E               	goto	l8152
  4716  0016BC                     l8150:
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;main.c: 400:             setMotorSpeeds(30, 0, 0, 30);
  4720  0016BC  0E00               	movlw	0
  4721  0016BE  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4722  0016C0  0E1E               	movlw	30
  4723  0016C2  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4724  0016C4  0E00               	movlw	0
  4725  0016C6  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4726  0016C8  0E00               	movlw	0
  4727  0016CA  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4728  0016CC  0E00               	movlw	0
  4729  0016CE  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4730  0016D0  0E1E               	movlw	30
  4731  0016D2  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4732  0016D4  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4733  0016D8                     l8152:
  4734                           
  4735                           ;main.c: 399:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4736  0016D8  0100               	movlb	0	; () banked
  4737  0016DA  518E               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4738  0016DC  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4739  0016DE  518F               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4740  0016E0  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4741  0016E2  5190               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4742  0016E4  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4743  0016E6  5191               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4744  0016E8  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4745  0016EA  B0D8               	btfsc	status,0,c
  4746  0016EC  D002               	goto	u9470
  4747                           
  4748                           ; BSR set to: 0
  4749  0016EE  B881               	btfsc	3969,4,c	;volatile
  4750  0016F0  D7E5               	goto	l8150
  4751  0016F2                     u9470:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;main.c: 402:         setMotorSpeeds(0, 1, 1, 0);
  4755  0016F2  0E00               	movlw	0
  4756  0016F4  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4757  0016F6  0E00               	movlw	0
  4758  0016F8  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4759  0016FA  0E01               	movlw	1
  4760  0016FC  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4761  0016FE  0E01               	movlw	1
  4762  001700  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4763  001702  0E00               	movlw	0
  4764  001704  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4765  001706  0E00               	movlw	0
  4766  001708  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4767  00170A  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4768                           
  4769                           ;main.c: 403:     } else {
  4770  00170E  D078               	goto	l8176
  4771  001710                     l8158:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;main.c: 404:         setMotorSpeeds(0, 1, 1, 0);
  4775  001710  0E00               	movlw	0
  4776  001712  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4777  001714  0E00               	movlw	0
  4778  001716  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4779  001718  0E01               	movlw	1
  4780  00171A  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4781  00171C  0E01               	movlw	1
  4782  00171E  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4783  001720  0E00               	movlw	0
  4784  001722  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4785  001724  0E00               	movlw	0
  4786  001726  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4787  001728  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4788                           
  4789                           ;main.c: 405:         opDelay(100, maxOperationTime);
  4790  00172C  0E00               	movlw	0
  4791  00172E  6E07               	movwf	opDelay@millis+1,c
  4792  001730  0E64               	movlw	100
  4793  001732  6E06               	movwf	opDelay@millis,c
  4794  001734  C08E  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4795  001738  C08F  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4796  00173C  C090  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  4797  001740  C091  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  4798  001744  ECDF  F019         	call	_opDelay	;wreg free
  4799                           
  4800                           ;main.c: 406:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4801  001748  D00E               	goto	l8164
  4802  00174A                     l8162:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;main.c: 407:             setMotorSpeeds(30, 0, 0, 30);
  4806  00174A  0E00               	movlw	0
  4807  00174C  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4808  00174E  0E1E               	movlw	30
  4809  001750  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4810  001752  0E00               	movlw	0
  4811  001754  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4812  001756  0E00               	movlw	0
  4813  001758  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4814  00175A  0E00               	movlw	0
  4815  00175C  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4816  00175E  0E1E               	movlw	30
  4817  001760  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4818  001762  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4819  001766                     l8164:
  4820                           
  4821                           ;main.c: 406:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4822  001766  0100               	movlb	0	; () banked
  4823  001768  518E               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4824  00176A  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4825  00176C  518F               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4826  00176E  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4827  001770  5190               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4828  001772  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4829  001774  5191               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4830  001776  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4831  001778  B0D8               	btfsc	status,0,c
  4832  00177A  D002               	goto	u9490
  4833                           
  4834                           ; BSR set to: 0
  4835  00177C  B881               	btfsc	3969,4,c	;volatile
  4836  00177E  D7E5               	goto	l8162
  4837  001780                     u9490:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;main.c: 409:         int startDistance = motorADistance;
  4841  001780  C0D0  F099         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  4842  001784  C0D1  F09A         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  4843                           
  4844                           ;main.c: 410:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4845  001788  D00E               	goto	l8170
  4846  00178A                     l8168:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;main.c: 411:             setMotorSpeeds(30, 0, 0, 30);
  4850  00178A  0E00               	movlw	0
  4851  00178C  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4852  00178E  0E1E               	movlw	30
  4853  001790  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4854  001792  0E00               	movlw	0
  4855  001794  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4856  001796  0E00               	movlw	0
  4857  001798  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4858  00179A  0E00               	movlw	0
  4859  00179C  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4860  00179E  0E1E               	movlw	30
  4861  0017A0  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4862  0017A2  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  4863  0017A6                     l8170:
  4864                           
  4865                           ;main.c: 410:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4866  0017A6  0100               	movlb	0	; () banked
  4867  0017A8  518E               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4868  0017AA  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4869  0017AC  518F               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4870  0017AE  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4871  0017B0  5190               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4872  0017B2  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4873  0017B4  5191               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4874  0017B6  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4875  0017B8  B0D8               	btfsc	status,0,c
  4876  0017BA  D79B               	goto	u9470
  4877                           
  4878                           ; BSR set to: 0
  4879  0017BC  51D0               	movf	_motorADistance& (0+255),w,b	;volatile
  4880  0017BE  5D99               	subwf	tirePositioning@startDistance& (0+255),w,b
  4881  0017C0  6E18               	movwf	abs@a,c
  4882  0017C2  51D1               	movf	(_motorADistance+1)& (0+255),w,b	;volatile
  4883  0017C4  599A               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  4884  0017C6  6E19               	movwf	abs@a+1,c
  4885  0017C8  ECFD  F01B         	call	_abs	;wreg free
  4886  0017CC  C018  F092         	movff	?_abs,??_tirePositioning
  4887  0017D0  C019  F093         	movff	?_abs+1,??_tirePositioning+1
  4888  0017D4  C0A1  F006         	movff	tirePositioning@distanceRecordedBottom,___awdiv@dividend
  4889  0017D8  C0A2  F007         	movff	tirePositioning@distanceRecordedBottom+1,___awdiv@dividend+1
  4890  0017DC  0E00               	movlw	0
  4891  0017DE  6E09               	movwf	___awdiv@divisor+1,c
  4892  0017E0  0E02               	movlw	2
  4893  0017E2  6E08               	movwf	___awdiv@divisor,c
  4894  0017E4  EC86  F018         	call	___awdiv	;wreg free
  4895  0017E8  5006               	movf	?___awdiv,w,c
  4896  0017EA  0100               	movlb	0	; () banked
  4897  0017EC  5D92               	subwf	??_tirePositioning& (0+255),w,b
  4898  0017EE  5193               	movf	(??_tirePositioning+1)& (0+255),w,b
  4899  0017F0  0A80               	xorlw	128
  4900  0017F2  6F94               	movwf	(??_tirePositioning+2)& (0+255),b
  4901  0017F4  5007               	movf	?___awdiv+1,w,c
  4902  0017F6  0A80               	xorlw	128
  4903  0017F8  5994               	subwfb	(??_tirePositioning+2)& (0+255),w,b
  4904  0017FA  B0D8               	btfsc	status,0,c
  4905  0017FC  D77A               	goto	u9470
  4906  0017FE  D7C5               	goto	l8168
  4907  001800                     l8176:
  4908                           
  4909                           ;main.c: 417:     if (distanceRecordedTop < 170 && distanceRecordedBottom < 170){
  4910  001800  0100               	movlb	0	; () banked
  4911  001802  BFA0               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4912  001804  D006               	goto	u9520
  4913  001806  51A0               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4914  001808  E111               	bnz	l8186
  4915  00180A  0EAA               	movlw	170
  4916  00180C  5D9F               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4917  00180E  B0D8               	btfsc	status,0,c
  4918  001810  D00D               	goto	l8186
  4919  001812                     u9520:
  4920                           
  4921                           ; BSR set to: 0
  4922  001812  BFA2               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  4923  001814  D006               	goto	u9530
  4924  001816  51A2               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4925  001818  E109               	bnz	l8186
  4926  00181A  0EAA               	movlw	170
  4927  00181C  5DA1               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4928  00181E  B0D8               	btfsc	status,0,c
  4929  001820  D005               	goto	l8186
  4930  001822                     u9530:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;main.c: 418:         return 0;
  4934  001822  0E00               	movlw	0
  4935  001824  6F8F               	movwf	(?_tirePositioning+1)& (0+255),b
  4936  001826  0E00               	movlw	0
  4937  001828  6F8E               	movwf	?_tirePositioning& (0+255),b
  4938  00182A  0012               	return	
  4939  00182C                     l8186:
  4940                           
  4941                           ; BSR set to: 0
  4942  00182C  51A1               	movf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4943  00182E  5D9F               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4944  001830  6E18               	movwf	abs@a,c
  4945  001832  51A2               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4946  001834  59A0               	subwfb	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4947  001836  6E19               	movwf	abs@a+1,c
  4948  001838  ECFD  F01B         	call	_abs	;wreg free
  4949  00183C  BE19               	btfsc	?_abs+1,7,c
  4950  00183E  D00C               	goto	l8194
  4951  001840  5019               	movf	?_abs+1,w,c
  4952  001842  E104               	bnz	u9540
  4953  001844  0EB5               	movlw	181
  4954  001846  5C18               	subwf	?_abs,w,c
  4955  001848  A0D8               	btfss	status,0,c
  4956  00184A  D006               	goto	l8194
  4957  00184C                     u9540:
  4958                           
  4959                           ;main.c: 420:         return 1;
  4960  00184C  0E00               	movlw	0
  4961  00184E  0100               	movlb	0	; () banked
  4962  001850  6F8F               	movwf	(?_tirePositioning+1)& (0+255),b
  4963  001852  0E01               	movlw	1
  4964  001854  6F8E               	movwf	?_tirePositioning& (0+255),b
  4965  001856  0012               	return	
  4966  001858                     l8194:
  4967                           
  4968                           ;main.c: 422:         return 2;
  4969  001858  0E00               	movlw	0
  4970  00185A  0100               	movlb	0	; () banked
  4971  00185C  6F8F               	movwf	(?_tirePositioning+1)& (0+255),b
  4972  00185E  0E02               	movlw	2
  4973  001860  6F8E               	movwf	?_tirePositioning& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976  001862  0012               	return		;funcret
  4977  001864                     __end_of_tirePositioning:
  4978                           	opt callstack 0
  4979                           
  4980 ;; *************** function _opDelay *****************
  4981 ;; Defined at:
  4982 ;;		line 120 in file "main.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  millis          2    5[COMRAM] int 
  4985 ;;  maxOperation    4    7[COMRAM] unsigned long 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  startTime       4   19[COMRAM] unsigned long 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4997 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;Total ram usage:       18 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    2
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_tirePositioning
  5008 ;;		_doOperation
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text9
  5013  0033BE                     __ptext9:
  5014                           	opt callstack 0
  5015  0033BE                     _opDelay:
  5016                           	opt callstack 26
  5017                           
  5018                           ;main.c: 121:     unsigned long startTime = millisecondsMeasured;
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;incstack = 0
  5022  0033BE  C075  F014         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  5023  0033C2  C076  F015         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  5024  0033C6  C077  F016         	movff	_millisecondsMeasured+2,opDelay@startTime+2	;volatile
  5025  0033CA  C078  F017         	movff	_millisecondsMeasured+3,opDelay@startTime+3	;volatile
  5026  0033CE                     l7918:
  5027                           
  5028                           ;main.c: 122:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  5029  0033CE  5008               	movf	opDelay@maxOperationTime,w,c
  5030  0033D0  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5031  0033D2  5009               	movf	opDelay@maxOperationTime+1,w,c
  5032  0033D4  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5033  0033D6  500A               	movf	opDelay@maxOperationTime+2,w,c
  5034  0033D8  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5035  0033DA  500B               	movf	opDelay@maxOperationTime+3,w,c
  5036  0033DC  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5037  0033DE  B0D8               	btfsc	status,0,c
  5038  0033E0  0012               	return	
  5039  0033E2  C006  F00C         	movff	opDelay@millis,??_opDelay
  5040  0033E6  C007  F00D         	movff	opDelay@millis+1,??_opDelay+1
  5041  0033EA  0E00               	movlw	0
  5042  0033EC  BE0D               	btfsc	(??_opDelay+1)& (0+255),7,c
  5043  0033EE  0EFF               	movlw	255
  5044  0033F0  6E0E               	movwf	(??_opDelay+2)& (0+255),c
  5045  0033F2  6E0F               	movwf	(??_opDelay+3)& (0+255),c
  5046  0033F4  5014               	movf	opDelay@startTime,w,c
  5047  0033F6  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5048  0033F8  6E10               	movwf	(??_opDelay+4)& (0+255),c
  5049  0033FA  5015               	movf	opDelay@startTime+1,w,c
  5050  0033FC  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5051  0033FE  6E11               	movwf	(??_opDelay+5)& (0+255),c
  5052  003400  5016               	movf	opDelay@startTime+2,w,c
  5053  003402  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5054  003404  6E12               	movwf	(??_opDelay+6)& (0+255),c
  5055  003406  5017               	movf	opDelay@startTime+3,w,c
  5056  003408  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5057  00340A  6E13               	movwf	(??_opDelay+7)& (0+255),c
  5058  00340C  500C               	movf	??_opDelay,w,c
  5059  00340E  5C10               	subwf	??_opDelay+4,w,c
  5060  003410  500D               	movf	??_opDelay+1,w,c
  5061  003412  5811               	subwfb	??_opDelay+5,w,c
  5062  003414  500E               	movf	??_opDelay+2,w,c
  5063  003416  5812               	subwfb	??_opDelay+6,w,c
  5064  003418  500F               	movf	??_opDelay+3,w,c
  5065  00341A  5813               	subwfb	??_opDelay+7,w,c
  5066  00341C  B0D8               	btfsc	status,0,c
  5067  00341E  0012               	return	
  5068  003420  D7D6               	goto	l7918
  5069  003422                     __end_of_opDelay:
  5070                           	opt callstack 0
  5071                           
  5072 ;; *************** function ___awdiv *****************
  5073 ;; Defined at:
  5074 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  dividend        2    5[COMRAM] int 
  5077 ;;  divisor         2    7[COMRAM] int 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  quotient        2   11[COMRAM] int 
  5080 ;;  sign            1   10[COMRAM] unsigned char 
  5081 ;;  counter         1    9[COMRAM] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  2    5[COMRAM] int 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;Total ram usage:        8 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    2
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_tirePositioning
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text10
  5106  00310C                     __ptext10:
  5107                           	opt callstack 0
  5108  00310C                     ___awdiv:
  5109                           	opt callstack 26
  5110                           
  5111                           ;incstack = 0
  5112  00310C  0E00               	movlw	0
  5113  00310E  6E0B               	movwf	___awdiv@sign,c
  5114  003110  AE09               	btfss	___awdiv@divisor+1,7,c
  5115  003112  D006               	goto	l8004
  5116  003114  6C08               	negf	___awdiv@divisor,c
  5117  003116  1E09               	comf	___awdiv@divisor+1,f,c
  5118  003118  B0D8               	btfsc	status,0,c
  5119  00311A  2A09               	incf	___awdiv@divisor+1,f,c
  5120  00311C  0E01               	movlw	1
  5121  00311E  6E0B               	movwf	___awdiv@sign,c
  5122  003120                     l8004:
  5123  003120  AE07               	btfss	___awdiv@dividend+1,7,c
  5124  003122  D006               	goto	l8010
  5125  003124  6C06               	negf	___awdiv@dividend,c
  5126  003126  1E07               	comf	___awdiv@dividend+1,f,c
  5127  003128  B0D8               	btfsc	status,0,c
  5128  00312A  2A07               	incf	___awdiv@dividend+1,f,c
  5129  00312C  0E01               	movlw	1
  5130  00312E  1A0B               	xorwf	___awdiv@sign,f,c
  5131  003130                     l8010:
  5132  003130  0E00               	movlw	0
  5133  003132  6E0D               	movwf	___awdiv@quotient+1,c
  5134  003134  0E00               	movlw	0
  5135  003136  6E0C               	movwf	___awdiv@quotient,c
  5136  003138  5008               	movf	___awdiv@divisor,w,c
  5137  00313A  1009               	iorwf	___awdiv@divisor+1,w,c
  5138  00313C  B4D8               	btfsc	status,2,c
  5139  00313E  D01C               	goto	l8032
  5140  003140  0E01               	movlw	1
  5141  003142  6E0A               	movwf	___awdiv@counter,c
  5142  003144  D004               	goto	l8018
  5143  003146                     l8016:
  5144  003146  90D8               	bcf	status,0,c
  5145  003148  3608               	rlcf	___awdiv@divisor,f,c
  5146  00314A  3609               	rlcf	___awdiv@divisor+1,f,c
  5147  00314C  2A0A               	incf	___awdiv@counter,f,c
  5148  00314E                     l8018:
  5149  00314E  AE09               	btfss	___awdiv@divisor+1,7,c
  5150  003150  D7FA               	goto	l8016
  5151  003152                     u9310:
  5152  003152  90D8               	bcf	status,0,c
  5153  003154  360C               	rlcf	___awdiv@quotient,f,c
  5154  003156  360D               	rlcf	___awdiv@quotient+1,f,c
  5155  003158  5008               	movf	___awdiv@divisor,w,c
  5156  00315A  5C06               	subwf	___awdiv@dividend,w,c
  5157  00315C  5009               	movf	___awdiv@divisor+1,w,c
  5158  00315E  5807               	subwfb	___awdiv@dividend+1,w,c
  5159  003160  A0D8               	btfss	status,0,c
  5160  003162  D005               	goto	l8028
  5161  003164  5008               	movf	___awdiv@divisor,w,c
  5162  003166  5E06               	subwf	___awdiv@dividend,f,c
  5163  003168  5009               	movf	___awdiv@divisor+1,w,c
  5164  00316A  5A07               	subwfb	___awdiv@dividend+1,f,c
  5165  00316C  800C               	bsf	___awdiv@quotient,0,c
  5166  00316E                     l8028:
  5167  00316E  90D8               	bcf	status,0,c
  5168  003170  3209               	rrcf	___awdiv@divisor+1,f,c
  5169  003172  3208               	rrcf	___awdiv@divisor,f,c
  5170  003174  2E0A               	decfsz	___awdiv@counter,f,c
  5171  003176  D7ED               	goto	u9310
  5172  003178                     l8032:
  5173  003178  500B               	movf	___awdiv@sign,w,c
  5174  00317A  B4D8               	btfsc	status,2,c
  5175  00317C  D004               	goto	l8036
  5176  00317E  6C0C               	negf	___awdiv@quotient,c
  5177  003180  1E0D               	comf	___awdiv@quotient+1,f,c
  5178  003182  B0D8               	btfsc	status,0,c
  5179  003184  2A0D               	incf	___awdiv@quotient+1,f,c
  5180  003186                     l8036:
  5181  003186  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5182  00318A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5183  00318E  0012               	return		;funcret
  5184  003190                     __end_of___awdiv:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  5188 ;; Defined at:
  5189 ;;		line 489 in file "main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  data            1    0        unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    4
  5210 ;; This function calls:
  5211 ;;		_I2C_Master_Start
  5212 ;;		_I2C_Master_Stop
  5213 ;;		_I2C_Master_Write
  5214 ;; This function is called by:
  5215 ;;		_doOperation
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text11
  5220  0039AC                     __ptext11:
  5221                           	opt callstack 0
  5222  0039AC                     _sendArduinoTireOperationStartMessage:
  5223                           	opt callstack 25
  5224                           
  5225                           ;main.c: 496:     I2C_Master_Start();
  5226                           
  5227                           ;incstack = 0
  5228  0039AC  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  5229                           
  5230                           ;main.c: 497:     I2C_Master_Write(0b00010000);
  5231  0039B0  0E00               	movlw	0
  5232  0039B2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5233  0039B4  0E10               	movlw	16
  5234  0039B6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5235  0039B8  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5236                           
  5237                           ;main.c: 498:     I2C_Master_Write(data);
  5238  0039BC  0E00               	movlw	0
  5239  0039BE  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5240  0039C0  0E32               	movlw	50
  5241  0039C2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5242  0039C4  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5243                           
  5244                           ;main.c: 499:     I2C_Master_Stop();
  5245  0039C8  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  5246  0039CC  0012               	return		;funcret
  5247  0039CE                     __end_of_sendArduinoTireOperationStartMessage:
  5248                           	opt callstack 0
  5249                           
  5250 ;; *************** function _sendArduinoTireDropRequest *****************
  5251 ;; Defined at:
  5252 ;;		line 430 in file "main.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  data            1    0        unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        1 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		_I2C_Master_Start
  5275 ;;		_I2C_Master_Stop
  5276 ;;		_I2C_Master_Write
  5277 ;; This function is called by:
  5278 ;;		_doOperation
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text12
  5283  0039CE                     __ptext12:
  5284                           	opt callstack 0
  5285  0039CE                     _sendArduinoTireDropRequest:
  5286                           	opt callstack 25
  5287                           
  5288                           ;main.c: 437:     I2C_Master_Start();
  5289                           
  5290                           ;incstack = 0
  5291  0039CE  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  5292                           
  5293                           ;main.c: 438:     I2C_Master_Write(0b00010000);
  5294  0039D2  0E00               	movlw	0
  5295  0039D4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5296  0039D6  0E10               	movlw	16
  5297  0039D8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5298  0039DA  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5299                           
  5300                           ;main.c: 439:     I2C_Master_Write(data);
  5301  0039DE  0E00               	movlw	0
  5302  0039E0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5303  0039E2  0E31               	movlw	49
  5304  0039E4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5305  0039E6  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5306                           
  5307                           ;main.c: 440:     I2C_Master_Stop();
  5308  0039EA  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  5309  0039EE  0012               	return		;funcret
  5310  0039F0                     __end_of_sendArduinoTireDropRequest:
  5311                           	opt callstack 0
  5312                           
  5313 ;; *************** function _sendArduinoAbortOperationMessage *****************
  5314 ;; Defined at:
  5315 ;;		line 503 in file "main.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  data            1    0        unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;Total ram usage:        1 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    4
  5336 ;; This function calls:
  5337 ;;		_I2C_Master_Start
  5338 ;;		_I2C_Master_Stop
  5339 ;;		_I2C_Master_Write
  5340 ;; This function is called by:
  5341 ;;		_doOperation
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text13
  5346  0039F0                     __ptext13:
  5347                           	opt callstack 0
  5348  0039F0                     _sendArduinoAbortOperationMessage:
  5349                           	opt callstack 25
  5350                           
  5351                           ;main.c: 510:     I2C_Master_Start();
  5352                           
  5353                           ;incstack = 0
  5354  0039F0  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  5355                           
  5356                           ;main.c: 511:     I2C_Master_Write(0b00010000);
  5357  0039F4  0E00               	movlw	0
  5358  0039F6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5359  0039F8  0E10               	movlw	16
  5360  0039FA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5361  0039FC  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5362                           
  5363                           ;main.c: 512:     I2C_Master_Write(data);
  5364  003A00  0E00               	movlw	0
  5365  003A02  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5366  003A04  0E33               	movlw	51
  5367  003A06  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5368  003A08  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5369                           
  5370                           ;main.c: 513:     I2C_Master_Stop();
  5371  003A0C  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  5372  003A10  0012               	return		;funcret
  5373  003A12                     __end_of_sendArduinoAbortOperationMessage:
  5374                           	opt callstack 0
  5375                           
  5376 ;; *************** function _requestIsTireDropDone *****************
  5377 ;; Defined at:
  5378 ;;		line 518 in file "main.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  data            1    8[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      _Bool 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:        1 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    4
  5399 ;; This function calls:
  5400 ;;		_I2C_Master_Read
  5401 ;;		_I2C_Master_Start
  5402 ;;		_I2C_Master_Stop
  5403 ;;		_I2C_Master_Write
  5404 ;; This function is called by:
  5405 ;;		_doOperation
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text14
  5410  0038BC                     __ptext14:
  5411                           	opt callstack 0
  5412  0038BC                     _requestIsTireDropDone:
  5413                           	opt callstack 25
  5414                           
  5415                           ;main.c: 519:     I2C_Master_Start();
  5416                           
  5417                           ;incstack = 0
  5418  0038BC  EC56  F01D         	call	_I2C_Master_Start	;wreg free
  5419                           
  5420                           ;main.c: 520:     I2C_Master_Write(0b00010001);
  5421  0038C0  0E00               	movlw	0
  5422  0038C2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5423  0038C4  0E11               	movlw	17
  5424  0038C6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5425  0038C8  EC4D  F01D         	call	_I2C_Master_Write	;wreg free
  5426                           
  5427                           ;main.c: 521:     unsigned char data = I2C_Master_Read(1);
  5428  0038CC  0E01               	movlw	1
  5429  0038CE  ECC4  F01C         	call	_I2C_Master_Read
  5430  0038D2  6E09               	movwf	requestIsTireDropDone@data,c
  5431                           
  5432                           ;main.c: 522:     I2C_Master_Stop();
  5433  0038D4  EC52  F01D         	call	_I2C_Master_Stop	;wreg free
  5434                           
  5435                           ;main.c: 523:     if(data == '1'){
  5436  0038D8  0E31               	movlw	49
  5437  0038DA  1809               	xorwf	requestIsTireDropDone@data,w,c
  5438  0038DC  A4D8               	btfss	status,2,c
  5439  0038DE  D002               	goto	l8242
  5440                           
  5441                           ;main.c: 524:         return 1;
  5442  0038E0  0E01               	movlw	1
  5443  0038E2  0012               	return	
  5444  0038E4                     l8242:
  5445                           
  5446                           ;main.c: 526:     return 0;
  5447  0038E4  0E00               	movlw	0
  5448  0038E6  0012               	return		;funcret
  5449  0038E8                     __end_of_requestIsTireDropDone:
  5450                           	opt callstack 0
  5451                           
  5452 ;; *************** function _I2C_Master_Write *****************
  5453 ;; Defined at:
  5454 ;;		line 70 in file "I2C.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;Total ram usage:        2 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    3
  5475 ;; This function calls:
  5476 ;;		_I2C_Master_Wait
  5477 ;; This function is called by:
  5478 ;;		_sendArduinoTireDropRequest
  5479 ;;		_sendArduinoTireOperationStartMessage
  5480 ;;		_sendArduinoAbortOperationMessage
  5481 ;;		_requestIsTireDropDone
  5482 ;;		_doOperation
  5483 ;;		_main
  5484 ;;		_rtc_set_time
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text15
  5489  003A9A                     __ptext15:
  5490                           	opt callstack 0
  5491  003A9A                     _I2C_Master_Write:
  5492                           	opt callstack 25
  5493                           
  5494                           ;I2C.c: 71:     I2C_Master_Wait();
  5495                           
  5496                           ;incstack = 0
  5497  003A9A  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5498                           
  5499                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5500  003A9E  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5501  003AA2  0012               	return		;funcret
  5502  003AA4                     __end_of_I2C_Master_Write:
  5503                           	opt callstack 0
  5504                           
  5505 ;; *************** function _I2C_Master_Stop *****************
  5506 ;; Defined at:
  5507 ;;		line 65 in file "I2C.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    3
  5528 ;; This function calls:
  5529 ;;		_I2C_Master_Wait
  5530 ;; This function is called by:
  5531 ;;		_sendArduinoTireDropRequest
  5532 ;;		_sendArduinoTireOperationStartMessage
  5533 ;;		_sendArduinoAbortOperationMessage
  5534 ;;		_requestIsTireDropDone
  5535 ;;		_doOperation
  5536 ;;		_main
  5537 ;;		_rtc_set_time
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text16
  5542  003AA4                     __ptext16:
  5543                           	opt callstack 0
  5544  003AA4                     _I2C_Master_Stop:
  5545                           	opt callstack 25
  5546                           
  5547                           ;I2C.c: 66:     I2C_Master_Wait();
  5548                           
  5549                           ;incstack = 0
  5550  003AA4  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5551                           
  5552                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5553  003AA8  84C5               	bsf	4037,2,c	;volatile
  5554  003AAA  0012               	return		;funcret
  5555  003AAC                     __end_of_I2C_Master_Stop:
  5556                           	opt callstack 0
  5557                           
  5558 ;; *************** function _I2C_Master_Start *****************
  5559 ;; Defined at:
  5560 ;;		line 55 in file "I2C.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    3
  5581 ;; This function calls:
  5582 ;;		_I2C_Master_Wait
  5583 ;; This function is called by:
  5584 ;;		_sendArduinoTireDropRequest
  5585 ;;		_sendArduinoTireOperationStartMessage
  5586 ;;		_sendArduinoAbortOperationMessage
  5587 ;;		_requestIsTireDropDone
  5588 ;;		_doOperation
  5589 ;;		_main
  5590 ;;		_rtc_set_time
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text17
  5595  003AAC                     __ptext17:
  5596                           	opt callstack 0
  5597  003AAC                     _I2C_Master_Start:
  5598                           	opt callstack 25
  5599                           
  5600                           ;I2C.c: 56:     I2C_Master_Wait();
  5601                           
  5602                           ;incstack = 0
  5603  003AAC  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5604                           
  5605                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5606  003AB0  80C5               	bsf	4037,0,c	;volatile
  5607  003AB2  0012               	return		;funcret
  5608  003AB4                     __end_of_I2C_Master_Start:
  5609                           	opt callstack 0
  5610                           
  5611 ;; *************** function _I2C_Master_Read *****************
  5612 ;; Defined at:
  5613 ;;		line 77 in file "I2C.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  ackBit          1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  ackBit          1    6[COMRAM] unsigned char 
  5618 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    3
  5635 ;; This function calls:
  5636 ;;		_I2C_Master_Wait
  5637 ;; This function is called by:
  5638 ;;		_requestIsTireDropDone
  5639 ;;		_main
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text18
  5644  003988                     __ptext18:
  5645                           	opt callstack 0
  5646  003988                     _I2C_Master_Read:
  5647                           	opt callstack 25
  5648                           
  5649                           ;incstack = 0
  5650                           ;I2C_Master_Read@ackBit stored from wreg
  5651  003988  6E07               	movwf	I2C_Master_Read@ackBit,c
  5652                           
  5653                           ;I2C.c: 78:     I2C_Master_Wait();
  5654  00398A  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5655                           
  5656                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5657  00398E  86C5               	bsf	4037,3,c	;volatile
  5658                           
  5659                           ;I2C.c: 81:     I2C_Master_Wait();
  5660  003990  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5661                           
  5662                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5663  003994  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5664                           
  5665                           ;I2C.c: 86:     I2C_Master_Wait();
  5666  003998  EC2F  F01D         	call	_I2C_Master_Wait	;wreg free
  5667                           
  5668                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5669  00399C  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5670  00399E  D002               	bra	u9205
  5671  0039A0  9AC5               	bcf	4037,5,c	;volatile
  5672  0039A2  D001               	bra	u9206
  5673  0039A4                     u9205:
  5674  0039A4  8AC5               	bsf	4037,5,c	;volatile
  5675  0039A6                     u9206:
  5676                           
  5677                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5678  0039A6  88C5               	bsf	4037,4,c	;volatile
  5679                           
  5680                           ;I2C.c: 90:     return receivedByte;
  5681  0039A8  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5682  0039AA  0012               	return		;funcret
  5683  0039AC                     __end_of_I2C_Master_Read:
  5684                           	opt callstack 0
  5685                           
  5686 ;; *************** function _I2C_Master_Wait *****************
  5687 ;; Defined at:
  5688 ;;		line 21 in file "I2C.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;Total ram usage:        1 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    2
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_I2C_Master_Start
  5713 ;;		_I2C_Master_Stop
  5714 ;;		_I2C_Master_Write
  5715 ;;		_I2C_Master_Read
  5716 ;;		_I2C_Master_RepeatedStart
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text19
  5721  003A5E                     __ptext19:
  5722                           	opt callstack 0
  5723  003A5E                     _I2C_Master_Wait:
  5724                           	opt callstack 25
  5725                           
  5726                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5727                           
  5728                           ;I2C.c: 28:     }
  5729                           
  5730                           ;incstack = 0
  5731  003A5E  B4C7               	btfsc	4039,2,c	;volatile
  5732  003A60  D7FE               	goto	_I2C_Master_Wait
  5733  003A62  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5734  003A66  0E1F               	movlw	31
  5735  003A68  1606               	andwf	??_I2C_Master_Wait,f,c
  5736  003A6A  B4D8               	btfsc	status,2,c
  5737  003A6C  0012               	return	
  5738  003A6E  D7F7               	goto	_I2C_Master_Wait
  5739  003A70                     __end_of_I2C_Master_Wait:
  5740                           	opt callstack 0
  5741                           
  5742 ;; *************** function _opErrorCorrectionDegrees *****************
  5743 ;; Defined at:
  5744 ;;		line 602 in file "main.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  goalSpeed       2   32[BANK0 ] int 
  5747 ;;  turnRatio       2   34[BANK0 ] int 
  5748 ;;  correctionCo    4   36[BANK0 ] float 
  5749 ;;  distanceDegr    2   40[BANK0 ] int 
  5750 ;;  maxOperation    4   42[BANK0 ] unsigned long 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  motorAStartD    2   52[BANK0 ] int 
  5753 ;;  motorBStartD    2   50[BANK0 ] int 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5763 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Totals:         1      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;Total ram usage:       23 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    6
  5770 ;; This function calls:
  5771 ;;		___xxtofl
  5772 ;;		_abs
  5773 ;;		_errorCorrectedMove
  5774 ;; This function is called by:
  5775 ;;		_doOperation
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text20
  5780  002EA2                     __ptext20:
  5781                           	opt callstack 0
  5782  002EA2                     _opErrorCorrectionDegrees:
  5783                           	opt callstack 23
  5784                           
  5785                           ;main.c: 603:     int motorAStartDistance = motorADistance;
  5786                           
  5787                           ;incstack = 0
  5788  002EA2  C0D0  F0B4         	movff	_motorADistance,opErrorCorrectionDegrees@motorAStartDistance	;volatile
  5789  002EA6  C0D1  F0B5         	movff	_motorADistance+1,opErrorCorrectionDegrees@motorAStartDistance+1	;volatile
  5790                           
  5791                           ;main.c: 604:     int motorBStartDistance = motorBDistance;
  5792  002EAA  C0CE  F0B2         	movff	_motorBDistance,opErrorCorrectionDegrees@motorBStartDistance	;volatile
  5793  002EAE  C0CF  F0B3         	movff	_motorBDistance+1,opErrorCorrectionDegrees@motorBStartDistance+1	;volatile
  5794                           
  5795                           ;main.c: 608:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5796  002EB2  D032               	goto	l8252
  5797  002EB4                     l8248:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;main.c: 609:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5801  002EB4  C0A2  F006         	movff	opErrorCorrectionDegrees@turnRatio,___xxtofl@val
  5802  002EB8  C0A3  F007         	movff	opErrorCorrectionDegrees@turnRatio+1,___xxtofl@val+1
  5803  002EBC  0E00               	movlw	0
  5804  002EBE  BE07               	btfsc	___xxtofl@val+1,7,c
  5805  002EC0  0EFF               	movlw	-1
  5806  002EC2  6E08               	movwf	___xxtofl@val+2,c
  5807  002EC4  6E09               	movwf	___xxtofl@val+3,c
  5808  002EC6  0E01               	movlw	1
  5809  002EC8  ECBA  F014         	call	___xxtofl
  5810  002ECC  C006  F0AE         	movff	?___xxtofl,_opErrorCorrectionDegrees$2229
  5811  002ED0  C007  F0AF         	movff	?___xxtofl+1,_opErrorCorrectionDegrees$2229+1
  5812  002ED4  C008  F0B0         	movff	?___xxtofl+2,_opErrorCorrectionDegrees$2229+2
  5813  002ED8  C009  F0B1         	movff	?___xxtofl+3,_opErrorCorrectionDegrees$2229+3
  5814                           
  5815                           ;main.c: 609:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  5816  002EDC  C0A0  F088         	movff	opErrorCorrectionDegrees@goalSpeed,errorCorrectedMove@goalSpeed
  5817  002EE0  C0A1  F089         	movff	opErrorCorrectionDegrees@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  5818  002EE4  C0AE  F08A         	movff	_opErrorCorrectionDegrees$2229,errorCorrectedMove@turnRatio
  5819  002EE8  C0AF  F08B         	movff	_opErrorCorrectionDegrees$2229+1,errorCorrectedMove@turnRatio+1
  5820  002EEC  C0B0  F08C         	movff	_opErrorCorrectionDegrees$2229+2,errorCorrectedMove@turnRatio+2
  5821  002EF0  C0B1  F08D         	movff	_opErrorCorrectionDegrees$2229+3,errorCorrectedMove@turnRatio+3
  5822  002EF4  C0B4  F08E         	movff	opErrorCorrectionDegrees@motorAStartDistance,errorCorrectedMove@motorAStartDistan
      +                          ce
  5823  002EF8  C0B5  F08F         	movff	opErrorCorrectionDegrees@motorAStartDistance+1,errorCorrectedMove@motorAStartDist
      +                          ance+1
  5824  002EFC  C0B2  F090         	movff	opErrorCorrectionDegrees@motorBStartDistance,errorCorrectedMove@motorBStartDistan
      +                          ce
  5825  002F00  C0B3  F091         	movff	opErrorCorrectionDegrees@motorBStartDistance+1,errorCorrectedMove@motorBStartDist
      +                          ance+1
  5826  002F04  C0A4  F092         	movff	opErrorCorrectionDegrees@correctionConstant,errorCorrectedMove@correctionConstant
  5827  002F08  C0A5  F093         	movff	opErrorCorrectionDegrees@correctionConstant+1,errorCorrectedMove@correctionConsta
      +                          nt+1
  5828  002F0C  C0A6  F094         	movff	opErrorCorrectionDegrees@correctionConstant+2,errorCorrectedMove@correctionConsta
      +                          nt+2
  5829  002F10  C0A7  F095         	movff	opErrorCorrectionDegrees@correctionConstant+3,errorCorrectedMove@correctionConsta
      +                          nt+3
  5830  002F14  ECFC  F00E         	call	_errorCorrectedMove	;wreg free
  5831  002F18                     l8252:
  5832                           
  5833                           ;main.c: 608:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  5834  002F18  0100               	movlb	0	; () banked
  5835  002F1A  51AA               	movf	opErrorCorrectionDegrees@maxOperationTime& (0+255),w,b
  5836  002F1C  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  5837  002F1E  51AB               	movf	(opErrorCorrectionDegrees@maxOperationTime+1)& (0+255),w,b
  5838  002F20  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5839  002F22  51AC               	movf	(opErrorCorrectionDegrees@maxOperationTime+2)& (0+255),w,b
  5840  002F24  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5841  002F26  51AD               	movf	(opErrorCorrectionDegrees@maxOperationTime+3)& (0+255),w,b
  5842  002F28  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5843  002F2A  B0D8               	btfsc	status,0,c
  5844  002F2C  0012               	return	
  5845                           
  5846                           ; BSR set to: 0
  5847  002F2E  51B4               	movf	opErrorCorrectionDegrees@motorAStartDistance& (0+255),w,b
  5848  002F30  5DD0               	subwf	_motorADistance& (0+255),w,b	;volatile
  5849  002F32  6E18               	movwf	abs@a,c
  5850  002F34  51B5               	movf	(opErrorCorrectionDegrees@motorAStartDistance+1)& (0+255),w,b
  5851  002F36  59D1               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5852  002F38  6E19               	movwf	abs@a+1,c
  5853  002F3A  ECFD  F01B         	call	_abs	;wreg free
  5854  002F3E  0100               	movlb	0	; () banked
  5855  002F40  51A8               	movf	opErrorCorrectionDegrees@distanceDegrees& (0+255),w,b
  5856  002F42  5C18               	subwf	?_abs,w,c
  5857  002F44  5019               	movf	?_abs+1,w,c
  5858  002F46  0A80               	xorlw	128
  5859  002F48  6E72               	movwf	??_opErrorCorrectionDegrees& (0+255),c
  5860  002F4A  51A9               	movf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),w,b
  5861  002F4C  0A80               	xorlw	128
  5862  002F4E  5872               	subwfb	??_opErrorCorrectionDegrees& (0+255),w,c
  5863  002F50  B0D8               	btfsc	status,0,c
  5864  002F52  0012               	return	
  5865  002F54  D7AF               	goto	l8248
  5866  002F56                     __end_of_opErrorCorrectionDegrees:
  5867                           	opt callstack 0
  5868                           
  5869 ;; *************** function _errorCorrectedMove *****************
  5870 ;; Defined at:
  5871 ;;		line 575 in file "main.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  goalSpeed       2    8[BANK0 ] int 
  5874 ;;  turnRatio       4   10[BANK0 ] float 
  5875 ;;  motorAStartD    2   14[BANK0 ] int 
  5876 ;;  motorBStartD    2   16[BANK0 ] int 
  5877 ;;  correctionCo    4   18[BANK0 ] float 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  BSpeed          2   30[BANK0 ] int 
  5880 ;;  ASpeed          2   28[BANK0 ] int 
  5881 ;;  error           2   26[BANK0 ] int 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5891 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;Total ram usage:       24 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    5
  5898 ;; This function calls:
  5899 ;;		___fladd
  5900 ;;		___fldiv
  5901 ;;		___flmul
  5902 ;;		___flsub
  5903 ;;		___fltol
  5904 ;;		___xxtofl
  5905 ;;		_setMotorSpeeds
  5906 ;; This function is called by:
  5907 ;;		_opErrorCorrectionDegrees
  5908 ;;		_doOperation
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text21
  5913  001DF8                     __ptext21:
  5914                           	opt callstack 0
  5915  001DF8                     _errorCorrectedMove:
  5916                           	opt callstack 23
  5917                           
  5918                           ;main.c: 576:     int error = (int)((motorADistance - motorAStartDistance)-(motorBDistan
      +                          ce - motorBStartDistance)/turnRatio);
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;incstack = 0
  5922  001DF8  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  5923  001DFC  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  5924  001E00  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  5925  001E04  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  5926  001E08  0100               	movlb	0	; () banked
  5927  001E0A  5190               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  5928  001E0C  5DCE               	subwf	_motorBDistance& (0+255),w,b	;volatile
  5929  001E0E  6F96               	movwf	??_errorCorrectedMove& (0+255),b
  5930  001E10  5191               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  5931  001E12  59CF               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  5932  001E14  6F97               	movwf	(??_errorCorrectedMove+1)& (0+255),b
  5933  001E16  C096  F006         	movff	??_errorCorrectedMove,___xxtofl@val
  5934  001E1A  C097  F007         	movff	??_errorCorrectedMove+1,___xxtofl@val+1
  5935  001E1E  0E00               	movlw	0
  5936  001E20  BE07               	btfsc	___xxtofl@val+1,7,c
  5937  001E22  0EFF               	movlw	-1
  5938  001E24  6E08               	movwf	___xxtofl@val+2,c
  5939  001E26  6E09               	movwf	___xxtofl@val+3,c
  5940  001E28  0E01               	movlw	1
  5941  001E2A  ECBA  F014         	call	___xxtofl
  5942  001E2E  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5943  001E32  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5944  001E36  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5945  001E3A  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5946  001E3E  ECB8  F00D         	call	___fldiv	;wreg free
  5947  001E42  C02D  F04A         	movff	?___fldiv,___flsub@a
  5948  001E46  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  5949  001E4A  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  5950  001E4E  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  5951  001E52  0100               	movlb	0	; () banked
  5952  001E54  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  5953  001E56  5DD0               	subwf	_motorADistance& (0+255),w,b	;volatile
  5954  001E58  6F98               	movwf	(??_errorCorrectedMove+2)& (0+255),b
  5955  001E5A  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  5956  001E5C  59D1               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5957  001E5E  6F99               	movwf	(??_errorCorrectedMove+3)& (0+255),b
  5958  001E60  C098  F006         	movff	??_errorCorrectedMove+2,___xxtofl@val
  5959  001E64  C099  F007         	movff	??_errorCorrectedMove+3,___xxtofl@val+1
  5960  001E68  0E00               	movlw	0
  5961  001E6A  BE07               	btfsc	___xxtofl@val+1,7,c
  5962  001E6C  0EFF               	movlw	-1
  5963  001E6E  6E08               	movwf	___xxtofl@val+2,c
  5964  001E70  6E09               	movwf	___xxtofl@val+3,c
  5965  001E72  0E01               	movlw	1
  5966  001E74  ECBA  F014         	call	___xxtofl
  5967  001E78  C006  F046         	movff	?___xxtofl,___flsub@b
  5968  001E7C  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5969  001E80  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5970  001E84  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5971  001E88  ECDC  F01A         	call	___flsub	;wreg free
  5972  001E8C  C046  F04E         	movff	?___flsub,___fltol@f1
  5973  001E90  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5974  001E94  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5975  001E98  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5976  001E9C  ECF4  F016         	call	___fltol	;wreg free
  5977  001EA0  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  5978  001EA4  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  5979                           
  5980                           ;main.c: 577:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  5981  001EA8  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5982  001EAC  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5983  001EB0  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5984  001EB4  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5985  001EB8  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5986  001EBC  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5987  001EC0  0E00               	movlw	0
  5988  001EC2  BE07               	btfsc	___xxtofl@val+1,7,c
  5989  001EC4  0EFF               	movlw	-1
  5990  001EC6  6E08               	movwf	___xxtofl@val+2,c
  5991  001EC8  6E09               	movwf	___xxtofl@val+3,c
  5992  001ECA  0E01               	movlw	1
  5993  001ECC  ECBA  F014         	call	___xxtofl
  5994  001ED0  C006  F014         	movff	?___xxtofl,___flmul@b
  5995  001ED4  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5996  001ED8  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5997  001EDC  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5998  001EE0  EC00  F009         	call	___flmul	;wreg free
  5999  001EE4  C014  F04A         	movff	?___flmul,___flsub@a
  6000  001EE8  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  6001  001EEC  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  6002  001EF0  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  6003  001EF4  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  6004  001EF8  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  6005  001EFC  0E00               	movlw	0
  6006  001EFE  BE07               	btfsc	___xxtofl@val+1,7,c
  6007  001F00  0EFF               	movlw	-1
  6008  001F02  6E08               	movwf	___xxtofl@val+2,c
  6009  001F04  6E09               	movwf	___xxtofl@val+3,c
  6010  001F06  0E01               	movlw	1
  6011  001F08  ECBA  F014         	call	___xxtofl
  6012  001F0C  C006  F046         	movff	?___xxtofl,___flsub@b
  6013  001F10  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  6014  001F14  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  6015  001F18  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  6016  001F1C  ECDC  F01A         	call	___flsub	;wreg free
  6017  001F20  C046  F04E         	movff	?___flsub,___fltol@f1
  6018  001F24  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  6019  001F28  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  6020  001F2C  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  6021  001F30  ECF4  F016         	call	___fltol	;wreg free
  6022  001F34  C04E  F09C         	movff	?___fltol,errorCorrectedMove@ASpeed
  6023  001F38  C04F  F09D         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  6024                           
  6025                           ;main.c: 578:     int BSpeed = (int)((goalSpeed*turnRatio + error*correctionConstant));
  6026  001F3C  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  6027  001F40  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  6028  001F44  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  6029  001F48  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  6030  001F4C  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  6031  001F50  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  6032  001F54  0E00               	movlw	0
  6033  001F56  BE07               	btfsc	___xxtofl@val+1,7,c
  6034  001F58  0EFF               	movlw	-1
  6035  001F5A  6E08               	movwf	___xxtofl@val+2,c
  6036  001F5C  6E09               	movwf	___xxtofl@val+3,c
  6037  001F5E  0E01               	movlw	1
  6038  001F60  ECBA  F014         	call	___xxtofl
  6039  001F64  C006  F014         	movff	?___xxtofl,___flmul@b
  6040  001F68  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6041  001F6C  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6042  001F70  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6043  001F74  EC00  F009         	call	___flmul	;wreg free
  6044  001F78  C014  F031         	movff	?___flmul,___fladd@a
  6045  001F7C  C015  F032         	movff	?___flmul+1,___fladd@a+1
  6046  001F80  C016  F033         	movff	?___flmul+2,___fladd@a+2
  6047  001F84  C017  F034         	movff	?___flmul+3,___fladd@a+3
  6048  001F88  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  6049  001F8C  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  6050  001F90  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  6051  001F94  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  6052  001F98  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  6053  001F9C  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  6054  001FA0  0E00               	movlw	0
  6055  001FA2  BE07               	btfsc	___xxtofl@val+1,7,c
  6056  001FA4  0EFF               	movlw	-1
  6057  001FA6  6E08               	movwf	___xxtofl@val+2,c
  6058  001FA8  6E09               	movwf	___xxtofl@val+3,c
  6059  001FAA  0E01               	movlw	1
  6060  001FAC  ECBA  F014         	call	___xxtofl
  6061  001FB0  C006  F014         	movff	?___xxtofl,___flmul@b
  6062  001FB4  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6063  001FB8  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6064  001FBC  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6065  001FC0  EC00  F009         	call	___flmul	;wreg free
  6066  001FC4  C014  F02D         	movff	?___flmul,___fladd@b
  6067  001FC8  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  6068  001FCC  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  6069  001FD0  C017  F030         	movff	?___flmul+3,___fladd@b+3
  6070  001FD4  EC32  F00C         	call	___fladd	;wreg free
  6071  001FD8  C02D  F04E         	movff	?___fladd,___fltol@f1
  6072  001FDC  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  6073  001FE0  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  6074  001FE4  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  6075  001FE8  ECF4  F016         	call	___fltol	;wreg free
  6076  001FEC  C04E  F09E         	movff	?___fltol,errorCorrectedMove@BSpeed
  6077  001FF0  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  6078                           
  6079                           ;main.c: 580:     if (ASpeed > 100){
  6080  001FF4  0100               	movlb	0	; () banked
  6081  001FF6  BF9D               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  6082  001FF8  D00A               	goto	l7958
  6083  001FFA  519D               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  6084  001FFC  E104               	bnz	u9210
  6085  001FFE  0E65               	movlw	101
  6086  002000  5D9C               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  6087  002002  A0D8               	btfss	status,0,c
  6088  002004  D004               	goto	l7958
  6089  002006                     u9210:
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;main.c: 581:         ASpeed = 100;
  6093  002006  0E00               	movlw	0
  6094  002008  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6095  00200A  0E64               	movlw	100
  6096  00200C  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6097  00200E                     l7958:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;main.c: 583:     if (ASpeed < 0){
  6101  00200E  AF9D               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  6102  002010  D004               	goto	l7962
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;main.c: 584:         ASpeed = 0;
  6106  002012  0E00               	movlw	0
  6107  002014  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6108  002016  0E00               	movlw	0
  6109  002018  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6110  00201A                     l7962:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;main.c: 586:     if (BSpeed > 100){
  6114  00201A  BF9F               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6115  00201C  D00A               	goto	l7966
  6116  00201E  519F               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  6117  002020  E104               	bnz	u9230
  6118  002022  0E65               	movlw	101
  6119  002024  5D9E               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  6120  002026  A0D8               	btfss	status,0,c
  6121  002028  D004               	goto	l7966
  6122  00202A                     u9230:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;main.c: 587:         BSpeed = 100;
  6126  00202A  0E00               	movlw	0
  6127  00202C  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6128  00202E  0E64               	movlw	100
  6129  002030  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6130  002032                     l7966:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;main.c: 589:     if (BSpeed < 0){
  6134  002032  AF9F               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6135  002034  D004               	goto	l7970
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;main.c: 590:         BSpeed = 0;
  6139  002036  0E00               	movlw	0
  6140  002038  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6141  00203A  0E00               	movlw	0
  6142  00203C  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6143  00203E                     l7970:
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;main.c: 593:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  6147  00203E  C09C  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  6148  002042  C09D  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  6149  002046  0E01               	movlw	1
  6150  002048  6E6E               	movwf	setMotorSpeeds@Aforward,c
  6151  00204A  0E01               	movlw	1
  6152  00204C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  6153  00204E  C09E  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  6154  002052  C09F  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  6155  002056  ECF8  F017         	call	_setMotorSpeeds	;wreg free
  6156  00205A  0012               	return		;funcret
  6157  00205C                     __end_of_errorCorrectedMove:
  6158                           	opt callstack 0
  6159                           
  6160 ;; *************** function _setMotorSpeeds *****************
  6161 ;; Defined at:
  6162 ;;		line 338 in file "main.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  motorASpeed     2  107[COMRAM] int 
  6165 ;;  Aforward        1  109[COMRAM] _Bool 
  6166 ;;  Bforward        1  110[COMRAM] _Bool 
  6167 ;;  motorBSpeed     2  111[COMRAM] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;Total ram usage:       14 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    4
  6186 ;; This function calls:
  6187 ;;		___xxtofl
  6188 ;;		_set_pwm_duty_cycle
  6189 ;; This function is called by:
  6190 ;;		_tirePositioning
  6191 ;;		_errorCorrectedMove
  6192 ;;		_doOperation
  6193 ;;		_PIDCorrectedMove
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text22
  6198  002FF0                     __ptext22:
  6199                           	opt callstack 0
  6200  002FF0                     _setMotorSpeeds:
  6201                           	opt callstack 24
  6202                           
  6203                           ;main.c: 339:     if (Aforward){
  6204                           
  6205                           ;incstack = 0
  6206  002FF0  506E               	movf	setMotorSpeeds@Aforward,w,c
  6207  002FF2  B4D8               	btfsc	status,2,c
  6208  002FF4  D003               	goto	l252
  6209                           
  6210                           ;main.c: 340:         LATAbits.LATA0 = 1;
  6211  002FF6  8089               	bsf	3977,0,c	;volatile
  6212                           
  6213                           ;main.c: 341:         LATAbits.LATA1 = 0;
  6214  002FF8  9289               	bcf	3977,1,c	;volatile
  6215                           
  6216                           ;main.c: 342:     } else {
  6217  002FFA  D002               	goto	l7878
  6218  002FFC                     l252:
  6219                           
  6220                           ;main.c: 343:         LATAbits.LATA0 = 0;
  6221  002FFC  9089               	bcf	3977,0,c	;volatile
  6222                           
  6223                           ;main.c: 344:         LATAbits.LATA1 = 1;
  6224  002FFE  8289               	bsf	3977,1,c	;volatile
  6225  003000                     l7878:
  6226                           
  6227                           ;main.c: 346:     if (Bforward){
  6228  003000  506F               	movf	setMotorSpeeds@Bforward,w,c
  6229  003002  B4D8               	btfsc	status,2,c
  6230  003004  D003               	goto	l254
  6231                           
  6232                           ;main.c: 347:         LATAbits.LATA2 = 1;
  6233  003006  8489               	bsf	3977,2,c	;volatile
  6234                           
  6235                           ;main.c: 348:         LATAbits.LATA3 = 0;
  6236  003008  9689               	bcf	3977,3,c	;volatile
  6237                           
  6238                           ;main.c: 349:     } else {
  6239  00300A  D002               	goto	l7882
  6240  00300C                     l254:
  6241                           
  6242                           ;main.c: 350:         LATAbits.LATA2 = 0;
  6243  00300C  9489               	bcf	3977,2,c	;volatile
  6244                           
  6245                           ;main.c: 351:         LATAbits.LATA3 = 1;
  6246  00300E  8689               	bsf	3977,3,c	;volatile
  6247  003010                     l7882:
  6248                           
  6249                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6250  003010  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  6251  003014  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  6252  003018  0E00               	movlw	0
  6253  00301A  BE07               	btfsc	___xxtofl@val+1,7,c
  6254  00301C  0EFF               	movlw	-1
  6255  00301E  6E08               	movwf	___xxtofl@val+2,c
  6256  003020  6E09               	movwf	___xxtofl@val+3,c
  6257  003022  0E01               	movlw	1
  6258  003024  ECBA  F014         	call	___xxtofl
  6259  003028  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2226
  6260  00302C  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2226+1
  6261  003030  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2226+2
  6262  003034  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2226+3
  6263                           
  6264                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6265  003038  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  6266  00303C  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  6267  003040  0E00               	movlw	0
  6268  003042  BE07               	btfsc	___xxtofl@val+1,7,c
  6269  003044  0EFF               	movlw	-1
  6270  003046  6E08               	movwf	___xxtofl@val+2,c
  6271  003048  6E09               	movwf	___xxtofl@val+3,c
  6272  00304A  0E01               	movlw	1
  6273  00304C  ECBA  F014         	call	___xxtofl
  6274  003050  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2227
  6275  003054  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2227+1
  6276  003058  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2227+2
  6277  00305C  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2227+3
  6278                           
  6279                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6280  003060  C080  F058         	movff	_setMotorSpeeds$2226,set_pwm_duty_cycle@dutyA
  6281  003064  C081  F059         	movff	_setMotorSpeeds$2226+1,set_pwm_duty_cycle@dutyA+1
  6282  003068  C082  F05A         	movff	_setMotorSpeeds$2226+2,set_pwm_duty_cycle@dutyA+2
  6283  00306C  C083  F05B         	movff	_setMotorSpeeds$2226+3,set_pwm_duty_cycle@dutyA+3
  6284  003070  C084  F05C         	movff	_setMotorSpeeds$2227,set_pwm_duty_cycle@dutyB
  6285  003074  C085  F05D         	movff	_setMotorSpeeds$2227+1,set_pwm_duty_cycle@dutyB+1
  6286  003078  C086  F05E         	movff	_setMotorSpeeds$2227+2,set_pwm_duty_cycle@dutyB+2
  6287  00307C  C087  F05F         	movff	_setMotorSpeeds$2227+3,set_pwm_duty_cycle@dutyB+3
  6288  003080  EC73  F012         	call	_set_pwm_duty_cycle	;wreg free
  6289  003084  0012               	return		;funcret
  6290  003086                     __end_of_setMotorSpeeds:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function _set_pwm_duty_cycle *****************
  6294 ;; Defined at:
  6295 ;;		line 308 in file "main.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  dutyA           4   87[COMRAM] float 
  6298 ;;  dutyB           4   91[COMRAM] float 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  duty_valB       2  101[COMRAM] unsigned short 
  6301 ;;  duty_valA       2   99[COMRAM] unsigned short 
  6302 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:       20 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    3
  6319 ;; This function calls:
  6320 ;;		___fldiv
  6321 ;;		___flge
  6322 ;;		___flmul
  6323 ;;		___fltol
  6324 ;;		___xxtofl
  6325 ;; This function is called by:
  6326 ;;		_setMotorSpeeds
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text23
  6331  0024E6                     __ptext23:
  6332                           	opt callstack 0
  6333  0024E6                     _set_pwm_duty_cycle:
  6334                           	opt callstack 24
  6335                           
  6336                           ;main.c: 309:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  6337                           
  6338                           ;incstack = 0
  6339  0024E6  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  6340  0024E8  0012               	return	
  6341  0024EA  0E00               	movlw	0
  6342  0024EC  6E06               	movwf	___flge@ff1,c
  6343  0024EE  0E00               	movlw	0
  6344  0024F0  6E07               	movwf	___flge@ff1+1,c
  6345  0024F2  0EC8               	movlw	200
  6346  0024F4  6E08               	movwf	___flge@ff1+2,c
  6347  0024F6  0E42               	movlw	66
  6348  0024F8  6E09               	movwf	___flge@ff1+3,c
  6349  0024FA  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  6350  0024FE  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  6351  002502  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  6352  002506  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  6353  00250A  EC8C  F016         	call	___flge	;wreg free
  6354  00250E  A0D8               	btfss	status,0,c
  6355  002510  0012               	return	
  6356  002512  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  6357  002514  0012               	return	
  6358  002516  0E00               	movlw	0
  6359  002518  6E06               	movwf	___flge@ff1,c
  6360  00251A  0E00               	movlw	0
  6361  00251C  6E07               	movwf	___flge@ff1+1,c
  6362  00251E  0EC8               	movlw	200
  6363  002520  6E08               	movwf	___flge@ff1+2,c
  6364  002522  0E42               	movlw	66
  6365  002524  6E09               	movwf	___flge@ff1+3,c
  6366  002526  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  6367  00252A  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  6368  00252E  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  6369  002532  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  6370  002536  EC8C  F016         	call	___flge	;wreg free
  6371  00253A  A0D8               	btfss	status,0,c
  6372  00253C  0012               	return	
  6373                           
  6374                           ;main.c: 314:         unsigned short max_duty_val = PR2 + 1;
  6375  00253E  0E01               	movlw	1
  6376  002540  24CB               	addwf	4043,w,c	;volatile
  6377  002542  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  6378  002544  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  6379  002546  0E00               	movlw	0
  6380  002548  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  6381                           
  6382                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6383  00254A  0E00               	movlw	0
  6384  00254C  6E31               	movwf	___fldiv@a,c
  6385  00254E  0E00               	movlw	0
  6386  002550  6E32               	movwf	___fldiv@a+1,c
  6387  002552  0EC8               	movlw	200
  6388  002554  6E33               	movwf	___fldiv@a+2,c
  6389  002556  0E42               	movlw	66
  6390  002558  6E34               	movwf	___fldiv@a+3,c
  6391  00255A  0E00               	movlw	0
  6392  00255C  6E18               	movwf	___flmul@a,c
  6393  00255E  0E00               	movlw	0
  6394  002560  6E19               	movwf	___flmul@a+1,c
  6395  002562  0E80               	movlw	128
  6396  002564  6E1A               	movwf	___flmul@a+2,c
  6397  002566  0E40               	movlw	64
  6398  002568  6E1B               	movwf	___flmul@a+3,c
  6399  00256A  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  6400  00256E  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  6401  002572  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  6402  002576  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  6403  00257A  EC00  F009         	call	___flmul	;wreg free
  6404  00257E  C014  F02D         	movff	?___flmul,___fldiv@b
  6405  002582  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6406  002586  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6407  00258A  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6408  00258E  ECB8  F00D         	call	___fldiv	;wreg free
  6409  002592  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2225
  6410  002596  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2225+1
  6411  00259A  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2225+2
  6412  00259E  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2225+3
  6413                           
  6414                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6415  0025A2  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6416  0025A6  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6417  0025AA  6A08               	clrf	___xxtofl@val+2,c
  6418  0025AC  6A09               	clrf	___xxtofl@val+3,c
  6419  0025AE  0E00               	movlw	0
  6420  0025B0  ECBA  F014         	call	___xxtofl
  6421  0025B4  C006  F018         	movff	?___xxtofl,___flmul@a
  6422  0025B8  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6423  0025BC  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6424  0025C0  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6425  0025C4  C068  F014         	movff	_set_pwm_duty_cycle$2225,___flmul@b
  6426  0025C8  C069  F015         	movff	_set_pwm_duty_cycle$2225+1,___flmul@b+1
  6427  0025CC  C06A  F016         	movff	_set_pwm_duty_cycle$2225+2,___flmul@b+2
  6428  0025D0  C06B  F017         	movff	_set_pwm_duty_cycle$2225+3,___flmul@b+3
  6429  0025D4  EC00  F009         	call	___flmul	;wreg free
  6430  0025D8  C014  F04E         	movff	?___flmul,___fltol@f1
  6431  0025DC  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6432  0025E0  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6433  0025E4  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6434  0025E8  ECF4  F016         	call	___fltol	;wreg free
  6435  0025EC  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  6436  0025F0  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  6437                           
  6438                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6439  0025F4  0E00               	movlw	0
  6440  0025F6  6E31               	movwf	___fldiv@a,c
  6441  0025F8  0E00               	movlw	0
  6442  0025FA  6E32               	movwf	___fldiv@a+1,c
  6443  0025FC  0EC8               	movlw	200
  6444  0025FE  6E33               	movwf	___fldiv@a+2,c
  6445  002600  0E42               	movlw	66
  6446  002602  6E34               	movwf	___fldiv@a+3,c
  6447  002604  0E00               	movlw	0
  6448  002606  6E18               	movwf	___flmul@a,c
  6449  002608  0E00               	movlw	0
  6450  00260A  6E19               	movwf	___flmul@a+1,c
  6451  00260C  0E80               	movlw	128
  6452  00260E  6E1A               	movwf	___flmul@a+2,c
  6453  002610  0E40               	movlw	64
  6454  002612  6E1B               	movwf	___flmul@a+3,c
  6455  002614  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  6456  002618  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  6457  00261C  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  6458  002620  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  6459  002624  EC00  F009         	call	___flmul	;wreg free
  6460  002628  C014  F02D         	movff	?___flmul,___fldiv@b
  6461  00262C  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6462  002630  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6463  002634  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6464  002638  ECB8  F00D         	call	___fldiv	;wreg free
  6465  00263C  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2225
  6466  002640  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2225+1
  6467  002644  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2225+2
  6468  002648  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2225+3
  6469                           
  6470                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6471  00264C  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6472  002650  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6473  002654  6A08               	clrf	___xxtofl@val+2,c
  6474  002656  6A09               	clrf	___xxtofl@val+3,c
  6475  002658  0E00               	movlw	0
  6476  00265A  ECBA  F014         	call	___xxtofl
  6477  00265E  C006  F018         	movff	?___xxtofl,___flmul@a
  6478  002662  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6479  002666  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6480  00266A  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6481  00266E  C068  F014         	movff	_set_pwm_duty_cycle$2225,___flmul@b
  6482  002672  C069  F015         	movff	_set_pwm_duty_cycle$2225+1,___flmul@b+1
  6483  002676  C06A  F016         	movff	_set_pwm_duty_cycle$2225+2,___flmul@b+2
  6484  00267A  C06B  F017         	movff	_set_pwm_duty_cycle$2225+3,___flmul@b+3
  6485  00267E  EC00  F009         	call	___flmul	;wreg free
  6486  002682  C014  F04E         	movff	?___flmul,___fltol@f1
  6487  002686  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6488  00268A  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6489  00268E  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6490  002692  ECF4  F016         	call	___fltol	;wreg free
  6491  002696  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  6492  00269A  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  6493                           
  6494                           ;main.c: 325:         CCP1X = duty_valA & 2;
  6495  00269E  9ABD               	bcf	4029,5,c	;volatile
  6496                           
  6497                           ;main.c: 326:         CCP1Y = duty_valA & 1;
  6498  0026A0  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  6499  0026A2  D002               	goto	u8550
  6500  0026A4  88BD               	bsf	4029,4,c	;volatile
  6501  0026A6  D001               	goto	u8565
  6502  0026A8                     u8550:
  6503  0026A8  98BD               	bcf	4029,4,c	;volatile
  6504  0026AA                     u8565:
  6505                           
  6506                           ;main.c: 327:         CCPR1L = duty_valA >> 2;
  6507  0026AA  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  6508  0026AE  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  6509  0026B2  90D8               	bcf	status,0,c
  6510  0026B4  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6511  0026B6  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6512  0026B8  90D8               	bcf	status,0,c
  6513  0026BA  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6514  0026BC  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6515  0026BE  5060               	movf	??_set_pwm_duty_cycle,w,c
  6516  0026C0  6EBE               	movwf	4030,c	;volatile
  6517                           
  6518                           ;main.c: 331:         CCP2X = duty_valB & 2;
  6519  0026C2  9ABA               	bcf	4026,5,c	;volatile
  6520                           
  6521                           ;main.c: 332:         CCP2Y = duty_valB & 1;
  6522  0026C4  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  6523  0026C6  D002               	goto	u8570
  6524  0026C8  88BA               	bsf	4026,4,c	;volatile
  6525  0026CA  D001               	goto	u8585
  6526  0026CC                     u8570:
  6527  0026CC  98BA               	bcf	4026,4,c	;volatile
  6528  0026CE                     u8585:
  6529                           
  6530                           ;main.c: 333:         CCPR2L = duty_valB >> 2;
  6531  0026CE  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  6532  0026D2  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  6533  0026D6  90D8               	bcf	status,0,c
  6534  0026D8  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6535  0026DA  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6536  0026DC  90D8               	bcf	status,0,c
  6537  0026DE  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6538  0026E0  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6539  0026E2  5060               	movf	??_set_pwm_duty_cycle,w,c
  6540  0026E4  6EBB               	movwf	4027,c	;volatile
  6541  0026E6  0012               	return		;funcret
  6542  0026E8                     __end_of_set_pwm_duty_cycle:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function ___xxtofl *****************
  6546 ;; Defined at:
  6547 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  sign            1    wreg     unsigned char 
  6550 ;;  val             4    5[COMRAM] long 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  sign            1   13[COMRAM] unsigned char 
  6553 ;;  arg             4   15[COMRAM] unsigned long 
  6554 ;;  exp             1   14[COMRAM] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  4    5[COMRAM] unsigned char 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;Total ram usage:       14 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    2
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_set_pwm_duty_cycle
  6575 ;;		_setMotorSpeeds
  6576 ;;		_errorCorrectedMove
  6577 ;;		_opErrorCorrectionDegrees
  6578 ;;		_PIDCorrectedMove
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text24
  6583  002974                     __ptext24:
  6584                           	opt callstack 0
  6585  002974                     ___xxtofl:
  6586                           	opt callstack 24
  6587                           
  6588                           ;incstack = 0
  6589                           ;___xxtofl@sign stored from wreg
  6590  002974  6E0E               	movwf	___xxtofl@sign,c
  6591  002976  500E               	movf	___xxtofl@sign,w,c
  6592  002978  A4D8               	btfss	status,2,c
  6593  00297A  AE09               	btfss	___xxtofl@val+3,7,c
  6594  00297C  D01A               	goto	l1358
  6595  00297E  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6596  002982  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6597  002986  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6598  00298A  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6599  00298E  1E0A               	comf	??___xxtofl,f,c
  6600  002990  1E0B               	comf	??___xxtofl+1,f,c
  6601  002992  1E0C               	comf	??___xxtofl+2,f,c
  6602  002994  1E0D               	comf	??___xxtofl+3,f,c
  6603  002996  2A0A               	incf	??___xxtofl,f,c
  6604  002998  0E00               	movlw	0
  6605  00299A  220B               	addwfc	??___xxtofl+1,f,c
  6606  00299C  220C               	addwfc	??___xxtofl+2,f,c
  6607  00299E  220D               	addwfc	??___xxtofl+3,f,c
  6608  0029A0  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6609  0029A4  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6610  0029A8  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6611  0029AC  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6612  0029B0  D008               	goto	l7476
  6613  0029B2                     l1358:
  6614  0029B2  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6615  0029B6  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6616  0029BA  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6617  0029BE  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6618  0029C2                     l7476:
  6619  0029C2  5006               	movf	___xxtofl@val,w,c
  6620  0029C4  1007               	iorwf	___xxtofl@val+1,w,c
  6621  0029C6  1008               	iorwf	___xxtofl@val+2,w,c
  6622  0029C8  1009               	iorwf	___xxtofl@val+3,w,c
  6623  0029CA  A4D8               	btfss	status,2,c
  6624  0029CC  D009               	goto	l7482
  6625  0029CE  0E00               	movlw	0
  6626  0029D0  6E06               	movwf	?___xxtofl,c
  6627  0029D2  0E00               	movlw	0
  6628  0029D4  6E07               	movwf	?___xxtofl+1,c
  6629  0029D6  0E00               	movlw	0
  6630  0029D8  6E08               	movwf	?___xxtofl+2,c
  6631  0029DA  0E00               	movlw	0
  6632  0029DC  6E09               	movwf	?___xxtofl+3,c
  6633  0029DE  0012               	return	
  6634  0029E0                     l7482:
  6635  0029E0  0E96               	movlw	150
  6636  0029E2  6E0F               	movwf	___xxtofl@exp,c
  6637  0029E4  D006               	goto	l7486
  6638  0029E6                     l7484:
  6639  0029E6  2A0F               	incf	___xxtofl@exp,f,c
  6640  0029E8  90D8               	bcf	status,0,c
  6641  0029EA  3213               	rrcf	___xxtofl@arg+3,f,c
  6642  0029EC  3212               	rrcf	___xxtofl@arg+2,f,c
  6643  0029EE  3211               	rrcf	___xxtofl@arg+1,f,c
  6644  0029F0  3210               	rrcf	___xxtofl@arg,f,c
  6645  0029F2                     l7486:
  6646  0029F2  0E00               	movlw	0
  6647  0029F4  1410               	andwf	___xxtofl@arg,w,c
  6648  0029F6  6E0A               	movwf	??___xxtofl& (0+255),c
  6649  0029F8  0E00               	movlw	0
  6650  0029FA  1411               	andwf	___xxtofl@arg+1,w,c
  6651  0029FC  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6652  0029FE  0E00               	movlw	0
  6653  002A00  1412               	andwf	___xxtofl@arg+2,w,c
  6654  002A02  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6655  002A04  0EFE               	movlw	254
  6656  002A06  1413               	andwf	___xxtofl@arg+3,w,c
  6657  002A08  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6658  002A0A  500A               	movf	??___xxtofl,w,c
  6659  002A0C  100B               	iorwf	??___xxtofl+1,w,c
  6660  002A0E  100C               	iorwf	??___xxtofl+2,w,c
  6661  002A10  100D               	iorwf	??___xxtofl+3,w,c
  6662  002A12  B4D8               	btfsc	status,2,c
  6663  002A14  D00D               	goto	l1365
  6664  002A16  D7E7               	goto	l7484
  6665  002A18                     l7488:
  6666  002A18  2A0F               	incf	___xxtofl@exp,f,c
  6667  002A1A  0E01               	movlw	1
  6668  002A1C  2610               	addwf	___xxtofl@arg,f,c
  6669  002A1E  0E00               	movlw	0
  6670  002A20  2211               	addwfc	___xxtofl@arg+1,f,c
  6671  002A22  2212               	addwfc	___xxtofl@arg+2,f,c
  6672  002A24  2213               	addwfc	___xxtofl@arg+3,f,c
  6673  002A26  90D8               	bcf	status,0,c
  6674  002A28  3213               	rrcf	___xxtofl@arg+3,f,c
  6675  002A2A  3212               	rrcf	___xxtofl@arg+2,f,c
  6676  002A2C  3211               	rrcf	___xxtofl@arg+1,f,c
  6677  002A2E  3210               	rrcf	___xxtofl@arg,f,c
  6678  002A30                     l1365:
  6679  002A30  0E00               	movlw	0
  6680  002A32  1410               	andwf	___xxtofl@arg,w,c
  6681  002A34  6E0A               	movwf	??___xxtofl& (0+255),c
  6682  002A36  0E00               	movlw	0
  6683  002A38  1411               	andwf	___xxtofl@arg+1,w,c
  6684  002A3A  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6685  002A3C  0E00               	movlw	0
  6686  002A3E  1412               	andwf	___xxtofl@arg+2,w,c
  6687  002A40  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6688  002A42  0EFF               	movlw	255
  6689  002A44  1413               	andwf	___xxtofl@arg+3,w,c
  6690  002A46  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6691  002A48  500A               	movf	??___xxtofl,w,c
  6692  002A4A  100B               	iorwf	??___xxtofl+1,w,c
  6693  002A4C  100C               	iorwf	??___xxtofl+2,w,c
  6694  002A4E  100D               	iorwf	??___xxtofl+3,w,c
  6695  002A50  B4D8               	btfsc	status,2,c
  6696  002A52  D007               	goto	l7496
  6697  002A54  D7E1               	goto	l7488
  6698  002A56                     l7494:
  6699  002A56  060F               	decf	___xxtofl@exp,f,c
  6700  002A58  90D8               	bcf	status,0,c
  6701  002A5A  3610               	rlcf	___xxtofl@arg,f,c
  6702  002A5C  3611               	rlcf	___xxtofl@arg+1,f,c
  6703  002A5E  3612               	rlcf	___xxtofl@arg+2,f,c
  6704  002A60  3613               	rlcf	___xxtofl@arg+3,f,c
  6705  002A62                     l7496:
  6706  002A62  BE12               	btfsc	___xxtofl@arg+2,7,c
  6707  002A64  D003               	goto	u8470
  6708  002A66  0E02               	movlw	2
  6709  002A68  600F               	cpfslt	___xxtofl@exp,c
  6710  002A6A  D7F5               	goto	l7494
  6711  002A6C                     u8470:
  6712  002A6C  A00F               	btfss	___xxtofl@exp,0,c
  6713  002A6E  9E12               	bcf	___xxtofl@arg+2,7,c
  6714  002A70  90D8               	bcf	status,0,c
  6715  002A72  320F               	rrcf	___xxtofl@exp,f,c
  6716  002A74  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6717  002A78  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6718  002A7A  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6719  002A7C  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6720  002A7E  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6721  002A82  6A0C               	clrf	??___xxtofl+2,c
  6722  002A84  6A0B               	clrf	??___xxtofl+1,c
  6723  002A86  6A0A               	clrf	??___xxtofl,c
  6724  002A88  500A               	movf	??___xxtofl,w,c
  6725  002A8A  1210               	iorwf	___xxtofl@arg,f,c
  6726  002A8C  500B               	movf	??___xxtofl+1,w,c
  6727  002A8E  1211               	iorwf	___xxtofl@arg+1,f,c
  6728  002A90  500C               	movf	??___xxtofl+2,w,c
  6729  002A92  1212               	iorwf	___xxtofl@arg+2,f,c
  6730  002A94  500D               	movf	??___xxtofl+3,w,c
  6731  002A96  1213               	iorwf	___xxtofl@arg+3,f,c
  6732  002A98  500E               	movf	___xxtofl@sign,w,c
  6733  002A9A  A4D8               	btfss	status,2,c
  6734  002A9C  AE09               	btfss	___xxtofl@val+3,7,c
  6735  002A9E  D001               	goto	l7512
  6736  002AA0  8E13               	bsf	___xxtofl@arg+3,7,c
  6737  002AA2                     l7512:
  6738  002AA2  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6739  002AA6  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6740  002AAA  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6741  002AAE  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6742  002AB2  0012               	return		;funcret
  6743  002AB4                     __end_of___xxtofl:
  6744                           	opt callstack 0
  6745                           
  6746 ;; *************** function ___fltol *****************
  6747 ;; Defined at:
  6748 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  f1              4   77[COMRAM] unsigned char 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  exp1            1   86[COMRAM] unsigned char 
  6753 ;;  sign1           1   85[COMRAM] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  4   77[COMRAM] long 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;Total ram usage:       10 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    2
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_set_pwm_duty_cycle
  6774 ;;		_errorCorrectedMove
  6775 ;;		_PIDCorrectedMove
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text25
  6780  002DE8                     __ptext25:
  6781                           	opt callstack 0
  6782  002DE8                     ___fltol:
  6783                           	opt callstack 24
  6784                           
  6785                           ;incstack = 0
  6786  002DE8  3450               	rlcf	___fltol@f1+2,w,c
  6787  002DEA  3451               	rlcf	___fltol@f1+3,w,c
  6788  002DEC  6E57               	movwf	___fltol@exp1,c
  6789  002DEE  5057               	movf	___fltol@exp1,w,c
  6790  002DF0  A4D8               	btfss	status,2,c
  6791  002DF2  D009               	goto	l7432
  6792  002DF4                     u8340:
  6793  002DF4  0E00               	movlw	0
  6794  002DF6  6E4E               	movwf	?___fltol,c
  6795  002DF8  0E00               	movlw	0
  6796  002DFA  6E4F               	movwf	?___fltol+1,c
  6797  002DFC  0E00               	movlw	0
  6798  002DFE  6E50               	movwf	?___fltol+2,c
  6799  002E00  0E00               	movlw	0
  6800  002E02  6E51               	movwf	?___fltol+3,c
  6801  002E04  0012               	return	
  6802  002E06                     l7432:
  6803  002E06  C04E  F052         	movff	___fltol@f1,??___fltol
  6804  002E0A  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  6805  002E0E  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  6806  002E12  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  6807  002E16  0E20               	movlw	32
  6808  002E18  D005               	goto	u8350
  6809  002E1A                     u8355:
  6810  002E1A  90D8               	bcf	status,0,c
  6811  002E1C  3255               	rrcf	??___fltol+3,f,c
  6812  002E1E  3254               	rrcf	??___fltol+2,f,c
  6813  002E20  3253               	rrcf	??___fltol+1,f,c
  6814  002E22  3252               	rrcf	??___fltol,f,c
  6815  002E24                     u8350:
  6816  002E24  2EE8               	decfsz	wreg,f,c
  6817  002E26  D7F9               	goto	u8355
  6818  002E28  5052               	movf	??___fltol,w,c
  6819  002E2A  6E56               	movwf	___fltol@sign1,c
  6820  002E2C  8E50               	bsf	___fltol@f1+2,7,c
  6821  002E2E  0EFF               	movlw	255
  6822  002E30  164E               	andwf	___fltol@f1,f,c
  6823  002E32  0EFF               	movlw	255
  6824  002E34  164F               	andwf	___fltol@f1+1,f,c
  6825  002E36  0EFF               	movlw	255
  6826  002E38  1650               	andwf	___fltol@f1+2,f,c
  6827  002E3A  0E00               	movlw	0
  6828  002E3C  1651               	andwf	___fltol@f1+3,f,c
  6829  002E3E  0E96               	movlw	150
  6830  002E40  5E57               	subwf	___fltol@exp1,f,c
  6831  002E42  AE57               	btfss	___fltol@exp1,7,c
  6832  002E44  D00D               	goto	l7452
  6833  002E46  5057               	movf	___fltol@exp1,w,c
  6834  002E48  0A80               	xorlw	128
  6835  002E4A  0F97               	addlw	151
  6836  002E4C  A0D8               	btfss	status,0,c
  6837  002E4E  D7D2               	goto	u8340
  6838  002E50                     l7448:
  6839  002E50  90D8               	bcf	status,0,c
  6840  002E52  3251               	rrcf	___fltol@f1+3,f,c
  6841  002E54  3250               	rrcf	___fltol@f1+2,f,c
  6842  002E56  324F               	rrcf	___fltol@f1+1,f,c
  6843  002E58  324E               	rrcf	___fltol@f1,f,c
  6844  002E5A  3E57               	incfsz	___fltol@exp1,f,c
  6845  002E5C  D7F9               	goto	l7448
  6846  002E5E  D00D               	goto	u8390
  6847  002E60                     l7452:
  6848  002E60  0E1F               	movlw	31
  6849  002E62  6457               	cpfsgt	___fltol@exp1,c
  6850  002E64  D007               	goto	l7460
  6851  002E66  D7C6               	goto	u8340
  6852  002E68                     l7458:
  6853  002E68  90D8               	bcf	status,0,c
  6854  002E6A  364E               	rlcf	___fltol@f1,f,c
  6855  002E6C  364F               	rlcf	___fltol@f1+1,f,c
  6856  002E6E  3650               	rlcf	___fltol@f1+2,f,c
  6857  002E70  3651               	rlcf	___fltol@f1+3,f,c
  6858  002E72  0657               	decf	___fltol@exp1,f,c
  6859  002E74                     l7460:
  6860  002E74  5057               	movf	___fltol@exp1,w,c
  6861  002E76  A4D8               	btfss	status,2,c
  6862  002E78  D7F7               	goto	l7458
  6863  002E7A                     u8390:
  6864  002E7A  5056               	movf	___fltol@sign1,w,c
  6865  002E7C  B4D8               	btfsc	status,2,c
  6866  002E7E  D008               	goto	l7466
  6867  002E80  1E51               	comf	___fltol@f1+3,f,c
  6868  002E82  1E50               	comf	___fltol@f1+2,f,c
  6869  002E84  1E4F               	comf	___fltol@f1+1,f,c
  6870  002E86  6C4E               	negf	___fltol@f1,c
  6871  002E88  0E00               	movlw	0
  6872  002E8A  224F               	addwfc	___fltol@f1+1,f,c
  6873  002E8C  2250               	addwfc	___fltol@f1+2,f,c
  6874  002E8E  2251               	addwfc	___fltol@f1+3,f,c
  6875  002E90                     l7466:
  6876  002E90  C04E  F04E         	movff	___fltol@f1,?___fltol
  6877  002E94  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  6878  002E98  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  6879  002E9C  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  6880  002EA0  0012               	return		;funcret
  6881  002EA2                     __end_of___fltol:
  6882                           	opt callstack 0
  6883                           
  6884 ;; *************** function ___flmul *****************
  6885 ;; Defined at:
  6886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  b               4   19[COMRAM] long 
  6889 ;;  a               4   23[COMRAM] long 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  prod            4   38[COMRAM] struct .
  6892 ;;  grs             4   33[COMRAM] unsigned long 
  6893 ;;  temp            2   42[COMRAM] struct .
  6894 ;;  bexp            1   37[COMRAM] unsigned char 
  6895 ;;  aexp            1   32[COMRAM] unsigned char 
  6896 ;;  sign            1   31[COMRAM] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  4   19[COMRAM] unsigned char 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0, prodl, prodh
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;Total ram usage:       25 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    2
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_set_pwm_duty_cycle
  6917 ;;		_errorCorrectedMove
  6918 ;;		_PIDCorrectedMove
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text26
  6923  001200                     __ptext26:
  6924                           	opt callstack 0
  6925  001200                     ___flmul:
  6926                           	opt callstack 24
  6927                           
  6928                           ;incstack = 0
  6929  001200  5017               	movf	___flmul@b+3,w,c
  6930  001202  0B80               	andlw	128
  6931  001204  6E20               	movwf	___flmul@sign,c
  6932  001206  5017               	movf	___flmul@b+3,w,c
  6933  001208  2417               	addwf	___flmul@b+3,w,c
  6934  00120A  6E26               	movwf	___flmul@bexp,c
  6935  00120C  BE16               	btfsc	___flmul@b+2,7,c
  6936  00120E  8026               	bsf	___flmul@bexp,0,c
  6937  001210  5026               	movf	___flmul@bexp,w,c
  6938  001212  B4D8               	btfsc	status,2,c
  6939  001214  D00D               	goto	l7288
  6940  001216  2826               	incf	___flmul@bexp,w,c
  6941  001218  A4D8               	btfss	status,2,c
  6942  00121A  D008               	goto	l7286
  6943  00121C  0E00               	movlw	0
  6944  00121E  6E14               	movwf	___flmul@b,c
  6945  001220  0E00               	movlw	0
  6946  001222  6E15               	movwf	___flmul@b+1,c
  6947  001224  0E00               	movlw	0
  6948  001226  6E16               	movwf	___flmul@b+2,c
  6949  001228  0E00               	movlw	0
  6950  00122A  6E17               	movwf	___flmul@b+3,c
  6951  00122C                     l7286:
  6952  00122C  8E16               	bsf	___flmul@b+2,7,c
  6953  00122E  D008               	goto	l7290
  6954  001230                     l7288:
  6955  001230  0E00               	movlw	0
  6956  001232  6E14               	movwf	___flmul@b,c
  6957  001234  0E00               	movlw	0
  6958  001236  6E15               	movwf	___flmul@b+1,c
  6959  001238  0E00               	movlw	0
  6960  00123A  6E16               	movwf	___flmul@b+2,c
  6961  00123C  0E00               	movlw	0
  6962  00123E  6E17               	movwf	___flmul@b+3,c
  6963  001240                     l7290:
  6964  001240  501B               	movf	___flmul@a+3,w,c
  6965  001242  0B80               	andlw	128
  6966  001244  1A20               	xorwf	___flmul@sign,f,c
  6967  001246  501B               	movf	___flmul@a+3,w,c
  6968  001248  241B               	addwf	___flmul@a+3,w,c
  6969  00124A  6E21               	movwf	___flmul@aexp,c
  6970  00124C  BE1A               	btfsc	___flmul@a+2,7,c
  6971  00124E  8021               	bsf	___flmul@aexp,0,c
  6972  001250  5021               	movf	___flmul@aexp,w,c
  6973  001252  B4D8               	btfsc	status,2,c
  6974  001254  D00D               	goto	l7306
  6975  001256  2821               	incf	___flmul@aexp,w,c
  6976  001258  A4D8               	btfss	status,2,c
  6977  00125A  D008               	goto	l7304
  6978  00125C  0E00               	movlw	0
  6979  00125E  6E18               	movwf	___flmul@a,c
  6980  001260  0E00               	movlw	0
  6981  001262  6E19               	movwf	___flmul@a+1,c
  6982  001264  0E00               	movlw	0
  6983  001266  6E1A               	movwf	___flmul@a+2,c
  6984  001268  0E00               	movlw	0
  6985  00126A  6E1B               	movwf	___flmul@a+3,c
  6986  00126C                     l7304:
  6987  00126C  8E1A               	bsf	___flmul@a+2,7,c
  6988  00126E  D008               	goto	l1317
  6989  001270                     l7306:
  6990  001270  0E00               	movlw	0
  6991  001272  6E18               	movwf	___flmul@a,c
  6992  001274  0E00               	movlw	0
  6993  001276  6E19               	movwf	___flmul@a+1,c
  6994  001278  0E00               	movlw	0
  6995  00127A  6E1A               	movwf	___flmul@a+2,c
  6996  00127C  0E00               	movlw	0
  6997  00127E  6E1B               	movwf	___flmul@a+3,c
  6998  001280                     l1317:
  6999  001280  5021               	movf	___flmul@aexp,w,c
  7000  001282  B4D8               	btfsc	status,2,c
  7001  001284  D003               	goto	u8170
  7002  001286  5026               	movf	___flmul@bexp,w,c
  7003  001288  A4D8               	btfss	status,2,c
  7004  00128A  D009               	goto	l7314
  7005  00128C                     u8170:
  7006  00128C  0E00               	movlw	0
  7007  00128E  6E14               	movwf	?___flmul,c
  7008  001290  0E00               	movlw	0
  7009  001292  6E15               	movwf	?___flmul+1,c
  7010  001294  0E00               	movlw	0
  7011  001296  6E16               	movwf	?___flmul+2,c
  7012  001298  0E00               	movlw	0
  7013  00129A  6E17               	movwf	?___flmul+3,c
  7014  00129C  0012               	return	
  7015  00129E                     l7314:
  7016  00129E  501A               	movf	___flmul@a+2,w,c
  7017  0012A0  0214               	mulwf	___flmul@b,c
  7018  0012A2  CFF3 F02B          	movff	prodl,___flmul@temp
  7019  0012A6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7020  0012AA  502B               	movf	___flmul@temp,w,c
  7021  0012AC  6E22               	movwf	___flmul@grs,c
  7022  0012AE  6A23               	clrf	___flmul@grs+1,c
  7023  0012B0  6A24               	clrf	___flmul@grs+2,c
  7024  0012B2  6A25               	clrf	___flmul@grs+3,c
  7025  0012B4  502C               	movf	___flmul@temp+1,w,c
  7026  0012B6  6E27               	movwf	___flmul@prod,c
  7027  0012B8  6A28               	clrf	___flmul@prod+1,c
  7028  0012BA  6A29               	clrf	___flmul@prod+2,c
  7029  0012BC  6A2A               	clrf	___flmul@prod+3,c
  7030  0012BE  5019               	movf	___flmul@a+1,w,c
  7031  0012C0  0215               	mulwf	___flmul@b+1,c
  7032  0012C2  CFF3 F02B          	movff	prodl,___flmul@temp
  7033  0012C6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7034  0012CA  502B               	movf	___flmul@temp,w,c
  7035  0012CC  2622               	addwf	___flmul@grs,f,c
  7036  0012CE  0E00               	movlw	0
  7037  0012D0  2223               	addwfc	___flmul@grs+1,f,c
  7038  0012D2  2224               	addwfc	___flmul@grs+2,f,c
  7039  0012D4  2225               	addwfc	___flmul@grs+3,f,c
  7040  0012D6  502C               	movf	___flmul@temp+1,w,c
  7041  0012D8  2627               	addwf	___flmul@prod,f,c
  7042  0012DA  0E00               	movlw	0
  7043  0012DC  2228               	addwfc	___flmul@prod+1,f,c
  7044  0012DE  2229               	addwfc	___flmul@prod+2,f,c
  7045  0012E0  222A               	addwfc	___flmul@prod+3,f,c
  7046  0012E2  5018               	movf	___flmul@a,w,c
  7047  0012E4  0216               	mulwf	___flmul@b+2,c
  7048  0012E6  CFF3 F02B          	movff	prodl,___flmul@temp
  7049  0012EA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7050  0012EE  502B               	movf	___flmul@temp,w,c
  7051  0012F0  2622               	addwf	___flmul@grs,f,c
  7052  0012F2  0E00               	movlw	0
  7053  0012F4  2223               	addwfc	___flmul@grs+1,f,c
  7054  0012F6  2224               	addwfc	___flmul@grs+2,f,c
  7055  0012F8  2225               	addwfc	___flmul@grs+3,f,c
  7056  0012FA  502C               	movf	___flmul@temp+1,w,c
  7057  0012FC  2627               	addwf	___flmul@prod,f,c
  7058  0012FE  0E00               	movlw	0
  7059  001300  2228               	addwfc	___flmul@prod+1,f,c
  7060  001302  2229               	addwfc	___flmul@prod+2,f,c
  7061  001304  222A               	addwfc	___flmul@prod+3,f,c
  7062  001306  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7063  00130A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7064  00130E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7065  001312  6A22               	clrf	___flmul@grs,c
  7066  001314  5018               	movf	___flmul@a,w,c
  7067  001316  0215               	mulwf	___flmul@b+1,c
  7068  001318  CFF3 F02B          	movff	prodl,___flmul@temp
  7069  00131C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7070  001320  502B               	movf	___flmul@temp,w,c
  7071  001322  2622               	addwf	___flmul@grs,f,c
  7072  001324  502C               	movf	___flmul@temp+1,w,c
  7073  001326  2223               	addwfc	___flmul@grs+1,f,c
  7074  001328  0E00               	movlw	0
  7075  00132A  2224               	addwfc	___flmul@grs+2,f,c
  7076  00132C  0E00               	movlw	0
  7077  00132E  2225               	addwfc	___flmul@grs+3,f,c
  7078  001330  5019               	movf	___flmul@a+1,w,c
  7079  001332  0214               	mulwf	___flmul@b,c
  7080  001334  CFF3 F02B          	movff	prodl,___flmul@temp
  7081  001338  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7082  00133C  502B               	movf	___flmul@temp,w,c
  7083  00133E  2622               	addwf	___flmul@grs,f,c
  7084  001340  502C               	movf	___flmul@temp+1,w,c
  7085  001342  2223               	addwfc	___flmul@grs+1,f,c
  7086  001344  0E00               	movlw	0
  7087  001346  2224               	addwfc	___flmul@grs+2,f,c
  7088  001348  0E00               	movlw	0
  7089  00134A  2225               	addwfc	___flmul@grs+3,f,c
  7090  00134C  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7091  001350  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7092  001354  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7093  001358  6A22               	clrf	___flmul@grs,c
  7094  00135A  5018               	movf	___flmul@a,w,c
  7095  00135C  0214               	mulwf	___flmul@b,c
  7096  00135E  CFF3 F02B          	movff	prodl,___flmul@temp
  7097  001362  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7098  001366  502B               	movf	___flmul@temp,w,c
  7099  001368  2622               	addwf	___flmul@grs,f,c
  7100  00136A  502C               	movf	___flmul@temp+1,w,c
  7101  00136C  2223               	addwfc	___flmul@grs+1,f,c
  7102  00136E  0E00               	movlw	0
  7103  001370  2224               	addwfc	___flmul@grs+2,f,c
  7104  001372  0E00               	movlw	0
  7105  001374  2225               	addwfc	___flmul@grs+3,f,c
  7106  001376  501A               	movf	___flmul@a+2,w,c
  7107  001378  0215               	mulwf	___flmul@b+1,c
  7108  00137A  CFF3 F02B          	movff	prodl,___flmul@temp
  7109  00137E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7110  001382  502B               	movf	___flmul@temp,w,c
  7111  001384  2627               	addwf	___flmul@prod,f,c
  7112  001386  502C               	movf	___flmul@temp+1,w,c
  7113  001388  2228               	addwfc	___flmul@prod+1,f,c
  7114  00138A  0E00               	movlw	0
  7115  00138C  2229               	addwfc	___flmul@prod+2,f,c
  7116  00138E  0E00               	movlw	0
  7117  001390  222A               	addwfc	___flmul@prod+3,f,c
  7118  001392  5019               	movf	___flmul@a+1,w,c
  7119  001394  0216               	mulwf	___flmul@b+2,c
  7120  001396  CFF3 F02B          	movff	prodl,___flmul@temp
  7121  00139A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7122  00139E  502B               	movf	___flmul@temp,w,c
  7123  0013A0  2627               	addwf	___flmul@prod,f,c
  7124  0013A2  502C               	movf	___flmul@temp+1,w,c
  7125  0013A4  2228               	addwfc	___flmul@prod+1,f,c
  7126  0013A6  0E00               	movlw	0
  7127  0013A8  2229               	addwfc	___flmul@prod+2,f,c
  7128  0013AA  0E00               	movlw	0
  7129  0013AC  222A               	addwfc	___flmul@prod+3,f,c
  7130  0013AE  501A               	movf	___flmul@a+2,w,c
  7131  0013B0  0216               	mulwf	___flmul@b+2,c
  7132  0013B2  CFF3 F02B          	movff	prodl,___flmul@temp
  7133  0013B6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  7134  0013BA  502B               	movf	___flmul@temp,w,c
  7135  0013BC  6E1C               	movwf	??___flmul& (0+255),c
  7136  0013BE  502C               	movf	___flmul@temp+1,w,c
  7137  0013C0  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7138  0013C2  6A1E               	clrf	(??___flmul+2)& (0+255),c
  7139  0013C4  6A1F               	clrf	(??___flmul+3)& (0+255),c
  7140  0013C6  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  7141  0013CA  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  7142  0013CE  C01C  F01D         	movff	??___flmul,??___flmul+1
  7143  0013D2  6A1C               	clrf	??___flmul,c
  7144  0013D4  501C               	movf	??___flmul,w,c
  7145  0013D6  2627               	addwf	___flmul@prod,f,c
  7146  0013D8  501D               	movf	??___flmul+1,w,c
  7147  0013DA  2228               	addwfc	___flmul@prod+1,f,c
  7148  0013DC  501E               	movf	??___flmul+2,w,c
  7149  0013DE  2229               	addwfc	___flmul@prod+2,f,c
  7150  0013E0  501F               	movf	??___flmul+3,w,c
  7151  0013E2  222A               	addwfc	___flmul@prod+3,f,c
  7152  0013E4  C022  F01C         	movff	___flmul@grs,??___flmul
  7153  0013E8  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  7154  0013EC  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  7155  0013F0  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  7156  0013F4  0E19               	movlw	25
  7157  0013F6  D005               	goto	u8180
  7158  0013F8                     u8185:
  7159  0013F8  90D8               	bcf	status,0,c
  7160  0013FA  321F               	rrcf	??___flmul+3,f,c
  7161  0013FC  321E               	rrcf	??___flmul+2,f,c
  7162  0013FE  321D               	rrcf	??___flmul+1,f,c
  7163  001400  321C               	rrcf	??___flmul,f,c
  7164  001402                     u8180:
  7165  001402  2EE8               	decfsz	wreg,f,c
  7166  001404  D7F9               	goto	u8185
  7167  001406  501C               	movf	??___flmul,w,c
  7168  001408  2627               	addwf	___flmul@prod,f,c
  7169  00140A  501D               	movf	??___flmul+1,w,c
  7170  00140C  2228               	addwfc	___flmul@prod+1,f,c
  7171  00140E  501E               	movf	??___flmul+2,w,c
  7172  001410  2229               	addwfc	___flmul@prod+2,f,c
  7173  001412  501F               	movf	??___flmul+3,w,c
  7174  001414  222A               	addwfc	___flmul@prod+3,f,c
  7175  001416  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7176  00141A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7177  00141E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7178  001422  6A22               	clrf	___flmul@grs,c
  7179  001424  5021               	movf	___flmul@aexp,w,c
  7180  001426  C026  F01C         	movff	___flmul@bexp,??___flmul
  7181  00142A  6A1D               	clrf	(??___flmul+1)& (0+255),c
  7182  00142C  261C               	addwf	??___flmul,f,c
  7183  00142E  0E00               	movlw	0
  7184  001430  221D               	addwfc	??___flmul+1,f,c
  7185  001432  0E82               	movlw	130
  7186  001434  241C               	addwf	??___flmul,w,c
  7187  001436  6E2B               	movwf	___flmul@temp,c
  7188  001438  0EFF               	movlw	255
  7189  00143A  201D               	addwfc	??___flmul+1,w,c
  7190  00143C  6E2C               	movwf	___flmul@temp+1,c
  7191  00143E  D00F               	goto	l7362
  7192  001440                     l7356:
  7193  001440  90D8               	bcf	status,0,c
  7194  001442  3627               	rlcf	___flmul@prod,f,c
  7195  001444  3628               	rlcf	___flmul@prod+1,f,c
  7196  001446  3629               	rlcf	___flmul@prod+2,f,c
  7197  001448  362A               	rlcf	___flmul@prod+3,f,c
  7198  00144A  BE25               	btfsc	___flmul@grs+3,7,c
  7199  00144C  8027               	bsf	___flmul@prod,0,c
  7200  00144E  90D8               	bcf	status,0,c
  7201  001450  3622               	rlcf	___flmul@grs,f,c
  7202  001452  3623               	rlcf	___flmul@grs+1,f,c
  7203  001454  3624               	rlcf	___flmul@grs+2,f,c
  7204  001456  3625               	rlcf	___flmul@grs+3,f,c
  7205  001458  062B               	decf	___flmul@temp,f,c
  7206  00145A  A0D8               	btfss	status,0,c
  7207  00145C  062C               	decf	___flmul@temp+1,f,c
  7208  00145E                     l7362:
  7209  00145E  AE29               	btfss	___flmul@prod+2,7,c
  7210  001460  D7EF               	goto	l7356
  7211  001462  0E00               	movlw	0
  7212  001464  6E21               	movwf	___flmul@aexp,c
  7213  001466  AE25               	btfss	___flmul@grs+3,7,c
  7214  001468  D017               	goto	l1326
  7215  00146A  0EFF               	movlw	255
  7216  00146C  1422               	andwf	___flmul@grs,w,c
  7217  00146E  6E1C               	movwf	??___flmul& (0+255),c
  7218  001470  0EFF               	movlw	255
  7219  001472  1423               	andwf	___flmul@grs+1,w,c
  7220  001474  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7221  001476  0EFF               	movlw	255
  7222  001478  1424               	andwf	___flmul@grs+2,w,c
  7223  00147A  6E1E               	movwf	(??___flmul+2)& (0+255),c
  7224  00147C  0E7F               	movlw	127
  7225  00147E  1425               	andwf	___flmul@grs+3,w,c
  7226  001480  6E1F               	movwf	(??___flmul+3)& (0+255),c
  7227  001482  501C               	movf	??___flmul,w,c
  7228  001484  101D               	iorwf	??___flmul+1,w,c
  7229  001486  101E               	iorwf	??___flmul+2,w,c
  7230  001488  101F               	iorwf	??___flmul+3,w,c
  7231  00148A  B4D8               	btfsc	status,2,c
  7232  00148C  D003               	goto	l1327
  7233  00148E                     u8220:
  7234  00148E  0E01               	movlw	1
  7235  001490  6E21               	movwf	___flmul@aexp,c
  7236  001492  D002               	goto	l1326
  7237  001494                     l1327:
  7238  001494  B027               	btfsc	___flmul@prod,0,c
  7239  001496  D7FB               	goto	u8220
  7240  001498                     l1326:
  7241  001498  5021               	movf	___flmul@aexp,w,c
  7242  00149A  B4D8               	btfsc	status,2,c
  7243  00149C  D01F               	goto	l7382
  7244  00149E  0E01               	movlw	1
  7245  0014A0  2627               	addwf	___flmul@prod,f,c
  7246  0014A2  0E00               	movlw	0
  7247  0014A4  2228               	addwfc	___flmul@prod+1,f,c
  7248  0014A6  2229               	addwfc	___flmul@prod+2,f,c
  7249  0014A8  222A               	addwfc	___flmul@prod+3,f,c
  7250  0014AA  A02A               	btfss	___flmul@prod+3,0,c
  7251  0014AC  D017               	goto	l7382
  7252  0014AE  C027  F01C         	movff	___flmul@prod,??___flmul
  7253  0014B2  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  7254  0014B6  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  7255  0014BA  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  7256  0014BE  341F               	rlcf	??___flmul+3,w,c
  7257  0014C0  321F               	rrcf	??___flmul+3,f,c
  7258  0014C2  321E               	rrcf	??___flmul+2,f,c
  7259  0014C4  321D               	rrcf	??___flmul+1,f,c
  7260  0014C6  321C               	rrcf	??___flmul,f,c
  7261  0014C8  C01C  F027         	movff	??___flmul,___flmul@prod
  7262  0014CC  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  7263  0014D0  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  7264  0014D4  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  7265  0014D8  4A2B               	infsnz	___flmul@temp,f,c
  7266  0014DA  2A2C               	incf	___flmul@temp+1,f,c
  7267  0014DC                     l7382:
  7268  0014DC  BE2C               	btfsc	___flmul@temp+1,7,c
  7269  0014DE  D00D               	goto	l7386
  7270  0014E0  502C               	movf	___flmul@temp+1,w,c
  7271  0014E2  E103               	bnz	u8260
  7272  0014E4  282B               	incf	___flmul@temp,w,c
  7273  0014E6  A0D8               	btfss	status,0,c
  7274  0014E8  D008               	goto	l7386
  7275  0014EA                     u8260:
  7276  0014EA  0E00               	movlw	0
  7277  0014EC  6E27               	movwf	___flmul@prod,c
  7278  0014EE  0E00               	movlw	0
  7279  0014F0  6E28               	movwf	___flmul@prod+1,c
  7280  0014F2  0E80               	movlw	128
  7281  0014F4  6E29               	movwf	___flmul@prod+2,c
  7282  0014F6  0E7F               	movlw	127
  7283  0014F8  D020               	goto	L10
  7284  0014FA                     l7386:
  7285  0014FA  BE2C               	btfsc	___flmul@temp+1,7,c
  7286  0014FC  D005               	goto	u8270
  7287  0014FE  502C               	movf	___flmul@temp+1,w,c
  7288  001500  E10E               	bnz	l1334
  7289  001502  042B               	decf	___flmul@temp,w,c
  7290  001504  B0D8               	btfsc	status,0,c
  7291  001506  D00B               	goto	l1334
  7292  001508                     u8270:
  7293  001508  0E00               	movlw	0
  7294  00150A  6E27               	movwf	___flmul@prod,c
  7295  00150C  0E00               	movlw	0
  7296  00150E  6E28               	movwf	___flmul@prod+1,c
  7297  001510  0E00               	movlw	0
  7298  001512  6E29               	movwf	___flmul@prod+2,c
  7299  001514  0E00               	movlw	0
  7300  001516  6E2A               	movwf	___flmul@prod+3,c
  7301  001518  0E00               	movlw	0
  7302  00151A  6E20               	movwf	___flmul@sign,c
  7303  00151C  D00F               	goto	l7398
  7304  00151E                     l1334:
  7305  00151E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  7306  001522  0EFF               	movlw	255
  7307  001524  1627               	andwf	___flmul@prod,f,c
  7308  001526  0EFF               	movlw	255
  7309  001528  1628               	andwf	___flmul@prod+1,f,c
  7310  00152A  0E7F               	movlw	127
  7311  00152C  1629               	andwf	___flmul@prod+2,f,c
  7312  00152E  0E00               	movlw	0
  7313  001530  162A               	andwf	___flmul@prod+3,f,c
  7314  001532  B026               	btfsc	___flmul@bexp,0,c
  7315  001534  8E29               	bsf	___flmul@prod+2,7,c
  7316  001536  90D8               	bcf	status,0,c
  7317  001538  3026               	rrcf	___flmul@bexp,w,c
  7318  00153A                     L10:
  7319  00153A  6E2A               	movwf	___flmul@prod+3,c
  7320  00153C                     l7398:
  7321  00153C  5020               	movf	___flmul@sign,w,c
  7322  00153E  122A               	iorwf	___flmul@prod+3,f,c
  7323  001540  C027  F014         	movff	___flmul@prod,?___flmul
  7324  001544  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7325  001548  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7326  00154C  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7327  001550  0012               	return		;funcret
  7328  001552                     __end_of___flmul:
  7329                           	opt callstack 0
  7330                           
  7331 ;; *************** function ___flge *****************
  7332 ;; Defined at:
  7333 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  ff1             4    5[COMRAM] unsigned char 
  7336 ;;  ff2             4    9[COMRAM] unsigned char 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;		None               void
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7348 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;Total ram usage:       12 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    2
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_set_pwm_duty_cycle
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text27
  7363  002D18                     __ptext27:
  7364                           	opt callstack 0
  7365  002D18                     ___flge:
  7366                           	opt callstack 24
  7367                           
  7368                           ;incstack = 0
  7369  002D18  0E00               	movlw	0
  7370  002D1A  1406               	andwf	___flge@ff1,w,c
  7371  002D1C  6E0E               	movwf	??___flge& (0+255),c
  7372  002D1E  0E00               	movlw	0
  7373  002D20  1407               	andwf	___flge@ff1+1,w,c
  7374  002D22  6E0F               	movwf	(??___flge+1)& (0+255),c
  7375  002D24  0E80               	movlw	128
  7376  002D26  1408               	andwf	___flge@ff1+2,w,c
  7377  002D28  6E10               	movwf	(??___flge+2)& (0+255),c
  7378  002D2A  0E7F               	movlw	127
  7379  002D2C  1409               	andwf	___flge@ff1+3,w,c
  7380  002D2E  6E11               	movwf	(??___flge+3)& (0+255),c
  7381  002D30  500E               	movf	??___flge,w,c
  7382  002D32  100F               	iorwf	??___flge+1,w,c
  7383  002D34  1010               	iorwf	??___flge+2,w,c
  7384  002D36  1011               	iorwf	??___flge+3,w,c
  7385  002D38  A4D8               	btfss	status,2,c
  7386  002D3A  D008               	goto	l7408
  7387  002D3C  0E00               	movlw	0
  7388  002D3E  6E06               	movwf	___flge@ff1,c
  7389  002D40  0E00               	movlw	0
  7390  002D42  6E07               	movwf	___flge@ff1+1,c
  7391  002D44  0E00               	movlw	0
  7392  002D46  6E08               	movwf	___flge@ff1+2,c
  7393  002D48  0E00               	movlw	0
  7394  002D4A  6E09               	movwf	___flge@ff1+3,c
  7395  002D4C                     l7408:
  7396  002D4C  0E00               	movlw	0
  7397  002D4E  140A               	andwf	___flge@ff2,w,c
  7398  002D50  6E0E               	movwf	??___flge& (0+255),c
  7399  002D52  0E00               	movlw	0
  7400  002D54  140B               	andwf	___flge@ff2+1,w,c
  7401  002D56  6E0F               	movwf	(??___flge+1)& (0+255),c
  7402  002D58  0E80               	movlw	128
  7403  002D5A  140C               	andwf	___flge@ff2+2,w,c
  7404  002D5C  6E10               	movwf	(??___flge+2)& (0+255),c
  7405  002D5E  0E7F               	movlw	127
  7406  002D60  140D               	andwf	___flge@ff2+3,w,c
  7407  002D62  6E11               	movwf	(??___flge+3)& (0+255),c
  7408  002D64  500E               	movf	??___flge,w,c
  7409  002D66  100F               	iorwf	??___flge+1,w,c
  7410  002D68  1010               	iorwf	??___flge+2,w,c
  7411  002D6A  1011               	iorwf	??___flge+3,w,c
  7412  002D6C  A4D8               	btfss	status,2,c
  7413  002D6E  D008               	goto	l7412
  7414  002D70  0E00               	movlw	0
  7415  002D72  6E0A               	movwf	___flge@ff2,c
  7416  002D74  0E00               	movlw	0
  7417  002D76  6E0B               	movwf	___flge@ff2+1,c
  7418  002D78  0E00               	movlw	0
  7419  002D7A  6E0C               	movwf	___flge@ff2+2,c
  7420  002D7C  0E00               	movlw	0
  7421  002D7E  6E0D               	movwf	___flge@ff2+3,c
  7422  002D80                     l7412:
  7423  002D80  AE09               	btfss	___flge@ff1+3,7,c
  7424  002D82  D009               	goto	l7416
  7425  002D84  6C06               	negf	___flge@ff1,c
  7426  002D86  1E07               	comf	___flge@ff1+1,f,c
  7427  002D88  B0D8               	btfsc	status,0,c
  7428  002D8A  2A07               	incf	___flge@ff1+1,f,c
  7429  002D8C  1E08               	comf	___flge@ff1+2,f,c
  7430  002D8E  B0D8               	btfsc	status,0,c
  7431  002D90  2A08               	incf	___flge@ff1+2,f,c
  7432  002D92  0E80               	movlw	128
  7433  002D94  5609               	subfwb	___flge@ff1+3,f,c
  7434  002D96                     l7416:
  7435  002D96  AE0D               	btfss	___flge@ff2+3,7,c
  7436  002D98  D009               	goto	l968
  7437  002D9A  6C0A               	negf	___flge@ff2,c
  7438  002D9C  1E0B               	comf	___flge@ff2+1,f,c
  7439  002D9E  B0D8               	btfsc	status,0,c
  7440  002DA0  2A0B               	incf	___flge@ff2+1,f,c
  7441  002DA2  1E0C               	comf	___flge@ff2+2,f,c
  7442  002DA4  B0D8               	btfsc	status,0,c
  7443  002DA6  2A0C               	incf	___flge@ff2+2,f,c
  7444  002DA8  0E80               	movlw	128
  7445  002DAA  560D               	subfwb	___flge@ff2+3,f,c
  7446  002DAC                     l968:
  7447  002DAC  0E00               	movlw	0
  7448  002DAE  1A06               	xorwf	___flge@ff1,f,c
  7449  002DB0  0E00               	movlw	0
  7450  002DB2  1A07               	xorwf	___flge@ff1+1,f,c
  7451  002DB4  0E00               	movlw	0
  7452  002DB6  1A08               	xorwf	___flge@ff1+2,f,c
  7453  002DB8  0E80               	movlw	128
  7454  002DBA  1A09               	xorwf	___flge@ff1+3,f,c
  7455  002DBC  0E00               	movlw	0
  7456  002DBE  1A0A               	xorwf	___flge@ff2,f,c
  7457  002DC0  0E00               	movlw	0
  7458  002DC2  1A0B               	xorwf	___flge@ff2+1,f,c
  7459  002DC4  0E00               	movlw	0
  7460  002DC6  1A0C               	xorwf	___flge@ff2+2,f,c
  7461  002DC8  0E80               	movlw	128
  7462  002DCA  1A0D               	xorwf	___flge@ff2+3,f,c
  7463  002DCC  500A               	movf	___flge@ff2,w,c
  7464  002DCE  5C06               	subwf	___flge@ff1,w,c
  7465  002DD0  500B               	movf	___flge@ff2+1,w,c
  7466  002DD2  5807               	subwfb	___flge@ff1+1,w,c
  7467  002DD4  500C               	movf	___flge@ff2+2,w,c
  7468  002DD6  5808               	subwfb	___flge@ff1+2,w,c
  7469  002DD8  500D               	movf	___flge@ff2+3,w,c
  7470  002DDA  5809               	subwfb	___flge@ff1+3,w,c
  7471  002DDC  B0D8               	btfsc	status,0,c
  7472  002DDE  D002               	goto	l7422
  7473  002DE0  90D8               	bcf	status,0,c
  7474  002DE2  0012               	return	
  7475  002DE4                     l7422:
  7476  002DE4  80D8               	bsf	status,0,c
  7477  002DE6  0012               	return		;funcret
  7478  002DE8                     __end_of___flge:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function ___fldiv *****************
  7482 ;; Defined at:
  7483 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  b               4   44[COMRAM] unsigned char 
  7486 ;;  a               4   48[COMRAM] unsigned char 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  grs             4   63[COMRAM] unsigned long 
  7489 ;;  rem             4   56[COMRAM] unsigned long 
  7490 ;;  new_exp         2   61[COMRAM] short 
  7491 ;;  aexp            1   68[COMRAM] unsigned char 
  7492 ;;  bexp            1   67[COMRAM] unsigned char 
  7493 ;;  sign            1   60[COMRAM] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  4   44[COMRAM] unsigned char 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7503 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;Total ram usage:       25 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    2
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_set_pwm_duty_cycle
  7514 ;;		_errorCorrectedMove
  7515 ;;		_PIDCorrectedMove
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text28
  7520  001B70                     __ptext28:
  7521                           	opt callstack 0
  7522  001B70                     ___fldiv:
  7523                           	opt callstack 24
  7524                           
  7525                           ;incstack = 0
  7526  001B70  5030               	movf	___fldiv@b+3,w,c
  7527  001B72  0B80               	andlw	128
  7528  001B74  6E3D               	movwf	___fldiv@sign,c
  7529  001B76  5030               	movf	___fldiv@b+3,w,c
  7530  001B78  2430               	addwf	___fldiv@b+3,w,c
  7531  001B7A  6E44               	movwf	___fldiv@bexp,c
  7532  001B7C  BE2F               	btfsc	___fldiv@b+2,7,c
  7533  001B7E  8044               	bsf	___fldiv@bexp,0,c
  7534  001B80  5044               	movf	___fldiv@bexp,w,c
  7535  001B82  B4D8               	btfsc	status,2,c
  7536  001B84  D00D               	goto	l7152
  7537  001B86  2844               	incf	___fldiv@bexp,w,c
  7538  001B88  A4D8               	btfss	status,2,c
  7539  001B8A  D008               	goto	l7148
  7540  001B8C  0E00               	movlw	0
  7541  001B8E  6E2D               	movwf	___fldiv@b,c
  7542  001B90  0E00               	movlw	0
  7543  001B92  6E2E               	movwf	___fldiv@b+1,c
  7544  001B94  0E00               	movlw	0
  7545  001B96  6E2F               	movwf	___fldiv@b+2,c
  7546  001B98  0E00               	movlw	0
  7547  001B9A  6E30               	movwf	___fldiv@b+3,c
  7548  001B9C                     l7148:
  7549  001B9C  8E2F               	bsf	___fldiv@b+2,7,c
  7550  001B9E  D006               	goto	L11
  7551  001BA0                     l7152:
  7552  001BA0  0E00               	movlw	0
  7553  001BA2  6E2D               	movwf	___fldiv@b,c
  7554  001BA4  0E00               	movlw	0
  7555  001BA6  6E2E               	movwf	___fldiv@b+1,c
  7556  001BA8  0E00               	movlw	0
  7557  001BAA  6E2F               	movwf	___fldiv@b+2,c
  7558  001BAC                     L11:
  7559  001BAC  0E00               	movlw	0
  7560  001BAE  6E30               	movwf	___fldiv@b+3,c
  7561  001BB0  5034               	movf	___fldiv@a+3,w,c
  7562  001BB2  0B80               	andlw	128
  7563  001BB4  1A3D               	xorwf	___fldiv@sign,f,c
  7564  001BB6  5034               	movf	___fldiv@a+3,w,c
  7565  001BB8  2434               	addwf	___fldiv@a+3,w,c
  7566  001BBA  6E45               	movwf	___fldiv@aexp,c
  7567  001BBC  BE33               	btfsc	___fldiv@a+2,7,c
  7568  001BBE  8045               	bsf	___fldiv@aexp,0,c
  7569  001BC0  5045               	movf	___fldiv@aexp,w,c
  7570  001BC2  B4D8               	btfsc	status,2,c
  7571  001BC4  D00D               	goto	l7172
  7572  001BC6  2845               	incf	___fldiv@aexp,w,c
  7573  001BC8  A4D8               	btfss	status,2,c
  7574  001BCA  D008               	goto	l7168
  7575  001BCC  0E00               	movlw	0
  7576  001BCE  6E31               	movwf	___fldiv@a,c
  7577  001BD0  0E00               	movlw	0
  7578  001BD2  6E32               	movwf	___fldiv@a+1,c
  7579  001BD4  0E00               	movlw	0
  7580  001BD6  6E33               	movwf	___fldiv@a+2,c
  7581  001BD8  0E00               	movlw	0
  7582  001BDA  6E34               	movwf	___fldiv@a+3,c
  7583  001BDC                     l7168:
  7584  001BDC  8E33               	bsf	___fldiv@a+2,7,c
  7585  001BDE  D006               	goto	L12
  7586  001BE0                     l7172:
  7587  001BE0  0E00               	movlw	0
  7588  001BE2  6E31               	movwf	___fldiv@a,c
  7589  001BE4  0E00               	movlw	0
  7590  001BE6  6E32               	movwf	___fldiv@a+1,c
  7591  001BE8  0E00               	movlw	0
  7592  001BEA  6E33               	movwf	___fldiv@a+2,c
  7593  001BEC                     L12:
  7594  001BEC  0E00               	movlw	0
  7595  001BEE  6E34               	movwf	___fldiv@a+3,c
  7596  001BF0  5031               	movf	___fldiv@a,w,c
  7597  001BF2  1032               	iorwf	___fldiv@a+1,w,c
  7598  001BF4  1033               	iorwf	___fldiv@a+2,w,c
  7599  001BF6  1034               	iorwf	___fldiv@a+3,w,c
  7600  001BF8  A4D8               	btfss	status,2,c
  7601  001BFA  D017               	goto	l7186
  7602  001BFC  0E00               	movlw	0
  7603  001BFE  6E2D               	movwf	___fldiv@b,c
  7604  001C00  0E00               	movlw	0
  7605  001C02  6E2E               	movwf	___fldiv@b+1,c
  7606  001C04  0E00               	movlw	0
  7607  001C06  6E2F               	movwf	___fldiv@b+2,c
  7608  001C08  0E00               	movlw	0
  7609  001C0A  6E30               	movwf	___fldiv@b+3,c
  7610  001C0C  0E80               	movlw	128
  7611  001C0E  122F               	iorwf	___fldiv@b+2,f,c
  7612  001C10  0E7F               	movlw	127
  7613  001C12  1230               	iorwf	___fldiv@b+3,f,c
  7614  001C14                     l7180:
  7615  001C14  503D               	movf	___fldiv@sign,w,c
  7616  001C16  1230               	iorwf	___fldiv@b+3,f,c
  7617  001C18  C02D  F02D         	movff	___fldiv@b,?___fldiv
  7618  001C1C  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  7619  001C20  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  7620  001C24  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  7621  001C28  0012               	return	
  7622  001C2A                     l7186:
  7623  001C2A  5044               	movf	___fldiv@bexp,w,c
  7624  001C2C  A4D8               	btfss	status,2,c
  7625  001C2E  D009               	goto	l7194
  7626  001C30  0E00               	movlw	0
  7627  001C32  6E2D               	movwf	?___fldiv,c
  7628  001C34  0E00               	movlw	0
  7629  001C36  6E2E               	movwf	?___fldiv+1,c
  7630  001C38  0E00               	movlw	0
  7631  001C3A  6E2F               	movwf	?___fldiv+2,c
  7632  001C3C  0E00               	movlw	0
  7633  001C3E  6E30               	movwf	?___fldiv+3,c
  7634  001C40  0012               	return	
  7635  001C42                     l7194:
  7636  001C42  5045               	movf	___fldiv@aexp,w,c
  7637  001C44  C044  F035         	movff	___fldiv@bexp,??___fldiv
  7638  001C48  6A36               	clrf	(??___fldiv+1)& (0+255),c
  7639  001C4A  5E35               	subwf	??___fldiv,f,c
  7640  001C4C  0E00               	movlw	0
  7641  001C4E  5A36               	subwfb	??___fldiv+1,f,c
  7642  001C50  0E7F               	movlw	127
  7643  001C52  2435               	addwf	??___fldiv,w,c
  7644  001C54  6E3E               	movwf	___fldiv@new_exp,c
  7645  001C56  0E00               	movlw	0
  7646  001C58  2036               	addwfc	??___fldiv+1,w,c
  7647  001C5A  6E3F               	movwf	___fldiv@new_exp+1,c
  7648  001C5C  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  7649  001C60  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  7650  001C64  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  7651  001C68  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  7652  001C6C  0E00               	movlw	0
  7653  001C6E  6E2D               	movwf	___fldiv@b,c
  7654  001C70  0E00               	movlw	0
  7655  001C72  6E2E               	movwf	___fldiv@b+1,c
  7656  001C74  0E00               	movlw	0
  7657  001C76  6E2F               	movwf	___fldiv@b+2,c
  7658  001C78  0E00               	movlw	0
  7659  001C7A  6E30               	movwf	___fldiv@b+3,c
  7660  001C7C  0E00               	movlw	0
  7661  001C7E  6E40               	movwf	___fldiv@grs,c
  7662  001C80  0E00               	movlw	0
  7663  001C82  6E41               	movwf	___fldiv@grs+1,c
  7664  001C84  0E00               	movlw	0
  7665  001C86  6E42               	movwf	___fldiv@grs+2,c
  7666  001C88  0E00               	movlw	0
  7667  001C8A  6E43               	movwf	___fldiv@grs+3,c
  7668  001C8C  0E00               	movlw	0
  7669  001C8E  6E45               	movwf	___fldiv@aexp,c
  7670  001C90  D028               	goto	l1287
  7671  001C92                     l7204:
  7672  001C92  5045               	movf	___fldiv@aexp,w,c
  7673  001C94  B4D8               	btfsc	status,2,c
  7674  001C96  D011               	goto	l7212
  7675  001C98  90D8               	bcf	status,0,c
  7676  001C9A  3639               	rlcf	___fldiv@rem,f,c
  7677  001C9C  363A               	rlcf	___fldiv@rem+1,f,c
  7678  001C9E  363B               	rlcf	___fldiv@rem+2,f,c
  7679  001CA0  363C               	rlcf	___fldiv@rem+3,f,c
  7680  001CA2  90D8               	bcf	status,0,c
  7681  001CA4  362D               	rlcf	___fldiv@b,f,c
  7682  001CA6  362E               	rlcf	___fldiv@b+1,f,c
  7683  001CA8  362F               	rlcf	___fldiv@b+2,f,c
  7684  001CAA  3630               	rlcf	___fldiv@b+3,f,c
  7685  001CAC  BE43               	btfsc	___fldiv@grs+3,7,c
  7686  001CAE  802D               	bsf	___fldiv@b,0,c
  7687  001CB0  90D8               	bcf	status,0,c
  7688  001CB2  3640               	rlcf	___fldiv@grs,f,c
  7689  001CB4  3641               	rlcf	___fldiv@grs+1,f,c
  7690  001CB6  3642               	rlcf	___fldiv@grs+2,f,c
  7691  001CB8  3643               	rlcf	___fldiv@grs+3,f,c
  7692  001CBA                     l7212:
  7693  001CBA  5031               	movf	___fldiv@a,w,c
  7694  001CBC  5C39               	subwf	___fldiv@rem,w,c
  7695  001CBE  5032               	movf	___fldiv@a+1,w,c
  7696  001CC0  583A               	subwfb	___fldiv@rem+1,w,c
  7697  001CC2  5033               	movf	___fldiv@a+2,w,c
  7698  001CC4  583B               	subwfb	___fldiv@rem+2,w,c
  7699  001CC6  5034               	movf	___fldiv@a+3,w,c
  7700  001CC8  583C               	subwfb	___fldiv@rem+3,w,c
  7701  001CCA  A0D8               	btfss	status,0,c
  7702  001CCC  D009               	goto	l7218
  7703  001CCE  8C43               	bsf	___fldiv@grs+3,6,c
  7704  001CD0  5031               	movf	___fldiv@a,w,c
  7705  001CD2  5E39               	subwf	___fldiv@rem,f,c
  7706  001CD4  5032               	movf	___fldiv@a+1,w,c
  7707  001CD6  5A3A               	subwfb	___fldiv@rem+1,f,c
  7708  001CD8  5033               	movf	___fldiv@a+2,w,c
  7709  001CDA  5A3B               	subwfb	___fldiv@rem+2,f,c
  7710  001CDC  5034               	movf	___fldiv@a+3,w,c
  7711  001CDE  5A3C               	subwfb	___fldiv@rem+3,f,c
  7712  001CE0                     l7218:
  7713  001CE0  2A45               	incf	___fldiv@aexp,f,c
  7714  001CE2                     l1287:
  7715  001CE2  0E19               	movlw	25
  7716  001CE4  6445               	cpfsgt	___fldiv@aexp,c
  7717  001CE6  D7D5               	goto	l7204
  7718  001CE8  5039               	movf	___fldiv@rem,w,c
  7719  001CEA  103A               	iorwf	___fldiv@rem+1,w,c
  7720  001CEC  103B               	iorwf	___fldiv@rem+2,w,c
  7721  001CEE  103C               	iorwf	___fldiv@rem+3,w,c
  7722  001CF0  B4D8               	btfsc	status,2,c
  7723  001CF2  D011               	goto	l7230
  7724  001CF4  8040               	bsf	___fldiv@grs,0,c
  7725  001CF6  D00F               	goto	l7230
  7726  001CF8                     l7224:
  7727  001CF8  90D8               	bcf	status,0,c
  7728  001CFA  362D               	rlcf	___fldiv@b,f,c
  7729  001CFC  362E               	rlcf	___fldiv@b+1,f,c
  7730  001CFE  362F               	rlcf	___fldiv@b+2,f,c
  7731  001D00  3630               	rlcf	___fldiv@b+3,f,c
  7732  001D02  BE43               	btfsc	___fldiv@grs+3,7,c
  7733  001D04  802D               	bsf	___fldiv@b,0,c
  7734  001D06  90D8               	bcf	status,0,c
  7735  001D08  3640               	rlcf	___fldiv@grs,f,c
  7736  001D0A  3641               	rlcf	___fldiv@grs+1,f,c
  7737  001D0C  3642               	rlcf	___fldiv@grs+2,f,c
  7738  001D0E  3643               	rlcf	___fldiv@grs+3,f,c
  7739  001D10  063E               	decf	___fldiv@new_exp,f,c
  7740  001D12  A0D8               	btfss	status,0,c
  7741  001D14  063F               	decf	___fldiv@new_exp+1,f,c
  7742  001D16                     l7230:
  7743  001D16  AE2F               	btfss	___fldiv@b+2,7,c
  7744  001D18  D7EF               	goto	l7224
  7745  001D1A  0E00               	movlw	0
  7746  001D1C  6E45               	movwf	___fldiv@aexp,c
  7747  001D1E  AE43               	btfss	___fldiv@grs+3,7,c
  7748  001D20  D017               	goto	l1298
  7749  001D22  0EFF               	movlw	255
  7750  001D24  1440               	andwf	___fldiv@grs,w,c
  7751  001D26  6E35               	movwf	??___fldiv& (0+255),c
  7752  001D28  0EFF               	movlw	255
  7753  001D2A  1441               	andwf	___fldiv@grs+1,w,c
  7754  001D2C  6E36               	movwf	(??___fldiv+1)& (0+255),c
  7755  001D2E  0EFF               	movlw	255
  7756  001D30  1442               	andwf	___fldiv@grs+2,w,c
  7757  001D32  6E37               	movwf	(??___fldiv+2)& (0+255),c
  7758  001D34  0E7F               	movlw	127
  7759  001D36  1443               	andwf	___fldiv@grs+3,w,c
  7760  001D38  6E38               	movwf	(??___fldiv+3)& (0+255),c
  7761  001D3A  5035               	movf	??___fldiv,w,c
  7762  001D3C  1036               	iorwf	??___fldiv+1,w,c
  7763  001D3E  1037               	iorwf	??___fldiv+2,w,c
  7764  001D40  1038               	iorwf	??___fldiv+3,w,c
  7765  001D42  B4D8               	btfsc	status,2,c
  7766  001D44  D003               	goto	l1299
  7767  001D46                     u8030:
  7768  001D46  0E01               	movlw	1
  7769  001D48  6E45               	movwf	___fldiv@aexp,c
  7770  001D4A  D002               	goto	l1298
  7771  001D4C                     l1299:
  7772  001D4C  B02D               	btfsc	___fldiv@b,0,c
  7773  001D4E  D7FB               	goto	u8030
  7774  001D50                     l1298:
  7775  001D50  5045               	movf	___fldiv@aexp,w,c
  7776  001D52  B4D8               	btfsc	status,2,c
  7777  001D54  D01F               	goto	l7250
  7778  001D56  0E01               	movlw	1
  7779  001D58  262D               	addwf	___fldiv@b,f,c
  7780  001D5A  0E00               	movlw	0
  7781  001D5C  222E               	addwfc	___fldiv@b+1,f,c
  7782  001D5E  222F               	addwfc	___fldiv@b+2,f,c
  7783  001D60  2230               	addwfc	___fldiv@b+3,f,c
  7784  001D62  A030               	btfss	___fldiv@b+3,0,c
  7785  001D64  D017               	goto	l7250
  7786  001D66  C02D  F035         	movff	___fldiv@b,??___fldiv
  7787  001D6A  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7788  001D6E  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7789  001D72  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7790  001D76  3438               	rlcf	??___fldiv+3,w,c
  7791  001D78  3238               	rrcf	??___fldiv+3,f,c
  7792  001D7A  3237               	rrcf	??___fldiv+2,f,c
  7793  001D7C  3236               	rrcf	??___fldiv+1,f,c
  7794  001D7E  3235               	rrcf	??___fldiv,f,c
  7795  001D80  C035  F02D         	movff	??___fldiv,___fldiv@b
  7796  001D84  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7797  001D88  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7798  001D8C  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7799  001D90  4A3E               	infsnz	___fldiv@new_exp,f,c
  7800  001D92  2A3F               	incf	___fldiv@new_exp+1,f,c
  7801  001D94                     l7250:
  7802  001D94  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7803  001D96  D010               	goto	l7254
  7804  001D98  503F               	movf	___fldiv@new_exp+1,w,c
  7805  001D9A  E103               	bnz	u8070
  7806  001D9C  283E               	incf	___fldiv@new_exp,w,c
  7807  001D9E  A0D8               	btfss	status,0,c
  7808  001DA0  D00B               	goto	l7254
  7809  001DA2                     u8070:
  7810  001DA2  0E00               	movlw	0
  7811  001DA4  6E3F               	movwf	___fldiv@new_exp+1,c
  7812  001DA6  683E               	setf	___fldiv@new_exp,c
  7813  001DA8  0E00               	movlw	0
  7814  001DAA  6E2D               	movwf	___fldiv@b,c
  7815  001DAC  0E00               	movlw	0
  7816  001DAE  6E2E               	movwf	___fldiv@b+1,c
  7817  001DB0  0E00               	movlw	0
  7818  001DB2  6E2F               	movwf	___fldiv@b+2,c
  7819  001DB4  0E00               	movlw	0
  7820  001DB6  6E30               	movwf	___fldiv@b+3,c
  7821  001DB8                     l7254:
  7822  001DB8  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7823  001DBA  D005               	goto	u8080
  7824  001DBC  503F               	movf	___fldiv@new_exp+1,w,c
  7825  001DBE  E111               	bnz	l7258
  7826  001DC0  043E               	decf	___fldiv@new_exp,w,c
  7827  001DC2  B0D8               	btfsc	status,0,c
  7828  001DC4  D00E               	goto	l7258
  7829  001DC6                     u8080:
  7830  001DC6  0E00               	movlw	0
  7831  001DC8  6E3F               	movwf	___fldiv@new_exp+1,c
  7832  001DCA  0E00               	movlw	0
  7833  001DCC  6E3E               	movwf	___fldiv@new_exp,c
  7834  001DCE  0E00               	movlw	0
  7835  001DD0  6E2D               	movwf	___fldiv@b,c
  7836  001DD2  0E00               	movlw	0
  7837  001DD4  6E2E               	movwf	___fldiv@b+1,c
  7838  001DD6  0E00               	movlw	0
  7839  001DD8  6E2F               	movwf	___fldiv@b+2,c
  7840  001DDA  0E00               	movlw	0
  7841  001DDC  6E30               	movwf	___fldiv@b+3,c
  7842  001DDE  0E00               	movlw	0
  7843  001DE0  6E3D               	movwf	___fldiv@sign,c
  7844  001DE2                     l7258:
  7845  001DE2  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7846  001DE6  A044               	btfss	___fldiv@bexp,0,c
  7847  001DE8  D002               	goto	l7264
  7848  001DEA  8E2F               	bsf	___fldiv@b+2,7,c
  7849  001DEC  D001               	goto	l7266
  7850  001DEE                     l7264:
  7851  001DEE  9E2F               	bcf	___fldiv@b+2,7,c
  7852  001DF0                     l7266:
  7853  001DF0  90D8               	bcf	status,0,c
  7854  001DF2  3044               	rrcf	___fldiv@bexp,w,c
  7855  001DF4  6E30               	movwf	___fldiv@b+3,c
  7856  001DF6  D70E               	goto	l7180
  7857  001DF8                     __end_of___fldiv:
  7858                           	opt callstack 0
  7859                           
  7860 ;; *************** function ___flsub *****************
  7861 ;; Defined at:
  7862 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  b               4   69[COMRAM] unsigned char 
  7865 ;;  a               4   73[COMRAM] unsigned char 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   69[COMRAM] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7877 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;Total ram usage:        8 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		___fladd
  7886 ;; This function is called by:
  7887 ;;		_errorCorrectedMove
  7888 ;;		_PIDCorrectedMove
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text29
  7893  0035B8                     __ptext29:
  7894                           	opt callstack 0
  7895  0035B8                     ___flsub:
  7896                           	opt callstack 24
  7897                           
  7898                           ;incstack = 0
  7899  0035B8  0E00               	movlw	0
  7900  0035BA  1A4A               	xorwf	___flsub@a,f,c
  7901  0035BC  0E00               	movlw	0
  7902  0035BE  1A4B               	xorwf	___flsub@a+1,f,c
  7903  0035C0  0E00               	movlw	0
  7904  0035C2  1A4C               	xorwf	___flsub@a+2,f,c
  7905  0035C4  0E80               	movlw	128
  7906  0035C6  1A4D               	xorwf	___flsub@a+3,f,c
  7907  0035C8  C046  F02D         	movff	___flsub@b,___fladd@b
  7908  0035CC  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  7909  0035D0  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  7910  0035D4  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  7911  0035D8  C04A  F031         	movff	___flsub@a,___fladd@a
  7912  0035DC  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  7913  0035E0  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  7914  0035E4  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  7915  0035E8  EC32  F00C         	call	___fladd	;wreg free
  7916  0035EC  C02D  F046         	movff	?___fladd,?___flsub
  7917  0035F0  C02E  F047         	movff	?___fladd+1,?___flsub+1
  7918  0035F4  C02F  F048         	movff	?___fladd+2,?___flsub+2
  7919  0035F8  C030  F049         	movff	?___fladd+3,?___flsub+3
  7920  0035FC  0012               	return		;funcret
  7921  0035FE                     __end_of___flsub:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function ___fladd *****************
  7925 ;; Defined at:
  7926 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  b               4   44[COMRAM] unsigned char 
  7929 ;;  a               4   48[COMRAM] unsigned char 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  grs             1   59[COMRAM] unsigned char 
  7932 ;;  bexp            1   58[COMRAM] unsigned char 
  7933 ;;  aexp            1   57[COMRAM] unsigned char 
  7934 ;;  signs           1   56[COMRAM] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  4   44[COMRAM] unsigned char 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7944 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;Total ram usage:       16 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    2
  7951 ;; This function calls:
  7952 ;;		Nothing
  7953 ;; This function is called by:
  7954 ;;		_errorCorrectedMove
  7955 ;;		___flsub
  7956 ;;		_PIDCorrectedMove
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text30
  7961  001864                     __ptext30:
  7962                           	opt callstack 0
  7963  001864                     ___fladd:
  7964                           	opt callstack 24
  7965                           
  7966                           ;incstack = 0
  7967  001864  5030               	movf	___fladd@b+3,w,c
  7968  001866  0B80               	andlw	128
  7969  001868  6E39               	movwf	___fladd@signs,c
  7970  00186A  5030               	movf	___fladd@b+3,w,c
  7971  00186C  2430               	addwf	___fladd@b+3,w,c
  7972  00186E  6E3B               	movwf	___fladd@bexp,c
  7973  001870  BE2F               	btfsc	___fladd@b+2,7,c
  7974  001872  803B               	bsf	___fladd@bexp,0,c
  7975  001874  503B               	movf	___fladd@bexp,w,c
  7976  001876  B4D8               	btfsc	status,2,c
  7977  001878  D00D               	goto	l7688
  7978  00187A  283B               	incf	___fladd@bexp,w,c
  7979  00187C  A4D8               	btfss	status,2,c
  7980  00187E  D008               	goto	l7684
  7981  001880  0E00               	movlw	0
  7982  001882  6E2D               	movwf	___fladd@b,c
  7983  001884  0E00               	movlw	0
  7984  001886  6E2E               	movwf	___fladd@b+1,c
  7985  001888  0E00               	movlw	0
  7986  00188A  6E2F               	movwf	___fladd@b+2,c
  7987  00188C  0E00               	movlw	0
  7988  00188E  6E30               	movwf	___fladd@b+3,c
  7989  001890                     l7684:
  7990  001890  8E2F               	bsf	___fladd@b+2,7,c
  7991  001892  D006               	goto	L13
  7992  001894                     l7688:
  7993  001894  0E00               	movlw	0
  7994  001896  6E2D               	movwf	___fladd@b,c
  7995  001898  0E00               	movlw	0
  7996  00189A  6E2E               	movwf	___fladd@b+1,c
  7997  00189C  0E00               	movlw	0
  7998  00189E  6E2F               	movwf	___fladd@b+2,c
  7999  0018A0                     L13:
  8000  0018A0  0E00               	movlw	0
  8001  0018A2  6E30               	movwf	___fladd@b+3,c
  8002  0018A4  5034               	movf	___fladd@a+3,w,c
  8003  0018A6  0B80               	andlw	128
  8004  0018A8  6E3A               	movwf	___fladd@aexp,c
  8005  0018AA  5039               	movf	___fladd@signs,w,c
  8006  0018AC  183A               	xorwf	___fladd@aexp,w,c
  8007  0018AE  A4D8               	btfss	status,2,c
  8008  0018B0  8C39               	bsf	___fladd@signs,6,c
  8009  0018B2  5034               	movf	___fladd@a+3,w,c
  8010  0018B4  2434               	addwf	___fladd@a+3,w,c
  8011  0018B6  6E3A               	movwf	___fladd@aexp,c
  8012  0018B8  BE33               	btfsc	___fladd@a+2,7,c
  8013  0018BA  803A               	bsf	___fladd@aexp,0,c
  8014  0018BC  503A               	movf	___fladd@aexp,w,c
  8015  0018BE  B4D8               	btfsc	status,2,c
  8016  0018C0  D00D               	goto	l7712
  8017  0018C2  283A               	incf	___fladd@aexp,w,c
  8018  0018C4  A4D8               	btfss	status,2,c
  8019  0018C6  D008               	goto	l7708
  8020  0018C8  0E00               	movlw	0
  8021  0018CA  6E31               	movwf	___fladd@a,c
  8022  0018CC  0E00               	movlw	0
  8023  0018CE  6E32               	movwf	___fladd@a+1,c
  8024  0018D0  0E00               	movlw	0
  8025  0018D2  6E33               	movwf	___fladd@a+2,c
  8026  0018D4  0E00               	movlw	0
  8027  0018D6  6E34               	movwf	___fladd@a+3,c
  8028  0018D8                     l7708:
  8029  0018D8  8E33               	bsf	___fladd@a+2,7,c
  8030  0018DA  D006               	goto	L14
  8031  0018DC                     l7712:
  8032  0018DC  0E00               	movlw	0
  8033  0018DE  6E31               	movwf	___fladd@a,c
  8034  0018E0  0E00               	movlw	0
  8035  0018E2  6E32               	movwf	___fladd@a+1,c
  8036  0018E4  0E00               	movlw	0
  8037  0018E6  6E33               	movwf	___fladd@a+2,c
  8038  0018E8                     L14:
  8039  0018E8  0E00               	movlw	0
  8040  0018EA  6E34               	movwf	___fladd@a+3,c
  8041  0018EC  503B               	movf	___fladd@bexp,w,c
  8042  0018EE  5C3A               	subwf	___fladd@aexp,w,c
  8043  0018F0  B0D8               	btfsc	status,0,c
  8044  0018F2  D022               	goto	l7750
  8045  0018F4  AC39               	btfss	___fladd@signs,6,c
  8046  0018F6  D002               	goto	l7720
  8047  0018F8  0E80               	movlw	128
  8048  0018FA  1A39               	xorwf	___fladd@signs,f,c
  8049  0018FC                     l7720:
  8050  0018FC  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  8051  001900  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  8052  001904  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  8053  001908  C02D  F03C         	movff	___fladd@b,___fladd@grs
  8054  00190C  C031  F02D         	movff	___fladd@a,___fladd@b
  8055  001910  C03C  F031         	movff	___fladd@grs,___fladd@a
  8056  001914  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  8057  001918  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  8058  00191C  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  8059  001920  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  8060  001924  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  8061  001928  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  8062  00192C  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  8063  001930  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  8064  001934  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  8065  001938                     l7750:
  8066  001938  0E00               	movlw	0
  8067  00193A  6E3C               	movwf	___fladd@grs,c
  8068  00193C  503B               	movf	___fladd@bexp,w,c
  8069  00193E  C03A  F035         	movff	___fladd@aexp,??___fladd
  8070  001942  6A36               	clrf	(??___fladd+1)& (0+255),c
  8071  001944  5E35               	subwf	??___fladd,f,c
  8072  001946  0E00               	movlw	0
  8073  001948  5A36               	subwfb	??___fladd+1,f,c
  8074  00194A  BE36               	btfsc	??___fladd+1,7,c
  8075  00194C  D02C               	goto	l1232
  8076  00194E  5036               	movf	??___fladd+1,w,c
  8077  001950  E104               	bnz	u8830
  8078  001952  0E1A               	movlw	26
  8079  001954  5C35               	subwf	??___fladd,w,c
  8080  001956  A0D8               	btfss	status,0,c
  8081  001958  D026               	goto	l1232
  8082  00195A                     u8830:
  8083  00195A  502D               	movf	___fladd@b,w,c
  8084  00195C  102E               	iorwf	___fladd@b+1,w,c
  8085  00195E  102F               	iorwf	___fladd@b+2,w,c
  8086  001960  1030               	iorwf	___fladd@b+3,w,c
  8087  001962  B4D8               	btfsc	status,2,c
  8088  001964  D002               	goto	u8840
  8089  001966  0E01               	movlw	1
  8090  001968  D001               	goto	u8850
  8091  00196A                     u8840:
  8092  00196A  0E00               	movlw	0
  8093  00196C                     u8850:
  8094  00196C  6E3C               	movwf	___fladd@grs,c
  8095  00196E  0E00               	movlw	0
  8096  001970  6E2D               	movwf	___fladd@b,c
  8097  001972  0E00               	movlw	0
  8098  001974  6E2E               	movwf	___fladd@b+1,c
  8099  001976  0E00               	movlw	0
  8100  001978  6E2F               	movwf	___fladd@b+2,c
  8101  00197A  0E00               	movlw	0
  8102  00197C  6E30               	movwf	___fladd@b+3,c
  8103  00197E  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  8104  001982  D015               	goto	u8880
  8105  001984                     l1233:
  8106  001984  A03C               	btfss	___fladd@grs,0,c
  8107  001986  D005               	goto	l7762
  8108  001988  90D8               	bcf	status,0,c
  8109  00198A  303C               	rrcf	___fladd@grs,w,c
  8110  00198C  0901               	iorlw	1
  8111  00198E  6E3C               	movwf	___fladd@grs,c
  8112  001990  D002               	goto	l7764
  8113  001992                     l7762:
  8114  001992  90D8               	bcf	status,0,c
  8115  001994  323C               	rrcf	___fladd@grs,f,c
  8116  001996                     l7764:
  8117  001996  B02D               	btfsc	___fladd@b,0,c
  8118  001998  8E3C               	bsf	___fladd@grs,7,c
  8119  00199A  3430               	rlcf	___fladd@b+3,w,c
  8120  00199C  3230               	rrcf	___fladd@b+3,f,c
  8121  00199E  322F               	rrcf	___fladd@b+2,f,c
  8122  0019A0  322E               	rrcf	___fladd@b+1,f,c
  8123  0019A2  322D               	rrcf	___fladd@b,f,c
  8124  0019A4  2A3B               	incf	___fladd@bexp,f,c
  8125  0019A6                     l1232:
  8126  0019A6  503A               	movf	___fladd@aexp,w,c
  8127  0019A8  5C3B               	subwf	___fladd@bexp,w,c
  8128  0019AA  A0D8               	btfss	status,0,c
  8129  0019AC  D7EB               	goto	l1233
  8130  0019AE                     u8880:
  8131  0019AE  BC39               	btfsc	___fladd@signs,6,c
  8132  0019B0  D028               	goto	l7796
  8133  0019B2  503B               	movf	___fladd@bexp,w,c
  8134  0019B4  A4D8               	btfss	status,2,c
  8135  0019B6  D009               	goto	l7778
  8136  0019B8  0E00               	movlw	0
  8137  0019BA  6E2D               	movwf	?___fladd,c
  8138  0019BC  0E00               	movlw	0
  8139  0019BE  6E2E               	movwf	?___fladd+1,c
  8140  0019C0  0E00               	movlw	0
  8141  0019C2  6E2F               	movwf	?___fladd+2,c
  8142  0019C4  0E00               	movlw	0
  8143  0019C6  6E30               	movwf	?___fladd+3,c
  8144  0019C8  0012               	return	
  8145  0019CA                     l7778:
  8146  0019CA  5031               	movf	___fladd@a,w,c
  8147  0019CC  262D               	addwf	___fladd@b,f,c
  8148  0019CE  5032               	movf	___fladd@a+1,w,c
  8149  0019D0  222E               	addwfc	___fladd@b+1,f,c
  8150  0019D2  5033               	movf	___fladd@a+2,w,c
  8151  0019D4  222F               	addwfc	___fladd@b+2,f,c
  8152  0019D6  5034               	movf	___fladd@a+3,w,c
  8153  0019D8  2230               	addwfc	___fladd@b+3,f,c
  8154  0019DA  A030               	btfss	___fladd@b+3,0,c
  8155  0019DC  D071               	goto	u9010
  8156  0019DE  A03C               	btfss	___fladd@grs,0,c
  8157  0019E0  D005               	goto	l7786
  8158  0019E2  90D8               	bcf	status,0,c
  8159  0019E4  303C               	rrcf	___fladd@grs,w,c
  8160  0019E6  0901               	iorlw	1
  8161  0019E8  6E3C               	movwf	___fladd@grs,c
  8162  0019EA  D002               	goto	l7788
  8163  0019EC                     l7786:
  8164  0019EC  90D8               	bcf	status,0,c
  8165  0019EE  323C               	rrcf	___fladd@grs,f,c
  8166  0019F0                     l7788:
  8167  0019F0  B02D               	btfsc	___fladd@b,0,c
  8168  0019F2  8E3C               	bsf	___fladd@grs,7,c
  8169  0019F4  3430               	rlcf	___fladd@b+3,w,c
  8170  0019F6  3230               	rrcf	___fladd@b+3,f,c
  8171  0019F8  322F               	rrcf	___fladd@b+2,f,c
  8172  0019FA  322E               	rrcf	___fladd@b+1,f,c
  8173  0019FC  322D               	rrcf	___fladd@b,f,c
  8174  0019FE  2A3B               	incf	___fladd@bexp,f,c
  8175  001A00  D05F               	goto	u9010
  8176  001A02                     l7796:
  8177  001A02  5031               	movf	___fladd@a,w,c
  8178  001A04  5C2D               	subwf	___fladd@b,w,c
  8179  001A06  5032               	movf	___fladd@a+1,w,c
  8180  001A08  582E               	subwfb	___fladd@b+1,w,c
  8181  001A0A  5033               	movf	___fladd@a+2,w,c
  8182  001A0C  582F               	subwfb	___fladd@b+2,w,c
  8183  001A0E  5030               	movf	___fladd@b+3,w,c
  8184  001A10  0A80               	xorlw	128
  8185  001A12  6E35               	movwf	??___fladd& (0+255),c
  8186  001A14  5034               	movf	___fladd@a+3,w,c
  8187  001A16  0A80               	xorlw	128
  8188  001A18  5835               	subwfb	??___fladd& (0+255),w,c
  8189  001A1A  B0D8               	btfsc	status,0,c
  8190  001A1C  D025               	goto	l7806
  8191  001A1E  502D               	movf	___fladd@b,w,c
  8192  001A20  5C31               	subwf	___fladd@a,w,c
  8193  001A22  6E35               	movwf	??___fladd& (0+255),c
  8194  001A24  502E               	movf	___fladd@b+1,w,c
  8195  001A26  5832               	subwfb	___fladd@a+1,w,c
  8196  001A28  6E36               	movwf	(??___fladd+1)& (0+255),c
  8197  001A2A  502F               	movf	___fladd@b+2,w,c
  8198  001A2C  5833               	subwfb	___fladd@a+2,w,c
  8199  001A2E  6E37               	movwf	(??___fladd+2)& (0+255),c
  8200  001A30  5030               	movf	___fladd@b+3,w,c
  8201  001A32  5834               	subwfb	___fladd@a+3,w,c
  8202  001A34  6E38               	movwf	(??___fladd+3)& (0+255),c
  8203  001A36  0EFF               	movlw	255
  8204  001A38  2435               	addwf	??___fladd,w,c
  8205  001A3A  6E2D               	movwf	___fladd@b,c
  8206  001A3C  0EFF               	movlw	255
  8207  001A3E  2036               	addwfc	??___fladd+1,w,c
  8208  001A40  6E2E               	movwf	___fladd@b+1,c
  8209  001A42  0EFF               	movlw	255
  8210  001A44  2037               	addwfc	??___fladd+2,w,c
  8211  001A46  6E2F               	movwf	___fladd@b+2,c
  8212  001A48  0EFF               	movlw	255
  8213  001A4A  2038               	addwfc	??___fladd+3,w,c
  8214  001A4C  6E30               	movwf	___fladd@b+3,c
  8215  001A4E  0E80               	movlw	128
  8216  001A50  1A39               	xorwf	___fladd@signs,f,c
  8217  001A52  6C3C               	negf	___fladd@grs,c
  8218  001A54  503C               	movf	___fladd@grs,w,c
  8219  001A56  A4D8               	btfss	status,2,c
  8220  001A58  D00F               	goto	l1248
  8221  001A5A  0E01               	movlw	1
  8222  001A5C  262D               	addwf	___fladd@b,f,c
  8223  001A5E  0E00               	movlw	0
  8224  001A60  222E               	addwfc	___fladd@b+1,f,c
  8225  001A62  222F               	addwfc	___fladd@b+2,f,c
  8226  001A64  2230               	addwfc	___fladd@b+3,f,c
  8227  001A66  D008               	goto	l1248
  8228  001A68                     l7806:
  8229  001A68  5031               	movf	___fladd@a,w,c
  8230  001A6A  5E2D               	subwf	___fladd@b,f,c
  8231  001A6C  5032               	movf	___fladd@a+1,w,c
  8232  001A6E  5A2E               	subwfb	___fladd@b+1,f,c
  8233  001A70  5033               	movf	___fladd@a+2,w,c
  8234  001A72  5A2F               	subwfb	___fladd@b+2,f,c
  8235  001A74  5034               	movf	___fladd@a+3,w,c
  8236  001A76  5A30               	subwfb	___fladd@b+3,f,c
  8237  001A78                     l1248:
  8238  001A78  502D               	movf	___fladd@b,w,c
  8239  001A7A  102E               	iorwf	___fladd@b+1,w,c
  8240  001A7C  102F               	iorwf	___fladd@b+2,w,c
  8241  001A7E  1030               	iorwf	___fladd@b+3,w,c
  8242  001A80  A4D8               	btfss	status,2,c
  8243  001A82  D01C               	goto	l7830
  8244  001A84  503C               	movf	___fladd@grs,w,c
  8245  001A86  A4D8               	btfss	status,2,c
  8246  001A88  D019               	goto	l7830
  8247  001A8A  0E00               	movlw	0
  8248  001A8C  6E2D               	movwf	?___fladd,c
  8249  001A8E  0E00               	movlw	0
  8250  001A90  6E2E               	movwf	?___fladd+1,c
  8251  001A92  0E00               	movlw	0
  8252  001A94  6E2F               	movwf	?___fladd+2,c
  8253  001A96  0E00               	movlw	0
  8254  001A98  6E30               	movwf	?___fladd+3,c
  8255  001A9A  0012               	return	
  8256  001A9C                     l7814:
  8257  001A9C  90D8               	bcf	status,0,c
  8258  001A9E  362D               	rlcf	___fladd@b,f,c
  8259  001AA0  362E               	rlcf	___fladd@b+1,f,c
  8260  001AA2  362F               	rlcf	___fladd@b+2,f,c
  8261  001AA4  3630               	rlcf	___fladd@b+3,f,c
  8262  001AA6  BE3C               	btfsc	___fladd@grs,7,c
  8263  001AA8  802D               	bsf	___fladd@b,0,c
  8264  001AAA  A03C               	btfss	___fladd@grs,0,c
  8265  001AAC  D002               	goto	l7824
  8266  001AAE  80D8               	bsf	status,0,c
  8267  001AB0  D001               	goto	L15
  8268  001AB2                     l7824:
  8269  001AB2  90D8               	bcf	status,0,c
  8270  001AB4                     L15:
  8271  001AB4  363C               	rlcf	___fladd@grs,f,c
  8272  001AB6  503B               	movf	___fladd@bexp,w,c
  8273  001AB8  A4D8               	btfss	status,2,c
  8274  001ABA  063B               	decf	___fladd@bexp,f,c
  8275  001ABC                     l7830:
  8276  001ABC  AE2F               	btfss	___fladd@b+2,7,c
  8277  001ABE  D7EE               	goto	l7814
  8278  001AC0                     u9010:
  8279  001AC0  0E00               	movlw	0
  8280  001AC2  6E3A               	movwf	___fladd@aexp,c
  8281  001AC4  AE3C               	btfss	___fladd@grs,7,c
  8282  001AC6  D00B               	goto	l1257
  8283  001AC8  C03C  F035         	movff	___fladd@grs,??___fladd
  8284  001ACC  0E7F               	movlw	127
  8285  001ACE  1635               	andwf	??___fladd,f,c
  8286  001AD0  B4D8               	btfsc	status,2,c
  8287  001AD2  D003               	goto	l1258
  8288  001AD4                     u9030:
  8289  001AD4  0E01               	movlw	1
  8290  001AD6  6E3A               	movwf	___fladd@aexp,c
  8291  001AD8  D002               	goto	l1257
  8292  001ADA                     l1258:
  8293  001ADA  B02D               	btfsc	___fladd@b,0,c
  8294  001ADC  D7FB               	goto	u9030
  8295  001ADE                     l1257:
  8296  001ADE  503A               	movf	___fladd@aexp,w,c
  8297  001AE0  B4D8               	btfsc	status,2,c
  8298  001AE2  D020               	goto	l7850
  8299  001AE4  0E01               	movlw	1
  8300  001AE6  262D               	addwf	___fladd@b,f,c
  8301  001AE8  0E00               	movlw	0
  8302  001AEA  222E               	addwfc	___fladd@b+1,f,c
  8303  001AEC  222F               	addwfc	___fladd@b+2,f,c
  8304  001AEE  2230               	addwfc	___fladd@b+3,f,c
  8305  001AF0  A030               	btfss	___fladd@b+3,0,c
  8306  001AF2  D018               	goto	l7850
  8307  001AF4  C02D  F035         	movff	___fladd@b,??___fladd
  8308  001AF8  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  8309  001AFC  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  8310  001B00  C030  F038         	movff	___fladd@b+3,??___fladd+3
  8311  001B04  3438               	rlcf	??___fladd+3,w,c
  8312  001B06  3238               	rrcf	??___fladd+3,f,c
  8313  001B08  3237               	rrcf	??___fladd+2,f,c
  8314  001B0A  3236               	rrcf	??___fladd+1,f,c
  8315  001B0C  3235               	rrcf	??___fladd,f,c
  8316  001B0E  C035  F02D         	movff	??___fladd,___fladd@b
  8317  001B12  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  8318  001B16  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  8319  001B1A  C038  F030         	movff	??___fladd+3,___fladd@b+3
  8320  001B1E  283B               	incf	___fladd@bexp,w,c
  8321  001B20  A4D8               	btfss	status,2,c
  8322  001B22  2A3B               	incf	___fladd@bexp,f,c
  8323  001B24                     l7850:
  8324  001B24  283B               	incf	___fladd@bexp,w,c
  8325  001B26  B4D8               	btfsc	status,2,c
  8326  001B28  D003               	goto	u9090
  8327  001B2A  503B               	movf	___fladd@bexp,w,c
  8328  001B2C  A4D8               	btfss	status,2,c
  8329  001B2E  D00D               	goto	l7858
  8330  001B30                     u9090:
  8331  001B30  0E00               	movlw	0
  8332  001B32  6E2D               	movwf	___fladd@b,c
  8333  001B34  0E00               	movlw	0
  8334  001B36  6E2E               	movwf	___fladd@b+1,c
  8335  001B38  0E00               	movlw	0
  8336  001B3A  6E2F               	movwf	___fladd@b+2,c
  8337  001B3C  0E00               	movlw	0
  8338  001B3E  6E30               	movwf	___fladd@b+3,c
  8339  001B40  503B               	movf	___fladd@bexp,w,c
  8340  001B42  A4D8               	btfss	status,2,c
  8341  001B44  D002               	goto	l7858
  8342  001B46  0E00               	movlw	0
  8343  001B48  6E39               	movwf	___fladd@signs,c
  8344  001B4A                     l7858:
  8345  001B4A  A03B               	btfss	___fladd@bexp,0,c
  8346  001B4C  D002               	goto	l7862
  8347  001B4E  8E2F               	bsf	___fladd@b+2,7,c
  8348  001B50  D001               	goto	l7864
  8349  001B52                     l7862:
  8350  001B52  9E2F               	bcf	___fladd@b+2,7,c
  8351  001B54                     l7864:
  8352  001B54  90D8               	bcf	status,0,c
  8353  001B56  303B               	rrcf	___fladd@bexp,w,c
  8354  001B58  6E30               	movwf	___fladd@b+3,c
  8355  001B5A  BE39               	btfsc	___fladd@signs,7,c
  8356  001B5C  8E30               	bsf	___fladd@b+3,7,c
  8357  001B5E  C02D  F02D         	movff	___fladd@b,?___fladd
  8358  001B62  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  8359  001B66  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  8360  001B6A  C030  F030         	movff	___fladd@b+3,?___fladd+3
  8361  001B6E  0012               	return		;funcret
  8362  001B70                     __end_of___fladd:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function _init_motor_PWM *****************
  8366 ;; Defined at:
  8367 ;;		line 265 in file "main.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;Total ram usage:        0 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    2
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_doOperation
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text31
  8396  003912                     __ptext31:
  8397                           	opt callstack 0
  8398  003912                     _init_motor_PWM:
  8399                           	opt callstack 27
  8400                           
  8401                           ;main.c: 273:     TRISCbits.TRISC2 = 1;
  8402                           
  8403                           ;incstack = 0
  8404  003912  8494               	bsf	3988,2,c	;volatile
  8405                           
  8406                           ;main.c: 274:     TRISCbits.TRISC1 = 1;
  8407  003914  8294               	bsf	3988,1,c	;volatile
  8408                           
  8409                           ;main.c: 277:     const unsigned long FREQUENCY = 1000;;main.c: 278:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 279:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  8410  003916  0E9B               	movlw	155
  8411  003918  6ECB               	movwf	4043,c	;volatile
  8412                           
  8413                           ;main.c: 282:     P1M1 = 0;
  8414  00391A  9EBD               	bcf	4029,7,c	;volatile
  8415                           
  8416                           ;main.c: 283:     P1M0 = 0;
  8417  00391C  9CBD               	bcf	4029,6,c	;volatile
  8418                           
  8419                           ;main.c: 284:     CCP1M3 = 1;
  8420  00391E  86BD               	bsf	4029,3,c	;volatile
  8421                           
  8422                           ;main.c: 285:     CCP1M2 = 1;
  8423  003920  84BD               	bsf	4029,2,c	;volatile
  8424                           
  8425                           ;main.c: 286:     CCP1M1 = 0;
  8426  003922  92BD               	bcf	4029,1,c	;volatile
  8427                           
  8428                           ;main.c: 287:     CCP1M0 = 0;
  8429  003924  90BD               	bcf	4029,0,c	;volatile
  8430                           
  8431                           ;main.c: 289:     CCP2M3 = 1;
  8432  003926  86BA               	bsf	4026,3,c	;volatile
  8433                           
  8434                           ;main.c: 290:     CCP2M2 = 1;
  8435  003928  84BA               	bsf	4026,2,c	;volatile
  8436                           
  8437                           ;main.c: 291:     CCP2M1 = 0;
  8438  00392A  92BA               	bcf	4026,1,c	;volatile
  8439                           
  8440                           ;main.c: 292:     CCP2M0 = 0;
  8441  00392C  90BA               	bcf	4026,0,c	;volatile
  8442                           
  8443                           ;main.c: 295:     T2CKPS0 = 1;
  8444  00392E  80CA               	bsf	4042,0,c	;volatile
  8445                           
  8446                           ;main.c: 296:     T2CKPS1 = 1;
  8447  003930  82CA               	bsf	4042,1,c	;volatile
  8448                           
  8449                           ;main.c: 299:     TMR2ON = 1;
  8450  003932  84CA               	bsf	4042,2,c	;volatile
  8451                           
  8452                           ;main.c: 302:     TRISCbits.TRISC2 = 0;
  8453  003934  9494               	bcf	3988,2,c	;volatile
  8454                           
  8455                           ;main.c: 303:     TRISCbits.TRISC1 = 0;
  8456  003936  9294               	bcf	3988,1,c	;volatile
  8457  003938  0012               	return		;funcret
  8458  00393A                     __end_of_init_motor_PWM:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function ___awmod *****************
  8462 ;; Defined at:
  8463 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  dividend        2    5[COMRAM] int 
  8466 ;;  divisor         2    7[COMRAM] int 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;  sign            1   10[COMRAM] unsigned char 
  8469 ;;  counter         1    9[COMRAM] unsigned char 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  2    5[COMRAM] int 
  8472 ;; Registers used:
  8473 ;;		wreg, status,2, status,0
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;Total ram usage:        6 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:    2
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_doOperation
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text32
  8494  003212                     __ptext32:
  8495                           	opt callstack 0
  8496  003212                     ___awmod:
  8497                           	opt callstack 27
  8498                           
  8499                           ;incstack = 0
  8500  003212  0E00               	movlw	0
  8501  003214  6E0B               	movwf	___awmod@sign,c
  8502  003216  AE07               	btfss	___awmod@dividend+1,7,c
  8503  003218  D006               	goto	l8294
  8504  00321A  6C06               	negf	___awmod@dividend,c
  8505  00321C  1E07               	comf	___awmod@dividend+1,f,c
  8506  00321E  B0D8               	btfsc	status,0,c
  8507  003220  2A07               	incf	___awmod@dividend+1,f,c
  8508  003222  0E01               	movlw	1
  8509  003224  6E0B               	movwf	___awmod@sign,c
  8510  003226                     l8294:
  8511  003226  AE09               	btfss	___awmod@divisor+1,7,c
  8512  003228  D004               	goto	l8298
  8513  00322A  6C08               	negf	___awmod@divisor,c
  8514  00322C  1E09               	comf	___awmod@divisor+1,f,c
  8515  00322E  B0D8               	btfsc	status,0,c
  8516  003230  2A09               	incf	___awmod@divisor+1,f,c
  8517  003232                     l8298:
  8518  003232  5008               	movf	___awmod@divisor,w,c
  8519  003234  1009               	iorwf	___awmod@divisor+1,w,c
  8520  003236  B4D8               	btfsc	status,2,c
  8521  003238  D018               	goto	l8314
  8522  00323A  0E01               	movlw	1
  8523  00323C  6E0A               	movwf	___awmod@counter,c
  8524  00323E  D004               	goto	l8304
  8525  003240                     l8302:
  8526  003240  90D8               	bcf	status,0,c
  8527  003242  3608               	rlcf	___awmod@divisor,f,c
  8528  003244  3609               	rlcf	___awmod@divisor+1,f,c
  8529  003246  2A0A               	incf	___awmod@counter,f,c
  8530  003248                     l8304:
  8531  003248  AE09               	btfss	___awmod@divisor+1,7,c
  8532  00324A  D7FA               	goto	l8302
  8533  00324C                     u9620:
  8534  00324C  5008               	movf	___awmod@divisor,w,c
  8535  00324E  5C06               	subwf	___awmod@dividend,w,c
  8536  003250  5009               	movf	___awmod@divisor+1,w,c
  8537  003252  5807               	subwfb	___awmod@dividend+1,w,c
  8538  003254  A0D8               	btfss	status,0,c
  8539  003256  D004               	goto	l8310
  8540  003258  5008               	movf	___awmod@divisor,w,c
  8541  00325A  5E06               	subwf	___awmod@dividend,f,c
  8542  00325C  5009               	movf	___awmod@divisor+1,w,c
  8543  00325E  5A07               	subwfb	___awmod@dividend+1,f,c
  8544  003260                     l8310:
  8545  003260  90D8               	bcf	status,0,c
  8546  003262  3209               	rrcf	___awmod@divisor+1,f,c
  8547  003264  3208               	rrcf	___awmod@divisor,f,c
  8548  003266  2E0A               	decfsz	___awmod@counter,f,c
  8549  003268  D7F1               	goto	u9620
  8550  00326A                     l8314:
  8551  00326A  500B               	movf	___awmod@sign,w,c
  8552  00326C  B4D8               	btfsc	status,2,c
  8553  00326E  D004               	goto	l8318
  8554  003270  6C06               	negf	___awmod@dividend,c
  8555  003272  1E07               	comf	___awmod@dividend+1,f,c
  8556  003274  B0D8               	btfsc	status,0,c
  8557  003276  2A07               	incf	___awmod@dividend+1,f,c
  8558  003278                     l8318:
  8559  003278  C006  F006         	movff	___awmod@dividend,?___awmod
  8560  00327C  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  8561  003280  0012               	return		;funcret
  8562  003282                     __end_of___awmod:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _TIMER_INIT *****************
  8566 ;; Defined at:
  8567 ;;		line 218 in file "main.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;		None
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1    wreg      void 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;Total ram usage:        0 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    2
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_doOperation
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text33
  8596  003A12                     __ptext33:
  8597                           	opt callstack 0
  8598  003A12                     _TIMER_INIT:
  8599                           	opt callstack 27
  8600                           
  8601                           ;main.c: 219:     T0CONbits.TMR0ON = 0;
  8602                           
  8603                           ;incstack = 0
  8604  003A12  9ED5               	bcf	4053,7,c	;volatile
  8605                           
  8606                           ;main.c: 220:     T0CONbits.T08BIT = 0;
  8607  003A14  9CD5               	bcf	4053,6,c	;volatile
  8608                           
  8609                           ;main.c: 221:     T0CONbits.T0CS = 0;
  8610  003A16  9AD5               	bcf	4053,5,c	;volatile
  8611                           
  8612                           ;main.c: 222:     T0CONbits.PSA = 0;
  8613  003A18  96D5               	bcf	4053,3,c	;volatile
  8614                           
  8615                           ;main.c: 223:     T0CONbits.T0PS = 0b000;
  8616  003A1A  0EF8               	movlw	-8
  8617  003A1C  16D5               	andwf	4053,f,c	;volatile
  8618                           
  8619                           ;main.c: 224:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  8620  003A1E  0EFB               	movlw	251
  8621  003A20  6ED7               	movwf	4055,c	;volatile
  8622                           
  8623                           ;main.c: 225:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  8624  003A22  0E1E               	movlw	30
  8625  003A24  6ED6               	movwf	4054,c	;volatile
  8626                           
  8627                           ;main.c: 226:     T0CONbits.TMR0ON = 1;
  8628  003A26  8ED5               	bsf	4053,7,c	;volatile
  8629                           
  8630                           ;main.c: 227:     INTCONbits.TMR0IE = 1;
  8631  003A28  8AF2               	bsf	4082,5,c	;volatile
  8632                           
  8633                           ;main.c: 229:     INTCONbits.GIE = 1;
  8634  003A2A  8EF2               	bsf	4082,7,c	;volatile
  8635                           
  8636                           ;main.c: 230:     INTCONbits.PEIE = 1;
  8637  003A2C  8CF2               	bsf	4082,6,c	;volatile
  8638  003A2E  0012               	return		;funcret
  8639  003A30                     __end_of_TIMER_INIT:
  8640                           	opt callstack 0
  8641                           
  8642 ;; *************** function _doDisplayLog *****************
  8643 ;; Defined at:
  8644 ;;		line 43 in file "main.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  logNumber       2   14[BANK0 ] int 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  keyValue        1   22[BANK0 ] unsigned char 
  8649 ;;  keypress        1   20[BANK0 ] unsigned char 
  8650 ;;  currentPole     2   23[BANK0 ] int 
  8651 ;;  currentDispl    1   21[BANK0 ] enum E3250
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;Total ram usage:       13 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:   13
  8668 ;; This function calls:
  8669 ;;		___wmul
  8670 ;;		_lcdInst
  8671 ;;		_printf
  8672 ;; This function is called by:
  8673 ;;		_main
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text34
  8678  000E52                     __ptext34:
  8679                           	opt callstack 0
  8680  000E52                     _doDisplayLog:
  8681                           	opt callstack 17
  8682                           
  8683                           ;main.c: 44:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  8684                           
  8685                           ;incstack = 0
  8686  000E52  0E80               	movlw	128
  8687  000E54  EC47  F01D         	call	_lcdInst
  8688  000E58  0E07               	movlw	7
  8689  000E5A  0100               	movlb	0	; () banked
  8690  000E5C  6F90               	movwf	??_doDisplayLog& (0+255),b
  8691  000E5E  0E7D               	movlw	125
  8692  000E60                     u10347:
  8693  000E60  2EE8               	decfsz	wreg,f,c
  8694  000E62  D7FE               	bra	u10347
  8695  000E64  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8696  000E66  D7FC               	bra	u10347
  8697                           
  8698                           ;main.c: 49:     int currentPole = 1;
  8699  000E68  0E00               	movlw	0
  8700  000E6A  0100               	movlb	0	; () banked
  8701  000E6C  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8702  000E6E  0E01               	movlw	1
  8703  000E70  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;main.c: 51:     enum displayStates currentDisplayState = opTime;
  8707  000E72  0E00               	movlw	0
  8708  000E74  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8709  000E76  D134               	goto	l8378
  8710  000E78                     l8330:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;main.c: 56:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8714  000E78  0E80               	movlw	128
  8715  000E7A  EC47  F01D         	call	_lcdInst
  8716  000E7E  0E07               	movlw	7
  8717  000E80  0100               	movlb	0	; () banked
  8718  000E82  6F90               	movwf	??_doDisplayLog& (0+255),b
  8719  000E84  0E7D               	movlw	125
  8720  000E86                     u10357:
  8721  000E86  2EE8               	decfsz	wreg,f,c
  8722  000E88  D7FE               	bra	u10357
  8723  000E8A  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8724  000E8C  D7FC               	bra	u10357
  8725                           
  8726                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8727  000E8E  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8728  000E92  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8729  000E96  0E00               	movlw	0
  8730  000E98  6E09               	movwf	___wmul@multiplicand+1,c
  8731  000E9A  0E60               	movlw	96
  8732  000E9C  6E08               	movwf	___wmul@multiplicand,c
  8733  000E9E  ECB1  F01C         	call	___wmul	;wreg free
  8734  000EA2  0E78               	movlw	low _logs
  8735  000EA4  2406               	addwf	?___wmul,w,c
  8736  000EA6  6ED9               	movwf	fsr2l,c
  8737  000EA8  0E01               	movlw	high _logs
  8738  000EAA  2007               	addwfc	?___wmul+1,w,c
  8739  000EAC  6EDA               	movwf	fsr2h,c
  8740  000EAE  CFDE F099          	movff	postinc2,_doDisplayLog$2224
  8741  000EB2  CFDD F09A          	movff	postdec2,_doDisplayLog$2224+1
  8742                           
  8743                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8744  000EB6  0EE3               	movlw	low STR_1
  8745  000EB8  0100               	movlb	0	; () banked
  8746  000EBA  6F80               	movwf	printf@fmt& (0+255),b
  8747  000EBC  0EFF               	movlw	high STR_1
  8748  000EBE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8749  000EC0  0E97               	movlw	low STR_2
  8750  000EC2  6F82               	movwf	(?_printf+2)& (0+255),b
  8751  000EC4  0EFF               	movlw	high STR_2
  8752  000EC6  6F83               	movwf	(?_printf+3)& (0+255),b
  8753  000EC8  C099  F084         	movff	_doDisplayLog$2224,?_printf+4
  8754  000ECC  C09A  F085         	movff	_doDisplayLog$2224+1,?_printf+5
  8755  000ED0  0EE8               	movlw	low (STR_1+5)
  8756  000ED2  6F86               	movwf	(?_printf+6)& (0+255),b
  8757  000ED4  0EFF               	movlw	high (STR_1+5)
  8758  000ED6  6F87               	movwf	(?_printf+7)& (0+255),b
  8759  000ED8  EC9D  F01C         	call	_printf	;wreg free
  8760  000EDC  0EC0               	movlw	192
  8761  000EDE  EC47  F01D         	call	_lcdInst
  8762                           
  8763                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8764  000EE2  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8765  000EE6  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8766  000EEA  0E00               	movlw	0
  8767  000EEC  6E09               	movwf	___wmul@multiplicand+1,c
  8768  000EEE  0E60               	movlw	96
  8769  000EF0  6E08               	movwf	___wmul@multiplicand,c
  8770  000EF2  ECB1  F01C         	call	___wmul	;wreg free
  8771  000EF6  0E7A               	movlw	low (_logs+2)
  8772  000EF8  2406               	addwf	?___wmul,w,c
  8773  000EFA  6ED9               	movwf	fsr2l,c
  8774  000EFC  0E01               	movlw	high (_logs+2)
  8775  000EFE  2007               	addwfc	?___wmul+1,w,c
  8776  000F00  6EDA               	movwf	fsr2h,c
  8777  000F02  CFDE F099          	movff	postinc2,_doDisplayLog$2224
  8778  000F06  CFDD F09A          	movff	postdec2,_doDisplayLog$2224+1
  8779                           
  8780                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8781  000F0A  0EDE               	movlw	low (STR_10+4)
  8782  000F0C  0100               	movlb	0	; () banked
  8783  000F0E  6F80               	movwf	printf@fmt& (0+255),b
  8784  000F10  0EFF               	movlw	high (STR_10+4)
  8785  000F12  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8786  000F14  0EB7               	movlw	low STR_5
  8787  000F16  6F82               	movwf	(?_printf+2)& (0+255),b
  8788  000F18  0EFE               	movlw	high STR_5
  8789  000F1A  6F83               	movwf	(?_printf+3)& (0+255),b
  8790  000F1C  C099  F084         	movff	_doDisplayLog$2224,?_printf+4
  8791  000F20  C09A  F085         	movff	_doDisplayLog$2224+1,?_printf+5
  8792  000F24  EC9D  F01C         	call	_printf	;wreg free
  8793  000F28  0E90               	movlw	144
  8794  000F2A  EC47  F01D         	call	_lcdInst
  8795                           
  8796                           ;main.c: 61:                 printf("%s","(1) POLE INFO");
  8797  000F2E  0EE7               	movlw	low (STR_1+4)
  8798  000F30  0100               	movlb	0	; () banked
  8799  000F32  6F80               	movwf	printf@fmt& (0+255),b
  8800  000F34  0EFF               	movlw	high (STR_1+4)
  8801  000F36  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8802  000F38  0E00               	movlw	low STR_7
  8803  000F3A  6F82               	movwf	(?_printf+2)& (0+255),b
  8804  000F3C  0EFF               	movlw	high STR_7
  8805  000F3E  6F83               	movwf	(?_printf+3)& (0+255),b
  8806  000F40  EC9D  F01C         	call	_printf	;wreg free
  8807  000F44  0ED0               	movlw	208
  8808  000F46  EC47  F01D         	call	_lcdInst
  8809                           
  8810                           ;main.c: 63:                 printf("%s","(2) SAVE & EXIT");
  8811  000F4A  0EE7               	movlw	low (STR_1+4)
  8812  000F4C  0100               	movlb	0	; () banked
  8813  000F4E  6F80               	movwf	printf@fmt& (0+255),b
  8814  000F50  0EFF               	movlw	high (STR_1+4)
  8815  000F52  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8816  000F54  0E97               	movlw	low STR_9
  8817  000F56  6F82               	movwf	(?_printf+2)& (0+255),b
  8818  000F58  0EFE               	movlw	high STR_9
  8819  000F5A  6F83               	movwf	(?_printf+3)& (0+255),b
  8820  000F5C  EC9D  F01C         	call	_printf	;wreg free
  8821                           
  8822                           ;main.c: 64:                 break;
  8823  000F60  D0CE               	goto	l8380
  8824  000F62                     l8352:
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;main.c: 66:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8828  000F62  0E80               	movlw	128
  8829  000F64  EC47  F01D         	call	_lcdInst
  8830  000F68  0E07               	movlw	7
  8831  000F6A  0100               	movlb	0	; () banked
  8832  000F6C  6F90               	movwf	??_doDisplayLog& (0+255),b
  8833  000F6E  0E7D               	movlw	125
  8834  000F70                     u10367:
  8835  000F70  2EE8               	decfsz	wreg,f,c
  8836  000F72  D7FE               	bra	u10367
  8837  000F74  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8838  000F76  D7FC               	bra	u10367
  8839                           
  8840                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8841  000F78  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8842  000F7C  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8843  000F80  0E00               	movlw	0
  8844  000F82  6E09               	movwf	___wmul@multiplicand+1,c
  8845  000F84  0E60               	movlw	96
  8846  000F86  6E08               	movwf	___wmul@multiplicand,c
  8847  000F88  ECB1  F01C         	call	___wmul	;wreg free
  8848  000F8C  0E7C               	movlw	low (_logs+4)
  8849  000F8E  2406               	addwf	?___wmul,w,c
  8850  000F90  6ED9               	movwf	fsr2l,c
  8851  000F92  0E01               	movlw	high (_logs+4)
  8852  000F94  2007               	addwfc	?___wmul+1,w,c
  8853  000F96  6EDA               	movwf	fsr2h,c
  8854  000F98  CFDE F099          	movff	postinc2,_doDisplayLog$2224
  8855  000F9C  CFDD F09A          	movff	postdec2,_doDisplayLog$2224+1
  8856                           
  8857                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8858  000FA0  0EDA               	movlw	low STR_10
  8859  000FA2  0100               	movlb	0	; () banked
  8860  000FA4  6F80               	movwf	printf@fmt& (0+255),b
  8861  000FA6  0EFF               	movlw	high STR_10
  8862  000FA8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8863  000FAA  0EEA               	movlw	low STR_11
  8864  000FAC  6F82               	movwf	(?_printf+2)& (0+255),b
  8865  000FAE  0EFF               	movlw	high STR_11
  8866  000FB0  6F83               	movwf	(?_printf+3)& (0+255),b
  8867  000FB2  C097  F084         	movff	doDisplayLog@currentPole,?_printf+4
  8868  000FB6  C098  F085         	movff	doDisplayLog@currentPole+1,?_printf+5
  8869  000FBA  0EFC               	movlw	low STR_12
  8870  000FBC  6F86               	movwf	(?_printf+6)& (0+255),b
  8871  000FBE  0EFF               	movlw	high STR_12
  8872  000FC0  6F87               	movwf	(?_printf+7)& (0+255),b
  8873  000FC2  C099  F088         	movff	_doDisplayLog$2224,?_printf+8
  8874  000FC6  C09A  F089         	movff	_doDisplayLog$2224+1,?_printf+9
  8875  000FCA  EC9D  F01C         	call	_printf	;wreg free
  8876  000FCE  0EC0               	movlw	192
  8877  000FD0  EC47  F01D         	call	_lcdInst
  8878                           
  8879                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8880  000FD4  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8881  000FD8  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8882  000FDC  90D8               	bcf	status,0,c
  8883  000FDE  0100               	movlb	0	; () banked
  8884  000FE0  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8885  000FE2  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8886  000FE4  90D8               	bcf	status,0,c
  8887  000FE6  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8888  000FE8  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8889  000FEA  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8890  000FEE  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8891  000FF2  0E00               	movlw	0
  8892  000FF4  6E09               	movwf	___wmul@multiplicand+1,c
  8893  000FF6  0E60               	movlw	96
  8894  000FF8  6E08               	movwf	___wmul@multiplicand,c
  8895  000FFA  ECB1  F01C         	call	___wmul	;wreg free
  8896  000FFE  0E78               	movlw	low _logs
  8897  001000  0100               	movlb	0	; () banked
  8898  001002  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8899  001004  0E01               	movlw	high _logs
  8900  001006  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8901  001008  0E02               	movlw	2
  8902  00100A  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8903  00100C  0E00               	movlw	0
  8904  00100E  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8905  001010  5006               	movf	?___wmul,w,c
  8906  001012  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8907  001014  5007               	movf	?___wmul+1,w,c
  8908  001016  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8909  001018  5190               	movf	??_doDisplayLog& (0+255),w,b
  8910  00101A  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8911  00101C  6ED9               	movwf	fsr2l,c
  8912  00101E  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8913  001020  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8914  001022  6EDA               	movwf	fsr2h,c
  8915  001024  CFDE F099          	movff	postinc2,_doDisplayLog$2224
  8916  001028  CFDD F09A          	movff	postdec2,_doDisplayLog$2224+1
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8920  00102C  0EDE               	movlw	low (STR_10+4)
  8921  00102E  6F80               	movwf	printf@fmt& (0+255),b
  8922  001030  0EFF               	movlw	high (STR_10+4)
  8923  001032  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8924  001034  0EE4               	movlw	low STR_14
  8925  001036  6F82               	movwf	(?_printf+2)& (0+255),b
  8926  001038  0EFE               	movlw	high STR_14
  8927  00103A  6F83               	movwf	(?_printf+3)& (0+255),b
  8928  00103C  C099  F084         	movff	_doDisplayLog$2224,?_printf+4
  8929  001040  C09A  F085         	movff	_doDisplayLog$2224+1,?_printf+5
  8930  001044  EC9D  F01C         	call	_printf	;wreg free
  8931  001048  0E90               	movlw	144
  8932  00104A  EC47  F01D         	call	_lcdInst
  8933                           
  8934                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8935  00104E  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8936  001052  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8937  001056  90D8               	bcf	status,0,c
  8938  001058  0100               	movlb	0	; () banked
  8939  00105A  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8940  00105C  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8941  00105E  90D8               	bcf	status,0,c
  8942  001060  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8943  001062  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8944  001064  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8945  001068  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8946  00106C  0E00               	movlw	0
  8947  00106E  6E09               	movwf	___wmul@multiplicand+1,c
  8948  001070  0E60               	movlw	96
  8949  001072  6E08               	movwf	___wmul@multiplicand,c
  8950  001074  ECB1  F01C         	call	___wmul	;wreg free
  8951  001078  0E78               	movlw	low _logs
  8952  00107A  0100               	movlb	0	; () banked
  8953  00107C  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8954  00107E  0E01               	movlw	high _logs
  8955  001080  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8956  001082  0E04               	movlw	4
  8957  001084  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8958  001086  0E00               	movlw	0
  8959  001088  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8960  00108A  5006               	movf	?___wmul,w,c
  8961  00108C  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8962  00108E  5007               	movf	?___wmul+1,w,c
  8963  001090  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8964  001092  5190               	movf	??_doDisplayLog& (0+255),w,b
  8965  001094  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8966  001096  6ED9               	movwf	fsr2l,c
  8967  001098  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8968  00109A  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8969  00109C  6EDA               	movwf	fsr2h,c
  8970  00109E  CFDE F099          	movff	postinc2,_doDisplayLog$2224
  8971  0010A2  CFDD F09A          	movff	postdec2,_doDisplayLog$2224+1
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8975  0010A6  0EDE               	movlw	low (STR_10+4)
  8976  0010A8  6F80               	movwf	printf@fmt& (0+255),b
  8977  0010AA  0EFF               	movlw	high (STR_10+4)
  8978  0010AC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8979  0010AE  0E77               	movlw	low STR_16
  8980  0010B0  6F82               	movwf	(?_printf+2)& (0+255),b
  8981  0010B2  0EFE               	movlw	high STR_16
  8982  0010B4  6F83               	movwf	(?_printf+3)& (0+255),b
  8983  0010B6  C099  F084         	movff	_doDisplayLog$2224,?_printf+4
  8984  0010BA  C09A  F085         	movff	_doDisplayLog$2224+1,?_printf+5
  8985  0010BE  EC9D  F01C         	call	_printf	;wreg free
  8986  0010C2  0ED0               	movlw	208
  8987  0010C4  EC47  F01D         	call	_lcdInst
  8988                           
  8989                           ;main.c: 73:                 printf("%s","1<- 2-> 3MENU");
  8990  0010C8  0EE7               	movlw	low (STR_1+4)
  8991  0010CA  0100               	movlb	0	; () banked
  8992  0010CC  6F80               	movwf	printf@fmt& (0+255),b
  8993  0010CE  0EFF               	movlw	high (STR_1+4)
  8994  0010D0  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8995  0010D2  0E1C               	movlw	low STR_18
  8996  0010D4  6F82               	movwf	(?_printf+2)& (0+255),b
  8997  0010D6  0EFF               	movlw	high STR_18
  8998  0010D8  6F83               	movwf	(?_printf+3)& (0+255),b
  8999  0010DA  EC9D  F01C         	call	_printf	;wreg free
  9000                           
  9001                           ;main.c: 74:                 break;
  9002  0010DE  D00F               	goto	l8380
  9003  0010E0                     l8378:
  9004  0010E0  0100               	movlb	0	; () banked
  9005  0010E2  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  9006  0010E4  6F90               	movwf	??_doDisplayLog& (0+255),b
  9007  0010E6  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  9008                           
  9009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9010                           ; Switch size 1, requested type "simple"
  9011                           ; Number of cases is 1, Range of values is 0 to 0
  9012                           ; switch strategies available:
  9013                           ; Name         Instructions Cycles
  9014                           ; simple_byte            4     3 (average)
  9015                           ;	Chosen strategy is simple_byte
  9016  0010E8  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  9017  0010EA  0A00               	xorlw	0	; case 0
  9018  0010EC  A4D8               	btfss	status,2,c
  9019  0010EE  D007               	goto	l8380
  9020                           
  9021                           ; BSR set to: 0
  9022                           ; Switch size 1, requested type "simple"
  9023                           ; Number of cases is 2, Range of values is 0 to 1
  9024                           ; switch strategies available:
  9025                           ; Name         Instructions Cycles
  9026                           ; simple_byte            7     4 (average)
  9027                           ;	Chosen strategy is simple_byte
  9028  0010F0  5190               	movf	??_doDisplayLog& (0+255),w,b
  9029  0010F2  0A00               	xorlw	0	; case 0
  9030  0010F4  B4D8               	btfsc	status,2,c
  9031  0010F6  D6C0               	goto	l8330
  9032  0010F8  0A01               	xorlw	1	; case 1
  9033  0010FA  B4D8               	btfsc	status,2,c
  9034  0010FC  D732               	goto	l8352
  9035  0010FE                     l8380:
  9036                           
  9037                           ;main.c: 77:         if(keyPressed){
  9038  0010FE  0100               	movlb	0	; () banked
  9039  001100  51D2               	movf	_keyPressed& (0+255),w,b	;volatile
  9040  001102  B4D8               	btfsc	status,2,c
  9041  001104  D073               	goto	l8420
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;main.c: 80:             keyPressed = 0;
  9045  001106  0E00               	movlw	0
  9046  001108  6FD2               	movwf	_keyPressed& (0+255),b	;volatile
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;main.c: 83:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  9050  00110A  3881               	swapf	3969,w,c	;volatile
  9051  00110C  0B0F               	andlw	15
  9052  00110E  0B0F               	andlw	15
  9053  001110  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;main.c: 84:             char keyValue = keys[keypress];
  9057  001112  0E43               	movlw	low _keys
  9058  001114  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  9059  001116  6EF6               	movwf	tblptrl,c
  9060  001118  6AF7               	clrf	tblptrh,c
  9061  00111A  0EFE               	movlw	high _keys
  9062  00111C  22F7               	addwfc	tblptrh,f,c
  9063  00111E                     	if	0	;There are less than 3 active tblptr bytes
  9064  00111E                     	endif
  9065  00111E  0008               	tblrd		*
  9066  001120  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;main.c: 85:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  9070  001124  0E01               	movlw	1
  9071  001126  EC47  F01D         	call	_lcdInst
  9072  00112A  0E11               	movlw	17
  9073  00112C  0100               	movlb	0	; () banked
  9074  00112E  6F90               	movwf	??_doDisplayLog& (0+255),b
  9075  001130  0E3A               	movlw	58
  9076  001132                     u10377:
  9077  001132  2EE8               	decfsz	wreg,f,c
  9078  001134  D7FE               	bra	u10377
  9079  001136  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  9080  001138  D7FC               	bra	u10377
  9081  00113A  F000               	nop	
  9082                           
  9083                           ;main.c: 86:             switch (currentDisplayState){
  9084  00113C  D048               	goto	l8418
  9085  00113E                     l8392:
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;main.c: 88:                     if (keyValue == '1'){
  9089  00113E  0E31               	movlw	49
  9090  001140  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  9091  001142  A4D8               	btfss	status,2,c
  9092  001144  D003               	goto	l8396
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;main.c: 89:                         currentDisplayState = pole;
  9096  001146  0E01               	movlw	1
  9097  001148  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  9098                           
  9099                           ;main.c: 90:                     } else if (keyValue == '2'){
  9100  00114A  D050               	goto	l8420
  9101  00114C                     l8396:
  9102                           
  9103                           ; BSR set to: 0
  9104  00114C  0E32               	movlw	50
  9105  00114E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  9106  001150  B4D8               	btfsc	status,2,c
  9107  001152  0012               	return	
  9108  001154  D04B               	goto	l8420
  9109  001156                     l8400:
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;main.c: 95:                     if (keyValue == '3'){
  9113  001156  0E33               	movlw	51
  9114  001158  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  9115  00115A  A4D8               	btfss	status,2,c
  9116  00115C  D007               	goto	l8404
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;main.c: 96:                         currentDisplayState = opTime;
  9120  00115E  0E00               	movlw	0
  9121  001160  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  9122                           
  9123                           ;main.c: 97:                         currentPole = 1;
  9124  001162  0E00               	movlw	0
  9125  001164  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  9126  001166  0E01               	movlw	1
  9127  001168  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  9128                           
  9129                           ;main.c: 99:                     } else if (keyValue == '2'){
  9130  00116A  D040               	goto	l8420
  9131  00116C                     l8404:
  9132                           
  9133                           ; BSR set to: 0
  9134  00116C  0E32               	movlw	50
  9135  00116E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  9136  001170  A4D8               	btfss	status,2,c
  9137  001172  D01E               	goto	l8410
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;main.c: 100:                         if(currentPole < logs[logNumber][2]){
  9141  001174  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9142  001178  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9143  00117C  0E00               	movlw	0
  9144  00117E  6E09               	movwf	___wmul@multiplicand+1,c
  9145  001180  0E60               	movlw	96
  9146  001182  6E08               	movwf	___wmul@multiplicand,c
  9147  001184  ECB1  F01C         	call	___wmul	;wreg free
  9148  001188  0E7C               	movlw	low (_logs+4)
  9149  00118A  2406               	addwf	?___wmul,w,c
  9150  00118C  6ED9               	movwf	fsr2l,c
  9151  00118E  0E01               	movlw	high (_logs+4)
  9152  001190  2007               	addwfc	?___wmul+1,w,c
  9153  001192  6EDA               	movwf	fsr2h,c
  9154  001194  50DE               	movf	postinc2,w,c
  9155  001196  0100               	movlb	0	; () banked
  9156  001198  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  9157  00119A  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  9158  00119C  0A80               	xorlw	128
  9159  00119E  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  9160  0011A0  50DE               	movf	postinc2,w,c
  9161  0011A2  0A80               	xorlw	128
  9162  0011A4  5992               	subwfb	(??_doDisplayLog+2)& (0+255),w,b
  9163  0011A6  B0D8               	btfsc	status,0,c
  9164  0011A8  D021               	goto	l8420
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;main.c: 101:                             currentPole++;
  9168  0011AA  4B97               	infsnz	doDisplayLog@currentPole& (0+255),f,b
  9169  0011AC  2B98               	incf	(doDisplayLog@currentPole+1)& (0+255),f,b
  9170  0011AE  D01E               	goto	l8420
  9171  0011B0                     l8410:
  9172                           
  9173                           ; BSR set to: 0
  9174  0011B0  0E31               	movlw	49
  9175  0011B2  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  9176  0011B4  B4D8               	btfsc	status,2,c
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;main.c: 104:                         if (currentPole > 1){
  9180  0011B6  BF98               	btfsc	(doDisplayLog@currentPole+1)& (0+255),7,b
  9181  0011B8  D019               	goto	l8420
  9182  0011BA  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  9183  0011BC  E104               	bnz	u9720
  9184  0011BE  0E02               	movlw	2
  9185  0011C0  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  9186  0011C2  A0D8               	btfss	status,0,c
  9187  0011C4  D013               	goto	l8420
  9188  0011C6                     u9720:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;main.c: 105:                             currentPole--;
  9192  0011C6  0797               	decf	doDisplayLog@currentPole& (0+255),f,b
  9193  0011C8  A0D8               	btfss	status,0,c
  9194  0011CA  0798               	decf	(doDisplayLog@currentPole+1)& (0+255),f,b
  9195  0011CC  D00F               	goto	l8420
  9196  0011CE                     l8418:
  9197  0011CE  0100               	movlb	0	; () banked
  9198  0011D0  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  9199  0011D2  6F90               	movwf	??_doDisplayLog& (0+255),b
  9200  0011D4  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  9201                           
  9202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9203                           ; Switch size 1, requested type "simple"
  9204                           ; Number of cases is 1, Range of values is 0 to 0
  9205                           ; switch strategies available:
  9206                           ; Name         Instructions Cycles
  9207                           ; simple_byte            4     3 (average)
  9208                           ;	Chosen strategy is simple_byte
  9209  0011D6  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  9210  0011D8  0A00               	xorlw	0	; case 0
  9211  0011DA  A4D8               	btfss	status,2,c
  9212  0011DC  D007               	goto	l8420
  9213                           
  9214                           ; BSR set to: 0
  9215                           ; Switch size 1, requested type "simple"
  9216                           ; Number of cases is 2, Range of values is 0 to 1
  9217                           ; switch strategies available:
  9218                           ; Name         Instructions Cycles
  9219                           ; simple_byte            7     4 (average)
  9220                           ;	Chosen strategy is simple_byte
  9221  0011DE  5190               	movf	??_doDisplayLog& (0+255),w,b
  9222  0011E0  0A00               	xorlw	0	; case 0
  9223  0011E2  B4D8               	btfsc	status,2,c
  9224  0011E4  D7AC               	goto	l8392
  9225  0011E6  0A01               	xorlw	1	; case 1
  9226  0011E8  B4D8               	btfsc	status,2,c
  9227  0011EA  D7B5               	goto	l8400
  9228  0011EC                     l8420:
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;main.c: 113:     _delay((unsigned long)((1)*(10000000/4000.0)));
  9232  0011EC  0E04               	movlw	4
  9233  0011EE  0100               	movlb	0	; () banked
  9234  0011F0  6F90               	movwf	??_doDisplayLog& (0+255),b
  9235  0011F2  0E3D               	movlw	61
  9236  0011F4                     u10387:
  9237  0011F4  2EE8               	decfsz	wreg,f,c
  9238  0011F6  D7FE               	bra	u10387
  9239  0011F8  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  9240  0011FA  D7FC               	bra	u10387
  9241  0011FC  D000               	nop2	
  9242  0011FE  D770               	goto	l8378
  9243  001200                     __end_of_doDisplayLog:
  9244                           	opt callstack 0
  9245                           
  9246 ;; *************** function _printf *****************
  9247 ;; Defined at:
  9248 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  9251 ;;		 -> STR_56(11), STR_55(11), STR_54(10), STR_53(13), 
  9252 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  9253 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  9254 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_30(15), 
  9255 ;;		 -> STR_29(15), STR_27(3), STR_26(13), STR_25(11), 
  9256 ;;		 -> STR_24(10), STR_23(6), STR_22(6), STR_21(3), 
  9257 ;;		 -> STR_20(3), STR_19(17), STR_17(3), STR_15(5), 
  9258 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9259 ;;		 -> STR_4(5), STR_1(7), 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  ap              2   12[BANK0 ] PTR void [1]
  9262 ;;		 -> ?_printf(2), 
  9263 ;;  ret             2    0        int 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  2    0[BANK0 ] int 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9273 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;Total ram usage:       14 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:   12
  9280 ;; This function calls:
  9281 ;;		_vfprintf
  9282 ;; This function is called by:
  9283 ;;		_doDisplayLog
  9284 ;;		_tirePositioning
  9285 ;;		_doOperation
  9286 ;;		_main
  9287 ;;		_mainEEPROM
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text35
  9292  00393A                     __ptext35:
  9293                           	opt callstack 0
  9294  00393A                     _printf:
  9295                           	opt callstack 18
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299  00393A  0E82               	movlw	low (?_printf+2)
  9300  00393C  0100               	movlb	0	; () banked
  9301  00393E  6F8C               	movwf	printf@ap& (0+255),b
  9302  003940  0E00               	movlw	high (?_printf+2)
  9303  003942  6F8D               	movwf	(printf@ap+1)& (0+255),b
  9304                           
  9305                           ; BSR set to: 0
  9306  003944  0E00               	movlw	0
  9307  003946  6E6D               	movwf	vfprintf@fp,c
  9308  003948  0E00               	movlw	0
  9309  00394A  6E6E               	movwf	vfprintf@fp+1,c
  9310  00394C  C080  F06F         	movff	printf@fmt,vfprintf@fmt
  9311  003950  C081  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  9312  003954  0E8C               	movlw	low printf@ap
  9313  003956  6E71               	movwf	vfprintf@ap,c
  9314  003958  0E00               	movlw	high printf@ap
  9315  00395A  6E72               	movwf	vfprintf@ap+1,c
  9316  00395C  EC3F  F01A         	call	_vfprintf	;wreg free
  9317  003960  0012               	return		;funcret
  9318  003962                     __end_of_printf:
  9319                           	opt callstack 0
  9320                           
  9321 ;; *************** function _vfprintf *****************
  9322 ;; Defined at:
  9323 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  9326 ;;		 -> NULL(0), 
  9327 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  9328 ;;		 -> STR_56(11), STR_55(11), STR_54(10), STR_53(13), 
  9329 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  9330 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  9331 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_30(15), 
  9332 ;;		 -> STR_29(15), STR_27(3), STR_26(13), STR_25(11), 
  9333 ;;		 -> STR_24(10), STR_23(6), STR_22(6), STR_21(3), 
  9334 ;;		 -> STR_20(3), STR_19(17), STR_17(3), STR_15(5), 
  9335 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9336 ;;		 -> STR_4(5), STR_1(7), 
  9337 ;;  ap              2  112[COMRAM] PTR PTR void 
  9338 ;;		 -> printf@ap(2), 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  9341 ;;		 -> STR_56(11), STR_55(11), STR_54(10), STR_53(13), 
  9342 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  9343 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  9344 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_30(15), 
  9345 ;;		 -> STR_29(15), STR_27(3), STR_26(13), STR_25(11), 
  9346 ;;		 -> STR_24(10), STR_23(6), STR_22(6), STR_21(3), 
  9347 ;;		 -> STR_20(3), STR_19(17), STR_17(3), STR_15(5), 
  9348 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
  9349 ;;		 -> STR_4(5), STR_1(7), 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2  108[COMRAM] int 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        8 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:   11
  9366 ;; This function calls:
  9367 ;;		_vfpfcnvrt
  9368 ;; This function is called by:
  9369 ;;		_printf
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text36
  9374  00347E                     __ptext36:
  9375                           	opt callstack 0
  9376  00347E                     _vfprintf:
  9377                           	opt callstack 18
  9378                           
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9380                           
  9381                           ;incstack = 0
  9382  00347E  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  9383  003482  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9384                           
  9385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9386  003486  0E00               	movlw	0
  9387  003488  0101               	movlb	1	; () banked
  9388  00348A  6F48               	movwf	(_nout+1)& (0+255),b
  9389  00348C  0E00               	movlw	0
  9390  00348E  6F47               	movwf	_nout& (0+255),b
  9391                           
  9392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9393  003490  D013               	goto	l7898
  9394  003492                     l7896:
  9395                           
  9396                           ; BSR set to: 1
  9397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9398  003492  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9399  003496  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9400  00349A  0E73               	movlw	low vfprintf@cfmt
  9401  00349C  6E4E               	movwf	vfpfcnvrt@fmt,c
  9402  00349E  0E00               	movlw	high vfprintf@cfmt
  9403  0034A0  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  9404  0034A2  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  9405  0034A6  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9406  0034AA  ECDD  F002         	call	_vfpfcnvrt	;wreg free
  9407  0034AE  504C               	movf	?_vfpfcnvrt,w,c
  9408  0034B0  0101               	movlb	1	; () banked
  9409  0034B2  2747               	addwf	_nout& (0+255),f,b
  9410  0034B4  504D               	movf	?_vfpfcnvrt+1,w,c
  9411  0034B6  2348               	addwfc	(_nout+1)& (0+255),f,b
  9412  0034B8                     l7898:
  9413                           
  9414                           ; BSR set to: 1
  9415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9416  0034B8  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  9417  0034BC  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9418  0034C0                     	if	0	;tblptru may be non-zero
  9419  0034C0                     	endif
  9420  0034C0                     	if	0	;tblptru may be non-zero
  9421  0034C0                     	endif
  9422  0034C0  0008               	tblrd		*
  9423  0034C2  50F5               	movf	tablat,w,c
  9424  0034C4  0900               	iorlw	0
  9425  0034C6  A4D8               	btfss	status,2,c
  9426  0034C8  D7E4               	goto	l7896
  9427                           
  9428                           ; BSR set to: 1
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9430  0034CA  C147  F06D         	movff	_nout,?_vfprintf
  9431  0034CE  C148  F06E         	movff	_nout+1,?_vfprintf+1
  9432                           
  9433                           ; BSR set to: 1
  9434  0034D2  0012               	return		;funcret
  9435  0034D4                     __end_of_vfprintf:
  9436                           	opt callstack 0
  9437                           
  9438 ;; *************** function _vfpfcnvrt *****************
  9439 ;; Defined at:
  9440 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  9443 ;;		 -> NULL(0), 
  9444 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  9445 ;;		 -> vfprintf@cfmt(2), 
  9446 ;;  ap              2   79[COMRAM] PTR PTR void 
  9447 ;;		 -> printf@ap(2), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  llu             8   93[COMRAM] unsigned long long 
  9450 ;;  ll              8   85[COMRAM] long long 
  9451 ;;  f               4    0        long long 
  9452 ;;  vp              3    0        PTR void 
  9453 ;;  ct              3    0        unsigned char [3]
  9454 ;;  done            2  103[COMRAM] int 
  9455 ;;  cp              2  101[COMRAM] PTR unsigned char 
  9456 ;;		 -> ?_printf(2), STR_52(16), STR_50(14), STR_48(11), 
  9457 ;;		 -> STR_46(9), STR_44(16), STR_42(13), STR_40(13), 
  9458 ;;		 -> STR_38(9), STR_36(13), STR_34(14), STR_32(10), 
  9459 ;;		 -> STR_28(9), STR_18(14), STR_16(16), STR_14(14), 
  9460 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9461 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9462 ;;  i               2    0        int 
  9463 ;;  c               1  107[COMRAM] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  2   75[COMRAM] int 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9473 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;Total ram usage:       33 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:   10
  9480 ;; This function calls:
  9481 ;;		_atoi
  9482 ;;		_ctoa
  9483 ;;		_dtoa
  9484 ;;		_fputc
  9485 ;;		_isdigit
  9486 ;;		_stoa
  9487 ;;		_xtoa
  9488 ;; This function is called by:
  9489 ;;		_vfprintf
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text37
  9494  0005BA                     __ptext37:
  9495                           	opt callstack 0
  9496  0005BA                     _vfpfcnvrt:
  9497                           	opt callstack 18
  9498                           
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9500                           
  9501                           ; BSR set to: 1
  9502                           ;incstack = 0
  9503  0005BA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9504  0005BE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9505  0005C2  CFDE FFF6          	movff	postinc2,tblptrl
  9506  0005C6  CFDD FFF7          	movff	postdec2,tblptrh
  9507  0005CA                     	if	0	;tblptru may be non-zero
  9508  0005CA                     	endif
  9509  0005CA                     	if	0	;tblptru may be non-zero
  9510  0005CA                     	endif
  9511  0005CA  0008               	tblrd		*
  9512  0005CC  50F5               	movf	tablat,w,c
  9513  0005CE  0A25               	xorlw	37
  9514  0005D0  A4D8               	btfss	status,2,c
  9515  0005D2  D21E               	goto	l7656
  9516                           
  9517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9518  0005D4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9519  0005D8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9520  0005DC  2ADE               	incf	postinc2,f,c
  9521  0005DE  0E00               	movlw	0
  9522  0005E0  22DD               	addwfc	postdec2,f,c
  9523                           
  9524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9525  0005E2  0E00               	movlw	0
  9526  0005E4  0101               	movlb	1	; () banked
  9527  0005E6  6F4A               	movwf	(_width+1)& (0+255),b
  9528  0005E8  0E00               	movlw	0
  9529  0005EA  6F49               	movwf	_width& (0+255),b
  9530  0005EC  C149  F0CC         	movff	_width,_flags
  9531  0005F0  C14A  F0CD         	movff	_width+1,_flags+1
  9532                           
  9533                           ; BSR set to: 1
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9535  0005F4  694B               	setf	_prec& (0+255),b
  9536  0005F6  694C               	setf	(_prec+1)& (0+255),b
  9537                           
  9538                           ; BSR set to: 1
  9539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9540  0005F8  0E00               	movlw	0
  9541  0005FA  6E69               	movwf	vfpfcnvrt@done+1,c
  9542  0005FC  0E00               	movlw	0
  9543  0005FE  D019               	goto	L16
  9544  000600                     l7552:
  9545                           
  9546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9547  000600  0100               	movlb	0	; () banked
  9548  000602  81CC               	bsf	_flags& (0+255),0,b
  9549  000604                     l7554:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9553  000604  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9554  000608  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9555  00060C  2ADE               	incf	postinc2,f,c
  9556  00060E  0E00               	movlw	0
  9557  000610  22DD               	addwfc	postdec2,f,c
  9558                           
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9560  000612  D032               	goto	l7578
  9561  000614                     l7556:
  9562                           
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9564  000614  0100               	movlb	0	; () banked
  9565  000616  83CC               	bsf	_flags& (0+255),1,b
  9566  000618  D7F5               	goto	l7554
  9567  00061A                     l7560:
  9568                           
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9570  00061A  0100               	movlb	0	; () banked
  9571  00061C  85CC               	bsf	_flags& (0+255),2,b
  9572  00061E  D7F2               	goto	l7554
  9573  000620                     l7564:
  9574                           
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9576  000620  0100               	movlb	0	; () banked
  9577  000622  87CC               	bsf	_flags& (0+255),3,b
  9578  000624  D7EF               	goto	l7554
  9579  000626                     l7568:
  9580                           
  9581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9582  000626  0100               	movlb	0	; () banked
  9583  000628  89CC               	bsf	_flags& (0+255),4,b
  9584  00062A  D7EC               	goto	l7554
  9585  00062C                     l7572:
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9588  00062C  0E00               	movlw	0
  9589  00062E  6E69               	movwf	vfpfcnvrt@done+1,c
  9590  000630  0E01               	movlw	1
  9591  000632                     L16:
  9592  000632  6E68               	movwf	vfpfcnvrt@done,c
  9593                           
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9595  000634  D021               	goto	l7578
  9596  000636                     l7576:
  9597  000636  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9598  00063A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9599  00063E  CFDE FFF6          	movff	postinc2,tblptrl
  9600  000642  CFDD FFF7          	movff	postdec2,tblptrh
  9601  000646                     	if	0	;tblptru may be non-zero
  9602  000646                     	endif
  9603  000646                     	if	0	;tblptru may be non-zero
  9604  000646                     	endif
  9605  000646  0008               	tblrd		*
  9606  000648  50F5               	movf	tablat,w,c
  9607  00064A  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9608  00064C  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  9609                           
  9610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9611                           ; Switch size 1, requested type "simple"
  9612                           ; Number of cases is 1, Range of values is 0 to 0
  9613                           ; switch strategies available:
  9614                           ; Name         Instructions Cycles
  9615                           ; simple_byte            4     3 (average)
  9616                           ;	Chosen strategy is simple_byte
  9617  00064E  5053               	movf	??_vfpfcnvrt+1,w,c
  9618  000650  0A00               	xorlw	0	; case 0
  9619  000652  A4D8               	btfss	status,2,c
  9620  000654  D7EB               	goto	l7572
  9621                           
  9622                           ; Switch size 1, requested type "simple"
  9623                           ; Number of cases is 5, Range of values is 32 to 48
  9624                           ; switch strategies available:
  9625                           ; Name         Instructions Cycles
  9626                           ; simple_byte           16     9 (average)
  9627                           ;	Chosen strategy is simple_byte
  9628  000656  5052               	movf	??_vfpfcnvrt,w,c
  9629  000658  0A20               	xorlw	32	; case 32
  9630  00065A  B4D8               	btfsc	status,2,c
  9631  00065C  D7E1               	goto	l7564
  9632  00065E  0A03               	xorlw	3	; case 35
  9633  000660  B4D8               	btfsc	status,2,c
  9634  000662  D7E1               	goto	l7568
  9635  000664  0A08               	xorlw	8	; case 43
  9636  000666  B4D8               	btfsc	status,2,c
  9637  000668  D7D8               	goto	l7560
  9638  00066A  0A06               	xorlw	6	; case 45
  9639  00066C  B4D8               	btfsc	status,2,c
  9640  00066E  D7C8               	goto	l7552
  9641  000670  0A1D               	xorlw	29	; case 48
  9642  000672  B4D8               	btfsc	status,2,c
  9643  000674  D7CF               	goto	l7556
  9644  000676  D7DA               	goto	l7572
  9645  000678                     l7578:
  9646                           
  9647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9648  000678  5068               	movf	vfpfcnvrt@done,w,c
  9649  00067A  1069               	iorwf	vfpfcnvrt@done+1,w,c
  9650  00067C  B4D8               	btfsc	status,2,c
  9651  00067E  D7DB               	goto	l7576
  9652                           
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9654  000680  0100               	movlb	0	; () banked
  9655  000682  B1CC               	btfsc	_flags& (0+255),0,b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9659  000684  93CC               	bcf	_flags& (0+255),1,b
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9663  000686  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9664  00068A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9665  00068E  CFDE FFF6          	movff	postinc2,tblptrl
  9666  000692  CFDD FFF7          	movff	postdec2,tblptrh
  9667  000696                     	if	0	;tblptru may be non-zero
  9668  000696                     	endif
  9669  000696                     	if	0	;tblptru may be non-zero
  9670  000696                     	endif
  9671  000696  0008               	tblrd		*
  9672  000698  50F5               	movf	tablat,w,c
  9673  00069A  0A2A               	xorlw	42
  9674  00069C  A4D8               	btfss	status,2,c
  9675  00069E  D026               	goto	l7590
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9679  0006A0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9680  0006A4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9681  0006A8  2ADE               	incf	postinc2,f,c
  9682  0006AA  0E00               	movlw	0
  9683  0006AC  22DD               	addwfc	postdec2,f,c
  9684                           
  9685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9686  0006AE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9687  0006B2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9688  0006B6  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9689  0006BA  0E02               	movlw	2
  9690  0006BC  26DE               	addwf	postinc2,f,c
  9691  0006BE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9692  0006C2  0E00               	movlw	0
  9693  0006C4  22DD               	addwfc	postdec2,f,c
  9694  0006C6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9695  0006CA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9696  0006CE  CFDE F149          	movff	postinc2,_width
  9697  0006D2  CFDD F14A          	movff	postdec2,_width+1
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9701  0006D6  0101               	movlb	1	; () banked
  9702  0006D8  AF4A               	btfss	(_width+1)& (0+255),7,b
  9703  0006DA  D041               	goto	u8660
  9704                           
  9705                           ; BSR set to: 1
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9707  0006DC  0100               	movlb	0	; () banked
  9708  0006DE  81CC               	bsf	_flags& (0+255),0,b
  9709                           
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9711  0006E0  0101               	movlb	1	; () banked
  9712  0006E2  6D49               	negf	_width& (0+255),b
  9713  0006E4  1F4A               	comf	(_width+1)& (0+255),f,b
  9714  0006E6  B0D8               	btfsc	status,0,c
  9715  0006E8  2B4A               	incf	(_width+1)& (0+255),f,b
  9716  0006EA  D039               	goto	u8660
  9717  0006EC                     l7590:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9721  0006EC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9722  0006F0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9723  0006F4  CFDE F00D          	movff	postinc2,atoi@s
  9724  0006F8  CFDD F00E          	movff	postdec2,atoi@s+1
  9725  0006FC  EC5A  F015         	call	_atoi	;wreg free
  9726  000700  C00D  F149         	movff	?_atoi,_width
  9727  000704  C00E  F14A         	movff	?_atoi+1,_width+1
  9728                           
  9729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9730  000708  D007               	goto	l7594
  9731  00070A                     l7592:
  9732                           
  9733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9734  00070A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9735  00070E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9736  000712  2ADE               	incf	postinc2,f,c
  9737  000714  0E00               	movlw	0
  9738  000716  22DD               	addwfc	postdec2,f,c
  9739  000718                     l7594:
  9740  000718  0ED0               	movlw	208
  9741  00071A  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9742  00071C  0EFF               	movlw	255
  9743  00071E  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  9744  000720  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9745  000724  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9746  000728  CFDE FFF6          	movff	postinc2,tblptrl
  9747  00072C  CFDD FFF7          	movff	postdec2,tblptrh
  9748  000730                     	if	0	;tblptru may be non-zero
  9749  000730                     	endif
  9750  000730                     	if	0	;tblptru may be non-zero
  9751  000730                     	endif
  9752  000730  0008               	tblrd		*
  9753  000732  50F5               	movf	tablat,w,c
  9754  000734  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  9755  000736  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  9756  000738  5052               	movf	??_vfpfcnvrt,w,c
  9757  00073A  2654               	addwf	??_vfpfcnvrt+2,f,c
  9758  00073C  5053               	movf	??_vfpfcnvrt+1,w,c
  9759  00073E  2255               	addwfc	??_vfpfcnvrt+3,f,c
  9760  000740  5055               	movf	??_vfpfcnvrt+3,w,c
  9761  000742  E106               	bnz	u8640
  9762  000744  0E0A               	movlw	10
  9763  000746  5C54               	subwf	??_vfpfcnvrt+2,w,c
  9764  000748  B0D8               	btfsc	status,0,c
  9765  00074A  D002               	goto	u8640
  9766  00074C  0E01               	movlw	1
  9767  00074E  D001               	goto	u8650
  9768  000750                     u8640:
  9769  000750  0E00               	movlw	0
  9770  000752                     u8650:
  9771  000752  6E6A               	movwf	_vfpfcnvrt$1371,c
  9772  000754  6A6B               	clrf	_vfpfcnvrt$1371+1,c
  9773  000756  506A               	movf	_vfpfcnvrt$1371,w,c
  9774  000758  106B               	iorwf	_vfpfcnvrt$1371+1,w,c
  9775  00075A  A4D8               	btfss	status,2,c
  9776  00075C  D7D6               	goto	l7592
  9777  00075E                     u8660:
  9778                           
  9779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  9780  00075E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9781  000762  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9782  000766  CFDE FFF6          	movff	postinc2,tblptrl
  9783  00076A  CFDD FFF7          	movff	postdec2,tblptrh
  9784  00076E                     	if	0	;tblptru may be non-zero
  9785  00076E                     	endif
  9786  00076E                     	if	0	;tblptru may be non-zero
  9787  00076E                     	endif
  9788  00076E  0008               	tblrd		*
  9789  000770  50F5               	movf	tablat,w,c
  9790  000772  0A63               	xorlw	99
  9791  000774  A4D8               	btfss	status,2,c
  9792  000776  D026               	goto	l7608
  9793                           
  9794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  9795  000778  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9796  00077C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9797  000780  2ADE               	incf	postinc2,f,c
  9798  000782  0E00               	movlw	0
  9799  000784  22DD               	addwfc	postdec2,f,c
  9800                           
  9801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9802  000786  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9803  00078A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9804  00078E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9805  000792  0E02               	movlw	2
  9806  000794  26DE               	addwf	postinc2,f,c
  9807  000796  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9808  00079A  0E00               	movlw	0
  9809  00079C  22DD               	addwfc	postdec2,f,c
  9810  00079E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9811  0007A2  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9812  0007A6  50DF               	movf	indf2,w,c
  9813  0007A8  6E6C               	movwf	vfpfcnvrt@c,c
  9814                           
  9815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  9816  0007AA  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  9817  0007AE  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9818  0007B2  C06C  F027         	movff	vfpfcnvrt@c,ctoa@c
  9819  0007B6  EC6A  F01A         	call	_ctoa	;wreg free
  9820  0007BA  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  9821  0007BE  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9822  0007C2  0012               	return	
  9823  0007C4                     l7608:
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9826  0007C4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9827  0007C8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9828  0007CC  CFDE FFF6          	movff	postinc2,tblptrl
  9829  0007D0  CFDD FFF7          	movff	postdec2,tblptrh
  9830  0007D4                     	if	0	;tblptru may be non-zero
  9831  0007D4                     	endif
  9832  0007D4                     	if	0	;tblptru may be non-zero
  9833  0007D4                     	endif
  9834  0007D4  0008               	tblrd		*
  9835  0007D6  50F5               	movf	tablat,w,c
  9836  0007D8  0A64               	xorlw	100
  9837  0007DA  B4D8               	btfsc	status,2,c
  9838  0007DC  D00D               	goto	u8690
  9839  0007DE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9840  0007E2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9841  0007E6  CFDE FFF6          	movff	postinc2,tblptrl
  9842  0007EA  CFDD FFF7          	movff	postdec2,tblptrh
  9843  0007EE                     	if	0	;tblptru may be non-zero
  9844  0007EE                     	endif
  9845  0007EE                     	if	0	;tblptru may be non-zero
  9846  0007EE                     	endif
  9847  0007EE  0008               	tblrd		*
  9848  0007F0  50F5               	movf	tablat,w,c
  9849  0007F2  0A69               	xorlw	105
  9850  0007F4  A4D8               	btfss	status,2,c
  9851  0007F6  D03F               	goto	l7618
  9852  0007F8                     u8690:
  9853                           
  9854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9855  0007F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9856  0007FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9857  000800  2ADE               	incf	postinc2,f,c
  9858  000802  0E00               	movlw	0
  9859  000804  22DD               	addwfc	postdec2,f,c
  9860                           
  9861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9862  000806  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9863  00080A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9864  00080E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9865  000812  0E02               	movlw	2
  9866  000814  26DE               	addwf	postinc2,f,c
  9867  000816  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9868  00081A  0E00               	movlw	0
  9869  00081C  22DD               	addwfc	postdec2,f,c
  9870  00081E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9871  000822  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9872  000826  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  9873  00082A  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  9874  00082E  0E00               	movlw	0
  9875  000830  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  9876  000832  0EFF               	movlw	-1
  9877  000834  6E58               	movwf	vfpfcnvrt@ll+2,c
  9878  000836  6E59               	movwf	vfpfcnvrt@ll+3,c
  9879  000838  6E5A               	movwf	vfpfcnvrt@ll+4,c
  9880  00083A  6E5B               	movwf	vfpfcnvrt@ll+5,c
  9881  00083C  6E5C               	movwf	vfpfcnvrt@ll+6,c
  9882  00083E  6E5D               	movwf	vfpfcnvrt@ll+7,c
  9883                           
  9884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9885  000840  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9886  000844  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9887  000848  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9888  00084C  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9889  000850  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9890  000854  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9891  000858  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9892  00085C  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9893  000860  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9894  000864  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9895  000868  EC2E  F010         	call	_dtoa	;wreg free
  9896  00086C  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9897  000870  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9898  000874  0012               	return	
  9899  000876                     l7618:
  9900                           
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9902  000876  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9903  00087A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9904  00087E  CFDE FFF6          	movff	postinc2,tblptrl
  9905  000882  CFDD FFF7          	movff	postdec2,tblptrh
  9906  000886                     	if	0	;tblptru may be non-zero
  9907  000886                     	endif
  9908  000886                     	if	0	;tblptru may be non-zero
  9909  000886                     	endif
  9910  000886  0008               	tblrd		*
  9911  000888  50F5               	movf	tablat,w,c
  9912  00088A  0A73               	xorlw	115
  9913  00088C  A4D8               	btfss	status,2,c
  9914  00088E  D02A               	goto	l7626
  9915                           
  9916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9917  000890  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9918  000894  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9919  000898  2ADE               	incf	postinc2,f,c
  9920  00089A  0E00               	movlw	0
  9921  00089C  22DD               	addwfc	postdec2,f,c
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9924  00089E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9925  0008A2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9926  0008A6  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9927  0008AA  0E02               	movlw	2
  9928  0008AC  26DE               	addwf	postinc2,f,c
  9929  0008AE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9930  0008B2  0E00               	movlw	0
  9931  0008B4  22DD               	addwfc	postdec2,f,c
  9932  0008B6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9933  0008BA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9934  0008BE  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  9935  0008C2  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  9936                           
  9937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9938  0008C6  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  9939  0008CA  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9940  0008CE  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  9941  0008D2  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9942  0008D6  EC18  F014         	call	_stoa	;wreg free
  9943  0008DA  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  9944  0008DE  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  9945  0008E2  0012               	return	
  9946  0008E4                     l7626:
  9947                           
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9949  0008E4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9950  0008E8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9951  0008EC  CFDE FFF6          	movff	postinc2,tblptrl
  9952  0008F0  CFDD FFF7          	movff	postdec2,tblptrh
  9953  0008F4                     	if	0	;tblptru may be non-zero
  9954  0008F4                     	endif
  9955  0008F4                     	if	0	;tblptru may be non-zero
  9956  0008F4                     	endif
  9957  0008F4  0008               	tblrd		*
  9958  0008F6  50F5               	movf	tablat,w,c
  9959  0008F8  0A78               	xorlw	120
  9960  0008FA  B4D8               	btfsc	status,2,c
  9961  0008FC  D00D               	goto	u8720
  9962  0008FE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9963  000902  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9964  000906  CFDE FFF6          	movff	postinc2,tblptrl
  9965  00090A  CFDD FFF7          	movff	postdec2,tblptrh
  9966  00090E                     	if	0	;tblptru may be non-zero
  9967  00090E                     	endif
  9968  00090E                     	if	0	;tblptru may be non-zero
  9969  00090E                     	endif
  9970  00090E  0008               	tblrd		*
  9971  000910  50F5               	movf	tablat,w,c
  9972  000912  0A58               	xorlw	88
  9973  000914  A4D8               	btfss	status,2,c
  9974  000916  D04D               	goto	l7640
  9975  000918                     u8720:
  9976                           
  9977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9978  000918  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9979  00091C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9980  000920  CFDE FFF6          	movff	postinc2,tblptrl
  9981  000924  CFDD FFF7          	movff	postdec2,tblptrh
  9982  000928                     	if	0	;tblptru may be non-zero
  9983  000928                     	endif
  9984  000928                     	if	0	;tblptru may be non-zero
  9985  000928                     	endif
  9986  000928  0008               	tblrd		*
  9987  00092A  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  9988                           
  9989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9990  00092E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9991  000932  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9992  000936  2ADE               	incf	postinc2,f,c
  9993  000938  0E00               	movlw	0
  9994  00093A  22DD               	addwfc	postdec2,f,c
  9995                           
  9996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9997  00093C  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9998  000940  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9999  000944  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10000  000948  0E02               	movlw	2
 10001  00094A  26DE               	addwf	postinc2,f,c
 10002  00094C  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10003  000950  0E00               	movlw	0
 10004  000952  22DD               	addwfc	postdec2,f,c
 10005  000954  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10006  000958  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10007  00095C  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 10008  000960  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 10009  000964  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10010  000968  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10011  00096C  6A60               	clrf	vfpfcnvrt@llu+2,c
 10012  00096E  6A61               	clrf	vfpfcnvrt@llu+3,c
 10013  000970  6A62               	clrf	vfpfcnvrt@llu+4,c
 10014  000972  6A63               	clrf	vfpfcnvrt@llu+5,c
 10015  000974  6A64               	clrf	vfpfcnvrt@llu+6,c
 10016  000976  6A65               	clrf	vfpfcnvrt@llu+7,c
 10017                           
 10018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 10019  000978  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 10020  00097C  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10021  000980  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
 10022  000984  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10023  000988  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10024  00098C  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10025  000990  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10026  000994  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10027  000998  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10028  00099C  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10029  0009A0  C06C  F02F         	movff	vfpfcnvrt@c,xtoa@x
 10030  0009A4  EC56  F011         	call	_xtoa	;wreg free
 10031  0009A8  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 10032  0009AC  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10033  0009B0  0012               	return	
 10034  0009B2                     l7640:
 10035                           
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10037  0009B2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10038  0009B6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10039  0009BA  CFDE FFF6          	movff	postinc2,tblptrl
 10040  0009BE  CFDD FFF7          	movff	postdec2,tblptrh
 10041  0009C2                     	if	0	;tblptru may be non-zero
 10042  0009C2                     	endif
 10043  0009C2                     	if	0	;tblptru may be non-zero
 10044  0009C2                     	endif
 10045  0009C2  0008               	tblrd		*
 10046  0009C4  50F5               	movf	tablat,w,c
 10047  0009C6  0A25               	xorlw	37
 10048  0009C8  A4D8               	btfss	status,2,c
 10049  0009CA  D016               	goto	l7650
 10050                           
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10052  0009CC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10053  0009D0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10054  0009D4  2ADE               	incf	postinc2,f,c
 10055  0009D6  0E00               	movlw	0
 10056  0009D8  22DD               	addwfc	postdec2,f,c
 10057                           
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10059  0009DA  0E00               	movlw	0
 10060  0009DC  6E0B               	movwf	fputc@c+1,c
 10061  0009DE  0E25               	movlw	37
 10062  0009E0  6E0A               	movwf	fputc@c,c
 10063  0009E2  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 10064  0009E6  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10065  0009EA  EC41  F019         	call	_fputc	;wreg free
 10066  0009EE                     l7646:
 10067                           
 10068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10069  0009EE  0E00               	movlw	0
 10070  0009F0  6E4D               	movwf	?_vfpfcnvrt+1,c
 10071  0009F2  0E01               	movlw	1
 10072  0009F4  6E4C               	movwf	?_vfpfcnvrt,c
 10073  0009F6  0012               	return	
 10074  0009F8                     l7650:
 10075                           
 10076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10077  0009F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10078  0009FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10079  000A00  2ADE               	incf	postinc2,f,c
 10080  000A02  0E00               	movlw	0
 10081  000A04  22DD               	addwfc	postdec2,f,c
 10082                           
 10083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10084  000A06  0E00               	movlw	0
 10085  000A08  6E4D               	movwf	?_vfpfcnvrt+1,c
 10086  000A0A  0E00               	movlw	0
 10087  000A0C  6E4C               	movwf	?_vfpfcnvrt,c
 10088  000A0E  0012               	return	
 10089  000A10                     l7656:
 10090                           
 10091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10092  000A10  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10093  000A14  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10094  000A18  CFDE FFF6          	movff	postinc2,tblptrl
 10095  000A1C  CFDD FFF7          	movff	postdec2,tblptrh
 10096  000A20                     	if	0	;tblptru may be non-zero
 10097  000A20                     	endif
 10098  000A20                     	if	0	;tblptru may be non-zero
 10099  000A20                     	endif
 10100  000A20  0008               	tblrd		*
 10101  000A22  50F5               	movf	tablat,w,c
 10102  000A24  6E0A               	movwf	fputc@c,c
 10103  000A26  6A0B               	clrf	fputc@c+1,c
 10104  000A28  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 10105  000A2C  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10106  000A30  EC41  F019         	call	_fputc	;wreg free
 10107                           
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10109  000A34  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10110  000A38  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10111  000A3C  2ADE               	incf	postinc2,f,c
 10112  000A3E  0E00               	movlw	0
 10113  000A40  22DD               	addwfc	postdec2,f,c
 10114  000A42  D7D5               	goto	l7646
 10115  000A44                     __end_of_vfpfcnvrt:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _xtoa *****************
 10119 ;; Defined at:
 10120 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10123 ;;		 -> NULL(0), 
 10124 ;;  d               8   38[COMRAM] unsigned long long 
 10125 ;;  x               1   46[COMRAM] unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  n               8   63[COMRAM] unsigned long long 
 10128 ;;  c               2   73[COMRAM] int 
 10129 ;;  i               2   71[COMRAM] int 
 10130 ;;  w               2   61[COMRAM] int 
 10131 ;;  p               2   59[COMRAM] int 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  2   36[COMRAM] int 
 10134 ;; Registers used:
 10135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10141 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;Total ram usage:       39 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    9
 10148 ;; This function calls:
 10149 ;;		_isalpha
 10150 ;;		_isupper
 10151 ;;		_pad
 10152 ;;		_toupper
 10153 ;; This function is called by:
 10154 ;;		_vfpfcnvrt
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           	psect	text38
 10159  0022AC                     __ptext38:
 10160                           	opt callstack 0
 10161  0022AC                     _xtoa:
 10162                           	opt callstack 18
 10163                           
 10164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 10165                           
 10166                           ;incstack = 0
 10167  0022AC  0101               	movlb	1	; () banked
 10168  0022AE  BF4C               	btfsc	(_prec+1)& (0+255),7,b
 10169  0022B0  D002               	goto	l7032
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 10173  0022B2  0100               	movlb	0	; () banked
 10174  0022B4  93CC               	bcf	_flags& (0+255),1,b
 10175  0022B6                     l7032:
 10176                           
 10177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 10178  0022B6  0101               	movlb	1	; () banked
 10179  0022B8  BF4C               	btfsc	(_prec+1)& (0+255),7,b
 10180  0022BA  D005               	goto	u7640
 10181  0022BC  514C               	movf	(_prec+1)& (0+255),w,b
 10182  0022BE  E108               	bnz	l634
 10183  0022C0  054B               	decf	_prec& (0+255),w,b
 10184  0022C2  B0D8               	btfsc	status,0,c
 10185  0022C4  D005               	goto	l634
 10186  0022C6                     u7640:
 10187                           
 10188                           ; BSR set to: 1
 10189  0022C6  0E00               	movlw	0
 10190  0022C8  6E3D               	movwf	xtoa@p+1,c
 10191  0022CA  0E01               	movlw	1
 10192  0022CC  6E3C               	movwf	xtoa@p,c
 10193  0022CE  D004               	goto	l636
 10194  0022D0                     l634:
 10195                           
 10196                           ; BSR set to: 1
 10197  0022D0  C14B  F03C         	movff	_prec,xtoa@p
 10198  0022D4  C14C  F03D         	movff	_prec+1,xtoa@p+1
 10199  0022D8                     l636:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 10203  0022D8  C149  F03E         	movff	_width,xtoa@w
 10204  0022DC  C14A  F03F         	movff	_width+1,xtoa@w+1
 10205                           
 10206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 10207  0022E0  0100               	movlb	0	; () banked
 10208  0022E2  A9CC               	btfss	_flags& (0+255),4,b
 10209  0022E4  D004               	goto	l7038
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 10213  0022E6  0EFE               	movlw	254
 10214  0022E8  263E               	addwf	xtoa@w,f,c
 10215  0022EA  0EFF               	movlw	255
 10216  0022EC  223F               	addwfc	xtoa@w+1,f,c
 10217  0022EE                     l7038:
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 10221  0022EE  C027  F040         	movff	xtoa@d,xtoa@n
 10222  0022F2  C028  F041         	movff	xtoa@d+1,xtoa@n+1
 10223  0022F6  C029  F042         	movff	xtoa@d+2,xtoa@n+2
 10224  0022FA  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
 10225  0022FE  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
 10226  002302  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
 10227  002306  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
 10228  00230A  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 10232  00230E  0E00               	movlw	0
 10233  002310  6E49               	movwf	xtoa@i+1,c
 10234  002312  0E1F               	movlw	31
 10235  002314  6E48               	movwf	xtoa@i,c
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 10239  002316  0E00               	movlw	0
 10240  002318  0101               	movlb	1	; () banked
 10241  00231A  6F70               	movwf	(_dbuf+31)& (0+255),b
 10242                           
 10243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10244  00231C  D093               	goto	l7074
 10245  00231E                     l7044:
 10246                           
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 10248  00231E  0648               	decf	xtoa@i,f,c
 10249  002320  A0D8               	btfss	status,0,c
 10250  002322  0649               	decf	xtoa@i+1,f,c
 10251                           
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 10253  002324  0E0F               	movlw	15
 10254  002326  1440               	andwf	xtoa@n,w,c
 10255  002328  6E4A               	movwf	xtoa@c,c
 10256  00232A  6A4B               	clrf	xtoa@c+1,c
 10257                           
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10259  00232C  BE4B               	btfsc	xtoa@c+1,7,c
 10260  00232E  D008               	goto	l7052
 10261  002330  504B               	movf	xtoa@c+1,w,c
 10262  002332  E104               	bnz	u7660
 10263  002334  0E0A               	movlw	10
 10264  002336  5C4A               	subwf	xtoa@c,w,c
 10265  002338  A0D8               	btfss	status,0,c
 10266  00233A  D002               	goto	l7052
 10267  00233C                     u7660:
 10268  00233C  0E57               	movlw	87
 10269  00233E  D001               	goto	L17
 10270  002340                     l7052:
 10271  002340  0E30               	movlw	48
 10272  002342                     L17:
 10273  002342  244A               	addwf	xtoa@c,w,c
 10274  002344  6E4A               	movwf	xtoa@c,c
 10275  002346  0E00               	movlw	0
 10276  002348  204B               	addwfc	xtoa@c+1,w,c
 10277  00234A  6E4B               	movwf	xtoa@c+1,c
 10278                           
 10279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 10280  00234C  0EBF               	movlw	191
 10281  00234E  6E30               	movwf	??_xtoa& (0+255),c
 10282  002350  0EFF               	movlw	255
 10283  002352  6E31               	movwf	(??_xtoa+1)& (0+255),c
 10284  002354  502F               	movf	xtoa@x,w,c
 10285  002356  6E32               	movwf	(??_xtoa+2)& (0+255),c
 10286  002358  6A33               	clrf	(??_xtoa+3)& (0+255),c
 10287  00235A  5030               	movf	??_xtoa,w,c
 10288  00235C  2632               	addwf	??_xtoa+2,f,c
 10289  00235E  5031               	movf	??_xtoa+1,w,c
 10290  002360  2233               	addwfc	??_xtoa+3,f,c
 10291  002362  5033               	movf	??_xtoa+3,w,c
 10292  002364  E106               	bnz	u7670
 10293  002366  0E1A               	movlw	26
 10294  002368  5C32               	subwf	??_xtoa+2,w,c
 10295  00236A  B0D8               	btfsc	status,0,c
 10296  00236C  D002               	goto	u7670
 10297  00236E  0E01               	movlw	1
 10298  002370  D001               	goto	u7680
 10299  002372                     u7670:
 10300  002372  0E00               	movlw	0
 10301  002374                     u7680:
 10302  002374  6E38               	movwf	_xtoa$1356,c
 10303  002376  6A39               	clrf	_xtoa$1356+1,c
 10304  002378  5038               	movf	_xtoa$1356,w,c
 10305  00237A  1039               	iorwf	_xtoa$1356+1,w,c
 10306  00237C  B4D8               	btfsc	status,2,c
 10307  00237E  D027               	goto	l7066
 10308  002380  0E9F               	movlw	159
 10309  002382  6E30               	movwf	??_xtoa& (0+255),c
 10310  002384  0EFF               	movlw	255
 10311  002386  6E31               	movwf	(??_xtoa+1)& (0+255),c
 10312  002388  0E20               	movlw	32
 10313  00238A  104A               	iorwf	xtoa@c,w,c
 10314  00238C  6E32               	movwf	(??_xtoa+2)& (0+255),c
 10315  00238E  0E00               	movlw	0
 10316  002390  104B               	iorwf	xtoa@c+1,w,c
 10317  002392  6E33               	movwf	(??_xtoa+3)& (0+255),c
 10318  002394  5030               	movf	??_xtoa,w,c
 10319  002396  2632               	addwf	??_xtoa+2,f,c
 10320  002398  5031               	movf	??_xtoa+1,w,c
 10321  00239A  2233               	addwfc	??_xtoa+3,f,c
 10322  00239C  5033               	movf	??_xtoa+3,w,c
 10323  00239E  E106               	bnz	u7700
 10324  0023A0  0E1A               	movlw	26
 10325  0023A2  5C32               	subwf	??_xtoa+2,w,c
 10326  0023A4  B0D8               	btfsc	status,0,c
 10327  0023A6  D002               	goto	u7700
 10328  0023A8  0E01               	movlw	1
 10329  0023AA  D001               	goto	u7710
 10330  0023AC                     u7700:
 10331  0023AC  0E00               	movlw	0
 10332  0023AE                     u7710:
 10333  0023AE  6E3A               	movwf	_xtoa$1357,c
 10334  0023B0  6A3B               	clrf	_xtoa$1357+1,c
 10335  0023B2  503A               	movf	_xtoa$1357,w,c
 10336  0023B4  103B               	iorwf	_xtoa$1357+1,w,c
 10337  0023B6  B4D8               	btfsc	status,2,c
 10338  0023B8  D00A               	goto	l7066
 10339                           
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10341  0023BA  C04A  F00C         	movff	xtoa@c,toupper@c
 10342  0023BE  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
 10343  0023C2  ECB7  F01A         	call	_toupper	;wreg free
 10344  0023C6  C00C  F04A         	movff	?_toupper,xtoa@c
 10345  0023CA  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
 10346  0023CE                     l7066:
 10347                           
 10348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10349  0023CE  0E51               	movlw	low _dbuf
 10350  0023D0  2448               	addwf	xtoa@i,w,c
 10351  0023D2  6ED9               	movwf	fsr2l,c
 10352  0023D4  0E01               	movlw	high _dbuf
 10353  0023D6  2049               	addwfc	xtoa@i+1,w,c
 10354  0023D8  6EDA               	movwf	fsr2h,c
 10355  0023DA  C04A  FFDF         	movff	xtoa@c,indf2
 10356                           
 10357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10358  0023DE  063C               	decf	xtoa@p,f,c
 10359  0023E0  A0D8               	btfss	status,0,c
 10360  0023E2  063D               	decf	xtoa@p+1,f,c
 10361                           
 10362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10363  0023E4  063E               	decf	xtoa@w,f,c
 10364  0023E6  A0D8               	btfss	status,0,c
 10365  0023E8  063F               	decf	xtoa@w+1,f,c
 10366                           
 10367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10368  0023EA  C040  F030         	movff	xtoa@n,??_xtoa
 10369  0023EE  C041  F031         	movff	xtoa@n+1,??_xtoa+1
 10370  0023F2  C042  F032         	movff	xtoa@n+2,??_xtoa+2
 10371  0023F6  C043  F033         	movff	xtoa@n+3,??_xtoa+3
 10372  0023FA  C044  F034         	movff	xtoa@n+4,??_xtoa+4
 10373  0023FE  C045  F035         	movff	xtoa@n+5,??_xtoa+5
 10374  002402  C046  F036         	movff	xtoa@n+6,??_xtoa+6
 10375  002406  C047  F037         	movff	xtoa@n+7,??_xtoa+7
 10376  00240A  0E05               	movlw	5
 10377  00240C  D009               	goto	u7730
 10378  00240E                     u7735:
 10379  00240E  90D8               	bcf	status,0,c
 10380  002410  3237               	rrcf	??_xtoa+7,f,c
 10381  002412  3236               	rrcf	??_xtoa+6,f,c
 10382  002414  3235               	rrcf	??_xtoa+5,f,c
 10383  002416  3234               	rrcf	??_xtoa+4,f,c
 10384  002418  3233               	rrcf	??_xtoa+3,f,c
 10385  00241A  3232               	rrcf	??_xtoa+2,f,c
 10386  00241C  3231               	rrcf	??_xtoa+1,f,c
 10387  00241E  3230               	rrcf	??_xtoa,f,c
 10388  002420                     u7730:
 10389  002420  2EE8               	decfsz	wreg,f,c
 10390  002422  D7F5               	goto	u7735
 10391  002424  C030  F040         	movff	??_xtoa,xtoa@n
 10392  002428  C031  F041         	movff	??_xtoa+1,xtoa@n+1
 10393  00242C  C032  F042         	movff	??_xtoa+2,xtoa@n+2
 10394  002430  C033  F043         	movff	??_xtoa+3,xtoa@n+3
 10395  002434  C034  F044         	movff	??_xtoa+4,xtoa@n+4
 10396  002438  C035  F045         	movff	??_xtoa+5,xtoa@n+5
 10397  00243C  C036  F046         	movff	??_xtoa+6,xtoa@n+6
 10398  002440  C037  F047         	movff	??_xtoa+7,xtoa@n+7
 10399  002444                     l7074:
 10400                           
 10401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10402  002444  BE49               	btfsc	xtoa@i+1,7,c
 10403  002446  D021               	goto	u7780
 10404  002448  5049               	movf	xtoa@i+1,w,c
 10405  00244A  E104               	bnz	u7740
 10406  00244C  0E02               	movlw	2
 10407  00244E  5C48               	subwf	xtoa@i,w,c
 10408  002450  A0D8               	btfss	status,0,c
 10409  002452  D01B               	goto	u7780
 10410  002454                     u7740:
 10411  002454  5040               	movf	xtoa@n,w,c
 10412  002456  1041               	iorwf	xtoa@n+1,w,c
 10413  002458  1042               	iorwf	xtoa@n+2,w,c
 10414  00245A  1043               	iorwf	xtoa@n+3,w,c
 10415  00245C  1044               	iorwf	xtoa@n+4,w,c
 10416  00245E  1045               	iorwf	xtoa@n+5,w,c
 10417  002460  1046               	iorwf	xtoa@n+6,w,c
 10418  002462  1047               	iorwf	xtoa@n+7,w,c
 10419  002464  A4D8               	btfss	status,2,c
 10420  002466  D75B               	goto	l7044
 10421  002468  BE3D               	btfsc	xtoa@p+1,7,c
 10422  00246A  D005               	goto	u7760
 10423  00246C  503D               	movf	xtoa@p+1,w,c
 10424  00246E  E102               	bnz	u7761
 10425  002470  043C               	decf	xtoa@p,w,c
 10426  002472  B0D8               	btfsc	status,0,c
 10427  002474                     u7761:
 10428  002474  D754               	goto	l7044
 10429  002476                     u7760:
 10430  002476  BE3F               	btfsc	xtoa@w+1,7,c
 10431  002478  D008               	goto	u7780
 10432  00247A  503F               	movf	xtoa@w+1,w,c
 10433  00247C  E103               	bnz	u7770
 10434  00247E  043E               	decf	xtoa@w,w,c
 10435  002480  A0D8               	btfss	status,0,c
 10436  002482  D003               	goto	u7780
 10437  002484                     u7770:
 10438  002484  0100               	movlb	0	; () banked
 10439  002486  B3CC               	btfsc	_flags& (0+255),1,b
 10440  002488  D74A               	goto	l7044
 10441  00248A                     u7780:
 10442                           
 10443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10444  00248A  0100               	movlb	0	; () banked
 10445  00248C  A9CC               	btfss	_flags& (0+255),4,b
 10446  00248E  D016               	goto	l7090
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10450  002490  0648               	decf	xtoa@i,f,c
 10451  002492  A0D8               	btfss	status,0,c
 10452  002494  0649               	decf	xtoa@i+1,f,c
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10456  002496  0E51               	movlw	low _dbuf
 10457  002498  2448               	addwf	xtoa@i,w,c
 10458  00249A  6ED9               	movwf	fsr2l,c
 10459  00249C  0E01               	movlw	high _dbuf
 10460  00249E  2049               	addwfc	xtoa@i+1,w,c
 10461  0024A0  6EDA               	movwf	fsr2h,c
 10462  0024A2  C02F  FFDF         	movff	xtoa@x,indf2
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10466  0024A6  0648               	decf	xtoa@i,f,c
 10467  0024A8  A0D8               	btfss	status,0,c
 10468  0024AA  0649               	decf	xtoa@i+1,f,c
 10469                           
 10470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10471  0024AC  0E51               	movlw	low _dbuf
 10472  0024AE  2448               	addwf	xtoa@i,w,c
 10473  0024B0  6ED9               	movwf	fsr2l,c
 10474  0024B2  0E01               	movlw	high _dbuf
 10475  0024B4  2049               	addwfc	xtoa@i+1,w,c
 10476  0024B6  6EDA               	movwf	fsr2h,c
 10477  0024B8  0E30               	movlw	48
 10478  0024BA  6EDF               	movwf	indf2,c
 10479  0024BC                     l7090:
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10483  0024BC  C025  F01A         	movff	xtoa@fp,pad@fp
 10484  0024C0  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 10485  0024C4  0E51               	movlw	low _dbuf
 10486  0024C6  2448               	addwf	xtoa@i,w,c
 10487  0024C8  6E1C               	movwf	pad@buf,c
 10488  0024CA  0E01               	movlw	high _dbuf
 10489  0024CC  2049               	addwfc	xtoa@i+1,w,c
 10490  0024CE  6E1D               	movwf	pad@buf+1,c
 10491  0024D0  C03E  F01E         	movff	xtoa@w,pad@p
 10492  0024D4  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 10493  0024D8  ECAB  F017         	call	_pad	;wreg free
 10494  0024DC  C01A  F025         	movff	?_pad,?_xtoa
 10495  0024E0  C01B  F026         	movff	?_pad+1,?_xtoa+1
 10496  0024E4  0012               	return		;funcret
 10497  0024E6                     __end_of_xtoa:
 10498                           	opt callstack 0
 10499                           
 10500 ;; *************** function _toupper *****************
 10501 ;; Defined at:
 10502 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  c               2   11[COMRAM] int 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2   11[COMRAM] int 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;Total ram usage:        8 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    3
 10523 ;; This function calls:
 10524 ;;		_islower
 10525 ;; This function is called by:
 10526 ;;		_xtoa
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text39
 10531  00356E                     __ptext39:
 10532                           	opt callstack 0
 10533  00356E                     _toupper:
 10534                           	opt callstack 23
 10535                           
 10536                           ;incstack = 0
 10537  00356E  0E9F               	movlw	159
 10538  003570  6E0E               	movwf	??_toupper& (0+255),c
 10539  003572  0EFF               	movlw	255
 10540  003574  6E0F               	movwf	(??_toupper+1)& (0+255),c
 10541  003576  C00C  F010         	movff	toupper@c,??_toupper+2
 10542  00357A  C00D  F011         	movff	toupper@c+1,??_toupper+3
 10543  00357E  500E               	movf	??_toupper,w,c
 10544  003580  2610               	addwf	??_toupper+2,f,c
 10545  003582  500F               	movf	??_toupper+1,w,c
 10546  003584  2211               	addwfc	??_toupper+3,f,c
 10547  003586  5011               	movf	??_toupper+3,w,c
 10548  003588  E106               	bnz	u7170
 10549  00358A  0E1A               	movlw	26
 10550  00358C  5C10               	subwf	??_toupper+2,w,c
 10551  00358E  B0D8               	btfsc	status,0,c
 10552  003590  D002               	goto	u7170
 10553  003592  0E01               	movlw	1
 10554  003594  D001               	goto	u7180
 10555  003596                     u7170:
 10556  003596  0E00               	movlw	0
 10557  003598                     u7180:
 10558  003598  6E12               	movwf	_toupper$1922,c
 10559  00359A  6A13               	clrf	_toupper$1922+1,c
 10560  00359C  5012               	movf	_toupper$1922,w,c
 10561  00359E  1013               	iorwf	_toupper$1922+1,w,c
 10562  0035A0  B4D8               	btfsc	status,2,c
 10563  0035A2  D005               	goto	l1476
 10564  0035A4  0E5F               	movlw	95
 10565  0035A6  140C               	andwf	toupper@c,w,c
 10566  0035A8  6E0C               	movwf	?_toupper,c
 10567  0035AA  6A0D               	clrf	?_toupper+1,c
 10568  0035AC  0012               	return	
 10569  0035AE                     l1476:
 10570  0035AE  C00C  F00C         	movff	toupper@c,?_toupper
 10571  0035B2  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 10572  0035B6  0012               	return		;funcret
 10573  0035B8                     __end_of_toupper:
 10574                           	opt callstack 0
 10575                           
 10576 ;; *************** function _islower *****************
 10577 ;; Defined at:
 10578 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  c               2    5[COMRAM] int 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2    5[COMRAM] int 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10596 ;;Total ram usage:        6 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    2
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_toupper
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text40
 10607  00382C                     __ptext40:
 10608                           	opt callstack 0
 10609  00382C                     _islower:
 10610                           	opt callstack 23
 10611                           
 10612                           ;incstack = 0
 10613  00382C  0E9F               	movlw	159
 10614  00382E  6E08               	movwf	??_islower& (0+255),c
 10615  003830  0EFF               	movlw	255
 10616  003832  6E09               	movwf	(??_islower+1)& (0+255),c
 10617  003834  C006  F00A         	movff	islower@c,??_islower+2
 10618  003838  C007  F00B         	movff	islower@c+1,??_islower+3
 10619  00383C  5008               	movf	??_islower,w,c
 10620  00383E  260A               	addwf	??_islower+2,f,c
 10621  003840  5009               	movf	??_islower+1,w,c
 10622  003842  220B               	addwfc	??_islower+3,f,c
 10623  003844  500B               	movf	??_islower+3,w,c
 10624  003846  E106               	bnz	u7060
 10625  003848  0E1A               	movlw	26
 10626  00384A  5C0A               	subwf	??_islower+2,w,c
 10627  00384C  B0D8               	btfsc	status,0,c
 10628  00384E  D002               	goto	u7060
 10629  003850  0E01               	movlw	1
 10630  003852  D001               	goto	u7070
 10631  003854                     u7060:
 10632  003854  0E00               	movlw	0
 10633  003856                     u7070:
 10634  003856  6E06               	movwf	?_islower,c
 10635  003858  6A07               	clrf	?_islower+1,c
 10636  00385A  0012               	return		;funcret
 10637  00385C                     __end_of_islower:
 10638                           	opt callstack 0
 10639                           
 10640 ;; *************** function _isupper *****************
 10641 ;; Defined at:
 10642 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  c               2    5[COMRAM] int 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  2    5[COMRAM] int 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;Total ram usage:        6 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    2
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_xtoa
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text41
 10671  00385C                     __ptext41:
 10672                           	opt callstack 0
 10673  00385C                     _isupper:
 10674                           	opt callstack 24
 10675                           
 10676                           ;incstack = 0
 10677  00385C  0EBF               	movlw	191
 10678  00385E  6E08               	movwf	??_isupper& (0+255),c
 10679  003860  0EFF               	movlw	255
 10680  003862  6E09               	movwf	(??_isupper+1)& (0+255),c
 10681  003864  C006  F00A         	movff	isupper@c,??_isupper+2
 10682  003868  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10683  00386C  5008               	movf	??_isupper,w,c
 10684  00386E  260A               	addwf	??_isupper+2,f,c
 10685  003870  5009               	movf	??_isupper+1,w,c
 10686  003872  220B               	addwfc	??_isupper+3,f,c
 10687  003874  500B               	movf	??_isupper+3,w,c
 10688  003876  E106               	bnz	u7130
 10689  003878  0E1A               	movlw	26
 10690  00387A  5C0A               	subwf	??_isupper+2,w,c
 10691  00387C  B0D8               	btfsc	status,0,c
 10692  00387E  D002               	goto	u7130
 10693  003880  0E01               	movlw	1
 10694  003882  D001               	goto	u7140
 10695  003884                     u7130:
 10696  003884  0E00               	movlw	0
 10697  003886                     u7140:
 10698  003886  6E06               	movwf	?_isupper,c
 10699  003888  6A07               	clrf	?_isupper+1,c
 10700  00388A  0012               	return		;funcret
 10701  00388C                     __end_of_isupper:
 10702                           	opt callstack 0
 10703                           
 10704 ;; *************** function _isalpha *****************
 10705 ;; Defined at:
 10706 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  c               2    5[COMRAM] int 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  2    5[COMRAM] int 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;Total ram usage:        6 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_xtoa
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text42
 10735  0037C6                     __ptext42:
 10736                           	opt callstack 0
 10737  0037C6                     _isalpha:
 10738                           	opt callstack 24
 10739                           
 10740                           ;incstack = 0
 10741  0037C6  0E9F               	movlw	159
 10742  0037C8  6E08               	movwf	??_isalpha& (0+255),c
 10743  0037CA  0EFF               	movlw	255
 10744  0037CC  6E09               	movwf	(??_isalpha+1)& (0+255),c
 10745  0037CE  0E20               	movlw	32
 10746  0037D0  1006               	iorwf	isalpha@c,w,c
 10747  0037D2  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 10748  0037D4  0E00               	movlw	0
 10749  0037D6  1007               	iorwf	isalpha@c+1,w,c
 10750  0037D8  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 10751  0037DA  5008               	movf	??_isalpha,w,c
 10752  0037DC  260A               	addwf	??_isalpha+2,f,c
 10753  0037DE  5009               	movf	??_isalpha+1,w,c
 10754  0037E0  220B               	addwfc	??_isalpha+3,f,c
 10755  0037E2  500B               	movf	??_isalpha+3,w,c
 10756  0037E4  E106               	bnz	u7150
 10757  0037E6  0E1A               	movlw	26
 10758  0037E8  5C0A               	subwf	??_isalpha+2,w,c
 10759  0037EA  B0D8               	btfsc	status,0,c
 10760  0037EC  D002               	goto	u7150
 10761  0037EE  0E01               	movlw	1
 10762  0037F0  D001               	goto	u7160
 10763  0037F2                     u7150:
 10764  0037F2  0E00               	movlw	0
 10765  0037F4                     u7160:
 10766  0037F4  6E06               	movwf	?_isalpha,c
 10767  0037F6  6A07               	clrf	?_isalpha+1,c
 10768  0037F8  0012               	return		;funcret
 10769  0037FA                     __end_of_isalpha:
 10770                           	opt callstack 0
 10771                           
 10772 ;; *************** function _stoa *****************
 10773 ;; Defined at:
 10774 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 10777 ;;		 -> NULL(0), 
 10778 ;;  s               2   20[COMRAM] PTR unsigned char 
 10779 ;;		 -> ?_printf(2), STR_52(16), STR_50(14), STR_48(11), 
 10780 ;;		 -> STR_46(9), STR_44(16), STR_42(13), STR_40(13), 
 10781 ;;		 -> STR_38(9), STR_36(13), STR_34(14), STR_32(10), 
 10782 ;;		 -> STR_28(9), STR_18(14), STR_16(16), STR_14(14), 
 10783 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 10784 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  nuls            7   23[COMRAM] unsigned char [7]
 10787 ;;  l               2   38[COMRAM] int 
 10788 ;;  p               2   36[COMRAM] int 
 10789 ;;  cp              2   34[COMRAM] PTR unsigned char 
 10790 ;;		 -> ?_printf(2), stoa@nuls(7), STR_52(16), STR_50(14), 
 10791 ;;		 -> STR_48(11), STR_46(9), STR_44(16), STR_42(13), 
 10792 ;;		 -> STR_40(13), STR_38(9), STR_36(13), STR_34(14), 
 10793 ;;		 -> STR_32(10), STR_28(9), STR_18(14), STR_16(16), 
 10794 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
 10795 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 10796 ;;  w               2   32[COMRAM] int 
 10797 ;;  i               2   30[COMRAM] int 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  2   18[COMRAM] int 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;Total ram usage:       22 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:    7
 10814 ;; This function calls:
 10815 ;;		_fputc
 10816 ;;		_strlen
 10817 ;; This function is called by:
 10818 ;;		_vfpfcnvrt
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text43
 10823  002830                     __ptext43:
 10824                           	opt callstack 0
 10825  002830                     _stoa:
 10826                           	opt callstack 20
 10827                           
 10828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10829                           
 10830                           ;incstack = 0
 10831  002830  EE21  F071         	lfsr	2,stoa@F1144
 10832  002834  EE10  F018         	lfsr	1,stoa@nuls
 10833  002838  0E06               	movlw	6
 10834  00283A                     u7531:
 10835  00283A  CFDB FFE3          	movff	plusw2,plusw1
 10836  00283E  06E8               	decf	wreg,f,c
 10837  002840  E2FC               	bc	u7531
 10838                           
 10839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 10840  002842  C015  F023         	movff	stoa@s,stoa@cp
 10841  002846  C016  F024         	movff	stoa@s+1,stoa@cp+1
 10842                           
 10843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 10844  00284A  5023               	movf	stoa@cp,w,c
 10845  00284C  1024               	iorwf	stoa@cp+1,w,c
 10846  00284E  A4D8               	btfss	status,2,c
 10847  002850  D004               	goto	l6994
 10848                           
 10849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 10850  002852  0E18               	movlw	low stoa@nuls
 10851  002854  6E23               	movwf	stoa@cp,c
 10852  002856  0E00               	movlw	high stoa@nuls
 10853  002858  6E24               	movwf	stoa@cp+1,c
 10854  00285A                     l6994:
 10855                           
 10856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 10857  00285A  C023  F006         	movff	stoa@cp,strlen@s
 10858  00285E  C024  F007         	movff	stoa@cp+1,strlen@s+1
 10859  002862  EC22  F01B         	call	_strlen	;wreg free
 10860  002866  C006  F027         	movff	?_strlen,stoa@l
 10861  00286A  C007  F028         	movff	?_strlen+1,stoa@l+1
 10862                           
 10863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 10864  00286E  C14B  F025         	movff	_prec,stoa@p
 10865  002872  C14C  F026         	movff	_prec+1,stoa@p+1
 10866                           
 10867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 10868  002876  BE26               	btfsc	stoa@p+1,7,c
 10869  002878  D00E               	goto	l615
 10870  00287A  5027               	movf	stoa@l,w,c
 10871  00287C  5C25               	subwf	stoa@p,w,c
 10872  00287E  5026               	movf	stoa@p+1,w,c
 10873  002880  0A80               	xorlw	128
 10874  002882  6E17               	movwf	??_stoa& (0+255),c
 10875  002884  5028               	movf	stoa@l+1,w,c
 10876  002886  0A80               	xorlw	128
 10877  002888  5817               	subwfb	??_stoa& (0+255),w,c
 10878  00288A  B0D8               	btfsc	status,0,c
 10879  00288C  D004               	goto	l615
 10880  00288E  C025  F027         	movff	stoa@p,stoa@l
 10881  002892  C026  F028         	movff	stoa@p+1,stoa@l+1
 10882  002896                     l615:
 10883                           
 10884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 10885  002896  C027  F025         	movff	stoa@l,stoa@p
 10886  00289A  C028  F026         	movff	stoa@l+1,stoa@p+1
 10887                           
 10888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 10889  00289E  C149  F021         	movff	_width,stoa@w
 10890  0028A2  C14A  F022         	movff	_width+1,stoa@w+1
 10891                           
 10892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 10893  0028A6  0100               	movlb	0	; () banked
 10894  0028A8  A1CC               	btfss	_flags& (0+255),0,b
 10895  0028AA  D00D               	goto	l7008
 10896  0028AC  D016               	goto	u7580
 10897  0028AE                     l7004:
 10898                           
 10899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 10900  0028AE  0E00               	movlw	0
 10901  0028B0  6E0B               	movwf	fputc@c+1,c
 10902  0028B2  0E20               	movlw	32
 10903  0028B4  6E0A               	movwf	fputc@c,c
 10904  0028B6  C013  F00C         	movff	stoa@fp,fputc@fp
 10905  0028BA  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10906  0028BE  EC41  F019         	call	_fputc	;wreg free
 10907                           
 10908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 10909  0028C2  4A27               	infsnz	stoa@l,f,c
 10910  0028C4  2A28               	incf	stoa@l+1,f,c
 10911  0028C6                     l7008:
 10912                           
 10913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 10914  0028C6  5021               	movf	stoa@w,w,c
 10915  0028C8  5C27               	subwf	stoa@l,w,c
 10916  0028CA  5028               	movf	stoa@l+1,w,c
 10917  0028CC  0A80               	xorlw	128
 10918  0028CE  6E17               	movwf	??_stoa& (0+255),c
 10919  0028D0  5022               	movf	stoa@w+1,w,c
 10920  0028D2  0A80               	xorlw	128
 10921  0028D4  5817               	subwfb	??_stoa& (0+255),w,c
 10922  0028D6  A0D8               	btfss	status,0,c
 10923  0028D8  D7EA               	goto	l7004
 10924  0028DA                     u7580:
 10925                           
 10926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 10927  0028DA  0E00               	movlw	0
 10928  0028DC  6E20               	movwf	stoa@i+1,c
 10929  0028DE  0E00               	movlw	0
 10930  0028E0  6E1F               	movwf	stoa@i,c
 10931                           
 10932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10933  0028E2  D01F               	goto	l7018
 10934  0028E4                     l7012:
 10935                           
 10936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 10937  0028E4  C023  FFF6         	movff	stoa@cp,tblptrl
 10938  0028E8  C024  FFF7         	movff	stoa@cp+1,tblptrh
 10939  0028EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10940  0028EE  6EF8               	movwf	tblptru,c
 10941  0028F0  0E0F               	movlw	(high __ramtop+-1)
 10942  0028F2  64F7               	cpfsgt	tblptrh,c
 10943  0028F4  D003               	bra	u7597
 10944  0028F6  0008               	tblrd		*
 10945  0028F8  50F5               	movf	tablat,w,c
 10946  0028FA  D005               	bra	u7590
 10947  0028FC                     u7597:
 10948  0028FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10949  002900  CFF7 FFE2          	movff	tblptrh,fsr1h
 10950  002904  50E7               	movf	indf1,w,c
 10951  002906                     u7590:
 10952  002906  6E17               	movwf	??_stoa& (0+255),c
 10953  002908  5017               	movf	??_stoa,w,c
 10954  00290A  6E0A               	movwf	fputc@c,c
 10955  00290C  6A0B               	clrf	fputc@c+1,c
 10956  00290E  C013  F00C         	movff	stoa@fp,fputc@fp
 10957  002912  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10958  002916  EC41  F019         	call	_fputc	;wreg free
 10959                           
 10960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 10961  00291A  4A23               	infsnz	stoa@cp,f,c
 10962  00291C  2A24               	incf	stoa@cp+1,f,c
 10963                           
 10964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 10965  00291E  4A1F               	infsnz	stoa@i,f,c
 10966  002920  2A20               	incf	stoa@i+1,f,c
 10967  002922                     l7018:
 10968                           
 10969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10970  002922  5025               	movf	stoa@p,w,c
 10971  002924  5C1F               	subwf	stoa@i,w,c
 10972  002926  5020               	movf	stoa@i+1,w,c
 10973  002928  0A80               	xorlw	128
 10974  00292A  6E17               	movwf	??_stoa& (0+255),c
 10975  00292C  5026               	movf	stoa@p+1,w,c
 10976  00292E  0A80               	xorlw	128
 10977  002930  5817               	subwfb	??_stoa& (0+255),w,c
 10978  002932  A0D8               	btfss	status,0,c
 10979  002934  D7D7               	goto	l7012
 10980                           
 10981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 10982  002936  0100               	movlb	0	; () banked
 10983  002938  B1CC               	btfsc	_flags& (0+255),0,b
 10984  00293A  D00D               	goto	l7026
 10985  00293C  D016               	goto	u7620
 10986  00293E                     l7022:
 10987                           
 10988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 10989  00293E  0E00               	movlw	0
 10990  002940  6E0B               	movwf	fputc@c+1,c
 10991  002942  0E20               	movlw	32
 10992  002944  6E0A               	movwf	fputc@c,c
 10993  002946  C013  F00C         	movff	stoa@fp,fputc@fp
 10994  00294A  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10995  00294E  EC41  F019         	call	_fputc	;wreg free
 10996                           
 10997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 10998  002952  4A27               	infsnz	stoa@l,f,c
 10999  002954  2A28               	incf	stoa@l+1,f,c
 11000  002956                     l7026:
 11001                           
 11002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11003  002956  5021               	movf	stoa@w,w,c
 11004  002958  5C27               	subwf	stoa@l,w,c
 11005  00295A  5028               	movf	stoa@l+1,w,c
 11006  00295C  0A80               	xorlw	128
 11007  00295E  6E17               	movwf	??_stoa& (0+255),c
 11008  002960  5022               	movf	stoa@w+1,w,c
 11009  002962  0A80               	xorlw	128
 11010  002964  5817               	subwfb	??_stoa& (0+255),w,c
 11011  002966  A0D8               	btfss	status,0,c
 11012  002968  D7EA               	goto	l7022
 11013  00296A                     u7620:
 11014                           
 11015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11016                           
 11017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 11018  00296A  C027  F013         	movff	stoa@l,?_stoa
 11019  00296E  C028  F014         	movff	stoa@l+1,?_stoa+1
 11020  002972  0012               	return		;funcret
 11021  002974                     __end_of_stoa:
 11022                           	opt callstack 0
 11023                           
 11024 ;; *************** function _dtoa *****************
 11025 ;; Defined at:
 11026 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11029 ;;		 -> NULL(0), 
 11030 ;;  d               8   38[COMRAM] long long 
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;  n               8   62[COMRAM] long long 
 11033 ;;  i               2   70[COMRAM] int 
 11034 ;;  s               2   60[COMRAM] int 
 11035 ;;  w               2   58[COMRAM] int 
 11036 ;;  p               2   56[COMRAM] int 
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  2   36[COMRAM] int 
 11039 ;; Registers used:
 11040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11046 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;Total ram usage:       36 bytes
 11051 ;; Hardware stack levels used:    1
 11052 ;; Hardware stack levels required when called:    9
 11053 ;; This function calls:
 11054 ;;		___aodiv
 11055 ;;		___aomod
 11056 ;;		_abs
 11057 ;;		_pad
 11058 ;; This function is called by:
 11059 ;;		_vfpfcnvrt
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text44
 11064  00205C                     __ptext44:
 11065                           	opt callstack 0
 11066  00205C                     _dtoa:
 11067                           	opt callstack 18
 11068                           
 11069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11070                           
 11071                           ;incstack = 0
 11072  00205C  C027  F03F         	movff	dtoa@d,dtoa@n
 11073  002060  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 11074  002064  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 11075  002068  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 11076  00206C  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 11077  002070  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 11078  002074  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 11079  002078  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 11080                           
 11081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11082  00207C  AE46               	btfss	dtoa@n+7,7,c
 11083  00207E  D002               	goto	u7380
 11084  002080  0E01               	movlw	1
 11085  002082  D001               	goto	u7390
 11086  002084                     u7380:
 11087  002084  0E00               	movlw	0
 11088  002086                     u7390:
 11089  002086  6E3D               	movwf	dtoa@s,c
 11090  002088  6A3E               	clrf	dtoa@s+1,c
 11091                           
 11092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11093  00208A  503D               	movf	dtoa@s,w,c
 11094  00208C  103E               	iorwf	dtoa@s+1,w,c
 11095  00208E  B4D8               	btfsc	status,2,c
 11096  002090  D010               	goto	l6930
 11097                           
 11098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11099  002092  1E46               	comf	dtoa@n+7,f,c
 11100  002094  1E45               	comf	dtoa@n+6,f,c
 11101  002096  1E44               	comf	dtoa@n+5,f,c
 11102  002098  1E43               	comf	dtoa@n+4,f,c
 11103  00209A  1E42               	comf	dtoa@n+3,f,c
 11104  00209C  1E41               	comf	dtoa@n+2,f,c
 11105  00209E  1E40               	comf	dtoa@n+1,f,c
 11106  0020A0  6C3F               	negf	dtoa@n,c
 11107  0020A2  0E00               	movlw	0
 11108  0020A4  2240               	addwfc	dtoa@n+1,f,c
 11109  0020A6  2241               	addwfc	dtoa@n+2,f,c
 11110  0020A8  2242               	addwfc	dtoa@n+3,f,c
 11111  0020AA  2243               	addwfc	dtoa@n+4,f,c
 11112  0020AC  2244               	addwfc	dtoa@n+5,f,c
 11113  0020AE  2245               	addwfc	dtoa@n+6,f,c
 11114  0020B0  2246               	addwfc	dtoa@n+7,f,c
 11115  0020B2                     l6930:
 11116                           
 11117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11118  0020B2  0101               	movlb	1	; () banked
 11119  0020B4  BF4C               	btfsc	(_prec+1)& (0+255),7,b
 11120  0020B6  D002               	goto	l6934
 11121                           
 11122                           ; BSR set to: 1
 11123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11124  0020B8  0100               	movlb	0	; () banked
 11125  0020BA  93CC               	bcf	_flags& (0+255),1,b
 11126  0020BC                     l6934:
 11127                           
 11128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11129  0020BC  0101               	movlb	1	; () banked
 11130  0020BE  BF4C               	btfsc	(_prec+1)& (0+255),7,b
 11131  0020C0  D005               	goto	u7420
 11132  0020C2  514C               	movf	(_prec+1)& (0+255),w,b
 11133  0020C4  E108               	bnz	l586
 11134  0020C6  054B               	decf	_prec& (0+255),w,b
 11135  0020C8  B0D8               	btfsc	status,0,c
 11136  0020CA  D005               	goto	l586
 11137  0020CC                     u7420:
 11138                           
 11139                           ; BSR set to: 1
 11140  0020CC  0E00               	movlw	0
 11141  0020CE  6E3A               	movwf	dtoa@p+1,c
 11142  0020D0  0E01               	movlw	1
 11143  0020D2  6E39               	movwf	dtoa@p,c
 11144  0020D4  D004               	goto	l588
 11145  0020D6                     l586:
 11146                           
 11147                           ; BSR set to: 1
 11148  0020D6  C14B  F039         	movff	_prec,dtoa@p
 11149  0020DA  C14C  F03A         	movff	_prec+1,dtoa@p+1
 11150  0020DE                     l588:
 11151                           
 11152                           ; BSR set to: 1
 11153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11154  0020DE  C149  F03B         	movff	_width,dtoa@w
 11155  0020E2  C14A  F03C         	movff	_width+1,dtoa@w+1
 11156                           
 11157                           ; BSR set to: 1
 11158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11159  0020E6  503D               	movf	dtoa@s,w,c
 11160  0020E8  103E               	iorwf	dtoa@s+1,w,c
 11161  0020EA  A4D8               	btfss	status,2,c
 11162  0020EC  D003               	goto	u7440
 11163                           
 11164                           ; BSR set to: 1
 11165  0020EE  0100               	movlb	0	; () banked
 11166  0020F0  A5CC               	btfss	_flags& (0+255),2,b
 11167  0020F2  D003               	goto	l6944
 11168  0020F4                     u7440:
 11169                           
 11170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11171  0020F4  063B               	decf	dtoa@w,f,c
 11172  0020F6  A0D8               	btfss	status,0,c
 11173  0020F8  063C               	decf	dtoa@w+1,f,c
 11174  0020FA                     l6944:
 11175                           
 11176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 11177  0020FA  0E00               	movlw	0
 11178  0020FC  6E48               	movwf	dtoa@i+1,c
 11179  0020FE  0E1F               	movlw	31
 11180  002100  6E47               	movwf	dtoa@i,c
 11181                           
 11182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 11183  002102  0E00               	movlw	0
 11184  002104  0101               	movlb	1	; () banked
 11185  002106  6F70               	movwf	(_dbuf+31)& (0+255),b
 11186                           
 11187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11188  002108  D07C               	goto	l6958
 11189  00210A                     l6948:
 11190                           
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 11192  00210A  0647               	decf	dtoa@i,f,c
 11193  00210C  A0D8               	btfss	status,0,c
 11194  00210E  0648               	decf	dtoa@i+1,f,c
 11195                           
 11196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 11197  002110  0E51               	movlw	low _dbuf
 11198  002112  2447               	addwf	dtoa@i,w,c
 11199  002114  6ED9               	movwf	fsr2l,c
 11200  002116  0E01               	movlw	high _dbuf
 11201  002118  2048               	addwfc	dtoa@i+1,w,c
 11202  00211A  6EDA               	movwf	fsr2h,c
 11203  00211C  C03F  F006         	movff	dtoa@n,___aomod@dividend
 11204  002120  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 11205  002124  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 11206  002128  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 11207  00212C  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 11208  002130  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 11209  002134  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 11210  002138  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 11211  00213C  0E0A               	movlw	10
 11212  00213E  6E0E               	movwf	___aomod@divisor,c
 11213  002140  0E00               	movlw	0
 11214  002142  6E0F               	movwf	___aomod@divisor+1,c
 11215  002144  0E00               	movlw	0
 11216  002146  6E10               	movwf	___aomod@divisor+2,c
 11217  002148  0E00               	movlw	0
 11218  00214A  6E11               	movwf	___aomod@divisor+3,c
 11219  00214C  0E00               	movlw	0
 11220  00214E  6E12               	movwf	___aomod@divisor+4,c
 11221  002150  0E00               	movlw	0
 11222  002152  6E13               	movwf	___aomod@divisor+5,c
 11223  002154  0E00               	movlw	0
 11224  002156  6E14               	movwf	___aomod@divisor+6,c
 11225  002158  0E00               	movlw	0
 11226  00215A  6E15               	movwf	___aomod@divisor+7,c
 11227  00215C  ECFA  F015         	call	___aomod	;wreg free
 11228  002160  C006  F02F         	movff	?___aomod,??_dtoa
 11229  002164  C007  F030         	movff	?___aomod+1,??_dtoa+1
 11230  002168  C008  F031         	movff	?___aomod+2,??_dtoa+2
 11231  00216C  C009  F032         	movff	?___aomod+3,??_dtoa+3
 11232  002170  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 11233  002174  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 11234  002178  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 11235  00217C  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 11236  002180  C02F  F018         	movff	??_dtoa,abs@a
 11237  002184  C031  F019         	movff	??_dtoa+2,abs@a+1
 11238  002188  ECFD  F01B         	call	_abs	;wreg free
 11239  00218C  5018               	movf	?_abs,w,c
 11240  00218E  0F30               	addlw	48
 11241  002190  6EDF               	movwf	indf2,c
 11242                           
 11243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 11244  002192  0639               	decf	dtoa@p,f,c
 11245  002194  A0D8               	btfss	status,0,c
 11246  002196  063A               	decf	dtoa@p+1,f,c
 11247                           
 11248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 11249  002198  063B               	decf	dtoa@w,f,c
 11250  00219A  A0D8               	btfss	status,0,c
 11251  00219C  063C               	decf	dtoa@w+1,f,c
 11252                           
 11253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 11254  00219E  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 11255  0021A2  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 11256  0021A6  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 11257  0021AA  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 11258  0021AE  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 11259  0021B2  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 11260  0021B6  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 11261  0021BA  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 11262  0021BE  0E0A               	movlw	10
 11263  0021C0  6E0E               	movwf	___aodiv@divisor,c
 11264  0021C2  0E00               	movlw	0
 11265  0021C4  6E0F               	movwf	___aodiv@divisor+1,c
 11266  0021C6  0E00               	movlw	0
 11267  0021C8  6E10               	movwf	___aodiv@divisor+2,c
 11268  0021CA  0E00               	movlw	0
 11269  0021CC  6E11               	movwf	___aodiv@divisor+3,c
 11270  0021CE  0E00               	movlw	0
 11271  0021D0  6E12               	movwf	___aodiv@divisor+4,c
 11272  0021D2  0E00               	movlw	0
 11273  0021D4  6E13               	movwf	___aodiv@divisor+5,c
 11274  0021D6  0E00               	movlw	0
 11275  0021D8  6E14               	movwf	___aodiv@divisor+6,c
 11276  0021DA  0E00               	movlw	0
 11277  0021DC  6E15               	movwf	___aodiv@divisor+7,c
 11278  0021DE  EC74  F013         	call	___aodiv	;wreg free
 11279  0021E2  C006  F03F         	movff	?___aodiv,dtoa@n
 11280  0021E6  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 11281  0021EA  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 11282  0021EE  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 11283  0021F2  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 11284  0021F6  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 11285  0021FA  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 11286  0021FE  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 11287  002202                     l6958:
 11288                           
 11289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11290  002202  BE48               	btfsc	dtoa@i+1,7,c
 11291  002204  D020               	goto	u7490
 11292  002206  5048               	movf	dtoa@i+1,w,c
 11293  002208  E103               	bnz	u7450
 11294  00220A  0447               	decf	dtoa@i,w,c
 11295  00220C  A0D8               	btfss	status,0,c
 11296  00220E  D01B               	goto	u7490
 11297  002210                     u7450:
 11298  002210  503F               	movf	dtoa@n,w,c
 11299  002212  1040               	iorwf	dtoa@n+1,w,c
 11300  002214  1041               	iorwf	dtoa@n+2,w,c
 11301  002216  1042               	iorwf	dtoa@n+3,w,c
 11302  002218  1043               	iorwf	dtoa@n+4,w,c
 11303  00221A  1044               	iorwf	dtoa@n+5,w,c
 11304  00221C  1045               	iorwf	dtoa@n+6,w,c
 11305  00221E  1046               	iorwf	dtoa@n+7,w,c
 11306  002220  A4D8               	btfss	status,2,c
 11307  002222  D773               	goto	l6948
 11308  002224  BE3A               	btfsc	dtoa@p+1,7,c
 11309  002226  D005               	goto	u7470
 11310  002228  503A               	movf	dtoa@p+1,w,c
 11311  00222A  E102               	bnz	u7471
 11312  00222C  0439               	decf	dtoa@p,w,c
 11313  00222E  B0D8               	btfsc	status,0,c
 11314  002230                     u7471:
 11315  002230  D76C               	goto	l6948
 11316  002232                     u7470:
 11317  002232  BE3C               	btfsc	dtoa@w+1,7,c
 11318  002234  D008               	goto	u7490
 11319  002236  503C               	movf	dtoa@w+1,w,c
 11320  002238  E103               	bnz	u7480
 11321  00223A  043B               	decf	dtoa@w,w,c
 11322  00223C  A0D8               	btfss	status,0,c
 11323  00223E  D003               	goto	u7490
 11324  002240                     u7480:
 11325  002240  0100               	movlb	0	; () banked
 11326  002242  B3CC               	btfsc	_flags& (0+255),1,b
 11327  002244  D762               	goto	l6948
 11328  002246                     u7490:
 11329                           
 11330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 11331  002246  503D               	movf	dtoa@s,w,c
 11332  002248  103E               	iorwf	dtoa@s+1,w,c
 11333  00224A  A4D8               	btfss	status,2,c
 11334  00224C  D003               	goto	u7510
 11335  00224E  0100               	movlb	0	; () banked
 11336  002250  A5CC               	btfss	_flags& (0+255),2,b
 11337  002252  D017               	goto	l6982
 11338  002254                     u7510:
 11339                           
 11340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 11341  002254  0647               	decf	dtoa@i,f,c
 11342  002256  A0D8               	btfss	status,0,c
 11343  002258  0648               	decf	dtoa@i+1,f,c
 11344                           
 11345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 11346  00225A  503D               	movf	dtoa@s,w,c
 11347  00225C  103E               	iorwf	dtoa@s+1,w,c
 11348  00225E  A4D8               	btfss	status,2,c
 11349  002260  D004               	goto	l6978
 11350  002262  0E00               	movlw	0
 11351  002264  6E38               	movwf	_dtoa$1335+1,c
 11352  002266  0E2B               	movlw	43
 11353  002268  D003               	goto	L18
 11354  00226A                     l6978:
 11355  00226A  0E00               	movlw	0
 11356  00226C  6E38               	movwf	_dtoa$1335+1,c
 11357  00226E  0E2D               	movlw	45
 11358  002270                     L18:
 11359  002270  6E37               	movwf	_dtoa$1335,c
 11360  002272  0E51               	movlw	low _dbuf
 11361  002274  2447               	addwf	dtoa@i,w,c
 11362  002276  6ED9               	movwf	fsr2l,c
 11363  002278  0E01               	movlw	high _dbuf
 11364  00227A  2048               	addwfc	dtoa@i+1,w,c
 11365  00227C  6EDA               	movwf	fsr2h,c
 11366  00227E  C037  FFDF         	movff	_dtoa$1335,indf2
 11367  002282                     l6982:
 11368                           
 11369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 11370  002282  C025  F01A         	movff	dtoa@fp,pad@fp
 11371  002286  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 11372  00228A  0E51               	movlw	low _dbuf
 11373  00228C  2447               	addwf	dtoa@i,w,c
 11374  00228E  6E1C               	movwf	pad@buf,c
 11375  002290  0E01               	movlw	high _dbuf
 11376  002292  2048               	addwfc	dtoa@i+1,w,c
 11377  002294  6E1D               	movwf	pad@buf+1,c
 11378  002296  C03B  F01E         	movff	dtoa@w,pad@p
 11379  00229A  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 11380  00229E  ECAB  F017         	call	_pad	;wreg free
 11381  0022A2  C01A  F025         	movff	?_pad,?_dtoa
 11382  0022A6  C01B  F026         	movff	?_pad+1,?_dtoa+1
 11383  0022AA  0012               	return		;funcret
 11384  0022AC                     __end_of_dtoa:
 11385                           	opt callstack 0
 11386                           
 11387 ;; *************** function _abs *****************
 11388 ;; Defined at:
 11389 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  a               2   23[COMRAM] int 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  2   23[COMRAM] int 
 11396 ;; Registers used:
 11397 ;;		wreg, status,2, status,0
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;Total ram usage:        4 bytes
 11408 ;; Hardware stack levels used:    1
 11409 ;; Hardware stack levels required when called:    2
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_tirePositioning
 11414 ;;		_opErrorCorrectionDegrees
 11415 ;;		_dtoa
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text45
 11420  0037FA                     __ptext45:
 11421                           	opt callstack 0
 11422  0037FA                     _abs:
 11423                           	opt callstack 24
 11424                           
 11425                           ;incstack = 0
 11426  0037FA  BE19               	btfsc	abs@a+1,7,c
 11427  0037FC  D005               	goto	u7080
 11428  0037FE  5019               	movf	abs@a+1,w,c
 11429  003800  E110               	bnz	l1378
 11430  003802  0418               	decf	abs@a,w,c
 11431  003804  B0D8               	btfsc	status,0,c
 11432  003806  D00D               	goto	l1378
 11433  003808                     u7080:
 11434  003808  C018  F01A         	movff	abs@a,??_abs
 11435  00380C  C019  F01B         	movff	abs@a+1,??_abs+1
 11436  003810  1E1A               	comf	??_abs,f,c
 11437  003812  1E1B               	comf	??_abs+1,f,c
 11438  003814  4A1A               	infsnz	??_abs,f,c
 11439  003816  2A1B               	incf	??_abs+1,f,c
 11440  003818  C01A  F018         	movff	??_abs,?_abs
 11441  00381C  C01B  F019         	movff	??_abs+1,?_abs+1
 11442  003820  0012               	return	
 11443  003822                     l1378:
 11444  003822  C018  F018         	movff	abs@a,?_abs
 11445  003826  C019  F019         	movff	abs@a+1,?_abs+1
 11446  00382A  0012               	return		;funcret
 11447  00382C                     __end_of_abs:
 11448                           	opt callstack 0
 11449                           
 11450 ;; *************** function ___aomod *****************
 11451 ;; Defined at:
 11452 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;  dividend        8    5[COMRAM] long long 
 11455 ;;  divisor         8   13[COMRAM] long long 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;  sign            1   22[COMRAM] unsigned char 
 11458 ;;  counter         1   21[COMRAM] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  8    5[COMRAM] long long 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11468 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;Total ram usage:       18 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    2
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_dtoa
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text46
 11483  002BF4                     __ptext46:
 11484                           	opt callstack 0
 11485  002BF4                     ___aomod:
 11486                           	opt callstack 24
 11487                           
 11488                           ;incstack = 0
 11489  002BF4  0E00               	movlw	0
 11490  002BF6  6E17               	movwf	___aomod@sign,c
 11491  002BF8  AE0D               	btfss	___aomod@dividend+7,7,c
 11492  002BFA  D012               	goto	l6870
 11493  002BFC  1E0D               	comf	___aomod@dividend+7,f,c
 11494  002BFE  1E0C               	comf	___aomod@dividend+6,f,c
 11495  002C00  1E0B               	comf	___aomod@dividend+5,f,c
 11496  002C02  1E0A               	comf	___aomod@dividend+4,f,c
 11497  002C04  1E09               	comf	___aomod@dividend+3,f,c
 11498  002C06  1E08               	comf	___aomod@dividend+2,f,c
 11499  002C08  1E07               	comf	___aomod@dividend+1,f,c
 11500  002C0A  6C06               	negf	___aomod@dividend,c
 11501  002C0C  0E00               	movlw	0
 11502  002C0E  2207               	addwfc	___aomod@dividend+1,f,c
 11503  002C10  2208               	addwfc	___aomod@dividend+2,f,c
 11504  002C12  2209               	addwfc	___aomod@dividend+3,f,c
 11505  002C14  220A               	addwfc	___aomod@dividend+4,f,c
 11506  002C16  220B               	addwfc	___aomod@dividend+5,f,c
 11507  002C18  220C               	addwfc	___aomod@dividend+6,f,c
 11508  002C1A  220D               	addwfc	___aomod@dividend+7,f,c
 11509  002C1C  0E01               	movlw	1
 11510  002C1E  6E17               	movwf	___aomod@sign,c
 11511  002C20                     l6870:
 11512  002C20  AE15               	btfss	___aomod@divisor+7,7,c
 11513  002C22  D010               	goto	l6874
 11514  002C24  1E15               	comf	___aomod@divisor+7,f,c
 11515  002C26  1E14               	comf	___aomod@divisor+6,f,c
 11516  002C28  1E13               	comf	___aomod@divisor+5,f,c
 11517  002C2A  1E12               	comf	___aomod@divisor+4,f,c
 11518  002C2C  1E11               	comf	___aomod@divisor+3,f,c
 11519  002C2E  1E10               	comf	___aomod@divisor+2,f,c
 11520  002C30  1E0F               	comf	___aomod@divisor+1,f,c
 11521  002C32  6C0E               	negf	___aomod@divisor,c
 11522  002C34  0E00               	movlw	0
 11523  002C36  220F               	addwfc	___aomod@divisor+1,f,c
 11524  002C38  2210               	addwfc	___aomod@divisor+2,f,c
 11525  002C3A  2211               	addwfc	___aomod@divisor+3,f,c
 11526  002C3C  2212               	addwfc	___aomod@divisor+4,f,c
 11527  002C3E  2213               	addwfc	___aomod@divisor+5,f,c
 11528  002C40  2214               	addwfc	___aomod@divisor+6,f,c
 11529  002C42  2215               	addwfc	___aomod@divisor+7,f,c
 11530  002C44                     l6874:
 11531  002C44  500E               	movf	___aomod@divisor,w,c
 11532  002C46  100F               	iorwf	___aomod@divisor+1,w,c
 11533  002C48  1010               	iorwf	___aomod@divisor+2,w,c
 11534  002C4A  1011               	iorwf	___aomod@divisor+3,w,c
 11535  002C4C  1012               	iorwf	___aomod@divisor+4,w,c
 11536  002C4E  1013               	iorwf	___aomod@divisor+5,w,c
 11537  002C50  1014               	iorwf	___aomod@divisor+6,w,c
 11538  002C52  1015               	iorwf	___aomod@divisor+7,w,c
 11539  002C54  B4D8               	btfsc	status,2,c
 11540  002C56  D03C               	goto	l6890
 11541  002C58  0E01               	movlw	1
 11542  002C5A  6E16               	movwf	___aomod@counter,c
 11543  002C5C  D00A               	goto	l6880
 11544  002C5E                     l6878:
 11545  002C5E  90D8               	bcf	status,0,c
 11546  002C60  360E               	rlcf	___aomod@divisor,f,c
 11547  002C62  360F               	rlcf	___aomod@divisor+1,f,c
 11548  002C64  3610               	rlcf	___aomod@divisor+2,f,c
 11549  002C66  3611               	rlcf	___aomod@divisor+3,f,c
 11550  002C68  3612               	rlcf	___aomod@divisor+4,f,c
 11551  002C6A  3613               	rlcf	___aomod@divisor+5,f,c
 11552  002C6C  3614               	rlcf	___aomod@divisor+6,f,c
 11553  002C6E  3615               	rlcf	___aomod@divisor+7,f,c
 11554  002C70  2A16               	incf	___aomod@counter,f,c
 11555  002C72                     l6880:
 11556  002C72  AE15               	btfss	___aomod@divisor+7,7,c
 11557  002C74  D7F4               	goto	l6878
 11558  002C76                     u7320:
 11559  002C76  500E               	movf	___aomod@divisor,w,c
 11560  002C78  5C06               	subwf	___aomod@dividend,w,c
 11561  002C7A  500F               	movf	___aomod@divisor+1,w,c
 11562  002C7C  5807               	subwfb	___aomod@dividend+1,w,c
 11563  002C7E  5010               	movf	___aomod@divisor+2,w,c
 11564  002C80  5808               	subwfb	___aomod@dividend+2,w,c
 11565  002C82  5011               	movf	___aomod@divisor+3,w,c
 11566  002C84  5809               	subwfb	___aomod@dividend+3,w,c
 11567  002C86  5012               	movf	___aomod@divisor+4,w,c
 11568  002C88  580A               	subwfb	___aomod@dividend+4,w,c
 11569  002C8A  5013               	movf	___aomod@divisor+5,w,c
 11570  002C8C  580B               	subwfb	___aomod@dividend+5,w,c
 11571  002C8E  5014               	movf	___aomod@divisor+6,w,c
 11572  002C90  580C               	subwfb	___aomod@dividend+6,w,c
 11573  002C92  5015               	movf	___aomod@divisor+7,w,c
 11574  002C94  580D               	subwfb	___aomod@dividend+7,w,c
 11575  002C96  A0D8               	btfss	status,0,c
 11576  002C98  D010               	goto	l6886
 11577  002C9A  500E               	movf	___aomod@divisor,w,c
 11578  002C9C  5E06               	subwf	___aomod@dividend,f,c
 11579  002C9E  500F               	movf	___aomod@divisor+1,w,c
 11580  002CA0  5A07               	subwfb	___aomod@dividend+1,f,c
 11581  002CA2  5010               	movf	___aomod@divisor+2,w,c
 11582  002CA4  5A08               	subwfb	___aomod@dividend+2,f,c
 11583  002CA6  5011               	movf	___aomod@divisor+3,w,c
 11584  002CA8  5A09               	subwfb	___aomod@dividend+3,f,c
 11585  002CAA  5012               	movf	___aomod@divisor+4,w,c
 11586  002CAC  5A0A               	subwfb	___aomod@dividend+4,f,c
 11587  002CAE  5013               	movf	___aomod@divisor+5,w,c
 11588  002CB0  5A0B               	subwfb	___aomod@dividend+5,f,c
 11589  002CB2  5014               	movf	___aomod@divisor+6,w,c
 11590  002CB4  5A0C               	subwfb	___aomod@dividend+6,f,c
 11591  002CB6  5015               	movf	___aomod@divisor+7,w,c
 11592  002CB8  5A0D               	subwfb	___aomod@dividend+7,f,c
 11593  002CBA                     l6886:
 11594  002CBA  90D8               	bcf	status,0,c
 11595  002CBC  3215               	rrcf	___aomod@divisor+7,f,c
 11596  002CBE  3214               	rrcf	___aomod@divisor+6,f,c
 11597  002CC0  3213               	rrcf	___aomod@divisor+5,f,c
 11598  002CC2  3212               	rrcf	___aomod@divisor+4,f,c
 11599  002CC4  3211               	rrcf	___aomod@divisor+3,f,c
 11600  002CC6  3210               	rrcf	___aomod@divisor+2,f,c
 11601  002CC8  320F               	rrcf	___aomod@divisor+1,f,c
 11602  002CCA  320E               	rrcf	___aomod@divisor,f,c
 11603  002CCC  2E16               	decfsz	___aomod@counter,f,c
 11604  002CCE  D7D3               	goto	u7320
 11605  002CD0                     l6890:
 11606  002CD0  5017               	movf	___aomod@sign,w,c
 11607  002CD2  B4D8               	btfsc	status,2,c
 11608  002CD4  D010               	goto	l6894
 11609  002CD6  1E0D               	comf	___aomod@dividend+7,f,c
 11610  002CD8  1E0C               	comf	___aomod@dividend+6,f,c
 11611  002CDA  1E0B               	comf	___aomod@dividend+5,f,c
 11612  002CDC  1E0A               	comf	___aomod@dividend+4,f,c
 11613  002CDE  1E09               	comf	___aomod@dividend+3,f,c
 11614  002CE0  1E08               	comf	___aomod@dividend+2,f,c
 11615  002CE2  1E07               	comf	___aomod@dividend+1,f,c
 11616  002CE4  6C06               	negf	___aomod@dividend,c
 11617  002CE6  0E00               	movlw	0
 11618  002CE8  2207               	addwfc	___aomod@dividend+1,f,c
 11619  002CEA  2208               	addwfc	___aomod@dividend+2,f,c
 11620  002CEC  2209               	addwfc	___aomod@dividend+3,f,c
 11621  002CEE  220A               	addwfc	___aomod@dividend+4,f,c
 11622  002CF0  220B               	addwfc	___aomod@dividend+5,f,c
 11623  002CF2  220C               	addwfc	___aomod@dividend+6,f,c
 11624  002CF4  220D               	addwfc	___aomod@dividend+7,f,c
 11625  002CF6                     l6894:
 11626  002CF6  C006  F006         	movff	___aomod@dividend,?___aomod
 11627  002CFA  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 11628  002CFE  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 11629  002D02  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 11630  002D06  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 11631  002D0A  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 11632  002D0E  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 11633  002D12  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 11634  002D16  0012               	return		;funcret
 11635  002D18                     __end_of___aomod:
 11636                           	opt callstack 0
 11637                           
 11638 ;; *************** function ___aodiv *****************
 11639 ;; Defined at:
 11640 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  dividend        8    5[COMRAM] long long 
 11643 ;;  divisor         8   13[COMRAM] long long 
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;  quotient        8   23[COMRAM] long long 
 11646 ;;  sign            1   22[COMRAM] unsigned char 
 11647 ;;  counter         1   21[COMRAM] unsigned char 
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  8    5[COMRAM] long long 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11657 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11661 ;;Total ram usage:       26 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    2
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_dtoa
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text47
 11672  0026E8                     __ptext47:
 11673                           	opt callstack 0
 11674  0026E8                     ___aodiv:
 11675                           	opt callstack 24
 11676                           
 11677                           ;incstack = 0
 11678  0026E8  0E00               	movlw	0
 11679  0026EA  6E17               	movwf	___aodiv@sign,c
 11680  0026EC  AE15               	btfss	___aodiv@divisor+7,7,c
 11681  0026EE  D012               	goto	l6826
 11682  0026F0  1E15               	comf	___aodiv@divisor+7,f,c
 11683  0026F2  1E14               	comf	___aodiv@divisor+6,f,c
 11684  0026F4  1E13               	comf	___aodiv@divisor+5,f,c
 11685  0026F6  1E12               	comf	___aodiv@divisor+4,f,c
 11686  0026F8  1E11               	comf	___aodiv@divisor+3,f,c
 11687  0026FA  1E10               	comf	___aodiv@divisor+2,f,c
 11688  0026FC  1E0F               	comf	___aodiv@divisor+1,f,c
 11689  0026FE  6C0E               	negf	___aodiv@divisor,c
 11690  002700  0E00               	movlw	0
 11691  002702  220F               	addwfc	___aodiv@divisor+1,f,c
 11692  002704  2210               	addwfc	___aodiv@divisor+2,f,c
 11693  002706  2211               	addwfc	___aodiv@divisor+3,f,c
 11694  002708  2212               	addwfc	___aodiv@divisor+4,f,c
 11695  00270A  2213               	addwfc	___aodiv@divisor+5,f,c
 11696  00270C  2214               	addwfc	___aodiv@divisor+6,f,c
 11697  00270E  2215               	addwfc	___aodiv@divisor+7,f,c
 11698  002710  0E01               	movlw	1
 11699  002712  6E17               	movwf	___aodiv@sign,c
 11700  002714                     l6826:
 11701  002714  AE0D               	btfss	___aodiv@dividend+7,7,c
 11702  002716  D012               	goto	l6832
 11703  002718  1E0D               	comf	___aodiv@dividend+7,f,c
 11704  00271A  1E0C               	comf	___aodiv@dividend+6,f,c
 11705  00271C  1E0B               	comf	___aodiv@dividend+5,f,c
 11706  00271E  1E0A               	comf	___aodiv@dividend+4,f,c
 11707  002720  1E09               	comf	___aodiv@dividend+3,f,c
 11708  002722  1E08               	comf	___aodiv@dividend+2,f,c
 11709  002724  1E07               	comf	___aodiv@dividend+1,f,c
 11710  002726  6C06               	negf	___aodiv@dividend,c
 11711  002728  0E00               	movlw	0
 11712  00272A  2207               	addwfc	___aodiv@dividend+1,f,c
 11713  00272C  2208               	addwfc	___aodiv@dividend+2,f,c
 11714  00272E  2209               	addwfc	___aodiv@dividend+3,f,c
 11715  002730  220A               	addwfc	___aodiv@dividend+4,f,c
 11716  002732  220B               	addwfc	___aodiv@dividend+5,f,c
 11717  002734  220C               	addwfc	___aodiv@dividend+6,f,c
 11718  002736  220D               	addwfc	___aodiv@dividend+7,f,c
 11719  002738  0E01               	movlw	1
 11720  00273A  1A17               	xorwf	___aodiv@sign,f,c
 11721  00273C                     l6832:
 11722  00273C  EE20  F018         	lfsr	2,___aodiv@quotient
 11723  002740  0E07               	movlw	7
 11724  002742                     u7241:
 11725  002742  6ADE               	clrf	postinc2,c
 11726  002744  06E8               	decf	wreg,f,c
 11727  002746  E2FD               	bc	u7241
 11728  002748  500E               	movf	___aodiv@divisor,w,c
 11729  00274A  100F               	iorwf	___aodiv@divisor+1,w,c
 11730  00274C  1010               	iorwf	___aodiv@divisor+2,w,c
 11731  00274E  1011               	iorwf	___aodiv@divisor+3,w,c
 11732  002750  1012               	iorwf	___aodiv@divisor+4,w,c
 11733  002752  1013               	iorwf	___aodiv@divisor+5,w,c
 11734  002754  1014               	iorwf	___aodiv@divisor+6,w,c
 11735  002756  1015               	iorwf	___aodiv@divisor+7,w,c
 11736  002758  B4D8               	btfsc	status,2,c
 11737  00275A  D046               	goto	l6854
 11738  00275C  0E01               	movlw	1
 11739  00275E  6E16               	movwf	___aodiv@counter,c
 11740  002760  D00A               	goto	l6840
 11741  002762                     l6838:
 11742  002762  90D8               	bcf	status,0,c
 11743  002764  360E               	rlcf	___aodiv@divisor,f,c
 11744  002766  360F               	rlcf	___aodiv@divisor+1,f,c
 11745  002768  3610               	rlcf	___aodiv@divisor+2,f,c
 11746  00276A  3611               	rlcf	___aodiv@divisor+3,f,c
 11747  00276C  3612               	rlcf	___aodiv@divisor+4,f,c
 11748  00276E  3613               	rlcf	___aodiv@divisor+5,f,c
 11749  002770  3614               	rlcf	___aodiv@divisor+6,f,c
 11750  002772  3615               	rlcf	___aodiv@divisor+7,f,c
 11751  002774  2A16               	incf	___aodiv@counter,f,c
 11752  002776                     l6840:
 11753  002776  AE15               	btfss	___aodiv@divisor+7,7,c
 11754  002778  D7F4               	goto	l6838
 11755  00277A                     u7260:
 11756  00277A  90D8               	bcf	status,0,c
 11757  00277C  3618               	rlcf	___aodiv@quotient,f,c
 11758  00277E  3619               	rlcf	___aodiv@quotient+1,f,c
 11759  002780  361A               	rlcf	___aodiv@quotient+2,f,c
 11760  002782  361B               	rlcf	___aodiv@quotient+3,f,c
 11761  002784  361C               	rlcf	___aodiv@quotient+4,f,c
 11762  002786  361D               	rlcf	___aodiv@quotient+5,f,c
 11763  002788  361E               	rlcf	___aodiv@quotient+6,f,c
 11764  00278A  361F               	rlcf	___aodiv@quotient+7,f,c
 11765  00278C  500E               	movf	___aodiv@divisor,w,c
 11766  00278E  5C06               	subwf	___aodiv@dividend,w,c
 11767  002790  500F               	movf	___aodiv@divisor+1,w,c
 11768  002792  5807               	subwfb	___aodiv@dividend+1,w,c
 11769  002794  5010               	movf	___aodiv@divisor+2,w,c
 11770  002796  5808               	subwfb	___aodiv@dividend+2,w,c
 11771  002798  5011               	movf	___aodiv@divisor+3,w,c
 11772  00279A  5809               	subwfb	___aodiv@dividend+3,w,c
 11773  00279C  5012               	movf	___aodiv@divisor+4,w,c
 11774  00279E  580A               	subwfb	___aodiv@dividend+4,w,c
 11775  0027A0  5013               	movf	___aodiv@divisor+5,w,c
 11776  0027A2  580B               	subwfb	___aodiv@dividend+5,w,c
 11777  0027A4  5014               	movf	___aodiv@divisor+6,w,c
 11778  0027A6  580C               	subwfb	___aodiv@dividend+6,w,c
 11779  0027A8  5015               	movf	___aodiv@divisor+7,w,c
 11780  0027AA  580D               	subwfb	___aodiv@dividend+7,w,c
 11781  0027AC  A0D8               	btfss	status,0,c
 11782  0027AE  D011               	goto	l6850
 11783  0027B0  500E               	movf	___aodiv@divisor,w,c
 11784  0027B2  5E06               	subwf	___aodiv@dividend,f,c
 11785  0027B4  500F               	movf	___aodiv@divisor+1,w,c
 11786  0027B6  5A07               	subwfb	___aodiv@dividend+1,f,c
 11787  0027B8  5010               	movf	___aodiv@divisor+2,w,c
 11788  0027BA  5A08               	subwfb	___aodiv@dividend+2,f,c
 11789  0027BC  5011               	movf	___aodiv@divisor+3,w,c
 11790  0027BE  5A09               	subwfb	___aodiv@dividend+3,f,c
 11791  0027C0  5012               	movf	___aodiv@divisor+4,w,c
 11792  0027C2  5A0A               	subwfb	___aodiv@dividend+4,f,c
 11793  0027C4  5013               	movf	___aodiv@divisor+5,w,c
 11794  0027C6  5A0B               	subwfb	___aodiv@dividend+5,f,c
 11795  0027C8  5014               	movf	___aodiv@divisor+6,w,c
 11796  0027CA  5A0C               	subwfb	___aodiv@dividend+6,f,c
 11797  0027CC  5015               	movf	___aodiv@divisor+7,w,c
 11798  0027CE  5A0D               	subwfb	___aodiv@dividend+7,f,c
 11799  0027D0  8018               	bsf	___aodiv@quotient,0,c
 11800  0027D2                     l6850:
 11801  0027D2  90D8               	bcf	status,0,c
 11802  0027D4  3215               	rrcf	___aodiv@divisor+7,f,c
 11803  0027D6  3214               	rrcf	___aodiv@divisor+6,f,c
 11804  0027D8  3213               	rrcf	___aodiv@divisor+5,f,c
 11805  0027DA  3212               	rrcf	___aodiv@divisor+4,f,c
 11806  0027DC  3211               	rrcf	___aodiv@divisor+3,f,c
 11807  0027DE  3210               	rrcf	___aodiv@divisor+2,f,c
 11808  0027E0  320F               	rrcf	___aodiv@divisor+1,f,c
 11809  0027E2  320E               	rrcf	___aodiv@divisor,f,c
 11810  0027E4  2E16               	decfsz	___aodiv@counter,f,c
 11811  0027E6  D7C9               	goto	u7260
 11812  0027E8                     l6854:
 11813  0027E8  5017               	movf	___aodiv@sign,w,c
 11814  0027EA  B4D8               	btfsc	status,2,c
 11815  0027EC  D010               	goto	l6858
 11816  0027EE  1E1F               	comf	___aodiv@quotient+7,f,c
 11817  0027F0  1E1E               	comf	___aodiv@quotient+6,f,c
 11818  0027F2  1E1D               	comf	___aodiv@quotient+5,f,c
 11819  0027F4  1E1C               	comf	___aodiv@quotient+4,f,c
 11820  0027F6  1E1B               	comf	___aodiv@quotient+3,f,c
 11821  0027F8  1E1A               	comf	___aodiv@quotient+2,f,c
 11822  0027FA  1E19               	comf	___aodiv@quotient+1,f,c
 11823  0027FC  6C18               	negf	___aodiv@quotient,c
 11824  0027FE  0E00               	movlw	0
 11825  002800  2219               	addwfc	___aodiv@quotient+1,f,c
 11826  002802  221A               	addwfc	___aodiv@quotient+2,f,c
 11827  002804  221B               	addwfc	___aodiv@quotient+3,f,c
 11828  002806  221C               	addwfc	___aodiv@quotient+4,f,c
 11829  002808  221D               	addwfc	___aodiv@quotient+5,f,c
 11830  00280A  221E               	addwfc	___aodiv@quotient+6,f,c
 11831  00280C  221F               	addwfc	___aodiv@quotient+7,f,c
 11832  00280E                     l6858:
 11833  00280E  C018  F006         	movff	___aodiv@quotient,?___aodiv
 11834  002812  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 11835  002816  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 11836  00281A  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 11837  00281E  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 11838  002822  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 11839  002826  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 11840  00282A  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 11841  00282E  0012               	return		;funcret
 11842  002830                     __end_of___aodiv:
 11843                           	opt callstack 0
 11844                           
 11845 ;; *************** function _ctoa *****************
 11846 ;; Defined at:
 11847 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11850 ;;		 -> NULL(0), 
 11851 ;;  c               1   38[COMRAM] unsigned char 
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;  w               2   39[COMRAM] int 
 11854 ;;  l               2    0        int 
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  2   36[COMRAM] int 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11864 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;Total ram usage:        5 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:    9
 11871 ;; This function calls:
 11872 ;;		_pad
 11873 ;; This function is called by:
 11874 ;;		_vfpfcnvrt
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text48
 11879  0034D4                     __ptext48:
 11880                           	opt callstack 0
 11881  0034D4                     _ctoa:
 11882                           	opt callstack 18
 11883                           
 11884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 11885                           
 11886                           ;incstack = 0
 11887  0034D4  0101               	movlb	1	; () banked
 11888  0034D6  5149               	movf	_width& (0+255),w,b
 11889  0034D8  114A               	iorwf	(_width+1)& (0+255),w,b
 11890  0034DA  A4D8               	btfss	status,2,c
 11891  0034DC  D005               	goto	l6914
 11892                           
 11893                           ; BSR set to: 1
 11894  0034DE  C149  F028         	movff	_width,ctoa@w
 11895  0034E2  C14A  F029         	movff	_width+1,ctoa@w+1
 11896  0034E6  D006               	goto	l6916
 11897  0034E8                     l6914:
 11898                           
 11899                           ; BSR set to: 1
 11900  0034E8  0EFF               	movlw	255
 11901  0034EA  2549               	addwf	_width& (0+255),w,b
 11902  0034EC  6E28               	movwf	ctoa@w,c
 11903  0034EE  0EFF               	movlw	255
 11904  0034F0  214A               	addwfc	(_width+1)& (0+255),w,b
 11905  0034F2  6E29               	movwf	ctoa@w+1,c
 11906  0034F4                     l6916:
 11907                           
 11908                           ; BSR set to: 1
 11909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 11910  0034F4  C027  F151         	movff	ctoa@c,_dbuf
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 11914  0034F8  0E00               	movlw	0
 11915  0034FA  6F52               	movwf	(_dbuf+1)& (0+255),b
 11916                           
 11917                           ; BSR set to: 1
 11918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 11919  0034FC  C025  F01A         	movff	ctoa@fp,pad@fp
 11920  003500  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 11921  003504  0E51               	movlw	low _dbuf
 11922  003506  6E1C               	movwf	pad@buf,c
 11923  003508  0E01               	movlw	high _dbuf
 11924  00350A  6E1D               	movwf	pad@buf+1,c
 11925  00350C  C028  F01E         	movff	ctoa@w,pad@p
 11926  003510  C029  F01F         	movff	ctoa@w+1,pad@p+1
 11927  003514  ECAB  F017         	call	_pad	;wreg free
 11928  003518  C01A  F025         	movff	?_pad,?_ctoa
 11929  00351C  C01B  F026         	movff	?_pad+1,?_ctoa+1
 11930  003520  0012               	return		;funcret
 11931  003522                     __end_of_ctoa:
 11932                           	opt callstack 0
 11933                           
 11934 ;; *************** function _pad *****************
 11935 ;; Defined at:
 11936 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11939 ;;		 -> NULL(0), 
 11940 ;;  buf             2   27[COMRAM] PTR unsigned char 
 11941 ;;		 -> dbuf(32), 
 11942 ;;  p               2   29[COMRAM] int 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  w               2   34[COMRAM] int 
 11945 ;;  i               2   32[COMRAM] int 
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  2   25[COMRAM] int 
 11948 ;; Registers used:
 11949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11955 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;Total ram usage:       11 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    8
 11962 ;; This function calls:
 11963 ;;		_fputc
 11964 ;;		_fputs
 11965 ;;		_strlen
 11966 ;; This function is called by:
 11967 ;;		_ctoa
 11968 ;;		_dtoa
 11969 ;;		_xtoa
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text49
 11974  002F56                     __ptext49:
 11975                           	opt callstack 0
 11976  002F56                     _pad:
 11977                           	opt callstack 18
 11978                           
 11979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11980                           
 11981                           ;incstack = 0
 11982  002F56  0100               	movlb	0	; () banked
 11983  002F58  A1CC               	btfss	_flags& (0+255),0,b
 11984  002F5A  D00A               	goto	l6772
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11988  002F5C  C01C  F013         	movff	pad@buf,fputs@s
 11989  002F60  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11990  002F64  C01A  F015         	movff	pad@fp,fputs@fp
 11991  002F68  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11992  002F6C  ECC7  F01B         	call	_fputs	;wreg free
 11993  002F70                     l6772:
 11994                           
 11995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11996  002F70  BE1F               	btfsc	pad@p+1,7,c
 11997  002F72  D005               	goto	l6776
 11998  002F74  C01E  F023         	movff	pad@p,pad@w
 11999  002F78  C01F  F024         	movff	pad@p+1,pad@w+1
 12000  002F7C  D004               	goto	l568
 12001  002F7E                     l6776:
 12002  002F7E  0E00               	movlw	0
 12003  002F80  6E24               	movwf	pad@w+1,c
 12004  002F82  0E00               	movlw	0
 12005  002F84  6E23               	movwf	pad@w,c
 12006  002F86                     l568:
 12007                           
 12008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12009  002F86  0E00               	movlw	0
 12010  002F88  6E22               	movwf	pad@i+1,c
 12011  002F8A  0E00               	movlw	0
 12012  002F8C  6E21               	movwf	pad@i,c
 12013                           
 12014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12015  002F8E  D00C               	goto	l6782
 12016  002F90                     l6778:
 12017                           
 12018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12019  002F90  0E00               	movlw	0
 12020  002F92  6E0B               	movwf	fputc@c+1,c
 12021  002F94  0E20               	movlw	32
 12022  002F96  6E0A               	movwf	fputc@c,c
 12023  002F98  C01A  F00C         	movff	pad@fp,fputc@fp
 12024  002F9C  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 12025  002FA0  EC41  F019         	call	_fputc	;wreg free
 12026                           
 12027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12028  002FA4  4A21               	infsnz	pad@i,f,c
 12029  002FA6  2A22               	incf	pad@i+1,f,c
 12030  002FA8                     l6782:
 12031                           
 12032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12033  002FA8  5023               	movf	pad@w,w,c
 12034  002FAA  5C21               	subwf	pad@i,w,c
 12035  002FAC  5022               	movf	pad@i+1,w,c
 12036  002FAE  0A80               	xorlw	128
 12037  002FB0  6E20               	movwf	??_pad& (0+255),c
 12038  002FB2  5024               	movf	pad@w+1,w,c
 12039  002FB4  0A80               	xorlw	128
 12040  002FB6  5820               	subwfb	??_pad& (0+255),w,c
 12041  002FB8  A0D8               	btfss	status,0,c
 12042  002FBA  D7EA               	goto	l6778
 12043                           
 12044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12045  002FBC  0100               	movlb	0	; () banked
 12046  002FBE  B1CC               	btfsc	_flags& (0+255),0,b
 12047  002FC0  D00A               	goto	l6786
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12051  002FC2  C01C  F013         	movff	pad@buf,fputs@s
 12052  002FC6  C01D  F014         	movff	pad@buf+1,fputs@s+1
 12053  002FCA  C01A  F015         	movff	pad@fp,fputs@fp
 12054  002FCE  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 12055  002FD2  ECC7  F01B         	call	_fputs	;wreg free
 12056  002FD6                     l6786:
 12057                           
 12058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12059  002FD6  C01C  F006         	movff	pad@buf,strlen@s
 12060  002FDA  C01D  F007         	movff	pad@buf+1,strlen@s+1
 12061  002FDE  EC22  F01B         	call	_strlen	;wreg free
 12062  002FE2  5023               	movf	pad@w,w,c
 12063  002FE4  2406               	addwf	?_strlen,w,c
 12064  002FE6  6E1A               	movwf	?_pad,c
 12065  002FE8  5024               	movf	pad@w+1,w,c
 12066  002FEA  2007               	addwfc	?_strlen+1,w,c
 12067  002FEC  6E1B               	movwf	?_pad+1,c
 12068  002FEE  0012               	return		;funcret
 12069  002FF0                     __end_of_pad:
 12070                           	opt callstack 0
 12071                           
 12072 ;; *************** function _strlen *****************
 12073 ;; Defined at:
 12074 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;  s               2    5[COMRAM] PTR const unsigned char 
 12077 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_52(16), 
 12078 ;;		 -> STR_50(14), STR_48(11), STR_46(9), STR_44(16), 
 12079 ;;		 -> STR_42(13), STR_40(13), STR_38(9), STR_36(13), 
 12080 ;;		 -> STR_34(14), STR_32(10), STR_28(9), STR_18(14), 
 12081 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 12082 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 12083 ;;		 -> STR_2(10), 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  a               2    7[COMRAM] PTR const unsigned char 
 12086 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_52(16), 
 12087 ;;		 -> STR_50(14), STR_48(11), STR_46(9), STR_44(16), 
 12088 ;;		 -> STR_42(13), STR_40(13), STR_38(9), STR_36(13), 
 12089 ;;		 -> STR_34(14), STR_32(10), STR_28(9), STR_18(14), 
 12090 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 12091 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 12092 ;;		 -> STR_2(10), 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  2    5[COMRAM] unsigned int 
 12095 ;; Registers used:
 12096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12106 ;;Total ram usage:        4 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    2
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_pad
 12113 ;;		_stoa
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text50
 12118  003644                     __ptext50:
 12119                           	opt callstack 0
 12120  003644                     _strlen:
 12121                           	opt callstack 23
 12122                           
 12123                           ;incstack = 0
 12124  003644  C006  F008         	movff	strlen@s,strlen@a
 12125  003648  C007  F009         	movff	strlen@s+1,strlen@a+1
 12126  00364C  D002               	goto	l6754
 12127  00364E                     l6752:
 12128  00364E  4A06               	infsnz	strlen@s,f,c
 12129  003650  2A07               	incf	strlen@s+1,f,c
 12130  003652                     l6754:
 12131  003652  C006  FFF6         	movff	strlen@s,tblptrl
 12132  003656  C007  FFF7         	movff	strlen@s+1,tblptrh
 12133  00365A  0E00               	movlw	low (__mediumconst shr (0+16))
 12134  00365C  6EF8               	movwf	tblptru,c
 12135  00365E  0E0F               	movlw	(high __ramtop+-1)
 12136  003660  64F7               	cpfsgt	tblptrh,c
 12137  003662  D003               	bra	u7047
 12138  003664  0008               	tblrd		*
 12139  003666  50F5               	movf	tablat,w,c
 12140  003668  D005               	bra	u7040
 12141  00366A                     u7047:
 12142  00366A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12143  00366E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12144  003672  50E7               	movf	indf1,w,c
 12145  003674                     u7040:
 12146  003674  0900               	iorlw	0
 12147  003676  A4D8               	btfss	status,2,c
 12148  003678  D7EA               	goto	l6752
 12149  00367A  5008               	movf	strlen@a,w,c
 12150  00367C  5C06               	subwf	strlen@s,w,c
 12151  00367E  6E06               	movwf	?_strlen,c
 12152  003680  5009               	movf	strlen@a+1,w,c
 12153  003682  5807               	subwfb	strlen@s+1,w,c
 12154  003684  6E07               	movwf	?_strlen+1,c
 12155  003686  0012               	return		;funcret
 12156  003688                     __end_of_strlen:
 12157                           	opt callstack 0
 12158                           
 12159 ;; *************** function _fputs *****************
 12160 ;; Defined at:
 12161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  s               2   18[COMRAM] PTR const unsigned char 
 12164 ;;		 -> dbuf(32), 
 12165 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 12166 ;;		 -> NULL(0), 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;  i               2   23[COMRAM] int 
 12169 ;;  c               1   22[COMRAM] unsigned char 
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  2   18[COMRAM] int 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;Total ram usage:        7 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    7
 12186 ;; This function calls:
 12187 ;;		_fputc
 12188 ;; This function is called by:
 12189 ;;		_pad
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text51
 12194  00378E                     __ptext51:
 12195                           	opt callstack 0
 12196  00378E                     _fputs:
 12197                           	opt callstack 18
 12198                           
 12199                           ;incstack = 0
 12200  00378E  0E00               	movlw	0
 12201  003790  6E19               	movwf	fputs@i+1,c
 12202  003792  0E00               	movlw	0
 12203  003794  6E18               	movwf	fputs@i,c
 12204  003796  D00B               	goto	l6748
 12205  003798                     l6744:
 12206  003798  C017  F00A         	movff	fputs@c,fputc@c
 12207  00379C  6A0B               	clrf	fputc@c+1,c
 12208  00379E  C015  F00C         	movff	fputs@fp,fputc@fp
 12209  0037A2  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 12210  0037A6  EC41  F019         	call	_fputc	;wreg free
 12211  0037AA  4A18               	infsnz	fputs@i,f,c
 12212  0037AC  2A19               	incf	fputs@i+1,f,c
 12213  0037AE                     l6748:
 12214  0037AE  5018               	movf	fputs@i,w,c
 12215  0037B0  2413               	addwf	fputs@s,w,c
 12216  0037B2  6ED9               	movwf	fsr2l,c
 12217  0037B4  5019               	movf	fputs@i+1,w,c
 12218  0037B6  2014               	addwfc	fputs@s+1,w,c
 12219  0037B8  6EDA               	movwf	fsr2h,c
 12220  0037BA  50DF               	movf	indf2,w,c
 12221  0037BC  6E17               	movwf	fputs@c,c
 12222  0037BE  5017               	movf	fputs@c,w,c
 12223  0037C0  B4D8               	btfsc	status,2,c
 12224  0037C2  0012               	return	
 12225  0037C4  D7E9               	goto	l6744
 12226  0037C6                     __end_of_fputs:
 12227                           	opt callstack 0
 12228                           
 12229 ;; *************** function _fputc *****************
 12230 ;; Defined at:
 12231 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  c               2    9[COMRAM] int 
 12234 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12235 ;;		 -> NULL(0), 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;		None
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  2    9[COMRAM] int 
 12240 ;; Registers used:
 12241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12242 ;; Tracked objects:
 12243 ;;		On entry : 0/0
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12249 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;Total ram usage:        9 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    6
 12254 ;; This function calls:
 12255 ;;		_putch
 12256 ;; This function is called by:
 12257 ;;		_pad
 12258 ;;		_stoa
 12259 ;;		_vfpfcnvrt
 12260 ;;		_fputs
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text52
 12265  003282                     __ptext52:
 12266                           	opt callstack 0
 12267  003282                     _fputc:
 12268                           	opt callstack 18
 12269                           
 12270                           ;incstack = 0
 12271  003282  500C               	movf	fputc@fp,w,c
 12272  003284  100D               	iorwf	fputc@fp+1,w,c
 12273  003286  B4D8               	btfsc	status,2,c
 12274  003288  D004               	goto	u7000
 12275  00328A  500C               	movf	fputc@fp,w,c
 12276  00328C  100D               	iorwf	fputc@fp+1,w,c
 12277  00328E  A4D8               	btfss	status,2,c
 12278  003290  D004               	goto	l6734
 12279  003292                     u7000:
 12280  003292  500A               	movf	fputc@c,w,c
 12281  003294  EC41  F01D         	call	_putch
 12282  003298  0012               	return	
 12283  00329A                     l6734:
 12284  00329A  EE20 F004          	lfsr	2,4
 12285  00329E  500C               	movf	fputc@fp,w,c
 12286  0032A0  26D9               	addwf	fsr2l,f,c
 12287  0032A2  500D               	movf	fputc@fp+1,w,c
 12288  0032A4  22DA               	addwfc	fsr2h,f,c
 12289  0032A6  50DE               	movf	postinc2,w,c
 12290  0032A8  10DE               	iorwf	postinc2,w,c
 12291  0032AA  B4D8               	btfsc	status,2,c
 12292  0032AC  D016               	goto	u7020
 12293  0032AE  EE20 F004          	lfsr	2,4
 12294  0032B2  500C               	movf	fputc@fp,w,c
 12295  0032B4  26D9               	addwf	fsr2l,f,c
 12296  0032B6  500D               	movf	fputc@fp+1,w,c
 12297  0032B8  22DA               	addwfc	fsr2h,f,c
 12298  0032BA  EE10 F002          	lfsr	1,2
 12299  0032BE  500C               	movf	fputc@fp,w,c
 12300  0032C0  26E1               	addwf	fsr1l,f,c
 12301  0032C2  500D               	movf	fputc@fp+1,w,c
 12302  0032C4  22E2               	addwfc	fsr1h,f,c
 12303  0032C6  50DE               	movf	postinc2,w,c
 12304  0032C8  5CE6               	subwf	postinc1,w,c
 12305  0032CA  50E6               	movf	postinc1,w,c
 12306  0032CC  0A80               	xorlw	128
 12307  0032CE  6E12               	movwf	(??_fputc+4)& (0+255),c
 12308  0032D0  50DE               	movf	postinc2,w,c
 12309  0032D2  0A80               	xorlw	128
 12310  0032D4  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 12311  0032D6  B0D8               	btfsc	status,0,c
 12312  0032D8  0012               	return	
 12313  0032DA                     u7020:
 12314  0032DA  EE20 F002          	lfsr	2,2
 12315  0032DE  500C               	movf	fputc@fp,w,c
 12316  0032E0  26D9               	addwf	fsr2l,f,c
 12317  0032E2  500D               	movf	fputc@fp+1,w,c
 12318  0032E4  22DA               	addwfc	fsr2h,f,c
 12319  0032E6  2ADE               	incf	postinc2,f,c
 12320  0032E8  0E00               	movlw	0
 12321  0032EA  22DD               	addwfc	postdec2,f,c
 12322  0032EC  0012               	return		;funcret
 12323  0032EE                     __end_of_fputc:
 12324                           	opt callstack 0
 12325                           
 12326 ;; *************** function _putch *****************
 12327 ;; Defined at:
 12328 ;;		line 102 in file "lcd.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;  data            1    wreg     unsigned char 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;  data            1    8[COMRAM] unsigned char 
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1    wreg      void 
 12335 ;; Registers used:
 12336 ;;		wreg, status,2, status,0, cstack
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;Total ram usage:        1 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    5
 12349 ;; This function calls:
 12350 ;;		_send_byte
 12351 ;; This function is called by:
 12352 ;;		_fputc
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text53
 12357  003A82                     __ptext53:
 12358                           	opt callstack 0
 12359  003A82                     _putch:
 12360                           	opt callstack 18
 12361                           
 12362                           ;incstack = 0
 12363                           ;putch@data stored from wreg
 12364  003A82  6E09               	movwf	putch@data,c
 12365                           
 12366                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 12367  003A84  848C               	bsf	3980,2,c	;volatile
 12368                           
 12369                           ;lcd.c: 104:     send_byte((unsigned char)data);
 12370  003A86  5009               	movf	putch@data,w,c
 12371  003A88  EC38  F01D         	call	_send_byte
 12372  003A8C  0012               	return		;funcret
 12373  003A8E                     __end_of_putch:
 12374                           	opt callstack 0
 12375                           
 12376 ;; *************** function _atoi *****************
 12377 ;; Defined at:
 12378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12381 ;;		 -> STR_56(11), STR_55(11), STR_54(10), STR_53(13), 
 12382 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 12383 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
 12384 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_30(15), 
 12385 ;;		 -> STR_29(15), STR_27(3), STR_26(13), STR_25(11), 
 12386 ;;		 -> STR_24(10), STR_23(6), STR_22(6), STR_21(3), 
 12387 ;;		 -> STR_20(3), STR_19(17), STR_17(3), STR_15(5), 
 12388 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 12389 ;;		 -> STR_4(5), STR_1(7), 
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;  n               2   25[COMRAM] int 
 12392 ;;  neg             2   18[COMRAM] int 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  2   12[COMRAM] int 
 12395 ;; Registers used:
 12396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12406 ;;Total ram usage:       15 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    3
 12409 ;; This function calls:
 12410 ;;		___wmul
 12411 ;;		_isdigit
 12412 ;;		_isspace
 12413 ;; This function is called by:
 12414 ;;		_vfpfcnvrt
 12415 ;; This function uses a non-reentrant model
 12416 ;;
 12417                           
 12418                           	psect	text54
 12419  002AB4                     __ptext54:
 12420                           	opt callstack 0
 12421  002AB4                     _atoi:
 12422                           	opt callstack 24
 12423                           
 12424                           ;incstack = 0
 12425  002AB4  0E00               	movlw	0
 12426  002AB6  6E1B               	movwf	atoi@n+1,c
 12427  002AB8  0E00               	movlw	0
 12428  002ABA  6E1A               	movwf	atoi@n,c
 12429  002ABC  0E00               	movlw	0
 12430  002ABE  6E14               	movwf	atoi@neg+1,c
 12431  002AC0  0E00               	movlw	0
 12432  002AC2  6E13               	movwf	atoi@neg,c
 12433  002AC4  D002               	goto	l7098
 12434  002AC6                     l7096:
 12435  002AC6  4A0D               	infsnz	atoi@s,f,c
 12436  002AC8  2A0E               	incf	atoi@s+1,f,c
 12437  002ACA                     l7098:
 12438  002ACA  0E01               	movlw	1
 12439  002ACC  6E19               	movwf	_atoi$1832,c
 12440  002ACE  C00D  FFF6         	movff	atoi@s,tblptrl
 12441  002AD2  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12442  002AD6                     	if	0	;tblptru may be non-zero
 12443  002AD6                     	endif
 12444  002AD6                     	if	0	;tblptru may be non-zero
 12445  002AD6                     	endif
 12446  002AD6  0008               	tblrd		*
 12447  002AD8  50F5               	movf	tablat,w,c
 12448  002ADA  0A20               	xorlw	32
 12449  002ADC  B4D8               	btfsc	status,2,c
 12450  002ADE  D018               	goto	l7106
 12451  002AE0  0EF7               	movlw	247
 12452  002AE2  6E0F               	movwf	??_atoi& (0+255),c
 12453  002AE4  0EFF               	movlw	255
 12454  002AE6  6E10               	movwf	(??_atoi+1)& (0+255),c
 12455  002AE8  C00D  FFF6         	movff	atoi@s,tblptrl
 12456  002AEC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12457  002AF0                     	if	0	;tblptru may be non-zero
 12458  002AF0                     	endif
 12459  002AF0                     	if	0	;tblptru may be non-zero
 12460  002AF0                     	endif
 12461  002AF0  0008               	tblrd		*
 12462  002AF2  50F5               	movf	tablat,w,c
 12463  002AF4  6E11               	movwf	(??_atoi+2)& (0+255),c
 12464  002AF6  6A12               	clrf	(??_atoi+3)& (0+255),c
 12465  002AF8  500F               	movf	??_atoi,w,c
 12466  002AFA  2611               	addwf	??_atoi+2,f,c
 12467  002AFC  5010               	movf	??_atoi+1,w,c
 12468  002AFE  2212               	addwfc	??_atoi+3,f,c
 12469  002B00  5012               	movf	??_atoi+3,w,c
 12470  002B02  E104               	bnz	u7810
 12471  002B04  0E05               	movlw	5
 12472  002B06  5C11               	subwf	??_atoi+2,w,c
 12473  002B08  A0D8               	btfss	status,0,c
 12474  002B0A  D002               	goto	l7106
 12475  002B0C                     u7810:
 12476  002B0C  0E00               	movlw	0
 12477  002B0E  6E19               	movwf	_atoi$1832,c
 12478  002B10                     l7106:
 12479  002B10  C019  F015         	movff	_atoi$1832,_atoi$1831
 12480  002B14  6A16               	clrf	_atoi$1831+1,c
 12481  002B16  5015               	movf	_atoi$1831,w,c
 12482  002B18  1016               	iorwf	_atoi$1831+1,w,c
 12483  002B1A  B4D8               	btfsc	status,2,c
 12484  002B1C  D008               	goto	l7116
 12485  002B1E  D7D3               	goto	l7096
 12486  002B20                     l7112:
 12487  002B20  0E00               	movlw	0
 12488  002B22  6E14               	movwf	atoi@neg+1,c
 12489  002B24  0E01               	movlw	1
 12490  002B26  6E13               	movwf	atoi@neg,c
 12491  002B28                     l7114:
 12492  002B28  4A0D               	infsnz	atoi@s,f,c
 12493  002B2A  2A0E               	incf	atoi@s+1,f,c
 12494  002B2C  D02E               	goto	l7122
 12495  002B2E                     l7116:
 12496  002B2E  C00D  FFF6         	movff	atoi@s,tblptrl
 12497  002B32  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12498  002B36                     	if	0	;tblptru may be non-zero
 12499  002B36                     	endif
 12500  002B36                     	if	0	;tblptru may be non-zero
 12501  002B36                     	endif
 12502  002B36  0008               	tblrd		*
 12503  002B38  50F5               	movf	tablat,w,c
 12504  002B3A  6E0F               	movwf	??_atoi& (0+255),c
 12505  002B3C  6A10               	clrf	(??_atoi+1)& (0+255),c
 12506                           
 12507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12508                           ; Switch size 1, requested type "simple"
 12509                           ; Number of cases is 1, Range of values is 0 to 0
 12510                           ; switch strategies available:
 12511                           ; Name         Instructions Cycles
 12512                           ; simple_byte            4     3 (average)
 12513                           ;	Chosen strategy is simple_byte
 12514  002B3E  5010               	movf	??_atoi+1,w,c
 12515  002B40  0A00               	xorlw	0	; case 0
 12516  002B42  A4D8               	btfss	status,2,c
 12517  002B44  D022               	goto	l7122
 12518                           
 12519                           ; Switch size 1, requested type "simple"
 12520                           ; Number of cases is 2, Range of values is 43 to 45
 12521                           ; switch strategies available:
 12522                           ; Name         Instructions Cycles
 12523                           ; simple_byte            7     4 (average)
 12524                           ;	Chosen strategy is simple_byte
 12525  002B46  500F               	movf	??_atoi,w,c
 12526  002B48  0A2B               	xorlw	43	; case 43
 12527  002B4A  B4D8               	btfsc	status,2,c
 12528  002B4C  D7ED               	goto	l7114
 12529  002B4E  0A06               	xorlw	6	; case 45
 12530  002B50  B4D8               	btfsc	status,2,c
 12531  002B52  D7E6               	goto	l7112
 12532  002B54  D01A               	goto	l7122
 12533  002B56                     l7118:
 12534  002B56  C01A  F006         	movff	atoi@n,___wmul@multiplier
 12535  002B5A  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 12536  002B5E  0E00               	movlw	0
 12537  002B60  6E09               	movwf	___wmul@multiplicand+1,c
 12538  002B62  0E0A               	movlw	10
 12539  002B64  6E08               	movwf	___wmul@multiplicand,c
 12540  002B66  ECB1  F01C         	call	___wmul	;wreg free
 12541  002B6A  C00D  FFF6         	movff	atoi@s,tblptrl
 12542  002B6E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12543  002B72                     	if	0	;tblptru may be non-zero
 12544  002B72                     	endif
 12545  002B72                     	if	0	;tblptru may be non-zero
 12546  002B72                     	endif
 12547  002B72  0008               	tblrd		*
 12548  002B74  50F5               	movf	tablat,w,c
 12549  002B76  5E06               	subwf	?___wmul,f,c
 12550  002B78  0E00               	movlw	0
 12551  002B7A  5A07               	subwfb	?___wmul+1,f,c
 12552  002B7C  0E30               	movlw	48
 12553  002B7E  2406               	addwf	?___wmul,w,c
 12554  002B80  6E1A               	movwf	atoi@n,c
 12555  002B82  0E00               	movlw	0
 12556  002B84  2007               	addwfc	?___wmul+1,w,c
 12557  002B86  6E1B               	movwf	atoi@n+1,c
 12558  002B88  D7CF               	goto	l7114
 12559  002B8A                     l7122:
 12560  002B8A  0ED0               	movlw	208
 12561  002B8C  6E0F               	movwf	??_atoi& (0+255),c
 12562  002B8E  0EFF               	movlw	255
 12563  002B90  6E10               	movwf	(??_atoi+1)& (0+255),c
 12564  002B92  C00D  FFF6         	movff	atoi@s,tblptrl
 12565  002B96  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12566  002B9A                     	if	0	;tblptru may be non-zero
 12567  002B9A                     	endif
 12568  002B9A                     	if	0	;tblptru may be non-zero
 12569  002B9A                     	endif
 12570  002B9A  0008               	tblrd		*
 12571  002B9C  50F5               	movf	tablat,w,c
 12572  002B9E  6E11               	movwf	(??_atoi+2)& (0+255),c
 12573  002BA0  6A12               	clrf	(??_atoi+3)& (0+255),c
 12574  002BA2  500F               	movf	??_atoi,w,c
 12575  002BA4  2611               	addwf	??_atoi+2,f,c
 12576  002BA6  5010               	movf	??_atoi+1,w,c
 12577  002BA8  2212               	addwfc	??_atoi+3,f,c
 12578  002BAA  5012               	movf	??_atoi+3,w,c
 12579  002BAC  E106               	bnz	u7830
 12580  002BAE  0E0A               	movlw	10
 12581  002BB0  5C11               	subwf	??_atoi+2,w,c
 12582  002BB2  B0D8               	btfsc	status,0,c
 12583  002BB4  D002               	goto	u7830
 12584  002BB6  0E01               	movlw	1
 12585  002BB8  D001               	goto	u7840
 12586  002BBA                     u7830:
 12587  002BBA  0E00               	movlw	0
 12588  002BBC                     u7840:
 12589  002BBC  6E17               	movwf	_atoi$1833,c
 12590  002BBE  6A18               	clrf	_atoi$1833+1,c
 12591  002BC0  5017               	movf	_atoi$1833,w,c
 12592  002BC2  1018               	iorwf	_atoi$1833+1,w,c
 12593  002BC4  A4D8               	btfss	status,2,c
 12594  002BC6  D7C7               	goto	l7118
 12595  002BC8  5013               	movf	atoi@neg,w,c
 12596  002BCA  1014               	iorwf	atoi@neg+1,w,c
 12597  002BCC  A4D8               	btfss	status,2,c
 12598  002BCE  D00D               	goto	l1409
 12599  002BD0  C01A  F00F         	movff	atoi@n,??_atoi
 12600  002BD4  C01B  F010         	movff	atoi@n+1,??_atoi+1
 12601  002BD8  1E0F               	comf	??_atoi,f,c
 12602  002BDA  1E10               	comf	??_atoi+1,f,c
 12603  002BDC  4A0F               	infsnz	??_atoi,f,c
 12604  002BDE  2A10               	incf	??_atoi+1,f,c
 12605  002BE0  C00F  F00D         	movff	??_atoi,?_atoi
 12606  002BE4  C010  F00E         	movff	??_atoi+1,?_atoi+1
 12607  002BE8  0012               	return	
 12608  002BEA                     l1409:
 12609  002BEA  C01A  F00D         	movff	atoi@n,?_atoi
 12610  002BEE  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 12611  002BF2  0012               	return		;funcret
 12612  002BF4                     __end_of_atoi:
 12613                           	opt callstack 0
 12614                           
 12615 ;; *************** function _isspace *****************
 12616 ;; Defined at:
 12617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  c               2    5[COMRAM] int 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;		None
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  2    5[COMRAM] int 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12634 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12635 ;;Total ram usage:        7 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:    2
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_atoi
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text55
 12646  003750                     __ptext55:
 12647                           	opt callstack 0
 12648  003750                     _isspace:
 12649                           	opt callstack 24
 12650                           
 12651                           ;incstack = 0
 12652  003750  0E01               	movlw	1
 12653  003752  6E0C               	movwf	_isspace$1858,c
 12654  003754  0E20               	movlw	32
 12655  003756  1806               	xorwf	isspace@c,w,c
 12656  003758  1007               	iorwf	isspace@c+1,w,c
 12657  00375A  B4D8               	btfsc	status,2,c
 12658  00375C  D014               	goto	l6906
 12659  00375E  0EF7               	movlw	247
 12660  003760  6E08               	movwf	??_isspace& (0+255),c
 12661  003762  0EFF               	movlw	255
 12662  003764  6E09               	movwf	(??_isspace+1)& (0+255),c
 12663  003766  C006  F00A         	movff	isspace@c,??_isspace+2
 12664  00376A  C007  F00B         	movff	isspace@c+1,??_isspace+3
 12665  00376E  5008               	movf	??_isspace,w,c
 12666  003770  260A               	addwf	??_isspace+2,f,c
 12667  003772  5009               	movf	??_isspace+1,w,c
 12668  003774  220B               	addwfc	??_isspace+3,f,c
 12669  003776  500B               	movf	??_isspace+3,w,c
 12670  003778  E104               	bnz	u7360
 12671  00377A  0E05               	movlw	5
 12672  00377C  5C0A               	subwf	??_isspace+2,w,c
 12673  00377E  A0D8               	btfss	status,0,c
 12674  003780  D002               	goto	l6906
 12675  003782                     u7360:
 12676  003782  0E00               	movlw	0
 12677  003784  6E0C               	movwf	_isspace$1858,c
 12678  003786                     l6906:
 12679  003786  C00C  F006         	movff	_isspace$1858,?_isspace
 12680  00378A  6A07               	clrf	?_isspace+1,c
 12681  00378C  0012               	return		;funcret
 12682  00378E                     __end_of_isspace:
 12683                           	opt callstack 0
 12684                           
 12685 ;; *************** function _isdigit *****************
 12686 ;; Defined at:
 12687 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  c               2    5[COMRAM] int 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;		None
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  2    5[COMRAM] int 
 12694 ;; Registers used:
 12695 ;;		wreg, status,2, status,0
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12704 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12705 ;;Total ram usage:        6 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:    2
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_vfpfcnvrt
 12712 ;;		_atoi
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           	psect	text56
 12717  00388C                     __ptext56:
 12718                           	opt callstack 0
 12719  00388C                     _isdigit:
 12720                           	opt callstack 25
 12721                           
 12722                           ;incstack = 0
 12723  00388C  0ED0               	movlw	208
 12724  00388E  6E08               	movwf	??_isdigit& (0+255),c
 12725  003890  0EFF               	movlw	255
 12726  003892  6E09               	movwf	(??_isdigit+1)& (0+255),c
 12727  003894  C006  F00A         	movff	isdigit@c,??_isdigit+2
 12728  003898  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 12729  00389C  5008               	movf	??_isdigit,w,c
 12730  00389E  260A               	addwf	??_isdigit+2,f,c
 12731  0038A0  5009               	movf	??_isdigit+1,w,c
 12732  0038A2  220B               	addwfc	??_isdigit+3,f,c
 12733  0038A4  500B               	movf	??_isdigit+3,w,c
 12734  0038A6  E106               	bnz	u7200
 12735  0038A8  0E0A               	movlw	10
 12736  0038AA  5C0A               	subwf	??_isdigit+2,w,c
 12737  0038AC  B0D8               	btfsc	status,0,c
 12738  0038AE  D002               	goto	u7200
 12739  0038B0  0E01               	movlw	1
 12740  0038B2  D001               	goto	u7210
 12741  0038B4                     u7200:
 12742  0038B4  0E00               	movlw	0
 12743  0038B6                     u7210:
 12744  0038B6  6E06               	movwf	?_isdigit,c
 12745  0038B8  6A07               	clrf	?_isdigit+1,c
 12746  0038BA  0012               	return		;funcret
 12747  0038BC                     __end_of_isdigit:
 12748                           	opt callstack 0
 12749                           
 12750 ;; *************** function ___wmul *****************
 12751 ;; Defined at:
 12752 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  multiplier      2    5[COMRAM] unsigned int 
 12755 ;;  multiplicand    2    7[COMRAM] unsigned int 
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;  product         2    9[COMRAM] unsigned int 
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  2    5[COMRAM] unsigned int 
 12760 ;; Registers used:
 12761 ;;		wreg, status,2, status,0, prodl, prodh
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;Total ram usage:        6 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; Hardware stack levels required when called:    2
 12774 ;; This function calls:
 12775 ;;		Nothing
 12776 ;; This function is called by:
 12777 ;;		_doDisplayLog
 12778 ;;		_atoi
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text57
 12783  003962                     __ptext57:
 12784                           	opt callstack 0
 12785  003962                     ___wmul:
 12786                           	opt callstack 24
 12787                           
 12788                           ;incstack = 0
 12789  003962  5006               	movf	___wmul@multiplier,w,c
 12790  003964  0208               	mulwf	___wmul@multiplicand,c
 12791  003966  CFF3 F00A          	movff	prodl,___wmul@product
 12792  00396A  CFF4 F00B          	movff	prodh,___wmul@product+1
 12793  00396E  5006               	movf	___wmul@multiplier,w,c
 12794  003970  0209               	mulwf	___wmul@multiplicand+1,c
 12795  003972  50F3               	movf	prodl,w,c
 12796  003974  260B               	addwf	___wmul@product+1,f,c
 12797  003976  5007               	movf	___wmul@multiplier+1,w,c
 12798  003978  0208               	mulwf	___wmul@multiplicand,c
 12799  00397A  50F3               	movf	prodl,w,c
 12800  00397C  260B               	addwf	___wmul@product+1,f,c
 12801  00397E  C00A  F006         	movff	___wmul@product,?___wmul
 12802  003982  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 12803  003986  0012               	return		;funcret
 12804  003988                     __end_of___wmul:
 12805                           	opt callstack 0
 12806                           
 12807 ;; *************** function _lcdInst *****************
 12808 ;; Defined at:
 12809 ;;		line 64 in file "lcd.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;  data            1    wreg     unsigned char 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;  data            1    8[COMRAM] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  1    wreg      void 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0, cstack
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;Total ram usage:        1 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    5
 12830 ;; This function calls:
 12831 ;;		_send_byte
 12832 ;; This function is called by:
 12833 ;;		_doDisplayLog
 12834 ;;		_tirePositioning
 12835 ;;		_doOperation
 12836 ;;		_main
 12837 ;;		_initLCD
 12838 ;;		_mainEEPROM
 12839 ;;		_lcd_shift_cursor
 12840 ;;		_lcd_shift_display
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           	psect	text58
 12845  003A8E                     __ptext58:
 12846                           	opt callstack 0
 12847  003A8E                     _lcdInst:
 12848                           	opt callstack 23
 12849                           
 12850                           ;incstack = 0
 12851                           ;lcdInst@data stored from wreg
 12852  003A8E  6E09               	movwf	lcdInst@data,c
 12853                           
 12854                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12855  003A90  948C               	bcf	3980,2,c	;volatile
 12856                           
 12857                           ;lcd.c: 66:     send_byte(data);
 12858  003A92  5009               	movf	lcdInst@data,w,c
 12859  003A94  EC38  F01D         	call	_send_byte
 12860  003A98  0012               	return		;funcret
 12861  003A9A                     __end_of_lcdInst:
 12862                           	opt callstack 0
 12863                           
 12864 ;; *************** function _send_byte *****************
 12865 ;; Defined at:
 12866 ;;		line 55 in file "lcd.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;  data            1    wreg     unsigned char 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  data            1    7[COMRAM] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, status,2, status,0, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;Total ram usage:        1 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    4
 12887 ;; This function calls:
 12888 ;;		_send_nibble
 12889 ;; This function is called by:
 12890 ;;		_lcdInst
 12891 ;;		_initLCD
 12892 ;;		_putch
 12893 ;; This function uses a non-reentrant model
 12894 ;;
 12895                           
 12896                           	psect	text59
 12897  003A70                     __ptext59:
 12898                           	opt callstack 0
 12899  003A70                     _send_byte:
 12900                           	opt callstack 24
 12901                           
 12902                           ;incstack = 0
 12903                           ;send_byte@data stored from wreg
 12904  003A70  6E08               	movwf	send_byte@data,c
 12905                           
 12906                           ;lcd.c: 57:     send_nibble(data >> 4);
 12907  003A72  3808               	swapf	send_byte@data,w,c
 12908  003A74  0B0F               	andlw	15
 12909  003A76  EC24  F01D         	call	_send_nibble
 12910                           
 12911                           ;lcd.c: 60:     send_nibble(data);
 12912  003A7A  5008               	movf	send_byte@data,w,c
 12913  003A7C  EC24  F01D         	call	_send_nibble
 12914  003A80  0012               	return		;funcret
 12915  003A82                     __end_of_send_byte:
 12916                           	opt callstack 0
 12917                           
 12918 ;; *************** function _send_nibble *****************
 12919 ;; Defined at:
 12920 ;;		line 44 in file "lcd.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;  data            1    wreg     unsigned char 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;  data            1    6[COMRAM] unsigned char 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;Total ram usage:        1 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    3
 12941 ;; This function calls:
 12942 ;;		_pulse_e
 12943 ;; This function is called by:
 12944 ;;		_send_byte
 12945 ;;		_initLCD
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text60
 12950  003A48                     __ptext60:
 12951                           	opt callstack 0
 12952  003A48                     _send_nibble:
 12953                           	opt callstack 25
 12954                           
 12955                           ;incstack = 0
 12956                           ;send_nibble@data stored from wreg
 12957  003A48  6E07               	movwf	send_nibble@data,c
 12958                           
 12959                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12960  003A4A  508C               	movf	3980,w,c	;volatile
 12961  003A4C  0B0F               	andlw	15
 12962  003A4E  6E8C               	movwf	3980,c	;volatile
 12963                           
 12964                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12965  003A50  3807               	swapf	send_nibble@data,w,c
 12966  003A52  0BF0               	andlw	240
 12967  003A54  108C               	iorwf	3980,w,c	;volatile
 12968  003A56  6E8C               	movwf	3980,c	;volatile
 12969                           
 12970                           ;lcd.c: 48:     pulse_e();
 12971  003A58  EC74  F01C         	call	_pulse_e	;wreg free
 12972  003A5C  0012               	return		;funcret
 12973  003A5E                     __end_of_send_nibble:
 12974                           	opt callstack 0
 12975                           
 12976 ;; *************** function _pulse_e *****************
 12977 ;; Defined at:
 12978 ;;		line 28 in file "lcd.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;  interruptSta    1    5[COMRAM] unsigned char 
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		wreg
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12996 ;;Total ram usage:        1 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:    2
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_send_nibble
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text61
 13007  0038E8                     __ptext61:
 13008                           	opt callstack 0
 13009  0038E8                     _pulse_e:
 13010                           	opt callstack 25
 13011                           
 13012                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 13013                           
 13014                           ;incstack = 0
 13015  0038E8  0E00               	movlw	0
 13016  0038EA  BEF2               	btfsc	4082,7,c	;volatile
 13017  0038EC  0E01               	movlw	1
 13018  0038EE  6E06               	movwf	pulse_e@interruptState,c
 13019                           
 13020                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 13021  0038F0  9EF2               	bcf	4082,7,c	;volatile
 13022                           
 13023                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 13024  0038F2  868C               	bsf	3980,3,c	;volatile
 13025                           
 13026                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 13027  0038F4  0E14               	movlw	20
 13028  0038F6                     u10397:
 13029  0038F6  2EE8               	decfsz	wreg,f,c
 13030  0038F8  D7FE               	bra	u10397
 13031  0038FA  D000               	nop2	
 13032                           
 13033                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 13034  0038FC  968C               	bcf	3980,3,c	;volatile
 13035                           
 13036                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 13037  0038FE  0E53               	movlw	83
 13038  003900                     u10407:
 13039  003900  2EE8               	decfsz	wreg,f,c
 13040  003902  D7FE               	bra	u10407
 13041  003904  F000               	nop	
 13042                           
 13043                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 13044  003906  B006               	btfsc	pulse_e@interruptState,0,c
 13045  003908  D002               	bra	u6985
 13046  00390A  9EF2               	bcf	4082,7,c	;volatile
 13047  00390C  D001               	bra	u6986
 13048  00390E                     u6985:
 13049  00390E  8EF2               	bsf	4082,7,c	;volatile
 13050  003910                     u6986:
 13051  003910  0012               	return		;funcret
 13052  003912                     __end_of_pulse_e:
 13053                           	opt callstack 0
 13054                           
 13055 ;; *************** function ___llmod *****************
 13056 ;; Defined at:
 13057 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  dividend        4    5[COMRAM] unsigned long 
 13060 ;;  divisor         4    9[COMRAM] unsigned long 
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;  counter         1   13[COMRAM] unsigned char 
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  4    5[COMRAM] unsigned long 
 13065 ;; Registers used:
 13066 ;;		wreg, status,2, status,0
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;Total ram usage:        9 bytes
 13077 ;; Hardware stack levels used:    1
 13078 ;; Hardware stack levels required when called:    2
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_main
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text62
 13087  003358                     __ptext62:
 13088                           	opt callstack 0
 13089  003358                     ___llmod:
 13090                           	opt callstack 28
 13091                           
 13092                           ;incstack = 0
 13093  003358  500A               	movf	___llmod@divisor,w,c
 13094  00335A  100B               	iorwf	___llmod@divisor+1,w,c
 13095  00335C  100C               	iorwf	___llmod@divisor+2,w,c
 13096  00335E  100D               	iorwf	___llmod@divisor+3,w,c
 13097  003360  B4D8               	btfsc	status,2,c
 13098  003362  D024               	goto	l1123
 13099  003364  0E01               	movlw	1
 13100  003366  6E0E               	movwf	___llmod@counter,c
 13101  003368  D006               	goto	l8736
 13102  00336A                     l8734:
 13103  00336A  90D8               	bcf	status,0,c
 13104  00336C  360A               	rlcf	___llmod@divisor,f,c
 13105  00336E  360B               	rlcf	___llmod@divisor+1,f,c
 13106  003370  360C               	rlcf	___llmod@divisor+2,f,c
 13107  003372  360D               	rlcf	___llmod@divisor+3,f,c
 13108  003374  2A0E               	incf	___llmod@counter,f,c
 13109  003376                     l8736:
 13110  003376  AE0D               	btfss	___llmod@divisor+3,7,c
 13111  003378  D7F8               	goto	l8734
 13112  00337A                     u9930:
 13113  00337A  500A               	movf	___llmod@divisor,w,c
 13114  00337C  5C06               	subwf	___llmod@dividend,w,c
 13115  00337E  500B               	movf	___llmod@divisor+1,w,c
 13116  003380  5807               	subwfb	___llmod@dividend+1,w,c
 13117  003382  500C               	movf	___llmod@divisor+2,w,c
 13118  003384  5808               	subwfb	___llmod@dividend+2,w,c
 13119  003386  500D               	movf	___llmod@divisor+3,w,c
 13120  003388  5809               	subwfb	___llmod@dividend+3,w,c
 13121  00338A  A0D8               	btfss	status,0,c
 13122  00338C  D008               	goto	l8742
 13123  00338E  500A               	movf	___llmod@divisor,w,c
 13124  003390  5E06               	subwf	___llmod@dividend,f,c
 13125  003392  500B               	movf	___llmod@divisor+1,w,c
 13126  003394  5A07               	subwfb	___llmod@dividend+1,f,c
 13127  003396  500C               	movf	___llmod@divisor+2,w,c
 13128  003398  5A08               	subwfb	___llmod@dividend+2,f,c
 13129  00339A  500D               	movf	___llmod@divisor+3,w,c
 13130  00339C  5A09               	subwfb	___llmod@dividend+3,f,c
 13131  00339E                     l8742:
 13132  00339E  90D8               	bcf	status,0,c
 13133  0033A0  320D               	rrcf	___llmod@divisor+3,f,c
 13134  0033A2  320C               	rrcf	___llmod@divisor+2,f,c
 13135  0033A4  320B               	rrcf	___llmod@divisor+1,f,c
 13136  0033A6  320A               	rrcf	___llmod@divisor,f,c
 13137  0033A8  2E0E               	decfsz	___llmod@counter,f,c
 13138  0033AA  D7E7               	goto	u9930
 13139  0033AC                     l1123:
 13140  0033AC  C006  F006         	movff	___llmod@dividend,?___llmod
 13141  0033B0  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 13142  0033B4  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 13143  0033B8  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 13144  0033BC  0012               	return		;funcret
 13145  0033BE                     __end_of___llmod:
 13146                           	opt callstack 0
 13147                           
 13148 ;; *************** function _interruptHandler *****************
 13149 ;; Defined at:
 13150 ;;		line 1205 in file "main.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg, status,2, status,0, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13168 ;;Total ram usage:        0 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    1
 13171 ;; This function calls:
 13172 ;;		_updateMotorAEncoder
 13173 ;;		_updateMotorBEncoder
 13174 ;; This function is called by:
 13175 ;;		Interrupt level 2
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	intcode
 13180  000008                     __pintcode:
 13181                           	opt callstack 0
 13182  000008                     _interruptHandler:
 13183                           	opt callstack 16
 13184                           
 13185                           ;incstack = 0
 13186  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13187  00000A  EDFF  F01A         	call	int_func,f	;refresh shadow registers
 13188                           
 13189                           	psect	intcode_body
 13190  0035FE                     __pintcode_body:
 13191                           	opt callstack 16
 13192  0035FE                     int_func:
 13193                           	opt callstack 16
 13194  0035FE  0006               	pop		; remove dummy address from shadow register refresh
 13195                           
 13196                           ;main.c: 1207:     if(INT1IF){
 13197  003600  A0F0               	btfss	4080,0,c	;volatile
 13198  003602  D005               	goto	i2l433
 13199                           
 13200                           ;main.c: 1210:         keyPressed = 1;
 13201  003604  0E01               	movlw	1
 13202  003606  0100               	movlb	0	; () banked
 13203  003608  6FD2               	movwf	_keyPressed& (0+255),b	;volatile
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;main.c: 1211:         INT1IF = 0;
 13207  00360A  90F0               	bcf	4080,0,c	;volatile
 13208                           
 13209                           ;main.c: 1212:     } else if (TMR0IF) {
 13210  00360C  D019               	goto	i2l436
 13211  00360E                     i2l433:
 13212  00360E  A4F2               	btfss	4082,2,c	;volatile
 13213  003610  D00C               	goto	i2l435
 13214                           
 13215                           ;main.c: 1213:     INTCONbits.TMR0IF = 0;
 13216  003612  94F2               	bcf	4082,2,c	;volatile
 13217                           
 13218                           ;main.c: 1214:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 13219  003614  0EFB               	movlw	251
 13220  003616  6ED7               	movwf	4055,c	;volatile
 13221                           
 13222                           ;main.c: 1215:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 13223  003618  0E1E               	movlw	30
 13224  00361A  6ED6               	movwf	4054,c	;volatile
 13225                           
 13226                           ;main.c: 1216:     millisecondsMeasured++;
 13227  00361C  0E01               	movlw	1
 13228  00361E  2675               	addwf	_millisecondsMeasured,f,c	;volatile
 13229  003620  0E00               	movlw	0
 13230  003622  2276               	addwfc	_millisecondsMeasured+1,f,c	;volatile
 13231  003624  2277               	addwfc	_millisecondsMeasured+2,f,c	;volatile
 13232  003626  2278               	addwfc	_millisecondsMeasured+3,f,c	;volatile
 13233                           
 13234                           ;main.c: 1217:    } else if (INT2IF){
 13235  003628  D00B               	goto	i2l436
 13236  00362A                     i2l435:
 13237  00362A  A2F0               	btfss	4080,1,c	;volatile
 13238  00362C  D004               	goto	i2l437
 13239                           
 13240                           ;main.c: 1218:        INT2IF = 0;
 13241  00362E  92F0               	bcf	4080,1,c	;volatile
 13242                           
 13243                           ;main.c: 1219:        updateMotorBEncoder();
 13244  003630  EC44  F01B         	call	_updateMotorBEncoder	;wreg free
 13245                           
 13246                           ;main.c: 1220:    } else if (INT0IF){
 13247  003634  D005               	goto	i2l436
 13248  003636                     i2l437:
 13249  003636  A2F2               	btfss	4082,1,c	;volatile
 13250  003638  D003               	goto	i2l436
 13251                           
 13252                           ;main.c: 1221:        INT0IF = 0;
 13253  00363A  92F2               	bcf	4082,1,c	;volatile
 13254                           
 13255                           ;main.c: 1222:        updateMotorAEncoder();
 13256  00363C  EC66  F01B         	call	_updateMotorAEncoder	;wreg free
 13257  003640                     i2l436:
 13258  003640  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13259  003642  0011               	retfie		f
 13260  003644                     __end_of_interruptHandler:
 13261                           	opt callstack 0
 13262                           
 13263 ;; *************** function _updateMotorBEncoder *****************
 13264 ;; Defined at:
 13265 ;;		line 149 in file "main.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;		None
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  directionPin    2    3[COMRAM] int 
 13270 ;;  interruptPin    2    1[COMRAM] int 
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      void 
 13273 ;; Registers used:
 13274 ;;		wreg, status,2, status,0
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13281 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;Total ram usage:        5 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; This function calls:
 13287 ;;		Nothing
 13288 ;; This function is called by:
 13289 ;;		_interruptHandler
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text64
 13294  003688                     __ptext64:
 13295                           	opt callstack 0
 13296  003688                     _updateMotorBEncoder:
 13297                           	opt callstack 16
 13298                           
 13299                           ;main.c: 150:   int interruptPinState = PORTBbits.RB2;
 13300                           
 13301                           ;incstack = 0
 13302  003688  A481               	btfss	3969,2,c	;volatile
 13303  00368A  D003               	goto	i2u625_40
 13304  00368C  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13305  00368E  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 13306  003690  D001               	goto	i2u625_48
 13307  003692                     i2u625_40:
 13308  003692  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13309  003694                     i2u625_48:
 13310  003694  5001               	movf	??_updateMotorBEncoder,w,c
 13311  003696  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 13312  003698  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 13313                           
 13314                           ;main.c: 151:   int directionPin = PORTCbits.RC0;
 13315  00369A  A082               	btfss	3970,0,c	;volatile
 13316  00369C  D003               	goto	i2u626_40
 13317  00369E  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13318  0036A0  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 13319  0036A2  D001               	goto	i2u626_48
 13320  0036A4                     i2u626_40:
 13321  0036A4  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13322  0036A6                     i2u626_48:
 13323  0036A6  5001               	movf	??_updateMotorBEncoder,w,c
 13324  0036A8  6E04               	movwf	updateMotorBEncoder@directionPin,c
 13325  0036AA  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 13326                           
 13327                           ;main.c: 152:   if(directionPin == interruptPinState){
 13328  0036AC  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 13329  0036AE  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 13330  0036B0  E108               	bnz	i2l5834
 13331  0036B2  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 13332  0036B4  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 13333  0036B6  A4D8               	btfss	status,2,c
 13334  0036B8  D004               	goto	i2l5834
 13335                           
 13336                           ;main.c: 153:     motorBDistance++;
 13337  0036BA  0100               	movlb	0	; () banked
 13338  0036BC  4BCE               	infsnz	_motorBDistance& (0+255),f,b	;volatile
 13339  0036BE  2BCF               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
 13340                           
 13341                           ;main.c: 154:   } else {
 13342  0036C0  0012               	return	
 13343  0036C2                     i2l5834:
 13344                           
 13345                           ;main.c: 155:     motorBDistance--;
 13346  0036C2  0100               	movlb	0	; () banked
 13347  0036C4  07CE               	decf	_motorBDistance& (0+255),f,b	;volatile
 13348  0036C6  A0D8               	btfss	status,0,c
 13349  0036C8  07CF               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
 13350                           
 13351                           ; BSR set to: 0
 13352  0036CA  0012               	return		;funcret
 13353  0036CC                     __end_of_updateMotorBEncoder:
 13354                           	opt callstack 0
 13355                           
 13356 ;; *************** function _updateMotorAEncoder *****************
 13357 ;; Defined at:
 13358 ;;		line 180 in file "main.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  directionPin    2    3[COMRAM] int 
 13363 ;;  interruptPin    2    1[COMRAM] int 
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  1    wreg      void 
 13366 ;; Registers used:
 13367 ;;		wreg, status,2, status,0
 13368 ;; Tracked objects:
 13369 ;;		On entry : 0/0
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13376 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;Total ram usage:        5 bytes
 13378 ;; Hardware stack levels used:    1
 13379 ;; This function calls:
 13380 ;;		Nothing
 13381 ;; This function is called by:
 13382 ;;		_interruptHandler
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           	psect	text65
 13387  0036CC                     __ptext65:
 13388                           	opt callstack 0
 13389  0036CC                     _updateMotorAEncoder:
 13390                           	opt callstack 16
 13391                           
 13392                           ;main.c: 181:   int interruptPinState = PORTBbits.RB0;
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;incstack = 0
 13396  0036CC  A081               	btfss	3969,0,c	;volatile
 13397  0036CE  D003               	goto	i2u628_40
 13398  0036D0  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13399  0036D2  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 13400  0036D4  D001               	goto	i2u628_48
 13401  0036D6                     i2u628_40:
 13402  0036D6  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13403  0036D8                     i2u628_48:
 13404  0036D8  5001               	movf	??_updateMotorAEncoder,w,c
 13405  0036DA  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 13406  0036DC  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 13407                           
 13408                           ;main.c: 182:   int directionPin = PORTEbits.RE1;
 13409  0036DE  A284               	btfss	3972,1,c	;volatile
 13410  0036E0  D003               	goto	i2u629_40
 13411  0036E2  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13412  0036E4  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 13413  0036E6  D001               	goto	i2u629_48
 13414  0036E8                     i2u629_40:
 13415  0036E8  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13416  0036EA                     i2u629_48:
 13417  0036EA  5001               	movf	??_updateMotorAEncoder,w,c
 13418  0036EC  6E04               	movwf	updateMotorAEncoder@directionPin,c
 13419  0036EE  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 13420                           
 13421                           ;main.c: 183:   if(directionPin == interruptPinState){
 13422  0036F0  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 13423  0036F2  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 13424  0036F4  E109               	bnz	i2l5842
 13425  0036F6  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 13426  0036F8  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 13427  0036FA  A4D8               	btfss	status,2,c
 13428  0036FC  D005               	goto	i2l5842
 13429                           
 13430                           ;main.c: 184:     motorADistance--;
 13431  0036FE  0100               	movlb	0	; () banked
 13432  003700  07D0               	decf	_motorADistance& (0+255),f,b	;volatile
 13433  003702  A0D8               	btfss	status,0,c
 13434  003704  07D1               	decf	(_motorADistance+1)& (0+255),f,b	;volatile
 13435                           
 13436                           ;main.c: 185:   } else {
 13437  003706  0012               	return	
 13438  003708                     i2l5842:
 13439                           
 13440                           ;main.c: 186:     motorADistance++;
 13441  003708  0100               	movlb	0	; () banked
 13442  00370A  4BD0               	infsnz	_motorADistance& (0+255),f,b	;volatile
 13443  00370C  2BD1               	incf	(_motorADistance+1)& (0+255),f,b	;volatile
 13444                           
 13445                           ; BSR set to: 0
 13446  00370E  0012               	return		;funcret
 13447  003710                     __end_of_updateMotorAEncoder:
 13448                           	opt callstack 0
 13449                           
 13450                           	psect	rparam
 13451  0000                     
 13452                           	psect	temp
 13453  00007A                     btemp:
 13454                           	opt callstack 0
 13455  00007A                     	ds	1
 13456  0000                     int$flags	set	btemp
 13457  0000                     wtemp8	set	btemp+1
 13458  0000                     ttemp5	set	btemp+1
 13459  0000                     ttemp6	set	btemp+4
 13460  0000                     ttemp7	set	btemp+8
 13461                           tosu	equ	0xFFF
 13462                           tosh	equ	0xFFE
 13463                           tosl	equ	0xFFD
 13464                           stkptr	equ	0xFFC
 13465                           pclatu	equ	0xFFB
 13466                           pclath	equ	0xFFA
 13467                           pcl	equ	0xFF9
 13468                           tblptru	equ	0xFF8
 13469                           tblptrh	equ	0xFF7
 13470                           tblptrl	equ	0xFF6
 13471                           tablat	equ	0xFF5
 13472                           prodh	equ	0xFF4
 13473                           prodl	equ	0xFF3
 13474                           indf0	equ	0xFEF
 13475                           postinc0	equ	0xFEE
 13476                           postdec0	equ	0xFED
 13477                           preinc0	equ	0xFEC
 13478                           plusw0	equ	0xFEB
 13479                           fsr0h	equ	0xFEA
 13480                           fsr0l	equ	0xFE9
 13481                           wreg	equ	0xFE8
 13482                           indf1	equ	0xFE7
 13483                           postinc1	equ	0xFE6
 13484                           postdec1	equ	0xFE5
 13485                           preinc1	equ	0xFE4
 13486                           plusw1	equ	0xFE3
 13487                           fsr1h	equ	0xFE2
 13488                           fsr1l	equ	0xFE1
 13489                           bsr	equ	0xFE0
 13490                           indf2	equ	0xFDF
 13491                           postinc2	equ	0xFDE
 13492                           postdec2	equ	0xFDD
 13493                           preinc2	equ	0xFDC
 13494                           plusw2	equ	0xFDB
 13495                           fsr2h	equ	0xFDA
 13496                           fsr2l	equ	0xFD9
 13497                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    35
    Data        9
    BSS         537
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128     76      84
    BANK1           256     67     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_52(CODE[16]), 
		 -> STR_50(CODE[14]), STR_48(CODE[11]), STR_46(CODE[9]), STR_44(CODE[16]), 
		 -> STR_42(CODE[13]), STR_40(CODE[13]), STR_38(CODE[9]), STR_36(CODE[13]), 
		 -> STR_34(CODE[14]), STR_32(CODE[10]), STR_28(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_52(CODE[16]), 
		 -> STR_50(CODE[14]), STR_48(CODE[11]), STR_46(CODE[9]), STR_44(CODE[16]), 
		 -> STR_42(CODE[13]), STR_40(CODE[13]), STR_38(CODE[9]), STR_36(CODE[13]), 
		 -> STR_34(CODE[14]), STR_32(CODE[10]), STR_28(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_56(CODE[11]), STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[13]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_27(CODE[3]), STR_26(CODE[13]), STR_25(CODE[11]), 
		 -> STR_24(CODE[10]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[17]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1871_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_56(CODE[11]), STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[13]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_27(CODE[3]), STR_26(CODE[13]), STR_25(CODE[11]), 
		 -> STR_24(CODE[10]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[17]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_56(CODE[11]), STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[13]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_27(CODE[3]), STR_26(CODE[13]), STR_25(CODE[11]), 
		 -> STR_24(CODE[10]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[17]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_56(CODE[11]), STR_55(CODE[11]), STR_54(CODE[10]), STR_53(CODE[13]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_27(CODE[3]), STR_26(CODE[13]), STR_25(CODE[11]), 
		 -> STR_24(CODE[10]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[17]), STR_17(CODE[3]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_52(CODE[16]), STR_50(CODE[14]), STR_48(CODE[11]), 
		 -> STR_46(CODE[9]), STR_44(CODE[16]), STR_42(CODE[13]), STR_40(CODE[13]), 
		 -> STR_38(CODE[9]), STR_36(CODE[13]), STR_34(CODE[14]), STR_32(CODE[10]), 
		 -> STR_28(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_52(CODE[16]), STR_50(CODE[14]), STR_48(CODE[11]), 
		 -> STR_46(CODE[9]), STR_44(CODE[16]), STR_42(CODE[13]), STR_40(CODE[13]), 
		 -> STR_38(CODE[9]), STR_36(CODE[13]), STR_34(CODE[14]), STR_32(CODE[10]), 
		 -> STR_28(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_52(CODE[16]), STR_50(CODE[14]), 
		 -> STR_48(CODE[11]), STR_46(CODE[9]), STR_44(CODE[16]), STR_42(CODE[13]), 
		 -> STR_40(CODE[13]), STR_38(CODE[9]), STR_36(CODE[13]), STR_34(CODE[14]), 
		 -> STR_32(CODE[10]), STR_28(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _sendArduinoAbortOperationMessage->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_opErrorCorrectionDegrees
    _tirePositioning->_printf
    _opErrorCorrectionDegrees->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doOperation

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  269760
                                             58 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     892
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0     130
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         75    75      0  195273
                                             54 BANK0      4     4      0
                                              0 BANK1     67    67      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                            _opDelay
           _opErrorCorrectionDegrees
                             _printf
              _requestIsTireDropDone
   _sendArduinoAbortOperationMessage
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     25    21      4   54746
                                             14 BANK0     25    21      4
                            ___awdiv
                                _abs
                            _lcdInst
                            _opDelay
                             _printf
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                             18    12      6     636
                                              5 COMRAM    18    12      6
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoAbortOperationMessage                     1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1390
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1291
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _opErrorCorrectionDegrees                            23     9     14   41474
                                            113 COMRAM     1     1      0
                                             32 BANK0     22     8     14
                           ___xxtofl
                                _abs
                 _errorCorrectedMove
 ---------------------------------------------------------------------------------
 (3) _errorCorrectedMove                                  24    10     14   38007
                                              8 BANK0     24    10     14
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   17872
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   11264
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    2096
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2543
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4727
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3982
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   36750
                                             14 BANK0     13    11      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33924
                                              0 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30759
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   30196
                                             75 COMRAM    33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7287
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7973
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     633
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5536
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5257
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2895
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1792
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (15) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (15) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opDelay
     _opErrorCorrectionDegrees
       ___xxtofl
       _abs
         ___aomod (ARG)
       _errorCorrectedMove
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _setMotorSpeeds
           ___xxtofl
           _set_pwm_duty_cycle
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoAbortOperationMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___awdiv
       _abs
         ___aomod (ARG)
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _opDelay
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _stoa
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     1E0      37       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43      78       7       46.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4C      54       5       65.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      34        0.0%
DATA                 0      0     325       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 29 22:53:56 2019

                                 ___fldiv@aexp 0045                                   ___fldiv@bexp 0044  
                                 ___fldiv@sign 003D                                    __CFG_CPD$ON 000000  
                                 ___awdiv@sign 000B                            ___wmul@multiplicand 0008  
                                  __CFG_BORV$3 000000                 doOperation@motorBStartDistance 012C  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                  __CFG_OSC$HS 000000               __end_of_opErrorCorrectionDegrees 2F56  
                                          l410 0E32                                            l252 2FFC  
                                          l254 300C                                            l265 164E  
                                          l615 2896                                            l634 22D0  
                                          l730 3200                                            l636 22D8  
                                          l568 2F86                                            l586 20D6  
                                          l588 20DE                                            l968 2DAC  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                          _PSA 007EAB                                            _abs 37FA  
                                          _pad 2F56                                   ___awmod@sign 000B  
                             ??_init_motor_PWM 0006                                            wreg 000FE8  
                                 ___flmul@aexp 0021                                   ___flmul@bexp 0026  
                                 ___flmul@sign 0020                                   ___flmul@temp 002B  
                                 ___flmul@prod 0027                              _doDisplayLog$2224 0099  
                   __end_of_errorCorrectedMove 205C                                   __CFG_LVP$OFF 000000  
                                 ___fltol@exp1 0057                                   __CFG_WDT$OFF 000000  
                                         l1123 33AC                                           ?_abs 0018  
                                         l1232 19A6                                           l1233 1984  
                                         l1317 1280                                           l1334 151E  
                                         l1326 1498                                           l1327 1494  
                                         l1248 1A78                                           l1409 2BEA  
                                         l1257 1ADE                                           l1258 1ADA  
                                         l1365 2A30                                           l1358 29B2  
                                         l1287 1CE2                                           l1378 3822  
                                         l1298 1D50                                           l1299 1D4C  
                                         l1476 35AE                                           l7012 28E4  
                                         l7004 28AE                                           l7022 293E  
                                         ?_pad 001A                                           l7112 2B20  
                                         l7008 28C6                                           l7032 22B6  
                                         l7122 2B8A                                           l7114 2B28  
                                         l7106 2B10                                           l7026 2956  
                                         l7018 2922                                           l8010 3130  
                                         l7116 2B2E                                           l7052 2340  
                                         l7044 231E                                           l7212 1CBA  
                                         l7204 1C92                                           l8004 3120  
                                         l7118 2B56                                           l7038 22EE  
                                         l7230 1D16                                           l7224 1CF8  
                                         l7152 1BA0                                           l7304 126C  
                                         l8016 3146                                           l8032 3178  
                                         l7090 24BC                                           l7066 23CE  
                                         l7074 2444                                           l7250 1D94  
                                         l7218 1CE0                                           l7314 129E  
                                         l7306 1270                                           l8018 314E  
                                         l8122 15E2                                           l8114 15A2  
                                         l7180 1C14                                           l7172 1BE0  
                                         l7148 1B9C                                           l7412 2D80  
                                         l8036 3186                                           l8028 316E  
                                         l8132 161A                                           l8310 3260  
                                         l8302 3240                                           l7254 1DB8  
                                         l7422 2DE4                                           l8150 16BC  
                                         l8142 165E                                           l7096 2AC6  
                                         l8400 1156                                           l8304 3248  
                                         l7264 1DEE                                           l7168 1BDC  
                                         l7416 2D96                                           l7408 2D4C  
                                         l7432 2E06                                           l7512 2AA2  
                                         l8152 16D8                                           l8136 163C  
                                         l8128 15FA                                           l7098 2ACA  
                                         l8410 11B0                                           l8330 0E78  
                                         l8314 326A                                           l7266 1DF0  
                                         l7258 1DE2                                           l7194 1C42  
                                         l7186 1C2A                                           l7362 145E  
                                         l7290 1240                                           l8242 38E4  
                                         l8170 17A6                                           l8162 174A  
                                         l8404 116C                                           l8420 11EC  
                                         l7356 1440                                           l7460 2E74  
                                         l7452 2E60                                           l8252 2F18  
                                         l8164 1766                                           l6734 329A  
                                         l8318 3278                                           l7382 14DC  
                                         l7286 122C                                           l8158 1710  
                                         l6744 3798                                           l6752 364E  
                                         l6840 2776                                           l6832 273C  
                                         l7640 09B2                                           l7608 07C4  
                                         l7560 061A                                           l7552 0600  
                                         l8352 0F62                                           l7720 18FC  
                                         l7712 18DC                                           l7288 1230  
                                         l7448 2E50                                           l8248 2EB4  
                                         l8168 178A                                           l8176 1800  
                                         l8512 0158                                           l8504 00F6  
                                         l6906 3786                                           l6754 3652  
                                         l6914 34E8                                           l6850 27D2  
                                         l6826 2714                                           l6930 20B2  
                                         l7650 09F8                                           l7626 08E4  
                                         l7618 0876                                           l7554 0604  
                                         l8418 11CE                                           l7386 14FA  
                                         l7466 2E90                                           l7458 2E68  
                                         l7482 29E0                                           l8194 1858  
                                         l8186 182C                                           l8522 0180  
                                         l6748 37AE                                           l6772 2F70  
                                         l6916 34F4                                           l7572 062C  
                                         l7564 0620                                           l7556 0614  
                                         l8380 10FE                                           l7708 18D8  
                                         l7484 29E6                                           l7476 29C2  
                                         l6782 2FA8                                           l6838 2762  
                                         l6854 27E8                                           l6870 2C20  
                                         l6934 20BC                                           l7646 09EE  
                                         l7590 06EC                                           l8294 3226  
                                         l7814 1A9C                                           l7830 1ABC  
                                         l7806 1A68                                           l7750 1938  
                                         l7398 153C                                           l7494 2A56  
                                         l7486 29F2                                           l6776 2F7E  
                                         l6880 2C72                                           l6944 20FA  
                                         l7592 070A                                           l7576 0636  
                                         l7568 0626                                           l7656 0A10  
                                         l8392 113E                                           l7824 1AB2  
                                         l7496 2A62                                           l7488 2A18  
                                         l8632 04A8                                           l8544 023A  
                                         l6786 2FD6                                           l6778 2F90  
                                         l6858 280E                                           l6890 2CD0  
                                         l6874 2C44                                           l7594 0718  
                                         l7578 0678                                           l8378 10E0  
                                         l8298 3232                                           l7850 1B24  
                                         l7762 1992                                           l8642 04D8  
                                         l8626 0494                                           l8546 027A  
                                         l6948 210A                                           l8396 114C  
                                         l7764 1996                                           l7684 1890  
                                         l8636 04B8                                           l8628 049A  
                                         l8652 04F8                                           l8724 352A  
                                         l8900 0D08                                           l8804 0A62  
                                         l8742 339E                                           l8734 336A  
                                         l6894 2CF6                                           l6886 2CBA  
                                         l6878 2C5E                                           l6982 2282  
                                         l6958 2202                                           l7862 1B52  
                                         l7918 33CE                                           l8670 057A  
                                         l8590 037C                                           l8654 0534  
                                         l8822 0AF6                                           l8814 0AC8  
                                         l8910 0D32                                           l8736 3376  
                                         l7864 1B54                                           l7688 1894  
                                         l8592 0382                                           l8576 033E  
                                         l8912 0D62                                           l6978 226A  
                                         l6994 285A                                           l7858 1B4A  
                                         l7786 19EC                                           l7778 19CA  
                                         l7882 3010                                           l7970 203E  
                                         l7962 201A                                           l8666 056E  
                                         l8658 0550                                           l8674 0580  
                                         l8594 038A                                           l8842 0BA2  
                                         l7788 19F0                                           l7796 1A02  
                                         l7980 31B2                                           l8940 0DD4  
                                         l8932 0DBA                                           l8924 0DA2  
                                         l8860 0C0A                                           l7878 3000  
                                         l7966 2032                                           l7958 200E  
                                         l7982 31BE                                           _P1M0 007DEE  
                                         _P1M1 007DEF                                           l7896 3492  
                                         l7992 31F2                                           l8952 0DF8  
                                         l8944 0DE0                                           l8936 0DC6  
                                         l8928 0DAE                                           l8960 0E06  
                                         l8880 0C92                                           l7898 34B8  
                                         l8948 0DEC                                           l8894 0CF8  
                                         STR_1 FFE3                                           STR_2 FF97  
                                         STR_3 FFE8                                           STR_4 FFDE  
                                         STR_5 FEB7                                           STR_6 FFE7  
                                         STR_7 FF00                                           STR_8 FFE7  
                                         STR_9 FE97                                           _LATB 000F8A  
                                         _LATD 000F8C                                           u7000 3292  
                                         u7020 32DA                                           u7200 38B4  
                                         u7040 3674                                           u7210 38B6  
                                         u7130 3884                                           u7140 3886  
                                         u7060 3854                                           u7150 37F2  
                                         u7070 3856                                           u8030 1D46  
                                         u7047 366A                                           u7320 2C76  
                                         u7080 3808                                           u7160 37F4  
                                         u7241 2742                                           u7170 3596  
                                         u9010 1AC0                                           u7260 277A  
                                         u7420 20CC                                           u7180 3598  
                                         u8220 148E                                           u7510 2254  
                                         u9030 1AD4                                           u8070 1DA2  
                                         u7360 3782                                           u7440 20F4  
                                         u8080 1DC6                                           u7450 2210  
                                         u8170 128C                                           u9210 2006  
                                         u7531 283A                                           u7380 2084  
                                         u7620 296A                                           u7700 23AC  
                                         u8260 14EA                                           u8180 1402  
                                         u8340 2DF4                                           u9205 39A4  
                                         u7470 2232                                           u7390 2086  
                                         u7710 23AE                                           u8270 1508  
                                         u8350 2E24                                           u9230 202A  
                                         u9206 39A6                                           u9310 3152  
                                         u7471 2230                                           u7480 2240  
                                         u7640 22C6                                           u8185 13F8  
                                         u7810 2B0C                                           u7490 2246  
                                         u7730 2420                                           u9090 1B30  
                                         u8355 2E1A                                           u7580 28DA  
                                         u7740 2454                                           u7660 233C  
                                         u9340 15AC                                           u9260 31C2  
                                         u7830 2BBA                                           u7590 2906  
                                         u7670 2372                                           u8390 2E7A  
                                         u8470 2A6C                                           u8550 26A8  
                                         u9350 15C0                                           u7735 240E  
                                         u7840 2BBC                                           u7760 2476  
                                         u7680 2374                                           u8720 0918  
                                         u8640 0750                                           u9520 1812  
                                         u9440 1672                                           u7761 2474  
                                         u7770 2484                                           u8650 0752  
                                         u8570 26CC                                           u9530 1822  
                                         u9450 1682                                           u7780 248A  
                                         u8660 075E                                           u9620 324C  
                                         u9540 184C                                           u9348 15B0  
                                         u7597 28FC                                           u8565 26AA  
                                         u8830 195A                                           u9470 16F2  
                                         u9358 15C4                                           u9720 11C6  
                                         u8840 196A                                           u6985 390E  
                                         u8585 26CE                                           u6986 3910  
                                         u8690 07F8                                           u8850 196C  
                                         u9490 1780                                           u9810 046A  
                                         u9820 0476                                           u9740 013A  
                                         u9830 0482                                           u9750 014C  
                                         u9910 356C                                           u8880 19AE  
                                         u9840 048E                                           u9816 046C  
                                         u9760 016A                                           u9585 344A  
                                         u9930 337A                                           u9826 0478  
                                         u9770 017A                                           u9746 013C  
                                         u9836 0484                                           u9756 014E  
                                         u9846 0490                                           u9766 016C  
                                         u9880 0562                                           u9776 017C  
                                 __CFG_PWRT$ON 000000                                           abs@a 0018  
                                         _dbuf 0151                                           _atoi 2AB4  
                                         _ctoa 34D4                                           _main 0A44  
                                         _dtoa 205C                       __end_of_interruptHandler 3644  
                                         _keys FE43                                           _logs 0178  
                                         _prec 014B                                           _nout 0147  
                                         pad@i 0021                                           pad@p 001E  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0023  
                                         fsr2l 000FD9                                           _stoa 2830  
                                         btemp 007A                                           _xtoa 22AC  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 000E                                  __CFG_IESO$OFF 000000  
                      __size_of_setMotorSpeeds 0096                                ___fldiv@new_exp 003E  
                          __end_of_EncoderInit 3A48                                  __CFG_MCLRE$ON 000000  
           tirePositioning@bottomPreviousState 009D                                   ___param_bank 000000  
                                        ??_abs 001A                                          ??_pad 0020  
                     __size_of_tirePositioning 0312                          I2C_Master_Read@ackBit 0007  
                             ?_I2C_Master_Init 0013                               ?_I2C_Master_Read 0001  
                             ?_I2C_Master_Wait 0001                               ?_I2C_Master_Stop 0001  
                               replaceOldLog@i 0006                      doOperation@distanceToPole 0130  
                                ___fltol@sign1 0056                                    ?_TIMER_INIT 0001  
                              __end_of___aodiv 2830                                          ?_atoi 000D  
                                        ?_ctoa 0025                                __end_of___fladd 1B70  
                                        ?_main 0001                                          ?_dtoa 0025  
                              __end_of___aomod 2D18                                          _CCP1X 007DED  
                              __end_of___fldiv 1DF8                                          _CCP1Y 007DEC  
                                        _CCP2X 007DD5                                          _CCP2Y 007DD4  
                              __end_of___awdiv 3190                                          _EEADR 000FA9  
                                        STR_10 FFDA                                          STR_11 FFEA  
                                        STR_20 FFF3                                          STR_12 FFFC  
                                        STR_21 FFF3                                          STR_13 FFDE  
                                        STR_22 FFF6                                          STR_14 FEE4  
                                        STR_30 FED5                                          STR_15 FFDE  
                                        STR_31 FFE7                                          STR_23 FFF0  
                                        STR_32 FFAB                                          STR_24 FFA1  
                                        STR_40 FF2A                                          STR_16 FE77  
                                        STR_41 FFE7                                          STR_33 FFE7  
                                        STR_17 FFE7                                          STR_25 FF76  
                                        STR_26 FF51                                          STR_42 FF37  
                                        STR_18 FF1C                                          STR_34 FF0E  
                                        STR_50 FEF2                                          STR_51 FFE7  
                                        STR_43 FFE7                                          STR_35 FFE7  
                                        STR_27 FFE7                                          STR_19 FE66  
                                        STR_28 FFBF                                          STR_36 FF44  
                                        STR_44 FEA7                                          STR_52 FE87  
                              __end_of___awmod 3282                                          STR_45 FFE7  
                                        STR_37 FFE7                                          STR_53 FF5E  
                                        STR_29 FEC6                                          STR_38 FFD1  
                                        STR_46 FFC8                                          STR_54 FFB5  
                                        STR_47 FFE7                                          STR_39 FFE7  
                                        STR_55 FF81                                          STR_56 FF8C  
                                        STR_48 FF6B                                          STR_49 FFE7  
                              __end_of___flmul 1552                                __end_of___flsub 35FE  
                              __end_of___fltol 2EA2                                          ?_stoa 0013  
                              __end_of___lldiv 3212                                          u10060 0DC2  
                                        u10207 0D96                                          u10217 0E46  
                                        u10307 0398                                          u10227 32F4  
                                        u10147 0B04                                          u10317 03B0  
                                        u10237 330C                                          u10157 0BB0  
                                        u10407 3900                                          u10327 1560  
                                        u10247 331E                                          u10167 0BFC  
                                        u10337 1578                                          u10257 3340  
                                        u10177 0C18                                          u10347 0E60  
                                        u10267 01AA                                          u10187 0CA0  
                              ___awdiv@divisor 0008                                          u10357 0E86  
                                        u10277 01C2                                          u10197 0D20  
                                        u10367 0F70                                          u10287 02C6  
                                        ?_xtoa 0025                                __end_of___llmod 33BE  
                                        u10377 1132                                          u10297 02DE  
                                        u10387 11F4                                          u10397 38F6  
                                        _T0PS0 007EA8                                          _T0PS1 007EA9  
                                        _T0PS2 007EAA                                          i2l433 360E  
                                        i2l435 362A                                          i2l436 3640  
                                        i2l437 3636                                   main@keyValue 00CB  
                              ___awdiv@counter 000A                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 005E  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 3A9A  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 00C7                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0064  
                  set_pwm_duty_cycle@duty_valB 0066                                __end_of_opDelay 3422  
                              __end_of_initLCD 3358                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 009B                                          _flags 00CC  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FE5F                 init_motor_PWM@TIMER2_PRESCALER FE5E  
                                        _fputc 3282                                __end_of_isalpha 37FA  
                                        _fputs 378E                                __end_of_isdigit 38BC  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 0149  
                                        ctoa@c 0027                                          _putch 3A82  
                                        ctoa@w 0028                                          main@i 00C8  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 385C                                __end_of_isspace 378E  
                              __end_of_isupper 388C                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 3710                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 05A8                    __end_of_updateMotorBEncoder 36CC  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 3912  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          status 000FD8  
                  I2C_Master_Read@receivedByte 0008                      requestIsTireDropDone@data 0009  
                                        wtemp8 007B                                          xtoa@c 004A  
                                        xtoa@d 0027                                          xtoa@i 0048  
                                        xtoa@n 0040                                          xtoa@p 003C  
                                        xtoa@w 003E                                          xtoa@x 002F  
                              __end_of_toupper 35B8                       errorCorrectedMove@ASpeed 009C  
                     errorCorrectedMove@BSpeed 009E                                 __CFG_PBADEN$ON 000000  
                                 _toupper$1922 0012                                __initialization 3086  
                          main@currentLogState 00C9                                   __end_of_atoi 2BF4  
                                 __end_of_ctoa 3522                                   __end_of_main 0E52  
                                 __end_of_dtoa 22AC                                   __end_of_keys FE54  
                                 __end_of_stoa 2974                          __size_of_doDisplayLog 03AE  
                                 __end_of_xtoa 24E6                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 00BA  
                                       ??_dtoa 002F                               opDelay@startTime 0014  
                                       ??_stoa 0017                                         ??_xtoa 0030  
                                __activetblptr 000002                        set_pwm_duty_cycle@dutyA 0058  
                      set_pwm_duty_cycle@dutyB 005C                              ?_I2C_Master_Start 0001  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 356E  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0075  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                               ___awdiv@dividend 0006  
                       doOperation@tiresOnPole 0136                                         ?_putch 0001  
                       doOperation@tiresToDrop 0132                                         _INT0IE 007F94  
                                       _INT0IF 007F91                                         _INT1IE 007F83  
                                       _INT1IF 007F80                                         _INT2IE 007F84  
                                       _INT2IF 007F81                                         i2l5842 3708  
                                       i2l5834 36C2                             _set_pwm_duty_cycle 24E6  
                                  _EncoderInit 3A30                                  vfpfcnvrt@done 0068  
                                       _TMR0IE 007F95                                         _TMR0IF 007F92  
                                       _TMR0ON 007EAF                                         _TMR2ON 007E52  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 2AB4              __size_of_opErrorCorrectionDegrees 00B4  
                                 _doDisplayLog 0E52                            __size_of_TIMER_INIT 001E  
                    ?_opErrorCorrectionDegrees 00A0       opErrorCorrectionDegrees@maxOperationTime 00AA  
                          ?_set_pwm_duty_cycle 0058                                 __CFG_XINST$OFF 000000  
                        _encoderAInterruptLast 014D                                   vfprintf@cfmt 0073  
                                       ___flge 2D18                                      ??___aodiv 0016  
                                    ??___fladd 0035                                      ??___aomod 0016  
                                       ___wmul 3962                                      ??___fldiv 0035  
                                    ??___awdiv 000A                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 000A                                      ??___flmul 001C  
                                    ??___flsub 004E                                      ??___fltol 0052  
                                    ??___lldiv 000E                                      ??___llmod 000E  
                             doOperation@F3372 0143                                         clear_0 30D2  
                                       clear_1 30E4                                         clear_2 30F0  
                             ___awdiv@quotient 000C                                ___awmod@divisor 0008  
                              ___awmod@counter 000A                                      ??_lcdInst 0009  
                                       _printf 393A                                         pad@buf 001C  
                                       ctoa@fp 0025                    ?_sendArduinoTireDropRequest 0001  
                                       dtoa@fp 0025                updateMotorBEncoder@directionPin 0004  
                                       _strlen 3644                                      ??_opDelay 000C  
                                    ??_initLCD 000A                                         fputc@c 000A  
                                       fputs@c 0017                                         fputs@i 0018  
                                 __pdataCOMRAM 0079                                         fputs@s 0013  
                                    ??_isalpha 0008                                      ??_isdigit 0008  
                        _requestIsTireDropDone 38BC                           ??_set_pwm_duty_cycle 0060  
                            ??_tirePositioning 0092                                      ??_islower 0008  
                                 __mediumconst FE42                                      ??_isspace 0008  
             doOperation@currentOperationState 0140                  _opErrorCorrectionDegrees$2229 00AE  
                                       tblptrh 000FF7                                      ??_isupper 0008  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                                       stoa@cp 0023                                         stoa@fp 0013  
                             __end_of_vfprintf 34D4                                      ??_pulse_e 0006  
                                       xtoa@fp 0025                                      ??_toupper 000E  
                                   ___flge@ff1 0006                                     ___flge@ff2 000A  
                                 ___xxtofl@arg 0010                          pulse_e@interruptState 0006  
                                 ___xxtofl@exp 000F                                   ___xxtofl@val 0006  
                                   __accesstop 0080                        __end_of__initialization 30FE  
                          _setMotorSpeeds$2226 0080                            _setMotorSpeeds$2227 0084  
                                ___rparam_used 000001                                 _setMotorSpeeds 2FF0  
                doOperation@tiresOnPoleAfterOp 0112                                     ___fltol@f1 004E  
                         __end_of_happynewyear FE5B                                 __pcstackCOMRAM 0001  
                                 __pidataBANK0 3ABC                                   __pidataBANK1 3AB4  
                      opDelay@maxOperationTime 0008                                  __end_of_fputc 32EE  
                                __end_of_fputs 37C6                                  __end_of_putch 3A8E  
                                      ??_fputc 000E                                        ??_fputs 0017  
                                      ??_putch 0009                                     __pbssBANK0 00CC  
                                   __pbssBANK1 0143                         __end_of_setMotorSpeeds 3086  
     __end_of_sendArduinoAbortOperationMessage 3A12      __size_of_sendArduinoAbortOperationMessage 0022  
           ??_sendArduinoAbortOperationMessage 0009              ?_sendArduinoAbortOperationMessage 0001  
             _sendArduinoAbortOperationMessage 39F0                              ?_interruptHandler 0001  
                           _errorCorrectedMove 1DF8                             ??_interruptHandler 0006  
                        _encoderBInterruptLast 014E                                        ?___flge 0006  
                                      ?___wmul 0006             tirePositioning@distanceRecordedTop 009F  
                          ?_errorCorrectedMove 0088                             __size_of_send_byte 0012  
                                 ??_TIMER_INIT 0006                                        ?_printf 0080  
                                      ?_strlen 0006                                        _T2CKPS0 007E50  
                                      _T2CKPS1 007E51                    tirePositioning@topBreakbeam 00A3  
                       ?_requestIsTireDropDone 0001                             __size_of_robotInit 0040  
                                    ?___xxtofl 0006                             __size_of_vfpfcnvrt 048A  
      opErrorCorrectionDegrees@distanceDegrees 00A8                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                         ??_errorCorrectedMove 0096                           __size_of_send_nibble 0016  
                              ?_setMotorSpeeds 006C    opErrorCorrectionDegrees@motorAStartDistance 00B4  
                                opDelay@millis 0006                             __end_of_TIMER_INIT 3A30  
                                      __Hparam 0000                                     _keyPressed 00D2  
                                      __Lparam 0000                tirePositioning@maxOperationTime 008E  
                              __size_of___flge 00D0                                        ___aodiv 26E8  
                                      ___fladd 1864                                        ___aomod 2BF4  
                                      ___fldiv 1B70                                        ___awdiv 310C  
                                      ___awmod 3212                                        ___flmul 1200  
                                      ___flsub 35B8                                        ___fltol 2DE8  
                                      ___lldiv 3190                                __size_of___wmul 0026  
                                      ___llmod 3358                                      ?_vfprintf 006D  
                                      __pcinit 3086                                        __ramtop 1000  
                                      _lcdInst 3A8E                                        __ptext0 0A44  
                                      __ptext1 3710                                        __ptext2 32EE  
                                      __ptext3 3422                                        __ptext4 3190  
                                      __ptext5 3A30                                        __ptext6 3522  
                                      __ptext7 0012                                        __ptext8 1552  
                                      __ptext9 33BE                                __size_of_printf 0028  
                                    _T0CONbits 000FD5                                        _opDelay 33BE  
                              __size_of_strlen 0044                                        _initLCD 32EE  
                               _motorADistance 00D0                                   __size_of_abs 0032  
                                 __size_of_pad 009A                                        _isalpha 37C6  
                                      _isdigit 388C                                     ??___xxtofl 000A  
                             ___awmod@dividend 0006                                 _motorBDistance 00CE  
                                      _islower 382C                                        _isspace 3750  
                      doOperation@startedDistA 0114                        doOperation@startedDistB 0116  
                                      _isupper 385C                       __size_of_I2C_Master_Init 005C  
                     __size_of_I2C_Master_Read 0024                       __size_of_I2C_Master_Wait 0012  
                     __size_of_I2C_Master_Stop 0008                                        atoi@neg 0013  
                                      _pulse_e 38E8                                  ??_doOperation 00B6  
            opErrorCorrectionDegrees@goalSpeed 00A0                                 __pintcode_body 35FE  
                                      _toupper 356E                    _topBreakBeamTriggeredChange 0150  
                         end_of_initialization 30FE                          __end_of_LCD_SIZE_HORZ FE5E  
                            __end_of_send_byte 3A82                          __end_of_LCD_SIZE_VERT FE5D  
                                 ?_EncoderInit 0001                          doOperation@isDoneDrop 0129  
                                      fputc@fp 000C                                  __Lmediumconst FE42  
                                      int_func 35FE                                        fputs@fp 0015  
                      __size_of_init_motor_PWM 0028                              __end_of_robotInit 3750  
                    __size_of_I2C_Master_Start 0008                      __size_of_I2C_Master_Write 000A  
                              ___lldiv@divisor 000A                                ___lldiv@counter 0012  
                 __size_of_updateMotorAEncoder 0044                              __end_of_vfpfcnvrt 0A44  
           tirePositioning@startDistanceBottom 0097                   __size_of_updateMotorBEncoder 0044  
                         doDisplayLog@keyValue 0096                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                              _tirePositioning 1552                                     ??_vfprintf 0073  
                         doDisplayLog@keypress 0094                                        strlen@a 0008  
                                      strlen@s 0006                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82                                      _PORTEbits 000F84  
         updateMotorBEncoder@interruptPinState 0002                                    ___fladd@grs 003C  
                                ___xxtofl@sign 000E                                      _TRISAbits 000F92  
                  doOperation@bottomLaserState 0141                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISEbits 000F96  
                                  ___fldiv@grs 0040                                    ___fldiv@rem 0039  
                                 _happynewyear FE54                   tirePositioning@startDistance 0099  
                                  ___flmul@grs 0022    opErrorCorrectionDegrees@motorBStartDistance 00B2  
                doOperation@totalTiresSupplied 011F                                  send_byte@data 0008  
                          __end_of_doOperation 05BA              opErrorCorrectionDegrees@turnRatio 00A2  
                       __size_of_replaceOldLog 004C                                 __end_of___flge 2DE8  
                                  vfpfcnvrt@ap 0050                                    vfpfcnvrt@cp 0066  
                                  vfpfcnvrt@fp 004C                                    vfpfcnvrt@ll 0056  
                               __end_of___wmul 3988                                  __pidataCOMRAM 3ABB  
                        doOperation@poleNumber 011D                                 __end_of_printf 3962  
                               __end_of_strlen 3688                            start_initialization 3086  
                  __size_of_set_pwm_duty_cycle 0202                      setMotorSpeeds@motorASpeed 006C  
                    setMotorSpeeds@motorBSpeed 0070                                    __end_of_abs 382C  
                                  __end_of_pad 2FF0                        errorCorrectedMove@error 009A  
                     _opErrorCorrectionDegrees 2EA2                              ??_I2C_Master_Init 0017  
                            ??_I2C_Master_Read 0007                              ??_I2C_Master_Wait 0006  
                            ??_I2C_Master_Stop 0007                                ___llmod@divisor 000A  
                              ___llmod@counter 000E                        __end_of_tirePositioning 1864  
                                  vfprintf@fmt 006F                                       ??___flge 000E  
                                     ??___wmul 000A                          main@currentRobotState 00CA  
                     I2C_Master_Init@clockFreq 0013                                    __pdataBANK0 00D3  
                                  __pdataBANK1 0171                        ??_requestIsTireDropDone 0009  
                             __CFG_LPT1OSC$OFF 000000                 doOperation@tiresDeployedOnPole 0134  
              tirePositioning@startDistanceTop 0095                                doOperation@send 0118  
                                     ??_printf 0075                      __size_of_interruptHandler 363C  
                                     ??_strlen 0008                                      ___fladd@a 0031  
                                    ___fladd@b 002D                                      ___fldiv@a 0031  
                                    ___fldiv@b 002D                                    __pbssBIGRAM 0178  
                                    ___flmul@a 0018                                      ___flmul@b 0014  
                                  __pbssCOMRAM 0075                                      ___flsub@a 004A  
                                    ___flsub@b 0046                                  __pcstackBANK0 0080  
                                __pcstackBANK1 0100                               ___aodiv@dividend 0006  
                                _replaceOldLog 3522                               ??_setMotorSpeeds 0072  
                            __size_of___xxtofl 0140                                    _doOperation 0012  
                       setMotorSpeeds@Aforward 006E                         setMotorSpeeds@Bforward 006F  
                               _init_motor_PWM 3912                                      _atoi$1831 0015  
                                    _atoi$1832 0019                                      _atoi$1833 0017  
                         __size_of_EncoderInit 0018                               _I2C_Master_Start 3AAC  
                             _I2C_Master_Write 3A9A                       doOperation@topLaserState 0142  
                                    _dtoa$1335 0037                              __CFG_CCP2MX$PORTC 000000  
                                    __pintcode 0008                                  __pmediumconst FE42  
                                     ?___aodiv 0006                                       ?___fladd 002D  
                                     ?___aomod 0006                                       ?___fldiv 002D  
                                     ?___awdiv 0006                               ___aodiv@quotient 0018  
                                     ?___awmod 0006                                       ?___flmul 0014  
                                     ?___flsub 0046                                       ?___fltol 004E  
                                     ?___lldiv 0006          errorCorrectedMove@motorAStartDistance 008E  
                                     ?___llmod 0006                                       ?_lcdInst 0001  
                            __size_of_vfprintf 0056                                       ?_opDelay 0006  
                                     ?_initLCD 0001                         doOperation@badCountBot 011B  
                                     ?_isalpha 0006                                       ?_isdigit 0006  
                                     ?_islower 0006                                       ?_isspace 0006  
                               ?_replaceOldLog 0001                                       ?_isupper 0006  
                          _updateMotorAEncoder 36CC                                   doOperation@i 013A  
                          _updateMotorBEncoder 3688                                  ??_send_nibble 0007  
                                     ?_pulse_e 0001                                 __size_of_fputc 006C  
                               __size_of_fputs 0038                                       ?_toupper 000C  
                       __end_of_init_motor_PWM 393A                   doOperation@topLaserStatePrev 0138  
                               __size_of_putch 000C                    __size_of_errorCorrectedMove 0264  
                               ___wmul@product 000A                                       _LATAbits 000F89  
                                ?_doDisplayLog 008E                                       _LATDbits 000F8C  
                             ?_tirePositioning 008E                                      _send_byte 3A70  
                  errorCorrectedMove@goalSpeed 0088                                 _LCD_LINE1_ADDR FE5B  
                               _LCD_LINE2_ADDR FE65                                 _LCD_LINE3_ADDR FE64  
                               _LCD_LINE4_ADDR FE63                     doOperation@timeInOperation 013C  
                      init_motor_PWM@FREQUENCY FE5F                           ?_updateMotorAEncoder 0001  
                         doOperation@goalSpeed 0127                                       i2u625_40 3692  
                                     i2u626_40 36A4                                       i2u625_48 3694  
                                     i2u626_48 36A6                                       i2u628_40 36D6  
                                     i2u629_40 36E8                                       i2u628_48 36D8  
                                     i2u629_48 36EA                           ?_updateMotorBEncoder 0001  
                             __CFG_WDTPS$32768 000000                                      _robotInit 3710  
                                    _vfpfcnvrt 05BA                                      _xtoa$1356 0038  
                                    _xtoa$1357 003A                              ___wmul@multiplier 0006  
                 ??_sendArduinoTireDropRequest 0009                                   _isspace$1858 000C  
                                   vfpfcnvrt@c 006C                                      copy_data0 309A  
                      _set_pwm_duty_cycle$2225 0068                                ?_init_motor_PWM 0001  
                               ??_doDisplayLog 0090                           doOperation@timeStart 0123  
                       __end_of_LCD_LINE1_ADDR FE5C                         __end_of_LCD_LINE2_ADDR FE66  
                       __end_of_LCD_LINE3_ADDR FE65                         __end_of_LCD_LINE4_ADDR FE64  
                          __end_of_send_nibble 3A5E                                     _EECON1bits 000FA6  
                                   ?_send_byte 0001                                       __Hrparam 0000  
                        ??_updateMotorAEncoder 0001                          ??_updateMotorBEncoder 0001  
                      doDisplayLog@currentPole 0097                doDisplayLog@currentDisplayState 0095  
                                   vfprintf@ap 0071                                       __Lrparam 0000  
                                   vfprintf@fp 006D                             __CFG_BOREN$SBORDIS 000000  
          __size_of_sendArduinoTireDropRequest 0022                                     ?_robotInit 0001  
         updateMotorAEncoder@interruptPinState 0002                               __size_of___aodiv 0148  
                             __size_of___fladd 030C          errorCorrectedMove@motorBStartDistance 0090  
                             __size_of___aomod 0124                               __size_of___fldiv 0288  
                             __size_of___awdiv 0084                               __size_of___awmod 0070  
                             __size_of___flmul 0352                               __size_of___flsub 0046  
                             __size_of___fltol 00BA                               __size_of___lldiv 0082  
                             __size_of___llmod 0066                    errorCorrectedMove@turnRatio 008A  
                                   ?_vfpfcnvrt 004C                                ___aodiv@divisor 000E  
                             _interruptHandler 0008                                ___aodiv@counter 0016  
                             __size_of_lcdInst 000C                     ??_opErrorCorrectionDegrees 0072  
                              ??_replaceOldLog 0006                               __size_of_opDelay 0064  
                              _I2C_Master_Init 3422                                _I2C_Master_Read 3988  
                             __size_of_initLCD 006A                                       ___xxtofl 2974  
                              _I2C_Master_Wait 3A5E                                _I2C_Master_Stop 3AA4  
                             __size_of_isalpha 0034                               __size_of_isdigit 0030  
                             __size_of_islower 0030                               __size_of_isspace 003E  
                          doOperation@badCount 0119                                       __ptext10 310C  
                                     __ptext11 39AC                                       __ptext20 2EA2  
                                     __ptext12 39CE                                       __ptext21 1DF8  
                                     __ptext13 39F0                                       __ptext30 1864  
                                     __ptext22 2FF0                                       __ptext14 38BC  
                                     __ptext31 3912                                       __ptext23 24E6  
                                     __ptext15 3A9A                                       __ptext40 382C  
                                     __ptext32 3212                                       __ptext24 2974  
                                     __ptext16 3AA4                                       __ptext41 385C  
                                     __ptext33 3A12                                       __ptext25 2DE8  
                                     __ptext17 3AAC                                       __ptext50 3644  
                                     __ptext42 37C6                                       __ptext34 0E52  
                                     __ptext26 1200                                       __ptext18 3988  
                                     __ptext51 378E                                       __ptext43 2830  
                                     __ptext35 393A                                       __ptext27 2D18  
                                     __ptext19 3A5E                                       __ptext60 3A48  
                                     __ptext52 3282                                       __ptext44 205C  
                                     __ptext36 347E                                       __ptext28 1B70  
                                     __ptext61 38E8                                       __ptext53 3A82  
                                     __ptext45 37FA                                       __ptext37 05BA  
                                     __ptext29 35B8                                       __ptext62 3358  
                                     __ptext54 2AB4                                       __ptext46 2BF4  
                                     __ptext38 22AC                                       __ptext55 3750  
                                     __ptext47 26E8                                       __ptext39 356E  
                                     __ptext64 3688                                       __ptext56 388C  
                                     __ptext48 34D4                                       __ptext65 36CC  
                                     __ptext57 3962                                       __ptext49 2F56  
                                     __ptext58 3A8E                                       __ptext59 3A70  
                             __size_of_isupper 0030                               __size_of_pulse_e 002A  
                              _motorADirection 00D3                               __size_of_toupper 004A  
                                __size_of_atoi 0140                                  __size_of_ctoa 004E  
                                __size_of_main 040E                                _motorBDirection 0079  
                                __size_of_dtoa 0250                                  __size_of_stoa 0144  
                                __size_of_xtoa 023A                                      stoa@F1144 0171  
              doOperation@distanceFromLastPole 0121                 set_pwm_duty_cycle@max_duty_val 0062  
                                     int$flags 007A                             doOperation@PIDData 0100  
                                     _vfprintf 347E                                      printf@fmt 0080  
               doOperation@motorAStartDistance 012A                                       main@tick 00C3  
                                     main@time 00BC                 __size_of_requestIsTireDropDone 002C  
                __end_of_requestIsTireDropDone 38E8                    I2C_Master_Write@byteToWrite 0007  
 __end_of_sendArduinoTireOperationStartMessage 39CE  __size_of_sendArduinoTireOperationStartMessage 0022  
       ??_sendArduinoTireOperationStartMessage 0009          ?_sendArduinoTireOperationStartMessage 0001  
         _sendArduinoTireOperationStartMessage 39AC                updateMotorAEncoder@directionPin 0004  
                             ___aomod@dividend 0006                     __end_of_set_pwm_duty_cycle 26E8  
                                    putch@data 0009                       __end_of_I2C_Master_Start 3AB4  
                               _vfpfcnvrt$1371 006A                       __end_of_I2C_Master_Write 3AA4  
                                   _INTCONbits 000FF2          tirePositioning@distanceRecordedBottom 00A1  
                                     isalpha@c 0006                                       isdigit@c 0006  
                                  _send_nibble 3A48                                   ?_doOperation 0001  
               _bottomBreakBeamTriggeredChange 014F                                       intlevel2 0000  
                                _LCD_SIZE_HORZ FE5D                                       islower@c 0006  
         errorCorrectedMove@correctionConstant 0092                                  _LCD_SIZE_VERT FE5C  
                                     isspace@c 0006                               ___lldiv@dividend 0006  
                                  ??_send_byte 0008                                       isupper@c 0006  
              doOperation@bottomLaserStatePrev 0139                                     _OSCCONbits 000FD3  
                           doOperation@counted 012E                                    ??_robotInit 001B  
                                     printf@ap 008C                        __end_of_I2C_Master_Init 347E  
                              ___aomod@divisor 000E                        __end_of_I2C_Master_Read 39AC  
                      __end_of_I2C_Master_Wait 3A70                        __end_of_I2C_Master_Stop 3AAC  
                                  ??_vfpfcnvrt 0052                                    lcdInst@data 0009  
                                     stoa@nuls 0018                                ___aomod@counter 0016  
                        doDisplayLog@logNumber 008E             __end_of_sendArduinoTireDropRequest 39F0  
                   _sendArduinoTireDropRequest 39CE                                     _TIMER_INIT 3A12  
              __end_ofinit_motor_PWM@FREQUENCY FE63                           __end_of_doDisplayLog 1200  
               tirePositioning@bottomBreakbeam 00A5                               ___lldiv@quotient 000E  
                                     toupper@c 000C                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0039  
   opErrorCorrectionDegrees@correctionConstant 00A4                                   ___aodiv@sign 0017  
                                ??_EncoderInit 0006                                   ___fladd@aexp 003A  
                                 ___fladd@bexp 003B                                   ___aomod@sign 0017  
