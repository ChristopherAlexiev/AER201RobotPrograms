

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 23:28:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.05
    75                           ; Generated 20/12/2018 GMT
    76                           ; 
    77                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataCOMRAM
   110  0028D2                     __pidataCOMRAM:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for _motorBDirection
   114  0028D2  01                 	db	1
   115                           
   116                           	psect	idataBANK0
   117  0028B8                     __pidataBANK0:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for stoa@F1139
   121  0028B8  28                 	db	40
   122  0028B9  6E                 	db	110
   123  0028BA  75                 	db	117
   124  0028BB  6C                 	db	108
   125  0028BC  6C                 	db	108
   126  0028BD  29                 	db	41
   127  0028BE  00                 	db	0
   128                           
   129                           ;initializer for _motorADirection
   130  0028BF  01                 	db	1
   131                           
   132                           	psect	mediumconst
   133  00FEA8                     __pmediumconst:
   134                           	opt callstack 0
   135  00FEA8  00                 	db	0
   136  00FEA9                     _keys:
   137                           	opt callstack 0
   138  00FEA9  31                 	db	49
   139  00FEAA  32                 	db	50
   140  00FEAB  33                 	db	51
   141  00FEAC  41                 	db	65
   142  00FEAD  34                 	db	52
   143  00FEAE  35                 	db	53
   144  00FEAF  36                 	db	54
   145  00FEB0  42                 	db	66
   146  00FEB1  37                 	db	55
   147  00FEB2  38                 	db	56
   148  00FEB3  39                 	db	57
   149  00FEB4  43                 	db	67
   150  00FEB5  2A                 	db	42
   151  00FEB6  30                 	db	48
   152  00FEB7  23                 	db	35
   153  00FEB8  44                 	db	68
   154  00FEB9  00                 	db	0
   155  00FEBA                     __end_of_keys:
   156                           	opt callstack 0
   157  00FEBA                     _happynewyear:
   158                           	opt callstack 0
   159  00FEBA  00                 	db	0
   160  00FEBB  37                 	db	55
   161  00FEBC  0E                 	db	14
   162  00FEBD  02                 	db	2
   163  00FEBE  13                 	db	19
   164  00FEBF  02                 	db	2
   165  00FEC0  13                 	db	19
   166  00FEC1                     __end_of_happynewyear:
   167                           	opt callstack 0
   168  00FEC1                     _LCD_LINE1_ADDR:
   169                           	opt callstack 0
   170  00FEC1  00                 	db	0
   171  00FEC2                     __end_of_LCD_LINE1_ADDR:
   172                           	opt callstack 0
   173  00FEC2                     _LCD_SIZE_VERT:
   174                           	opt callstack 0
   175  00FEC2  04                 	db	4
   176  00FEC3                     __end_of_LCD_SIZE_VERT:
   177                           	opt callstack 0
   178  00FEC3                     _LCD_SIZE_HORZ:
   179                           	opt callstack 0
   180  00FEC3  10                 	db	16
   181  00FEC4                     __end_of_LCD_SIZE_HORZ:
   182                           	opt callstack 0
   183  00FEC4  10                 	db	16
   184  00FEC5                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   185                           	opt callstack 0
   186  00FEC5  03E8               	dw	1000
   187  00FEC7  0000               	dw	0
   188  00FEC9                     __end_ofinit_motor_PWM@FREQUENCY:
   189                           	opt callstack 0
   190  00FEC9  50                 	db	80
   191  00FECA                     __end_of_LCD_LINE4_ADDR:
   192                           	opt callstack 0
   193  00FECA  10                 	db	16
   194  00FECB                     __end_of_LCD_LINE3_ADDR:
   195                           	opt callstack 0
   196  00FECB  40                 	db	64
   197  00FECC                     __end_of_LCD_LINE2_ADDR:
   198                           	opt callstack 0
   199  0000                     _SSPBUF	set	4041
   200  0000                     _SSPCON2bits	set	4037
   201  0000                     _SSPCON1	set	4038
   202  0000                     _SSPADD	set	4040
   203  0000                     _SSPCON1bits	set	4038
   204  0000                     _SSPCON2	set	4037
   205  0000                     _SSPSTAT	set	4039
   206  0000                     _LATDbits	set	3980
   207  0000                     _ADCON1	set	4033
   208  0000                     _LATB	set	3978
   209  0000                     _TRISD	set	3989
   210  0000                     _LATD	set	3980
   211  0000                     _TRISAbits	set	3986
   212  0000                     _LATAbits	set	3977
   213  0000                     _CCPR2L	set	4027
   214  0000                     _CCPR1L	set	4030
   215  0000                     _PR2	set	4043
   216  0000                     _TRISCbits	set	3988
   217  0000                     _INTCONbits	set	4082
   218  0000                     _TMR0L	set	4054
   219  0000                     _TMR0H	set	4055
   220  0000                     _T0CONbits	set	4053
   221  0000                     _OSCCONbits	set	4051
   222  0000                     _TRISBbits	set	3987
   223  0000                     _TRISEbits	set	3990
   224  0000                     _PORTEbits	set	3972
   225  0000                     _PORTBbits	set	3969
   226  0000                     _PORTB	set	3969
   227  0000                     _INT2IF	set	32641
   228  0000                     _TMR0IF	set	32658
   229  0000                     _INT1IF	set	32640
   230  0000                     _INT1IE	set	32643
   231  0000                     _CCP2Y	set	32212
   232  0000                     _CCP2X	set	32213
   233  0000                     _CCP1Y	set	32236
   234  0000                     _CCP1X	set	32237
   235  0000                     _TMR2ON	set	32338
   236  0000                     _T2CKPS1	set	32337
   237  0000                     _T2CKPS0	set	32336
   238  0000                     _CCP2M0	set	32208
   239  0000                     _CCP2M1	set	32209
   240  0000                     _CCP2M2	set	32210
   241  0000                     _CCP2M3	set	32211
   242  0000                     _CCP1M0	set	32232
   243  0000                     _CCP1M1	set	32233
   244  0000                     _CCP1M2	set	32234
   245  0000                     _CCP1M3	set	32235
   246  0000                     _P1M0	set	32238
   247  0000                     _P1M1	set	32239
   248  0000                     _TMR0ON	set	32431
   249  0000                     _TMR0IE	set	32661
   250  0000                     _PSA	set	32427
   251  0000                     _T0PS0	set	32424
   252  0000                     _T0PS1	set	32425
   253  0000                     _T0PS2	set	32426
   254  0000                     _T08BIT	set	32430
   255  0000                     _INT2IE	set	32644
   256  00FECC                     STR_14:
   257                           
   258                           ; BSR set to: 0
   259  00FECC  54                 	db	84	;'T'
   260  00FECD  49                 	db	73	;'I'
   261  00FECE  52                 	db	82	;'R'
   262  00FECF  45                 	db	69	;'E'
   263  00FED0  2E                 	db	46
   264  00FED1  20                 	db	32
   265  00FED2  4F                 	db	79	;'O'
   266  00FED3  4E                 	db	78	;'N'
   267  00FED4  20                 	db	32
   268  00FED5  50                 	db	80	;'P'
   269  00FED6  4F                 	db	79	;'O'
   270  00FED7  4C                 	db	76	;'L'
   271  00FED8  45                 	db	69	;'E'
   272  00FED9  3A                 	db	58	;':'
   273  00FEDA  20                 	db	32
   274  00FEDB  58                 	db	88	;'X'
   275  00FEDC  00                 	db	0
   276  00FEDD                     STR_46:
   277                           
   278                           ; BSR set to: 0
   279  00FEDD  28                 	db	40
   280  00FEDE  31                 	db	49	;'1'
   281  00FEDF  29                 	db	41
   282  00FEE0  20                 	db	32
   283  00FEE1  28                 	db	40
   284  00FEE2  32                 	db	50	;'2'
   285  00FEE3  29                 	db	41
   286  00FEE4  20                 	db	32
   287  00FEE5  28                 	db	40
   288  00FEE6  33                 	db	51	;'3'
   289  00FEE7  29                 	db	41
   290  00FEE8  20                 	db	32
   291  00FEE9  28                 	db	40
   292  00FEEA  34                 	db	52	;'4'
   293  00FEEB  29                 	db	41
   294  00FEEC  00                 	db	0
   295  00FEED                     STR_4:
   296                           
   297                           ; BSR set to: 0
   298  00FEED  58                 	db	88	;'X'
   299  00FEEE  20                 	db	32
   300  00FEEF  54                 	db	84	;'T'
   301  00FEF0  49                 	db	73	;'I'
   302  00FEF1  52                 	db	82	;'R'
   303  00FEF2  2E                 	db	46
   304  00FEF3  20                 	db	32
   305  00FEF4  53                 	db	83	;'S'
   306  00FEF5  55                 	db	85	;'U'
   307  00FEF6  50                 	db	80	;'P'
   308  00FEF7  50                 	db	80	;'P'
   309  00FEF8  4C                 	db	76	;'L'
   310  00FEF9  49                 	db	73	;'I'
   311  00FEFA  45                 	db	69	;'E'
   312  00FEFB  44                 	db	68	;'D'
   313  00FEFC  00                 	db	0
   314  00FEFD                     STR_8:
   315                           
   316                           ; BSR set to: 0
   317  00FEFD  28                 	db	40
   318  00FEFE  32                 	db	50	;'2'
   319  00FEFF  29                 	db	41
   320  00FF00  20                 	db	32
   321  00FF01  53                 	db	83	;'S'
   322  00FF02  41                 	db	65	;'A'
   323  00FF03  56                 	db	86	;'V'
   324  00FF04  45                 	db	69	;'E'
   325  00FF05  20                 	db	32
   326  00FF06  26                 	db	38
   327  00FF07  20                 	db	32
   328  00FF08  45                 	db	69	;'E'
   329  00FF09  58                 	db	88	;'X'
   330  00FF0A  49                 	db	73	;'I'
   331  00FF0B  54                 	db	84	;'T'
   332  00FF0C  00                 	db	0
   333  00FF0D                     STR_38:
   334                           
   335                           ; BSR set to: 0
   336  00FF0D  28                 	db	40
   337  00FF0E  32                 	db	50	;'2'
   338  00FF0F  29                 	db	41
   339  00FF10  20                 	db	32
   340  00FF11  51                 	db	81	;'Q'
   341  00FF12  55                 	db	85	;'U'
   342  00FF13  49                 	db	73	;'I'
   343  00FF14  54                 	db	84	;'T'
   344  00FF15  20                 	db	32
   345  00FF16  44                 	db	68	;'D'
   346  00FF17  4F                 	db	79	;'O'
   347  00FF18  20                 	db	32
   348  00FF19  4E                 	db	78	;'N'
   349  00FF1A  4F                 	db	79	;'O'
   350  00FF1B  54                 	db	84	;'T'
   351  00FF1C  00                 	db	0
   352  00FF1D                     STR_12:
   353                           
   354                           ; BSR set to: 0
   355  00FF1D  54                 	db	84	;'T'
   356  00FF1E  49                 	db	73	;'I'
   357  00FF1F  52                 	db	82	;'R'
   358  00FF20  2E                 	db	46
   359  00FF21  20                 	db	32
   360  00FF22  44                 	db	68	;'D'
   361  00FF23  45                 	db	69	;'E'
   362  00FF24  50                 	db	80	;'P'
   363  00FF25  4C                 	db	76	;'L'
   364  00FF26  4F                 	db	79	;'O'
   365  00FF27  59                 	db	89	;'Y'
   366  00FF28  3A                 	db	58	;':'
   367  00FF29  20                 	db	32
   368  00FF2A  58                 	db	88	;'X'
   369  00FF2B  00                 	db	0
   370  00FF2C                     STR_23:
   371                           
   372                           ; BSR set to: 0
   373  00FF2C  25                 	db	37
   374  00FF2D  30                 	db	48	;'0'
   375  00FF2E  32                 	db	50	;'2'
   376  00FF2F  78                 	db	120	;'x'
   377  00FF30  2F                 	db	47
   378  00FF31  25                 	db	37
   379  00FF32  30                 	db	48	;'0'
   380  00FF33  32                 	db	50	;'2'
   381  00FF34  78                 	db	120	;'x'
   382  00FF35  2F                 	db	47
   383  00FF36  25                 	db	37
   384  00FF37  30                 	db	48	;'0'
   385  00FF38  32                 	db	50	;'2'
   386  00FF39  78                 	db	120	;'x'
   387  00FF3A  00                 	db	0
   388  00FF3B                     STR_24:
   389                           
   390                           ; BSR set to: 0
   391  00FF3B  25                 	db	37
   392  00FF3C  30                 	db	48	;'0'
   393  00FF3D  32                 	db	50	;'2'
   394  00FF3E  78                 	db	120	;'x'
   395  00FF3F  3A                 	db	58	;':'
   396  00FF40  25                 	db	37
   397  00FF41  30                 	db	48	;'0'
   398  00FF42  32                 	db	50	;'2'
   399  00FF43  78                 	db	120	;'x'
   400  00FF44  3A                 	db	58	;':'
   401  00FF45  25                 	db	37
   402  00FF46  30                 	db	48	;'0'
   403  00FF47  32                 	db	50	;'2'
   404  00FF48  78                 	db	120	;'x'
   405  00FF49  00                 	db	0
   406  00FF4A                     STR_44:
   407                           
   408                           ; BSR set to: 0
   409  00FF4A  28                 	db	40
   410  00FF4B  31                 	db	49	;'1'
   411  00FF4C  20                 	db	32
   412  00FF4D  49                 	db	73	;'I'
   413  00FF4E  53                 	db	83	;'S'
   414  00FF4F  20                 	db	32
   415  00FF50  4F                 	db	79	;'O'
   416  00FF51  4C                 	db	76	;'L'
   417  00FF52  44                 	db	68	;'D'
   418  00FF53  45                 	db	69	;'E'
   419  00FF54  53                 	db	83	;'S'
   420  00FF55  54                 	db	84	;'T'
   421  00FF56  29                 	db	41
   422  00FF57  00                 	db	0
   423  00FF58                     STR_6:
   424                           
   425                           ; BSR set to: 0
   426  00FF58  28                 	db	40
   427  00FF59  31                 	db	49	;'1'
   428  00FF5A  29                 	db	41
   429  00FF5B  20                 	db	32
   430  00FF5C  50                 	db	80	;'P'
   431  00FF5D  4F                 	db	79	;'O'
   432  00FF5E  4C                 	db	76	;'L'
   433  00FF5F  45                 	db	69	;'E'
   434  00FF60  20                 	db	32
   435  00FF61  49                 	db	73	;'I'
   436  00FF62  4E                 	db	78	;'N'
   437  00FF63  46                 	db	70	;'F'
   438  00FF64  4F                 	db	79	;'O'
   439  00FF65  00                 	db	0
   440  00FF66                     STR_28:
   441                           
   442                           ; BSR set to: 0
   443  00FF66  28                 	db	40
   444  00FF67  32                 	db	50	;'2'
   445  00FF68  29                 	db	41
   446  00FF69  20                 	db	32
   447  00FF6A  56                 	db	86	;'V'
   448  00FF6B  49                 	db	73	;'I'
   449  00FF6C  45                 	db	69	;'E'
   450  00FF6D  57                 	db	87	;'W'
   451  00FF6E  20                 	db	32
   452  00FF6F  4C                 	db	76	;'L'
   453  00FF70  4F                 	db	79	;'O'
   454  00FF71  47                 	db	71	;'G'
   455  00FF72  53                 	db	83	;'S'
   456  00FF73  00                 	db	0
   457  00FF74                     STR_16:
   458                           
   459                           ; BSR set to: 0
   460  00FF74  31                 	db	49	;'1'
   461  00FF75  3C                 	db	60	;'<'
   462  00FF76  2D                 	db	45
   463  00FF77  20                 	db	32
   464  00FF78  32                 	db	50	;'2'
   465  00FF79  2D                 	db	45
   466  00FF7A  3E                 	db	62	;'>'
   467  00FF7B  20                 	db	32
   468  00FF7C  33                 	db	51	;'3'
   469  00FF7D  4D                 	db	77	;'M'
   470  00FF7E  45                 	db	69	;'E'
   471  00FF7F  4E                 	db	78	;'N'
   472  00FF80  55                 	db	85	;'U'
   473  00FF81  00                 	db	0
   474  00FF82                     STR_34:
   475                           
   476                           ; BSR set to: 0
   477  00FF82  4F                 	db	79	;'O'
   478  00FF83  50                 	db	80	;'P'
   479  00FF84  2E                 	db	46
   480  00FF85  20                 	db	32
   481  00FF86  43                 	db	67	;'C'
   482  00FF87  4F                 	db	79	;'O'
   483  00FF88  4D                 	db	77	;'M'
   484  00FF89  50                 	db	80	;'P'
   485  00FF8A  4C                 	db	76	;'L'
   486  00FF8B  45                 	db	69	;'E'
   487  00FF8C  54                 	db	84	;'T'
   488  00FF8D  45                 	db	69	;'E'
   489  00FF8E  00                 	db	0
   490  00FF8F                     STR_36:
   491                           
   492                           ; BSR set to: 0
   493  00FF8F  28                 	db	40
   494  00FF90  31                 	db	49	;'1'
   495  00FF91  29                 	db	41
   496  00FF92  20                 	db	32
   497  00FF93  56                 	db	86	;'V'
   498  00FF94  49                 	db	73	;'I'
   499  00FF95  45                 	db	69	;'E'
   500  00FF96  57                 	db	87	;'W'
   501  00FF97  20                 	db	32
   502  00FF98  4C                 	db	76	;'L'
   503  00FF99  4F                 	db	79	;'O'
   504  00FF9A  47                 	db	71	;'G'
   505  00FF9B  00                 	db	0
   506  00FF9C                     STR_30:
   507                           
   508                           ; BSR set to: 0
   509  00FF9C  4F                 	db	79	;'O'
   510  00FF9D  50                 	db	80	;'P'
   511  00FF9E  45                 	db	69	;'E'
   512  00FF9F  52                 	db	82	;'R'
   513  00FFA0  41                 	db	65	;'A'
   514  00FFA1  54                 	db	84	;'T'
   515  00FFA2  49                 	db	73	;'I'
   516  00FFA3  4F                 	db	79	;'O'
   517  00FFA4  4E                 	db	78	;'N'
   518  00FFA5  20                 	db	32
   519  00FFA6  49                 	db	73	;'I'
   520  00FFA7  4E                 	db	78	;'N'
   521  00FFA8  00                 	db	0
   522  00FFA9                     STR_2:
   523                           
   524                           ; BSR set to: 0
   525  00FFA9  4F                 	db	79	;'O'
   526  00FFAA  50                 	db	80	;'P'
   527  00FFAB  2E                 	db	46
   528  00FFAC  20                 	db	32
   529  00FFAD  54                 	db	84	;'T'
   530  00FFAE  49                 	db	73	;'I'
   531  00FFAF  4D                 	db	77	;'M'
   532  00FFB0  45                 	db	69	;'E'
   533  00FFB1  20                 	db	32
   534  00FFB2  58                 	db	88	;'X'
   535  00FFB3  73                 	db	115	;'s'
   536  00FFB4  00                 	db	0
   537  00FFB5                     STR_42:
   538                           
   539                           ; BSR set to: 0
   540  00FFB5  53                 	db	83	;'S'
   541  00FFB6  45                 	db	69	;'E'
   542  00FFB7  4C                 	db	76	;'L'
   543  00FFB8  45                 	db	69	;'E'
   544  00FFB9  43                 	db	67	;'C'
   545  00FFBA  54                 	db	84	;'T'
   546  00FFBB  20                 	db	32
   547  00FFBC  4C                 	db	76	;'L'
   548  00FFBD  4F                 	db	79	;'O'
   549  00FFBE  47                 	db	71	;'G'
   550  00FFBF  00                 	db	0
   551  00FFC0                     STR_20:
   552                           
   553                           ; BSR set to: 0
   554  00FFC0  54                 	db	84	;'T'
   555  00FFC1  49                 	db	73	;'I'
   556  00FFC2  52                 	db	82	;'R'
   557  00FFC3  45                 	db	69	;'E'
   558  00FFC4  20                 	db	32
   559  00FFC5  44                 	db	68	;'D'
   560  00FFC6  52                 	db	82	;'R'
   561  00FFC7  4F                 	db	79	;'O'
   562  00FFC8  50                 	db	80	;'P'
   563  00FFC9  00                 	db	0
   564  00FFCA                     STR_26:
   565                           
   566                           ; BSR set to: 0
   567  00FFCA  28                 	db	40
   568  00FFCB  31                 	db	49	;'1'
   569  00FFCC  29                 	db	41
   570  00FFCD  20                 	db	32
   571  00FFCE  53                 	db	83	;'S'
   572  00FFCF  54                 	db	84	;'T'
   573  00FFD0  41                 	db	65	;'A'
   574  00FFD1  52                 	db	82	;'R'
   575  00FFD2  54                 	db	84	;'T'
   576  00FFD3  00                 	db	0
   577  00FFD4                     STR_22:
   578                           
   579                           ; BSR set to: 0
   580  00FFD4  57                 	db	87	;'W'
   581  00FFD5  45                 	db	69	;'E'
   582  00FFD6  4C                 	db	76	;'L'
   583  00FFD7  43                 	db	67	;'C'
   584  00FFD8  4F                 	db	79	;'O'
   585  00FFD9  4D                 	db	77	;'M'
   586  00FFDA  45                 	db	69	;'E'
   587  00FFDB  20                 	db	32
   588  00FFDC  00                 	db	0
   589  00FFDD                     STR_40:
   590                           
   591                           ; BSR set to: 0
   592  00FFDD  53                 	db	83	;'S'
   593  00FFDE  41                 	db	65	;'A'
   594  00FFDF  56                 	db	86	;'V'
   595  00FFE0  45                 	db	69	;'E'
   596  00FFE1  20                 	db	32
   597  00FFE2  4C                 	db	76	;'L'
   598  00FFE3  4F                 	db	79	;'O'
   599  00FFE4  47                 	db	71	;'G'
   600  00FFE5  00                 	db	0
   601  00FFE6                     STR_32:
   602                           
   603                           ; BSR set to: 0
   604  00FFE6  50                 	db	80	;'P'
   605  00FFE7  52                 	db	82	;'R'
   606  00FFE8  4F                 	db	79	;'O'
   607  00FFE9  47                 	db	71	;'G'
   608  00FFEA  52                 	db	82	;'R'
   609  00FFEB  45                 	db	69	;'E'
   610  00FFEC  53                 	db	83	;'S'
   611  00FFED  53                 	db	83	;'S'
   612  00FFEE  00                 	db	0
   613  00FFEF                     STR_10:
   614                           
   615                           ; BSR set to: 0
   616  00FFEF  50                 	db	80	;'P'
   617  00FFF0  4F                 	db	79	;'O'
   618  00FFF1  4C                 	db	76	;'L'
   619  00FFF2  45                 	db	69	;'E'
   620  00FFF3  20                 	db	32
   621  00FFF4  58                 	db	88	;'X'
   622  00FFF5  2F                 	db	47
   623  00FFF6  59                 	db	89	;'Y'
   624  00FFF7  00                 	db	0
   625  00FFF8                     STR_17:
   626                           
   627                           ; BSR set to: 0
   628  00FFF8  25                 	db	37
   629  00FFF9  64                 	db	100	;'d'
   630  00FFFA  00                 	db	0
   631  00FFFB                     STR_1:
   632                           
   633                           ; BSR set to: 0
   634  00FFFB  25                 	db	37
   635  00FFFC  73                 	db	115	;'s'
   636  00FFFD  00                 	db	0
   637  0000                     
   638                           ; #config settings
   639  00FFFE  00                 	db	0	; dummy byte at the end
   640  0000                     
   641                           	psect	cinit
   642  0023F8                     __pcinit:
   643                           	opt callstack 0
   644  0023F8                     start_initialization:
   645                           	opt callstack 0
   646  0023F8                     __initialization:
   647                           	opt callstack 0
   648                           
   649                           ; Initialize objects allocated to BANK0 (8 bytes)
   650                           ; load TBLPTR registers with __pidataBANK0
   651  0023F8  0EB8               	movlw	low __pidataBANK0
   652  0023FA  6EF6               	movwf	tblptrl,c
   653  0023FC  0E28               	movlw	high __pidataBANK0
   654  0023FE  6EF7               	movwf	tblptrh,c
   655  002400  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   656  002402  6EF8               	movwf	tblptru,c
   657  002404  EE00  F0EB         	lfsr	0,__pdataBANK0
   658  002408  EE10 F008          	lfsr	1,8
   659  00240C                     copy_data0:
   660  00240C  0009               	tblrd		*+
   661  00240E  CFF5 FFEE          	movff	tablat,postinc0
   662  002412  50E5               	movf	postdec1,w,c
   663  002414  50E1               	movf	fsr1l,w,c
   664  002416  E1FA               	bnz	copy_data0
   665                           
   666                           ; Initialize objects allocated to COMRAM (1 bytes)
   667                           ; load TBLPTR registers with __pidataCOMRAM
   668  002418  0ED2               	movlw	low __pidataCOMRAM
   669  00241A  6EF6               	movwf	tblptrl,c
   670  00241C  0E28               	movlw	high __pidataCOMRAM
   671  00241E  6EF7               	movwf	tblptrh,c
   672  002420  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   673  002422  6EF8               	movwf	tblptru,c
   674  002424  0009               	tblrd		*+	;fetch initializer
   675  002426  CFF5 F078          	movff	tablat,__pdataCOMRAM
   676                           
   677                           ; Clear objects allocated to BANK0 (46 bytes)
   678  00242A  EE00  F0BD         	lfsr	0,__pbssBANK0
   679  00242E  0E2E               	movlw	46
   680  002430                     clear_0:
   681  002430  6AEE               	clrf	postinc0,c
   682  002432  06E8               	decf	wreg,f,c
   683  002434  E1FD               	bnz	clear_0
   684                           
   685                           ; Clear objects allocated to COMRAM (5 bytes)
   686  002436  6A77               	clrf	(__pbssCOMRAM+4)& (0+255),c
   687  002438  6A76               	clrf	(__pbssCOMRAM+3)& (0+255),c
   688  00243A  6A75               	clrf	(__pbssCOMRAM+2)& (0+255),c
   689  00243C  6A74               	clrf	(__pbssCOMRAM+1)& (0+255),c
   690  00243E  6A73               	clrf	__pbssCOMRAM& (0+255),c
   691  002440                     end_of_initialization:
   692                           	opt callstack 0
   693  002440                     __end_of__initialization:
   694                           	opt callstack 0
   695  002440  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   696  002442  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   697  002444  0E00               	movlw	low (__Lmediumconst shr (0+16))
   698  002446  6EF8               	movwf	tblptru,c
   699  002448  0100               	movlb	0
   700  00244A  EF13  F002         	goto	_main	;jump to C main() function
   701                           
   702                           	psect	bssCOMRAM
   703  000073                     __pbssCOMRAM:
   704                           	opt callstack 0
   705  000073                     _prec:
   706                           	opt callstack 0
   707  000073                     	ds	2
   708  000075                     _flags:
   709                           	opt callstack 0
   710  000075                     	ds	2
   711  000077                     _encoderBInterruptLast:
   712                           	opt callstack 0
   713  000077                     	ds	1
   714                           
   715                           	psect	dataCOMRAM
   716  000078                     __pdataCOMRAM:
   717                           	opt callstack 0
   718  000078                     _motorBDirection:
   719                           	opt callstack 0
   720  000078                     	ds	1
   721                           
   722                           	psect	bssBANK0
   723  0000BD                     __pbssBANK0:
   724                           	opt callstack 0
   725  0000BD                     _nout:
   726                           	opt callstack 0
   727  0000BD                     	ds	2
   728  0000BF                     _width:
   729                           	opt callstack 0
   730  0000BF                     	ds	2
   731  0000C1                     _secondsMeasured:
   732                           	opt callstack 0
   733  0000C1                     	ds	2
   734  0000C3                     _motorBDistance:
   735                           	opt callstack 0
   736  0000C3                     	ds	2
   737  0000C5                     _motorADistance:
   738                           	opt callstack 0
   739  0000C5                     	ds	2
   740  0000C7                     _encoderAInterruptLast:
   741                           	opt callstack 0
   742  0000C7                     	ds	1
   743  0000C8                     _bottomBreakBeamTriggeredChange:
   744                           	opt callstack 0
   745  0000C8                     	ds	1
   746  0000C9                     _topBreakBeamTriggeredChange:
   747                           	opt callstack 0
   748  0000C9                     	ds	1
   749  0000CA                     _keyPressed:
   750                           	opt callstack 0
   751  0000CA                     	ds	1
   752  0000CB                     _dbuf:
   753                           	opt callstack 0
   754  0000CB                     	ds	32
   755                           
   756                           	psect	dataBANK0
   757  0000EB                     __pdataBANK0:
   758                           	opt callstack 0
   759  0000EB                     stoa@F1139:
   760                           	opt callstack 0
   761  0000EB                     	ds	7
   762  0000F2                     _motorADirection:
   763                           	opt callstack 0
   764  0000F2                     	ds	1
   765                           
   766                           	psect	cstackBANK0
   767  000080                     __pcstackBANK0:
   768                           	opt callstack 0
   769  000080                     vfprintf@cfmt:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000080                     	ds	2
   774  000082                     ?_printf:
   775                           	opt callstack 0
   776  000082                     printf@fmt:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780  000082                     	ds	10
   781  00008C                     printf@ap:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0xC
   785  00008C                     	ds	2
   786  00008E                     ??_doOperation:
   787  00008E                     doDisplayLog@currentLogState:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  00008E                     	ds	2
   792  000090                     ??_doDisplayLog:
   793                           
   794                           ; 1 bytes @ 0x10
   795  000090                     	ds	4
   796  000094                     doDisplayLog@keypress:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x14
   800  000094                     	ds	1
   801  000095                     doDisplayLog@currentDisplayState:
   802                           	opt callstack 0
   803                           
   804                           ; 1 bytes @ 0x15
   805  000095                     	ds	1
   806  000096                     doDisplayLog@keyValue:
   807                           	opt callstack 0
   808                           
   809                           ; 1 bytes @ 0x16
   810  000096                     	ds	7
   811  00009D                     doOperation@motorASpeed:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x1D
   815  00009D                     	ds	2
   816  00009F                     doOperation@motorBSpeed:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x1F
   820  00009F                     	ds	2
   821  0000A1                     doOperation@timeInOperation:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x21
   825  0000A1                     	ds	2
   826  0000A3                     doOperation@isDoneDrop:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x23
   830  0000A3                     	ds	1
   831  0000A4                     doOperation@secondsMeasuredOld:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x24
   835  0000A4                     	ds	2
   836  0000A6                     doOperation@topLaserStatePrev:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0x26
   840  0000A6                     	ds	1
   841  0000A7                     doOperation@tiresToDrop:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x27
   845  0000A7                     	ds	2
   846  0000A9                     doOperation@currentOperationState:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x29
   850  0000A9                     	ds	1
   851  0000AA                     doOperation@topLaserState:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x2A
   855  0000AA                     	ds	1
   856  0000AB                     ??_main:
   857                           
   858                           ; 1 bytes @ 0x2B
   859  0000AB                     	ds	2
   860  0000AD                     main@time:
   861                           	opt callstack 0
   862                           
   863                           ; 7 bytes @ 0x2D
   864  0000AD                     	ds	7
   865  0000B4                     main@tick:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x34
   869  0000B4                     	ds	4
   870  0000B8                     main@keypress:
   871                           	opt callstack 0
   872                           
   873                           ; 1 bytes @ 0x38
   874  0000B8                     	ds	1
   875  0000B9                     main@i:
   876                           	opt callstack 0
   877                           
   878                           ; 1 bytes @ 0x39
   879  0000B9                     	ds	1
   880  0000BA                     main@currentLogState:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x3A
   884  0000BA                     	ds	1
   885  0000BB                     main@currentRobotState:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x3B
   889  0000BB                     	ds	1
   890  0000BC                     main@keyValue:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x3C
   894  0000BC                     	ds	1
   895                           
   896                           	psect	cstackCOMRAM
   897  000001                     __pcstackCOMRAM:
   898                           	opt callstack 0
   899  000001                     ??_updateMotorBEncoder:
   900  000001                     
   901                           ; 1 bytes @ 0x0
   902  000001                     	ds	1
   903  000002                     updateMotorBEncoder@interruptPinState:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x1
   907  000002                     	ds	2
   908  000004                     updateMotorBEncoder@val:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x3
   912  000004                     	ds	2
   913  000006                     ??_I2C_Master_Wait:
   914  000006                     ?_strlen:
   915                           	opt callstack 0
   916  000006                     ?_isupper:
   917                           	opt callstack 0
   918  000006                     ?_isalpha:
   919                           	opt callstack 0
   920  000006                     ?_isdigit:
   921                           	opt callstack 0
   922  000006                     ?_isspace:
   923                           	opt callstack 0
   924  000006                     ?_islower:
   925                           	opt callstack 0
   926  000006                     ?___wmul:
   927                           	opt callstack 0
   928  000006                     ?___lldiv:
   929                           	opt callstack 0
   930  000006                     ?___llmod:
   931                           	opt callstack 0
   932  000006                     ?___xxtofl:
   933                           	opt callstack 0
   934  000006                     ?___aodiv:
   935                           	opt callstack 0
   936  000006                     ?___aomod:
   937                           	opt callstack 0
   938  000006                     pulse_e@interruptState:
   939                           	opt callstack 0
   940  000006                     ___wmul@multiplier:
   941                           	opt callstack 0
   942  000006                     isalpha@c:
   943                           	opt callstack 0
   944  000006                     isdigit@c:
   945                           	opt callstack 0
   946  000006                     isspace@c:
   947                           	opt callstack 0
   948  000006                     isupper@c:
   949                           	opt callstack 0
   950  000006                     strlen@s:
   951                           	opt callstack 0
   952  000006                     islower@c:
   953                           	opt callstack 0
   954  000006                     ___lldiv@dividend:
   955                           	opt callstack 0
   956  000006                     ___flge@ff1:
   957                           	opt callstack 0
   958  000006                     ___llmod@dividend:
   959                           	opt callstack 0
   960  000006                     ___xxtofl@val:
   961                           	opt callstack 0
   962  000006                     ___aodiv@dividend:
   963                           	opt callstack 0
   964  000006                     ___aomod@dividend:
   965                           	opt callstack 0
   966                           
   967                           ; 8 bytes @ 0x5
   968  000006                     	ds	1
   969  000007                     send_nibble@data:
   970                           	opt callstack 0
   971  000007                     I2C_Master_Read@ackBit:
   972                           	opt callstack 0
   973  000007                     I2C_Master_Write@byteToWrite:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x6
   977  000007                     	ds	1
   978  000008                     ??_isupper:
   979  000008                     ??_isalpha:
   980  000008                     ??_isdigit:
   981  000008                     ??_isspace:
   982  000008                     ??_islower:
   983  000008                     send_byte@data:
   984                           	opt callstack 0
   985  000008                     I2C_Master_Read@receivedByte:
   986                           	opt callstack 0
   987  000008                     ___wmul@multiplicand:
   988                           	opt callstack 0
   989  000008                     strlen@a:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x7
   993  000008                     	ds	1
   994  000009                     requestIsTireDropDone@data:
   995                           	opt callstack 0
   996  000009                     lcdInst@data:
   997                           	opt callstack 0
   998  000009                     putch@data:
   999                           	opt callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x8
  1002  000009                     	ds	1
  1003  00000A                     ??_initLCD:
  1004  00000A                     ??___xxtofl:
  1005  00000A                     ___wmul@product:
  1006                           	opt callstack 0
  1007  00000A                     fputc@c:
  1008                           	opt callstack 0
  1009  00000A                     ___lldiv@divisor:
  1010                           	opt callstack 0
  1011  00000A                     ___flge@ff2:
  1012                           	opt callstack 0
  1013  00000A                     ___llmod@divisor:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x9
  1017  00000A                     	ds	2
  1018  00000C                     ?_toupper:
  1019                           	opt callstack 0
  1020  00000C                     _isspace$1617:
  1021                           	opt callstack 0
  1022  00000C                     fputc@fp:
  1023                           	opt callstack 0
  1024  00000C                     toupper@c:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028  00000C                     	ds	1
  1029  00000D                     ?_atoi:
  1030                           	opt callstack 0
  1031  00000D                     atoi@s:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xC
  1035  00000D                     	ds	1
  1036  00000E                     ??_fputc:
  1037  00000E                     ??_toupper:
  1038  00000E                     ??___flge:
  1039  00000E                     ___llmod@counter:
  1040                           	opt callstack 0
  1041  00000E                     ___xxtofl@sign:
  1042                           	opt callstack 0
  1043  00000E                     ___lldiv@quotient:
  1044                           	opt callstack 0
  1045  00000E                     ___aodiv@divisor:
  1046                           	opt callstack 0
  1047  00000E                     ___aomod@divisor:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 8 bytes @ 0xD
  1051  00000E                     	ds	1
  1052  00000F                     ??_atoi:
  1053  00000F                     ___xxtofl@exp:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 1 bytes @ 0xE
  1057  00000F                     	ds	1
  1058  000010                     ___xxtofl@arg:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0xF
  1062  000010                     	ds	2
  1063  000012                     ___lldiv@counter:
  1064                           	opt callstack 0
  1065  000012                     _toupper$1681:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x11
  1069  000012                     	ds	1
  1070  000013                     ?_stoa:
  1071                           	opt callstack 0
  1072  000013                     stoa@fp:
  1073                           	opt callstack 0
  1074  000013                     atoi@neg:
  1075                           	opt callstack 0
  1076  000013                     fputs@s:
  1077                           	opt callstack 0
  1078  000013                     I2C_Master_Init@clockFreq:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x12
  1082  000013                     	ds	1
  1083  000014                     ?___flmul:
  1084                           	opt callstack 0
  1085  000014                     ___flmul@b:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x13
  1089  000014                     	ds	1
  1090  000015                     stoa@s:
  1091                           	opt callstack 0
  1092  000015                     _atoi$1590:
  1093                           	opt callstack 0
  1094  000015                     fputs@fp:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x14
  1098  000015                     	ds	1
  1099  000016                     ___aodiv@counter:
  1100                           	opt callstack 0
  1101  000016                     ___aomod@counter:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x15
  1105  000016                     	ds	1
  1106  000017                     ??_I2C_Master_Init:
  1107  000017                     ??_stoa:
  1108  000017                     ___aodiv@sign:
  1109                           	opt callstack 0
  1110  000017                     ___aomod@sign:
  1111                           	opt callstack 0
  1112  000017                     fputs@c:
  1113                           	opt callstack 0
  1114  000017                     _atoi$1592:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x16
  1118  000017                     	ds	1
  1119  000018                     ?_abs:
  1120                           	opt callstack 0
  1121  000018                     abs@a:
  1122                           	opt callstack 0
  1123  000018                     fputs@i:
  1124                           	opt callstack 0
  1125  000018                     ___flmul@a:
  1126                           	opt callstack 0
  1127  000018                     stoa@nuls:
  1128                           	opt callstack 0
  1129  000018                     ___aodiv@quotient:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 8 bytes @ 0x17
  1133  000018                     	ds	1
  1134  000019                     _atoi$1591:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x18
  1138  000019                     	ds	1
  1139  00001A                     ??_abs:
  1140  00001A                     ?_pad:
  1141                           	opt callstack 0
  1142  00001A                     pad@fp:
  1143                           	opt callstack 0
  1144  00001A                     atoi@n:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x19
  1148  00001A                     	ds	1
  1149  00001B                     
  1150                           ; 1 bytes @ 0x1A
  1151  00001B                     	ds	1
  1152  00001C                     ??___flmul:
  1153  00001C                     pad@buf:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x1B
  1157  00001C                     	ds	2
  1158  00001E                     pad@p:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x1D
  1162  00001E                     	ds	1
  1163  00001F                     stoa@i:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x1E
  1167  00001F                     	ds	1
  1168  000020                     ??_pad:
  1169  000020                     ___flmul@sign:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1F
  1173  000020                     	ds	1
  1174  000021                     pad@i:
  1175                           	opt callstack 0
  1176  000021                     stoa@w:
  1177                           	opt callstack 0
  1178  000021                     ___flmul@grs:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x20
  1182  000021                     	ds	2
  1183  000023                     pad@w:
  1184                           	opt callstack 0
  1185  000023                     stoa@cp:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x22
  1189  000023                     	ds	2
  1190  000025                     ?_dtoa:
  1191                           	opt callstack 0
  1192  000025                     ?_xtoa:
  1193                           	opt callstack 0
  1194  000025                     ___flmul@aexp:
  1195                           	opt callstack 0
  1196  000025                     dtoa@fp:
  1197                           	opt callstack 0
  1198  000025                     stoa@p:
  1199                           	opt callstack 0
  1200  000025                     xtoa@fp:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x24
  1204  000025                     	ds	1
  1205  000026                     ___flmul@bexp:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x25
  1209  000026                     	ds	1
  1210  000027                     stoa@l:
  1211                           	opt callstack 0
  1212  000027                     ___flmul@prod:
  1213                           	opt callstack 0
  1214  000027                     dtoa@d:
  1215                           	opt callstack 0
  1216  000027                     xtoa@d:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 8 bytes @ 0x26
  1220  000027                     	ds	4
  1221  00002B                     ___flmul@temp:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x2A
  1225  00002B                     	ds	2
  1226  00002D                     ?___fldiv:
  1227                           	opt callstack 0
  1228  00002D                     ?___fltol:
  1229                           	opt callstack 0
  1230  00002D                     ___fltol@f1:
  1231                           	opt callstack 0
  1232  00002D                     ___fldiv@b:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x2C
  1236  00002D                     	ds	2
  1237  00002F                     ??_dtoa:
  1238  00002F                     xtoa@x:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2E
  1242  00002F                     	ds	1
  1243  000030                     ??_xtoa:
  1244                           
  1245                           ; 1 bytes @ 0x2F
  1246  000030                     	ds	1
  1247  000031                     ??___fltol:
  1248  000031                     ___fldiv@a:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x30
  1252  000031                     	ds	4
  1253  000035                     ??___fldiv:
  1254  000035                     ___fltol@sign1:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x34
  1258  000035                     	ds	1
  1259  000036                     ___fltol@exp1:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x35
  1263  000036                     	ds	1
  1264  000037                     _dtoa$1094:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x36
  1268  000037                     	ds	1
  1269  000038                     _xtoa$1116:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x37
  1273  000038                     	ds	1
  1274  000039                     dtoa@p:
  1275                           	opt callstack 0
  1276  000039                     ___fldiv@rem:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x38
  1280  000039                     	ds	1
  1281  00003A                     _xtoa$1117:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x39
  1285  00003A                     	ds	1
  1286  00003B                     dtoa@w:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x3A
  1290  00003B                     	ds	1
  1291  00003C                     xtoa@p:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x3B
  1295  00003C                     	ds	1
  1296  00003D                     ___fldiv@sign:
  1297                           	opt callstack 0
  1298  00003D                     dtoa@s:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x3C
  1302  00003D                     	ds	1
  1303  00003E                     xtoa@w:
  1304                           	opt callstack 0
  1305  00003E                     ___fldiv@new_exp:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x3D
  1309  00003E                     	ds	1
  1310  00003F                     dtoa@n:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 8 bytes @ 0x3E
  1314  00003F                     	ds	1
  1315  000040                     ___fldiv@grs:
  1316                           	opt callstack 0
  1317  000040                     xtoa@n:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 8 bytes @ 0x3F
  1321  000040                     	ds	4
  1322  000044                     ___fldiv@bexp:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x43
  1326  000044                     	ds	1
  1327  000045                     ___fldiv@aexp:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x44
  1331  000045                     	ds	1
  1332  000046                     set_pwm_duty_cycle@dutyA:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x45
  1336  000046                     	ds	1
  1337  000047                     dtoa@i:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x46
  1341  000047                     	ds	1
  1342  000048                     xtoa@i:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x47
  1346  000048                     	ds	2
  1347  00004A                     xtoa@c:
  1348                           	opt callstack 0
  1349  00004A                     set_pwm_duty_cycle@dutyB:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 4 bytes @ 0x49
  1353  00004A                     	ds	2
  1354  00004C                     ?_vfpfcnvrt:
  1355                           	opt callstack 0
  1356  00004C                     vfpfcnvrt@fp:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x4B
  1360  00004C                     	ds	2
  1361  00004E                     ??_set_pwm_duty_cycle:
  1362  00004E                     vfpfcnvrt@fmt:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x4D
  1366  00004E                     	ds	2
  1367  000050                     set_pwm_duty_cycle@max_duty_val:
  1368                           	opt callstack 0
  1369  000050                     vfpfcnvrt@ap:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x4F
  1373  000050                     	ds	2
  1374  000052                     ??_vfpfcnvrt:
  1375  000052                     set_pwm_duty_cycle@duty_valA:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x51
  1379  000052                     	ds	2
  1380  000054                     set_pwm_duty_cycle@duty_valB:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x53
  1384  000054                     	ds	2
  1385  000056                     _set_pwm_duty_cycle$1951:
  1386                           	opt callstack 0
  1387  000056                     vfpfcnvrt@ll:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 8 bytes @ 0x55
  1391  000056                     	ds	4
  1392  00005A                     setMotorSpeeds@motorASpeed:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x59
  1396  00005A                     	ds	2
  1397  00005C                     setMotorSpeeds@Aforward:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x5B
  1401  00005C                     	ds	1
  1402  00005D                     setMotorSpeeds@motorBSpeed:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x5C
  1406  00005D                     	ds	1
  1407  00005E                     vfpfcnvrt@llu:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 8 bytes @ 0x5D
  1411  00005E                     	ds	1
  1412  00005F                     _setMotorSpeeds$1952:
  1413                           	opt callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x5E
  1416  00005F                     	ds	4
  1417  000063                     _setMotorSpeeds$1953:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x62
  1421  000063                     	ds	3
  1422  000066                     vfpfcnvrt@cp:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x65
  1426  000066                     	ds	2
  1427  000068                     vfpfcnvrt@c:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x67
  1431  000068                     	ds	1
  1432  000069                     vfpfcnvrt@done:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x68
  1436  000069                     	ds	2
  1437  00006B                     _vfpfcnvrt$1131:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x6A
  1441  00006B                     	ds	2
  1442  00006D                     ?_vfprintf:
  1443                           	opt callstack 0
  1444  00006D                     vfprintf@fp:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x6C
  1448  00006D                     	ds	2
  1449  00006F                     vfprintf@fmt:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x6E
  1453  00006F                     	ds	2
  1454  000071                     vfprintf@ap:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x70
  1458  000071                     	ds	2
  1459  000073                     
  1460                           ; 1 bytes @ 0x72
  1461 ;;
  1462 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1463 ;;
  1464 ;; *************** function _main *****************
  1465 ;; Defined at:
  1466 ;;		line 627 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               1   57[BANK0 ] unsigned char 
  1471 ;;  keyValue        1   60[BANK0 ] unsigned char 
  1472 ;;  keypress        1   56[BANK0 ] unsigned char 
  1473 ;;  time            7   45[BANK0 ] unsigned char [7]
  1474 ;;  tick            4   52[BANK0 ] unsigned long 
  1475 ;;  currentRobot    1   59[BANK0 ] enum E3312
  1476 ;;  currentLogSt    1   58[BANK0 ] enum E3319
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:       18 bytes
  1491 ;; Hardware stack levels required when called:   14
  1492 ;; This function calls:
  1493 ;;		_I2C_Master_Read
  1494 ;;		_I2C_Master_Start
  1495 ;;		_I2C_Master_Stop
  1496 ;;		_I2C_Master_Write
  1497 ;;		___llmod
  1498 ;;		_doDisplayLog
  1499 ;;		_doOperation
  1500 ;;		_lcdInst
  1501 ;;		_printf
  1502 ;;		_replaceOldLog
  1503 ;;		_robotInit
  1504 ;; This function is called by:
  1505 ;;		Startup code after reset
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text0
  1510  000426                     __ptext0:
  1511                           	opt callstack 0
  1512  000426                     _main:
  1513                           	opt callstack 17
  1514                           
  1515                           ;main.c: 628:     robotInit();
  1516                           
  1517                           ;incstack = 0
  1518  000426  EC99  F012         	call	_robotInit	;wreg free
  1519                           
  1520                           ;main.c: 630:     unsigned char time[7];;main.c: 634:     enum robotStates currentRobotS
      +                          tate = standby;
  1521  00042A  0E00               	movlw	0
  1522  00042C  0100               	movlb	0	; () banked
  1523  00042E  6FBB               	movwf	main@currentRobotState& (0+255),b
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 636:     enum logStates currentLogState = one;
  1527  000430  0E01               	movlw	1
  1528  000432  6FBA               	movwf	main@currentLogState& (0+255),b
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;main.c: 638:     unsigned long tick = 0;
  1532  000434  0E00               	movlw	0
  1533  000436  6FB4               	movwf	main@tick& (0+255),b
  1534  000438  0E00               	movlw	0
  1535  00043A  6FB5               	movwf	(main@tick+1)& (0+255),b
  1536  00043C  0E00               	movlw	0
  1537  00043E  6FB6               	movwf	(main@tick+2)& (0+255),b
  1538  000440  0E00               	movlw	0
  1539  000442  6FB7               	movwf	(main@tick+3)& (0+255),b
  1540  000444                     l5905:
  1541                           
  1542                           ;main.c: 641:             if (tick%10==0){
  1543  000444  C0B4  F006         	movff	main@tick,___llmod@dividend
  1544  000448  C0B5  F007         	movff	main@tick+1,___llmod@dividend+1
  1545  00044C  C0B6  F008         	movff	main@tick+2,___llmod@dividend+2
  1546  000450  C0B7  F009         	movff	main@tick+3,___llmod@dividend+3
  1547  000454  0E0A               	movlw	10
  1548  000456  6E0A               	movwf	___llmod@divisor,c
  1549  000458  0E00               	movlw	0
  1550  00045A  6E0B               	movwf	___llmod@divisor+1,c
  1551  00045C  0E00               	movlw	0
  1552  00045E  6E0C               	movwf	___llmod@divisor+2,c
  1553  000460  0E00               	movlw	0
  1554  000462  6E0D               	movwf	___llmod@divisor+3,c
  1555  000464  EC9B  F011         	call	___llmod	;wreg free
  1556  000468  5006               	movf	?___llmod,w,c
  1557  00046A  1007               	iorwf	?___llmod+1,w,c
  1558  00046C  1008               	iorwf	?___llmod+2,w,c
  1559  00046E  1009               	iorwf	?___llmod+3,w,c
  1560  000470  A4D8               	btfss	status,2,c
  1561  000472  D150               	goto	l6011
  1562                           
  1563                           ;main.c: 643:                 I2C_Master_Start();
  1564  000474  EC64  F014         	call	_I2C_Master_Start	;wreg free
  1565                           
  1566                           ;main.c: 644:                 I2C_Master_Write(0b11010000);
  1567  000478  0E00               	movlw	0
  1568  00047A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1569  00047C  0ED0               	movlw	208
  1570  00047E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1571  000480  EC57  F014         	call	_I2C_Master_Write	;wreg free
  1572                           
  1573                           ;main.c: 645:                 I2C_Master_Write(0x00);
  1574  000484  0E00               	movlw	0
  1575  000486  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1576  000488  0E00               	movlw	0
  1577  00048A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1578  00048C  EC57  F014         	call	_I2C_Master_Write	;wreg free
  1579                           
  1580                           ;main.c: 646:                 I2C_Master_Stop();
  1581  000490  EC60  F014         	call	_I2C_Master_Stop	;wreg free
  1582                           
  1583                           ;main.c: 649:                 I2C_Master_Start();
  1584  000494  EC64  F014         	call	_I2C_Master_Start	;wreg free
  1585                           
  1586                           ;main.c: 650:                 I2C_Master_Write(0b11010001);
  1587  000498  0E00               	movlw	0
  1588  00049A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1589  00049C  0ED1               	movlw	209
  1590  00049E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1591  0004A0  EC57  F014         	call	_I2C_Master_Write	;wreg free
  1592                           
  1593                           ;main.c: 651:                 for(unsigned char i = 0; i < 6; i++){
  1594  0004A4  0E00               	movlw	0
  1595  0004A6  0100               	movlb	0	; () banked
  1596  0004A8  6FB9               	movwf	main@i& (0+255),b
  1597  0004AA                     l5915:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 652:                     time[i] = I2C_Master_Read(0);
  1601  0004AA  0EAD               	movlw	low main@time
  1602  0004AC  25B9               	addwf	main@i& (0+255),w,b
  1603  0004AE  6ED9               	movwf	fsr2l,c
  1604  0004B0  6ADA               	clrf	fsr2h,c
  1605  0004B2  0E00               	movlw	high main@time
  1606  0004B4  22DA               	addwfc	fsr2h,f,c
  1607  0004B6  0E00               	movlw	0
  1608  0004B8  ECEF  F013         	call	_I2C_Master_Read
  1609  0004BC  6EDF               	movwf	indf2,c
  1610                           
  1611                           ;main.c: 653:                 }
  1612  0004BE  0100               	movlb	0	; () banked
  1613  0004C0  2BB9               	incf	main@i& (0+255),f,b
  1614                           
  1615                           ; BSR set to: 0
  1616  0004C2  0E05               	movlw	5
  1617  0004C4  65B9               	cpfsgt	main@i& (0+255),b
  1618  0004C6  D7F1               	goto	l5915
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 654:                 time[6] = I2C_Master_Read(1);
  1622  0004C8  0E01               	movlw	1
  1623  0004CA  ECEF  F013         	call	_I2C_Master_Read
  1624  0004CE  0100               	movlb	0	; () banked
  1625  0004D0  6FB3               	movwf	(main@time+6)& (0+255),b
  1626                           
  1627                           ;main.c: 655:                 I2C_Master_Stop();
  1628  0004D2  EC60  F014         	call	_I2C_Master_Stop	;wreg free
  1629  0004D6  D11E               	goto	l6011
  1630  0004D8                     l5923:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 668:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1634  0004D8  0E80               	movlw	128
  1635  0004DA  EC51  F014         	call	_lcdInst
  1636  0004DE  0E07               	movlw	7
  1637  0004E0  0100               	movlb	0	; () banked
  1638  0004E2  6FAB               	movwf	??_main& (0+255),b
  1639  0004E4  0E7D               	movlw	125
  1640  0004E6                     u5837:
  1641  0004E6  2EE8               	decfsz	wreg,f,c
  1642  0004E8  D7FE               	bra	u5837
  1643  0004EA  2FAB               	decfsz	??_main& (0+255),f,b
  1644  0004EC  D7FC               	bra	u5837
  1645                           
  1646                           ;main.c: 670:                 printf("%s", "WELCOME ");
  1647  0004EE  0EFB               	movlw	low STR_1
  1648  0004F0  0100               	movlb	0	; () banked
  1649  0004F2  6F82               	movwf	printf@fmt& (0+255),b
  1650  0004F4  0EFF               	movlw	high STR_1
  1651  0004F6  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1652  0004F8  0ED4               	movlw	low STR_22
  1653  0004FA  6F84               	movwf	(?_printf+2)& (0+255),b
  1654  0004FC  0EFF               	movlw	high STR_22
  1655  0004FE  6F85               	movwf	(?_printf+3)& (0+255),b
  1656  000500  ECC8  F013         	call	_printf	;wreg free
  1657                           
  1658                           ;main.c: 671:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1659  000504  0E2C               	movlw	low STR_23
  1660  000506  0100               	movlb	0	; () banked
  1661  000508  6F82               	movwf	printf@fmt& (0+255),b
  1662  00050A  0EFF               	movlw	high STR_23
  1663  00050C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1664  00050E  C0B3  F084         	movff	main@time+6,?_printf+2
  1665  000512  6B85               	clrf	(?_printf+3)& (0+255),b
  1666  000514  C0B2  F086         	movff	main@time+5,?_printf+4
  1667  000518  6B87               	clrf	(?_printf+5)& (0+255),b
  1668  00051A  C0B1  F088         	movff	main@time+4,?_printf+6
  1669  00051E  6B89               	clrf	(?_printf+7)& (0+255),b
  1670  000520  ECC8  F013         	call	_printf	;wreg free
  1671  000524  0EC0               	movlw	192
  1672  000526  EC51  F014         	call	_lcdInst
  1673                           
  1674                           ;main.c: 673:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1675  00052A  0E3B               	movlw	low STR_24
  1676  00052C  0100               	movlb	0	; () banked
  1677  00052E  6F82               	movwf	printf@fmt& (0+255),b
  1678  000530  0EFF               	movlw	high STR_24
  1679  000532  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1680  000534  C0AF  F084         	movff	main@time+2,?_printf+2
  1681  000538  6B85               	clrf	(?_printf+3)& (0+255),b
  1682  00053A  C0AE  F086         	movff	main@time+1,?_printf+4
  1683  00053E  6B87               	clrf	(?_printf+5)& (0+255),b
  1684  000540  C0AD  F088         	movff	main@time,?_printf+6
  1685  000544  6B89               	clrf	(?_printf+7)& (0+255),b
  1686  000546  ECC8  F013         	call	_printf	;wreg free
  1687  00054A  0E90               	movlw	144
  1688  00054C  EC51  F014         	call	_lcdInst
  1689                           
  1690                           ;main.c: 675:                 printf("%s","(1) START");
  1691  000550  0EFB               	movlw	low STR_1
  1692  000552  0100               	movlb	0	; () banked
  1693  000554  6F82               	movwf	printf@fmt& (0+255),b
  1694  000556  0EFF               	movlw	high STR_1
  1695  000558  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1696  00055A  0ECA               	movlw	low STR_26
  1697  00055C  6F84               	movwf	(?_printf+2)& (0+255),b
  1698  00055E  0EFF               	movlw	high STR_26
  1699  000560  6F85               	movwf	(?_printf+3)& (0+255),b
  1700  000562  ECC8  F013         	call	_printf	;wreg free
  1701  000566  0ED0               	movlw	208
  1702  000568  EC51  F014         	call	_lcdInst
  1703                           
  1704                           ;main.c: 677:                 printf("%s","(2) VIEW LOGS");
  1705  00056C  0EFB               	movlw	low STR_1
  1706  00056E  0100               	movlb	0	; () banked
  1707  000570  6F82               	movwf	printf@fmt& (0+255),b
  1708  000572  0EFF               	movlw	high STR_1
  1709  000574  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1710  000576  0E66               	movlw	low STR_28
  1711  000578  6F84               	movwf	(?_printf+2)& (0+255),b
  1712  00057A  0EFF               	movlw	high STR_28
  1713  00057C  6F85               	movwf	(?_printf+3)& (0+255),b
  1714  00057E  ECC8  F013         	call	_printf	;wreg free
  1715                           
  1716                           ;main.c: 678:                 break;
  1717  000582  D0E0               	goto	l6013
  1718  000584                     l5943:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;main.c: 681:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1722  000584  0E80               	movlw	128
  1723  000586  EC51  F014         	call	_lcdInst
  1724  00058A  0E07               	movlw	7
  1725  00058C  0100               	movlb	0	; () banked
  1726  00058E  6FAB               	movwf	??_main& (0+255),b
  1727  000590  0E7D               	movlw	125
  1728  000592                     u5847:
  1729  000592  2EE8               	decfsz	wreg,f,c
  1730  000594  D7FE               	bra	u5847
  1731  000596  2FAB               	decfsz	??_main& (0+255),f,b
  1732  000598  D7FC               	bra	u5847
  1733                           
  1734                           ;main.c: 682:                 printf("%s", "OPERATION IN");
  1735  00059A  0EFB               	movlw	low STR_1
  1736  00059C  0100               	movlb	0	; () banked
  1737  00059E  6F82               	movwf	printf@fmt& (0+255),b
  1738  0005A0  0EFF               	movlw	high STR_1
  1739  0005A2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1740  0005A4  0E9C               	movlw	low STR_30
  1741  0005A6  6F84               	movwf	(?_printf+2)& (0+255),b
  1742  0005A8  0EFF               	movlw	high STR_30
  1743  0005AA  6F85               	movwf	(?_printf+3)& (0+255),b
  1744  0005AC  ECC8  F013         	call	_printf	;wreg free
  1745  0005B0  0EC0               	movlw	192
  1746  0005B2  EC51  F014         	call	_lcdInst
  1747                           
  1748                           ;main.c: 684:                 printf("%s","PROGRESS");
  1749  0005B6  0EFB               	movlw	low STR_1
  1750  0005B8  0100               	movlb	0	; () banked
  1751  0005BA  6F82               	movwf	printf@fmt& (0+255),b
  1752  0005BC  0EFF               	movlw	high STR_1
  1753  0005BE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1754  0005C0  0EE6               	movlw	low STR_32
  1755  0005C2  6F84               	movwf	(?_printf+2)& (0+255),b
  1756  0005C4  0EFF               	movlw	high STR_32
  1757  0005C6  6F85               	movwf	(?_printf+3)& (0+255),b
  1758  0005C8  ECC8  F013         	call	_printf	;wreg free
  1759                           
  1760                           ;main.c: 685:                 doOperation();
  1761  0005CC  EC28  F008         	call	_doOperation	;wreg free
  1762                           
  1763                           ;main.c: 686:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1764  0005D0  0E01               	movlw	1
  1765  0005D2  EC51  F014         	call	_lcdInst
  1766  0005D6  0E11               	movlw	17
  1767  0005D8  0100               	movlb	0	; () banked
  1768  0005DA  6FAB               	movwf	??_main& (0+255),b
  1769  0005DC  0E3A               	movlw	58
  1770  0005DE                     u5857:
  1771  0005DE  2EE8               	decfsz	wreg,f,c
  1772  0005E0  D7FE               	bra	u5857
  1773  0005E2  2FAB               	decfsz	??_main& (0+255),f,b
  1774  0005E4  D7FC               	bra	u5857
  1775  0005E6  F000               	nop	
  1776                           
  1777                           ;main.c: 687:                 currentRobotState = operationComplete;
  1778  0005E8  0E02               	movlw	2
  1779  0005EA  D091               	goto	L1
  1780  0005EC                     l5961:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 693:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1784  0005EC  0E80               	movlw	128
  1785  0005EE  EC51  F014         	call	_lcdInst
  1786  0005F2  0E07               	movlw	7
  1787  0005F4  0100               	movlb	0	; () banked
  1788  0005F6  6FAB               	movwf	??_main& (0+255),b
  1789  0005F8  0E7D               	movlw	125
  1790  0005FA                     u5867:
  1791  0005FA  2EE8               	decfsz	wreg,f,c
  1792  0005FC  D7FE               	bra	u5867
  1793  0005FE  2FAB               	decfsz	??_main& (0+255),f,b
  1794  000600  D7FC               	bra	u5867
  1795                           
  1796                           ;main.c: 694:                 printf("%s", "OP. COMPLETE");
  1797  000602  0EFB               	movlw	low STR_1
  1798  000604  0100               	movlb	0	; () banked
  1799  000606  6F82               	movwf	printf@fmt& (0+255),b
  1800  000608  0EFF               	movlw	high STR_1
  1801  00060A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1802  00060C  0E82               	movlw	low STR_34
  1803  00060E  6F84               	movwf	(?_printf+2)& (0+255),b
  1804  000610  0EFF               	movlw	high STR_34
  1805  000612  6F85               	movwf	(?_printf+3)& (0+255),b
  1806  000614  ECC8  F013         	call	_printf	;wreg free
  1807  000618  0EC0               	movlw	192
  1808  00061A  EC51  F014         	call	_lcdInst
  1809                           
  1810                           ;main.c: 696:                 printf("%s","(1) VIEW LOG");
  1811  00061E  0EFB               	movlw	low STR_1
  1812  000620  0100               	movlb	0	; () banked
  1813  000622  6F82               	movwf	printf@fmt& (0+255),b
  1814  000624  0EFF               	movlw	high STR_1
  1815  000626  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1816  000628  0E8F               	movlw	low STR_36
  1817  00062A  6F84               	movwf	(?_printf+2)& (0+255),b
  1818  00062C  0EFF               	movlw	high STR_36
  1819  00062E  6F85               	movwf	(?_printf+3)& (0+255),b
  1820  000630  ECC8  F013         	call	_printf	;wreg free
  1821  000634  0E90               	movlw	144
  1822  000636  EC51  F014         	call	_lcdInst
  1823                           
  1824                           ;main.c: 698:                 printf("%s","(2) QUIT DO NOT");
  1825  00063A  0EFB               	movlw	low STR_1
  1826  00063C  0100               	movlb	0	; () banked
  1827  00063E  6F82               	movwf	printf@fmt& (0+255),b
  1828  000640  0EFF               	movlw	high STR_1
  1829  000642  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1830  000644  0E0D               	movlw	low STR_38
  1831  000646  6F84               	movwf	(?_printf+2)& (0+255),b
  1832  000648  0EFF               	movlw	high STR_38
  1833  00064A  6F85               	movwf	(?_printf+3)& (0+255),b
  1834  00064C  ECC8  F013         	call	_printf	;wreg free
  1835  000650  0ED0               	movlw	208
  1836  000652  EC51  F014         	call	_lcdInst
  1837                           
  1838                           ;main.c: 700:                 printf("%s","SAVE LOG");
  1839  000656  0EFB               	movlw	low STR_1
  1840  000658  0100               	movlb	0	; () banked
  1841  00065A  6F82               	movwf	printf@fmt& (0+255),b
  1842  00065C  0EFF               	movlw	high STR_1
  1843  00065E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1844  000660  0EDD               	movlw	low STR_40
  1845  000662  6F84               	movwf	(?_printf+2)& (0+255),b
  1846  000664  0EFF               	movlw	high STR_40
  1847  000666  6F85               	movwf	(?_printf+3)& (0+255),b
  1848  000668  ECC8  F013         	call	_printf	;wreg free
  1849                           
  1850                           ;main.c: 701:                 currentLogState = justRan;
  1851  00066C  0E00               	movlw	0
  1852  00066E  0100               	movlb	0	; () banked
  1853  000670  6FBA               	movwf	main@currentLogState& (0+255),b
  1854                           
  1855                           ;main.c: 702:                 break;
  1856  000672  D068               	goto	l6013
  1857  000674                     l5981:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;main.c: 705:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1861  000674  0E80               	movlw	128
  1862  000676  EC51  F014         	call	_lcdInst
  1863  00067A  0E07               	movlw	7
  1864  00067C  0100               	movlb	0	; () banked
  1865  00067E  6FAB               	movwf	??_main& (0+255),b
  1866  000680  0E7D               	movlw	125
  1867  000682                     u5877:
  1868  000682  2EE8               	decfsz	wreg,f,c
  1869  000684  D7FE               	bra	u5877
  1870  000686  2FAB               	decfsz	??_main& (0+255),f,b
  1871  000688  D7FC               	bra	u5877
  1872                           
  1873                           ;main.c: 706:                 printf("%s", "SELECT LOG");
  1874  00068A  0EFB               	movlw	low STR_1
  1875  00068C  0100               	movlb	0	; () banked
  1876  00068E  6F82               	movwf	printf@fmt& (0+255),b
  1877  000690  0EFF               	movlw	high STR_1
  1878  000692  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1879  000694  0EB5               	movlw	low STR_42
  1880  000696  6F84               	movwf	(?_printf+2)& (0+255),b
  1881  000698  0EFF               	movlw	high STR_42
  1882  00069A  6F85               	movwf	(?_printf+3)& (0+255),b
  1883  00069C  ECC8  F013         	call	_printf	;wreg free
  1884  0006A0  0EC0               	movlw	192
  1885  0006A2  EC51  F014         	call	_lcdInst
  1886                           
  1887                           ;main.c: 708:                 printf("%s","(1 IS OLDEST)");
  1888  0006A6  0EFB               	movlw	low STR_1
  1889  0006A8  0100               	movlb	0	; () banked
  1890  0006AA  6F82               	movwf	printf@fmt& (0+255),b
  1891  0006AC  0EFF               	movlw	high STR_1
  1892  0006AE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1893  0006B0  0E4A               	movlw	low STR_44
  1894  0006B2  6F84               	movwf	(?_printf+2)& (0+255),b
  1895  0006B4  0EFF               	movlw	high STR_44
  1896  0006B6  6F85               	movwf	(?_printf+3)& (0+255),b
  1897  0006B8  ECC8  F013         	call	_printf	;wreg free
  1898  0006BC  0E90               	movlw	144
  1899  0006BE  EC51  F014         	call	_lcdInst
  1900                           
  1901                           ;main.c: 710:                 printf("%s","(1) (2) (3) (4)");
  1902  0006C2  0EFB               	movlw	low STR_1
  1903  0006C4  0100               	movlb	0	; () banked
  1904  0006C6  6F82               	movwf	printf@fmt& (0+255),b
  1905  0006C8  0EFF               	movlw	high STR_1
  1906  0006CA  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1907  0006CC  0EDD               	movlw	low STR_46
  1908  0006CE  6F84               	movwf	(?_printf+2)& (0+255),b
  1909  0006D0  0EFE               	movlw	high STR_46
  1910  0006D2  6F85               	movwf	(?_printf+3)& (0+255),b
  1911  0006D4  ECC8  F013         	call	_printf	;wreg free
  1912                           
  1913                           ;main.c: 711:                 break;
  1914  0006D8  D035               	goto	l6013
  1915  0006DA                     l5995:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 713:                 if (currentLogState == justRan){
  1919  0006DA  51BA               	movf	main@currentLogState& (0+255),w,b
  1920  0006DC  A4D8               	btfss	status,2,c
  1921  0006DE  D005               	goto	l6001
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 714:                     replaceOldLog();
  1925  0006E0  EC68  F014         	call	_replaceOldLog	;wreg free
  1926                           
  1927                           ;main.c: 715:                     currentLogState = four;
  1928  0006E4  0E04               	movlw	4
  1929  0006E6  0100               	movlb	0	; () banked
  1930  0006E8  6FBA               	movwf	main@currentLogState& (0+255),b
  1931  0006EA                     l6001:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;main.c: 717:                 doDisplayLog(currentLogState);
  1935  0006EA  C0BA  F08E         	movff	main@currentLogState,doDisplayLog@currentLogState
  1936  0006EE  6B8F               	clrf	(doDisplayLog@currentLogState+1)& (0+255),b
  1937  0006F0  EC5C  F00B         	call	_doDisplayLog	;wreg free
  1938                           
  1939                           ;main.c: 718:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1940  0006F4  0E01               	movlw	1
  1941  0006F6  EC51  F014         	call	_lcdInst
  1942  0006FA  0E11               	movlw	17
  1943  0006FC  0100               	movlb	0	; () banked
  1944  0006FE  6FAB               	movwf	??_main& (0+255),b
  1945  000700  0E3A               	movlw	58
  1946  000702                     u5887:
  1947  000702  2EE8               	decfsz	wreg,f,c
  1948  000704  D7FE               	bra	u5887
  1949  000706  2FAB               	decfsz	??_main& (0+255),f,b
  1950  000708  D7FC               	bra	u5887
  1951  00070A  F000               	nop	
  1952                           
  1953                           ;main.c: 719:                 currentRobotState = standby;
  1954  00070C  0E00               	movlw	0
  1955  00070E                     L1:
  1956  00070E  0100               	movlb	0	; () banked
  1957  000710  6FBB               	movwf	main@currentRobotState& (0+255),b
  1958                           
  1959                           ;main.c: 720:                 break;
  1960  000712  D018               	goto	l6013
  1961  000714                     l6011:
  1962  000714  0100               	movlb	0	; () banked
  1963  000716  51BB               	movf	main@currentRobotState& (0+255),w,b
  1964  000718  6FAB               	movwf	??_main& (0+255),b
  1965  00071A  6BAC               	clrf	(??_main+1)& (0+255),b
  1966                           
  1967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 1, Range of values is 0 to 0
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            4     3 (average)
  1973                           ;	Chosen strategy is simple_byte
  1974  00071C  51AC               	movf	(??_main+1)& (0+255),w,b
  1975  00071E  0A00               	xorlw	0	; case 0
  1976  000720  A4D8               	btfss	status,2,c
  1977  000722  D010               	goto	l6013
  1978                           
  1979                           ; BSR set to: 0
  1980                           ; Switch size 1, requested type "simple"
  1981                           ; Number of cases is 5, Range of values is 0 to 4
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte           16     9 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986  000724  51AB               	movf	??_main& (0+255),w,b
  1987  000726  0A00               	xorlw	0	; case 0
  1988  000728  B4D8               	btfsc	status,2,c
  1989  00072A  D6D6               	goto	l5923
  1990  00072C  0A01               	xorlw	1	; case 1
  1991  00072E  B4D8               	btfsc	status,2,c
  1992  000730  D729               	goto	l5943
  1993  000732  0A03               	xorlw	3	; case 2
  1994  000734  B4D8               	btfsc	status,2,c
  1995  000736  D75A               	goto	l5961
  1996  000738  0A01               	xorlw	1	; case 3
  1997  00073A  B4D8               	btfsc	status,2,c
  1998  00073C  D79B               	goto	l5981
  1999  00073E  0A07               	xorlw	7	; case 4
  2000  000740  B4D8               	btfsc	status,2,c
  2001  000742  D7CB               	goto	l5995
  2002  000744                     l6013:
  2003                           
  2004                           ;main.c: 724:         if(keyPressed){
  2005  000744  0100               	movlb	0	; () banked
  2006  000746  51CA               	movf	_keyPressed& (0+255),w,b	;volatile
  2007  000748  B4D8               	btfsc	status,2,c
  2008  00074A  D064               	goto	l274
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 727:             keyPressed = 0;
  2012  00074C  0E00               	movlw	0
  2013  00074E  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 730:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2017  000750  3881               	swapf	3969,w,c	;volatile
  2018  000752  0B0F               	andlw	15
  2019  000754  0B0F               	andlw	15
  2020  000756  6FB8               	movwf	main@keypress& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 731:             char keyValue = keys[keypress];
  2024  000758  0EA9               	movlw	low _keys
  2025  00075A  25B8               	addwf	main@keypress& (0+255),w,b
  2026  00075C  6EF6               	movwf	tblptrl,c
  2027  00075E  6AF7               	clrf	tblptrh,c
  2028  000760  0EFE               	movlw	high _keys
  2029  000762  22F7               	addwfc	tblptrh,f,c
  2030  000764                     	if	0	;There are less than 3 active tblptr bytes
  2031  000764                     	endif
  2032  000764  0008               	tblrd		*
  2033  000766  CFF5 F0BC          	movff	tablat,main@keyValue
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 732:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2037  00076A  0E01               	movlw	1
  2038  00076C  EC51  F014         	call	_lcdInst
  2039  000770  0E11               	movlw	17
  2040  000772  0100               	movlb	0	; () banked
  2041  000774  6FAB               	movwf	??_main& (0+255),b
  2042  000776  0E3A               	movlw	58
  2043  000778                     u5897:
  2044  000778  2EE8               	decfsz	wreg,f,c
  2045  00077A  D7FE               	bra	u5897
  2046  00077C  2FAB               	decfsz	??_main& (0+255),f,b
  2047  00077E  D7FC               	bra	u5897
  2048  000780  F000               	nop	
  2049                           
  2050                           ;main.c: 733:             switch (currentRobotState){
  2051  000782  D032               	goto	l6061
  2052  000784                     l6025:
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 735:                     if (keyValue == '1'){
  2056  000784  0E31               	movlw	49
  2057  000786  19BC               	xorwf	main@keyValue& (0+255),w,b
  2058  000788  A4D8               	btfss	status,2,c
  2059  00078A  D002               	goto	l6029
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;main.c: 736:                         currentRobotState = operation;
  2063  00078C  0E01               	movlw	1
  2064  00078E  D011               	goto	L4
  2065  000790                     l6029:
  2066                           
  2067                           ; BSR set to: 0
  2068  000790  0E32               	movlw	50
  2069  000792  19BC               	xorwf	main@keyValue& (0+255),w,b
  2070  000794  A4D8               	btfss	status,2,c
  2071  000796  D03E               	goto	l274
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 738:                         currentRobotState = selectLog;
  2075  000798  0E03               	movlw	3
  2076  00079A  D00B               	goto	L4
  2077  00079C                     l6033:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 744:                     if (keyValue == '1'){
  2081  00079C  0E31               	movlw	49
  2082  00079E  19BC               	xorwf	main@keyValue& (0+255),w,b
  2083  0007A0  A4D8               	btfss	status,2,c
  2084  0007A2  D002               	goto	l6037
  2085  0007A4                     u5750:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 745:                         currentRobotState = displayLog;
  2089  0007A4  0E04               	movlw	4
  2090  0007A6  D005               	goto	L4
  2091  0007A8                     l6037:
  2092                           
  2093                           ; BSR set to: 0
  2094  0007A8  0E32               	movlw	50
  2095  0007AA  19BC               	xorwf	main@keyValue& (0+255),w,b
  2096  0007AC  A4D8               	btfss	status,2,c
  2097  0007AE  D032               	goto	l274
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;main.c: 747:                         currentRobotState = standby;
  2101  0007B0  0E00               	movlw	0
  2102  0007B2                     L4:
  2103  0007B2  6FBB               	movwf	main@currentRobotState& (0+255),b
  2104  0007B4  D02F               	goto	l274
  2105  0007B6                     l6041:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 751:                     if (keyValue == '1'){
  2109  0007B6  0E31               	movlw	49
  2110  0007B8  19BC               	xorwf	main@keyValue& (0+255),w,b
  2111  0007BA  A4D8               	btfss	status,2,c
  2112  0007BC  D002               	goto	l6045
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;main.c: 752:                         currentLogState = one;
  2116  0007BE  0E01               	movlw	1
  2117  0007C0  D011               	goto	L7
  2118  0007C2                     l6045:
  2119                           
  2120                           ; BSR set to: 0
  2121  0007C2  0E32               	movlw	50
  2122  0007C4  19BC               	xorwf	main@keyValue& (0+255),w,b
  2123  0007C6  A4D8               	btfss	status,2,c
  2124  0007C8  D002               	goto	l6049
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;main.c: 754:                         currentLogState = two;
  2128  0007CA  0E02               	movlw	2
  2129  0007CC  D00B               	goto	L7
  2130  0007CE                     l6049:
  2131                           
  2132                           ; BSR set to: 0
  2133  0007CE  0E33               	movlw	51
  2134  0007D0  19BC               	xorwf	main@keyValue& (0+255),w,b
  2135  0007D2  A4D8               	btfss	status,2,c
  2136  0007D4  D002               	goto	l6053
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 756:                         currentLogState = three;
  2140  0007D6  0E03               	movlw	3
  2141  0007D8  D005               	goto	L7
  2142  0007DA                     l6053:
  2143                           
  2144                           ; BSR set to: 0
  2145  0007DA  0E34               	movlw	52
  2146  0007DC  19BC               	xorwf	main@keyValue& (0+255),w,b
  2147  0007DE  A4D8               	btfss	status,2,c
  2148  0007E0  D019               	goto	l274
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 758:                         currentLogState = '4';
  2152  0007E2  0E34               	movlw	52
  2153  0007E4                     L7:
  2154  0007E4  6FBA               	movwf	main@currentLogState& (0+255),b
  2155                           
  2156                           ;main.c: 759:                     } else {
  2157  0007E6  D7DE               	goto	u5750
  2158  0007E8                     l6061:
  2159  0007E8  0100               	movlb	0	; () banked
  2160  0007EA  51BB               	movf	main@currentRobotState& (0+255),w,b
  2161  0007EC  6FAB               	movwf	??_main& (0+255),b
  2162  0007EE  6BAC               	clrf	(??_main+1)& (0+255),b
  2163                           
  2164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 1, Range of values is 0 to 0
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte            4     3 (average)
  2170                           ;	Chosen strategy is simple_byte
  2171  0007F0  51AC               	movf	(??_main+1)& (0+255),w,b
  2172  0007F2  0A00               	xorlw	0	; case 0
  2173  0007F4  A4D8               	btfss	status,2,c
  2174  0007F6  D00E               	goto	l274
  2175                           
  2176                           ; BSR set to: 0
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 5, Range of values is 0 to 4
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte           16     9 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183  0007F8  51AB               	movf	??_main& (0+255),w,b
  2184  0007FA  0A00               	xorlw	0	; case 0
  2185  0007FC  B4D8               	btfsc	status,2,c
  2186  0007FE  D7C2               	goto	l6025
  2187  000800  0A01               	xorlw	1	; case 1
  2188  000802  B4D8               	btfsc	status,2,c
  2189  000804  D007               	goto	l274
  2190  000806  0A03               	xorlw	3	; case 2
  2191  000808  B4D8               	btfsc	status,2,c
  2192  00080A  D7C8               	goto	l6033
  2193  00080C  0A01               	xorlw	1	; case 3
  2194  00080E  B4D8               	btfsc	status,2,c
  2195  000810  D7D2               	goto	l6041
  2196  000812  0A07               	xorlw	7	; case 4
  2197  000814                     l274:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main.c: 779:         tick++;
  2201                           
  2202                           ; BSR set to: 0
  2203  000814  0E01               	movlw	1
  2204  000816  27B4               	addwf	main@tick& (0+255),f,b
  2205  000818  0E00               	movlw	0
  2206  00081A  23B5               	addwfc	(main@tick+1)& (0+255),f,b
  2207  00081C  23B6               	addwfc	(main@tick+2)& (0+255),f,b
  2208  00081E  23B7               	addwfc	(main@tick+3)& (0+255),f,b
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;main.c: 780:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2212  000820  0E04               	movlw	4
  2213  000822  0100               	movlb	0	; () banked
  2214  000824  6FAB               	movwf	??_main& (0+255),b
  2215  000826  0E3D               	movlw	61
  2216  000828                     u5907:
  2217  000828  2EE8               	decfsz	wreg,f,c
  2218  00082A  D7FE               	bra	u5907
  2219  00082C  2FAB               	decfsz	??_main& (0+255),f,b
  2220  00082E  D7FC               	bra	u5907
  2221  000830  D000               	nop2	
  2222  000832  D608               	goto	l5905
  2223  000834                     __end_of_main:
  2224                           	opt callstack 0
  2225                           
  2226 ;; *************** function _robotInit *****************
  2227 ;; Defined at:
  2228 ;;		line 580 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    7
  2249 ;; This function calls:
  2250 ;;		_EncoderInit
  2251 ;;		_I2C_Master_Init
  2252 ;;		_initLCD
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text1
  2259  002532                     __ptext1:
  2260                           	opt callstack 0
  2261  002532                     _robotInit:
  2262                           	opt callstack 23
  2263                           
  2264                           ;main.c: 582:     EncoderInit();
  2265                           
  2266                           ;incstack = 0
  2267  002532  EC23  F014         	call	_EncoderInit	;wreg free
  2268                           
  2269                           ;main.c: 587:     LATD = 0x00;
  2270  002536  0E00               	movlw	0
  2271  002538  6E8C               	movwf	3980,c	;volatile
  2272                           
  2273                           ;main.c: 588:     TRISD = 0x00;
  2274  00253A  0E00               	movlw	0
  2275  00253C  6E95               	movwf	3989,c	;volatile
  2276                           
  2277                           ;main.c: 591:     LATB = 0x00;
  2278  00253E  0E00               	movlw	0
  2279  002540  6E8A               	movwf	3978,c	;volatile
  2280                           
  2281                           ;main.c: 592:     TRISBbits.TRISB1 = 1;
  2282  002542  8293               	bsf	3987,1,c	;volatile
  2283                           
  2284                           ;main.c: 593:     TRISBbits.TRISB4 = 1;
  2285  002544  8893               	bsf	3987,4,c	;volatile
  2286                           
  2287                           ;main.c: 594:     TRISBbits.TRISB5 = 1;
  2288  002546  8A93               	bsf	3987,5,c	;volatile
  2289                           
  2290                           ;main.c: 595:     TRISBbits.TRISB6 = 1;
  2291  002548  8C93               	bsf	3987,6,c	;volatile
  2292                           
  2293                           ;main.c: 596:     TRISBbits.TRISB7 = 1;
  2294  00254A  8E93               	bsf	3987,7,c	;volatile
  2295                           
  2296                           ;main.c: 599:     TRISAbits.TRISA4 = 0;
  2297  00254C  9892               	bcf	3986,4,c	;volatile
  2298                           
  2299                           ;main.c: 600:     LATAbits.LATA4 = 0;
  2300  00254E  9889               	bcf	3977,4,c	;volatile
  2301                           
  2302                           ;main.c: 603:     I2C_Master_Init(100000);
  2303  002550  0EA0               	movlw	160
  2304  002552  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2305  002554  0E86               	movlw	134
  2306  002556  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2307  002558  0E01               	movlw	1
  2308  00255A  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2309  00255C  0E00               	movlw	0
  2310  00255E  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2311  002560  ECCE  F011         	call	_I2C_Master_Init	;wreg free
  2312                           
  2313                           ;main.c: 610:     ADCON1 = 0b00001111;
  2314  002564  0E0F               	movlw	15
  2315  002566  6EC1               	movwf	4033,c	;volatile
  2316                           
  2317                           ;main.c: 613:     INT1IE = 1;
  2318  002568  86F0               	bsf	4080,3,c	;volatile
  2319                           
  2320                           ;main.c: 616:     initLCD();
  2321  00256A  EC66  F011         	call	_initLCD	;wreg free
  2322                           
  2323                           ;main.c: 619:     (INTCONbits.GIE = 1);
  2324  00256E  8EF2               	bsf	4082,7,c	;volatile
  2325  002570  0012               	return		;funcret
  2326  002572                     __end_of_robotInit:
  2327                           	opt callstack 0
  2328                           
  2329 ;; *************** function _initLCD *****************
  2330 ;; Defined at:
  2331 ;;		line 69 in file "lcd.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    6
  2352 ;; This function calls:
  2353 ;;		_lcdInst
  2354 ;;		_send_byte
  2355 ;;		_send_nibble
  2356 ;; This function is called by:
  2357 ;;		_robotInit
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text2
  2362  0022CC                     __ptext2:
  2363                           	opt callstack 0
  2364  0022CC                     _initLCD:
  2365                           	opt callstack 23
  2366                           
  2367                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2368                           
  2369                           ;incstack = 0
  2370  0022CC  0E31               	movlw	49
  2371  0022CE  6E0A               	movwf	??_initLCD& (0+255),c
  2372  0022D0  0EB2               	movlw	178
  2373  0022D2                     u5917:
  2374  0022D2  2EE8               	decfsz	wreg,f,c
  2375  0022D4  D7FE               	bra	u5917
  2376  0022D6  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2377  0022D8  D7FC               	bra	u5917
  2378  0022DA  D000               	nop2	
  2379                           
  2380                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2381  0022DC  948C               	bcf	3980,2,c	;volatile
  2382                           
  2383                           ;lcd.c: 74:     send_nibble(0b0011);
  2384  0022DE  0E03               	movlw	3
  2385  0022E0  EC2E  F014         	call	_send_nibble
  2386                           
  2387                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2388  0022E4  0E11               	movlw	17
  2389  0022E6  6E0A               	movwf	??_initLCD& (0+255),c
  2390  0022E8  0E3A               	movlw	58
  2391  0022EA                     u5927:
  2392  0022EA  2EE8               	decfsz	wreg,f,c
  2393  0022EC  D7FE               	bra	u5927
  2394  0022EE  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2395  0022F0  D7FC               	bra	u5927
  2396  0022F2  D000               	nop2	
  2397                           
  2398                           ;lcd.c: 76:     send_nibble(0b0011);
  2399  0022F4  0E03               	movlw	3
  2400  0022F6  EC2E  F014         	call	_send_nibble
  2401                           
  2402                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2403  0022FA  0E7D               	movlw	125
  2404  0022FC                     u5937:
  2405  0022FC  2EE8               	decfsz	wreg,f,c
  2406  0022FE  D7FE               	bra	u5937
  2407                           
  2408                           ;lcd.c: 78:     send_byte(0b00110010);
  2409  002300  0E32               	movlw	50
  2410  002302  EC42  F014         	call	_send_byte
  2411                           
  2412                           ;lcd.c: 80:     send_byte(0b00101000);
  2413  002306  0E28               	movlw	40
  2414  002308  EC42  F014         	call	_send_byte
  2415                           
  2416                           ;lcd.c: 81:     send_byte(0b00001000);
  2417  00230C  0E08               	movlw	8
  2418  00230E  EC42  F014         	call	_send_byte
  2419                           
  2420                           ;lcd.c: 82:     send_byte(0b00000001);
  2421  002312  0E01               	movlw	1
  2422  002314  EC42  F014         	call	_send_byte
  2423                           
  2424                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2425  002318  0E11               	movlw	17
  2426  00231A  6E0A               	movwf	??_initLCD& (0+255),c
  2427  00231C  0E3A               	movlw	58
  2428  00231E                     u5947:
  2429  00231E  2EE8               	decfsz	wreg,f,c
  2430  002320  D7FE               	bra	u5947
  2431  002322  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2432  002324  D7FC               	bra	u5947
  2433  002326  D000               	nop2	
  2434                           
  2435                           ;lcd.c: 84:     send_byte(0b00000110);
  2436  002328  0E06               	movlw	6
  2437  00232A  EC42  F014         	call	_send_byte
  2438                           
  2439                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2440  00232E  0E0C               	movlw	12
  2441  002330  EC51  F014         	call	_lcdInst
  2442  002334  0012               	return		;funcret
  2443  002336                     __end_of_initLCD:
  2444                           	opt callstack 0
  2445                           
  2446 ;; *************** function _I2C_Master_Init *****************
  2447 ;; Defined at:
  2448 ;;		line 32 in file "I2C.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;Total ram usage:        8 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    3
  2469 ;; This function calls:
  2470 ;;		___lldiv
  2471 ;; This function is called by:
  2472 ;;		_robotInit
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text3
  2477  00239C                     __ptext3:
  2478                           	opt callstack 0
  2479  00239C                     _I2C_Master_Init:
  2480                           	opt callstack 26
  2481                           
  2482                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2483                           
  2484                           ;incstack = 0
  2485  00239C  9AC6               	bcf	4038,5,c	;volatile
  2486                           
  2487                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2488  00239E  8694               	bsf	3988,3,c	;volatile
  2489                           
  2490                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2491  0023A0  8894               	bsf	3988,4,c	;volatile
  2492                           
  2493                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2494  0023A2  0E80               	movlw	128
  2495  0023A4  6E06               	movwf	___lldiv@dividend,c
  2496  0023A6  0E96               	movlw	150
  2497  0023A8  6E07               	movwf	___lldiv@dividend+1,c
  2498  0023AA  0E98               	movlw	152
  2499  0023AC  6E08               	movwf	___lldiv@dividend+2,c
  2500  0023AE  0E00               	movlw	0
  2501  0023B0  6E09               	movwf	___lldiv@dividend+3,c
  2502  0023B2  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2503  0023B6  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2504  0023BA  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2505  0023BE  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2506  0023C2  0E02               	movlw	2
  2507  0023C4                     u4115:
  2508  0023C4  90D8               	bcf	status,0,c
  2509  0023C6  3617               	rlcf	??_I2C_Master_Init,f,c
  2510  0023C8  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2511  0023CA  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2512  0023CC  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2513  0023CE  2EE8               	decfsz	wreg,f,c
  2514  0023D0  D7F9               	goto	u4115
  2515  0023D2  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2516  0023D6  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2517  0023DA  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2518  0023DE  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2519  0023E2  ECB0  F010         	call	___lldiv	;wreg free
  2520  0023E6  0406               	decf	?___lldiv,w,c
  2521  0023E8  6EC8               	movwf	4040,c	;volatile
  2522                           
  2523                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2524  0023EA  0E80               	movlw	128
  2525  0023EC  6EC7               	movwf	4039,c	;volatile
  2526                           
  2527                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2528  0023EE  0E28               	movlw	40
  2529  0023F0  6EC6               	movwf	4038,c	;volatile
  2530                           
  2531                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2532  0023F2  0E00               	movlw	0
  2533  0023F4  6EC5               	movwf	4037,c	;volatile
  2534  0023F6  0012               	return		;funcret
  2535  0023F8                     __end_of_I2C_Master_Init:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function ___lldiv *****************
  2539 ;; Defined at:
  2540 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  dividend        4    5[COMRAM] unsigned long 
  2543 ;;  divisor         4    9[COMRAM] unsigned long 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  quotient        4   13[COMRAM] unsigned long 
  2546 ;;  counter         1   17[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  4    5[COMRAM] unsigned long 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:       13 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_I2C_Master_Init
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text4
  2571  002160                     __ptext4:
  2572                           	opt callstack 0
  2573  002160                     ___lldiv:
  2574                           	opt callstack 26
  2575                           
  2576                           ;incstack = 0
  2577  002160  0E00               	movlw	0
  2578  002162  6E0E               	movwf	___lldiv@quotient,c
  2579  002164  0E00               	movlw	0
  2580  002166  6E0F               	movwf	___lldiv@quotient+1,c
  2581  002168  0E00               	movlw	0
  2582  00216A  6E10               	movwf	___lldiv@quotient+2,c
  2583  00216C  0E00               	movlw	0
  2584  00216E  6E11               	movwf	___lldiv@quotient+3,c
  2585  002170  500A               	movf	___lldiv@divisor,w,c
  2586  002172  100B               	iorwf	___lldiv@divisor+1,w,c
  2587  002174  100C               	iorwf	___lldiv@divisor+2,w,c
  2588  002176  100D               	iorwf	___lldiv@divisor+3,w,c
  2589  002178  B4D8               	btfsc	status,2,c
  2590  00217A  D02A               	goto	l581
  2591  00217C  0E01               	movlw	1
  2592  00217E  6E12               	movwf	___lldiv@counter,c
  2593  002180  D006               	goto	l4199
  2594  002182                     l4197:
  2595  002182  90D8               	bcf	status,0,c
  2596  002184  360A               	rlcf	___lldiv@divisor,f,c
  2597  002186  360B               	rlcf	___lldiv@divisor+1,f,c
  2598  002188  360C               	rlcf	___lldiv@divisor+2,f,c
  2599  00218A  360D               	rlcf	___lldiv@divisor+3,f,c
  2600  00218C  2A12               	incf	___lldiv@counter,f,c
  2601  00218E                     l4199:
  2602  00218E  AE0D               	btfss	___lldiv@divisor+3,7,c
  2603  002190  D7F8               	goto	l4197
  2604  002192                     u4070:
  2605  002192  90D8               	bcf	status,0,c
  2606  002194  360E               	rlcf	___lldiv@quotient,f,c
  2607  002196  360F               	rlcf	___lldiv@quotient+1,f,c
  2608  002198  3610               	rlcf	___lldiv@quotient+2,f,c
  2609  00219A  3611               	rlcf	___lldiv@quotient+3,f,c
  2610  00219C  500A               	movf	___lldiv@divisor,w,c
  2611  00219E  5C06               	subwf	___lldiv@dividend,w,c
  2612  0021A0  500B               	movf	___lldiv@divisor+1,w,c
  2613  0021A2  5807               	subwfb	___lldiv@dividend+1,w,c
  2614  0021A4  500C               	movf	___lldiv@divisor+2,w,c
  2615  0021A6  5808               	subwfb	___lldiv@dividend+2,w,c
  2616  0021A8  500D               	movf	___lldiv@divisor+3,w,c
  2617  0021AA  5809               	subwfb	___lldiv@dividend+3,w,c
  2618  0021AC  A0D8               	btfss	status,0,c
  2619  0021AE  D009               	goto	l4209
  2620  0021B0  500A               	movf	___lldiv@divisor,w,c
  2621  0021B2  5E06               	subwf	___lldiv@dividend,f,c
  2622  0021B4  500B               	movf	___lldiv@divisor+1,w,c
  2623  0021B6  5A07               	subwfb	___lldiv@dividend+1,f,c
  2624  0021B8  500C               	movf	___lldiv@divisor+2,w,c
  2625  0021BA  5A08               	subwfb	___lldiv@dividend+2,f,c
  2626  0021BC  500D               	movf	___lldiv@divisor+3,w,c
  2627  0021BE  5A09               	subwfb	___lldiv@dividend+3,f,c
  2628  0021C0  800E               	bsf	___lldiv@quotient,0,c
  2629  0021C2                     l4209:
  2630  0021C2  90D8               	bcf	status,0,c
  2631  0021C4  320D               	rrcf	___lldiv@divisor+3,f,c
  2632  0021C6  320C               	rrcf	___lldiv@divisor+2,f,c
  2633  0021C8  320B               	rrcf	___lldiv@divisor+1,f,c
  2634  0021CA  320A               	rrcf	___lldiv@divisor,f,c
  2635  0021CC  2E12               	decfsz	___lldiv@counter,f,c
  2636  0021CE  D7E1               	goto	u4070
  2637  0021D0                     l581:
  2638  0021D0  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  2639  0021D4  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  2640  0021D8  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  2641  0021DC  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  2642  0021E0  0012               	return		;funcret
  2643  0021E2                     __end_of___lldiv:
  2644                           	opt callstack 0
  2645                           
  2646 ;; *************** function _EncoderInit *****************
  2647 ;; Defined at:
  2648 ;;		line 126 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_robotInit
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text5
  2677  002846                     __ptext5:
  2678                           	opt callstack 0
  2679  002846                     _EncoderInit:
  2680                           	opt callstack 27
  2681                           
  2682                           ;main.c: 127:   motorBDirection = 1;
  2683                           
  2684                           ;incstack = 0
  2685  002846  0E01               	movlw	1
  2686  002848  6E78               	movwf	_motorBDirection,c	;volatile
  2687                           
  2688                           ;main.c: 128:   motorADirection = 1;
  2689  00284A  0E01               	movlw	1
  2690  00284C  0100               	movlb	0	; () banked
  2691  00284E  6FF2               	movwf	_motorADirection& (0+255),b	;volatile
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 131:   TRISEbits.TRISE2 = 1;
  2695  002850  8496               	bsf	3990,2,c	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 132:   TRISEbits.TRISE1 = 1;
  2699  002852  8296               	bsf	3990,1,c	;volatile
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 133:   TRISBbits.TRISB2 = 1;
  2703  002854  8493               	bsf	3987,2,c	;volatile
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;main.c: 134:   TRISBbits.TRISB0 = 1;
  2707  002856  8093               	bsf	3987,0,c	;volatile
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;main.c: 137:   INT2IE = 1;
  2711  002858  88F0               	bsf	4080,4,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714  00285A  0012               	return		;funcret
  2715  00285C                     __end_of_EncoderInit:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _replaceOldLog *****************
  2719 ;; Defined at:
  2720 ;;		line 551 in file "main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		None
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    2
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text6
  2749  0028D0                     __ptext6:
  2750                           	opt callstack 0
  2751  0028D0                     _replaceOldLog:
  2752                           	opt callstack 28
  2753                           
  2754                           ;main.c: 552:     return;
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;incstack = 0
  2758  0028D0  0012               	return		;funcret
  2759  0028D2                     __end_of_replaceOldLog:
  2760                           	opt callstack 0
  2761                           
  2762 ;; *************** function _doOperation *****************
  2763 ;; Defined at:
  2764 ;;		line 375 in file "main.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  tiresToDrop     2   39[BANK0 ] int 
  2769 ;;  secondsMeasu    2   36[BANK0 ] int 
  2770 ;;  timeInOperat    2   33[BANK0 ] int 
  2771 ;;  motorBSpeed     2   31[BANK0 ] int 
  2772 ;;  motorASpeed     2   29[BANK0 ] int 
  2773 ;;  rightRangeFi    2    0        int 
  2774 ;;  leftRangeFin    2    0        int 
  2775 ;;  currentAngle    2    0        int 
  2776 ;;  error           2    0        int 
  2777 ;;  errorScaleFa    2    0        int 
  2778 ;;  goalSpeed       2    0        int 
  2779 ;;  fourMetreEqu    2    0        int 
  2780 ;;  minimumSafeD    2    0        int 
  2781 ;;  topLaserStat    1   42[BANK0 ] _Bool 
  2782 ;;  currentOpera    1   41[BANK0 ] enum E3286
  2783 ;;  topLaserStat    1   38[BANK0 ] _Bool 
  2784 ;;  isDoneDrop      1   35[BANK0 ] _Bool 
  2785 ;;  send            1    0        _Bool 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;Total ram usage:       29 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:   13
  2802 ;; This function calls:
  2803 ;;		_I2C_Master_Start
  2804 ;;		_I2C_Master_Stop
  2805 ;;		_I2C_Master_Write
  2806 ;;		_TIMER_INIT
  2807 ;;		_init_motor_PWM
  2808 ;;		_lcdInst
  2809 ;;		_printf
  2810 ;;		_requestIsTireDropDone
  2811 ;;		_sendArduinoTireDropRequest
  2812 ;;		_setMotorSpeeds
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text7
  2819  001050                     __ptext7:
  2820                           	opt callstack 0
  2821  001050                     _doOperation:
  2822                           	opt callstack 17
  2823                           
  2824                           ;main.c: 381:     I2C_Master_Start();
  2825                           
  2826                           ;incstack = 0
  2827  001050  EC64  F014         	call	_I2C_Master_Start	;wreg free
  2828                           
  2829                           ;main.c: 382:     I2C_Master_Write(0b00010000);
  2830  001054  0E00               	movlw	0
  2831  001056  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2832  001058  0E10               	movlw	16
  2833  00105A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2834  00105C  EC57  F014         	call	_I2C_Master_Write	;wreg free
  2835                           
  2836                           ;main.c: 383:     I2C_Master_Stop();
  2837  001060  EC60  F014         	call	_I2C_Master_Stop	;wreg free
  2838                           
  2839                           ;main.c: 388:     TIMER_INIT();
  2840  001064  EC12  F014         	call	_TIMER_INIT	;wreg free
  2841                           
  2842                           ;main.c: 389:     secondsMeasured = 0;
  2843  001068  0E00               	movlw	0
  2844  00106A  0100               	movlb	0	; () banked
  2845  00106C  6FC2               	movwf	(_secondsMeasured+1)& (0+255),b	;volatile
  2846  00106E  0E00               	movlw	0
  2847  001070  6FC1               	movwf	_secondsMeasured& (0+255),b	;volatile
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;main.c: 392:  int motorASpeed = 100;
  2851                           
  2852                           ; BSR set to: 0
  2853  001072  0E00               	movlw	0
  2854  001074  6F9E               	movwf	(doOperation@motorASpeed+1)& (0+255),b
  2855  001076  0E64               	movlw	100
  2856  001078  6F9D               	movwf	doOperation@motorASpeed& (0+255),b
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;main.c: 393:  int motorBSpeed = 100;
  2860  00107A  0E00               	movlw	0
  2861  00107C  6FA0               	movwf	(doOperation@motorBSpeed+1)& (0+255),b
  2862  00107E  0E64               	movlw	100
  2863  001080  6F9F               	movwf	doOperation@motorBSpeed& (0+255),b
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;main.c: 398:  enum operationStates currentOperationState = moveForward;
  2867                           
  2868                           ; BSR set to: 0
  2869                           
  2870                           ; BSR set to: 0
  2871                           
  2872                           ; BSR set to: 0
  2873  001082  0E00               	movlw	0
  2874  001084  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;main.c: 401:  int tiresToDrop = 0;
  2878                           
  2879                           ; BSR set to: 0
  2880                           
  2881                           ; BSR set to: 0
  2882  001086  0E00               	movlw	0
  2883  001088  6FA8               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  2884  00108A  0E00               	movlw	0
  2885  00108C  6FA7               	movwf	doOperation@tiresToDrop& (0+255),b
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;main.c: 402:     int minimumSafeDistanceToPole;;main.c: 403:     int fourMetreEquivalen
      +                          t;;main.c: 404:     int timeInOperation = 20;
  2889  00108E  0E00               	movlw	0
  2890  001090  6FA2               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  2891  001092  0E14               	movlw	20
  2892  001094  6FA1               	movwf	doOperation@timeInOperation& (0+255),b
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;main.c: 405:     _Bool topLaserState;;main.c: 406:     _Bool topLaserStatePrev;;main.c:
      +                           407:     _Bool isDoneDrop;;main.c: 408:     init_motor_PWM();
  2896  001096  ECB4  F013         	call	_init_motor_PWM	;wreg free
  2897                           
  2898                           ;main.c: 411:     TRISAbits.TRISA0 = 0;
  2899  00109A  9092               	bcf	3986,0,c	;volatile
  2900                           
  2901                           ;main.c: 412:     TRISAbits.TRISA1 = 0;
  2902  00109C  9292               	bcf	3986,1,c	;volatile
  2903                           
  2904                           ;main.c: 414:     TRISAbits.TRISA4 = 0;
  2905  00109E  9892               	bcf	3986,4,c	;volatile
  2906                           
  2907                           ;main.c: 417:     LATAbits.LATA4 = 1;
  2908  0010A0  8889               	bsf	3977,4,c	;volatile
  2909                           
  2910                           ;main.c: 419:     topLaserState = PORTBbits.RB4;
  2911  0010A2  A881               	btfss	3969,4,c	;volatile
  2912  0010A4  D002               	goto	u5620
  2913  0010A6  0E01               	movlw	1
  2914  0010A8  D001               	goto	u5626
  2915  0010AA                     u5620:
  2916  0010AA  0E00               	movlw	0
  2917  0010AC                     u5626:
  2918  0010AC  0100               	movlb	0	; () banked
  2919  0010AE  6FAA               	movwf	doOperation@topLaserState& (0+255),b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 428:     int secondsMeasuredOld = 0;
  2923                           
  2924                           ; BSR set to: 0
  2925                           
  2926                           ; BSR set to: 0
  2927  0010B0  0E00               	movlw	0
  2928  0010B2  6FA5               	movwf	(doOperation@secondsMeasuredOld+1)& (0+255),b
  2929  0010B4  0E00               	movlw	0
  2930  0010B6  6FA4               	movwf	doOperation@secondsMeasuredOld& (0+255),b
  2931  0010B8                     l5777:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;main.c: 433:         topLaserStatePrev = topLaserState;
  2935  0010B8  C0AA  F0A6         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;main.c: 434:         topLaserState = PORTBbits.RB4;
  2939  0010BC  A881               	btfss	3969,4,c	;volatile
  2940  0010BE  D002               	goto	u5630
  2941  0010C0  0E01               	movlw	1
  2942  0010C2  D001               	goto	u5636
  2943  0010C4                     u5630:
  2944  0010C4  0E00               	movlw	0
  2945  0010C6                     u5636:
  2946  0010C6  6FAA               	movwf	doOperation@topLaserState& (0+255),b
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;main.c: 435:    if (secondsMeasured > secondsMeasuredOld){
  2950  0010C8  51C1               	movf	_secondsMeasured& (0+255),w,b	;volatile
  2951  0010CA  5DA4               	subwf	doOperation@secondsMeasuredOld& (0+255),w,b
  2952  0010CC  51A5               	movf	(doOperation@secondsMeasuredOld+1)& (0+255),w,b
  2953  0010CE  0A80               	xorlw	128
  2954  0010D0  6F8E               	movwf	??_doOperation& (0+255),b
  2955  0010D2  51C2               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2956  0010D4  0A80               	xorlw	128
  2957  0010D6  598E               	subwfb	??_doOperation& (0+255),w,b
  2958  0010D8  B0D8               	btfsc	status,0,c
  2959  0010DA  D08F               	goto	l5837
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;main.c: 436:             secondsMeasuredOld++;
  2963  0010DC  4BA4               	infsnz	doOperation@secondsMeasuredOld& (0+255),f,b
  2964  0010DE  2BA5               	incf	(doOperation@secondsMeasuredOld+1)& (0+255),f,b
  2965  0010E0  D08C               	goto	l5837
  2966  0010E2                     l5785:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;main.c: 442:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2970  0010E2  0E01               	movlw	1
  2971  0010E4  EC51  F014         	call	_lcdInst
  2972  0010E8  0E11               	movlw	17
  2973  0010EA  0100               	movlb	0	; () banked
  2974  0010EC  6F8E               	movwf	??_doOperation& (0+255),b
  2975  0010EE  0E3A               	movlw	58
  2976  0010F0                     u5957:
  2977  0010F0  2EE8               	decfsz	wreg,f,c
  2978  0010F2  D7FE               	bra	u5957
  2979  0010F4  2F8E               	decfsz	??_doOperation& (0+255),f,b
  2980  0010F6  D7FC               	bra	u5957
  2981  0010F8  F000               	nop	
  2982                           
  2983                           ;main.c: 443:                 printf("%d", secondsMeasured);
  2984  0010FA  0EF8               	movlw	low STR_17
  2985  0010FC  0100               	movlb	0	; () banked
  2986  0010FE  6F82               	movwf	printf@fmt& (0+255),b
  2987  001100  0EFF               	movlw	high STR_17
  2988  001102  6F83               	movwf	(printf@fmt+1)& (0+255),b
  2989  001104  C0C1  F084         	movff	_secondsMeasured,?_printf+2	;volatile
  2990  001108  C0C2  F085         	movff	_secondsMeasured+1,?_printf+3	;volatile
  2991  00110C  ECC8  F013         	call	_printf	;wreg free
  2992  001110  0E90               	movlw	144
  2993  001112  EC51  F014         	call	_lcdInst
  2994                           
  2995                           ;main.c: 445:                 printf("%d", topLaserState);
  2996  001116  0EF8               	movlw	low STR_17
  2997  001118  0100               	movlb	0	; () banked
  2998  00111A  6F82               	movwf	printf@fmt& (0+255),b
  2999  00111C  0EFF               	movlw	high STR_17
  3000  00111E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  3001  001120  C0AA  F084         	movff	doOperation@topLaserState,?_printf+2
  3002  001124  6B85               	clrf	(?_printf+3)& (0+255),b
  3003  001126  ECC8  F013         	call	_printf	;wreg free
  3004  00112A  0EC0               	movlw	192
  3005  00112C  EC51  F014         	call	_lcdInst
  3006                           
  3007                           ;main.c: 447:                 printf("%d", motorBDistance);
  3008  001130  0EF8               	movlw	low STR_17
  3009  001132  0100               	movlb	0	; () banked
  3010  001134  6F82               	movwf	printf@fmt& (0+255),b
  3011  001136  0EFF               	movlw	high STR_17
  3012  001138  6F83               	movwf	(printf@fmt+1)& (0+255),b
  3013  00113A  C0C3  F084         	movff	_motorBDistance,?_printf+2	;volatile
  3014  00113E  C0C4  F085         	movff	_motorBDistance+1,?_printf+3	;volatile
  3015  001142  ECC8  F013         	call	_printf	;wreg free
  3016                           
  3017                           ;main.c: 451:     setMotorSpeeds(motorASpeed, 1, motorBSpeed);
  3018  001146  C09D  F05A         	movff	doOperation@motorASpeed,setMotorSpeeds@motorASpeed
  3019  00114A  C09E  F05B         	movff	doOperation@motorASpeed+1,setMotorSpeeds@motorASpeed+1
  3020  00114E  0E01               	movlw	1
  3021  001150  6E5C               	movwf	setMotorSpeeds@Aforward,c
  3022  001152  C09F  F05D         	movff	doOperation@motorBSpeed,setMotorSpeeds@motorBSpeed
  3023  001156  C0A0  F05E         	movff	doOperation@motorBSpeed+1,setMotorSpeeds@motorBSpeed+1
  3024  00115A  EC6D  F010         	call	_setMotorSpeeds	;wreg free
  3025                           
  3026                           ;main.c: 452:                 break;
  3027  00115E  D067               	goto	l5839
  3028  001160                     l5801:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;main.c: 464:                 sendArduinoTireDropRequest();
  3032  001160  EC01  F014         	call	_sendArduinoTireDropRequest	;wreg free
  3033                           
  3034                           ;main.c: 465:                 tiresToDrop = 1;
  3035  001164  0E00               	movlw	0
  3036  001166  0100               	movlb	0	; () banked
  3037  001168  6FA8               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3038  00116A  0E01               	movlw	1
  3039  00116C  6FA7               	movwf	doOperation@tiresToDrop& (0+255),b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;main.c: 466:                 currentOperationState = tireDrop;
  3043  00116E  0E02               	movlw	2
  3044  001170  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3045                           
  3046                           ;main.c: 467:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3047  001172  0E01               	movlw	1
  3048  001174  EC51  F014         	call	_lcdInst
  3049  001178  0E11               	movlw	17
  3050  00117A  0100               	movlb	0	; () banked
  3051  00117C  6F8E               	movwf	??_doOperation& (0+255),b
  3052  00117E  0E3A               	movlw	58
  3053  001180                     u5967:
  3054  001180  2EE8               	decfsz	wreg,f,c
  3055  001182  D7FE               	bra	u5967
  3056  001184  2F8E               	decfsz	??_doOperation& (0+255),f,b
  3057  001186  D7FC               	bra	u5967
  3058  001188  F000               	nop	
  3059                           
  3060                           ;main.c: 468:                 printf("TIRE DROP");
  3061  00118A  0EC0               	movlw	low STR_20
  3062  00118C  0100               	movlb	0	; () banked
  3063  00118E  6F82               	movwf	printf@fmt& (0+255),b
  3064  001190  0EFF               	movlw	high STR_20
  3065  001192  6F83               	movwf	(printf@fmt+1)& (0+255),b
  3066  001194  ECC8  F013         	call	_printf	;wreg free
  3067                           
  3068                           ;main.c: 469:                 setMotorSpeeds(0, 1, 0);
  3069  001198  0E00               	movlw	0
  3070  00119A  6E5B               	movwf	setMotorSpeeds@motorASpeed+1,c
  3071  00119C  0E00               	movlw	0
  3072  00119E  6E5A               	movwf	setMotorSpeeds@motorASpeed,c
  3073  0011A0  0E01               	movlw	1
  3074  0011A2  6E5C               	movwf	setMotorSpeeds@Aforward,c
  3075  0011A4  0E00               	movlw	0
  3076  0011A6  6E5E               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3077  0011A8  0E00               	movlw	0
  3078  0011AA  6E5D               	movwf	setMotorSpeeds@motorBSpeed,c
  3079  0011AC  EC6D  F010         	call	_setMotorSpeeds	;wreg free
  3080                           
  3081                           ;main.c: 470:     break;
  3082  0011B0  D03E               	goto	l5839
  3083  0011B2                     l5813:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;main.c: 474:     isDoneDrop = requestIsTireDropDone();
  3087  0011B2  EC89  F013         	call	_requestIsTireDropDone	;wreg free
  3088  0011B6  0100               	movlb	0	; () banked
  3089  0011B8  6FA3               	movwf	doOperation@isDoneDrop& (0+255),b
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;main.c: 476:     if (isDoneDrop){
  3093  0011BA  51A3               	movf	doOperation@isDoneDrop& (0+255),w,b
  3094  0011BC  B4D8               	btfsc	status,2,c
  3095  0011BE  D037               	goto	l5839
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 477:      tiresToDrop -- ;
  3099  0011C0  07A7               	decf	doOperation@tiresToDrop& (0+255),f,b
  3100  0011C2  A0D8               	btfss	status,0,c
  3101  0011C4  07A8               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;main.c: 478:      if (tiresToDrop == 0){
  3105  0011C6  51A7               	movf	doOperation@tiresToDrop& (0+255),w,b
  3106  0011C8  11A8               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3107  0011CA  A4D8               	btfss	status,2,c
  3108  0011CC  D002               	goto	l5823
  3109  0011CE                     u5660:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;main.c: 479:       currentOperationState = moveForward;
  3113  0011CE  0E00               	movlw	0
  3114  0011D0  D004               	goto	L8
  3115  0011D2                     l5823:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;main.c: 482:       sendArduinoTireDropRequest();
  3119  0011D2  EC01  F014         	call	_sendArduinoTireDropRequest	;wreg free
  3120  0011D6  D02B               	goto	l5839
  3121  0011D8                     l5827:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;main.c: 493:     currentOperationState = complete;
  3125  0011D8  0E05               	movlw	5
  3126  0011DA                     L8:
  3127  0011DA  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3128                           
  3129                           ;main.c: 494:     break;
  3130  0011DC  D028               	goto	l5839
  3131  0011DE                     l5829:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;main.c: 496:     setMotorSpeeds(0, 1, 0);
  3135  0011DE  0E00               	movlw	0
  3136  0011E0  6E5B               	movwf	setMotorSpeeds@motorASpeed+1,c
  3137  0011E2  0E00               	movlw	0
  3138  0011E4  6E5A               	movwf	setMotorSpeeds@motorASpeed,c
  3139  0011E6  0E01               	movlw	1
  3140  0011E8  6E5C               	movwf	setMotorSpeeds@Aforward,c
  3141  0011EA  0E00               	movlw	0
  3142  0011EC  6E5E               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3143  0011EE  0E00               	movlw	0
  3144  0011F0  6E5D               	movwf	setMotorSpeeds@motorBSpeed,c
  3145  0011F2  EC6D  F010         	call	_setMotorSpeeds	;wreg free
  3146                           
  3147                           ;main.c: 497:                 LATAbits.LATA4 = 0;
  3148  0011F6  9889               	bcf	3977,4,c	;volatile
  3149  0011F8  0012               	return	
  3150  0011FA                     l5837:
  3151                           
  3152                           ; BSR set to: 0
  3153  0011FA  51A9               	movf	doOperation@currentOperationState& (0+255),w,b
  3154  0011FC  6F8E               	movwf	??_doOperation& (0+255),b
  3155  0011FE  6B8F               	clrf	(??_doOperation+1)& (0+255),b
  3156                           
  3157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 1, Range of values is 0 to 0
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte            4     3 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164  001200  518F               	movf	(??_doOperation+1)& (0+255),w,b
  3165  001202  0A00               	xorlw	0	; case 0
  3166  001204  A4D8               	btfss	status,2,c
  3167  001206  D013               	goto	l5839
  3168                           
  3169                           ; BSR set to: 0
  3170                           ; Switch size 1, requested type "simple"
  3171                           ; Number of cases is 6, Range of values is 0 to 5
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte           19    10 (average)
  3175                           ;	Chosen strategy is simple_byte
  3176  001208  518E               	movf	??_doOperation& (0+255),w,b
  3177  00120A  0A00               	xorlw	0	; case 0
  3178  00120C  B4D8               	btfsc	status,2,c
  3179  00120E  D769               	goto	l5785
  3180  001210  0A01               	xorlw	1	; case 1
  3181  001212  B4D8               	btfsc	status,2,c
  3182  001214  D7A5               	goto	l5801
  3183  001216  0A03               	xorlw	3	; case 2
  3184  001218  B4D8               	btfsc	status,2,c
  3185  00121A  D7CB               	goto	l5813
  3186  00121C  0A01               	xorlw	1	; case 3
  3187  00121E  B4D8               	btfsc	status,2,c
  3188  001220  D7D6               	goto	u5660
  3189  001222  0A07               	xorlw	7	; case 4
  3190  001224  B4D8               	btfsc	status,2,c
  3191  001226  D7D8               	goto	l5827
  3192  001228  0A01               	xorlw	1	; case 5
  3193  00122A  B4D8               	btfsc	status,2,c
  3194  00122C  D7D8               	goto	l5829
  3195  00122E                     l5839:
  3196                           
  3197                           ;main.c: 515:   if (secondsMeasured >= timeInOperation){
  3198  00122E  0100               	movlb	0	; () banked
  3199  001230  51A1               	movf	doOperation@timeInOperation& (0+255),w,b
  3200  001232  5DC1               	subwf	_secondsMeasured& (0+255),w,b	;volatile
  3201  001234  51C2               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  3202  001236  0A80               	xorlw	128
  3203  001238  6F8E               	movwf	??_doOperation& (0+255),b
  3204  00123A  51A2               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3205  00123C  0A80               	xorlw	128
  3206  00123E  598E               	subwfb	??_doOperation& (0+255),w,b
  3207  001240  A0D8               	btfss	status,0,c
  3208  001242  D00A               	goto	l5849
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;main.c: 516:    currentOperationState = complete;
  3212  001244  0E05               	movlw	5
  3213  001246  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3214  001248  D007               	goto	l5849
  3215  00124A                     l5843:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;main.c: 526:                 if (topLaserStatePrev != topLaserState){
  3219  00124A  51AA               	movf	doOperation@topLaserState& (0+255),w,b
  3220  00124C  19A6               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3221  00124E  B4D8               	btfsc	status,2,c
  3222  001250  D733               	goto	l5777
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;main.c: 527:                     currentOperationState = poleFinding;
  3226  001252  0E01               	movlw	1
  3227  001254  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3228  001256  D730               	goto	l5777
  3229  001258                     l5849:
  3230                           
  3231                           ; BSR set to: 0
  3232  001258  51A9               	movf	doOperation@currentOperationState& (0+255),w,b
  3233  00125A  6F8E               	movwf	??_doOperation& (0+255),b
  3234  00125C  6B8F               	clrf	(??_doOperation+1)& (0+255),b
  3235                           
  3236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 1, Range of values is 0 to 0
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            4     3 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243  00125E  518F               	movf	(??_doOperation+1)& (0+255),w,b
  3244  001260  0A00               	xorlw	0	; case 0
  3245  001262  A4D8               	btfss	status,2,c
  3246  001264  D729               	goto	l5777
  3247                           
  3248                           ; BSR set to: 0
  3249                           ; Switch size 1, requested type "simple"
  3250                           ; Number of cases is 6, Range of values is 0 to 5
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte           19    10 (average)
  3254                           ;	Chosen strategy is simple_byte
  3255  001266  518E               	movf	??_doOperation& (0+255),w,b
  3256  001268  0A00               	xorlw	0	; case 0
  3257  00126A  B4D8               	btfsc	status,2,c
  3258  00126C  D7EE               	goto	l5843
  3259  00126E  0A01               	xorlw	1	; case 1
  3260  001270  B4D8               	btfsc	status,2,c
  3261  001272  D722               	goto	l5777
  3262  001274  0A03               	xorlw	3	; case 2
  3263  001276  B4D8               	btfsc	status,2,c
  3264  001278  D71F               	goto	l5777
  3265  00127A  0A01               	xorlw	1	; case 3
  3266  00127C  B4D8               	btfsc	status,2,c
  3267  00127E  D71C               	goto	l5777
  3268  001280  0A07               	xorlw	7	; case 4
  3269  001282  B4D8               	btfsc	status,2,c
  3270  001284  D719               	goto	l5777
  3271  001286  0A01               	xorlw	1	; case 5
  3272  001288  D717               	goto	l5777
  3273  00128A                     __end_of_doOperation:
  3274                           	opt callstack 0
  3275                           
  3276 ;; *************** function _setMotorSpeeds *****************
  3277 ;; Defined at:
  3278 ;;		line 271 in file "main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  motorASpeed     2   89[COMRAM] int 
  3281 ;;  Aforward        1   91[COMRAM] _Bool 
  3282 ;;  motorBSpeed     2   92[COMRAM] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:       13 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    4
  3301 ;; This function calls:
  3302 ;;		___xxtofl
  3303 ;;		_set_pwm_duty_cycle
  3304 ;; This function is called by:
  3305 ;;		_doOperation
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text8
  3310  0020DA                     __ptext8:
  3311                           	opt callstack 0
  3312  0020DA                     _setMotorSpeeds:
  3313                           	opt callstack 25
  3314                           
  3315                           ;main.c: 272:     if (Aforward){
  3316                           
  3317                           ;incstack = 0
  3318  0020DA  505C               	movf	setMotorSpeeds@Aforward,w,c
  3319  0020DC  B4D8               	btfsc	status,2,c
  3320  0020DE  D003               	goto	l201
  3321                           
  3322                           ;main.c: 273:         LATAbits.LATA0 = 0;
  3323  0020E0  9089               	bcf	3977,0,c	;volatile
  3324                           
  3325                           ;main.c: 274:         LATAbits.LATA1 = 1;
  3326  0020E2  8289               	bsf	3977,1,c	;volatile
  3327                           
  3328                           ;main.c: 275:     } else {
  3329  0020E4  D002               	goto	l4283
  3330  0020E6                     l201:
  3331                           
  3332                           ;main.c: 276:         LATAbits.LATA0 = 1;
  3333  0020E6  8089               	bsf	3977,0,c	;volatile
  3334                           
  3335                           ;main.c: 277:         LATAbits.LATA1 = 0;
  3336  0020E8  9289               	bcf	3977,1,c	;volatile
  3337  0020EA                     l4283:
  3338                           
  3339                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3340  0020EA  C05A  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  3341  0020EE  C05B  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  3342  0020F2  0E00               	movlw	0
  3343  0020F4  BE07               	btfsc	___xxtofl@val+1,7,c
  3344  0020F6  0EFF               	movlw	-1
  3345  0020F8  6E08               	movwf	___xxtofl@val+2,c
  3346  0020FA  6E09               	movwf	___xxtofl@val+3,c
  3347  0020FC  0E01               	movlw	1
  3348  0020FE  ECEB  F00C         	call	___xxtofl
  3349  002102  C006  F05F         	movff	?___xxtofl,_setMotorSpeeds$1952
  3350  002106  C007  F060         	movff	?___xxtofl+1,_setMotorSpeeds$1952+1
  3351  00210A  C008  F061         	movff	?___xxtofl+2,_setMotorSpeeds$1952+2
  3352  00210E  C009  F062         	movff	?___xxtofl+3,_setMotorSpeeds$1952+3
  3353                           
  3354                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3355  002112  C05D  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  3356  002116  C05E  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  3357  00211A  0E00               	movlw	0
  3358  00211C  BE07               	btfsc	___xxtofl@val+1,7,c
  3359  00211E  0EFF               	movlw	-1
  3360  002120  6E08               	movwf	___xxtofl@val+2,c
  3361  002122  6E09               	movwf	___xxtofl@val+3,c
  3362  002124  0E01               	movlw	1
  3363  002126  ECEB  F00C         	call	___xxtofl
  3364  00212A  C006  F063         	movff	?___xxtofl,_setMotorSpeeds$1953
  3365  00212E  C007  F064         	movff	?___xxtofl+1,_setMotorSpeeds$1953+1
  3366  002132  C008  F065         	movff	?___xxtofl+2,_setMotorSpeeds$1953+2
  3367  002136  C009  F066         	movff	?___xxtofl+3,_setMotorSpeeds$1953+3
  3368                           
  3369                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3370  00213A  C05F  F046         	movff	_setMotorSpeeds$1952,set_pwm_duty_cycle@dutyA
  3371  00213E  C060  F047         	movff	_setMotorSpeeds$1952+1,set_pwm_duty_cycle@dutyA+1
  3372  002142  C061  F048         	movff	_setMotorSpeeds$1952+2,set_pwm_duty_cycle@dutyA+2
  3373  002146  C062  F049         	movff	_setMotorSpeeds$1952+3,set_pwm_duty_cycle@dutyA+3
  3374  00214A  C063  F04A         	movff	_setMotorSpeeds$1953,set_pwm_duty_cycle@dutyB
  3375  00214E  C064  F04B         	movff	_setMotorSpeeds$1953+1,set_pwm_duty_cycle@dutyB+1
  3376  002152  C065  F04C         	movff	_setMotorSpeeds$1953+2,set_pwm_duty_cycle@dutyB+2
  3377  002156  C066  F04D         	movff	_setMotorSpeeds$1953+3,set_pwm_duty_cycle@dutyB+3
  3378  00215A  EC5B  F00A         	call	_set_pwm_duty_cycle	;wreg free
  3379  00215E  0012               	return		;funcret
  3380  002160                     __end_of_setMotorSpeeds:
  3381                           	opt callstack 0
  3382                           
  3383 ;; *************** function _set_pwm_duty_cycle *****************
  3384 ;; Defined at:
  3385 ;;		line 241 in file "main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dutyA           4   69[COMRAM] float 
  3388 ;;  dutyB           4   73[COMRAM] float 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  duty_valB       2   83[COMRAM] unsigned short 
  3391 ;;  duty_valA       2   81[COMRAM] unsigned short 
  3392 ;;  max_duty_val    2   79[COMRAM] unsigned short 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:       20 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    3
  3409 ;; This function calls:
  3410 ;;		___fldiv
  3411 ;;		___flge
  3412 ;;		___flmul
  3413 ;;		___fltol
  3414 ;;		___xxtofl
  3415 ;; This function is called by:
  3416 ;;		_setMotorSpeeds
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text9
  3421  0014B6                     __ptext9:
  3422                           	opt callstack 0
  3423  0014B6                     _set_pwm_duty_cycle:
  3424                           	opt callstack 25
  3425                           
  3426                           ;main.c: 242:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  3427                           
  3428                           ;incstack = 0
  3429  0014B6  BE49               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  3430  0014B8  0012               	return	
  3431  0014BA  0E00               	movlw	0
  3432  0014BC  6E06               	movwf	___flge@ff1,c
  3433  0014BE  0E00               	movlw	0
  3434  0014C0  6E07               	movwf	___flge@ff1+1,c
  3435  0014C2  0EC8               	movlw	200
  3436  0014C4  6E08               	movwf	___flge@ff1+2,c
  3437  0014C6  0E42               	movlw	66
  3438  0014C8  6E09               	movwf	___flge@ff1+3,c
  3439  0014CA  C046  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  3440  0014CE  C047  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  3441  0014D2  C048  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  3442  0014D6  C049  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  3443  0014DA  EC5D  F00F         	call	___flge	;wreg free
  3444  0014DE  A0D8               	btfss	status,0,c
  3445  0014E0  0012               	return	
  3446  0014E2  BE4D               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  3447  0014E4  0012               	return	
  3448  0014E6  0E00               	movlw	0
  3449  0014E8  6E06               	movwf	___flge@ff1,c
  3450  0014EA  0E00               	movlw	0
  3451  0014EC  6E07               	movwf	___flge@ff1+1,c
  3452  0014EE  0EC8               	movlw	200
  3453  0014F0  6E08               	movwf	___flge@ff1+2,c
  3454  0014F2  0E42               	movlw	66
  3455  0014F4  6E09               	movwf	___flge@ff1+3,c
  3456  0014F6  C04A  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  3457  0014FA  C04B  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  3458  0014FE  C04C  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  3459  001502  C04D  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  3460  001506  EC5D  F00F         	call	___flge	;wreg free
  3461  00150A  A0D8               	btfss	status,0,c
  3462  00150C  0012               	return	
  3463                           
  3464                           ;main.c: 247:         unsigned short max_duty_val = PR2 + 1;
  3465  00150E  0E01               	movlw	1
  3466  001510  24CB               	addwf	4043,w,c	;volatile
  3467  001512  6E50               	movwf	set_pwm_duty_cycle@max_duty_val,c
  3468  001514  6A51               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  3469  001516  0E00               	movlw	0
  3470  001518  2251               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  3471                           
  3472                           ;main.c: 253:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  3473  00151A  0E00               	movlw	0
  3474  00151C  6E31               	movwf	___fldiv@a,c
  3475  00151E  0E00               	movlw	0
  3476  001520  6E32               	movwf	___fldiv@a+1,c
  3477  001522  0EC8               	movlw	200
  3478  001524  6E33               	movwf	___fldiv@a+2,c
  3479  001526  0E42               	movlw	66
  3480  001528  6E34               	movwf	___fldiv@a+3,c
  3481  00152A  0E00               	movlw	0
  3482  00152C  6E18               	movwf	___flmul@a,c
  3483  00152E  0E00               	movlw	0
  3484  001530  6E19               	movwf	___flmul@a+1,c
  3485  001532  0E80               	movlw	128
  3486  001534  6E1A               	movwf	___flmul@a+2,c
  3487  001536  0E40               	movlw	64
  3488  001538  6E1B               	movwf	___flmul@a+3,c
  3489  00153A  C046  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  3490  00153E  C047  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  3491  001542  C048  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  3492  001546  C049  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  3493  00154A  EC1A  F004         	call	___flmul	;wreg free
  3494  00154E  C014  F02D         	movff	?___flmul,___fldiv@b
  3495  001552  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3496  001556  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3497  00155A  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3498  00155E  ECC3  F005         	call	___fldiv	;wreg free
  3499  001562  C02D  F056         	movff	?___fldiv,_set_pwm_duty_cycle$1951
  3500  001566  C02E  F057         	movff	?___fldiv+1,_set_pwm_duty_cycle$1951+1
  3501  00156A  C02F  F058         	movff	?___fldiv+2,_set_pwm_duty_cycle$1951+2
  3502  00156E  C030  F059         	movff	?___fldiv+3,_set_pwm_duty_cycle$1951+3
  3503                           
  3504                           ;main.c: 253:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  3505  001572  C050  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  3506  001576  C051  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  3507  00157A  6A08               	clrf	___xxtofl@val+2,c
  3508  00157C  6A09               	clrf	___xxtofl@val+3,c
  3509  00157E  0E00               	movlw	0
  3510  001580  ECEB  F00C         	call	___xxtofl
  3511  001584  C006  F018         	movff	?___xxtofl,___flmul@a
  3512  001588  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  3513  00158C  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  3514  001590  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  3515  001594  C056  F014         	movff	_set_pwm_duty_cycle$1951,___flmul@b
  3516  001598  C057  F015         	movff	_set_pwm_duty_cycle$1951+1,___flmul@b+1
  3517  00159C  C058  F016         	movff	_set_pwm_duty_cycle$1951+2,___flmul@b+2
  3518  0015A0  C059  F017         	movff	_set_pwm_duty_cycle$1951+3,___flmul@b+3
  3519  0015A4  EC1A  F004         	call	___flmul	;wreg free
  3520  0015A8  C014  F02D         	movff	?___flmul,___fltol@f1
  3521  0015AC  C015  F02E         	movff	?___flmul+1,___fltol@f1+1
  3522  0015B0  C016  F02F         	movff	?___flmul+2,___fltol@f1+2
  3523  0015B4  C017  F030         	movff	?___flmul+3,___fltol@f1+3
  3524  0015B8  ECC5  F00F         	call	___fltol	;wreg free
  3525  0015BC  C02D  F052         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  3526  0015C0  C02E  F053         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  3527                           
  3528                           ;main.c: 254:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  3529  0015C4  0E00               	movlw	0
  3530  0015C6  6E31               	movwf	___fldiv@a,c
  3531  0015C8  0E00               	movlw	0
  3532  0015CA  6E32               	movwf	___fldiv@a+1,c
  3533  0015CC  0EC8               	movlw	200
  3534  0015CE  6E33               	movwf	___fldiv@a+2,c
  3535  0015D0  0E42               	movlw	66
  3536  0015D2  6E34               	movwf	___fldiv@a+3,c
  3537  0015D4  0E00               	movlw	0
  3538  0015D6  6E18               	movwf	___flmul@a,c
  3539  0015D8  0E00               	movlw	0
  3540  0015DA  6E19               	movwf	___flmul@a+1,c
  3541  0015DC  0E80               	movlw	128
  3542  0015DE  6E1A               	movwf	___flmul@a+2,c
  3543  0015E0  0E40               	movlw	64
  3544  0015E2  6E1B               	movwf	___flmul@a+3,c
  3545  0015E4  C04A  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  3546  0015E8  C04B  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  3547  0015EC  C04C  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  3548  0015F0  C04D  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  3549  0015F4  EC1A  F004         	call	___flmul	;wreg free
  3550  0015F8  C014  F02D         	movff	?___flmul,___fldiv@b
  3551  0015FC  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3552  001600  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3553  001604  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3554  001608  ECC3  F005         	call	___fldiv	;wreg free
  3555  00160C  C02D  F056         	movff	?___fldiv,_set_pwm_duty_cycle$1951
  3556  001610  C02E  F057         	movff	?___fldiv+1,_set_pwm_duty_cycle$1951+1
  3557  001614  C02F  F058         	movff	?___fldiv+2,_set_pwm_duty_cycle$1951+2
  3558  001618  C030  F059         	movff	?___fldiv+3,_set_pwm_duty_cycle$1951+3
  3559                           
  3560                           ;main.c: 254:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  3561  00161C  C050  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  3562  001620  C051  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  3563  001624  6A08               	clrf	___xxtofl@val+2,c
  3564  001626  6A09               	clrf	___xxtofl@val+3,c
  3565  001628  0E00               	movlw	0
  3566  00162A  ECEB  F00C         	call	___xxtofl
  3567  00162E  C006  F018         	movff	?___xxtofl,___flmul@a
  3568  001632  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  3569  001636  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  3570  00163A  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  3571  00163E  C056  F014         	movff	_set_pwm_duty_cycle$1951,___flmul@b
  3572  001642  C057  F015         	movff	_set_pwm_duty_cycle$1951+1,___flmul@b+1
  3573  001646  C058  F016         	movff	_set_pwm_duty_cycle$1951+2,___flmul@b+2
  3574  00164A  C059  F017         	movff	_set_pwm_duty_cycle$1951+3,___flmul@b+3
  3575  00164E  EC1A  F004         	call	___flmul	;wreg free
  3576  001652  C014  F02D         	movff	?___flmul,___fltol@f1
  3577  001656  C015  F02E         	movff	?___flmul+1,___fltol@f1+1
  3578  00165A  C016  F02F         	movff	?___flmul+2,___fltol@f1+2
  3579  00165E  C017  F030         	movff	?___flmul+3,___fltol@f1+3
  3580  001662  ECC5  F00F         	call	___fltol	;wreg free
  3581  001666  C02D  F054         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  3582  00166A  C02E  F055         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  3583                           
  3584                           ;main.c: 258:         CCP1X = duty_valA & 2;
  3585  00166E  9ABD               	bcf	4029,5,c	;volatile
  3586                           
  3587                           ;main.c: 259:         CCP1Y = duty_valA & 1;
  3588  001670  A052               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  3589  001672  D002               	goto	u4000
  3590  001674  88BD               	bsf	4029,4,c	;volatile
  3591  001676  D001               	goto	u4015
  3592  001678                     u4000:
  3593  001678  98BD               	bcf	4029,4,c	;volatile
  3594  00167A                     u4015:
  3595                           
  3596                           ;main.c: 260:         CCPR1L = duty_valA >> 2;
  3597  00167A  C052  F04E         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  3598  00167E  C053  F04F         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  3599  001682  90D8               	bcf	status,0,c
  3600  001684  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3601  001686  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3602  001688  90D8               	bcf	status,0,c
  3603  00168A  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3604  00168C  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3605  00168E  504E               	movf	??_set_pwm_duty_cycle,w,c
  3606  001690  6EBE               	movwf	4030,c	;volatile
  3607                           
  3608                           ;main.c: 264:         CCP2X = duty_valB & 2;
  3609  001692  9ABA               	bcf	4026,5,c	;volatile
  3610                           
  3611                           ;main.c: 265:         CCP2Y = duty_valB & 1;
  3612  001694  A054               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  3613  001696  D002               	goto	u4020
  3614  001698  88BA               	bsf	4026,4,c	;volatile
  3615  00169A  D001               	goto	u4035
  3616  00169C                     u4020:
  3617  00169C  98BA               	bcf	4026,4,c	;volatile
  3618  00169E                     u4035:
  3619                           
  3620                           ;main.c: 266:         CCPR2L = duty_valB >> 2;
  3621  00169E  C054  F04E         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  3622  0016A2  C055  F04F         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  3623  0016A6  90D8               	bcf	status,0,c
  3624  0016A8  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3625  0016AA  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3626  0016AC  90D8               	bcf	status,0,c
  3627  0016AE  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3628  0016B0  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3629  0016B2  504E               	movf	??_set_pwm_duty_cycle,w,c
  3630  0016B4  6EBB               	movwf	4027,c	;volatile
  3631  0016B6  0012               	return		;funcret
  3632  0016B8                     __end_of_set_pwm_duty_cycle:
  3633                           	opt callstack 0
  3634                           
  3635 ;; *************** function ___xxtofl *****************
  3636 ;; Defined at:
  3637 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  sign            1    wreg     unsigned char 
  3640 ;;  val             4    5[COMRAM] long 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  sign            1   13[COMRAM] unsigned char 
  3643 ;;  arg             4   15[COMRAM] unsigned long 
  3644 ;;  exp             1   14[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  4    5[COMRAM] unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:       14 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_set_pwm_duty_cycle
  3665 ;;		_setMotorSpeeds
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text10
  3670  0019D6                     __ptext10:
  3671                           	opt callstack 0
  3672  0019D6                     ___xxtofl:
  3673                           	opt callstack 25
  3674                           
  3675                           ;incstack = 0
  3676                           ;___xxtofl@sign stored from wreg
  3677  0019D6  6E0E               	movwf	___xxtofl@sign,c
  3678  0019D8  500E               	movf	___xxtofl@sign,w,c
  3679  0019DA  A4D8               	btfss	status,2,c
  3680  0019DC  AE09               	btfss	___xxtofl@val+3,7,c
  3681  0019DE  D01A               	goto	l1209
  3682  0019E0  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  3683  0019E4  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  3684  0019E8  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  3685  0019EC  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  3686  0019F0  1E0A               	comf	??___xxtofl,f,c
  3687  0019F2  1E0B               	comf	??___xxtofl+1,f,c
  3688  0019F4  1E0C               	comf	??___xxtofl+2,f,c
  3689  0019F6  1E0D               	comf	??___xxtofl+3,f,c
  3690  0019F8  2A0A               	incf	??___xxtofl,f,c
  3691  0019FA  0E00               	movlw	0
  3692  0019FC  220B               	addwfc	??___xxtofl+1,f,c
  3693  0019FE  220C               	addwfc	??___xxtofl+2,f,c
  3694  001A00  220D               	addwfc	??___xxtofl+3,f,c
  3695  001A02  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  3696  001A06  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  3697  001A0A  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  3698  001A0E  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  3699  001A12  D008               	goto	l4087
  3700  001A14                     l1209:
  3701  001A14  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  3702  001A18  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3703  001A1C  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3704  001A20  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3705  001A24                     l4087:
  3706  001A24  5006               	movf	___xxtofl@val,w,c
  3707  001A26  1007               	iorwf	___xxtofl@val+1,w,c
  3708  001A28  1008               	iorwf	___xxtofl@val+2,w,c
  3709  001A2A  1009               	iorwf	___xxtofl@val+3,w,c
  3710  001A2C  A4D8               	btfss	status,2,c
  3711  001A2E  D009               	goto	l4093
  3712  001A30  0E00               	movlw	0
  3713  001A32  6E06               	movwf	?___xxtofl,c
  3714  001A34  0E00               	movlw	0
  3715  001A36  6E07               	movwf	?___xxtofl+1,c
  3716  001A38  0E00               	movlw	0
  3717  001A3A  6E08               	movwf	?___xxtofl+2,c
  3718  001A3C  0E00               	movlw	0
  3719  001A3E  6E09               	movwf	?___xxtofl+3,c
  3720  001A40  0012               	return	
  3721  001A42                     l4093:
  3722  001A42  0E96               	movlw	150
  3723  001A44  6E0F               	movwf	___xxtofl@exp,c
  3724  001A46  D006               	goto	l4097
  3725  001A48                     l4095:
  3726  001A48  2A0F               	incf	___xxtofl@exp,f,c
  3727  001A4A  90D8               	bcf	status,0,c
  3728  001A4C  3213               	rrcf	___xxtofl@arg+3,f,c
  3729  001A4E  3212               	rrcf	___xxtofl@arg+2,f,c
  3730  001A50  3211               	rrcf	___xxtofl@arg+1,f,c
  3731  001A52  3210               	rrcf	___xxtofl@arg,f,c
  3732  001A54                     l4097:
  3733  001A54  0E00               	movlw	0
  3734  001A56  1410               	andwf	___xxtofl@arg,w,c
  3735  001A58  6E0A               	movwf	??___xxtofl& (0+255),c
  3736  001A5A  0E00               	movlw	0
  3737  001A5C  1411               	andwf	___xxtofl@arg+1,w,c
  3738  001A5E  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  3739  001A60  0E00               	movlw	0
  3740  001A62  1412               	andwf	___xxtofl@arg+2,w,c
  3741  001A64  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  3742  001A66  0EFE               	movlw	254
  3743  001A68  1413               	andwf	___xxtofl@arg+3,w,c
  3744  001A6A  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  3745  001A6C  500A               	movf	??___xxtofl,w,c
  3746  001A6E  100B               	iorwf	??___xxtofl+1,w,c
  3747  001A70  100C               	iorwf	??___xxtofl+2,w,c
  3748  001A72  100D               	iorwf	??___xxtofl+3,w,c
  3749  001A74  B4D8               	btfsc	status,2,c
  3750  001A76  D00D               	goto	l1216
  3751  001A78  D7E7               	goto	l4095
  3752  001A7A                     l4099:
  3753  001A7A  2A0F               	incf	___xxtofl@exp,f,c
  3754  001A7C  0E01               	movlw	1
  3755  001A7E  2610               	addwf	___xxtofl@arg,f,c
  3756  001A80  0E00               	movlw	0
  3757  001A82  2211               	addwfc	___xxtofl@arg+1,f,c
  3758  001A84  2212               	addwfc	___xxtofl@arg+2,f,c
  3759  001A86  2213               	addwfc	___xxtofl@arg+3,f,c
  3760  001A88  90D8               	bcf	status,0,c
  3761  001A8A  3213               	rrcf	___xxtofl@arg+3,f,c
  3762  001A8C  3212               	rrcf	___xxtofl@arg+2,f,c
  3763  001A8E  3211               	rrcf	___xxtofl@arg+1,f,c
  3764  001A90  3210               	rrcf	___xxtofl@arg,f,c
  3765  001A92                     l1216:
  3766  001A92  0E00               	movlw	0
  3767  001A94  1410               	andwf	___xxtofl@arg,w,c
  3768  001A96  6E0A               	movwf	??___xxtofl& (0+255),c
  3769  001A98  0E00               	movlw	0
  3770  001A9A  1411               	andwf	___xxtofl@arg+1,w,c
  3771  001A9C  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  3772  001A9E  0E00               	movlw	0
  3773  001AA0  1412               	andwf	___xxtofl@arg+2,w,c
  3774  001AA2  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  3775  001AA4  0EFF               	movlw	255
  3776  001AA6  1413               	andwf	___xxtofl@arg+3,w,c
  3777  001AA8  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  3778  001AAA  500A               	movf	??___xxtofl,w,c
  3779  001AAC  100B               	iorwf	??___xxtofl+1,w,c
  3780  001AAE  100C               	iorwf	??___xxtofl+2,w,c
  3781  001AB0  100D               	iorwf	??___xxtofl+3,w,c
  3782  001AB2  B4D8               	btfsc	status,2,c
  3783  001AB4  D007               	goto	l4107
  3784  001AB6  D7E1               	goto	l4099
  3785  001AB8                     l4105:
  3786  001AB8  060F               	decf	___xxtofl@exp,f,c
  3787  001ABA  90D8               	bcf	status,0,c
  3788  001ABC  3610               	rlcf	___xxtofl@arg,f,c
  3789  001ABE  3611               	rlcf	___xxtofl@arg+1,f,c
  3790  001AC0  3612               	rlcf	___xxtofl@arg+2,f,c
  3791  001AC2  3613               	rlcf	___xxtofl@arg+3,f,c
  3792  001AC4                     l4107:
  3793  001AC4  BE12               	btfsc	___xxtofl@arg+2,7,c
  3794  001AC6  D003               	goto	u3920
  3795  001AC8  0E02               	movlw	2
  3796  001ACA  600F               	cpfslt	___xxtofl@exp,c
  3797  001ACC  D7F5               	goto	l4105
  3798  001ACE                     u3920:
  3799  001ACE  A00F               	btfss	___xxtofl@exp,0,c
  3800  001AD0  9E12               	bcf	___xxtofl@arg+2,7,c
  3801  001AD2  90D8               	bcf	status,0,c
  3802  001AD4  320F               	rrcf	___xxtofl@exp,f,c
  3803  001AD6  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  3804  001ADA  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  3805  001ADC  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  3806  001ADE  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  3807  001AE0  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  3808  001AE4  6A0C               	clrf	??___xxtofl+2,c
  3809  001AE6  6A0B               	clrf	??___xxtofl+1,c
  3810  001AE8  6A0A               	clrf	??___xxtofl,c
  3811  001AEA  500A               	movf	??___xxtofl,w,c
  3812  001AEC  1210               	iorwf	___xxtofl@arg,f,c
  3813  001AEE  500B               	movf	??___xxtofl+1,w,c
  3814  001AF0  1211               	iorwf	___xxtofl@arg+1,f,c
  3815  001AF2  500C               	movf	??___xxtofl+2,w,c
  3816  001AF4  1212               	iorwf	___xxtofl@arg+2,f,c
  3817  001AF6  500D               	movf	??___xxtofl+3,w,c
  3818  001AF8  1213               	iorwf	___xxtofl@arg+3,f,c
  3819  001AFA  500E               	movf	___xxtofl@sign,w,c
  3820  001AFC  A4D8               	btfss	status,2,c
  3821  001AFE  AE09               	btfss	___xxtofl@val+3,7,c
  3822  001B00  D001               	goto	l4123
  3823  001B02  8E13               	bsf	___xxtofl@arg+3,7,c
  3824  001B04                     l4123:
  3825  001B04  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  3826  001B08  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  3827  001B0C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  3828  001B10  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  3829  001B14  0012               	return		;funcret
  3830  001B16                     __end_of___xxtofl:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function ___fltol *****************
  3834 ;; Defined at:
  3835 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  f1              4   44[COMRAM] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  exp1            1   53[COMRAM] unsigned char 
  3840 ;;  sign1           1   52[COMRAM] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  4   44[COMRAM] long 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:       10 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    2
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_set_pwm_duty_cycle
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text11
  3865  001F8A                     __ptext11:
  3866                           	opt callstack 0
  3867  001F8A                     ___fltol:
  3868                           	opt callstack 25
  3869                           
  3870                           ;incstack = 0
  3871  001F8A  342F               	rlcf	___fltol@f1+2,w,c
  3872  001F8C  3430               	rlcf	___fltol@f1+3,w,c
  3873  001F8E  6E36               	movwf	___fltol@exp1,c
  3874  001F90  5036               	movf	___fltol@exp1,w,c
  3875  001F92  A4D8               	btfss	status,2,c
  3876  001F94  D009               	goto	l4043
  3877  001F96                     u3790:
  3878  001F96  0E00               	movlw	0
  3879  001F98  6E2D               	movwf	?___fltol,c
  3880  001F9A  0E00               	movlw	0
  3881  001F9C  6E2E               	movwf	?___fltol+1,c
  3882  001F9E  0E00               	movlw	0
  3883  001FA0  6E2F               	movwf	?___fltol+2,c
  3884  001FA2  0E00               	movlw	0
  3885  001FA4  6E30               	movwf	?___fltol+3,c
  3886  001FA6  0012               	return	
  3887  001FA8                     l4043:
  3888  001FA8  C02D  F031         	movff	___fltol@f1,??___fltol
  3889  001FAC  C02E  F032         	movff	___fltol@f1+1,??___fltol+1
  3890  001FB0  C02F  F033         	movff	___fltol@f1+2,??___fltol+2
  3891  001FB4  C030  F034         	movff	___fltol@f1+3,??___fltol+3
  3892  001FB8  0E20               	movlw	32
  3893  001FBA  D005               	goto	u3800
  3894  001FBC                     u3805:
  3895  001FBC  90D8               	bcf	status,0,c
  3896  001FBE  3234               	rrcf	??___fltol+3,f,c
  3897  001FC0  3233               	rrcf	??___fltol+2,f,c
  3898  001FC2  3232               	rrcf	??___fltol+1,f,c
  3899  001FC4  3231               	rrcf	??___fltol,f,c
  3900  001FC6                     u3800:
  3901  001FC6  2EE8               	decfsz	wreg,f,c
  3902  001FC8  D7F9               	goto	u3805
  3903  001FCA  5031               	movf	??___fltol,w,c
  3904  001FCC  6E35               	movwf	___fltol@sign1,c
  3905  001FCE  8E2F               	bsf	___fltol@f1+2,7,c
  3906  001FD0  0EFF               	movlw	255
  3907  001FD2  162D               	andwf	___fltol@f1,f,c
  3908  001FD4  0EFF               	movlw	255
  3909  001FD6  162E               	andwf	___fltol@f1+1,f,c
  3910  001FD8  0EFF               	movlw	255
  3911  001FDA  162F               	andwf	___fltol@f1+2,f,c
  3912  001FDC  0E00               	movlw	0
  3913  001FDE  1630               	andwf	___fltol@f1+3,f,c
  3914  001FE0  0E96               	movlw	150
  3915  001FE2  5E36               	subwf	___fltol@exp1,f,c
  3916  001FE4  AE36               	btfss	___fltol@exp1,7,c
  3917  001FE6  D00D               	goto	l4063
  3918  001FE8  5036               	movf	___fltol@exp1,w,c
  3919  001FEA  0A80               	xorlw	128
  3920  001FEC  0F97               	addlw	151
  3921  001FEE  A0D8               	btfss	status,0,c
  3922  001FF0  D7D2               	goto	u3790
  3923  001FF2                     l4059:
  3924  001FF2  90D8               	bcf	status,0,c
  3925  001FF4  3230               	rrcf	___fltol@f1+3,f,c
  3926  001FF6  322F               	rrcf	___fltol@f1+2,f,c
  3927  001FF8  322E               	rrcf	___fltol@f1+1,f,c
  3928  001FFA  322D               	rrcf	___fltol@f1,f,c
  3929  001FFC  3E36               	incfsz	___fltol@exp1,f,c
  3930  001FFE  D7F9               	goto	l4059
  3931  002000  D00D               	goto	u3840
  3932  002002                     l4063:
  3933  002002  0E1F               	movlw	31
  3934  002004  6436               	cpfsgt	___fltol@exp1,c
  3935  002006  D007               	goto	l4071
  3936  002008  D7C6               	goto	u3790
  3937  00200A                     l4069:
  3938  00200A  90D8               	bcf	status,0,c
  3939  00200C  362D               	rlcf	___fltol@f1,f,c
  3940  00200E  362E               	rlcf	___fltol@f1+1,f,c
  3941  002010  362F               	rlcf	___fltol@f1+2,f,c
  3942  002012  3630               	rlcf	___fltol@f1+3,f,c
  3943  002014  0636               	decf	___fltol@exp1,f,c
  3944  002016                     l4071:
  3945  002016  5036               	movf	___fltol@exp1,w,c
  3946  002018  A4D8               	btfss	status,2,c
  3947  00201A  D7F7               	goto	l4069
  3948  00201C                     u3840:
  3949  00201C  5035               	movf	___fltol@sign1,w,c
  3950  00201E  B4D8               	btfsc	status,2,c
  3951  002020  D008               	goto	l4077
  3952  002022  1E30               	comf	___fltol@f1+3,f,c
  3953  002024  1E2F               	comf	___fltol@f1+2,f,c
  3954  002026  1E2E               	comf	___fltol@f1+1,f,c
  3955  002028  6C2D               	negf	___fltol@f1,c
  3956  00202A  0E00               	movlw	0
  3957  00202C  222E               	addwfc	___fltol@f1+1,f,c
  3958  00202E  222F               	addwfc	___fltol@f1+2,f,c
  3959  002030  2230               	addwfc	___fltol@f1+3,f,c
  3960  002032                     l4077:
  3961  002032  C02D  F02D         	movff	___fltol@f1,?___fltol
  3962  002036  C02E  F02E         	movff	___fltol@f1+1,?___fltol+1
  3963  00203A  C02F  F02F         	movff	___fltol@f1+2,?___fltol+2
  3964  00203E  C030  F030         	movff	___fltol@f1+3,?___fltol+3
  3965  002042  0012               	return		;funcret
  3966  002044                     __end_of___fltol:
  3967                           	opt callstack 0
  3968                           
  3969 ;; *************** function ___flmul *****************
  3970 ;; Defined at:
  3971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  b               4   19[COMRAM] long 
  3974 ;;  a               4   23[COMRAM] long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  prod            4   38[COMRAM] struct .
  3977 ;;  grs             4   32[COMRAM] unsigned long 
  3978 ;;  temp            2   42[COMRAM] struct .
  3979 ;;  bexp            1   37[COMRAM] unsigned char 
  3980 ;;  aexp            1   36[COMRAM] unsigned char 
  3981 ;;  sign            1   31[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  4   19[COMRAM] unsigned char 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, prodl, prodh
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:       25 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_set_pwm_duty_cycle
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text12
  4006  000834                     __ptext12:
  4007                           	opt callstack 0
  4008  000834                     ___flmul:
  4009                           	opt callstack 25
  4010                           
  4011                           ;incstack = 0
  4012  000834  5017               	movf	___flmul@b+3,w,c
  4013  000836  0B80               	andlw	128
  4014  000838  6E20               	movwf	___flmul@sign,c
  4015  00083A  5017               	movf	___flmul@b+3,w,c
  4016  00083C  2417               	addwf	___flmul@b+3,w,c
  4017  00083E  6E26               	movwf	___flmul@bexp,c
  4018  000840  BE16               	btfsc	___flmul@b+2,7,c
  4019  000842  8026               	bsf	___flmul@bexp,0,c
  4020  000844  5026               	movf	___flmul@bexp,w,c
  4021  000846  B4D8               	btfsc	status,2,c
  4022  000848  D00D               	goto	l3899
  4023  00084A  2826               	incf	___flmul@bexp,w,c
  4024  00084C  A4D8               	btfss	status,2,c
  4025  00084E  D008               	goto	l3897
  4026  000850  0E00               	movlw	0
  4027  000852  6E14               	movwf	___flmul@b,c
  4028  000854  0E00               	movlw	0
  4029  000856  6E15               	movwf	___flmul@b+1,c
  4030  000858  0E00               	movlw	0
  4031  00085A  6E16               	movwf	___flmul@b+2,c
  4032  00085C  0E00               	movlw	0
  4033  00085E  6E17               	movwf	___flmul@b+3,c
  4034  000860                     l3897:
  4035  000860  8E16               	bsf	___flmul@b+2,7,c
  4036  000862  D008               	goto	l3901
  4037  000864                     l3899:
  4038  000864  0E00               	movlw	0
  4039  000866  6E14               	movwf	___flmul@b,c
  4040  000868  0E00               	movlw	0
  4041  00086A  6E15               	movwf	___flmul@b+1,c
  4042  00086C  0E00               	movlw	0
  4043  00086E  6E16               	movwf	___flmul@b+2,c
  4044  000870  0E00               	movlw	0
  4045  000872  6E17               	movwf	___flmul@b+3,c
  4046  000874                     l3901:
  4047  000874  501B               	movf	___flmul@a+3,w,c
  4048  000876  0B80               	andlw	128
  4049  000878  1A20               	xorwf	___flmul@sign,f,c
  4050  00087A  501B               	movf	___flmul@a+3,w,c
  4051  00087C  241B               	addwf	___flmul@a+3,w,c
  4052  00087E  6E25               	movwf	___flmul@aexp,c
  4053  000880  BE1A               	btfsc	___flmul@a+2,7,c
  4054  000882  8025               	bsf	___flmul@aexp,0,c
  4055  000884  5025               	movf	___flmul@aexp,w,c
  4056  000886  B4D8               	btfsc	status,2,c
  4057  000888  D00D               	goto	l3917
  4058  00088A  2825               	incf	___flmul@aexp,w,c
  4059  00088C  A4D8               	btfss	status,2,c
  4060  00088E  D008               	goto	l3915
  4061  000890  0E00               	movlw	0
  4062  000892  6E18               	movwf	___flmul@a,c
  4063  000894  0E00               	movlw	0
  4064  000896  6E19               	movwf	___flmul@a+1,c
  4065  000898  0E00               	movlw	0
  4066  00089A  6E1A               	movwf	___flmul@a+2,c
  4067  00089C  0E00               	movlw	0
  4068  00089E  6E1B               	movwf	___flmul@a+3,c
  4069  0008A0                     l3915:
  4070  0008A0  8E1A               	bsf	___flmul@a+2,7,c
  4071  0008A2  D008               	goto	l1168
  4072  0008A4                     l3917:
  4073  0008A4  0E00               	movlw	0
  4074  0008A6  6E18               	movwf	___flmul@a,c
  4075  0008A8  0E00               	movlw	0
  4076  0008AA  6E19               	movwf	___flmul@a+1,c
  4077  0008AC  0E00               	movlw	0
  4078  0008AE  6E1A               	movwf	___flmul@a+2,c
  4079  0008B0  0E00               	movlw	0
  4080  0008B2  6E1B               	movwf	___flmul@a+3,c
  4081  0008B4                     l1168:
  4082  0008B4  5025               	movf	___flmul@aexp,w,c
  4083  0008B6  B4D8               	btfsc	status,2,c
  4084  0008B8  D003               	goto	u3620
  4085  0008BA  5026               	movf	___flmul@bexp,w,c
  4086  0008BC  A4D8               	btfss	status,2,c
  4087  0008BE  D009               	goto	l3925
  4088  0008C0                     u3620:
  4089  0008C0  0E00               	movlw	0
  4090  0008C2  6E14               	movwf	?___flmul,c
  4091  0008C4  0E00               	movlw	0
  4092  0008C6  6E15               	movwf	?___flmul+1,c
  4093  0008C8  0E00               	movlw	0
  4094  0008CA  6E16               	movwf	?___flmul+2,c
  4095  0008CC  0E00               	movlw	0
  4096  0008CE  6E17               	movwf	?___flmul+3,c
  4097  0008D0  0012               	return	
  4098  0008D2                     l3925:
  4099  0008D2  501A               	movf	___flmul@a+2,w,c
  4100  0008D4  0214               	mulwf	___flmul@b,c
  4101  0008D6  CFF3 F02B          	movff	prodl,___flmul@temp
  4102  0008DA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4103  0008DE  502B               	movf	___flmul@temp,w,c
  4104  0008E0  6E21               	movwf	___flmul@grs,c
  4105  0008E2  6A22               	clrf	___flmul@grs+1,c
  4106  0008E4  6A23               	clrf	___flmul@grs+2,c
  4107  0008E6  6A24               	clrf	___flmul@grs+3,c
  4108  0008E8  502C               	movf	___flmul@temp+1,w,c
  4109  0008EA  6E27               	movwf	___flmul@prod,c
  4110  0008EC  6A28               	clrf	___flmul@prod+1,c
  4111  0008EE  6A29               	clrf	___flmul@prod+2,c
  4112  0008F0  6A2A               	clrf	___flmul@prod+3,c
  4113  0008F2  5019               	movf	___flmul@a+1,w,c
  4114  0008F4  0215               	mulwf	___flmul@b+1,c
  4115  0008F6  CFF3 F02B          	movff	prodl,___flmul@temp
  4116  0008FA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4117  0008FE  502B               	movf	___flmul@temp,w,c
  4118  000900  2621               	addwf	___flmul@grs,f,c
  4119  000902  0E00               	movlw	0
  4120  000904  2222               	addwfc	___flmul@grs+1,f,c
  4121  000906  2223               	addwfc	___flmul@grs+2,f,c
  4122  000908  2224               	addwfc	___flmul@grs+3,f,c
  4123  00090A  502C               	movf	___flmul@temp+1,w,c
  4124  00090C  2627               	addwf	___flmul@prod,f,c
  4125  00090E  0E00               	movlw	0
  4126  000910  2228               	addwfc	___flmul@prod+1,f,c
  4127  000912  2229               	addwfc	___flmul@prod+2,f,c
  4128  000914  222A               	addwfc	___flmul@prod+3,f,c
  4129  000916  5018               	movf	___flmul@a,w,c
  4130  000918  0216               	mulwf	___flmul@b+2,c
  4131  00091A  CFF3 F02B          	movff	prodl,___flmul@temp
  4132  00091E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4133  000922  502B               	movf	___flmul@temp,w,c
  4134  000924  2621               	addwf	___flmul@grs,f,c
  4135  000926  0E00               	movlw	0
  4136  000928  2222               	addwfc	___flmul@grs+1,f,c
  4137  00092A  2223               	addwfc	___flmul@grs+2,f,c
  4138  00092C  2224               	addwfc	___flmul@grs+3,f,c
  4139  00092E  502C               	movf	___flmul@temp+1,w,c
  4140  000930  2627               	addwf	___flmul@prod,f,c
  4141  000932  0E00               	movlw	0
  4142  000934  2228               	addwfc	___flmul@prod+1,f,c
  4143  000936  2229               	addwfc	___flmul@prod+2,f,c
  4144  000938  222A               	addwfc	___flmul@prod+3,f,c
  4145  00093A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4146  00093E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4147  000942  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4148  000946  6A21               	clrf	___flmul@grs,c
  4149  000948  5018               	movf	___flmul@a,w,c
  4150  00094A  0215               	mulwf	___flmul@b+1,c
  4151  00094C  CFF3 F02B          	movff	prodl,___flmul@temp
  4152  000950  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4153  000954  502B               	movf	___flmul@temp,w,c
  4154  000956  2621               	addwf	___flmul@grs,f,c
  4155  000958  502C               	movf	___flmul@temp+1,w,c
  4156  00095A  2222               	addwfc	___flmul@grs+1,f,c
  4157  00095C  0E00               	movlw	0
  4158  00095E  2223               	addwfc	___flmul@grs+2,f,c
  4159  000960  0E00               	movlw	0
  4160  000962  2224               	addwfc	___flmul@grs+3,f,c
  4161  000964  5019               	movf	___flmul@a+1,w,c
  4162  000966  0214               	mulwf	___flmul@b,c
  4163  000968  CFF3 F02B          	movff	prodl,___flmul@temp
  4164  00096C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4165  000970  502B               	movf	___flmul@temp,w,c
  4166  000972  2621               	addwf	___flmul@grs,f,c
  4167  000974  502C               	movf	___flmul@temp+1,w,c
  4168  000976  2222               	addwfc	___flmul@grs+1,f,c
  4169  000978  0E00               	movlw	0
  4170  00097A  2223               	addwfc	___flmul@grs+2,f,c
  4171  00097C  0E00               	movlw	0
  4172  00097E  2224               	addwfc	___flmul@grs+3,f,c
  4173  000980  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4174  000984  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4175  000988  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4176  00098C  6A21               	clrf	___flmul@grs,c
  4177  00098E  5018               	movf	___flmul@a,w,c
  4178  000990  0214               	mulwf	___flmul@b,c
  4179  000992  CFF3 F02B          	movff	prodl,___flmul@temp
  4180  000996  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4181  00099A  502B               	movf	___flmul@temp,w,c
  4182  00099C  2621               	addwf	___flmul@grs,f,c
  4183  00099E  502C               	movf	___flmul@temp+1,w,c
  4184  0009A0  2222               	addwfc	___flmul@grs+1,f,c
  4185  0009A2  0E00               	movlw	0
  4186  0009A4  2223               	addwfc	___flmul@grs+2,f,c
  4187  0009A6  0E00               	movlw	0
  4188  0009A8  2224               	addwfc	___flmul@grs+3,f,c
  4189  0009AA  501A               	movf	___flmul@a+2,w,c
  4190  0009AC  0215               	mulwf	___flmul@b+1,c
  4191  0009AE  CFF3 F02B          	movff	prodl,___flmul@temp
  4192  0009B2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4193  0009B6  502B               	movf	___flmul@temp,w,c
  4194  0009B8  2627               	addwf	___flmul@prod,f,c
  4195  0009BA  502C               	movf	___flmul@temp+1,w,c
  4196  0009BC  2228               	addwfc	___flmul@prod+1,f,c
  4197  0009BE  0E00               	movlw	0
  4198  0009C0  2229               	addwfc	___flmul@prod+2,f,c
  4199  0009C2  0E00               	movlw	0
  4200  0009C4  222A               	addwfc	___flmul@prod+3,f,c
  4201  0009C6  5019               	movf	___flmul@a+1,w,c
  4202  0009C8  0216               	mulwf	___flmul@b+2,c
  4203  0009CA  CFF3 F02B          	movff	prodl,___flmul@temp
  4204  0009CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4205  0009D2  502B               	movf	___flmul@temp,w,c
  4206  0009D4  2627               	addwf	___flmul@prod,f,c
  4207  0009D6  502C               	movf	___flmul@temp+1,w,c
  4208  0009D8  2228               	addwfc	___flmul@prod+1,f,c
  4209  0009DA  0E00               	movlw	0
  4210  0009DC  2229               	addwfc	___flmul@prod+2,f,c
  4211  0009DE  0E00               	movlw	0
  4212  0009E0  222A               	addwfc	___flmul@prod+3,f,c
  4213  0009E2  501A               	movf	___flmul@a+2,w,c
  4214  0009E4  0216               	mulwf	___flmul@b+2,c
  4215  0009E6  CFF3 F02B          	movff	prodl,___flmul@temp
  4216  0009EA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4217  0009EE  502B               	movf	___flmul@temp,w,c
  4218  0009F0  6E1C               	movwf	??___flmul& (0+255),c
  4219  0009F2  502C               	movf	___flmul@temp+1,w,c
  4220  0009F4  6E1D               	movwf	(??___flmul+1)& (0+255),c
  4221  0009F6  6A1E               	clrf	(??___flmul+2)& (0+255),c
  4222  0009F8  6A1F               	clrf	(??___flmul+3)& (0+255),c
  4223  0009FA  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  4224  0009FE  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  4225  000A02  C01C  F01D         	movff	??___flmul,??___flmul+1
  4226  000A06  6A1C               	clrf	??___flmul,c
  4227  000A08  501C               	movf	??___flmul,w,c
  4228  000A0A  2627               	addwf	___flmul@prod,f,c
  4229  000A0C  501D               	movf	??___flmul+1,w,c
  4230  000A0E  2228               	addwfc	___flmul@prod+1,f,c
  4231  000A10  501E               	movf	??___flmul+2,w,c
  4232  000A12  2229               	addwfc	___flmul@prod+2,f,c
  4233  000A14  501F               	movf	??___flmul+3,w,c
  4234  000A16  222A               	addwfc	___flmul@prod+3,f,c
  4235  000A18  C021  F01C         	movff	___flmul@grs,??___flmul
  4236  000A1C  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  4237  000A20  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  4238  000A24  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  4239  000A28  0E19               	movlw	25
  4240  000A2A  D005               	goto	u3630
  4241  000A2C                     u3635:
  4242  000A2C  90D8               	bcf	status,0,c
  4243  000A2E  321F               	rrcf	??___flmul+3,f,c
  4244  000A30  321E               	rrcf	??___flmul+2,f,c
  4245  000A32  321D               	rrcf	??___flmul+1,f,c
  4246  000A34  321C               	rrcf	??___flmul,f,c
  4247  000A36                     u3630:
  4248  000A36  2EE8               	decfsz	wreg,f,c
  4249  000A38  D7F9               	goto	u3635
  4250  000A3A  501C               	movf	??___flmul,w,c
  4251  000A3C  2627               	addwf	___flmul@prod,f,c
  4252  000A3E  501D               	movf	??___flmul+1,w,c
  4253  000A40  2228               	addwfc	___flmul@prod+1,f,c
  4254  000A42  501E               	movf	??___flmul+2,w,c
  4255  000A44  2229               	addwfc	___flmul@prod+2,f,c
  4256  000A46  501F               	movf	??___flmul+3,w,c
  4257  000A48  222A               	addwfc	___flmul@prod+3,f,c
  4258  000A4A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4259  000A4E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4260  000A52  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4261  000A56  6A21               	clrf	___flmul@grs,c
  4262  000A58  5025               	movf	___flmul@aexp,w,c
  4263  000A5A  C026  F01C         	movff	___flmul@bexp,??___flmul
  4264  000A5E  6A1D               	clrf	(??___flmul+1)& (0+255),c
  4265  000A60  261C               	addwf	??___flmul,f,c
  4266  000A62  0E00               	movlw	0
  4267  000A64  221D               	addwfc	??___flmul+1,f,c
  4268  000A66  0E82               	movlw	130
  4269  000A68  241C               	addwf	??___flmul,w,c
  4270  000A6A  6E2B               	movwf	___flmul@temp,c
  4271  000A6C  0EFF               	movlw	255
  4272  000A6E  201D               	addwfc	??___flmul+1,w,c
  4273  000A70  6E2C               	movwf	___flmul@temp+1,c
  4274  000A72  D00F               	goto	l3973
  4275  000A74                     l3967:
  4276  000A74  90D8               	bcf	status,0,c
  4277  000A76  3627               	rlcf	___flmul@prod,f,c
  4278  000A78  3628               	rlcf	___flmul@prod+1,f,c
  4279  000A7A  3629               	rlcf	___flmul@prod+2,f,c
  4280  000A7C  362A               	rlcf	___flmul@prod+3,f,c
  4281  000A7E  BE24               	btfsc	___flmul@grs+3,7,c
  4282  000A80  8027               	bsf	___flmul@prod,0,c
  4283  000A82  90D8               	bcf	status,0,c
  4284  000A84  3621               	rlcf	___flmul@grs,f,c
  4285  000A86  3622               	rlcf	___flmul@grs+1,f,c
  4286  000A88  3623               	rlcf	___flmul@grs+2,f,c
  4287  000A8A  3624               	rlcf	___flmul@grs+3,f,c
  4288  000A8C  062B               	decf	___flmul@temp,f,c
  4289  000A8E  A0D8               	btfss	status,0,c
  4290  000A90  062C               	decf	___flmul@temp+1,f,c
  4291  000A92                     l3973:
  4292  000A92  AE29               	btfss	___flmul@prod+2,7,c
  4293  000A94  D7EF               	goto	l3967
  4294  000A96  0E00               	movlw	0
  4295  000A98  6E25               	movwf	___flmul@aexp,c
  4296  000A9A  AE24               	btfss	___flmul@grs+3,7,c
  4297  000A9C  D017               	goto	l1177
  4298  000A9E  0EFF               	movlw	255
  4299  000AA0  1421               	andwf	___flmul@grs,w,c
  4300  000AA2  6E1C               	movwf	??___flmul& (0+255),c
  4301  000AA4  0EFF               	movlw	255
  4302  000AA6  1422               	andwf	___flmul@grs+1,w,c
  4303  000AA8  6E1D               	movwf	(??___flmul+1)& (0+255),c
  4304  000AAA  0EFF               	movlw	255
  4305  000AAC  1423               	andwf	___flmul@grs+2,w,c
  4306  000AAE  6E1E               	movwf	(??___flmul+2)& (0+255),c
  4307  000AB0  0E7F               	movlw	127
  4308  000AB2  1424               	andwf	___flmul@grs+3,w,c
  4309  000AB4  6E1F               	movwf	(??___flmul+3)& (0+255),c
  4310  000AB6  501C               	movf	??___flmul,w,c
  4311  000AB8  101D               	iorwf	??___flmul+1,w,c
  4312  000ABA  101E               	iorwf	??___flmul+2,w,c
  4313  000ABC  101F               	iorwf	??___flmul+3,w,c
  4314  000ABE  B4D8               	btfsc	status,2,c
  4315  000AC0  D003               	goto	l1178
  4316  000AC2                     u3670:
  4317  000AC2  0E01               	movlw	1
  4318  000AC4  6E25               	movwf	___flmul@aexp,c
  4319  000AC6  D002               	goto	l1177
  4320  000AC8                     l1178:
  4321  000AC8  B027               	btfsc	___flmul@prod,0,c
  4322  000ACA  D7FB               	goto	u3670
  4323  000ACC                     l1177:
  4324  000ACC  5025               	movf	___flmul@aexp,w,c
  4325  000ACE  B4D8               	btfsc	status,2,c
  4326  000AD0  D01F               	goto	l3993
  4327  000AD2  0E01               	movlw	1
  4328  000AD4  2627               	addwf	___flmul@prod,f,c
  4329  000AD6  0E00               	movlw	0
  4330  000AD8  2228               	addwfc	___flmul@prod+1,f,c
  4331  000ADA  2229               	addwfc	___flmul@prod+2,f,c
  4332  000ADC  222A               	addwfc	___flmul@prod+3,f,c
  4333  000ADE  A02A               	btfss	___flmul@prod+3,0,c
  4334  000AE0  D017               	goto	l3993
  4335  000AE2  C027  F01C         	movff	___flmul@prod,??___flmul
  4336  000AE6  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  4337  000AEA  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  4338  000AEE  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  4339  000AF2  341F               	rlcf	??___flmul+3,w,c
  4340  000AF4  321F               	rrcf	??___flmul+3,f,c
  4341  000AF6  321E               	rrcf	??___flmul+2,f,c
  4342  000AF8  321D               	rrcf	??___flmul+1,f,c
  4343  000AFA  321C               	rrcf	??___flmul,f,c
  4344  000AFC  C01C  F027         	movff	??___flmul,___flmul@prod
  4345  000B00  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  4346  000B04  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  4347  000B08  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  4348  000B0C  4A2B               	infsnz	___flmul@temp,f,c
  4349  000B0E  2A2C               	incf	___flmul@temp+1,f,c
  4350  000B10                     l3993:
  4351  000B10  BE2C               	btfsc	___flmul@temp+1,7,c
  4352  000B12  D00D               	goto	l3997
  4353  000B14  502C               	movf	___flmul@temp+1,w,c
  4354  000B16  E103               	bnz	u3710
  4355  000B18  282B               	incf	___flmul@temp,w,c
  4356  000B1A  A0D8               	btfss	status,0,c
  4357  000B1C  D008               	goto	l3997
  4358  000B1E                     u3710:
  4359  000B1E  0E00               	movlw	0
  4360  000B20  6E27               	movwf	___flmul@prod,c
  4361  000B22  0E00               	movlw	0
  4362  000B24  6E28               	movwf	___flmul@prod+1,c
  4363  000B26  0E80               	movlw	128
  4364  000B28  6E29               	movwf	___flmul@prod+2,c
  4365  000B2A  0E7F               	movlw	127
  4366  000B2C  D020               	goto	L9
  4367  000B2E                     l3997:
  4368  000B2E  BE2C               	btfsc	___flmul@temp+1,7,c
  4369  000B30  D005               	goto	u3720
  4370  000B32  502C               	movf	___flmul@temp+1,w,c
  4371  000B34  E10E               	bnz	l1185
  4372  000B36  042B               	decf	___flmul@temp,w,c
  4373  000B38  B0D8               	btfsc	status,0,c
  4374  000B3A  D00B               	goto	l1185
  4375  000B3C                     u3720:
  4376  000B3C  0E00               	movlw	0
  4377  000B3E  6E27               	movwf	___flmul@prod,c
  4378  000B40  0E00               	movlw	0
  4379  000B42  6E28               	movwf	___flmul@prod+1,c
  4380  000B44  0E00               	movlw	0
  4381  000B46  6E29               	movwf	___flmul@prod+2,c
  4382  000B48  0E00               	movlw	0
  4383  000B4A  6E2A               	movwf	___flmul@prod+3,c
  4384  000B4C  0E00               	movlw	0
  4385  000B4E  6E20               	movwf	___flmul@sign,c
  4386  000B50  D00F               	goto	l4009
  4387  000B52                     l1185:
  4388  000B52  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  4389  000B56  0EFF               	movlw	255
  4390  000B58  1627               	andwf	___flmul@prod,f,c
  4391  000B5A  0EFF               	movlw	255
  4392  000B5C  1628               	andwf	___flmul@prod+1,f,c
  4393  000B5E  0E7F               	movlw	127
  4394  000B60  1629               	andwf	___flmul@prod+2,f,c
  4395  000B62  0E00               	movlw	0
  4396  000B64  162A               	andwf	___flmul@prod+3,f,c
  4397  000B66  B026               	btfsc	___flmul@bexp,0,c
  4398  000B68  8E29               	bsf	___flmul@prod+2,7,c
  4399  000B6A  90D8               	bcf	status,0,c
  4400  000B6C  3026               	rrcf	___flmul@bexp,w,c
  4401  000B6E                     L9:
  4402  000B6E  6E2A               	movwf	___flmul@prod+3,c
  4403  000B70                     l4009:
  4404  000B70  5020               	movf	___flmul@sign,w,c
  4405  000B72  122A               	iorwf	___flmul@prod+3,f,c
  4406  000B74  C027  F014         	movff	___flmul@prod,?___flmul
  4407  000B78  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  4408  000B7C  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  4409  000B80  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  4410  000B84  0012               	return		;funcret
  4411  000B86                     __end_of___flmul:
  4412                           	opt callstack 0
  4413                           
  4414 ;; *************** function ___flge *****************
  4415 ;; Defined at:
  4416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  ff1             4    5[COMRAM] unsigned char 
  4419 ;;  ff2             4    9[COMRAM] unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:       12 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_set_pwm_duty_cycle
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text13
  4446  001EBA                     __ptext13:
  4447                           	opt callstack 0
  4448  001EBA                     ___flge:
  4449                           	opt callstack 25
  4450                           
  4451                           ;incstack = 0
  4452  001EBA  0E00               	movlw	0
  4453  001EBC  1406               	andwf	___flge@ff1,w,c
  4454  001EBE  6E0E               	movwf	??___flge& (0+255),c
  4455  001EC0  0E00               	movlw	0
  4456  001EC2  1407               	andwf	___flge@ff1+1,w,c
  4457  001EC4  6E0F               	movwf	(??___flge+1)& (0+255),c
  4458  001EC6  0E80               	movlw	128
  4459  001EC8  1408               	andwf	___flge@ff1+2,w,c
  4460  001ECA  6E10               	movwf	(??___flge+2)& (0+255),c
  4461  001ECC  0E7F               	movlw	127
  4462  001ECE  1409               	andwf	___flge@ff1+3,w,c
  4463  001ED0  6E11               	movwf	(??___flge+3)& (0+255),c
  4464  001ED2  500E               	movf	??___flge,w,c
  4465  001ED4  100F               	iorwf	??___flge+1,w,c
  4466  001ED6  1010               	iorwf	??___flge+2,w,c
  4467  001ED8  1011               	iorwf	??___flge+3,w,c
  4468  001EDA  A4D8               	btfss	status,2,c
  4469  001EDC  D008               	goto	l4019
  4470  001EDE  0E00               	movlw	0
  4471  001EE0  6E06               	movwf	___flge@ff1,c
  4472  001EE2  0E00               	movlw	0
  4473  001EE4  6E07               	movwf	___flge@ff1+1,c
  4474  001EE6  0E00               	movlw	0
  4475  001EE8  6E08               	movwf	___flge@ff1+2,c
  4476  001EEA  0E00               	movlw	0
  4477  001EEC  6E09               	movwf	___flge@ff1+3,c
  4478  001EEE                     l4019:
  4479  001EEE  0E00               	movlw	0
  4480  001EF0  140A               	andwf	___flge@ff2,w,c
  4481  001EF2  6E0E               	movwf	??___flge& (0+255),c
  4482  001EF4  0E00               	movlw	0
  4483  001EF6  140B               	andwf	___flge@ff2+1,w,c
  4484  001EF8  6E0F               	movwf	(??___flge+1)& (0+255),c
  4485  001EFA  0E80               	movlw	128
  4486  001EFC  140C               	andwf	___flge@ff2+2,w,c
  4487  001EFE  6E10               	movwf	(??___flge+2)& (0+255),c
  4488  001F00  0E7F               	movlw	127
  4489  001F02  140D               	andwf	___flge@ff2+3,w,c
  4490  001F04  6E11               	movwf	(??___flge+3)& (0+255),c
  4491  001F06  500E               	movf	??___flge,w,c
  4492  001F08  100F               	iorwf	??___flge+1,w,c
  4493  001F0A  1010               	iorwf	??___flge+2,w,c
  4494  001F0C  1011               	iorwf	??___flge+3,w,c
  4495  001F0E  A4D8               	btfss	status,2,c
  4496  001F10  D008               	goto	l4023
  4497  001F12  0E00               	movlw	0
  4498  001F14  6E0A               	movwf	___flge@ff2,c
  4499  001F16  0E00               	movlw	0
  4500  001F18  6E0B               	movwf	___flge@ff2+1,c
  4501  001F1A  0E00               	movlw	0
  4502  001F1C  6E0C               	movwf	___flge@ff2+2,c
  4503  001F1E  0E00               	movlw	0
  4504  001F20  6E0D               	movwf	___flge@ff2+3,c
  4505  001F22                     l4023:
  4506  001F22  AE09               	btfss	___flge@ff1+3,7,c
  4507  001F24  D009               	goto	l4027
  4508  001F26  6C06               	negf	___flge@ff1,c
  4509  001F28  1E07               	comf	___flge@ff1+1,f,c
  4510  001F2A  B0D8               	btfsc	status,0,c
  4511  001F2C  2A07               	incf	___flge@ff1+1,f,c
  4512  001F2E  1E08               	comf	___flge@ff1+2,f,c
  4513  001F30  B0D8               	btfsc	status,0,c
  4514  001F32  2A08               	incf	___flge@ff1+2,f,c
  4515  001F34  0E80               	movlw	128
  4516  001F36  5609               	subfwb	___flge@ff1+3,f,c
  4517  001F38                     l4027:
  4518  001F38  AE0D               	btfss	___flge@ff2+3,7,c
  4519  001F3A  D009               	goto	l819
  4520  001F3C  6C0A               	negf	___flge@ff2,c
  4521  001F3E  1E0B               	comf	___flge@ff2+1,f,c
  4522  001F40  B0D8               	btfsc	status,0,c
  4523  001F42  2A0B               	incf	___flge@ff2+1,f,c
  4524  001F44  1E0C               	comf	___flge@ff2+2,f,c
  4525  001F46  B0D8               	btfsc	status,0,c
  4526  001F48  2A0C               	incf	___flge@ff2+2,f,c
  4527  001F4A  0E80               	movlw	128
  4528  001F4C  560D               	subfwb	___flge@ff2+3,f,c
  4529  001F4E                     l819:
  4530  001F4E  0E00               	movlw	0
  4531  001F50  1A06               	xorwf	___flge@ff1,f,c
  4532  001F52  0E00               	movlw	0
  4533  001F54  1A07               	xorwf	___flge@ff1+1,f,c
  4534  001F56  0E00               	movlw	0
  4535  001F58  1A08               	xorwf	___flge@ff1+2,f,c
  4536  001F5A  0E80               	movlw	128
  4537  001F5C  1A09               	xorwf	___flge@ff1+3,f,c
  4538  001F5E  0E00               	movlw	0
  4539  001F60  1A0A               	xorwf	___flge@ff2,f,c
  4540  001F62  0E00               	movlw	0
  4541  001F64  1A0B               	xorwf	___flge@ff2+1,f,c
  4542  001F66  0E00               	movlw	0
  4543  001F68  1A0C               	xorwf	___flge@ff2+2,f,c
  4544  001F6A  0E80               	movlw	128
  4545  001F6C  1A0D               	xorwf	___flge@ff2+3,f,c
  4546  001F6E  500A               	movf	___flge@ff2,w,c
  4547  001F70  5C06               	subwf	___flge@ff1,w,c
  4548  001F72  500B               	movf	___flge@ff2+1,w,c
  4549  001F74  5807               	subwfb	___flge@ff1+1,w,c
  4550  001F76  500C               	movf	___flge@ff2+2,w,c
  4551  001F78  5808               	subwfb	___flge@ff1+2,w,c
  4552  001F7A  500D               	movf	___flge@ff2+3,w,c
  4553  001F7C  5809               	subwfb	___flge@ff1+3,w,c
  4554  001F7E  B0D8               	btfsc	status,0,c
  4555  001F80  D002               	goto	l4033
  4556  001F82  90D8               	bcf	status,0,c
  4557  001F84  0012               	return	
  4558  001F86                     l4033:
  4559  001F86  80D8               	bsf	status,0,c
  4560  001F88  0012               	return		;funcret
  4561  001F8A                     __end_of___flge:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function ___fldiv *****************
  4565 ;; Defined at:
  4566 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  b               4   44[COMRAM] unsigned char 
  4569 ;;  a               4   48[COMRAM] unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  grs             4   63[COMRAM] unsigned long 
  4572 ;;  rem             4   56[COMRAM] unsigned long 
  4573 ;;  new_exp         2   61[COMRAM] short 
  4574 ;;  aexp            1   68[COMRAM] unsigned char 
  4575 ;;  bexp            1   67[COMRAM] unsigned char 
  4576 ;;  sign            1   60[COMRAM] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  4   44[COMRAM] unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4586 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;Total ram usage:       25 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    2
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_set_pwm_duty_cycle
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text14
  4601  000B86                     __ptext14:
  4602                           	opt callstack 0
  4603  000B86                     ___fldiv:
  4604                           	opt callstack 25
  4605                           
  4606                           ;incstack = 0
  4607  000B86  5030               	movf	___fldiv@b+3,w,c
  4608  000B88  0B80               	andlw	128
  4609  000B8A  6E3D               	movwf	___fldiv@sign,c
  4610  000B8C  5030               	movf	___fldiv@b+3,w,c
  4611  000B8E  2430               	addwf	___fldiv@b+3,w,c
  4612  000B90  6E44               	movwf	___fldiv@bexp,c
  4613  000B92  BE2F               	btfsc	___fldiv@b+2,7,c
  4614  000B94  8044               	bsf	___fldiv@bexp,0,c
  4615  000B96  5044               	movf	___fldiv@bexp,w,c
  4616  000B98  B4D8               	btfsc	status,2,c
  4617  000B9A  D00D               	goto	l3763
  4618  000B9C  2844               	incf	___fldiv@bexp,w,c
  4619  000B9E  A4D8               	btfss	status,2,c
  4620  000BA0  D008               	goto	l3759
  4621  000BA2  0E00               	movlw	0
  4622  000BA4  6E2D               	movwf	___fldiv@b,c
  4623  000BA6  0E00               	movlw	0
  4624  000BA8  6E2E               	movwf	___fldiv@b+1,c
  4625  000BAA  0E00               	movlw	0
  4626  000BAC  6E2F               	movwf	___fldiv@b+2,c
  4627  000BAE  0E00               	movlw	0
  4628  000BB0  6E30               	movwf	___fldiv@b+3,c
  4629  000BB2                     l3759:
  4630  000BB2  8E2F               	bsf	___fldiv@b+2,7,c
  4631  000BB4  D006               	goto	L10
  4632  000BB6                     l3763:
  4633  000BB6  0E00               	movlw	0
  4634  000BB8  6E2D               	movwf	___fldiv@b,c
  4635  000BBA  0E00               	movlw	0
  4636  000BBC  6E2E               	movwf	___fldiv@b+1,c
  4637  000BBE  0E00               	movlw	0
  4638  000BC0  6E2F               	movwf	___fldiv@b+2,c
  4639  000BC2                     L10:
  4640  000BC2  0E00               	movlw	0
  4641  000BC4  6E30               	movwf	___fldiv@b+3,c
  4642  000BC6  5034               	movf	___fldiv@a+3,w,c
  4643  000BC8  0B80               	andlw	128
  4644  000BCA  1A3D               	xorwf	___fldiv@sign,f,c
  4645  000BCC  5034               	movf	___fldiv@a+3,w,c
  4646  000BCE  2434               	addwf	___fldiv@a+3,w,c
  4647  000BD0  6E45               	movwf	___fldiv@aexp,c
  4648  000BD2  BE33               	btfsc	___fldiv@a+2,7,c
  4649  000BD4  8045               	bsf	___fldiv@aexp,0,c
  4650  000BD6  5045               	movf	___fldiv@aexp,w,c
  4651  000BD8  B4D8               	btfsc	status,2,c
  4652  000BDA  D00D               	goto	l3783
  4653  000BDC  2845               	incf	___fldiv@aexp,w,c
  4654  000BDE  A4D8               	btfss	status,2,c
  4655  000BE0  D008               	goto	l3779
  4656  000BE2  0E00               	movlw	0
  4657  000BE4  6E31               	movwf	___fldiv@a,c
  4658  000BE6  0E00               	movlw	0
  4659  000BE8  6E32               	movwf	___fldiv@a+1,c
  4660  000BEA  0E00               	movlw	0
  4661  000BEC  6E33               	movwf	___fldiv@a+2,c
  4662  000BEE  0E00               	movlw	0
  4663  000BF0  6E34               	movwf	___fldiv@a+3,c
  4664  000BF2                     l3779:
  4665  000BF2  8E33               	bsf	___fldiv@a+2,7,c
  4666  000BF4  D006               	goto	L11
  4667  000BF6                     l3783:
  4668  000BF6  0E00               	movlw	0
  4669  000BF8  6E31               	movwf	___fldiv@a,c
  4670  000BFA  0E00               	movlw	0
  4671  000BFC  6E32               	movwf	___fldiv@a+1,c
  4672  000BFE  0E00               	movlw	0
  4673  000C00  6E33               	movwf	___fldiv@a+2,c
  4674  000C02                     L11:
  4675  000C02  0E00               	movlw	0
  4676  000C04  6E34               	movwf	___fldiv@a+3,c
  4677  000C06  5031               	movf	___fldiv@a,w,c
  4678  000C08  1032               	iorwf	___fldiv@a+1,w,c
  4679  000C0A  1033               	iorwf	___fldiv@a+2,w,c
  4680  000C0C  1034               	iorwf	___fldiv@a+3,w,c
  4681  000C0E  A4D8               	btfss	status,2,c
  4682  000C10  D017               	goto	l3797
  4683  000C12  0E00               	movlw	0
  4684  000C14  6E2D               	movwf	___fldiv@b,c
  4685  000C16  0E00               	movlw	0
  4686  000C18  6E2E               	movwf	___fldiv@b+1,c
  4687  000C1A  0E00               	movlw	0
  4688  000C1C  6E2F               	movwf	___fldiv@b+2,c
  4689  000C1E  0E00               	movlw	0
  4690  000C20  6E30               	movwf	___fldiv@b+3,c
  4691  000C22  0E80               	movlw	128
  4692  000C24  122F               	iorwf	___fldiv@b+2,f,c
  4693  000C26  0E7F               	movlw	127
  4694  000C28  1230               	iorwf	___fldiv@b+3,f,c
  4695  000C2A                     l3791:
  4696  000C2A  503D               	movf	___fldiv@sign,w,c
  4697  000C2C  1230               	iorwf	___fldiv@b+3,f,c
  4698  000C2E  C02D  F02D         	movff	___fldiv@b,?___fldiv
  4699  000C32  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  4700  000C36  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  4701  000C3A  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  4702  000C3E  0012               	return	
  4703  000C40                     l3797:
  4704  000C40  5044               	movf	___fldiv@bexp,w,c
  4705  000C42  A4D8               	btfss	status,2,c
  4706  000C44  D009               	goto	l3805
  4707  000C46  0E00               	movlw	0
  4708  000C48  6E2D               	movwf	?___fldiv,c
  4709  000C4A  0E00               	movlw	0
  4710  000C4C  6E2E               	movwf	?___fldiv+1,c
  4711  000C4E  0E00               	movlw	0
  4712  000C50  6E2F               	movwf	?___fldiv+2,c
  4713  000C52  0E00               	movlw	0
  4714  000C54  6E30               	movwf	?___fldiv+3,c
  4715  000C56  0012               	return	
  4716  000C58                     l3805:
  4717  000C58  5045               	movf	___fldiv@aexp,w,c
  4718  000C5A  C044  F035         	movff	___fldiv@bexp,??___fldiv
  4719  000C5E  6A36               	clrf	(??___fldiv+1)& (0+255),c
  4720  000C60  5E35               	subwf	??___fldiv,f,c
  4721  000C62  0E00               	movlw	0
  4722  000C64  5A36               	subwfb	??___fldiv+1,f,c
  4723  000C66  0E7F               	movlw	127
  4724  000C68  2435               	addwf	??___fldiv,w,c
  4725  000C6A  6E3E               	movwf	___fldiv@new_exp,c
  4726  000C6C  0E00               	movlw	0
  4727  000C6E  2036               	addwfc	??___fldiv+1,w,c
  4728  000C70  6E3F               	movwf	___fldiv@new_exp+1,c
  4729  000C72  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  4730  000C76  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  4731  000C7A  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  4732  000C7E  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  4733  000C82  0E00               	movlw	0
  4734  000C84  6E2D               	movwf	___fldiv@b,c
  4735  000C86  0E00               	movlw	0
  4736  000C88  6E2E               	movwf	___fldiv@b+1,c
  4737  000C8A  0E00               	movlw	0
  4738  000C8C  6E2F               	movwf	___fldiv@b+2,c
  4739  000C8E  0E00               	movlw	0
  4740  000C90  6E30               	movwf	___fldiv@b+3,c
  4741  000C92  0E00               	movlw	0
  4742  000C94  6E40               	movwf	___fldiv@grs,c
  4743  000C96  0E00               	movlw	0
  4744  000C98  6E41               	movwf	___fldiv@grs+1,c
  4745  000C9A  0E00               	movlw	0
  4746  000C9C  6E42               	movwf	___fldiv@grs+2,c
  4747  000C9E  0E00               	movlw	0
  4748  000CA0  6E43               	movwf	___fldiv@grs+3,c
  4749  000CA2  0E00               	movlw	0
  4750  000CA4  6E45               	movwf	___fldiv@aexp,c
  4751  000CA6  D028               	goto	l1138
  4752  000CA8                     l3815:
  4753  000CA8  5045               	movf	___fldiv@aexp,w,c
  4754  000CAA  B4D8               	btfsc	status,2,c
  4755  000CAC  D011               	goto	l3823
  4756  000CAE  90D8               	bcf	status,0,c
  4757  000CB0  3639               	rlcf	___fldiv@rem,f,c
  4758  000CB2  363A               	rlcf	___fldiv@rem+1,f,c
  4759  000CB4  363B               	rlcf	___fldiv@rem+2,f,c
  4760  000CB6  363C               	rlcf	___fldiv@rem+3,f,c
  4761  000CB8  90D8               	bcf	status,0,c
  4762  000CBA  362D               	rlcf	___fldiv@b,f,c
  4763  000CBC  362E               	rlcf	___fldiv@b+1,f,c
  4764  000CBE  362F               	rlcf	___fldiv@b+2,f,c
  4765  000CC0  3630               	rlcf	___fldiv@b+3,f,c
  4766  000CC2  BE43               	btfsc	___fldiv@grs+3,7,c
  4767  000CC4  802D               	bsf	___fldiv@b,0,c
  4768  000CC6  90D8               	bcf	status,0,c
  4769  000CC8  3640               	rlcf	___fldiv@grs,f,c
  4770  000CCA  3641               	rlcf	___fldiv@grs+1,f,c
  4771  000CCC  3642               	rlcf	___fldiv@grs+2,f,c
  4772  000CCE  3643               	rlcf	___fldiv@grs+3,f,c
  4773  000CD0                     l3823:
  4774  000CD0  5031               	movf	___fldiv@a,w,c
  4775  000CD2  5C39               	subwf	___fldiv@rem,w,c
  4776  000CD4  5032               	movf	___fldiv@a+1,w,c
  4777  000CD6  583A               	subwfb	___fldiv@rem+1,w,c
  4778  000CD8  5033               	movf	___fldiv@a+2,w,c
  4779  000CDA  583B               	subwfb	___fldiv@rem+2,w,c
  4780  000CDC  5034               	movf	___fldiv@a+3,w,c
  4781  000CDE  583C               	subwfb	___fldiv@rem+3,w,c
  4782  000CE0  A0D8               	btfss	status,0,c
  4783  000CE2  D009               	goto	l3829
  4784  000CE4  8C43               	bsf	___fldiv@grs+3,6,c
  4785  000CE6  5031               	movf	___fldiv@a,w,c
  4786  000CE8  5E39               	subwf	___fldiv@rem,f,c
  4787  000CEA  5032               	movf	___fldiv@a+1,w,c
  4788  000CEC  5A3A               	subwfb	___fldiv@rem+1,f,c
  4789  000CEE  5033               	movf	___fldiv@a+2,w,c
  4790  000CF0  5A3B               	subwfb	___fldiv@rem+2,f,c
  4791  000CF2  5034               	movf	___fldiv@a+3,w,c
  4792  000CF4  5A3C               	subwfb	___fldiv@rem+3,f,c
  4793  000CF6                     l3829:
  4794  000CF6  2A45               	incf	___fldiv@aexp,f,c
  4795  000CF8                     l1138:
  4796  000CF8  0E19               	movlw	25
  4797  000CFA  6445               	cpfsgt	___fldiv@aexp,c
  4798  000CFC  D7D5               	goto	l3815
  4799  000CFE  5039               	movf	___fldiv@rem,w,c
  4800  000D00  103A               	iorwf	___fldiv@rem+1,w,c
  4801  000D02  103B               	iorwf	___fldiv@rem+2,w,c
  4802  000D04  103C               	iorwf	___fldiv@rem+3,w,c
  4803  000D06  B4D8               	btfsc	status,2,c
  4804  000D08  D011               	goto	l3841
  4805  000D0A  8040               	bsf	___fldiv@grs,0,c
  4806  000D0C  D00F               	goto	l3841
  4807  000D0E                     l3835:
  4808  000D0E  90D8               	bcf	status,0,c
  4809  000D10  362D               	rlcf	___fldiv@b,f,c
  4810  000D12  362E               	rlcf	___fldiv@b+1,f,c
  4811  000D14  362F               	rlcf	___fldiv@b+2,f,c
  4812  000D16  3630               	rlcf	___fldiv@b+3,f,c
  4813  000D18  BE43               	btfsc	___fldiv@grs+3,7,c
  4814  000D1A  802D               	bsf	___fldiv@b,0,c
  4815  000D1C  90D8               	bcf	status,0,c
  4816  000D1E  3640               	rlcf	___fldiv@grs,f,c
  4817  000D20  3641               	rlcf	___fldiv@grs+1,f,c
  4818  000D22  3642               	rlcf	___fldiv@grs+2,f,c
  4819  000D24  3643               	rlcf	___fldiv@grs+3,f,c
  4820  000D26  063E               	decf	___fldiv@new_exp,f,c
  4821  000D28  A0D8               	btfss	status,0,c
  4822  000D2A  063F               	decf	___fldiv@new_exp+1,f,c
  4823  000D2C                     l3841:
  4824  000D2C  AE2F               	btfss	___fldiv@b+2,7,c
  4825  000D2E  D7EF               	goto	l3835
  4826  000D30  0E00               	movlw	0
  4827  000D32  6E45               	movwf	___fldiv@aexp,c
  4828  000D34  AE43               	btfss	___fldiv@grs+3,7,c
  4829  000D36  D017               	goto	l1149
  4830  000D38  0EFF               	movlw	255
  4831  000D3A  1440               	andwf	___fldiv@grs,w,c
  4832  000D3C  6E35               	movwf	??___fldiv& (0+255),c
  4833  000D3E  0EFF               	movlw	255
  4834  000D40  1441               	andwf	___fldiv@grs+1,w,c
  4835  000D42  6E36               	movwf	(??___fldiv+1)& (0+255),c
  4836  000D44  0EFF               	movlw	255
  4837  000D46  1442               	andwf	___fldiv@grs+2,w,c
  4838  000D48  6E37               	movwf	(??___fldiv+2)& (0+255),c
  4839  000D4A  0E7F               	movlw	127
  4840  000D4C  1443               	andwf	___fldiv@grs+3,w,c
  4841  000D4E  6E38               	movwf	(??___fldiv+3)& (0+255),c
  4842  000D50  5035               	movf	??___fldiv,w,c
  4843  000D52  1036               	iorwf	??___fldiv+1,w,c
  4844  000D54  1037               	iorwf	??___fldiv+2,w,c
  4845  000D56  1038               	iorwf	??___fldiv+3,w,c
  4846  000D58  B4D8               	btfsc	status,2,c
  4847  000D5A  D003               	goto	l1150
  4848  000D5C                     u3480:
  4849  000D5C  0E01               	movlw	1
  4850  000D5E  6E45               	movwf	___fldiv@aexp,c
  4851  000D60  D002               	goto	l1149
  4852  000D62                     l1150:
  4853  000D62  B02D               	btfsc	___fldiv@b,0,c
  4854  000D64  D7FB               	goto	u3480
  4855  000D66                     l1149:
  4856  000D66  5045               	movf	___fldiv@aexp,w,c
  4857  000D68  B4D8               	btfsc	status,2,c
  4858  000D6A  D01F               	goto	l3861
  4859  000D6C  0E01               	movlw	1
  4860  000D6E  262D               	addwf	___fldiv@b,f,c
  4861  000D70  0E00               	movlw	0
  4862  000D72  222E               	addwfc	___fldiv@b+1,f,c
  4863  000D74  222F               	addwfc	___fldiv@b+2,f,c
  4864  000D76  2230               	addwfc	___fldiv@b+3,f,c
  4865  000D78  A030               	btfss	___fldiv@b+3,0,c
  4866  000D7A  D017               	goto	l3861
  4867  000D7C  C02D  F035         	movff	___fldiv@b,??___fldiv
  4868  000D80  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  4869  000D84  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  4870  000D88  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  4871  000D8C  3438               	rlcf	??___fldiv+3,w,c
  4872  000D8E  3238               	rrcf	??___fldiv+3,f,c
  4873  000D90  3237               	rrcf	??___fldiv+2,f,c
  4874  000D92  3236               	rrcf	??___fldiv+1,f,c
  4875  000D94  3235               	rrcf	??___fldiv,f,c
  4876  000D96  C035  F02D         	movff	??___fldiv,___fldiv@b
  4877  000D9A  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  4878  000D9E  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  4879  000DA2  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  4880  000DA6  4A3E               	infsnz	___fldiv@new_exp,f,c
  4881  000DA8  2A3F               	incf	___fldiv@new_exp+1,f,c
  4882  000DAA                     l3861:
  4883  000DAA  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  4884  000DAC  D010               	goto	l3865
  4885  000DAE  503F               	movf	___fldiv@new_exp+1,w,c
  4886  000DB0  E103               	bnz	u3520
  4887  000DB2  283E               	incf	___fldiv@new_exp,w,c
  4888  000DB4  A0D8               	btfss	status,0,c
  4889  000DB6  D00B               	goto	l3865
  4890  000DB8                     u3520:
  4891  000DB8  0E00               	movlw	0
  4892  000DBA  6E3F               	movwf	___fldiv@new_exp+1,c
  4893  000DBC  683E               	setf	___fldiv@new_exp,c
  4894  000DBE  0E00               	movlw	0
  4895  000DC0  6E2D               	movwf	___fldiv@b,c
  4896  000DC2  0E00               	movlw	0
  4897  000DC4  6E2E               	movwf	___fldiv@b+1,c
  4898  000DC6  0E00               	movlw	0
  4899  000DC8  6E2F               	movwf	___fldiv@b+2,c
  4900  000DCA  0E00               	movlw	0
  4901  000DCC  6E30               	movwf	___fldiv@b+3,c
  4902  000DCE                     l3865:
  4903  000DCE  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  4904  000DD0  D005               	goto	u3530
  4905  000DD2  503F               	movf	___fldiv@new_exp+1,w,c
  4906  000DD4  E111               	bnz	l3869
  4907  000DD6  043E               	decf	___fldiv@new_exp,w,c
  4908  000DD8  B0D8               	btfsc	status,0,c
  4909  000DDA  D00E               	goto	l3869
  4910  000DDC                     u3530:
  4911  000DDC  0E00               	movlw	0
  4912  000DDE  6E3F               	movwf	___fldiv@new_exp+1,c
  4913  000DE0  0E00               	movlw	0
  4914  000DE2  6E3E               	movwf	___fldiv@new_exp,c
  4915  000DE4  0E00               	movlw	0
  4916  000DE6  6E2D               	movwf	___fldiv@b,c
  4917  000DE8  0E00               	movlw	0
  4918  000DEA  6E2E               	movwf	___fldiv@b+1,c
  4919  000DEC  0E00               	movlw	0
  4920  000DEE  6E2F               	movwf	___fldiv@b+2,c
  4921  000DF0  0E00               	movlw	0
  4922  000DF2  6E30               	movwf	___fldiv@b+3,c
  4923  000DF4  0E00               	movlw	0
  4924  000DF6  6E3D               	movwf	___fldiv@sign,c
  4925  000DF8                     l3869:
  4926  000DF8  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  4927  000DFC  A044               	btfss	___fldiv@bexp,0,c
  4928  000DFE  D002               	goto	l3875
  4929  000E00  8E2F               	bsf	___fldiv@b+2,7,c
  4930  000E02  D001               	goto	l3877
  4931  000E04                     l3875:
  4932  000E04  9E2F               	bcf	___fldiv@b+2,7,c
  4933  000E06                     l3877:
  4934  000E06  90D8               	bcf	status,0,c
  4935  000E08  3044               	rrcf	___fldiv@bexp,w,c
  4936  000E0A  6E30               	movwf	___fldiv@b+3,c
  4937  000E0C  D70E               	goto	l3791
  4938  000E0E                     __end_of___fldiv:
  4939                           	opt callstack 0
  4940                           
  4941 ;; *************** function _sendArduinoTireDropRequest *****************
  4942 ;; Defined at:
  4943 ;;		line 293 in file "main.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  data            1    0        unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;Total ram usage:        1 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    4
  4964 ;; This function calls:
  4965 ;;		_I2C_Master_Start
  4966 ;;		_I2C_Master_Stop
  4967 ;;		_I2C_Master_Write
  4968 ;; This function is called by:
  4969 ;;		_doOperation
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text15
  4974  002802                     __ptext15:
  4975                           	opt callstack 0
  4976  002802                     _sendArduinoTireDropRequest:
  4977                           	opt callstack 25
  4978                           
  4979                           ;main.c: 300:     I2C_Master_Start();
  4980                           
  4981                           ;incstack = 0
  4982  002802  EC64  F014         	call	_I2C_Master_Start	;wreg free
  4983                           
  4984                           ;main.c: 301:     I2C_Master_Write(0b00010000);
  4985  002806  0E00               	movlw	0
  4986  002808  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4987  00280A  0E10               	movlw	16
  4988  00280C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4989  00280E  EC57  F014         	call	_I2C_Master_Write	;wreg free
  4990                           
  4991                           ;main.c: 302:     I2C_Master_Write(data);
  4992  002812  0E00               	movlw	0
  4993  002814  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4994  002816  0E31               	movlw	49
  4995  002818  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4996  00281A  EC57  F014         	call	_I2C_Master_Write	;wreg free
  4997                           
  4998                           ;main.c: 303:     I2C_Master_Stop();
  4999  00281E  EC60  F014         	call	_I2C_Master_Stop	;wreg free
  5000  002822  0012               	return		;funcret
  5001  002824                     __end_of_sendArduinoTireDropRequest:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _requestIsTireDropDone *****************
  5005 ;; Defined at:
  5006 ;;		line 352 in file "main.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  data            1    8[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      _Bool 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    4
  5027 ;; This function calls:
  5028 ;;		_I2C_Master_Read
  5029 ;;		_I2C_Master_Start
  5030 ;;		_I2C_Master_Stop
  5031 ;;		_I2C_Master_Write
  5032 ;; This function is called by:
  5033 ;;		_doOperation
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text16
  5038  002712                     __ptext16:
  5039                           	opt callstack 0
  5040  002712                     _requestIsTireDropDone:
  5041                           	opt callstack 25
  5042                           
  5043                           ;main.c: 353:     I2C_Master_Start();
  5044                           
  5045                           ;incstack = 0
  5046  002712  EC64  F014         	call	_I2C_Master_Start	;wreg free
  5047                           
  5048                           ;main.c: 354:     I2C_Master_Write(0b00010001);
  5049  002716  0E00               	movlw	0
  5050  002718  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5051  00271A  0E11               	movlw	17
  5052  00271C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5053  00271E  EC57  F014         	call	_I2C_Master_Write	;wreg free
  5054                           
  5055                           ;main.c: 355:     unsigned char data = I2C_Master_Read(1);
  5056  002722  0E01               	movlw	1
  5057  002724  ECEF  F013         	call	_I2C_Master_Read
  5058  002728  6E09               	movwf	requestIsTireDropDone@data,c
  5059                           
  5060                           ;main.c: 356:     I2C_Master_Stop();
  5061  00272A  EC60  F014         	call	_I2C_Master_Stop	;wreg free
  5062                           
  5063                           ;main.c: 357:     if(data == '1'){
  5064  00272E  0E31               	movlw	49
  5065  002730  1809               	xorwf	requestIsTireDropDone@data,w,c
  5066  002732  A4D8               	btfss	status,2,c
  5067  002734  D002               	goto	l4309
  5068                           
  5069                           ;main.c: 358:         return 1;
  5070  002736  0E01               	movlw	1
  5071  002738  0012               	return	
  5072  00273A                     l4309:
  5073                           
  5074                           ;main.c: 360:     return 0;
  5075  00273A  0E00               	movlw	0
  5076  00273C  0012               	return		;funcret
  5077  00273E                     __end_of_requestIsTireDropDone:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function _I2C_Master_Write *****************
  5081 ;; Defined at:
  5082 ;;		line 70 in file "I2C.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;Total ram usage:        2 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    3
  5103 ;; This function calls:
  5104 ;;		_I2C_Master_Wait
  5105 ;; This function is called by:
  5106 ;;		_sendArduinoTireDropRequest
  5107 ;;		_requestIsTireDropDone
  5108 ;;		_doOperation
  5109 ;;		_main
  5110 ;;		_rtc_set_time
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text17
  5115  0028AE                     __ptext17:
  5116                           	opt callstack 0
  5117  0028AE                     _I2C_Master_Write:
  5118                           	opt callstack 25
  5119                           
  5120                           ;I2C.c: 71:     I2C_Master_Wait();
  5121                           
  5122                           ;incstack = 0
  5123  0028AE  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5124                           
  5125                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5126  0028B2  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5127  0028B6  0012               	return		;funcret
  5128  0028B8                     __end_of_I2C_Master_Write:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function _I2C_Master_Stop *****************
  5132 ;; Defined at:
  5133 ;;		line 65 in file "I2C.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		_I2C_Master_Wait
  5156 ;; This function is called by:
  5157 ;;		_sendArduinoTireDropRequest
  5158 ;;		_requestIsTireDropDone
  5159 ;;		_doOperation
  5160 ;;		_main
  5161 ;;		_rtc_set_time
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text18
  5166  0028C0                     __ptext18:
  5167                           	opt callstack 0
  5168  0028C0                     _I2C_Master_Stop:
  5169                           	opt callstack 25
  5170                           
  5171                           ;I2C.c: 66:     I2C_Master_Wait();
  5172                           
  5173                           ;incstack = 0
  5174  0028C0  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5175                           
  5176                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5177  0028C4  84C5               	bsf	4037,2,c	;volatile
  5178  0028C6  0012               	return		;funcret
  5179  0028C8                     __end_of_I2C_Master_Stop:
  5180                           	opt callstack 0
  5181                           
  5182 ;; *************** function _I2C_Master_Start *****************
  5183 ;; Defined at:
  5184 ;;		line 55 in file "I2C.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;Total ram usage:        0 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    3
  5205 ;; This function calls:
  5206 ;;		_I2C_Master_Wait
  5207 ;; This function is called by:
  5208 ;;		_sendArduinoTireDropRequest
  5209 ;;		_requestIsTireDropDone
  5210 ;;		_doOperation
  5211 ;;		_main
  5212 ;;		_rtc_set_time
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text19
  5217  0028C8                     __ptext19:
  5218                           	opt callstack 0
  5219  0028C8                     _I2C_Master_Start:
  5220                           	opt callstack 25
  5221                           
  5222                           ;I2C.c: 56:     I2C_Master_Wait();
  5223                           
  5224                           ;incstack = 0
  5225  0028C8  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5226                           
  5227                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5228  0028CC  80C5               	bsf	4037,0,c	;volatile
  5229  0028CE  0012               	return		;funcret
  5230  0028D0                     __end_of_I2C_Master_Start:
  5231                           	opt callstack 0
  5232                           
  5233 ;; *************** function _I2C_Master_Read *****************
  5234 ;; Defined at:
  5235 ;;		line 77 in file "I2C.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  ackBit          1    wreg     unsigned char 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  ackBit          1    6[COMRAM] unsigned char 
  5240 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      unsigned char 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;Total ram usage:        2 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		_I2C_Master_Wait
  5259 ;; This function is called by:
  5260 ;;		_requestIsTireDropDone
  5261 ;;		_main
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text20
  5266  0027DE                     __ptext20:
  5267                           	opt callstack 0
  5268  0027DE                     _I2C_Master_Read:
  5269                           	opt callstack 25
  5270                           
  5271                           ;incstack = 0
  5272                           ;I2C_Master_Read@ackBit stored from wreg
  5273  0027DE  6E07               	movwf	I2C_Master_Read@ackBit,c
  5274                           
  5275                           ;I2C.c: 78:     I2C_Master_Wait();
  5276  0027E0  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5277                           
  5278                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5279  0027E4  86C5               	bsf	4037,3,c	;volatile
  5280                           
  5281                           ;I2C.c: 81:     I2C_Master_Wait();
  5282  0027E6  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5283                           
  5284                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5285  0027EA  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5286                           
  5287                           ;I2C.c: 86:     I2C_Master_Wait();
  5288  0027EE  EC39  F014         	call	_I2C_Master_Wait	;wreg free
  5289                           
  5290                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5291  0027F2  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5292  0027F4  D002               	bra	u4045
  5293  0027F6  9AC5               	bcf	4037,5,c	;volatile
  5294  0027F8  D001               	bra	u4046
  5295  0027FA                     u4045:
  5296  0027FA  8AC5               	bsf	4037,5,c	;volatile
  5297  0027FC                     u4046:
  5298                           
  5299                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5300  0027FC  88C5               	bsf	4037,4,c	;volatile
  5301                           
  5302                           ;I2C.c: 90:     return receivedByte;
  5303  0027FE  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5304  002800  0012               	return		;funcret
  5305  002802                     __end_of_I2C_Master_Read:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _I2C_Master_Wait *****************
  5309 ;; Defined at:
  5310 ;;		line 21 in file "I2C.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;Total ram usage:        1 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    2
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_I2C_Master_Start
  5335 ;;		_I2C_Master_Stop
  5336 ;;		_I2C_Master_Write
  5337 ;;		_I2C_Master_Read
  5338 ;;		_I2C_Master_RepeatedStart
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text21
  5343  002872                     __ptext21:
  5344                           	opt callstack 0
  5345  002872                     _I2C_Master_Wait:
  5346                           	opt callstack 25
  5347                           
  5348                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5349                           
  5350                           ;I2C.c: 28:     }
  5351                           
  5352                           ;incstack = 0
  5353  002872  B4C7               	btfsc	4039,2,c	;volatile
  5354  002874  D7FE               	goto	_I2C_Master_Wait
  5355  002876  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5356  00287A  0E1F               	movlw	31
  5357  00287C  1606               	andwf	??_I2C_Master_Wait,f,c
  5358  00287E  B4D8               	btfsc	status,2,c
  5359  002880  0012               	return	
  5360  002882  D7F7               	goto	_I2C_Master_Wait
  5361  002884                     __end_of_I2C_Master_Wait:
  5362                           	opt callstack 0
  5363                           
  5364 ;; *************** function _init_motor_PWM *****************
  5365 ;; Defined at:
  5366 ;;		line 198 in file "main.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    2
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_doOperation
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text22
  5395  002768                     __ptext22:
  5396                           	opt callstack 0
  5397  002768                     _init_motor_PWM:
  5398                           	opt callstack 27
  5399                           
  5400                           ;main.c: 206:     TRISCbits.TRISC2 = 1;
  5401                           
  5402                           ;incstack = 0
  5403  002768  8494               	bsf	3988,2,c	;volatile
  5404                           
  5405                           ;main.c: 207:     TRISCbits.TRISC1 = 1;
  5406  00276A  8294               	bsf	3988,1,c	;volatile
  5407                           
  5408                           ;main.c: 210:     const unsigned long FREQUENCY = 1000;;main.c: 211:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 212:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  5409  00276C  0E9B               	movlw	155
  5410  00276E  6ECB               	movwf	4043,c	;volatile
  5411                           
  5412                           ;main.c: 215:     P1M1 = 0;
  5413  002770  9EBD               	bcf	4029,7,c	;volatile
  5414                           
  5415                           ;main.c: 216:     P1M0 = 0;
  5416  002772  9CBD               	bcf	4029,6,c	;volatile
  5417                           
  5418                           ;main.c: 217:     CCP1M3 = 1;
  5419  002774  86BD               	bsf	4029,3,c	;volatile
  5420                           
  5421                           ;main.c: 218:     CCP1M2 = 1;
  5422  002776  84BD               	bsf	4029,2,c	;volatile
  5423                           
  5424                           ;main.c: 219:     CCP1M1 = 0;
  5425  002778  92BD               	bcf	4029,1,c	;volatile
  5426                           
  5427                           ;main.c: 220:     CCP1M0 = 0;
  5428  00277A  90BD               	bcf	4029,0,c	;volatile
  5429                           
  5430                           ;main.c: 222:     CCP2M3 = 1;
  5431  00277C  86BA               	bsf	4026,3,c	;volatile
  5432                           
  5433                           ;main.c: 223:     CCP2M2 = 1;
  5434  00277E  84BA               	bsf	4026,2,c	;volatile
  5435                           
  5436                           ;main.c: 224:     CCP2M1 = 0;
  5437  002780  92BA               	bcf	4026,1,c	;volatile
  5438                           
  5439                           ;main.c: 225:     CCP2M0 = 0;
  5440  002782  90BA               	bcf	4026,0,c	;volatile
  5441                           
  5442                           ;main.c: 228:     T2CKPS0 = 1;
  5443  002784  80CA               	bsf	4042,0,c	;volatile
  5444                           
  5445                           ;main.c: 229:     T2CKPS1 = 1;
  5446  002786  82CA               	bsf	4042,1,c	;volatile
  5447                           
  5448                           ;main.c: 232:     TMR2ON = 1;
  5449  002788  84CA               	bsf	4042,2,c	;volatile
  5450                           
  5451                           ;main.c: 235:     TRISCbits.TRISC2 = 0;
  5452  00278A  9494               	bcf	3988,2,c	;volatile
  5453                           
  5454                           ;main.c: 236:     TRISCbits.TRISC1 = 0;
  5455  00278C  9294               	bcf	3988,1,c	;volatile
  5456  00278E  0012               	return		;funcret
  5457  002790                     __end_of_init_motor_PWM:
  5458                           	opt callstack 0
  5459                           
  5460 ;; *************** function _TIMER_INIT *****************
  5461 ;; Defined at:
  5462 ;;		line 152 in file "main.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    2
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_doOperation
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text23
  5491  002824                     __ptext23:
  5492                           	opt callstack 0
  5493  002824                     _TIMER_INIT:
  5494                           	opt callstack 27
  5495                           
  5496                           ;main.c: 153:     T0CONbits.TMR0ON = 0;
  5497                           
  5498                           ;incstack = 0
  5499  002824  9ED5               	bcf	4053,7,c	;volatile
  5500                           
  5501                           ;main.c: 154:     T0CONbits.T08BIT = 0;
  5502  002826  9CD5               	bcf	4053,6,c	;volatile
  5503                           
  5504                           ;main.c: 155:     T0CONbits.T0CS = 0;
  5505  002828  9AD5               	bcf	4053,5,c	;volatile
  5506                           
  5507                           ;main.c: 156:     T0CONbits.PSA = 0;
  5508  00282A  96D5               	bcf	4053,3,c	;volatile
  5509                           
  5510                           ;main.c: 157:     T0CONbits.T0PS = 0b101;
  5511  00282C  50D5               	movf	4053,w,c	;volatile
  5512  00282E  0BF8               	andlw	-8
  5513  002830  0905               	iorlw	5
  5514  002832  6ED5               	movwf	4053,c	;volatile
  5515                           
  5516                           ;main.c: 158:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  5517  002834  0EB3               	movlw	179
  5518  002836  6ED7               	movwf	4055,c	;volatile
  5519                           
  5520                           ;main.c: 159:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  5521  002838  0EB5               	movlw	181
  5522  00283A  6ED6               	movwf	4054,c	;volatile
  5523                           
  5524                           ;main.c: 160:     T0CONbits.TMR0ON = 1;
  5525  00283C  8ED5               	bsf	4053,7,c	;volatile
  5526                           
  5527                           ;main.c: 161:     INTCONbits.TMR0IE = 1;
  5528  00283E  8AF2               	bsf	4082,5,c	;volatile
  5529                           
  5530                           ;main.c: 163:     INTCONbits.GIE = 1;
  5531  002840  8EF2               	bsf	4082,7,c	;volatile
  5532                           
  5533                           ;main.c: 164:     INTCONbits.PEIE = 1;
  5534  002842  8CF2               	bsf	4082,6,c	;volatile
  5535  002844  0012               	return		;funcret
  5536  002846                     __end_of_TIMER_INIT:
  5537                           	opt callstack 0
  5538                           
  5539 ;; *************** function _doDisplayLog *****************
  5540 ;; Defined at:
  5541 ;;		line 36 in file "main.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  currentLogSt    2   14[BANK0 ] int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  keyValue        1   22[BANK0 ] unsigned char 
  5546 ;;  keypress        1   20[BANK0 ] unsigned char 
  5547 ;;  currentPole     2    0        int 
  5548 ;;  currentDispl    1   21[BANK0 ] enum E3248
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        9 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:   13
  5565 ;; This function calls:
  5566 ;;		_lcdInst
  5567 ;;		_printf
  5568 ;; This function is called by:
  5569 ;;		_main
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text24
  5574  0016B8                     __ptext24:
  5575                           	opt callstack 0
  5576  0016B8                     _doDisplayLog:
  5577                           	opt callstack 17
  5578                           
  5579                           ;main.c: 37:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5580                           
  5581                           ;incstack = 0
  5582  0016B8  0E80               	movlw	128
  5583  0016BA  EC51  F014         	call	_lcdInst
  5584  0016BE  0E07               	movlw	7
  5585  0016C0  0100               	movlb	0	; () banked
  5586  0016C2  6F90               	movwf	??_doDisplayLog& (0+255),b
  5587  0016C4  0E7D               	movlw	125
  5588  0016C6                     u5977:
  5589  0016C6  2EE8               	decfsz	wreg,f,c
  5590  0016C8  D7FE               	bra	u5977
  5591  0016CA  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5592  0016CC  D7FC               	bra	u5977
  5593                           
  5594                           ;main.c: 44:     enum displayStates currentDisplayState = opTime;
  5595  0016CE  0E00               	movlw	0
  5596  0016D0  0100               	movlb	0	; () banked
  5597  0016D2  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  5598  0016D4  D082               	goto	l5691
  5599  0016D6                     l5653:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;main.c: 49:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  5603  0016D6  0E80               	movlw	128
  5604  0016D8  EC51  F014         	call	_lcdInst
  5605  0016DC  0E07               	movlw	7
  5606  0016DE  0100               	movlb	0	; () banked
  5607  0016E0  6F90               	movwf	??_doDisplayLog& (0+255),b
  5608  0016E2  0E7D               	movlw	125
  5609  0016E4                     u5987:
  5610  0016E4  2EE8               	decfsz	wreg,f,c
  5611  0016E6  D7FE               	bra	u5987
  5612  0016E8  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5613  0016EA  D7FC               	bra	u5987
  5614                           
  5615                           ;main.c: 50:                 printf("%s", "OP. TIME Xs");
  5616  0016EC  0EFB               	movlw	low STR_1
  5617  0016EE  0100               	movlb	0	; () banked
  5618  0016F0  6F82               	movwf	printf@fmt& (0+255),b
  5619  0016F2  0EFF               	movlw	high STR_1
  5620  0016F4  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5621  0016F6  0EA9               	movlw	low STR_2
  5622  0016F8  6F84               	movwf	(?_printf+2)& (0+255),b
  5623  0016FA  0EFF               	movlw	high STR_2
  5624  0016FC  6F85               	movwf	(?_printf+3)& (0+255),b
  5625  0016FE  ECC8  F013         	call	_printf	;wreg free
  5626  001702  0EC0               	movlw	192
  5627  001704  EC51  F014         	call	_lcdInst
  5628                           
  5629                           ;main.c: 52:                 printf("%s","X TIR. SUPPLIED");
  5630  001708  0EFB               	movlw	low STR_1
  5631  00170A  0100               	movlb	0	; () banked
  5632  00170C  6F82               	movwf	printf@fmt& (0+255),b
  5633  00170E  0EFF               	movlw	high STR_1
  5634  001710  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5635  001712  0EED               	movlw	low STR_4
  5636  001714  6F84               	movwf	(?_printf+2)& (0+255),b
  5637  001716  0EFE               	movlw	high STR_4
  5638  001718  6F85               	movwf	(?_printf+3)& (0+255),b
  5639  00171A  ECC8  F013         	call	_printf	;wreg free
  5640  00171E  0E90               	movlw	144
  5641  001720  EC51  F014         	call	_lcdInst
  5642                           
  5643                           ;main.c: 54:                 printf("%s","(1) POLE INFO");
  5644  001724  0EFB               	movlw	low STR_1
  5645  001726  0100               	movlb	0	; () banked
  5646  001728  6F82               	movwf	printf@fmt& (0+255),b
  5647  00172A  0EFF               	movlw	high STR_1
  5648  00172C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5649  00172E  0E58               	movlw	low STR_6
  5650  001730  6F84               	movwf	(?_printf+2)& (0+255),b
  5651  001732  0EFF               	movlw	high STR_6
  5652  001734  6F85               	movwf	(?_printf+3)& (0+255),b
  5653  001736  ECC8  F013         	call	_printf	;wreg free
  5654  00173A  0ED0               	movlw	208
  5655  00173C  EC51  F014         	call	_lcdInst
  5656                           
  5657                           ;main.c: 56:                 printf("%s","(2) SAVE & EXIT");
  5658  001740  0EFB               	movlw	low STR_1
  5659  001742  0100               	movlb	0	; () banked
  5660  001744  6F82               	movwf	printf@fmt& (0+255),b
  5661  001746  0EFF               	movlw	high STR_1
  5662  001748  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5663  00174A  0EFD               	movlw	low STR_8
  5664  00174C  6F84               	movwf	(?_printf+2)& (0+255),b
  5665  00174E  0EFE               	movlw	high STR_8
  5666  001750  6F85               	movwf	(?_printf+3)& (0+255),b
  5667  001752  ECC8  F013         	call	_printf	;wreg free
  5668                           
  5669                           ;main.c: 57:                 break;
  5670  001756  D050               	goto	l5693
  5671  001758                     l5671:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;main.c: 59:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  5675  001758  0E80               	movlw	128
  5676  00175A  EC51  F014         	call	_lcdInst
  5677  00175E  0E07               	movlw	7
  5678  001760  0100               	movlb	0	; () banked
  5679  001762  6F90               	movwf	??_doDisplayLog& (0+255),b
  5680  001764  0E7D               	movlw	125
  5681  001766                     u5997:
  5682  001766  2EE8               	decfsz	wreg,f,c
  5683  001768  D7FE               	bra	u5997
  5684  00176A  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5685  00176C  D7FC               	bra	u5997
  5686                           
  5687                           ;main.c: 60:                 printf("%s", "POLE X/Y");
  5688  00176E  0EFB               	movlw	low STR_1
  5689  001770  0100               	movlb	0	; () banked
  5690  001772  6F82               	movwf	printf@fmt& (0+255),b
  5691  001774  0EFF               	movlw	high STR_1
  5692  001776  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5693  001778  0EEF               	movlw	low STR_10
  5694  00177A  6F84               	movwf	(?_printf+2)& (0+255),b
  5695  00177C  0EFF               	movlw	high STR_10
  5696  00177E  6F85               	movwf	(?_printf+3)& (0+255),b
  5697  001780  ECC8  F013         	call	_printf	;wreg free
  5698  001784  0EC0               	movlw	192
  5699  001786  EC51  F014         	call	_lcdInst
  5700                           
  5701                           ;main.c: 62:                 printf("%s","TIR. DEPLOY: X");
  5702  00178A  0EFB               	movlw	low STR_1
  5703  00178C  0100               	movlb	0	; () banked
  5704  00178E  6F82               	movwf	printf@fmt& (0+255),b
  5705  001790  0EFF               	movlw	high STR_1
  5706  001792  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5707  001794  0E1D               	movlw	low STR_12
  5708  001796  6F84               	movwf	(?_printf+2)& (0+255),b
  5709  001798  0EFF               	movlw	high STR_12
  5710  00179A  6F85               	movwf	(?_printf+3)& (0+255),b
  5711  00179C  ECC8  F013         	call	_printf	;wreg free
  5712  0017A0  0E90               	movlw	144
  5713  0017A2  EC51  F014         	call	_lcdInst
  5714                           
  5715                           ;main.c: 64:                 printf("%s","TIRE. ON POLE: X");
  5716  0017A6  0EFB               	movlw	low STR_1
  5717  0017A8  0100               	movlb	0	; () banked
  5718  0017AA  6F82               	movwf	printf@fmt& (0+255),b
  5719  0017AC  0EFF               	movlw	high STR_1
  5720  0017AE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5721  0017B0  0ECC               	movlw	low STR_14
  5722  0017B2  6F84               	movwf	(?_printf+2)& (0+255),b
  5723  0017B4  0EFE               	movlw	high STR_14
  5724  0017B6  6F85               	movwf	(?_printf+3)& (0+255),b
  5725  0017B8  ECC8  F013         	call	_printf	;wreg free
  5726  0017BC  0ED0               	movlw	208
  5727  0017BE  EC51  F014         	call	_lcdInst
  5728                           
  5729                           ;main.c: 66:                 printf("%s","1<- 2-> 3MENU");
  5730  0017C2  0EFB               	movlw	low STR_1
  5731  0017C4  0100               	movlb	0	; () banked
  5732  0017C6  6F82               	movwf	printf@fmt& (0+255),b
  5733  0017C8  0EFF               	movlw	high STR_1
  5734  0017CA  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5735  0017CC  0E74               	movlw	low STR_16
  5736  0017CE  6F84               	movwf	(?_printf+2)& (0+255),b
  5737  0017D0  0EFF               	movlw	high STR_16
  5738  0017D2  6F85               	movwf	(?_printf+3)& (0+255),b
  5739  0017D4  ECC8  F013         	call	_printf	;wreg free
  5740                           
  5741                           ;main.c: 67:                 break;
  5742  0017D8  D00F               	goto	l5693
  5743  0017DA                     l5691:
  5744  0017DA  0100               	movlb	0	; () banked
  5745  0017DC  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  5746  0017DE  6F90               	movwf	??_doDisplayLog& (0+255),b
  5747  0017E0  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  5748                           
  5749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5750                           ; Switch size 1, requested type "simple"
  5751                           ; Number of cases is 1, Range of values is 0 to 0
  5752                           ; switch strategies available:
  5753                           ; Name         Instructions Cycles
  5754                           ; simple_byte            4     3 (average)
  5755                           ;	Chosen strategy is simple_byte
  5756  0017E2  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  5757  0017E4  0A00               	xorlw	0	; case 0
  5758  0017E6  A4D8               	btfss	status,2,c
  5759  0017E8  D007               	goto	l5693
  5760                           
  5761                           ; BSR set to: 0
  5762                           ; Switch size 1, requested type "simple"
  5763                           ; Number of cases is 2, Range of values is 0 to 1
  5764                           ; switch strategies available:
  5765                           ; Name         Instructions Cycles
  5766                           ; simple_byte            7     4 (average)
  5767                           ;	Chosen strategy is simple_byte
  5768  0017EA  5190               	movf	??_doDisplayLog& (0+255),w,b
  5769  0017EC  0A00               	xorlw	0	; case 0
  5770  0017EE  B4D8               	btfsc	status,2,c
  5771  0017F0  D772               	goto	l5653
  5772  0017F2  0A01               	xorlw	1	; case 1
  5773  0017F4  B4D8               	btfsc	status,2,c
  5774  0017F6  D7B0               	goto	l5671
  5775  0017F8                     l5693:
  5776                           
  5777                           ;main.c: 70:         if(keyPressed){
  5778  0017F8  0100               	movlb	0	; () banked
  5779  0017FA  51CA               	movf	_keyPressed& (0+255),w,b	;volatile
  5780  0017FC  B4D8               	btfsc	status,2,c
  5781  0017FE  D03D               	goto	l159
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;main.c: 73:             keyPressed = 0;
  5785  001800  0E00               	movlw	0
  5786  001802  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;main.c: 76:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  5790  001804  3881               	swapf	3969,w,c	;volatile
  5791  001806  0B0F               	andlw	15
  5792  001808  0B0F               	andlw	15
  5793  00180A  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;main.c: 77:             char keyValue = keys[keypress];
  5797  00180C  0EA9               	movlw	low _keys
  5798  00180E  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  5799  001810  6EF6               	movwf	tblptrl,c
  5800  001812  6AF7               	clrf	tblptrh,c
  5801  001814  0EFE               	movlw	high _keys
  5802  001816  22F7               	addwfc	tblptrh,f,c
  5803  001818                     	if	0	;There are less than 3 active tblptr bytes
  5804  001818                     	endif
  5805  001818  0008               	tblrd		*
  5806  00181A  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;main.c: 78:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  5810  00181E  0E01               	movlw	1
  5811  001820  EC51  F014         	call	_lcdInst
  5812  001824  0E11               	movlw	17
  5813  001826  0100               	movlb	0	; () banked
  5814  001828  6F90               	movwf	??_doDisplayLog& (0+255),b
  5815  00182A  0E3A               	movlw	58
  5816  00182C                     u6007:
  5817  00182C  2EE8               	decfsz	wreg,f,c
  5818  00182E  D7FE               	bra	u6007
  5819  001830  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5820  001832  D7FC               	bra	u6007
  5821  001834  F000               	nop	
  5822                           
  5823                           ;main.c: 79:             switch (currentDisplayState){
  5824  001836  D012               	goto	l5719
  5825  001838                     l5705:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;main.c: 81:                     if (keyValue == '1'){
  5829  001838  0E31               	movlw	49
  5830  00183A  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5831  00183C  A4D8               	btfss	status,2,c
  5832  00183E  D002               	goto	l5709
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;main.c: 82:                         currentDisplayState = pole;
  5836  001840  0E01               	movlw	1
  5837  001842  D00A               	goto	L12
  5838  001844                     l5709:
  5839                           
  5840                           ; BSR set to: 0
  5841  001844  0E32               	movlw	50
  5842  001846  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5843  001848  B4D8               	btfsc	status,2,c
  5844  00184A  0012               	return	
  5845  00184C  D016               	goto	l159
  5846  00184E                     l5713:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;main.c: 88:                     if (keyValue == '3'){
  5850  00184E  0E33               	movlw	51
  5851  001850  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5852  001852  A4D8               	btfss	status,2,c
  5853  001854  D012               	goto	l159
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;main.c: 89:                         currentDisplayState = opTime;
  5857  001856  0E00               	movlw	0
  5858  001858                     L12:
  5859  001858  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  5860  00185A  D00F               	goto	l159
  5861  00185C                     l5719:
  5862  00185C  0100               	movlb	0	; () banked
  5863  00185E  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  5864  001860  6F90               	movwf	??_doDisplayLog& (0+255),b
  5865  001862  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  5866                           
  5867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5868                           ; Switch size 1, requested type "simple"
  5869                           ; Number of cases is 1, Range of values is 0 to 0
  5870                           ; switch strategies available:
  5871                           ; Name         Instructions Cycles
  5872                           ; simple_byte            4     3 (average)
  5873                           ;	Chosen strategy is simple_byte
  5874  001864  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  5875  001866  0A00               	xorlw	0	; case 0
  5876  001868  A4D8               	btfss	status,2,c
  5877  00186A  D007               	goto	l159
  5878                           
  5879                           ; BSR set to: 0
  5880                           ; Switch size 1, requested type "simple"
  5881                           ; Number of cases is 2, Range of values is 0 to 1
  5882                           ; switch strategies available:
  5883                           ; Name         Instructions Cycles
  5884                           ; simple_byte            7     4 (average)
  5885                           ;	Chosen strategy is simple_byte
  5886  00186C  5190               	movf	??_doDisplayLog& (0+255),w,b
  5887  00186E  0A00               	xorlw	0	; case 0
  5888  001870  B4D8               	btfsc	status,2,c
  5889  001872  D7E2               	goto	l5705
  5890  001874  0A01               	xorlw	1	; case 1
  5891  001876  B4D8               	btfsc	status,2,c
  5892  001878  D7EA               	goto	l5713
  5893  00187A                     l159:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;main.c: 98:     _delay((unsigned long)((1)*(10000000/4000.0)));
  5897                           
  5898                           ; BSR set to: 0
  5899  00187A  0E04               	movlw	4
  5900  00187C  0100               	movlb	0	; () banked
  5901  00187E  6F90               	movwf	??_doDisplayLog& (0+255),b
  5902  001880  0E3D               	movlw	61
  5903  001882                     u6017:
  5904  001882  2EE8               	decfsz	wreg,f,c
  5905  001884  D7FE               	bra	u6017
  5906  001886  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5907  001888  D7FC               	bra	u6017
  5908  00188A  D000               	nop2	
  5909  00188C  D7A6               	goto	l5691
  5910  00188E                     __end_of_doDisplayLog:
  5911                           	opt callstack 0
  5912                           
  5913 ;; *************** function _printf *****************
  5914 ;; Defined at:
  5915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5918 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  5919 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  5920 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  5921 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  5922 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  5923 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  5924 ;;		 -> STR_3(3), STR_1(3), 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  ap              2   12[BANK0 ] PTR void [1]
  5927 ;;		 -> ?_printf(2), 
  5928 ;;  ret             2    0        int 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  2    2[BANK0 ] int 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5938 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;Total ram usage:       12 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:   12
  5945 ;; This function calls:
  5946 ;;		_vfprintf
  5947 ;; This function is called by:
  5948 ;;		_doDisplayLog
  5949 ;;		_doOperation
  5950 ;;		_main
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text25
  5955  002790                     __ptext25:
  5956                           	opt callstack 0
  5957  002790                     _printf:
  5958                           	opt callstack 18
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;incstack = 0
  5962  002790  0E84               	movlw	low (?_printf+2)
  5963  002792  0100               	movlb	0	; () banked
  5964  002794  6F8C               	movwf	printf@ap& (0+255),b
  5965  002796  0E00               	movlw	high (?_printf+2)
  5966  002798  6F8D               	movwf	(printf@ap+1)& (0+255),b
  5967                           
  5968                           ; BSR set to: 0
  5969  00279A  0E00               	movlw	0
  5970  00279C  6E6D               	movwf	vfprintf@fp,c
  5971  00279E  0E00               	movlw	0
  5972  0027A0  6E6E               	movwf	vfprintf@fp+1,c
  5973  0027A2  C082  F06F         	movff	printf@fmt,vfprintf@fmt
  5974  0027A6  C083  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  5975  0027AA  0E8C               	movlw	low printf@ap
  5976  0027AC  6E71               	movwf	vfprintf@ap,c
  5977  0027AE  0E00               	movlw	high printf@ap
  5978  0027B0  6E72               	movwf	vfprintf@ap+1,c
  5979  0027B2  EC27  F012         	call	_vfprintf	;wreg free
  5980  0027B6  0012               	return		;funcret
  5981  0027B8                     __end_of_printf:
  5982                           	opt callstack 0
  5983                           
  5984 ;; *************** function _vfprintf *****************
  5985 ;; Defined at:
  5986 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  5989 ;;		 -> NULL(0), 
  5990 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  5991 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  5992 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  5993 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  5994 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  5995 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  5996 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  5997 ;;		 -> STR_3(3), STR_1(3), 
  5998 ;;  ap              2  112[COMRAM] PTR PTR void 
  5999 ;;		 -> printf@ap(2), 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  6002 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  6003 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  6004 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  6005 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  6006 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  6007 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  6008 ;;		 -> STR_3(3), STR_1(3), 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2  108[COMRAM] int 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6018 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;Total ram usage:        8 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:   11
  6025 ;; This function calls:
  6026 ;;		_vfpfcnvrt
  6027 ;; This function is called by:
  6028 ;;		_printf
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text26
  6033  00244E                     __ptext26:
  6034                           	opt callstack 0
  6035  00244E                     _vfprintf:
  6036                           	opt callstack 18
  6037                           
  6038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6039                           
  6040                           ;incstack = 0
  6041  00244E  C06F  F080         	movff	vfprintf@fmt,vfprintf@cfmt
  6042  002452  C070  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6043                           
  6044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6045  002456  0E00               	movlw	0
  6046  002458  0100               	movlb	0	; () banked
  6047  00245A  6FBE               	movwf	(_nout+1)& (0+255),b
  6048  00245C  0E00               	movlw	0
  6049  00245E  6FBD               	movwf	_nout& (0+255),b
  6050                           
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6052  002460  D013               	goto	l5617
  6053  002462                     l5615:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6057  002462  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6058  002466  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6059  00246A  0E80               	movlw	low vfprintf@cfmt
  6060  00246C  6E4E               	movwf	vfpfcnvrt@fmt,c
  6061  00246E  0E00               	movlw	high vfprintf@cfmt
  6062  002470  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  6063  002472  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  6064  002476  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6065  00247A  EC09  F000         	call	_vfpfcnvrt	;wreg free
  6066  00247E  504C               	movf	?_vfpfcnvrt,w,c
  6067  002480  0100               	movlb	0	; () banked
  6068  002482  27BD               	addwf	_nout& (0+255),f,b
  6069  002484  504D               	movf	?_vfpfcnvrt+1,w,c
  6070  002486  23BE               	addwfc	(_nout+1)& (0+255),f,b
  6071  002488                     l5617:
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6075  002488  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
  6076  00248C  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6077  002490                     	if	0	;tblptru may be non-zero
  6078  002490                     	endif
  6079  002490                     	if	0	;tblptru may be non-zero
  6080  002490                     	endif
  6081  002490  0008               	tblrd		*
  6082  002492  50F5               	movf	tablat,w,c
  6083  002494  0900               	iorlw	0
  6084  002496  A4D8               	btfss	status,2,c
  6085  002498  D7E4               	goto	l5615
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6089  00249A  C0BD  F06D         	movff	_nout,?_vfprintf
  6090  00249E  C0BE  F06E         	movff	_nout+1,?_vfprintf+1
  6091                           
  6092                           ; BSR set to: 0
  6093  0024A2  0012               	return		;funcret
  6094  0024A4                     __end_of_vfprintf:
  6095                           	opt callstack 0
  6096                           
  6097 ;; *************** function _vfpfcnvrt *****************
  6098 ;; Defined at:
  6099 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  6102 ;;		 -> NULL(0), 
  6103 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  6104 ;;		 -> vfprintf@cfmt(2), 
  6105 ;;  ap              2   79[COMRAM] PTR PTR void 
  6106 ;;		 -> printf@ap(2), 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  llu             8   93[COMRAM] unsigned long long 
  6109 ;;  ll              8   85[COMRAM] long long 
  6110 ;;  f               4    0        long long 
  6111 ;;  vp              3    0        PTR void 
  6112 ;;  ct              3    0        unsigned char [3]
  6113 ;;  done            2  104[COMRAM] int 
  6114 ;;  cp              2  101[COMRAM] PTR unsigned char 
  6115 ;;		 -> ?_printf(2), STR_46(16), STR_44(14), STR_42(11), 
  6116 ;;		 -> STR_40(9), STR_38(16), STR_36(13), STR_34(13), 
  6117 ;;		 -> STR_32(9), STR_30(13), STR_28(14), STR_26(10), 
  6118 ;;		 -> STR_22(9), STR_16(14), STR_14(17), STR_12(15), 
  6119 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  6120 ;;		 -> STR_2(12), 
  6121 ;;  i               2    0        int 
  6122 ;;  c               1  103[COMRAM] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2   75[COMRAM] int 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:       33 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:   10
  6139 ;; This function calls:
  6140 ;;		_atoi
  6141 ;;		_dtoa
  6142 ;;		_fputc
  6143 ;;		_isdigit
  6144 ;;		_stoa
  6145 ;;		_xtoa
  6146 ;; This function is called by:
  6147 ;;		_vfprintf
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text27
  6152  000012                     __ptext27:
  6153                           	opt callstack 0
  6154  000012                     _vfpfcnvrt:
  6155                           	opt callstack 18
  6156                           
  6157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;incstack = 0
  6161  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6162  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6163  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  6164  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  6165  000022                     	if	0	;tblptru may be non-zero
  6166  000022                     	endif
  6167  000022                     	if	0	;tblptru may be non-zero
  6168  000022                     	endif
  6169  000022  0008               	tblrd		*
  6170  000024  50F5               	movf	tablat,w,c
  6171  000026  0A25               	xorlw	37
  6172  000028  A4D8               	btfss	status,2,c
  6173  00002A  D1E3               	goto	l5595
  6174                           
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6176  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6177  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6178  000034  2ADE               	incf	postinc2,f,c
  6179  000036  0E00               	movlw	0
  6180  000038  22DD               	addwfc	postdec2,f,c
  6181                           
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6183  00003A  0E00               	movlw	0
  6184  00003C  0100               	movlb	0	; () banked
  6185  00003E  6FC0               	movwf	(_width+1)& (0+255),b
  6186  000040  0E00               	movlw	0
  6187  000042  6FBF               	movwf	_width& (0+255),b
  6188  000044  C0BF  F075         	movff	_width,_flags
  6189  000048  C0C0  F076         	movff	_width+1,_flags+1
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6193  00004C  6873               	setf	_prec,c
  6194  00004E  6874               	setf	_prec+1,c
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6198  000050  0E00               	movlw	0
  6199  000052  6E6A               	movwf	vfpfcnvrt@done+1,c
  6200  000054  0E00               	movlw	0
  6201  000056  D014               	goto	L13
  6202  000058                     l5499:
  6203                           
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6205  000058  8075               	bsf	_flags,0,c
  6206  00005A                     l5501:
  6207                           
  6208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6209  00005A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6210  00005E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6211  000062  2ADE               	incf	postinc2,f,c
  6212  000064  0E00               	movlw	0
  6213  000066  22DD               	addwfc	postdec2,f,c
  6214                           
  6215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6216  000068  D02E               	goto	l5525
  6217  00006A                     l5503:
  6218                           
  6219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6220  00006A  8275               	bsf	_flags,1,c
  6221  00006C  D7F6               	goto	l5501
  6222  00006E                     l5507:
  6223                           
  6224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6225  00006E  8475               	bsf	_flags,2,c
  6226  000070  D7F4               	goto	l5501
  6227  000072                     l5511:
  6228                           
  6229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6230  000072  8675               	bsf	_flags,3,c
  6231  000074  D7F2               	goto	l5501
  6232  000076                     l5515:
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6235  000076  8875               	bsf	_flags,4,c
  6236  000078  D7F0               	goto	l5501
  6237  00007A                     l5519:
  6238                           
  6239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6240  00007A  0E00               	movlw	0
  6241  00007C  6E6A               	movwf	vfpfcnvrt@done+1,c
  6242  00007E  0E01               	movlw	1
  6243  000080                     L13:
  6244  000080  6E69               	movwf	vfpfcnvrt@done,c
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6247  000082  D021               	goto	l5525
  6248  000084                     l5523:
  6249  000084  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6250  000088  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6251  00008C  CFDE FFF6          	movff	postinc2,tblptrl
  6252  000090  CFDD FFF7          	movff	postdec2,tblptrh
  6253  000094                     	if	0	;tblptru may be non-zero
  6254  000094                     	endif
  6255  000094                     	if	0	;tblptru may be non-zero
  6256  000094                     	endif
  6257  000094  0008               	tblrd		*
  6258  000096  50F5               	movf	tablat,w,c
  6259  000098  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  6260  00009A  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  6261                           
  6262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6263                           ; Switch size 1, requested type "simple"
  6264                           ; Number of cases is 1, Range of values is 0 to 0
  6265                           ; switch strategies available:
  6266                           ; Name         Instructions Cycles
  6267                           ; simple_byte            4     3 (average)
  6268                           ;	Chosen strategy is simple_byte
  6269  00009C  5053               	movf	??_vfpfcnvrt+1,w,c
  6270  00009E  0A00               	xorlw	0	; case 0
  6271  0000A0  A4D8               	btfss	status,2,c
  6272  0000A2  D7EB               	goto	l5519
  6273                           
  6274                           ; Switch size 1, requested type "simple"
  6275                           ; Number of cases is 5, Range of values is 32 to 48
  6276                           ; switch strategies available:
  6277                           ; Name         Instructions Cycles
  6278                           ; simple_byte           16     9 (average)
  6279                           ;	Chosen strategy is simple_byte
  6280  0000A4  5052               	movf	??_vfpfcnvrt,w,c
  6281  0000A6  0A20               	xorlw	32	; case 32
  6282  0000A8  B4D8               	btfsc	status,2,c
  6283  0000AA  D7E3               	goto	l5511
  6284  0000AC  0A03               	xorlw	3	; case 35
  6285  0000AE  B4D8               	btfsc	status,2,c
  6286  0000B0  D7E2               	goto	l5515
  6287  0000B2  0A08               	xorlw	8	; case 43
  6288  0000B4  B4D8               	btfsc	status,2,c
  6289  0000B6  D7DB               	goto	l5507
  6290  0000B8  0A06               	xorlw	6	; case 45
  6291  0000BA  B4D8               	btfsc	status,2,c
  6292  0000BC  D7CD               	goto	l5499
  6293  0000BE  0A1D               	xorlw	29	; case 48
  6294  0000C0  B4D8               	btfsc	status,2,c
  6295  0000C2  D7D3               	goto	l5503
  6296  0000C4  D7DA               	goto	l5519
  6297  0000C6                     l5525:
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6300  0000C6  5069               	movf	vfpfcnvrt@done,w,c
  6301  0000C8  106A               	iorwf	vfpfcnvrt@done+1,w,c
  6302  0000CA  B4D8               	btfsc	status,2,c
  6303  0000CC  D7DB               	goto	l5523
  6304                           
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6306  0000CE  B075               	btfsc	_flags,0,c
  6307                           
  6308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6309  0000D0  9275               	bcf	_flags,1,c
  6310                           
  6311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6312  0000D2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6313  0000D6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6314  0000DA  CFDE FFF6          	movff	postinc2,tblptrl
  6315  0000DE  CFDD FFF7          	movff	postdec2,tblptrh
  6316  0000E2                     	if	0	;tblptru may be non-zero
  6317  0000E2                     	endif
  6318  0000E2                     	if	0	;tblptru may be non-zero
  6319  0000E2                     	endif
  6320  0000E2  0008               	tblrd		*
  6321  0000E4  50F5               	movf	tablat,w,c
  6322  0000E6  0A2A               	xorlw	42
  6323  0000E8  A4D8               	btfss	status,2,c
  6324  0000EA  D024               	goto	l5537
  6325                           
  6326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6327  0000EC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6328  0000F0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6329  0000F4  2ADE               	incf	postinc2,f,c
  6330  0000F6  0E00               	movlw	0
  6331  0000F8  22DD               	addwfc	postdec2,f,c
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6334  0000FA  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6335  0000FE  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6336  000102  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6337  000106  0E02               	movlw	2
  6338  000108  26DE               	addwf	postinc2,f,c
  6339  00010A  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6340  00010E  0E00               	movlw	0
  6341  000110  22DD               	addwfc	postdec2,f,c
  6342  000112  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6343  000116  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6344  00011A  CFDE F0BF          	movff	postinc2,_width
  6345  00011E  CFDD F0C0          	movff	postdec2,_width+1
  6346                           
  6347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6348  000122  0100               	movlb	0	; () banked
  6349  000124  AFC0               	btfss	(_width+1)& (0+255),7,b
  6350  000126  D03F               	goto	u5500
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6354  000128  8075               	bsf	_flags,0,c
  6355                           
  6356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6357  00012A  6DBF               	negf	_width& (0+255),b
  6358  00012C  1FC0               	comf	(_width+1)& (0+255),f,b
  6359  00012E  B0D8               	btfsc	status,0,c
  6360  000130  2BC0               	incf	(_width+1)& (0+255),f,b
  6361  000132  D039               	goto	u5500
  6362  000134                     l5537:
  6363                           
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6365  000134  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6366  000138  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6367  00013C  CFDE F00D          	movff	postinc2,atoi@s
  6368  000140  CFDD F00E          	movff	postdec2,atoi@s+1
  6369  000144  EC2B  F00E         	call	_atoi	;wreg free
  6370  000148  C00D  F0BF         	movff	?_atoi,_width
  6371  00014C  C00E  F0C0         	movff	?_atoi+1,_width+1
  6372                           
  6373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6374  000150  D007               	goto	l5541
  6375  000152                     l5539:
  6376                           
  6377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6378  000152  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6379  000156  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6380  00015A  2ADE               	incf	postinc2,f,c
  6381  00015C  0E00               	movlw	0
  6382  00015E  22DD               	addwfc	postdec2,f,c
  6383  000160                     l5541:
  6384  000160  0ED0               	movlw	208
  6385  000162  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  6386  000164  0EFF               	movlw	255
  6387  000166  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  6388  000168  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6389  00016C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6390  000170  CFDE FFF6          	movff	postinc2,tblptrl
  6391  000174  CFDD FFF7          	movff	postdec2,tblptrh
  6392  000178                     	if	0	;tblptru may be non-zero
  6393  000178                     	endif
  6394  000178                     	if	0	;tblptru may be non-zero
  6395  000178                     	endif
  6396  000178  0008               	tblrd		*
  6397  00017A  50F5               	movf	tablat,w,c
  6398  00017C  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6399  00017E  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  6400  000180  5052               	movf	??_vfpfcnvrt,w,c
  6401  000182  2654               	addwf	??_vfpfcnvrt+2,f,c
  6402  000184  5053               	movf	??_vfpfcnvrt+1,w,c
  6403  000186  2255               	addwfc	??_vfpfcnvrt+3,f,c
  6404  000188  5055               	movf	??_vfpfcnvrt+3,w,c
  6405  00018A  E106               	bnz	u5480
  6406  00018C  0E0A               	movlw	10
  6407  00018E  5C54               	subwf	??_vfpfcnvrt+2,w,c
  6408  000190  B0D8               	btfsc	status,0,c
  6409  000192  D002               	goto	u5480
  6410  000194  0E01               	movlw	1
  6411  000196  D001               	goto	u5490
  6412  000198                     u5480:
  6413  000198  0E00               	movlw	0
  6414  00019A                     u5490:
  6415  00019A  6E6B               	movwf	_vfpfcnvrt$1131,c
  6416  00019C  6A6C               	clrf	_vfpfcnvrt$1131+1,c
  6417  00019E  506B               	movf	_vfpfcnvrt$1131,w,c
  6418  0001A0  106C               	iorwf	_vfpfcnvrt$1131+1,w,c
  6419  0001A2  A4D8               	btfss	status,2,c
  6420  0001A4  D7D6               	goto	l5539
  6421  0001A6                     u5500:
  6422                           
  6423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6424  0001A6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6425  0001AA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6426  0001AE  CFDE FFF6          	movff	postinc2,tblptrl
  6427  0001B2  CFDD FFF7          	movff	postdec2,tblptrh
  6428  0001B6                     	if	0	;tblptru may be non-zero
  6429  0001B6                     	endif
  6430  0001B6                     	if	0	;tblptru may be non-zero
  6431  0001B6                     	endif
  6432  0001B6  0008               	tblrd		*
  6433  0001B8  50F5               	movf	tablat,w,c
  6434  0001BA  0A64               	xorlw	100
  6435  0001BC  B4D8               	btfsc	status,2,c
  6436  0001BE  D00D               	goto	u5520
  6437  0001C0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6438  0001C4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6439  0001C8  CFDE FFF6          	movff	postinc2,tblptrl
  6440  0001CC  CFDD FFF7          	movff	postdec2,tblptrh
  6441  0001D0                     	if	0	;tblptru may be non-zero
  6442  0001D0                     	endif
  6443  0001D0                     	if	0	;tblptru may be non-zero
  6444  0001D0                     	endif
  6445  0001D0  0008               	tblrd		*
  6446  0001D2  50F5               	movf	tablat,w,c
  6447  0001D4  0A69               	xorlw	105
  6448  0001D6  A4D8               	btfss	status,2,c
  6449  0001D8  D03F               	goto	l5557
  6450  0001DA                     u5520:
  6451                           
  6452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6453  0001DA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6454  0001DE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6455  0001E2  2ADE               	incf	postinc2,f,c
  6456  0001E4  0E00               	movlw	0
  6457  0001E6  22DD               	addwfc	postdec2,f,c
  6458                           
  6459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6460  0001E8  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6461  0001EC  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6462  0001F0  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6463  0001F4  0E02               	movlw	2
  6464  0001F6  26DE               	addwf	postinc2,f,c
  6465  0001F8  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6466  0001FC  0E00               	movlw	0
  6467  0001FE  22DD               	addwfc	postdec2,f,c
  6468  000200  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6469  000204  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6470  000208  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  6471  00020C  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  6472  000210  0E00               	movlw	0
  6473  000212  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  6474  000214  0EFF               	movlw	-1
  6475  000216  6E58               	movwf	vfpfcnvrt@ll+2,c
  6476  000218  6E59               	movwf	vfpfcnvrt@ll+3,c
  6477  00021A  6E5A               	movwf	vfpfcnvrt@ll+4,c
  6478  00021C  6E5B               	movwf	vfpfcnvrt@ll+5,c
  6479  00021E  6E5C               	movwf	vfpfcnvrt@ll+6,c
  6480  000220  6E5D               	movwf	vfpfcnvrt@ll+7,c
  6481                           
  6482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6483  000222  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  6484  000226  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6485  00022A  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  6486  00022E  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6487  000232  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6488  000236  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6489  00023A  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6490  00023E  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6491  000242  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6492  000246  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6493  00024A  EC07  F007         	call	_dtoa	;wreg free
  6494  00024E  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  6495  000252  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6496  000256  0012               	return	
  6497  000258                     l5557:
  6498                           
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6500  000258  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6501  00025C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6502  000260  CFDE FFF6          	movff	postinc2,tblptrl
  6503  000264  CFDD FFF7          	movff	postdec2,tblptrh
  6504  000268                     	if	0	;tblptru may be non-zero
  6505  000268                     	endif
  6506  000268                     	if	0	;tblptru may be non-zero
  6507  000268                     	endif
  6508  000268  0008               	tblrd		*
  6509  00026A  50F5               	movf	tablat,w,c
  6510  00026C  0A73               	xorlw	115
  6511  00026E  A4D8               	btfss	status,2,c
  6512  000270  D02A               	goto	l5565
  6513                           
  6514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6515  000272  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6516  000276  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6517  00027A  2ADE               	incf	postinc2,f,c
  6518  00027C  0E00               	movlw	0
  6519  00027E  22DD               	addwfc	postdec2,f,c
  6520                           
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6522  000280  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6523  000284  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6524  000288  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6525  00028C  0E02               	movlw	2
  6526  00028E  26DE               	addwf	postinc2,f,c
  6527  000290  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6528  000294  0E00               	movlw	0
  6529  000296  22DD               	addwfc	postdec2,f,c
  6530  000298  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6531  00029C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6532  0002A0  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  6533  0002A4  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6536  0002A8  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  6537  0002AC  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6538  0002B0  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  6539  0002B4  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6540  0002B8  EC8B  F00D         	call	_stoa	;wreg free
  6541  0002BC  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  6542  0002C0  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  6543  0002C4  0012               	return	
  6544  0002C6                     l5565:
  6545                           
  6546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6547  0002C6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6548  0002CA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6549  0002CE  CFDE FFF6          	movff	postinc2,tblptrl
  6550  0002D2  CFDD FFF7          	movff	postdec2,tblptrh
  6551  0002D6                     	if	0	;tblptru may be non-zero
  6552  0002D6                     	endif
  6553  0002D6                     	if	0	;tblptru may be non-zero
  6554  0002D6                     	endif
  6555  0002D6  0008               	tblrd		*
  6556  0002D8  50F5               	movf	tablat,w,c
  6557  0002DA  0A78               	xorlw	120
  6558  0002DC  B4D8               	btfsc	status,2,c
  6559  0002DE  D00D               	goto	u5550
  6560  0002E0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6561  0002E4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6562  0002E8  CFDE FFF6          	movff	postinc2,tblptrl
  6563  0002EC  CFDD FFF7          	movff	postdec2,tblptrh
  6564  0002F0                     	if	0	;tblptru may be non-zero
  6565  0002F0                     	endif
  6566  0002F0                     	if	0	;tblptru may be non-zero
  6567  0002F0                     	endif
  6568  0002F0  0008               	tblrd		*
  6569  0002F2  50F5               	movf	tablat,w,c
  6570  0002F4  0A58               	xorlw	88
  6571  0002F6  A4D8               	btfss	status,2,c
  6572  0002F8  D04D               	goto	l5579
  6573  0002FA                     u5550:
  6574                           
  6575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6576  0002FA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6577  0002FE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6578  000302  CFDE FFF6          	movff	postinc2,tblptrl
  6579  000306  CFDD FFF7          	movff	postdec2,tblptrh
  6580  00030A                     	if	0	;tblptru may be non-zero
  6581  00030A                     	endif
  6582  00030A                     	if	0	;tblptru may be non-zero
  6583  00030A                     	endif
  6584  00030A  0008               	tblrd		*
  6585  00030C  CFF5 F068          	movff	tablat,vfpfcnvrt@c
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6588  000310  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6589  000314  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6590  000318  2ADE               	incf	postinc2,f,c
  6591  00031A  0E00               	movlw	0
  6592  00031C  22DD               	addwfc	postdec2,f,c
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6595  00031E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6596  000322  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6597  000326  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6598  00032A  0E02               	movlw	2
  6599  00032C  26DE               	addwf	postinc2,f,c
  6600  00032E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6601  000332  0E00               	movlw	0
  6602  000334  22DD               	addwfc	postdec2,f,c
  6603  000336  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6604  00033A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6605  00033E  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  6606  000342  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  6607  000346  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6608  00034A  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6609  00034E  6A60               	clrf	vfpfcnvrt@llu+2,c
  6610  000350  6A61               	clrf	vfpfcnvrt@llu+3,c
  6611  000352  6A62               	clrf	vfpfcnvrt@llu+4,c
  6612  000354  6A63               	clrf	vfpfcnvrt@llu+5,c
  6613  000356  6A64               	clrf	vfpfcnvrt@llu+6,c
  6614  000358  6A65               	clrf	vfpfcnvrt@llu+7,c
  6615                           
  6616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  6617  00035A  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  6618  00035E  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6619  000362  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  6620  000366  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6621  00036A  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6622  00036E  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6623  000372  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6624  000376  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6625  00037A  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6626  00037E  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6627  000382  C068  F02F         	movff	vfpfcnvrt@c,xtoa@x
  6628  000386  EC45  F009         	call	_xtoa	;wreg free
  6629  00038A  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  6630  00038E  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6631  000392  0012               	return	
  6632  000394                     l5579:
  6633                           
  6634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6635  000394  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6636  000398  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6637  00039C  CFDE FFF6          	movff	postinc2,tblptrl
  6638  0003A0  CFDD FFF7          	movff	postdec2,tblptrh
  6639  0003A4                     	if	0	;tblptru may be non-zero
  6640  0003A4                     	endif
  6641  0003A4                     	if	0	;tblptru may be non-zero
  6642  0003A4                     	endif
  6643  0003A4  0008               	tblrd		*
  6644  0003A6  50F5               	movf	tablat,w,c
  6645  0003A8  0A25               	xorlw	37
  6646  0003AA  A4D8               	btfss	status,2,c
  6647  0003AC  D016               	goto	l5589
  6648                           
  6649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6650  0003AE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6651  0003B2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6652  0003B6  2ADE               	incf	postinc2,f,c
  6653  0003B8  0E00               	movlw	0
  6654  0003BA  22DD               	addwfc	postdec2,f,c
  6655                           
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6657  0003BC  0E00               	movlw	0
  6658  0003BE  6E0B               	movwf	fputc@c+1,c
  6659  0003C0  0E25               	movlw	37
  6660  0003C2  6E0A               	movwf	fputc@c,c
  6661  0003C4  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  6662  0003C8  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6663  0003CC  EC30  F011         	call	_fputc	;wreg free
  6664  0003D0                     l5585:
  6665                           
  6666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6667  0003D0  0E00               	movlw	0
  6668  0003D2  6E4D               	movwf	?_vfpfcnvrt+1,c
  6669  0003D4  0E01               	movlw	1
  6670  0003D6  6E4C               	movwf	?_vfpfcnvrt,c
  6671  0003D8  0012               	return	
  6672  0003DA                     l5589:
  6673                           
  6674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6675  0003DA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6676  0003DE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6677  0003E2  2ADE               	incf	postinc2,f,c
  6678  0003E4  0E00               	movlw	0
  6679  0003E6  22DD               	addwfc	postdec2,f,c
  6680                           
  6681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6682  0003E8  0E00               	movlw	0
  6683  0003EA  6E4D               	movwf	?_vfpfcnvrt+1,c
  6684  0003EC  0E00               	movlw	0
  6685  0003EE  6E4C               	movwf	?_vfpfcnvrt,c
  6686  0003F0  0012               	return	
  6687  0003F2                     l5595:
  6688                           
  6689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6690  0003F2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6691  0003F6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6692  0003FA  CFDE FFF6          	movff	postinc2,tblptrl
  6693  0003FE  CFDD FFF7          	movff	postdec2,tblptrh
  6694  000402                     	if	0	;tblptru may be non-zero
  6695  000402                     	endif
  6696  000402                     	if	0	;tblptru may be non-zero
  6697  000402                     	endif
  6698  000402  0008               	tblrd		*
  6699  000404  50F5               	movf	tablat,w,c
  6700  000406  6E0A               	movwf	fputc@c,c
  6701  000408  6A0B               	clrf	fputc@c+1,c
  6702  00040A  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  6703  00040E  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6704  000412  EC30  F011         	call	_fputc	;wreg free
  6705                           
  6706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6707  000416  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6708  00041A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6709  00041E  2ADE               	incf	postinc2,f,c
  6710  000420  0E00               	movlw	0
  6711  000422  22DD               	addwfc	postdec2,f,c
  6712  000424  D7D5               	goto	l5585
  6713  000426                     __end_of_vfpfcnvrt:
  6714                           	opt callstack 0
  6715                           
  6716 ;; *************** function _xtoa *****************
  6717 ;; Defined at:
  6718 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  6721 ;;		 -> NULL(0), 
  6722 ;;  d               8   38[COMRAM] unsigned long long 
  6723 ;;  x               1   46[COMRAM] unsigned char 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  n               8   63[COMRAM] unsigned long long 
  6726 ;;  c               2   73[COMRAM] int 
  6727 ;;  i               2   71[COMRAM] int 
  6728 ;;  w               2   61[COMRAM] int 
  6729 ;;  p               2   59[COMRAM] int 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2   36[COMRAM] int 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:       39 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    9
  6746 ;; This function calls:
  6747 ;;		_isalpha
  6748 ;;		_isupper
  6749 ;;		_pad
  6750 ;;		_toupper
  6751 ;; This function is called by:
  6752 ;;		_vfpfcnvrt
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text28
  6757  00128A                     __ptext28:
  6758                           	opt callstack 0
  6759  00128A                     _xtoa:
  6760                           	opt callstack 18
  6761                           
  6762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6763                           
  6764                           ;incstack = 0
  6765  00128A  AE74               	btfss	_prec+1,7,c
  6766                           
  6767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6768  00128C  9275               	bcf	_flags,1,c
  6769                           
  6770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6771  00128E  BE74               	btfsc	_prec+1,7,c
  6772  001290  D005               	goto	u5200
  6773  001292  5074               	movf	_prec+1,w,c
  6774  001294  E108               	bnz	l486
  6775  001296  0473               	decf	_prec,w,c
  6776  001298  B0D8               	btfsc	status,0,c
  6777  00129A  D005               	goto	l486
  6778  00129C                     u5200:
  6779  00129C  0E00               	movlw	0
  6780  00129E  6E3D               	movwf	xtoa@p+1,c
  6781  0012A0  0E01               	movlw	1
  6782  0012A2  6E3C               	movwf	xtoa@p,c
  6783  0012A4  D004               	goto	l488
  6784  0012A6                     l486:
  6785  0012A6  C073  F03C         	movff	_prec,xtoa@p
  6786  0012AA  C074  F03D         	movff	_prec+1,xtoa@p+1
  6787  0012AE                     l488:
  6788                           
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6790  0012AE  C0BF  F03E         	movff	_width,xtoa@w
  6791  0012B2  C0C0  F03F         	movff	_width+1,xtoa@w+1
  6792                           
  6793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6794  0012B6  A875               	btfss	_flags,4,c
  6795  0012B8  D004               	goto	l5391
  6796                           
  6797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6798  0012BA  0EFE               	movlw	254
  6799  0012BC  263E               	addwf	xtoa@w,f,c
  6800  0012BE  0EFF               	movlw	255
  6801  0012C0  223F               	addwfc	xtoa@w+1,f,c
  6802  0012C2                     l5391:
  6803                           
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6805  0012C2  C027  F040         	movff	xtoa@d,xtoa@n
  6806  0012C6  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  6807  0012CA  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  6808  0012CE  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  6809  0012D2  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  6810  0012D6  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  6811  0012DA  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  6812  0012DE  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  6813                           
  6814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6815  0012E2  0E00               	movlw	0
  6816  0012E4  6E49               	movwf	xtoa@i+1,c
  6817  0012E6  0E1F               	movlw	31
  6818  0012E8  6E48               	movwf	xtoa@i,c
  6819                           
  6820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6821  0012EA  0E00               	movlw	0
  6822  0012EC  0100               	movlb	0	; () banked
  6823  0012EE  6FEA               	movwf	(_dbuf+31)& (0+255),b
  6824                           
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6826  0012F0  D093               	goto	l5427
  6827  0012F2                     l5397:
  6828                           
  6829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6830  0012F2  0648               	decf	xtoa@i,f,c
  6831  0012F4  A0D8               	btfss	status,0,c
  6832  0012F6  0649               	decf	xtoa@i+1,f,c
  6833                           
  6834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6835  0012F8  0E0F               	movlw	15
  6836  0012FA  1440               	andwf	xtoa@n,w,c
  6837  0012FC  6E4A               	movwf	xtoa@c,c
  6838  0012FE  6A4B               	clrf	xtoa@c+1,c
  6839                           
  6840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6841  001300  BE4B               	btfsc	xtoa@c+1,7,c
  6842  001302  D008               	goto	l5405
  6843  001304  504B               	movf	xtoa@c+1,w,c
  6844  001306  E104               	bnz	u5220
  6845  001308  0E0A               	movlw	10
  6846  00130A  5C4A               	subwf	xtoa@c,w,c
  6847  00130C  A0D8               	btfss	status,0,c
  6848  00130E  D002               	goto	l5405
  6849  001310                     u5220:
  6850  001310  0E57               	movlw	87
  6851  001312  D001               	goto	L14
  6852  001314                     l5405:
  6853  001314  0E30               	movlw	48
  6854  001316                     L14:
  6855  001316  244A               	addwf	xtoa@c,w,c
  6856  001318  6E4A               	movwf	xtoa@c,c
  6857  00131A  0E00               	movlw	0
  6858  00131C  204B               	addwfc	xtoa@c+1,w,c
  6859  00131E  6E4B               	movwf	xtoa@c+1,c
  6860                           
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  6862  001320  0EBF               	movlw	191
  6863  001322  6E30               	movwf	??_xtoa& (0+255),c
  6864  001324  0EFF               	movlw	255
  6865  001326  6E31               	movwf	(??_xtoa+1)& (0+255),c
  6866  001328  502F               	movf	xtoa@x,w,c
  6867  00132A  6E32               	movwf	(??_xtoa+2)& (0+255),c
  6868  00132C  6A33               	clrf	(??_xtoa+3)& (0+255),c
  6869  00132E  5030               	movf	??_xtoa,w,c
  6870  001330  2632               	addwf	??_xtoa+2,f,c
  6871  001332  5031               	movf	??_xtoa+1,w,c
  6872  001334  2233               	addwfc	??_xtoa+3,f,c
  6873  001336  5033               	movf	??_xtoa+3,w,c
  6874  001338  E106               	bnz	u5230
  6875  00133A  0E1A               	movlw	26
  6876  00133C  5C32               	subwf	??_xtoa+2,w,c
  6877  00133E  B0D8               	btfsc	status,0,c
  6878  001340  D002               	goto	u5230
  6879  001342  0E01               	movlw	1
  6880  001344  D001               	goto	u5240
  6881  001346                     u5230:
  6882  001346  0E00               	movlw	0
  6883  001348                     u5240:
  6884  001348  6E38               	movwf	_xtoa$1116,c
  6885  00134A  6A39               	clrf	_xtoa$1116+1,c
  6886  00134C  5038               	movf	_xtoa$1116,w,c
  6887  00134E  1039               	iorwf	_xtoa$1116+1,w,c
  6888  001350  B4D8               	btfsc	status,2,c
  6889  001352  D027               	goto	l5419
  6890  001354  0E9F               	movlw	159
  6891  001356  6E30               	movwf	??_xtoa& (0+255),c
  6892  001358  0EFF               	movlw	255
  6893  00135A  6E31               	movwf	(??_xtoa+1)& (0+255),c
  6894  00135C  0E20               	movlw	32
  6895  00135E  104A               	iorwf	xtoa@c,w,c
  6896  001360  6E32               	movwf	(??_xtoa+2)& (0+255),c
  6897  001362  0E00               	movlw	0
  6898  001364  104B               	iorwf	xtoa@c+1,w,c
  6899  001366  6E33               	movwf	(??_xtoa+3)& (0+255),c
  6900  001368  5030               	movf	??_xtoa,w,c
  6901  00136A  2632               	addwf	??_xtoa+2,f,c
  6902  00136C  5031               	movf	??_xtoa+1,w,c
  6903  00136E  2233               	addwfc	??_xtoa+3,f,c
  6904  001370  5033               	movf	??_xtoa+3,w,c
  6905  001372  E106               	bnz	u5260
  6906  001374  0E1A               	movlw	26
  6907  001376  5C32               	subwf	??_xtoa+2,w,c
  6908  001378  B0D8               	btfsc	status,0,c
  6909  00137A  D002               	goto	u5260
  6910  00137C  0E01               	movlw	1
  6911  00137E  D001               	goto	u5270
  6912  001380                     u5260:
  6913  001380  0E00               	movlw	0
  6914  001382                     u5270:
  6915  001382  6E3A               	movwf	_xtoa$1117,c
  6916  001384  6A3B               	clrf	_xtoa$1117+1,c
  6917  001386  503A               	movf	_xtoa$1117,w,c
  6918  001388  103B               	iorwf	_xtoa$1117+1,w,c
  6919  00138A  B4D8               	btfsc	status,2,c
  6920  00138C  D00A               	goto	l5419
  6921                           
  6922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6923  00138E  C04A  F00C         	movff	xtoa@c,toupper@c
  6924  001392  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
  6925  001396  EC52  F012         	call	_toupper	;wreg free
  6926  00139A  C00C  F04A         	movff	?_toupper,xtoa@c
  6927  00139E  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
  6928  0013A2                     l5419:
  6929                           
  6930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6931  0013A2  0ECB               	movlw	low _dbuf
  6932  0013A4  2448               	addwf	xtoa@i,w,c
  6933  0013A6  6ED9               	movwf	fsr2l,c
  6934  0013A8  0E00               	movlw	high _dbuf
  6935  0013AA  2049               	addwfc	xtoa@i+1,w,c
  6936  0013AC  6EDA               	movwf	fsr2h,c
  6937  0013AE  C04A  FFDF         	movff	xtoa@c,indf2
  6938                           
  6939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6940  0013B2  063C               	decf	xtoa@p,f,c
  6941  0013B4  A0D8               	btfss	status,0,c
  6942  0013B6  063D               	decf	xtoa@p+1,f,c
  6943                           
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6945  0013B8  063E               	decf	xtoa@w,f,c
  6946  0013BA  A0D8               	btfss	status,0,c
  6947  0013BC  063F               	decf	xtoa@w+1,f,c
  6948                           
  6949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6950  0013BE  C040  F030         	movff	xtoa@n,??_xtoa
  6951  0013C2  C041  F031         	movff	xtoa@n+1,??_xtoa+1
  6952  0013C6  C042  F032         	movff	xtoa@n+2,??_xtoa+2
  6953  0013CA  C043  F033         	movff	xtoa@n+3,??_xtoa+3
  6954  0013CE  C044  F034         	movff	xtoa@n+4,??_xtoa+4
  6955  0013D2  C045  F035         	movff	xtoa@n+5,??_xtoa+5
  6956  0013D6  C046  F036         	movff	xtoa@n+6,??_xtoa+6
  6957  0013DA  C047  F037         	movff	xtoa@n+7,??_xtoa+7
  6958  0013DE  0E05               	movlw	5
  6959  0013E0  D009               	goto	u5290
  6960  0013E2                     u5295:
  6961  0013E2  90D8               	bcf	status,0,c
  6962  0013E4  3237               	rrcf	??_xtoa+7,f,c
  6963  0013E6  3236               	rrcf	??_xtoa+6,f,c
  6964  0013E8  3235               	rrcf	??_xtoa+5,f,c
  6965  0013EA  3234               	rrcf	??_xtoa+4,f,c
  6966  0013EC  3233               	rrcf	??_xtoa+3,f,c
  6967  0013EE  3232               	rrcf	??_xtoa+2,f,c
  6968  0013F0  3231               	rrcf	??_xtoa+1,f,c
  6969  0013F2  3230               	rrcf	??_xtoa,f,c
  6970  0013F4                     u5290:
  6971  0013F4  2EE8               	decfsz	wreg,f,c
  6972  0013F6  D7F5               	goto	u5295
  6973  0013F8  C030  F040         	movff	??_xtoa,xtoa@n
  6974  0013FC  C031  F041         	movff	??_xtoa+1,xtoa@n+1
  6975  001400  C032  F042         	movff	??_xtoa+2,xtoa@n+2
  6976  001404  C033  F043         	movff	??_xtoa+3,xtoa@n+3
  6977  001408  C034  F044         	movff	??_xtoa+4,xtoa@n+4
  6978  00140C  C035  F045         	movff	??_xtoa+5,xtoa@n+5
  6979  001410  C036  F046         	movff	??_xtoa+6,xtoa@n+6
  6980  001414  C037  F047         	movff	??_xtoa+7,xtoa@n+7
  6981  001418                     l5427:
  6982                           
  6983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6984  001418  BE49               	btfsc	xtoa@i+1,7,c
  6985  00141A  D020               	goto	u5340
  6986  00141C  5049               	movf	xtoa@i+1,w,c
  6987  00141E  E104               	bnz	u5300
  6988  001420  0E02               	movlw	2
  6989  001422  5C48               	subwf	xtoa@i,w,c
  6990  001424  A0D8               	btfss	status,0,c
  6991  001426  D01A               	goto	u5340
  6992  001428                     u5300:
  6993  001428  5040               	movf	xtoa@n,w,c
  6994  00142A  1041               	iorwf	xtoa@n+1,w,c
  6995  00142C  1042               	iorwf	xtoa@n+2,w,c
  6996  00142E  1043               	iorwf	xtoa@n+3,w,c
  6997  001430  1044               	iorwf	xtoa@n+4,w,c
  6998  001432  1045               	iorwf	xtoa@n+5,w,c
  6999  001434  1046               	iorwf	xtoa@n+6,w,c
  7000  001436  1047               	iorwf	xtoa@n+7,w,c
  7001  001438  A4D8               	btfss	status,2,c
  7002  00143A  D75B               	goto	l5397
  7003  00143C  BE3D               	btfsc	xtoa@p+1,7,c
  7004  00143E  D005               	goto	u5320
  7005  001440  503D               	movf	xtoa@p+1,w,c
  7006  001442  E102               	bnz	u5321
  7007  001444  043C               	decf	xtoa@p,w,c
  7008  001446  B0D8               	btfsc	status,0,c
  7009  001448                     u5321:
  7010  001448  D754               	goto	l5397
  7011  00144A                     u5320:
  7012  00144A  BE3F               	btfsc	xtoa@w+1,7,c
  7013  00144C  D007               	goto	u5340
  7014  00144E  503F               	movf	xtoa@w+1,w,c
  7015  001450  E103               	bnz	u5330
  7016  001452  043E               	decf	xtoa@w,w,c
  7017  001454  A0D8               	btfss	status,0,c
  7018  001456  D002               	goto	u5340
  7019  001458                     u5330:
  7020  001458  B275               	btfsc	_flags,1,c
  7021  00145A  D74B               	goto	l5397
  7022  00145C                     u5340:
  7023                           
  7024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7025  00145C  A875               	btfss	_flags,4,c
  7026  00145E  D016               	goto	l5443
  7027                           
  7028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7029  001460  0648               	decf	xtoa@i,f,c
  7030  001462  A0D8               	btfss	status,0,c
  7031  001464  0649               	decf	xtoa@i+1,f,c
  7032                           
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7034  001466  0ECB               	movlw	low _dbuf
  7035  001468  2448               	addwf	xtoa@i,w,c
  7036  00146A  6ED9               	movwf	fsr2l,c
  7037  00146C  0E00               	movlw	high _dbuf
  7038  00146E  2049               	addwfc	xtoa@i+1,w,c
  7039  001470  6EDA               	movwf	fsr2h,c
  7040  001472  C02F  FFDF         	movff	xtoa@x,indf2
  7041                           
  7042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7043  001476  0648               	decf	xtoa@i,f,c
  7044  001478  A0D8               	btfss	status,0,c
  7045  00147A  0649               	decf	xtoa@i+1,f,c
  7046                           
  7047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7048  00147C  0ECB               	movlw	low _dbuf
  7049  00147E  2448               	addwf	xtoa@i,w,c
  7050  001480  6ED9               	movwf	fsr2l,c
  7051  001482  0E00               	movlw	high _dbuf
  7052  001484  2049               	addwfc	xtoa@i+1,w,c
  7053  001486  6EDA               	movwf	fsr2h,c
  7054  001488  0E30               	movlw	48
  7055  00148A  6EDF               	movwf	indf2,c
  7056  00148C                     l5443:
  7057                           
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7059  00148C  C025  F01A         	movff	xtoa@fp,pad@fp
  7060  001490  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
  7061  001494  0ECB               	movlw	low _dbuf
  7062  001496  2448               	addwf	xtoa@i,w,c
  7063  001498  6E1C               	movwf	pad@buf,c
  7064  00149A  0E00               	movlw	high _dbuf
  7065  00149C  2049               	addwfc	xtoa@i+1,w,c
  7066  00149E  6E1D               	movwf	pad@buf+1,c
  7067  0014A0  C03E  F01E         	movff	xtoa@w,pad@p
  7068  0014A4  C03F  F01F         	movff	xtoa@w+1,pad@p+1
  7069  0014A8  EC22  F010         	call	_pad	;wreg free
  7070  0014AC  C01A  F025         	movff	?_pad,?_xtoa
  7071  0014B0  C01B  F026         	movff	?_pad+1,?_xtoa+1
  7072  0014B4  0012               	return		;funcret
  7073  0014B6                     __end_of_xtoa:
  7074                           	opt callstack 0
  7075                           
  7076 ;; *************** function _toupper *****************
  7077 ;; Defined at:
  7078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  c               2   11[COMRAM] int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  2   11[COMRAM] int 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;Total ram usage:        8 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    3
  7099 ;; This function calls:
  7100 ;;		_islower
  7101 ;; This function is called by:
  7102 ;;		_xtoa
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text29
  7107  0024A4                     __ptext29:
  7108                           	opt callstack 0
  7109  0024A4                     _toupper:
  7110                           	opt callstack 23
  7111                           
  7112                           ;incstack = 0
  7113  0024A4  0E9F               	movlw	159
  7114  0024A6  6E0E               	movwf	??_toupper& (0+255),c
  7115  0024A8  0EFF               	movlw	255
  7116  0024AA  6E0F               	movwf	(??_toupper+1)& (0+255),c
  7117  0024AC  C00C  F010         	movff	toupper@c,??_toupper+2
  7118  0024B0  C00D  F011         	movff	toupper@c+1,??_toupper+3
  7119  0024B4  500E               	movf	??_toupper,w,c
  7120  0024B6  2610               	addwf	??_toupper+2,f,c
  7121  0024B8  500F               	movf	??_toupper+1,w,c
  7122  0024BA  2211               	addwfc	??_toupper+3,f,c
  7123  0024BC  5011               	movf	??_toupper+3,w,c
  7124  0024BE  E106               	bnz	u4740
  7125  0024C0  0E1A               	movlw	26
  7126  0024C2  5C10               	subwf	??_toupper+2,w,c
  7127  0024C4  B0D8               	btfsc	status,0,c
  7128  0024C6  D002               	goto	u4740
  7129  0024C8  0E01               	movlw	1
  7130  0024CA  D001               	goto	u4750
  7131  0024CC                     u4740:
  7132  0024CC  0E00               	movlw	0
  7133  0024CE                     u4750:
  7134  0024CE  6E12               	movwf	_toupper$1681,c
  7135  0024D0  6A13               	clrf	_toupper$1681+1,c
  7136  0024D2  5012               	movf	_toupper$1681,w,c
  7137  0024D4  1013               	iorwf	_toupper$1681+1,w,c
  7138  0024D6  B4D8               	btfsc	status,2,c
  7139  0024D8  D005               	goto	l1327
  7140  0024DA  0E5F               	movlw	95
  7141  0024DC  140C               	andwf	toupper@c,w,c
  7142  0024DE  6E0C               	movwf	?_toupper,c
  7143  0024E0  6A0D               	clrf	?_toupper+1,c
  7144  0024E2  0012               	return	
  7145  0024E4                     l1327:
  7146  0024E4  C00C  F00C         	movff	toupper@c,?_toupper
  7147  0024E8  C00D  F00D         	movff	toupper@c+1,?_toupper+1
  7148  0024EC  0012               	return		;funcret
  7149  0024EE                     __end_of_toupper:
  7150                           	opt callstack 0
  7151                           
  7152 ;; *************** function _islower *****************
  7153 ;; Defined at:
  7154 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  c               2    5[COMRAM] int 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  2    5[COMRAM] int 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, status,0
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;Total ram usage:        6 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    2
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_toupper
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text30
  7183  002682                     __ptext30:
  7184                           	opt callstack 0
  7185  002682                     _islower:
  7186                           	opt callstack 23
  7187                           
  7188                           ;incstack = 0
  7189  002682  0E9F               	movlw	159
  7190  002684  6E08               	movwf	??_islower& (0+255),c
  7191  002686  0EFF               	movlw	255
  7192  002688  6E09               	movwf	(??_islower+1)& (0+255),c
  7193  00268A  C006  F00A         	movff	islower@c,??_islower+2
  7194  00268E  C007  F00B         	movff	islower@c+1,??_islower+3
  7195  002692  5008               	movf	??_islower,w,c
  7196  002694  260A               	addwf	??_islower+2,f,c
  7197  002696  5009               	movf	??_islower+1,w,c
  7198  002698  220B               	addwfc	??_islower+3,f,c
  7199  00269A  500B               	movf	??_islower+3,w,c
  7200  00269C  E106               	bnz	u4630
  7201  00269E  0E1A               	movlw	26
  7202  0026A0  5C0A               	subwf	??_islower+2,w,c
  7203  0026A2  B0D8               	btfsc	status,0,c
  7204  0026A4  D002               	goto	u4630
  7205  0026A6  0E01               	movlw	1
  7206  0026A8  D001               	goto	u4640
  7207  0026AA                     u4630:
  7208  0026AA  0E00               	movlw	0
  7209  0026AC                     u4640:
  7210  0026AC  6E06               	movwf	?_islower,c
  7211  0026AE  6A07               	clrf	?_islower+1,c
  7212  0026B0  0012               	return		;funcret
  7213  0026B2                     __end_of_islower:
  7214                           	opt callstack 0
  7215                           
  7216 ;; *************** function _isupper *****************
  7217 ;; Defined at:
  7218 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  c               2    5[COMRAM] int 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  2    5[COMRAM] int 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;Total ram usage:        6 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    2
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_xtoa
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text31
  7247  0026B2                     __ptext31:
  7248                           	opt callstack 0
  7249  0026B2                     _isupper:
  7250                           	opt callstack 24
  7251                           
  7252                           ;incstack = 0
  7253  0026B2  0EBF               	movlw	191
  7254  0026B4  6E08               	movwf	??_isupper& (0+255),c
  7255  0026B6  0EFF               	movlw	255
  7256  0026B8  6E09               	movwf	(??_isupper+1)& (0+255),c
  7257  0026BA  C006  F00A         	movff	isupper@c,??_isupper+2
  7258  0026BE  C007  F00B         	movff	isupper@c+1,??_isupper+3
  7259  0026C2  5008               	movf	??_isupper,w,c
  7260  0026C4  260A               	addwf	??_isupper+2,f,c
  7261  0026C6  5009               	movf	??_isupper+1,w,c
  7262  0026C8  220B               	addwfc	??_isupper+3,f,c
  7263  0026CA  500B               	movf	??_isupper+3,w,c
  7264  0026CC  E106               	bnz	u4700
  7265  0026CE  0E1A               	movlw	26
  7266  0026D0  5C0A               	subwf	??_isupper+2,w,c
  7267  0026D2  B0D8               	btfsc	status,0,c
  7268  0026D4  D002               	goto	u4700
  7269  0026D6  0E01               	movlw	1
  7270  0026D8  D001               	goto	u4710
  7271  0026DA                     u4700:
  7272  0026DA  0E00               	movlw	0
  7273  0026DC                     u4710:
  7274  0026DC  6E06               	movwf	?_isupper,c
  7275  0026DE  6A07               	clrf	?_isupper+1,c
  7276  0026E0  0012               	return		;funcret
  7277  0026E2                     __end_of_isupper:
  7278                           	opt callstack 0
  7279                           
  7280 ;; *************** function _isalpha *****************
  7281 ;; Defined at:
  7282 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  c               2    5[COMRAM] int 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  2    5[COMRAM] int 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;Total ram usage:        6 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    2
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_xtoa
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text32
  7311  0025E8                     __ptext32:
  7312                           	opt callstack 0
  7313  0025E8                     _isalpha:
  7314                           	opt callstack 24
  7315                           
  7316                           ;incstack = 0
  7317  0025E8  0E9F               	movlw	159
  7318  0025EA  6E08               	movwf	??_isalpha& (0+255),c
  7319  0025EC  0EFF               	movlw	255
  7320  0025EE  6E09               	movwf	(??_isalpha+1)& (0+255),c
  7321  0025F0  0E20               	movlw	32
  7322  0025F2  1006               	iorwf	isalpha@c,w,c
  7323  0025F4  6E0A               	movwf	(??_isalpha+2)& (0+255),c
  7324  0025F6  0E00               	movlw	0
  7325  0025F8  1007               	iorwf	isalpha@c+1,w,c
  7326  0025FA  6E0B               	movwf	(??_isalpha+3)& (0+255),c
  7327  0025FC  5008               	movf	??_isalpha,w,c
  7328  0025FE  260A               	addwf	??_isalpha+2,f,c
  7329  002600  5009               	movf	??_isalpha+1,w,c
  7330  002602  220B               	addwfc	??_isalpha+3,f,c
  7331  002604  500B               	movf	??_isalpha+3,w,c
  7332  002606  E106               	bnz	u4720
  7333  002608  0E1A               	movlw	26
  7334  00260A  5C0A               	subwf	??_isalpha+2,w,c
  7335  00260C  B0D8               	btfsc	status,0,c
  7336  00260E  D002               	goto	u4720
  7337  002610  0E01               	movlw	1
  7338  002612  D001               	goto	u4730
  7339  002614                     u4720:
  7340  002614  0E00               	movlw	0
  7341  002616                     u4730:
  7342  002616  6E06               	movwf	?_isalpha,c
  7343  002618  6A07               	clrf	?_isalpha+1,c
  7344  00261A  0012               	return		;funcret
  7345  00261C                     __end_of_isalpha:
  7346                           	opt callstack 0
  7347                           
  7348 ;; *************** function _stoa *****************
  7349 ;; Defined at:
  7350 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7353 ;;		 -> NULL(0), 
  7354 ;;  s               2   20[COMRAM] PTR unsigned char 
  7355 ;;		 -> ?_printf(2), STR_46(16), STR_44(14), STR_42(11), 
  7356 ;;		 -> STR_40(9), STR_38(16), STR_36(13), STR_34(13), 
  7357 ;;		 -> STR_32(9), STR_30(13), STR_28(14), STR_26(10), 
  7358 ;;		 -> STR_22(9), STR_16(14), STR_14(17), STR_12(15), 
  7359 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  7360 ;;		 -> STR_2(12), 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  nuls            7   23[COMRAM] unsigned char [7]
  7363 ;;  l               2   38[COMRAM] int 
  7364 ;;  p               2   36[COMRAM] int 
  7365 ;;  cp              2   34[COMRAM] PTR unsigned char 
  7366 ;;		 -> ?_printf(2), stoa@nuls(7), STR_46(16), STR_44(14), 
  7367 ;;		 -> STR_42(11), STR_40(9), STR_38(16), STR_36(13), 
  7368 ;;		 -> STR_34(13), STR_32(9), STR_30(13), STR_28(14), 
  7369 ;;		 -> STR_26(10), STR_22(9), STR_16(14), STR_14(17), 
  7370 ;;		 -> STR_12(15), STR_10(9), STR_8(16), STR_6(14), 
  7371 ;;		 -> STR_4(16), STR_2(12), 
  7372 ;;  w               2   32[COMRAM] int 
  7373 ;;  i               2   30[COMRAM] int 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2   18[COMRAM] int 
  7376 ;; Registers used:
  7377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7384 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;Total ram usage:       22 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    7
  7390 ;; This function calls:
  7391 ;;		_fputc
  7392 ;;		_strlen
  7393 ;; This function is called by:
  7394 ;;		_vfpfcnvrt
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text33
  7399  001B16                     __ptext33:
  7400                           	opt callstack 0
  7401  001B16                     _stoa:
  7402                           	opt callstack 20
  7403                           
  7404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7405                           
  7406                           ;incstack = 0
  7407  001B16  EE20  F0EB         	lfsr	2,stoa@F1139
  7408  001B1A  EE10  F018         	lfsr	1,stoa@nuls
  7409  001B1E  0E06               	movlw	6
  7410  001B20                     u5091:
  7411  001B20  CFDB FFE3          	movff	plusw2,plusw1
  7412  001B24  06E8               	decf	wreg,f,c
  7413  001B26  E2FC               	bc	u5091
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7416  001B28  C015  F023         	movff	stoa@s,stoa@cp
  7417  001B2C  C016  F024         	movff	stoa@s+1,stoa@cp+1
  7418                           
  7419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7420  001B30  5023               	movf	stoa@cp,w,c
  7421  001B32  1024               	iorwf	stoa@cp+1,w,c
  7422  001B34  A4D8               	btfss	status,2,c
  7423  001B36  D004               	goto	l5347
  7424                           
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7426  001B38  0E18               	movlw	low stoa@nuls
  7427  001B3A  6E23               	movwf	stoa@cp,c
  7428  001B3C  0E00               	movlw	high stoa@nuls
  7429  001B3E  6E24               	movwf	stoa@cp+1,c
  7430  001B40                     l5347:
  7431                           
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7433  001B40  C023  F006         	movff	stoa@cp,strlen@s
  7434  001B44  C024  F007         	movff	stoa@cp+1,strlen@s+1
  7435  001B48  EC77  F012         	call	_strlen	;wreg free
  7436  001B4C  C006  F027         	movff	?_strlen,stoa@l
  7437  001B50  C007  F028         	movff	?_strlen+1,stoa@l+1
  7438                           
  7439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7440  001B54  C073  F025         	movff	_prec,stoa@p
  7441  001B58  C074  F026         	movff	_prec+1,stoa@p+1
  7442                           
  7443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7444  001B5C  BE26               	btfsc	stoa@p+1,7,c
  7445  001B5E  D00E               	goto	l467
  7446  001B60  5027               	movf	stoa@l,w,c
  7447  001B62  5C25               	subwf	stoa@p,w,c
  7448  001B64  5026               	movf	stoa@p+1,w,c
  7449  001B66  0A80               	xorlw	128
  7450  001B68  6E17               	movwf	??_stoa& (0+255),c
  7451  001B6A  5028               	movf	stoa@l+1,w,c
  7452  001B6C  0A80               	xorlw	128
  7453  001B6E  5817               	subwfb	??_stoa& (0+255),w,c
  7454  001B70  B0D8               	btfsc	status,0,c
  7455  001B72  D004               	goto	l467
  7456  001B74  C025  F027         	movff	stoa@p,stoa@l
  7457  001B78  C026  F028         	movff	stoa@p+1,stoa@l+1
  7458  001B7C                     l467:
  7459                           
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7461  001B7C  C027  F025         	movff	stoa@l,stoa@p
  7462  001B80  C028  F026         	movff	stoa@l+1,stoa@p+1
  7463                           
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7465  001B84  C0BF  F021         	movff	_width,stoa@w
  7466  001B88  C0C0  F022         	movff	_width+1,stoa@w+1
  7467                           
  7468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7469  001B8C  A075               	btfss	_flags,0,c
  7470  001B8E  D00D               	goto	l5361
  7471  001B90  D016               	goto	u5140
  7472  001B92                     l5357:
  7473                           
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7475  001B92  0E00               	movlw	0
  7476  001B94  6E0B               	movwf	fputc@c+1,c
  7477  001B96  0E20               	movlw	32
  7478  001B98  6E0A               	movwf	fputc@c,c
  7479  001B9A  C013  F00C         	movff	stoa@fp,fputc@fp
  7480  001B9E  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7481  001BA2  EC30  F011         	call	_fputc	;wreg free
  7482                           
  7483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7484  001BA6  4A27               	infsnz	stoa@l,f,c
  7485  001BA8  2A28               	incf	stoa@l+1,f,c
  7486  001BAA                     l5361:
  7487                           
  7488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7489  001BAA  5021               	movf	stoa@w,w,c
  7490  001BAC  5C27               	subwf	stoa@l,w,c
  7491  001BAE  5028               	movf	stoa@l+1,w,c
  7492  001BB0  0A80               	xorlw	128
  7493  001BB2  6E17               	movwf	??_stoa& (0+255),c
  7494  001BB4  5022               	movf	stoa@w+1,w,c
  7495  001BB6  0A80               	xorlw	128
  7496  001BB8  5817               	subwfb	??_stoa& (0+255),w,c
  7497  001BBA  A0D8               	btfss	status,0,c
  7498  001BBC  D7EA               	goto	l5357
  7499  001BBE                     u5140:
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7502  001BBE  0E00               	movlw	0
  7503  001BC0  6E20               	movwf	stoa@i+1,c
  7504  001BC2  0E00               	movlw	0
  7505  001BC4  6E1F               	movwf	stoa@i,c
  7506                           
  7507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7508  001BC6  D01F               	goto	l5371
  7509  001BC8                     l5365:
  7510                           
  7511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7512  001BC8  C023  FFF6         	movff	stoa@cp,tblptrl
  7513  001BCC  C024  FFF7         	movff	stoa@cp+1,tblptrh
  7514  001BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  7515  001BD2  6EF8               	movwf	tblptru,c
  7516  001BD4  0E0F               	movlw	(high __ramtop+-1)
  7517  001BD6  64F7               	cpfsgt	tblptrh,c
  7518  001BD8  D003               	bra	u5157
  7519  001BDA  0008               	tblrd		*
  7520  001BDC  50F5               	movf	tablat,w,c
  7521  001BDE  D005               	bra	u5150
  7522  001BE0                     u5157:
  7523  001BE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7524  001BE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7525  001BE8  50E7               	movf	indf1,w,c
  7526  001BEA                     u5150:
  7527  001BEA  6E17               	movwf	??_stoa& (0+255),c
  7528  001BEC  5017               	movf	??_stoa,w,c
  7529  001BEE  6E0A               	movwf	fputc@c,c
  7530  001BF0  6A0B               	clrf	fputc@c+1,c
  7531  001BF2  C013  F00C         	movff	stoa@fp,fputc@fp
  7532  001BF6  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7533  001BFA  EC30  F011         	call	_fputc	;wreg free
  7534                           
  7535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7536  001BFE  4A23               	infsnz	stoa@cp,f,c
  7537  001C00  2A24               	incf	stoa@cp+1,f,c
  7538                           
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7540  001C02  4A1F               	infsnz	stoa@i,f,c
  7541  001C04  2A20               	incf	stoa@i+1,f,c
  7542  001C06                     l5371:
  7543                           
  7544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7545  001C06  5025               	movf	stoa@p,w,c
  7546  001C08  5C1F               	subwf	stoa@i,w,c
  7547  001C0A  5020               	movf	stoa@i+1,w,c
  7548  001C0C  0A80               	xorlw	128
  7549  001C0E  6E17               	movwf	??_stoa& (0+255),c
  7550  001C10  5026               	movf	stoa@p+1,w,c
  7551  001C12  0A80               	xorlw	128
  7552  001C14  5817               	subwfb	??_stoa& (0+255),w,c
  7553  001C16  A0D8               	btfss	status,0,c
  7554  001C18  D7D7               	goto	l5365
  7555                           
  7556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7557  001C1A  B075               	btfsc	_flags,0,c
  7558  001C1C  D00D               	goto	l5379
  7559  001C1E  D016               	goto	u5180
  7560  001C20                     l5375:
  7561                           
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7563  001C20  0E00               	movlw	0
  7564  001C22  6E0B               	movwf	fputc@c+1,c
  7565  001C24  0E20               	movlw	32
  7566  001C26  6E0A               	movwf	fputc@c,c
  7567  001C28  C013  F00C         	movff	stoa@fp,fputc@fp
  7568  001C2C  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7569  001C30  EC30  F011         	call	_fputc	;wreg free
  7570                           
  7571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7572  001C34  4A27               	infsnz	stoa@l,f,c
  7573  001C36  2A28               	incf	stoa@l+1,f,c
  7574  001C38                     l5379:
  7575                           
  7576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7577  001C38  5021               	movf	stoa@w,w,c
  7578  001C3A  5C27               	subwf	stoa@l,w,c
  7579  001C3C  5028               	movf	stoa@l+1,w,c
  7580  001C3E  0A80               	xorlw	128
  7581  001C40  6E17               	movwf	??_stoa& (0+255),c
  7582  001C42  5022               	movf	stoa@w+1,w,c
  7583  001C44  0A80               	xorlw	128
  7584  001C46  5817               	subwfb	??_stoa& (0+255),w,c
  7585  001C48  A0D8               	btfss	status,0,c
  7586  001C4A  D7EA               	goto	l5375
  7587  001C4C                     u5180:
  7588                           
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7590                           
  7591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  7592  001C4C  C027  F013         	movff	stoa@l,?_stoa
  7593  001C50  C028  F014         	movff	stoa@l+1,?_stoa+1
  7594  001C54  0012               	return		;funcret
  7595  001C56                     __end_of_stoa:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _dtoa *****************
  7599 ;; Defined at:
  7600 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  7603 ;;		 -> NULL(0), 
  7604 ;;  d               8   38[COMRAM] long long 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  n               8   62[COMRAM] long long 
  7607 ;;  i               2   70[COMRAM] int 
  7608 ;;  s               2   60[COMRAM] int 
  7609 ;;  w               2   58[COMRAM] int 
  7610 ;;  p               2   56[COMRAM] int 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  2   36[COMRAM] int 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7620 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;Total ram usage:       36 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    9
  7627 ;; This function calls:
  7628 ;;		___aodiv
  7629 ;;		___aomod
  7630 ;;		_abs
  7631 ;;		_pad
  7632 ;; This function is called by:
  7633 ;;		_vfpfcnvrt
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text34
  7638  000E0E                     __ptext34:
  7639                           	opt callstack 0
  7640  000E0E                     _dtoa:
  7641                           	opt callstack 18
  7642                           
  7643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7644                           
  7645                           ;incstack = 0
  7646  000E0E  C027  F03F         	movff	dtoa@d,dtoa@n
  7647  000E12  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  7648  000E16  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  7649  000E1A  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  7650  000E1E  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  7651  000E22  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  7652  000E26  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  7653  000E2A  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  7654                           
  7655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7656  000E2E  AE46               	btfss	dtoa@n+7,7,c
  7657  000E30  D002               	goto	u4940
  7658  000E32  0E01               	movlw	1
  7659  000E34  D001               	goto	u4950
  7660  000E36                     u4940:
  7661  000E36  0E00               	movlw	0
  7662  000E38                     u4950:
  7663  000E38  6E3D               	movwf	dtoa@s,c
  7664  000E3A  6A3E               	clrf	dtoa@s+1,c
  7665                           
  7666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7667  000E3C  503D               	movf	dtoa@s,w,c
  7668  000E3E  103E               	iorwf	dtoa@s+1,w,c
  7669  000E40  B4D8               	btfsc	status,2,c
  7670  000E42  D010               	goto	l5283
  7671                           
  7672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7673  000E44  1E46               	comf	dtoa@n+7,f,c
  7674  000E46  1E45               	comf	dtoa@n+6,f,c
  7675  000E48  1E44               	comf	dtoa@n+5,f,c
  7676  000E4A  1E43               	comf	dtoa@n+4,f,c
  7677  000E4C  1E42               	comf	dtoa@n+3,f,c
  7678  000E4E  1E41               	comf	dtoa@n+2,f,c
  7679  000E50  1E40               	comf	dtoa@n+1,f,c
  7680  000E52  6C3F               	negf	dtoa@n,c
  7681  000E54  0E00               	movlw	0
  7682  000E56  2240               	addwfc	dtoa@n+1,f,c
  7683  000E58  2241               	addwfc	dtoa@n+2,f,c
  7684  000E5A  2242               	addwfc	dtoa@n+3,f,c
  7685  000E5C  2243               	addwfc	dtoa@n+4,f,c
  7686  000E5E  2244               	addwfc	dtoa@n+5,f,c
  7687  000E60  2245               	addwfc	dtoa@n+6,f,c
  7688  000E62  2246               	addwfc	dtoa@n+7,f,c
  7689  000E64                     l5283:
  7690                           
  7691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7692  000E64  AE74               	btfss	_prec+1,7,c
  7693                           
  7694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7695  000E66  9275               	bcf	_flags,1,c
  7696                           
  7697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7698  000E68  BE74               	btfsc	_prec+1,7,c
  7699  000E6A  D005               	goto	u4980
  7700  000E6C  5074               	movf	_prec+1,w,c
  7701  000E6E  E108               	bnz	l438
  7702  000E70  0473               	decf	_prec,w,c
  7703  000E72  B0D8               	btfsc	status,0,c
  7704  000E74  D005               	goto	l438
  7705  000E76                     u4980:
  7706  000E76  0E00               	movlw	0
  7707  000E78  6E3A               	movwf	dtoa@p+1,c
  7708  000E7A  0E01               	movlw	1
  7709  000E7C  6E39               	movwf	dtoa@p,c
  7710  000E7E  D004               	goto	l440
  7711  000E80                     l438:
  7712  000E80  C073  F039         	movff	_prec,dtoa@p
  7713  000E84  C074  F03A         	movff	_prec+1,dtoa@p+1
  7714  000E88                     l440:
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7717  000E88  C0BF  F03B         	movff	_width,dtoa@w
  7718  000E8C  C0C0  F03C         	movff	_width+1,dtoa@w+1
  7719                           
  7720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7721  000E90  503D               	movf	dtoa@s,w,c
  7722  000E92  103E               	iorwf	dtoa@s+1,w,c
  7723  000E94  A4D8               	btfss	status,2,c
  7724  000E96  D002               	goto	u5000
  7725  000E98  A475               	btfss	_flags,2,c
  7726  000E9A  D003               	goto	l5297
  7727  000E9C                     u5000:
  7728                           
  7729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7730  000E9C  063B               	decf	dtoa@w,f,c
  7731  000E9E  A0D8               	btfss	status,0,c
  7732  000EA0  063C               	decf	dtoa@w+1,f,c
  7733  000EA2                     l5297:
  7734                           
  7735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7736  000EA2  0E00               	movlw	0
  7737  000EA4  6E48               	movwf	dtoa@i+1,c
  7738  000EA6  0E1F               	movlw	31
  7739  000EA8  6E47               	movwf	dtoa@i,c
  7740                           
  7741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7742  000EAA  0E00               	movlw	0
  7743  000EAC  0100               	movlb	0	; () banked
  7744  000EAE  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7745                           
  7746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7747  000EB0  D07C               	goto	l5311
  7748  000EB2                     l5301:
  7749                           
  7750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7751  000EB2  0647               	decf	dtoa@i,f,c
  7752  000EB4  A0D8               	btfss	status,0,c
  7753  000EB6  0648               	decf	dtoa@i+1,f,c
  7754                           
  7755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7756  000EB8  0ECB               	movlw	low _dbuf
  7757  000EBA  2447               	addwf	dtoa@i,w,c
  7758  000EBC  6ED9               	movwf	fsr2l,c
  7759  000EBE  0E00               	movlw	high _dbuf
  7760  000EC0  2048               	addwfc	dtoa@i+1,w,c
  7761  000EC2  6EDA               	movwf	fsr2h,c
  7762  000EC4  C03F  F006         	movff	dtoa@n,___aomod@dividend
  7763  000EC8  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
  7764  000ECC  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
  7765  000ED0  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
  7766  000ED4  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  7767  000ED8  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  7768  000EDC  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  7769  000EE0  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  7770  000EE4  0E0A               	movlw	10
  7771  000EE6  6E0E               	movwf	___aomod@divisor,c
  7772  000EE8  0E00               	movlw	0
  7773  000EEA  6E0F               	movwf	___aomod@divisor+1,c
  7774  000EEC  0E00               	movlw	0
  7775  000EEE  6E10               	movwf	___aomod@divisor+2,c
  7776  000EF0  0E00               	movlw	0
  7777  000EF2  6E11               	movwf	___aomod@divisor+3,c
  7778  000EF4  0E00               	movlw	0
  7779  000EF6  6E12               	movwf	___aomod@divisor+4,c
  7780  000EF8  0E00               	movlw	0
  7781  000EFA  6E13               	movwf	___aomod@divisor+5,c
  7782  000EFC  0E00               	movlw	0
  7783  000EFE  6E14               	movwf	___aomod@divisor+6,c
  7784  000F00  0E00               	movlw	0
  7785  000F02  6E15               	movwf	___aomod@divisor+7,c
  7786  000F04  ECCB  F00E         	call	___aomod	;wreg free
  7787  000F08  C006  F02F         	movff	?___aomod,??_dtoa
  7788  000F0C  C007  F030         	movff	?___aomod+1,??_dtoa+1
  7789  000F10  C008  F031         	movff	?___aomod+2,??_dtoa+2
  7790  000F14  C009  F032         	movff	?___aomod+3,??_dtoa+3
  7791  000F18  C00A  F033         	movff	?___aomod+4,??_dtoa+4
  7792  000F1C  C00B  F034         	movff	?___aomod+5,??_dtoa+5
  7793  000F20  C00C  F035         	movff	?___aomod+6,??_dtoa+6
  7794  000F24  C00D  F036         	movff	?___aomod+7,??_dtoa+7
  7795  000F28  C02F  F018         	movff	??_dtoa,abs@a
  7796  000F2C  C031  F019         	movff	??_dtoa+2,abs@a+1
  7797  000F30  EC28  F013         	call	_abs	;wreg free
  7798  000F34  5018               	movf	?_abs,w,c
  7799  000F36  0F30               	addlw	48
  7800  000F38  6EDF               	movwf	indf2,c
  7801                           
  7802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7803  000F3A  0639               	decf	dtoa@p,f,c
  7804  000F3C  A0D8               	btfss	status,0,c
  7805  000F3E  063A               	decf	dtoa@p+1,f,c
  7806                           
  7807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7808  000F40  063B               	decf	dtoa@w,f,c
  7809  000F42  A0D8               	btfss	status,0,c
  7810  000F44  063C               	decf	dtoa@w+1,f,c
  7811                           
  7812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7813  000F46  C03F  F006         	movff	dtoa@n,___aodiv@dividend
  7814  000F4A  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  7815  000F4E  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  7816  000F52  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  7817  000F56  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  7818  000F5A  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  7819  000F5E  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  7820  000F62  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  7821  000F66  0E0A               	movlw	10
  7822  000F68  6E0E               	movwf	___aodiv@divisor,c
  7823  000F6A  0E00               	movlw	0
  7824  000F6C  6E0F               	movwf	___aodiv@divisor+1,c
  7825  000F6E  0E00               	movlw	0
  7826  000F70  6E10               	movwf	___aodiv@divisor+2,c
  7827  000F72  0E00               	movlw	0
  7828  000F74  6E11               	movwf	___aodiv@divisor+3,c
  7829  000F76  0E00               	movlw	0
  7830  000F78  6E12               	movwf	___aodiv@divisor+4,c
  7831  000F7A  0E00               	movlw	0
  7832  000F7C  6E13               	movwf	___aodiv@divisor+5,c
  7833  000F7E  0E00               	movlw	0
  7834  000F80  6E14               	movwf	___aodiv@divisor+6,c
  7835  000F82  0E00               	movlw	0
  7836  000F84  6E15               	movwf	___aodiv@divisor+7,c
  7837  000F86  EC47  F00C         	call	___aodiv	;wreg free
  7838  000F8A  C006  F03F         	movff	?___aodiv,dtoa@n
  7839  000F8E  C007  F040         	movff	?___aodiv+1,dtoa@n+1
  7840  000F92  C008  F041         	movff	?___aodiv+2,dtoa@n+2
  7841  000F96  C009  F042         	movff	?___aodiv+3,dtoa@n+3
  7842  000F9A  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
  7843  000F9E  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
  7844  000FA2  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
  7845  000FA6  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
  7846  000FAA                     l5311:
  7847                           
  7848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7849  000FAA  BE48               	btfsc	dtoa@i+1,7,c
  7850  000FAC  D01F               	goto	u5050
  7851  000FAE  5048               	movf	dtoa@i+1,w,c
  7852  000FB0  E103               	bnz	u5010
  7853  000FB2  0447               	decf	dtoa@i,w,c
  7854  000FB4  A0D8               	btfss	status,0,c
  7855  000FB6  D01A               	goto	u5050
  7856  000FB8                     u5010:
  7857  000FB8  503F               	movf	dtoa@n,w,c
  7858  000FBA  1040               	iorwf	dtoa@n+1,w,c
  7859  000FBC  1041               	iorwf	dtoa@n+2,w,c
  7860  000FBE  1042               	iorwf	dtoa@n+3,w,c
  7861  000FC0  1043               	iorwf	dtoa@n+4,w,c
  7862  000FC2  1044               	iorwf	dtoa@n+5,w,c
  7863  000FC4  1045               	iorwf	dtoa@n+6,w,c
  7864  000FC6  1046               	iorwf	dtoa@n+7,w,c
  7865  000FC8  A4D8               	btfss	status,2,c
  7866  000FCA  D773               	goto	l5301
  7867  000FCC  BE3A               	btfsc	dtoa@p+1,7,c
  7868  000FCE  D005               	goto	u5030
  7869  000FD0  503A               	movf	dtoa@p+1,w,c
  7870  000FD2  E102               	bnz	u5031
  7871  000FD4  0439               	decf	dtoa@p,w,c
  7872  000FD6  B0D8               	btfsc	status,0,c
  7873  000FD8                     u5031:
  7874  000FD8  D76C               	goto	l5301
  7875  000FDA                     u5030:
  7876  000FDA  BE3C               	btfsc	dtoa@w+1,7,c
  7877  000FDC  D007               	goto	u5050
  7878  000FDE  503C               	movf	dtoa@w+1,w,c
  7879  000FE0  E103               	bnz	u5040
  7880  000FE2  043B               	decf	dtoa@w,w,c
  7881  000FE4  A0D8               	btfss	status,0,c
  7882  000FE6  D002               	goto	u5050
  7883  000FE8                     u5040:
  7884  000FE8  B275               	btfsc	_flags,1,c
  7885  000FEA  D763               	goto	l5301
  7886  000FEC                     u5050:
  7887                           
  7888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7889  000FEC  503D               	movf	dtoa@s,w,c
  7890  000FEE  103E               	iorwf	dtoa@s+1,w,c
  7891  000FF0  A4D8               	btfss	status,2,c
  7892  000FF2  D002               	goto	u5070
  7893  000FF4  A475               	btfss	_flags,2,c
  7894  000FF6  D017               	goto	l5335
  7895  000FF8                     u5070:
  7896                           
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7898  000FF8  0647               	decf	dtoa@i,f,c
  7899  000FFA  A0D8               	btfss	status,0,c
  7900  000FFC  0648               	decf	dtoa@i+1,f,c
  7901                           
  7902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7903  000FFE  503D               	movf	dtoa@s,w,c
  7904  001000  103E               	iorwf	dtoa@s+1,w,c
  7905  001002  A4D8               	btfss	status,2,c
  7906  001004  D004               	goto	l5331
  7907  001006  0E00               	movlw	0
  7908  001008  6E38               	movwf	_dtoa$1094+1,c
  7909  00100A  0E2B               	movlw	43
  7910  00100C  D003               	goto	L15
  7911  00100E                     l5331:
  7912  00100E  0E00               	movlw	0
  7913  001010  6E38               	movwf	_dtoa$1094+1,c
  7914  001012  0E2D               	movlw	45
  7915  001014                     L15:
  7916  001014  6E37               	movwf	_dtoa$1094,c
  7917  001016  0ECB               	movlw	low _dbuf
  7918  001018  2447               	addwf	dtoa@i,w,c
  7919  00101A  6ED9               	movwf	fsr2l,c
  7920  00101C  0E00               	movlw	high _dbuf
  7921  00101E  2048               	addwfc	dtoa@i+1,w,c
  7922  001020  6EDA               	movwf	fsr2h,c
  7923  001022  C037  FFDF         	movff	_dtoa$1094,indf2
  7924  001026                     l5335:
  7925                           
  7926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7927  001026  C025  F01A         	movff	dtoa@fp,pad@fp
  7928  00102A  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  7929  00102E  0ECB               	movlw	low _dbuf
  7930  001030  2447               	addwf	dtoa@i,w,c
  7931  001032  6E1C               	movwf	pad@buf,c
  7932  001034  0E00               	movlw	high _dbuf
  7933  001036  2048               	addwfc	dtoa@i+1,w,c
  7934  001038  6E1D               	movwf	pad@buf+1,c
  7935  00103A  C03B  F01E         	movff	dtoa@w,pad@p
  7936  00103E  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  7937  001042  EC22  F010         	call	_pad	;wreg free
  7938  001046  C01A  F025         	movff	?_pad,?_dtoa
  7939  00104A  C01B  F026         	movff	?_pad+1,?_dtoa+1
  7940  00104E  0012               	return		;funcret
  7941  001050                     __end_of_dtoa:
  7942                           	opt callstack 0
  7943                           
  7944 ;; *************** function _pad *****************
  7945 ;; Defined at:
  7946 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  7949 ;;		 -> NULL(0), 
  7950 ;;  buf             2   27[COMRAM] PTR unsigned char 
  7951 ;;		 -> dbuf(32), 
  7952 ;;  p               2   29[COMRAM] int 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  w               2   34[COMRAM] int 
  7955 ;;  i               2   32[COMRAM] int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2   25[COMRAM] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7965 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;Total ram usage:       11 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    8
  7972 ;; This function calls:
  7973 ;;		_fputc
  7974 ;;		_fputs
  7975 ;;		_strlen
  7976 ;; This function is called by:
  7977 ;;		_dtoa
  7978 ;;		_xtoa
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text35
  7983  002044                     __ptext35:
  7984                           	opt callstack 0
  7985  002044                     _pad:
  7986                           	opt callstack 18
  7987                           
  7988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7989                           
  7990                           ;incstack = 0
  7991  002044  A075               	btfss	_flags,0,c
  7992  002046  D00A               	goto	l5135
  7993                           
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7995  002048  C01C  F013         	movff	pad@buf,fputs@s
  7996  00204C  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7997  002050  C01A  F015         	movff	pad@fp,fputs@fp
  7998  002054  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7999  002058  ECD8  F012         	call	_fputs	;wreg free
  8000  00205C                     l5135:
  8001                           
  8002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8003  00205C  BE1F               	btfsc	pad@p+1,7,c
  8004  00205E  D005               	goto	l5139
  8005  002060  C01E  F023         	movff	pad@p,pad@w
  8006  002064  C01F  F024         	movff	pad@p+1,pad@w+1
  8007  002068  D004               	goto	l427
  8008  00206A                     l5139:
  8009  00206A  0E00               	movlw	0
  8010  00206C  6E24               	movwf	pad@w+1,c
  8011  00206E  0E00               	movlw	0
  8012  002070  6E23               	movwf	pad@w,c
  8013  002072                     l427:
  8014                           
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8016  002072  0E00               	movlw	0
  8017  002074  6E22               	movwf	pad@i+1,c
  8018  002076  0E00               	movlw	0
  8019  002078  6E21               	movwf	pad@i,c
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8022  00207A  D00C               	goto	l5145
  8023  00207C                     l5141:
  8024                           
  8025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8026  00207C  0E00               	movlw	0
  8027  00207E  6E0B               	movwf	fputc@c+1,c
  8028  002080  0E20               	movlw	32
  8029  002082  6E0A               	movwf	fputc@c,c
  8030  002084  C01A  F00C         	movff	pad@fp,fputc@fp
  8031  002088  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  8032  00208C  EC30  F011         	call	_fputc	;wreg free
  8033                           
  8034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8035  002090  4A21               	infsnz	pad@i,f,c
  8036  002092  2A22               	incf	pad@i+1,f,c
  8037  002094                     l5145:
  8038                           
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8040  002094  5023               	movf	pad@w,w,c
  8041  002096  5C21               	subwf	pad@i,w,c
  8042  002098  5022               	movf	pad@i+1,w,c
  8043  00209A  0A80               	xorlw	128
  8044  00209C  6E20               	movwf	??_pad& (0+255),c
  8045  00209E  5024               	movf	pad@w+1,w,c
  8046  0020A0  0A80               	xorlw	128
  8047  0020A2  5820               	subwfb	??_pad& (0+255),w,c
  8048  0020A4  A0D8               	btfss	status,0,c
  8049  0020A6  D7EA               	goto	l5141
  8050                           
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8052  0020A8  B075               	btfsc	_flags,0,c
  8053  0020AA  D00A               	goto	l5149
  8054                           
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8056  0020AC  C01C  F013         	movff	pad@buf,fputs@s
  8057  0020B0  C01D  F014         	movff	pad@buf+1,fputs@s+1
  8058  0020B4  C01A  F015         	movff	pad@fp,fputs@fp
  8059  0020B8  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  8060  0020BC  ECD8  F012         	call	_fputs	;wreg free
  8061  0020C0                     l5149:
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8064  0020C0  C01C  F006         	movff	pad@buf,strlen@s
  8065  0020C4  C01D  F007         	movff	pad@buf+1,strlen@s+1
  8066  0020C8  EC77  F012         	call	_strlen	;wreg free
  8067  0020CC  5023               	movf	pad@w,w,c
  8068  0020CE  2406               	addwf	?_strlen,w,c
  8069  0020D0  6E1A               	movwf	?_pad,c
  8070  0020D2  5024               	movf	pad@w+1,w,c
  8071  0020D4  2007               	addwfc	?_strlen+1,w,c
  8072  0020D6  6E1B               	movwf	?_pad+1,c
  8073  0020D8  0012               	return		;funcret
  8074  0020DA                     __end_of_pad:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function _strlen *****************
  8078 ;; Defined at:
  8079 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8082 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_46(16), 
  8083 ;;		 -> STR_44(14), STR_42(11), STR_40(9), STR_38(16), 
  8084 ;;		 -> STR_36(13), STR_34(13), STR_32(9), STR_30(13), 
  8085 ;;		 -> STR_28(14), STR_26(10), STR_22(9), STR_16(14), 
  8086 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  8087 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8090 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_46(16), 
  8091 ;;		 -> STR_44(14), STR_42(11), STR_40(9), STR_38(16), 
  8092 ;;		 -> STR_36(13), STR_34(13), STR_32(9), STR_30(13), 
  8093 ;;		 -> STR_28(14), STR_26(10), STR_22(9), STR_16(14), 
  8094 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  8095 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  2    5[COMRAM] unsigned int 
  8098 ;; Registers used:
  8099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;Total ram usage:        4 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    2
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_pad
  8116 ;;		_stoa
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text36
  8121  0024EE                     __ptext36:
  8122                           	opt callstack 0
  8123  0024EE                     _strlen:
  8124                           	opt callstack 23
  8125                           
  8126                           ;incstack = 0
  8127  0024EE  C006  F008         	movff	strlen@s,strlen@a
  8128  0024F2  C007  F009         	movff	strlen@s+1,strlen@a+1
  8129  0024F6  D002               	goto	l5121
  8130  0024F8                     l5119:
  8131  0024F8  4A06               	infsnz	strlen@s,f,c
  8132  0024FA  2A07               	incf	strlen@s+1,f,c
  8133  0024FC                     l5121:
  8134  0024FC  C006  FFF6         	movff	strlen@s,tblptrl
  8135  002500  C007  FFF7         	movff	strlen@s+1,tblptrh
  8136  002504  0E00               	movlw	low (__mediumconst shr (0+16))
  8137  002506  6EF8               	movwf	tblptru,c
  8138  002508  0E0F               	movlw	(high __ramtop+-1)
  8139  00250A  64F7               	cpfsgt	tblptrh,c
  8140  00250C  D003               	bra	u4617
  8141  00250E  0008               	tblrd		*
  8142  002510  50F5               	movf	tablat,w,c
  8143  002512  D005               	bra	u4610
  8144  002514                     u4617:
  8145  002514  CFF6 FFE1          	movff	tblptrl,fsr1l
  8146  002518  CFF7 FFE2          	movff	tblptrh,fsr1h
  8147  00251C  50E7               	movf	indf1,w,c
  8148  00251E                     u4610:
  8149  00251E  0900               	iorlw	0
  8150  002520  A4D8               	btfss	status,2,c
  8151  002522  D7EA               	goto	l5119
  8152  002524  5008               	movf	strlen@a,w,c
  8153  002526  5C06               	subwf	strlen@s,w,c
  8154  002528  6E06               	movwf	?_strlen,c
  8155  00252A  5009               	movf	strlen@a+1,w,c
  8156  00252C  5807               	subwfb	strlen@s+1,w,c
  8157  00252E  6E07               	movwf	?_strlen+1,c
  8158  002530  0012               	return		;funcret
  8159  002532                     __end_of_strlen:
  8160                           	opt callstack 0
  8161                           
  8162 ;; *************** function _fputs *****************
  8163 ;; Defined at:
  8164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  s               2   18[COMRAM] PTR const unsigned char 
  8167 ;;		 -> dbuf(32), 
  8168 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  8169 ;;		 -> NULL(0), 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  i               2   23[COMRAM] int 
  8172 ;;  c               1   22[COMRAM] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2   18[COMRAM] int 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        7 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    7
  8189 ;; This function calls:
  8190 ;;		_fputc
  8191 ;; This function is called by:
  8192 ;;		_pad
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text37
  8197  0025B0                     __ptext37:
  8198                           	opt callstack 0
  8199  0025B0                     _fputs:
  8200                           	opt callstack 18
  8201                           
  8202                           ;incstack = 0
  8203  0025B0  0E00               	movlw	0
  8204  0025B2  6E19               	movwf	fputs@i+1,c
  8205  0025B4  0E00               	movlw	0
  8206  0025B6  6E18               	movwf	fputs@i,c
  8207  0025B8  D00B               	goto	l5115
  8208  0025BA                     l5111:
  8209  0025BA  C017  F00A         	movff	fputs@c,fputc@c
  8210  0025BE  6A0B               	clrf	fputc@c+1,c
  8211  0025C0  C015  F00C         	movff	fputs@fp,fputc@fp
  8212  0025C4  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  8213  0025C8  EC30  F011         	call	_fputc	;wreg free
  8214  0025CC  4A18               	infsnz	fputs@i,f,c
  8215  0025CE  2A19               	incf	fputs@i+1,f,c
  8216  0025D0                     l5115:
  8217  0025D0  5018               	movf	fputs@i,w,c
  8218  0025D2  2413               	addwf	fputs@s,w,c
  8219  0025D4  6ED9               	movwf	fsr2l,c
  8220  0025D6  5019               	movf	fputs@i+1,w,c
  8221  0025D8  2014               	addwfc	fputs@s+1,w,c
  8222  0025DA  6EDA               	movwf	fsr2h,c
  8223  0025DC  50DF               	movf	indf2,w,c
  8224  0025DE  6E17               	movwf	fputs@c,c
  8225  0025E0  5017               	movf	fputs@c,w,c
  8226  0025E2  B4D8               	btfsc	status,2,c
  8227  0025E4  0012               	return	
  8228  0025E6  D7E9               	goto	l5111
  8229  0025E8                     __end_of_fputs:
  8230                           	opt callstack 0
  8231                           
  8232 ;; *************** function _fputc *****************
  8233 ;; Defined at:
  8234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  c               2    9[COMRAM] int 
  8237 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8238 ;;		 -> NULL(0), 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  2    9[COMRAM] int 
  8243 ;; Registers used:
  8244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8254 ;;Total ram usage:        9 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    6
  8257 ;; This function calls:
  8258 ;;		_putch
  8259 ;; This function is called by:
  8260 ;;		_pad
  8261 ;;		_stoa
  8262 ;;		_vfpfcnvrt
  8263 ;;		_fputs
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text38
  8268  002260                     __ptext38:
  8269                           	opt callstack 0
  8270  002260                     _fputc:
  8271                           	opt callstack 18
  8272                           
  8273                           ;incstack = 0
  8274  002260  500C               	movf	fputc@fp,w,c
  8275  002262  100D               	iorwf	fputc@fp+1,w,c
  8276  002264  B4D8               	btfsc	status,2,c
  8277  002266  D004               	goto	u4570
  8278  002268  500C               	movf	fputc@fp,w,c
  8279  00226A  100D               	iorwf	fputc@fp+1,w,c
  8280  00226C  A4D8               	btfss	status,2,c
  8281  00226E  D004               	goto	l5101
  8282  002270                     u4570:
  8283  002270  500A               	movf	fputc@c,w,c
  8284  002272  EC4B  F014         	call	_putch
  8285  002276  0012               	return	
  8286  002278                     l5101:
  8287  002278  EE20 F004          	lfsr	2,4
  8288  00227C  500C               	movf	fputc@fp,w,c
  8289  00227E  26D9               	addwf	fsr2l,f,c
  8290  002280  500D               	movf	fputc@fp+1,w,c
  8291  002282  22DA               	addwfc	fsr2h,f,c
  8292  002284  50DE               	movf	postinc2,w,c
  8293  002286  10DE               	iorwf	postinc2,w,c
  8294  002288  B4D8               	btfsc	status,2,c
  8295  00228A  D016               	goto	u4590
  8296  00228C  EE20 F004          	lfsr	2,4
  8297  002290  500C               	movf	fputc@fp,w,c
  8298  002292  26D9               	addwf	fsr2l,f,c
  8299  002294  500D               	movf	fputc@fp+1,w,c
  8300  002296  22DA               	addwfc	fsr2h,f,c
  8301  002298  EE10 F002          	lfsr	1,2
  8302  00229C  500C               	movf	fputc@fp,w,c
  8303  00229E  26E1               	addwf	fsr1l,f,c
  8304  0022A0  500D               	movf	fputc@fp+1,w,c
  8305  0022A2  22E2               	addwfc	fsr1h,f,c
  8306  0022A4  50DE               	movf	postinc2,w,c
  8307  0022A6  5CE6               	subwf	postinc1,w,c
  8308  0022A8  50E6               	movf	postinc1,w,c
  8309  0022AA  0A80               	xorlw	128
  8310  0022AC  6E12               	movwf	(??_fputc+4)& (0+255),c
  8311  0022AE  50DE               	movf	postinc2,w,c
  8312  0022B0  0A80               	xorlw	128
  8313  0022B2  5812               	subwfb	(??_fputc+4)& (0+255),w,c
  8314  0022B4  B0D8               	btfsc	status,0,c
  8315  0022B6  0012               	return	
  8316  0022B8                     u4590:
  8317  0022B8  EE20 F002          	lfsr	2,2
  8318  0022BC  500C               	movf	fputc@fp,w,c
  8319  0022BE  26D9               	addwf	fsr2l,f,c
  8320  0022C0  500D               	movf	fputc@fp+1,w,c
  8321  0022C2  22DA               	addwfc	fsr2h,f,c
  8322  0022C4  2ADE               	incf	postinc2,f,c
  8323  0022C6  0E00               	movlw	0
  8324  0022C8  22DD               	addwfc	postdec2,f,c
  8325  0022CA  0012               	return		;funcret
  8326  0022CC                     __end_of_fputc:
  8327                           	opt callstack 0
  8328                           
  8329 ;; *************** function _putch *****************
  8330 ;; Defined at:
  8331 ;;		line 102 in file "lcd.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  data            1    wreg     unsigned char 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  data            1    8[COMRAM] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;Total ram usage:        1 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    5
  8352 ;; This function calls:
  8353 ;;		_send_byte
  8354 ;; This function is called by:
  8355 ;;		_fputc
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	text39
  8360  002896                     __ptext39:
  8361                           	opt callstack 0
  8362  002896                     _putch:
  8363                           	opt callstack 18
  8364                           
  8365                           ;incstack = 0
  8366                           ;putch@data stored from wreg
  8367  002896  6E09               	movwf	putch@data,c
  8368                           
  8369                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  8370  002898  848C               	bsf	3980,2,c	;volatile
  8371                           
  8372                           ;lcd.c: 104:     send_byte((unsigned char)data);
  8373  00289A  5009               	movf	putch@data,w,c
  8374  00289C  EC42  F014         	call	_send_byte
  8375  0028A0  0012               	return		;funcret
  8376  0028A2                     __end_of_putch:
  8377                           	opt callstack 0
  8378                           
  8379 ;; *************** function _abs *****************
  8380 ;; Defined at:
  8381 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  a               2   23[COMRAM] int 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  2   23[COMRAM] int 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;Total ram usage:        4 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    2
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_dtoa
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text40
  8410  002650                     __ptext40:
  8411                           	opt callstack 0
  8412  002650                     _abs:
  8413                           	opt callstack 24
  8414                           
  8415                           ;incstack = 0
  8416  002650  BE19               	btfsc	abs@a+1,7,c
  8417  002652  D005               	goto	u4690
  8418  002654  5019               	movf	abs@a+1,w,c
  8419  002656  E110               	bnz	l1229
  8420  002658  0418               	decf	abs@a,w,c
  8421  00265A  B0D8               	btfsc	status,0,c
  8422  00265C  D00D               	goto	l1229
  8423  00265E                     u4690:
  8424  00265E  C018  F01A         	movff	abs@a,??_abs
  8425  002662  C019  F01B         	movff	abs@a+1,??_abs+1
  8426  002666  1E1A               	comf	??_abs,f,c
  8427  002668  1E1B               	comf	??_abs+1,f,c
  8428  00266A  4A1A               	infsnz	??_abs,f,c
  8429  00266C  2A1B               	incf	??_abs+1,f,c
  8430  00266E  C01A  F018         	movff	??_abs,?_abs
  8431  002672  C01B  F019         	movff	??_abs+1,?_abs+1
  8432  002676  0012               	return	
  8433  002678                     l1229:
  8434  002678  C018  F018         	movff	abs@a,?_abs
  8435  00267C  C019  F019         	movff	abs@a+1,?_abs+1
  8436  002680  0012               	return		;funcret
  8437  002682                     __end_of_abs:
  8438                           	opt callstack 0
  8439                           
  8440 ;; *************** function ___aomod *****************
  8441 ;; Defined at:
  8442 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  dividend        8    5[COMRAM] long long 
  8445 ;;  divisor         8   13[COMRAM] long long 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  sign            1   22[COMRAM] unsigned char 
  8448 ;;  counter         1   21[COMRAM] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  8    5[COMRAM] long long 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8458 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;Total ram usage:       18 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    2
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_dtoa
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text41
  8473  001D96                     __ptext41:
  8474                           	opt callstack 0
  8475  001D96                     ___aomod:
  8476                           	opt callstack 24
  8477                           
  8478                           ;incstack = 0
  8479  001D96  0E00               	movlw	0
  8480  001D98  6E17               	movwf	___aomod@sign,c
  8481  001D9A  AE0D               	btfss	___aomod@dividend+7,7,c
  8482  001D9C  D012               	goto	l5237
  8483  001D9E  1E0D               	comf	___aomod@dividend+7,f,c
  8484  001DA0  1E0C               	comf	___aomod@dividend+6,f,c
  8485  001DA2  1E0B               	comf	___aomod@dividend+5,f,c
  8486  001DA4  1E0A               	comf	___aomod@dividend+4,f,c
  8487  001DA6  1E09               	comf	___aomod@dividend+3,f,c
  8488  001DA8  1E08               	comf	___aomod@dividend+2,f,c
  8489  001DAA  1E07               	comf	___aomod@dividend+1,f,c
  8490  001DAC  6C06               	negf	___aomod@dividend,c
  8491  001DAE  0E00               	movlw	0
  8492  001DB0  2207               	addwfc	___aomod@dividend+1,f,c
  8493  001DB2  2208               	addwfc	___aomod@dividend+2,f,c
  8494  001DB4  2209               	addwfc	___aomod@dividend+3,f,c
  8495  001DB6  220A               	addwfc	___aomod@dividend+4,f,c
  8496  001DB8  220B               	addwfc	___aomod@dividend+5,f,c
  8497  001DBA  220C               	addwfc	___aomod@dividend+6,f,c
  8498  001DBC  220D               	addwfc	___aomod@dividend+7,f,c
  8499  001DBE  0E01               	movlw	1
  8500  001DC0  6E17               	movwf	___aomod@sign,c
  8501  001DC2                     l5237:
  8502  001DC2  AE15               	btfss	___aomod@divisor+7,7,c
  8503  001DC4  D010               	goto	l5241
  8504  001DC6  1E15               	comf	___aomod@divisor+7,f,c
  8505  001DC8  1E14               	comf	___aomod@divisor+6,f,c
  8506  001DCA  1E13               	comf	___aomod@divisor+5,f,c
  8507  001DCC  1E12               	comf	___aomod@divisor+4,f,c
  8508  001DCE  1E11               	comf	___aomod@divisor+3,f,c
  8509  001DD0  1E10               	comf	___aomod@divisor+2,f,c
  8510  001DD2  1E0F               	comf	___aomod@divisor+1,f,c
  8511  001DD4  6C0E               	negf	___aomod@divisor,c
  8512  001DD6  0E00               	movlw	0
  8513  001DD8  220F               	addwfc	___aomod@divisor+1,f,c
  8514  001DDA  2210               	addwfc	___aomod@divisor+2,f,c
  8515  001DDC  2211               	addwfc	___aomod@divisor+3,f,c
  8516  001DDE  2212               	addwfc	___aomod@divisor+4,f,c
  8517  001DE0  2213               	addwfc	___aomod@divisor+5,f,c
  8518  001DE2  2214               	addwfc	___aomod@divisor+6,f,c
  8519  001DE4  2215               	addwfc	___aomod@divisor+7,f,c
  8520  001DE6                     l5241:
  8521  001DE6  500E               	movf	___aomod@divisor,w,c
  8522  001DE8  100F               	iorwf	___aomod@divisor+1,w,c
  8523  001DEA  1010               	iorwf	___aomod@divisor+2,w,c
  8524  001DEC  1011               	iorwf	___aomod@divisor+3,w,c
  8525  001DEE  1012               	iorwf	___aomod@divisor+4,w,c
  8526  001DF0  1013               	iorwf	___aomod@divisor+5,w,c
  8527  001DF2  1014               	iorwf	___aomod@divisor+6,w,c
  8528  001DF4  1015               	iorwf	___aomod@divisor+7,w,c
  8529  001DF6  B4D8               	btfsc	status,2,c
  8530  001DF8  D03C               	goto	l5257
  8531  001DFA  0E01               	movlw	1
  8532  001DFC  6E16               	movwf	___aomod@counter,c
  8533  001DFE  D00A               	goto	l5247
  8534  001E00                     l5245:
  8535  001E00  90D8               	bcf	status,0,c
  8536  001E02  360E               	rlcf	___aomod@divisor,f,c
  8537  001E04  360F               	rlcf	___aomod@divisor+1,f,c
  8538  001E06  3610               	rlcf	___aomod@divisor+2,f,c
  8539  001E08  3611               	rlcf	___aomod@divisor+3,f,c
  8540  001E0A  3612               	rlcf	___aomod@divisor+4,f,c
  8541  001E0C  3613               	rlcf	___aomod@divisor+5,f,c
  8542  001E0E  3614               	rlcf	___aomod@divisor+6,f,c
  8543  001E10  3615               	rlcf	___aomod@divisor+7,f,c
  8544  001E12  2A16               	incf	___aomod@counter,f,c
  8545  001E14                     l5247:
  8546  001E14  AE15               	btfss	___aomod@divisor+7,7,c
  8547  001E16  D7F4               	goto	l5245
  8548  001E18                     u4890:
  8549  001E18  500E               	movf	___aomod@divisor,w,c
  8550  001E1A  5C06               	subwf	___aomod@dividend,w,c
  8551  001E1C  500F               	movf	___aomod@divisor+1,w,c
  8552  001E1E  5807               	subwfb	___aomod@dividend+1,w,c
  8553  001E20  5010               	movf	___aomod@divisor+2,w,c
  8554  001E22  5808               	subwfb	___aomod@dividend+2,w,c
  8555  001E24  5011               	movf	___aomod@divisor+3,w,c
  8556  001E26  5809               	subwfb	___aomod@dividend+3,w,c
  8557  001E28  5012               	movf	___aomod@divisor+4,w,c
  8558  001E2A  580A               	subwfb	___aomod@dividend+4,w,c
  8559  001E2C  5013               	movf	___aomod@divisor+5,w,c
  8560  001E2E  580B               	subwfb	___aomod@dividend+5,w,c
  8561  001E30  5014               	movf	___aomod@divisor+6,w,c
  8562  001E32  580C               	subwfb	___aomod@dividend+6,w,c
  8563  001E34  5015               	movf	___aomod@divisor+7,w,c
  8564  001E36  580D               	subwfb	___aomod@dividend+7,w,c
  8565  001E38  A0D8               	btfss	status,0,c
  8566  001E3A  D010               	goto	l5253
  8567  001E3C  500E               	movf	___aomod@divisor,w,c
  8568  001E3E  5E06               	subwf	___aomod@dividend,f,c
  8569  001E40  500F               	movf	___aomod@divisor+1,w,c
  8570  001E42  5A07               	subwfb	___aomod@dividend+1,f,c
  8571  001E44  5010               	movf	___aomod@divisor+2,w,c
  8572  001E46  5A08               	subwfb	___aomod@dividend+2,f,c
  8573  001E48  5011               	movf	___aomod@divisor+3,w,c
  8574  001E4A  5A09               	subwfb	___aomod@dividend+3,f,c
  8575  001E4C  5012               	movf	___aomod@divisor+4,w,c
  8576  001E4E  5A0A               	subwfb	___aomod@dividend+4,f,c
  8577  001E50  5013               	movf	___aomod@divisor+5,w,c
  8578  001E52  5A0B               	subwfb	___aomod@dividend+5,f,c
  8579  001E54  5014               	movf	___aomod@divisor+6,w,c
  8580  001E56  5A0C               	subwfb	___aomod@dividend+6,f,c
  8581  001E58  5015               	movf	___aomod@divisor+7,w,c
  8582  001E5A  5A0D               	subwfb	___aomod@dividend+7,f,c
  8583  001E5C                     l5253:
  8584  001E5C  90D8               	bcf	status,0,c
  8585  001E5E  3215               	rrcf	___aomod@divisor+7,f,c
  8586  001E60  3214               	rrcf	___aomod@divisor+6,f,c
  8587  001E62  3213               	rrcf	___aomod@divisor+5,f,c
  8588  001E64  3212               	rrcf	___aomod@divisor+4,f,c
  8589  001E66  3211               	rrcf	___aomod@divisor+3,f,c
  8590  001E68  3210               	rrcf	___aomod@divisor+2,f,c
  8591  001E6A  320F               	rrcf	___aomod@divisor+1,f,c
  8592  001E6C  320E               	rrcf	___aomod@divisor,f,c
  8593  001E6E  2E16               	decfsz	___aomod@counter,f,c
  8594  001E70  D7D3               	goto	u4890
  8595  001E72                     l5257:
  8596  001E72  5017               	movf	___aomod@sign,w,c
  8597  001E74  B4D8               	btfsc	status,2,c
  8598  001E76  D010               	goto	l5261
  8599  001E78  1E0D               	comf	___aomod@dividend+7,f,c
  8600  001E7A  1E0C               	comf	___aomod@dividend+6,f,c
  8601  001E7C  1E0B               	comf	___aomod@dividend+5,f,c
  8602  001E7E  1E0A               	comf	___aomod@dividend+4,f,c
  8603  001E80  1E09               	comf	___aomod@dividend+3,f,c
  8604  001E82  1E08               	comf	___aomod@dividend+2,f,c
  8605  001E84  1E07               	comf	___aomod@dividend+1,f,c
  8606  001E86  6C06               	negf	___aomod@dividend,c
  8607  001E88  0E00               	movlw	0
  8608  001E8A  2207               	addwfc	___aomod@dividend+1,f,c
  8609  001E8C  2208               	addwfc	___aomod@dividend+2,f,c
  8610  001E8E  2209               	addwfc	___aomod@dividend+3,f,c
  8611  001E90  220A               	addwfc	___aomod@dividend+4,f,c
  8612  001E92  220B               	addwfc	___aomod@dividend+5,f,c
  8613  001E94  220C               	addwfc	___aomod@dividend+6,f,c
  8614  001E96  220D               	addwfc	___aomod@dividend+7,f,c
  8615  001E98                     l5261:
  8616  001E98  C006  F006         	movff	___aomod@dividend,?___aomod
  8617  001E9C  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  8618  001EA0  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  8619  001EA4  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  8620  001EA8  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  8621  001EAC  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  8622  001EB0  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  8623  001EB4  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  8624  001EB8  0012               	return		;funcret
  8625  001EBA                     __end_of___aomod:
  8626                           	opt callstack 0
  8627                           
  8628 ;; *************** function ___aodiv *****************
  8629 ;; Defined at:
  8630 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  dividend        8    5[COMRAM] long long 
  8633 ;;  divisor         8   13[COMRAM] long long 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  quotient        8   23[COMRAM] long long 
  8636 ;;  sign            1   22[COMRAM] unsigned char 
  8637 ;;  counter         1   21[COMRAM] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  8    5[COMRAM] long long 
  8640 ;; Registers used:
  8641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8647 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;Total ram usage:       26 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    2
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_dtoa
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text42
  8662  00188E                     __ptext42:
  8663                           	opt callstack 0
  8664  00188E                     ___aodiv:
  8665                           	opt callstack 24
  8666                           
  8667                           ;incstack = 0
  8668  00188E  0E00               	movlw	0
  8669  001890  6E17               	movwf	___aodiv@sign,c
  8670  001892  AE15               	btfss	___aodiv@divisor+7,7,c
  8671  001894  D012               	goto	l5193
  8672  001896  1E15               	comf	___aodiv@divisor+7,f,c
  8673  001898  1E14               	comf	___aodiv@divisor+6,f,c
  8674  00189A  1E13               	comf	___aodiv@divisor+5,f,c
  8675  00189C  1E12               	comf	___aodiv@divisor+4,f,c
  8676  00189E  1E11               	comf	___aodiv@divisor+3,f,c
  8677  0018A0  1E10               	comf	___aodiv@divisor+2,f,c
  8678  0018A2  1E0F               	comf	___aodiv@divisor+1,f,c
  8679  0018A4  6C0E               	negf	___aodiv@divisor,c
  8680  0018A6  0E00               	movlw	0
  8681  0018A8  220F               	addwfc	___aodiv@divisor+1,f,c
  8682  0018AA  2210               	addwfc	___aodiv@divisor+2,f,c
  8683  0018AC  2211               	addwfc	___aodiv@divisor+3,f,c
  8684  0018AE  2212               	addwfc	___aodiv@divisor+4,f,c
  8685  0018B0  2213               	addwfc	___aodiv@divisor+5,f,c
  8686  0018B2  2214               	addwfc	___aodiv@divisor+6,f,c
  8687  0018B4  2215               	addwfc	___aodiv@divisor+7,f,c
  8688  0018B6  0E01               	movlw	1
  8689  0018B8  6E17               	movwf	___aodiv@sign,c
  8690  0018BA                     l5193:
  8691  0018BA  AE0D               	btfss	___aodiv@dividend+7,7,c
  8692  0018BC  D012               	goto	l5199
  8693  0018BE  1E0D               	comf	___aodiv@dividend+7,f,c
  8694  0018C0  1E0C               	comf	___aodiv@dividend+6,f,c
  8695  0018C2  1E0B               	comf	___aodiv@dividend+5,f,c
  8696  0018C4  1E0A               	comf	___aodiv@dividend+4,f,c
  8697  0018C6  1E09               	comf	___aodiv@dividend+3,f,c
  8698  0018C8  1E08               	comf	___aodiv@dividend+2,f,c
  8699  0018CA  1E07               	comf	___aodiv@dividend+1,f,c
  8700  0018CC  6C06               	negf	___aodiv@dividend,c
  8701  0018CE  0E00               	movlw	0
  8702  0018D0  2207               	addwfc	___aodiv@dividend+1,f,c
  8703  0018D2  2208               	addwfc	___aodiv@dividend+2,f,c
  8704  0018D4  2209               	addwfc	___aodiv@dividend+3,f,c
  8705  0018D6  220A               	addwfc	___aodiv@dividend+4,f,c
  8706  0018D8  220B               	addwfc	___aodiv@dividend+5,f,c
  8707  0018DA  220C               	addwfc	___aodiv@dividend+6,f,c
  8708  0018DC  220D               	addwfc	___aodiv@dividend+7,f,c
  8709  0018DE  0E01               	movlw	1
  8710  0018E0  1A17               	xorwf	___aodiv@sign,f,c
  8711  0018E2                     l5199:
  8712  0018E2  EE20  F018         	lfsr	2,___aodiv@quotient
  8713  0018E6  0E07               	movlw	7
  8714  0018E8                     u4811:
  8715  0018E8  6ADE               	clrf	postinc2,c
  8716  0018EA  06E8               	decf	wreg,f,c
  8717  0018EC  E2FD               	bc	u4811
  8718  0018EE  500E               	movf	___aodiv@divisor,w,c
  8719  0018F0  100F               	iorwf	___aodiv@divisor+1,w,c
  8720  0018F2  1010               	iorwf	___aodiv@divisor+2,w,c
  8721  0018F4  1011               	iorwf	___aodiv@divisor+3,w,c
  8722  0018F6  1012               	iorwf	___aodiv@divisor+4,w,c
  8723  0018F8  1013               	iorwf	___aodiv@divisor+5,w,c
  8724  0018FA  1014               	iorwf	___aodiv@divisor+6,w,c
  8725  0018FC  1015               	iorwf	___aodiv@divisor+7,w,c
  8726  0018FE  B4D8               	btfsc	status,2,c
  8727  001900  D046               	goto	l5221
  8728  001902  0E01               	movlw	1
  8729  001904  6E16               	movwf	___aodiv@counter,c
  8730  001906  D00A               	goto	l5207
  8731  001908                     l5205:
  8732  001908  90D8               	bcf	status,0,c
  8733  00190A  360E               	rlcf	___aodiv@divisor,f,c
  8734  00190C  360F               	rlcf	___aodiv@divisor+1,f,c
  8735  00190E  3610               	rlcf	___aodiv@divisor+2,f,c
  8736  001910  3611               	rlcf	___aodiv@divisor+3,f,c
  8737  001912  3612               	rlcf	___aodiv@divisor+4,f,c
  8738  001914  3613               	rlcf	___aodiv@divisor+5,f,c
  8739  001916  3614               	rlcf	___aodiv@divisor+6,f,c
  8740  001918  3615               	rlcf	___aodiv@divisor+7,f,c
  8741  00191A  2A16               	incf	___aodiv@counter,f,c
  8742  00191C                     l5207:
  8743  00191C  AE15               	btfss	___aodiv@divisor+7,7,c
  8744  00191E  D7F4               	goto	l5205
  8745  001920                     u4830:
  8746  001920  90D8               	bcf	status,0,c
  8747  001922  3618               	rlcf	___aodiv@quotient,f,c
  8748  001924  3619               	rlcf	___aodiv@quotient+1,f,c
  8749  001926  361A               	rlcf	___aodiv@quotient+2,f,c
  8750  001928  361B               	rlcf	___aodiv@quotient+3,f,c
  8751  00192A  361C               	rlcf	___aodiv@quotient+4,f,c
  8752  00192C  361D               	rlcf	___aodiv@quotient+5,f,c
  8753  00192E  361E               	rlcf	___aodiv@quotient+6,f,c
  8754  001930  361F               	rlcf	___aodiv@quotient+7,f,c
  8755  001932  500E               	movf	___aodiv@divisor,w,c
  8756  001934  5C06               	subwf	___aodiv@dividend,w,c
  8757  001936  500F               	movf	___aodiv@divisor+1,w,c
  8758  001938  5807               	subwfb	___aodiv@dividend+1,w,c
  8759  00193A  5010               	movf	___aodiv@divisor+2,w,c
  8760  00193C  5808               	subwfb	___aodiv@dividend+2,w,c
  8761  00193E  5011               	movf	___aodiv@divisor+3,w,c
  8762  001940  5809               	subwfb	___aodiv@dividend+3,w,c
  8763  001942  5012               	movf	___aodiv@divisor+4,w,c
  8764  001944  580A               	subwfb	___aodiv@dividend+4,w,c
  8765  001946  5013               	movf	___aodiv@divisor+5,w,c
  8766  001948  580B               	subwfb	___aodiv@dividend+5,w,c
  8767  00194A  5014               	movf	___aodiv@divisor+6,w,c
  8768  00194C  580C               	subwfb	___aodiv@dividend+6,w,c
  8769  00194E  5015               	movf	___aodiv@divisor+7,w,c
  8770  001950  580D               	subwfb	___aodiv@dividend+7,w,c
  8771  001952  A0D8               	btfss	status,0,c
  8772  001954  D011               	goto	l5217
  8773  001956  500E               	movf	___aodiv@divisor,w,c
  8774  001958  5E06               	subwf	___aodiv@dividend,f,c
  8775  00195A  500F               	movf	___aodiv@divisor+1,w,c
  8776  00195C  5A07               	subwfb	___aodiv@dividend+1,f,c
  8777  00195E  5010               	movf	___aodiv@divisor+2,w,c
  8778  001960  5A08               	subwfb	___aodiv@dividend+2,f,c
  8779  001962  5011               	movf	___aodiv@divisor+3,w,c
  8780  001964  5A09               	subwfb	___aodiv@dividend+3,f,c
  8781  001966  5012               	movf	___aodiv@divisor+4,w,c
  8782  001968  5A0A               	subwfb	___aodiv@dividend+4,f,c
  8783  00196A  5013               	movf	___aodiv@divisor+5,w,c
  8784  00196C  5A0B               	subwfb	___aodiv@dividend+5,f,c
  8785  00196E  5014               	movf	___aodiv@divisor+6,w,c
  8786  001970  5A0C               	subwfb	___aodiv@dividend+6,f,c
  8787  001972  5015               	movf	___aodiv@divisor+7,w,c
  8788  001974  5A0D               	subwfb	___aodiv@dividend+7,f,c
  8789  001976  8018               	bsf	___aodiv@quotient,0,c
  8790  001978                     l5217:
  8791  001978  90D8               	bcf	status,0,c
  8792  00197A  3215               	rrcf	___aodiv@divisor+7,f,c
  8793  00197C  3214               	rrcf	___aodiv@divisor+6,f,c
  8794  00197E  3213               	rrcf	___aodiv@divisor+5,f,c
  8795  001980  3212               	rrcf	___aodiv@divisor+4,f,c
  8796  001982  3211               	rrcf	___aodiv@divisor+3,f,c
  8797  001984  3210               	rrcf	___aodiv@divisor+2,f,c
  8798  001986  320F               	rrcf	___aodiv@divisor+1,f,c
  8799  001988  320E               	rrcf	___aodiv@divisor,f,c
  8800  00198A  2E16               	decfsz	___aodiv@counter,f,c
  8801  00198C  D7C9               	goto	u4830
  8802  00198E                     l5221:
  8803  00198E  5017               	movf	___aodiv@sign,w,c
  8804  001990  B4D8               	btfsc	status,2,c
  8805  001992  D010               	goto	l5225
  8806  001994  1E1F               	comf	___aodiv@quotient+7,f,c
  8807  001996  1E1E               	comf	___aodiv@quotient+6,f,c
  8808  001998  1E1D               	comf	___aodiv@quotient+5,f,c
  8809  00199A  1E1C               	comf	___aodiv@quotient+4,f,c
  8810  00199C  1E1B               	comf	___aodiv@quotient+3,f,c
  8811  00199E  1E1A               	comf	___aodiv@quotient+2,f,c
  8812  0019A0  1E19               	comf	___aodiv@quotient+1,f,c
  8813  0019A2  6C18               	negf	___aodiv@quotient,c
  8814  0019A4  0E00               	movlw	0
  8815  0019A6  2219               	addwfc	___aodiv@quotient+1,f,c
  8816  0019A8  221A               	addwfc	___aodiv@quotient+2,f,c
  8817  0019AA  221B               	addwfc	___aodiv@quotient+3,f,c
  8818  0019AC  221C               	addwfc	___aodiv@quotient+4,f,c
  8819  0019AE  221D               	addwfc	___aodiv@quotient+5,f,c
  8820  0019B0  221E               	addwfc	___aodiv@quotient+6,f,c
  8821  0019B2  221F               	addwfc	___aodiv@quotient+7,f,c
  8822  0019B4                     l5225:
  8823  0019B4  C018  F006         	movff	___aodiv@quotient,?___aodiv
  8824  0019B8  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  8825  0019BC  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  8826  0019C0  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  8827  0019C4  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  8828  0019C8  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  8829  0019CC  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  8830  0019D0  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  8831  0019D4  0012               	return		;funcret
  8832  0019D6                     __end_of___aodiv:
  8833                           	opt callstack 0
  8834                           
  8835 ;; *************** function _atoi *****************
  8836 ;; Defined at:
  8837 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8840 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  8841 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  8842 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  8843 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  8844 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  8845 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  8846 ;;		 -> STR_3(3), STR_1(3), 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  n               2   25[COMRAM] int 
  8849 ;;  neg             2   18[COMRAM] int 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  2   12[COMRAM] int 
  8852 ;; Registers used:
  8853 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;Total ram usage:       15 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    3
  8866 ;; This function calls:
  8867 ;;		___wmul
  8868 ;;		_isdigit
  8869 ;;		_isspace
  8870 ;; This function is called by:
  8871 ;;		_vfpfcnvrt
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text43
  8876  001C56                     __ptext43:
  8877                           	opt callstack 0
  8878  001C56                     _atoi:
  8879                           	opt callstack 24
  8880                           
  8881                           ;incstack = 0
  8882  001C56  0E00               	movlw	0
  8883  001C58  6E1B               	movwf	atoi@n+1,c
  8884  001C5A  0E00               	movlw	0
  8885  001C5C  6E1A               	movwf	atoi@n,c
  8886  001C5E  0E00               	movlw	0
  8887  001C60  6E14               	movwf	atoi@neg+1,c
  8888  001C62  0E00               	movlw	0
  8889  001C64  6E13               	movwf	atoi@neg,c
  8890  001C66  D002               	goto	l5451
  8891  001C68                     l5449:
  8892  001C68  4A0D               	infsnz	atoi@s,f,c
  8893  001C6A  2A0E               	incf	atoi@s+1,f,c
  8894  001C6C                     l5451:
  8895  001C6C  0E01               	movlw	1
  8896  001C6E  6E19               	movwf	_atoi$1591,c
  8897  001C70  C00D  FFF6         	movff	atoi@s,tblptrl
  8898  001C74  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8899  001C78                     	if	0	;tblptru may be non-zero
  8900  001C78                     	endif
  8901  001C78                     	if	0	;tblptru may be non-zero
  8902  001C78                     	endif
  8903  001C78  0008               	tblrd		*
  8904  001C7A  50F5               	movf	tablat,w,c
  8905  001C7C  0A20               	xorlw	32
  8906  001C7E  B4D8               	btfsc	status,2,c
  8907  001C80  D018               	goto	l5459
  8908  001C82  0EF7               	movlw	247
  8909  001C84  6E0F               	movwf	??_atoi& (0+255),c
  8910  001C86  0EFF               	movlw	255
  8911  001C88  6E10               	movwf	(??_atoi+1)& (0+255),c
  8912  001C8A  C00D  FFF6         	movff	atoi@s,tblptrl
  8913  001C8E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8914  001C92                     	if	0	;tblptru may be non-zero
  8915  001C92                     	endif
  8916  001C92                     	if	0	;tblptru may be non-zero
  8917  001C92                     	endif
  8918  001C92  0008               	tblrd		*
  8919  001C94  50F5               	movf	tablat,w,c
  8920  001C96  6E11               	movwf	(??_atoi+2)& (0+255),c
  8921  001C98  6A12               	clrf	(??_atoi+3)& (0+255),c
  8922  001C9A  500F               	movf	??_atoi,w,c
  8923  001C9C  2611               	addwf	??_atoi+2,f,c
  8924  001C9E  5010               	movf	??_atoi+1,w,c
  8925  001CA0  2212               	addwfc	??_atoi+3,f,c
  8926  001CA2  5012               	movf	??_atoi+3,w,c
  8927  001CA4  E104               	bnz	u5370
  8928  001CA6  0E05               	movlw	5
  8929  001CA8  5C11               	subwf	??_atoi+2,w,c
  8930  001CAA  A0D8               	btfss	status,0,c
  8931  001CAC  D002               	goto	l5459
  8932  001CAE                     u5370:
  8933  001CAE  0E00               	movlw	0
  8934  001CB0  6E19               	movwf	_atoi$1591,c
  8935  001CB2                     l5459:
  8936  001CB2  C019  F015         	movff	_atoi$1591,_atoi$1590
  8937  001CB6  6A16               	clrf	_atoi$1590+1,c
  8938  001CB8  5015               	movf	_atoi$1590,w,c
  8939  001CBA  1016               	iorwf	_atoi$1590+1,w,c
  8940  001CBC  B4D8               	btfsc	status,2,c
  8941  001CBE  D008               	goto	l5469
  8942  001CC0  D7D3               	goto	l5449
  8943  001CC2                     l5465:
  8944  001CC2  0E00               	movlw	0
  8945  001CC4  6E14               	movwf	atoi@neg+1,c
  8946  001CC6  0E01               	movlw	1
  8947  001CC8  6E13               	movwf	atoi@neg,c
  8948  001CCA                     l5467:
  8949  001CCA  4A0D               	infsnz	atoi@s,f,c
  8950  001CCC  2A0E               	incf	atoi@s+1,f,c
  8951  001CCE  D02E               	goto	l5475
  8952  001CD0                     l5469:
  8953  001CD0  C00D  FFF6         	movff	atoi@s,tblptrl
  8954  001CD4  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8955  001CD8                     	if	0	;tblptru may be non-zero
  8956  001CD8                     	endif
  8957  001CD8                     	if	0	;tblptru may be non-zero
  8958  001CD8                     	endif
  8959  001CD8  0008               	tblrd		*
  8960  001CDA  50F5               	movf	tablat,w,c
  8961  001CDC  6E0F               	movwf	??_atoi& (0+255),c
  8962  001CDE  6A10               	clrf	(??_atoi+1)& (0+255),c
  8963                           
  8964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8965                           ; Switch size 1, requested type "simple"
  8966                           ; Number of cases is 1, Range of values is 0 to 0
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte            4     3 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  001CE0  5010               	movf	??_atoi+1,w,c
  8972  001CE2  0A00               	xorlw	0	; case 0
  8973  001CE4  A4D8               	btfss	status,2,c
  8974  001CE6  D022               	goto	l5475
  8975                           
  8976                           ; Switch size 1, requested type "simple"
  8977                           ; Number of cases is 2, Range of values is 43 to 45
  8978                           ; switch strategies available:
  8979                           ; Name         Instructions Cycles
  8980                           ; simple_byte            7     4 (average)
  8981                           ;	Chosen strategy is simple_byte
  8982  001CE8  500F               	movf	??_atoi,w,c
  8983  001CEA  0A2B               	xorlw	43	; case 43
  8984  001CEC  B4D8               	btfsc	status,2,c
  8985  001CEE  D7ED               	goto	l5467
  8986  001CF0  0A06               	xorlw	6	; case 45
  8987  001CF2  B4D8               	btfsc	status,2,c
  8988  001CF4  D7E6               	goto	l5465
  8989  001CF6  D01A               	goto	l5475
  8990  001CF8                     l5471:
  8991  001CF8  C01A  F006         	movff	atoi@n,___wmul@multiplier
  8992  001CFC  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  8993  001D00  0E00               	movlw	0
  8994  001D02  6E09               	movwf	___wmul@multiplicand+1,c
  8995  001D04  0E0A               	movlw	10
  8996  001D06  6E08               	movwf	___wmul@multiplicand,c
  8997  001D08  ECDC  F013         	call	___wmul	;wreg free
  8998  001D0C  C00D  FFF6         	movff	atoi@s,tblptrl
  8999  001D10  C00E  FFF7         	movff	atoi@s+1,tblptrh
  9000  001D14                     	if	0	;tblptru may be non-zero
  9001  001D14                     	endif
  9002  001D14                     	if	0	;tblptru may be non-zero
  9003  001D14                     	endif
  9004  001D14  0008               	tblrd		*
  9005  001D16  50F5               	movf	tablat,w,c
  9006  001D18  5E06               	subwf	?___wmul,f,c
  9007  001D1A  0E00               	movlw	0
  9008  001D1C  5A07               	subwfb	?___wmul+1,f,c
  9009  001D1E  0E30               	movlw	48
  9010  001D20  2406               	addwf	?___wmul,w,c
  9011  001D22  6E1A               	movwf	atoi@n,c
  9012  001D24  0E00               	movlw	0
  9013  001D26  2007               	addwfc	?___wmul+1,w,c
  9014  001D28  6E1B               	movwf	atoi@n+1,c
  9015  001D2A  D7CF               	goto	l5467
  9016  001D2C                     l5475:
  9017  001D2C  0ED0               	movlw	208
  9018  001D2E  6E0F               	movwf	??_atoi& (0+255),c
  9019  001D30  0EFF               	movlw	255
  9020  001D32  6E10               	movwf	(??_atoi+1)& (0+255),c
  9021  001D34  C00D  FFF6         	movff	atoi@s,tblptrl
  9022  001D38  C00E  FFF7         	movff	atoi@s+1,tblptrh
  9023  001D3C                     	if	0	;tblptru may be non-zero
  9024  001D3C                     	endif
  9025  001D3C                     	if	0	;tblptru may be non-zero
  9026  001D3C                     	endif
  9027  001D3C  0008               	tblrd		*
  9028  001D3E  50F5               	movf	tablat,w,c
  9029  001D40  6E11               	movwf	(??_atoi+2)& (0+255),c
  9030  001D42  6A12               	clrf	(??_atoi+3)& (0+255),c
  9031  001D44  500F               	movf	??_atoi,w,c
  9032  001D46  2611               	addwf	??_atoi+2,f,c
  9033  001D48  5010               	movf	??_atoi+1,w,c
  9034  001D4A  2212               	addwfc	??_atoi+3,f,c
  9035  001D4C  5012               	movf	??_atoi+3,w,c
  9036  001D4E  E106               	bnz	u5390
  9037  001D50  0E0A               	movlw	10
  9038  001D52  5C11               	subwf	??_atoi+2,w,c
  9039  001D54  B0D8               	btfsc	status,0,c
  9040  001D56  D002               	goto	u5390
  9041  001D58  0E01               	movlw	1
  9042  001D5A  D001               	goto	u5400
  9043  001D5C                     u5390:
  9044  001D5C  0E00               	movlw	0
  9045  001D5E                     u5400:
  9046  001D5E  6E17               	movwf	_atoi$1592,c
  9047  001D60  6A18               	clrf	_atoi$1592+1,c
  9048  001D62  5017               	movf	_atoi$1592,w,c
  9049  001D64  1018               	iorwf	_atoi$1592+1,w,c
  9050  001D66  A4D8               	btfss	status,2,c
  9051  001D68  D7C7               	goto	l5471
  9052  001D6A  5013               	movf	atoi@neg,w,c
  9053  001D6C  1014               	iorwf	atoi@neg+1,w,c
  9054  001D6E  A4D8               	btfss	status,2,c
  9055  001D70  D00D               	goto	l1260
  9056  001D72  C01A  F00F         	movff	atoi@n,??_atoi
  9057  001D76  C01B  F010         	movff	atoi@n+1,??_atoi+1
  9058  001D7A  1E0F               	comf	??_atoi,f,c
  9059  001D7C  1E10               	comf	??_atoi+1,f,c
  9060  001D7E  4A0F               	infsnz	??_atoi,f,c
  9061  001D80  2A10               	incf	??_atoi+1,f,c
  9062  001D82  C00F  F00D         	movff	??_atoi,?_atoi
  9063  001D86  C010  F00E         	movff	??_atoi+1,?_atoi+1
  9064  001D8A  0012               	return	
  9065  001D8C                     l1260:
  9066  001D8C  C01A  F00D         	movff	atoi@n,?_atoi
  9067  001D90  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  9068  001D94  0012               	return		;funcret
  9069  001D96                     __end_of_atoi:
  9070                           	opt callstack 0
  9071                           
  9072 ;; *************** function _isspace *****************
  9073 ;; Defined at:
  9074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  c               2    5[COMRAM] int 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  2    5[COMRAM] int 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;Total ram usage:        7 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    2
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_atoi
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text44
  9103  002572                     __ptext44:
  9104                           	opt callstack 0
  9105  002572                     _isspace:
  9106                           	opt callstack 24
  9107                           
  9108                           ;incstack = 0
  9109  002572  0E01               	movlw	1
  9110  002574  6E0C               	movwf	_isspace$1617,c
  9111  002576  0E20               	movlw	32
  9112  002578  1806               	xorwf	isspace@c,w,c
  9113  00257A  1007               	iorwf	isspace@c+1,w,c
  9114  00257C  B4D8               	btfsc	status,2,c
  9115  00257E  D014               	goto	l5273
  9116  002580  0EF7               	movlw	247
  9117  002582  6E08               	movwf	??_isspace& (0+255),c
  9118  002584  0EFF               	movlw	255
  9119  002586  6E09               	movwf	(??_isspace+1)& (0+255),c
  9120  002588  C006  F00A         	movff	isspace@c,??_isspace+2
  9121  00258C  C007  F00B         	movff	isspace@c+1,??_isspace+3
  9122  002590  5008               	movf	??_isspace,w,c
  9123  002592  260A               	addwf	??_isspace+2,f,c
  9124  002594  5009               	movf	??_isspace+1,w,c
  9125  002596  220B               	addwfc	??_isspace+3,f,c
  9126  002598  500B               	movf	??_isspace+3,w,c
  9127  00259A  E104               	bnz	u4930
  9128  00259C  0E05               	movlw	5
  9129  00259E  5C0A               	subwf	??_isspace+2,w,c
  9130  0025A0  A0D8               	btfss	status,0,c
  9131  0025A2  D002               	goto	l5273
  9132  0025A4                     u4930:
  9133  0025A4  0E00               	movlw	0
  9134  0025A6  6E0C               	movwf	_isspace$1617,c
  9135  0025A8                     l5273:
  9136  0025A8  C00C  F006         	movff	_isspace$1617,?_isspace
  9137  0025AC  6A07               	clrf	?_isspace+1,c
  9138  0025AE  0012               	return		;funcret
  9139  0025B0                     __end_of_isspace:
  9140                           	opt callstack 0
  9141                           
  9142 ;; *************** function _isdigit *****************
  9143 ;; Defined at:
  9144 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  c               2    5[COMRAM] int 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  2    5[COMRAM] int 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;Total ram usage:        6 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    2
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_vfpfcnvrt
  9169 ;;		_atoi
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text45
  9174  0026E2                     __ptext45:
  9175                           	opt callstack 0
  9176  0026E2                     _isdigit:
  9177                           	opt callstack 25
  9178                           
  9179                           ;incstack = 0
  9180  0026E2  0ED0               	movlw	208
  9181  0026E4  6E08               	movwf	??_isdigit& (0+255),c
  9182  0026E6  0EFF               	movlw	255
  9183  0026E8  6E09               	movwf	(??_isdigit+1)& (0+255),c
  9184  0026EA  C006  F00A         	movff	isdigit@c,??_isdigit+2
  9185  0026EE  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  9186  0026F2  5008               	movf	??_isdigit,w,c
  9187  0026F4  260A               	addwf	??_isdigit+2,f,c
  9188  0026F6  5009               	movf	??_isdigit+1,w,c
  9189  0026F8  220B               	addwfc	??_isdigit+3,f,c
  9190  0026FA  500B               	movf	??_isdigit+3,w,c
  9191  0026FC  E106               	bnz	u4770
  9192  0026FE  0E0A               	movlw	10
  9193  002700  5C0A               	subwf	??_isdigit+2,w,c
  9194  002702  B0D8               	btfsc	status,0,c
  9195  002704  D002               	goto	u4770
  9196  002706  0E01               	movlw	1
  9197  002708  D001               	goto	u4780
  9198  00270A                     u4770:
  9199  00270A  0E00               	movlw	0
  9200  00270C                     u4780:
  9201  00270C  6E06               	movwf	?_isdigit,c
  9202  00270E  6A07               	clrf	?_isdigit+1,c
  9203  002710  0012               	return		;funcret
  9204  002712                     __end_of_isdigit:
  9205                           	opt callstack 0
  9206                           
  9207 ;; *************** function ___wmul *****************
  9208 ;; Defined at:
  9209 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  multiplier      2    5[COMRAM] unsigned int 
  9212 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  product         2    9[COMRAM] unsigned int 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  2    5[COMRAM] unsigned int 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, prodl, prodh
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;Total ram usage:        6 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    2
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_atoi
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text46
  9239  0027B8                     __ptext46:
  9240                           	opt callstack 0
  9241  0027B8                     ___wmul:
  9242                           	opt callstack 24
  9243                           
  9244                           ;incstack = 0
  9245  0027B8  5006               	movf	___wmul@multiplier,w,c
  9246  0027BA  0208               	mulwf	___wmul@multiplicand,c
  9247  0027BC  CFF3 F00A          	movff	prodl,___wmul@product
  9248  0027C0  CFF4 F00B          	movff	prodh,___wmul@product+1
  9249  0027C4  5006               	movf	___wmul@multiplier,w,c
  9250  0027C6  0209               	mulwf	___wmul@multiplicand+1,c
  9251  0027C8  50F3               	movf	prodl,w,c
  9252  0027CA  260B               	addwf	___wmul@product+1,f,c
  9253  0027CC  5007               	movf	___wmul@multiplier+1,w,c
  9254  0027CE  0208               	mulwf	___wmul@multiplicand,c
  9255  0027D0  50F3               	movf	prodl,w,c
  9256  0027D2  260B               	addwf	___wmul@product+1,f,c
  9257  0027D4  C00A  F006         	movff	___wmul@product,?___wmul
  9258  0027D8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9259  0027DC  0012               	return		;funcret
  9260  0027DE                     __end_of___wmul:
  9261                           	opt callstack 0
  9262                           
  9263 ;; *************** function _lcdInst *****************
  9264 ;; Defined at:
  9265 ;;		line 64 in file "lcd.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  data            1    wreg     unsigned char 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  data            1    8[COMRAM] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;Total ram usage:        1 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    5
  9286 ;; This function calls:
  9287 ;;		_send_byte
  9288 ;; This function is called by:
  9289 ;;		_doDisplayLog
  9290 ;;		_doOperation
  9291 ;;		_main
  9292 ;;		_initLCD
  9293 ;;		_lcd_shift_cursor
  9294 ;;		_lcd_shift_display
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text47
  9299  0028A2                     __ptext47:
  9300                           	opt callstack 0
  9301  0028A2                     _lcdInst:
  9302                           	opt callstack 23
  9303                           
  9304                           ;incstack = 0
  9305                           ;lcdInst@data stored from wreg
  9306  0028A2  6E09               	movwf	lcdInst@data,c
  9307                           
  9308                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  9309  0028A4  948C               	bcf	3980,2,c	;volatile
  9310                           
  9311                           ;lcd.c: 66:     send_byte(data);
  9312  0028A6  5009               	movf	lcdInst@data,w,c
  9313  0028A8  EC42  F014         	call	_send_byte
  9314  0028AC  0012               	return		;funcret
  9315  0028AE                     __end_of_lcdInst:
  9316                           	opt callstack 0
  9317                           
  9318 ;; *************** function _send_byte *****************
  9319 ;; Defined at:
  9320 ;;		line 55 in file "lcd.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  data            1    wreg     unsigned char 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  data            1    7[COMRAM] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2, status,0, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;Total ram usage:        1 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    4
  9341 ;; This function calls:
  9342 ;;		_send_nibble
  9343 ;; This function is called by:
  9344 ;;		_lcdInst
  9345 ;;		_initLCD
  9346 ;;		_putch
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text48
  9351  002884                     __ptext48:
  9352                           	opt callstack 0
  9353  002884                     _send_byte:
  9354                           	opt callstack 24
  9355                           
  9356                           ;incstack = 0
  9357                           ;send_byte@data stored from wreg
  9358  002884  6E08               	movwf	send_byte@data,c
  9359                           
  9360                           ;lcd.c: 57:     send_nibble(data >> 4);
  9361  002886  3808               	swapf	send_byte@data,w,c
  9362  002888  0B0F               	andlw	15
  9363  00288A  EC2E  F014         	call	_send_nibble
  9364                           
  9365                           ;lcd.c: 60:     send_nibble(data);
  9366  00288E  5008               	movf	send_byte@data,w,c
  9367  002890  EC2E  F014         	call	_send_nibble
  9368  002894  0012               	return		;funcret
  9369  002896                     __end_of_send_byte:
  9370                           	opt callstack 0
  9371                           
  9372 ;; *************** function _send_nibble *****************
  9373 ;; Defined at:
  9374 ;;		line 44 in file "lcd.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  data            1    wreg     unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  data            1    6[COMRAM] unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;Total ram usage:        1 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    3
  9395 ;; This function calls:
  9396 ;;		_pulse_e
  9397 ;; This function is called by:
  9398 ;;		_send_byte
  9399 ;;		_initLCD
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text49
  9404  00285C                     __ptext49:
  9405                           	opt callstack 0
  9406  00285C                     _send_nibble:
  9407                           	opt callstack 25
  9408                           
  9409                           ;incstack = 0
  9410                           ;send_nibble@data stored from wreg
  9411  00285C  6E07               	movwf	send_nibble@data,c
  9412                           
  9413                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  9414  00285E  508C               	movf	3980,w,c	;volatile
  9415  002860  0B0F               	andlw	15
  9416  002862  6E8C               	movwf	3980,c	;volatile
  9417                           
  9418                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  9419  002864  3807               	swapf	send_nibble@data,w,c
  9420  002866  0BF0               	andlw	240
  9421  002868  108C               	iorwf	3980,w,c	;volatile
  9422  00286A  6E8C               	movwf	3980,c	;volatile
  9423                           
  9424                           ;lcd.c: 48:     pulse_e();
  9425  00286C  EC9F  F013         	call	_pulse_e	;wreg free
  9426  002870  0012               	return		;funcret
  9427  002872                     __end_of_send_nibble:
  9428                           	opt callstack 0
  9429                           
  9430 ;; *************** function _pulse_e *****************
  9431 ;; Defined at:
  9432 ;;		line 28 in file "lcd.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;		None
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  interruptSta    1    5[COMRAM] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      void 
  9439 ;; Registers used:
  9440 ;;		wreg
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;Total ram usage:        1 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    2
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_send_nibble
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text50
  9461  00273E                     __ptext50:
  9462                           	opt callstack 0
  9463  00273E                     _pulse_e:
  9464                           	opt callstack 25
  9465                           
  9466                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  9467                           
  9468                           ;incstack = 0
  9469  00273E  0E00               	movlw	0
  9470  002740  BEF2               	btfsc	4082,7,c	;volatile
  9471  002742  0E01               	movlw	1
  9472  002744  6E06               	movwf	pulse_e@interruptState,c
  9473                           
  9474                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  9475  002746  9EF2               	bcf	4082,7,c	;volatile
  9476                           
  9477                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  9478  002748  868C               	bsf	3980,3,c	;volatile
  9479                           
  9480                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  9481  00274A  0E14               	movlw	20
  9482  00274C                     u6027:
  9483  00274C  2EE8               	decfsz	wreg,f,c
  9484  00274E  D7FE               	bra	u6027
  9485  002750  D000               	nop2	
  9486                           
  9487                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  9488  002752  968C               	bcf	3980,3,c	;volatile
  9489                           
  9490                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  9491  002754  0E53               	movlw	83
  9492  002756                     u6037:
  9493  002756  2EE8               	decfsz	wreg,f,c
  9494  002758  D7FE               	bra	u6037
  9495  00275A  F000               	nop	
  9496                           
  9497                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  9498  00275C  B006               	btfsc	pulse_e@interruptState,0,c
  9499  00275E  D002               	bra	u4555
  9500  002760  9EF2               	bcf	4082,7,c	;volatile
  9501  002762  D001               	bra	u4556
  9502  002764                     u4555:
  9503  002764  8EF2               	bsf	4082,7,c	;volatile
  9504  002766                     u4556:
  9505  002766  0012               	return		;funcret
  9506  002768                     __end_of_pulse_e:
  9507                           	opt callstack 0
  9508                           
  9509 ;; *************** function ___llmod *****************
  9510 ;; Defined at:
  9511 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  dividend        4    5[COMRAM] unsigned long 
  9514 ;;  divisor         4    9[COMRAM] unsigned long 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  counter         1   13[COMRAM] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  4    5[COMRAM] unsigned long 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9526 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;Total ram usage:        9 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    2
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_main
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text51
  9541  002336                     __ptext51:
  9542                           	opt callstack 0
  9543  002336                     ___llmod:
  9544                           	opt callstack 28
  9545                           
  9546                           ;incstack = 0
  9547  002336  500A               	movf	___llmod@divisor,w,c
  9548  002338  100B               	iorwf	___llmod@divisor+1,w,c
  9549  00233A  100C               	iorwf	___llmod@divisor+2,w,c
  9550  00233C  100D               	iorwf	___llmod@divisor+3,w,c
  9551  00233E  B4D8               	btfsc	status,2,c
  9552  002340  D024               	goto	l974
  9553  002342  0E01               	movlw	1
  9554  002344  6E0E               	movwf	___llmod@counter,c
  9555  002346  D006               	goto	l4629
  9556  002348                     l4627:
  9557  002348  90D8               	bcf	status,0,c
  9558  00234A  360A               	rlcf	___llmod@divisor,f,c
  9559  00234C  360B               	rlcf	___llmod@divisor+1,f,c
  9560  00234E  360C               	rlcf	___llmod@divisor+2,f,c
  9561  002350  360D               	rlcf	___llmod@divisor+3,f,c
  9562  002352  2A0E               	incf	___llmod@counter,f,c
  9563  002354                     l4629:
  9564  002354  AE0D               	btfss	___llmod@divisor+3,7,c
  9565  002356  D7F8               	goto	l4627
  9566  002358                     u4350:
  9567  002358  500A               	movf	___llmod@divisor,w,c
  9568  00235A  5C06               	subwf	___llmod@dividend,w,c
  9569  00235C  500B               	movf	___llmod@divisor+1,w,c
  9570  00235E  5807               	subwfb	___llmod@dividend+1,w,c
  9571  002360  500C               	movf	___llmod@divisor+2,w,c
  9572  002362  5808               	subwfb	___llmod@dividend+2,w,c
  9573  002364  500D               	movf	___llmod@divisor+3,w,c
  9574  002366  5809               	subwfb	___llmod@dividend+3,w,c
  9575  002368  A0D8               	btfss	status,0,c
  9576  00236A  D008               	goto	l4635
  9577  00236C  500A               	movf	___llmod@divisor,w,c
  9578  00236E  5E06               	subwf	___llmod@dividend,f,c
  9579  002370  500B               	movf	___llmod@divisor+1,w,c
  9580  002372  5A07               	subwfb	___llmod@dividend+1,f,c
  9581  002374  500C               	movf	___llmod@divisor+2,w,c
  9582  002376  5A08               	subwfb	___llmod@dividend+2,f,c
  9583  002378  500D               	movf	___llmod@divisor+3,w,c
  9584  00237A  5A09               	subwfb	___llmod@dividend+3,f,c
  9585  00237C                     l4635:
  9586  00237C  90D8               	bcf	status,0,c
  9587  00237E  320D               	rrcf	___llmod@divisor+3,f,c
  9588  002380  320C               	rrcf	___llmod@divisor+2,f,c
  9589  002382  320B               	rrcf	___llmod@divisor+1,f,c
  9590  002384  320A               	rrcf	___llmod@divisor,f,c
  9591  002386  2E0E               	decfsz	___llmod@counter,f,c
  9592  002388  D7E7               	goto	u4350
  9593  00238A                     l974:
  9594  00238A  C006  F006         	movff	___llmod@dividend,?___llmod
  9595  00238E  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
  9596  002392  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
  9597  002396  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
  9598  00239A  0012               	return		;funcret
  9599  00239C                     __end_of___llmod:
  9600                           	opt callstack 0
  9601                           
  9602 ;; *************** function _interruptHandler *****************
  9603 ;; Defined at:
  9604 ;;		line 792 in file "main.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    1
  9625 ;; This function calls:
  9626 ;;		_updateMotorBEncoder
  9627 ;; This function is called by:
  9628 ;;		Interrupt level 2
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	intcode
  9633  000008                     __pintcode:
  9634                           	opt callstack 0
  9635  000008                     _interruptHandler:
  9636                           	opt callstack 17
  9637                           
  9638                           ;incstack = 0
  9639  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9640  00000A  ED0E  F013         	call	int_func,f	;refresh shadow registers
  9641                           
  9642                           	psect	intcode_body
  9643  00261C                     __pintcode_body:
  9644                           	opt callstack 17
  9645  00261C                     int_func:
  9646                           	opt callstack 17
  9647  00261C  0006               	pop		; remove dummy address from shadow register refresh
  9648                           
  9649                           ;main.c: 794:     if(INT1IF){
  9650  00261E  A0F0               	btfss	4080,0,c	;volatile
  9651  002620  D005               	goto	i2l297
  9652                           
  9653                           ;main.c: 797:         keyPressed = 1;
  9654  002622  0E01               	movlw	1
  9655  002624  0100               	movlb	0	; () banked
  9656  002626  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;main.c: 798:         INT1IF = 0;
  9660  002628  90F0               	bcf	4080,0,c	;volatile
  9661                           
  9662                           ;main.c: 799:     } else if (TMR0IF) {
  9663  00262A  D010               	goto	i2l302
  9664  00262C                     i2l297:
  9665  00262C  A4F2               	btfss	4082,2,c	;volatile
  9666  00262E  D009               	goto	i2l299
  9667                           
  9668                           ;main.c: 800:     INTCONbits.TMR0IF = 0;
  9669  002630  94F2               	bcf	4082,2,c	;volatile
  9670                           
  9671                           ;main.c: 801:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  9672  002632  0EB3               	movlw	179
  9673  002634  6ED7               	movwf	4055,c	;volatile
  9674                           
  9675                           ;main.c: 802:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  9676  002636  0EB5               	movlw	181
  9677  002638  6ED6               	movwf	4054,c	;volatile
  9678                           
  9679                           ;main.c: 803:     secondsMeasured++;
  9680  00263A  0100               	movlb	0	; () banked
  9681  00263C  4BC1               	infsnz	_secondsMeasured& (0+255),f,b	;volatile
  9682  00263E  2BC2               	incf	(_secondsMeasured+1)& (0+255),f,b	;volatile
  9683                           
  9684                           ;main.c: 804:    } else if (INT2IF){
  9685  002640  D005               	goto	i2l302
  9686  002642                     i2l299:
  9687  002642  A2F0               	btfss	4080,1,c	;volatile
  9688  002644  D003               	goto	i2l302
  9689                           
  9690                           ;main.c: 805:        INT2IF = 0;
  9691  002646  92F0               	bcf	4080,1,c	;volatile
  9692                           
  9693                           ;main.c: 806:        updateMotorBEncoder();
  9694  002648  ECF1  F010         	call	_updateMotorBEncoder	;wreg free
  9695  00264C                     i2l302:
  9696  00264C  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9697  00264E  0011               	retfie		f
  9698  002650                     __end_of_interruptHandler:
  9699                           	opt callstack 0
  9700                           
  9701 ;; *************** function _updateMotorBEncoder *****************
  9702 ;; Defined at:
  9703 ;;		line 105 in file "main.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;		None
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  val             2    3[COMRAM] int 
  9708 ;;  interruptPin    2    1[COMRAM] int 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:        5 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_interruptHandler
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text53
  9732  0021E2                     __ptext53:
  9733                           	opt callstack 0
  9734  0021E2                     _updateMotorBEncoder:
  9735                           	opt callstack 17
  9736                           
  9737                           ;main.c: 106:   int interruptPinState = PORTBbits.RB2;
  9738                           
  9739                           ;incstack = 0
  9740  0021E2  A481               	btfss	3969,2,c	;volatile
  9741  0021E4  D003               	goto	i2u416_40
  9742  0021E6  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9743  0021E8  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
  9744  0021EA  D001               	goto	i2u416_48
  9745  0021EC                     i2u416_40:
  9746  0021EC  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9747  0021EE                     i2u416_48:
  9748  0021EE  5001               	movf	??_updateMotorBEncoder,w,c
  9749  0021F0  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
  9750  0021F2  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
  9751                           
  9752                           ;main.c: 107:   if(encoderBInterruptLast == 0 && interruptPinState==1){
  9753  0021F4  5077               	movf	_encoderBInterruptLast,w,c	;volatile
  9754  0021F6  A4D8               	btfss	status,2,c
  9755  0021F8  D01F               	goto	i2l4447
  9756  0021FA  0402               	decf	updateMotorBEncoder@interruptPinState,w,c
  9757  0021FC  1003               	iorwf	updateMotorBEncoder@interruptPinState+1,w,c
  9758  0021FE  A4D8               	btfss	status,2,c
  9759  002200  D01B               	goto	i2l4447
  9760                           
  9761                           ;main.c: 108:     int val = PORTEbits.RE2;
  9762  002202  A484               	btfss	3972,2,c	;volatile
  9763  002204  D003               	goto	i2u419_40
  9764  002206  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9765  002208  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
  9766  00220A  D001               	goto	i2u419_48
  9767  00220C                     i2u419_40:
  9768  00220C  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9769  00220E                     i2u419_48:
  9770  00220E  5001               	movf	??_updateMotorBEncoder,w,c
  9771  002210  6E04               	movwf	updateMotorBEncoder@val,c
  9772  002212  6A05               	clrf	updateMotorBEncoder@val+1,c
  9773                           
  9774                           ;main.c: 109:     if(val == 0 && motorBDirection){
  9775  002214  5004               	movf	updateMotorBEncoder@val,w,c
  9776  002216  1005               	iorwf	updateMotorBEncoder@val+1,w,c
  9777  002218  A4D8               	btfss	status,2,c
  9778  00221A  D005               	goto	i2l4441
  9779  00221C  5078               	movf	_motorBDirection,w,c	;volatile
  9780  00221E  B4D8               	btfsc	status,2,c
  9781  002220  D002               	goto	i2l4441
  9782                           
  9783                           ;main.c: 110:       motorBDirection = 0;
  9784  002222  0E00               	movlw	0
  9785  002224  D008               	goto	L16
  9786  002226                     i2l4441:
  9787  002226  0404               	decf	updateMotorBEncoder@val,w,c
  9788  002228  1005               	iorwf	updateMotorBEncoder@val+1,w,c
  9789  00222A  A4D8               	btfss	status,2,c
  9790  00222C  D005               	goto	i2l4447
  9791  00222E  5078               	movf	_motorBDirection,w,c	;volatile
  9792  002230  A4D8               	btfss	status,2,c
  9793  002232  D002               	goto	i2l4447
  9794                           
  9795                           ;main.c: 113:       motorBDirection = 1;
  9796  002234  0E01               	movlw	1
  9797  002236                     L16:
  9798  002236  6E78               	movwf	_motorBDirection,c	;volatile
  9799  002238                     i2l4447:
  9800                           
  9801                           ;main.c: 116:   encoderBInterruptLast = interruptPinState;
  9802  002238  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
  9803  00223A  1003               	iorwf	updateMotorBEncoder@interruptPinState+1,w,c
  9804  00223C  B4D8               	btfsc	status,2,c
  9805  00223E  D002               	goto	i2u424_40
  9806  002240  0E01               	movlw	1
  9807  002242  D001               	goto	i2u425_40
  9808  002244                     i2u424_40:
  9809  002244  0E00               	movlw	0
  9810  002246                     i2u425_40:
  9811  002246  6E77               	movwf	_encoderBInterruptLast,c	;volatile
  9812                           
  9813                           ;main.c: 119:   if(!motorBDirection){
  9814  002248  5078               	movf	_motorBDirection,w,c	;volatile
  9815  00224A  A4D8               	btfss	status,2,c
  9816  00224C  D004               	goto	i2l4453
  9817                           
  9818                           ;main.c: 120:       motorBDistance++;
  9819  00224E  0100               	movlb	0	; () banked
  9820  002250  4BC3               	infsnz	_motorBDistance& (0+255),f,b	;volatile
  9821  002252  2BC4               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
  9822                           
  9823                           ;main.c: 121:   }else{
  9824  002254  0012               	return	
  9825  002256                     i2l4453:
  9826                           
  9827                           ;main.c: 122:       motorBDistance--;
  9828  002256  0100               	movlb	0	; () banked
  9829  002258  07C3               	decf	_motorBDistance& (0+255),f,b	;volatile
  9830  00225A  A0D8               	btfss	status,0,c
  9831  00225C  07C4               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
  9832                           
  9833                           ; BSR set to: 0
  9834  00225E  0012               	return		;funcret
  9835  002260                     __end_of_updateMotorBEncoder:
  9836                           	opt callstack 0
  9837                           
  9838                           	psect	rparam
  9839  0000                     
  9840                           	psect	temp
  9841  000079                     btemp:
  9842                           	opt callstack 0
  9843  000079                     	ds	1
  9844  0000                     int$flags	set	btemp
  9845  0000                     wtemp8	set	btemp+1
  9846  0000                     ttemp5	set	btemp+1
  9847  0000                     ttemp6	set	btemp+4
  9848  0000                     ttemp7	set	btemp+8
  9849                           tosu	equ	0xFFF
  9850                           tosh	equ	0xFFE
  9851                           tosl	equ	0xFFD
  9852                           stkptr	equ	0xFFC
  9853                           pclatu	equ	0xFFB
  9854                           pclath	equ	0xFFA
  9855                           pcl	equ	0xFF9
  9856                           tblptru	equ	0xFF8
  9857                           tblptrh	equ	0xFF7
  9858                           tblptrl	equ	0xFF6
  9859                           tablat	equ	0xFF5
  9860                           prodh	equ	0xFF4
  9861                           prodl	equ	0xFF3
  9862                           indf0	equ	0xFEF
  9863                           postinc0	equ	0xFEE
  9864                           postdec0	equ	0xFED
  9865                           preinc0	equ	0xFEC
  9866                           plusw0	equ	0xFEB
  9867                           fsr0h	equ	0xFEA
  9868                           fsr0l	equ	0xFE9
  9869                           wreg	equ	0xFE8
  9870                           indf1	equ	0xFE7
  9871                           postinc1	equ	0xFE6
  9872                           postdec1	equ	0xFE5
  9873                           preinc1	equ	0xFE4
  9874                           plusw1	equ	0xFE3
  9875                           fsr1h	equ	0xFE2
  9876                           fsr1l	equ	0xFE1
  9877                           bsr	equ	0xFE0
  9878                           indf2	equ	0xFDF
  9879                           postinc2	equ	0xFDE
  9880                           postdec2	equ	0xFDD
  9881                           preinc2	equ	0xFDC
  9882                           plusw2	equ	0xFDB
  9883                           fsr2h	equ	0xFDA
  9884                           fsr2l	equ	0xFD9
  9885                           status	equ	0xFD8


Data Sizes:
    Strings     306
    Constant    35
    Data        9
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    114     120
    BANK0           128     61     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_46(CODE[16]), 
		 -> STR_44(CODE[14]), STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), 
		 -> STR_36(CODE[13]), STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), 
		 -> STR_28(CODE[14]), STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_46(CODE[16]), 
		 -> STR_44(CODE[14]), STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), 
		 -> STR_36(CODE[13]), STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), 
		 -> STR_28(CODE[14]), STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1630_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_46(CODE[16]), STR_44(CODE[14]), STR_42(CODE[11]), 
		 -> STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), STR_34(CODE[13]), 
		 -> STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), STR_26(CODE[10]), 
		 -> STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_46(CODE[16]), STR_44(CODE[14]), STR_42(CODE[11]), 
		 -> STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), STR_34(CODE[13]), 
		 -> STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), STR_26(CODE[10]), 
		 -> STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_46(CODE[16]), STR_44(CODE[14]), 
		 -> STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), 
		 -> STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), 
		 -> STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), 
		 -> STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), 
		 -> STR_4(CODE[16]), STR_2(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_printf
    _doDisplayLog->_printf
    _printf->_vfprintf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   89713
                                             43 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     762
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         33    33      0   35585
                                             14 BANK0     29    29      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                     _init_motor_PWM
                            _lcdInst
                             _printf
              _requestIsTireDropDone
         _sendArduinoTireDropRequest
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (2) _setMotorSpeeds                                      13     8      5    7131
                                             89 COMRAM    13     8      5
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (3) _set_pwm_duty_cycle                                  20    12      8    5709
                                             69 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             44 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1551
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0     805
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0     850
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     782
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                         9     7      2   25830
                                             14 BANK0      9     7      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   25375
                                              2 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22936
                                            108 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   22382
                                             75 COMRAM    33    27      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7017
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7253
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4987
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      90
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3D      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     72      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      34        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 23:28:34 2019

                          ___fldiv@aexp 0045                            ___fldiv@bexp 0044  
                          ___fldiv@sign 003D                             __CFG_CPD$ON 000000  
                   ___wmul@multiplicand 0008                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                           __CFG_OSC$HS 000000                                     l201 20E6  
                                   l159 187A                                     l440 0E88  
                                   l274 0814                                     l427 2072  
                                   l438 0E80                                     l467 1B7C  
                                   l581 21D0                                     l486 12A6  
                                   l488 12AE                                     l819 1F4E  
                                   l974 238A                            __CFG_CPB$OFF 000000  
                                   _PR2 000FCB                                     _PSA 007EAB  
                                   _abs 2650                                     _pad 2044  
                      ??_init_motor_PWM 0006                                     wreg 000FE8  
                          ___flmul@aexp 0025                            ___flmul@bexp 0026  
                          ___flmul@sign 0020                            ___flmul@temp 002B  
                          ___flmul@prod 0027                            __CFG_LVP$OFF 000000  
                          ___fltol@exp1 0036                            __CFG_WDT$OFF 000000  
                                  ?_abs 0018                                    l1150 0D62  
                                  l1216 1A92                                    l1209 1A14  
                                  l1138 0CF8                                    l1260 1D8C  
                                  l1229 2678                                    l1149 0D66  
                                  l1327 24E4                                    l1168 08B4  
                                  l1185 0B52                                    l1177 0ACC  
                                  l1178 0AC8                                    l4023 1F22  
                                  l4033 1F86                                    l4009 0B70  
                                  l4105 1AB8                                    l4027 1F38  
                                  l4019 1EEE                                    l4043 1FA8  
                                  l4123 1B04                                    l4107 1AC4  
                                  l5101 2278                                    l5111 25BA  
                                  l4071 2016                                    l4063 2002  
                                  l5121 24FC                                    l4209 21C2  
                                  l6001 06EA                                    l5115 25D0  
                                  l4059 1FF2                                    l6011 0714  
                                  l5205 1908                                    l5221 198E  
                                  l5141 207C                                    l5301 0EB2  
                                  l4309 273A                                    l4077 2032  
                                  l4069 200A                                    l4093 1A42  
                                  l6013 0744                                    l5207 191C  
                                  l5119 24F8                                    l5135 205C  
                                  l5311 0FAA                                    l4095 1A48  
                                  l4087 1A24                                    l5225 19B4  
                                  l5217 1978                                    l5241 1DE6  
                                  l5145 2094                                    l4097 1A54  
                                  l6041 07B6                                    l6033 079C  
                                  l6025 0784                                    l5139 206A  
                                  l5331 100E                                    l4099 1A7A  
                                  l4283 20EA                                    l5261 1E98  
                                  l5253 1E5C                                    l5245 1E00  
                                  l5237 1DC2                                    l5149 20C0  
                                  l5405 1314                                    l5501 005A  
                                  l3805 0C58                                    l3901 0874  
                                  l4197 2182                                    l6053 07DA  
                                  l6045 07C2                                    l6037 07A8  
                                  l6029 0790                                    l6061 07E8  
                                  ?_pad 001A                                    l5247 1E14  
                                  l5335 1026                                    l5511 0072  
                                  l5503 006A                                    l3823 0CD0  
                                  l3815 0CA8                                    l4199 218E  
                                  l5273 25A8                                    l5193 18BA  
                                  l5257 1E72                                    l5361 1BAA  
                                  l3841 0D2C                                    l6049 07CE  
                                  l4635 237C                                    l4627 2348  
                                  l5451 1C6C                                    l5283 0E64  
                                  l5371 1C06                                    l5347 1B40  
                                  l5443 148C                                    l5419 13A2  
                                  l5427 1418                                    l5523 0084  
                                  l5515 0076                                    l5507 006E  
                                  l3835 0D0E                                    l3763 0BB6  
                                  l3915 08A0                                    l4629 2354  
                                  l5365 1BC8                                    l5357 1B92  
                                  l5541 0160                                    l5525 00C6  
                                  l3861 0DAA                                    l3829 0CF6  
                                  l3925 08D2                                    l3917 08A4  
                                  l5471 1CF8                                    l5199 18E2  
                                  l5375 1C20                                    l5391 12C2  
                                  l5519 007A                                    l5615 2462  
                                  l3791 0C2A                                    l3783 0BF6  
                                  l3759 0BB2                                    l5465 1CC2  
                                  l5449 1C68                                    l5297 0EA2  
                                  l5537 0134                                    l5617 2488  
                                  l5713 184E                                    l5705 1838  
                                  l3865 0DCE                                    l5801 1160  
                                  l5475 1D2C                                    l5467 1CCA  
                                  l5459 1CB2                                    l5379 1C38  
                                  l5539 0152                                    l3875 0E04  
                                  l3779 0BF2                                    l5469 1CD0  
                                  l5397 12F2                                    l5565 02C6  
                                  l5557 0258                                    l5709 1844  
                                  l5653 16D6                                    l3877 0E06  
                                  l3869 0DF8                                    l3797 0C40  
                                  l3973 0A92                                    l5813 11B2  
                                  l5719 185C                                    l5671 1758  
                                  l3967 0A74                                    l5823 11D2  
                                  l5585 03D0                                    l3993 0B10  
                                  l3897 0860                                    l5905 0444  
                                  l5579 0394                                    l5499 0058  
                                  l5595 03F2                                    l5691 17DA  
                                  l3899 0864                                    l5843 124A  
                                  l5827 11D8                                    l5923 04D8  
                                  l5915 04AA                                    l5589 03DA  
                                  l5693 17F8                                    l3997 0B2E  
                                  l5829 11DE                                    l5837 11FA  
                                  l5839 122E                                    l5943 0584  
                                  l5849 1258                                    l5785 10E2  
                                  l5777 10B8                                    l5961 05EC  
                                  l5981 0674                                    l5995 06DA  
                                  _P1M0 007DEE                                    _P1M1 007DEF  
                                  STR_1 FFFB                                    STR_2 FFA9  
                                  STR_3 FFFB                                    STR_4 FEED  
                                  STR_5 FFFB                                    STR_6 FF58  
                                  STR_7 FFFB                                    STR_8 FEFD  
                                  STR_9 FFFB                                    _LATB 000F8A  
                                  u4000 1678                                    _LATD 000F8C  
                                  u4020 169C                                    u4015 167A  
                                  u5000 0E9C                                    u5010 0FB8  
                                  u4035 169E                                    u4115 23C4  
                                  u4045 27FA                                    u5030 0FDA  
                                  u4046 27FC                                    u4070 2192  
                                  u5031 0FD8                                    u5040 0FE8  
                                  u5200 129C                                    u3520 0DB8  
                                  u5050 0FEC                                    u3530 0DDC  
                                  u5140 1BBE                                    u5300 1428  
                                  u5220 1310                                    u3620 08C0  
                                  u4350 2358                                    u5070 0FF8  
                                  u5150 1BEA                                    u5230 1346  
                                  u3710 0B1E                                    u3630 0A36  
                                  u6007 182C                                    u5400 1D5E  
                                  u5320 144A                                    u5240 1348  
                                  u3480 0D5C                                    u3720 0B3C  
                                  u3800 1FC6                                    u5321 1448  
                                  u6017 1882                                    u4610 251E  
                                  u5330 1458                                    u6027 274C  
                                  u5091 1B20                                    u3635 0A2C  
                                  u5180 1C4C                                    u4700 26DA  
                                  u5340 145C                                    u5260 1380  
                                  u5500 01A6                                    u6037 2756  
                                  u5157 1BE0                                    u3805 1FBC  
                                  u4710 26DC                                    u4630 26AA  
                                  u5270 1382                                    u3670 0AC2  
                                  u4720 2614                                    u4640 26AC  
                                  u5520 01DA                                    u3840 201C  
                                  u3920 1ACE                                    u4617 2514  
                                  u5370 1CAE                                    u4570 2270  
                                  u4730 2616                                    u5290 13F4  
                                  u4555 2764                                    u4811 18E8  
                                  u4556 2766                                    u4740 24CC  
                                  u5620 10AA                                    u5390 1D5C  
                                  u4830 1920                                    u4590 22B8  
                                  u4750 24CE                                    u5550 02FA  
                                  u3790 1F96                                    u5630 10C4  
                                  u5295 13E2                                    u5480 0198  
                                  u4770 270A                                    u4930 25A4  
                                  u4690 265E                                    u5490 019A  
                                  u5626 10AC                                    u4780 270C  
                                  u4940 0E36                                    u5660 11CE  
                                  u5636 10C6                                    u4950 0E38  
                                  u5750 07A4                                    u4890 1E18  
                                  u5907 0828                                    u4980 0E76  
                                  u5917 22D2                                    u5837 04E6  
                                  u5927 22EA                                    u5847 0592  
                                  u5937 22FC                                    u5857 05DE  
                                  u5947 231E                                    u5867 05FA  
                                  u5957 10F0                                    u5877 0682  
                                  u5967 1180                                    u5887 0702  
                                  u5977 16C6                                    u5897 0778  
                                  u5987 16E4                                    u5997 1766  
                                  abs@a 0018                                    _dbuf 00CB  
                                  _atoi 1C56                                    _main 0426  
                                  _dtoa 0E0E                __end_of_interruptHandler 2650  
                                  _keys FEA9                                    _prec 0073  
                                  _nout 00BD                                    pad@i 0021  
                                  pad@p 001E                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 0023                                    fsr2l 000FD9  
                                  _stoa 1B16                                    btemp 0079  
                                  _xtoa 128A                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                         __CFG_IESO$OFF 000000                 __size_of_setMotorSpeeds 0086  
                       ___fldiv@new_exp 003E                     __end_of_EncoderInit 285C  
                         __CFG_MCLRE$ON 000000                            ___param_bank 000000  
                                 ??_abs 001A                                   ??_pad 0020  
                 I2C_Master_Read@ackBit 0007                        ?_I2C_Master_Init 0013  
                      ?_I2C_Master_Read 0001                        ?_I2C_Master_Wait 0001  
                      ?_I2C_Master_Stop 0001                           ___fltol@sign1 0035  
                           ?_TIMER_INIT 0001                         __end_of___aodiv 19D6  
                                 ?_atoi 000D                                   ?_main 0001  
                                 ?_dtoa 0025                         __end_of___aomod 1EBA  
                                 _CCP1X 007DED                         __end_of___fldiv 0E0E  
                                 _CCP1Y 007DEC                                   _CCP2X 007DD5  
                                 _CCP2Y 007DD4                                   STR_10 FFEF  
                                 STR_11 FFFB                                   STR_20 FFC0  
                                 STR_12 FF1D                                   STR_21 FFFB  
                                 STR_13 FFFB                                   STR_22 FFD4  
                                 STR_30 FF9C                                   STR_14 FECC  
                                 STR_31 FFFB                                   STR_15 FFFB  
                                 STR_23 FF2C                                   STR_32 FFE6  
                                 STR_40 FFDD                                   STR_16 FF74  
                                 STR_24 FF3B                                   STR_41 FFFB  
                                 STR_33 FFFB                                   STR_25 FFFB  
                                 STR_17 FFF8                                   STR_18 FFF8  
                                 STR_26 FFCA                                   STR_42 FFB5  
                                 STR_34 FF82                                   STR_19 FFF8  
                                 STR_43 FFFB                                   STR_35 FFFB  
                                 STR_27 FFFB                                   STR_36 FF8F  
                                 STR_28 FF66                                   STR_44 FF4A  
                                 STR_45 FFFB                                   STR_37 FFFB  
                                 STR_29 FFFB                                   STR_38 FF0D  
                                 STR_46 FEDD                                   STR_39 FFFB  
                       __end_of___flmul 0B86                         __end_of___fltol 2044  
                                 ?_stoa 0013                         __end_of___lldiv 21E2  
                                 ?_xtoa 0025                         __end_of___llmod 239C  
                                 _T0PS0 007EA8                                   _T0PS1 007EA9  
                                 _T0PS2 007EAA                                   i2l302 264C  
                                 i2l297 262C                            main@keyValue 00BC  
                                 i2l299 2642                            vfpfcnvrt@fmt 004E  
                                 _TMR0H 000FD7                            vfpfcnvrt@llu 005E  
                                 _TMR0L 000FD6                                   _PORTB 000F81  
                                 _TRISD 000F95                           __CFG_PWRT$OFF 000000  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                       __end_of_lcdInst 28AE                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                            main@keypress 00B8  
                        __CFG_EBTR3$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
           set_pwm_duty_cycle@duty_valA 0052             set_pwm_duty_cycle@duty_valB 0054  
                       __end_of_initLCD 2336                          __CFG_EBTRB$OFF 000000  
                                 _flags 0075  __end_ofinit_motor_PWM@TIMER2_PRESCALER FEC5  
        init_motor_PWM@TIMER2_PRESCALER FEC4                                   _fputc 2260  
                       __end_of_isalpha 261C                                   _fputs 25B0  
                       __end_of_isdigit 2712                                   atoi@n 001A  
                                 pad@fp 001A                                   atoi@s 000D  
                                 _width 00BF                                   _putch 2896  
                                 main@i 00B9                                   dtoa@d 0027  
                                 dtoa@i 0047                                   dtoa@n 003F  
                                 dtoa@p 0039                                   dtoa@s 003D  
                                 dtoa@w 003B                         __end_of_islower 26B2  
                       __end_of_isspace 25B0                         __end_of_isupper 26E2  
                                 tablat 000FF5                         send_nibble@data 0007  
                                 plusw1 000FE3                                   plusw2 000FDB  
                  __size_of_doOperation 023A             __end_of_updateMotorBEncoder 2260  
                                 stoa@i 001F                                   stoa@l 0027  
                                 stoa@p 0025                                   stoa@s 0015  
                                 stoa@w 0021                         __end_of_pulse_e 2768  
                                 ttemp5 007A                                   ttemp6 007D  
                                 ttemp7 0081                                   status 000FD8  
           I2C_Master_Read@receivedByte 0008               requestIsTireDropDone@data 0009  
                                 wtemp8 007A                                   xtoa@c 004A  
                                 xtoa@d 0027                                   xtoa@i 0048  
                                 xtoa@n 0040                                   xtoa@p 003C  
                                 xtoa@w 003E                                   xtoa@x 002F  
                       __end_of_toupper 24EE                  doOperation@motorASpeed 009D  
                doOperation@motorBSpeed 009F                          __CFG_PBADEN$ON 000000  
                          _toupper$1681 0012                         __initialization 23F8  
                   main@currentLogState 00BA                            __end_of_atoi 1D96  
                          __end_of_main 0834                            __end_of_dtoa 1050  
                          __end_of_keys FEBA                            __end_of_stoa 1C56  
                 __size_of_doDisplayLog 01D6                            __end_of_xtoa 14B6  
                                ??_atoi 000F                                  ??_main 00AB  
                                ??_dtoa 002F                                  ??_stoa 0017  
                                ??_xtoa 0030                           __activetblptr 000002  
               set_pwm_duty_cycle@dutyA 0046                 set_pwm_duty_cycle@dutyB 004A  
         doOperation@secondsMeasuredOld 00A4                       ?_I2C_Master_Start 0001  
                     ?_I2C_Master_Write 0007                   __end_of_replaceOldLog 28D2  
                    ??_I2C_Master_Start 0007                                  _ADCON1 000FC1  
                    ??_I2C_Master_Write 0009                                  _CCP1M0 007DE8  
                                _CCP1M1 007DE9                                  _CCP1M2 007DEA  
                                _CCP1M3 007DEB                                  _CCP2M0 007DD0  
                                _CCP2M1 007DD1                                  _CCP2M2 007DD2  
                                _CCP2M3 007DD3                            ?_send_nibble 0001  
                                ?_fputc 000A                        ___llmod@dividend 0006  
                                ?_fputs 0013                                  _CCPR1L 000FBE  
                                _CCPR2L 000FBB                                  _T08BIT 007EAE  
                                ?_putch 0001                  doOperation@tiresToDrop 00A7  
                                _INT1IE 007F83                                  _INT1IF 007F80  
                                _INT2IE 007F84                                  _INT2IF 007F81  
                                i2l4441 2226                                  i2l4453 2256  
                                i2l4447 2238                      _set_pwm_duty_cycle 14B6  
                           _EncoderInit 2846                           vfpfcnvrt@done 0069  
                                _TMR0IE 007F95                                  _TMR0IF 007F92  
                                _TMR0ON 007EAF                                  _TMR2ON 007E52  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 1B16                            _doDisplayLog 16B8  
                   __size_of_TIMER_INIT 0022                     ?_set_pwm_duty_cycle 0046  
                        __CFG_XINST$OFF 000000                   _encoderAInterruptLast 00C7  
                          vfprintf@cfmt 0080                                  ___flge 1EBA  
                             ??___aodiv 0016                               ??___aomod 0016  
                                ___wmul 27B8                               ??___fldiv 0035  
                        __CFG_STVREN$ON 000000                               ??___flmul 001C  
                             ??___fltol 0031                               ??___lldiv 000E  
                             ??___llmod 000E                                  clear_0 2430  
                             ??_lcdInst 0009                                  _printf 2790  
                                pad@buf 001C             ?_sendArduinoTireDropRequest 0001  
                                dtoa@fp 0025                                  _strlen 24EE  
                             ??_initLCD 000A                                  fputc@c 000A  
                                fputs@c 0017                                  fputs@i 0018  
                          __pdataCOMRAM 0078                                  fputs@s 0013  
                             ??_isalpha 0008                               ??_isdigit 0008  
                 _requestIsTireDropDone 2712                    ??_set_pwm_duty_cycle 004E  
                             ??_islower 0008                            __mediumconst FEA8  
                             ??_isspace 0008        doOperation@currentOperationState 00A9  
                                tblptrh 000FF7                               ??_isupper 0008  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                stoa@cp 0023                                  stoa@fp 0013  
                      __end_of_vfprintf 24A4                               ??_pulse_e 0006  
                                xtoa@fp 0025                               ??_toupper 000E  
                            ___flge@ff1 0006                              ___flge@ff2 000A  
                          ___xxtofl@arg 0010                   pulse_e@interruptState 0006  
                          ___xxtofl@exp 000F                            ___xxtofl@val 0006  
                            __accesstop 0080                 __end_of__initialization 2440  
                   _setMotorSpeeds$1952 005F                     _setMotorSpeeds$1953 0063  
                         ___rparam_used 000001                          _setMotorSpeeds 20DA  
                            ___fltol@f1 002D                    __end_of_happynewyear FEC1  
                        __pcstackCOMRAM 0001                            __pidataBANK0 28B8  
                         __end_of_fputc 22CC                           __end_of_fputs 25E8  
                         __end_of_putch 28A2                                 ??_fputc 000E  
                               ??_fputs 0017                                 ??_putch 0009  
                            __pbssBANK0 00BD                  __end_of_setMotorSpeeds 2160  
                       _secondsMeasured 00C1                       ?_interruptHandler 0001  
           doDisplayLog@currentLogState 008E                      ??_interruptHandler 0006  
                 _encoderBInterruptLast 0077                                 ?___flge 0006  
                               ?___wmul 0006                      __size_of_send_byte 0012  
                          ??_TIMER_INIT 0006                                 ?_printf 0082  
                               ?_strlen 0006                                 _T2CKPS0 007E50  
                               _T2CKPS1 007E51                  ?_requestIsTireDropDone 0001  
                    __size_of_robotInit 0040                               ?___xxtofl 0006  
                    __size_of_vfpfcnvrt 0414                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                  __size_of_send_nibble 0016                         ?_setMotorSpeeds 005A  
                    __end_of_TIMER_INIT 2846                                 __Hparam 0000  
                            _keyPressed 00CA                                 __Lparam 0000  
                       __size_of___flge 00D0                                 ___aodiv 188E  
                               ___aomod 1D96                                 ___fldiv 0B86  
                               ___flmul 0834                                 ___fltol 1F8A  
                               ___lldiv 2160                         __size_of___wmul 0026  
                               ___llmod 2336                               ?_vfprintf 006D  
                               __pcinit 23F8                                 __ramtop 1000  
                               _lcdInst 28A2                                 __ptext0 0426  
                               __ptext1 2532                                 __ptext2 22CC  
                               __ptext3 239C                                 __ptext4 2160  
                               __ptext5 2846                                 __ptext6 28D0  
                               __ptext7 1050                                 __ptext8 20DA  
                               __ptext9 14B6                         __size_of_printf 0028  
                             _T0CONbits 000FD5                         __size_of_strlen 0044  
                               _initLCD 22CC                          _motorADistance 00C5  
                          __size_of_abs 0032                            __size_of_pad 0096  
                               _isalpha 25E8                                 _isdigit 26E2  
                            ??___xxtofl 000A                          _motorBDistance 00C3  
                               _islower 2682                                 _isspace 2572  
                               _isupper 26B2                __size_of_I2C_Master_Init 005C  
              __size_of_I2C_Master_Read 0024                __size_of_I2C_Master_Wait 0012  
              __size_of_I2C_Master_Stop 0008                                 atoi@neg 0013  
                               _pulse_e 273E                           ??_doOperation 008E  
                        __pintcode_body 261C                                 _toupper 24A4  
           _topBreakBeamTriggeredChange 00C9                    end_of_initialization 2440  
                 __end_of_LCD_SIZE_HORZ FEC4                       __end_of_send_byte 2896  
                 __end_of_LCD_SIZE_VERT FEC3                            ?_EncoderInit 0001  
                 doOperation@isDoneDrop 00A3                                 fputc@fp 000C  
                         __Lmediumconst FEA8                                 int_func 261C  
                               fputs@fp 0015                 __size_of_init_motor_PWM 0028  
                     __end_of_robotInit 2572               __size_of_I2C_Master_Start 0008  
             __size_of_I2C_Master_Write 000A                         ___lldiv@divisor 000A  
                       ___lldiv@counter 0012                       __end_of_vfpfcnvrt 0426  
          __size_of_updateMotorBEncoder 007E                    doDisplayLog@keyValue 0096  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 0073  
                  doDisplayLog@keypress 0094                                 strlen@a 0008  
                               strlen@s 0006                               _PORTBbits 000F81  
                             _PORTEbits 000F84    updateMotorBEncoder@interruptPinState 0002  
                         ___xxtofl@sign 000E                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISEbits 000F96                             ___fldiv@grs 0040  
                           ___fldiv@rem 0039                            _happynewyear FEBA  
                           ___flmul@grs 0021                           send_byte@data 0008  
                   __end_of_doOperation 128A                  updateMotorBEncoder@val 0004  
                __size_of_replaceOldLog 0002                          __end_of___flge 1F8A  
                           vfpfcnvrt@ap 0050                             vfpfcnvrt@cp 0066  
                           vfpfcnvrt@fp 004C                             vfpfcnvrt@ll 0056  
                        __end_of___wmul 27DE                           __pidataCOMRAM 28D2  
                        __end_of_printf 27B8                          __end_of_strlen 2532  
                   start_initialization 23F8             __size_of_set_pwm_duty_cycle 0202  
             setMotorSpeeds@motorASpeed 005A               setMotorSpeeds@motorBSpeed 005D  
                           __end_of_abs 2682                             __end_of_pad 20DA  
                     ??_I2C_Master_Init 0017                       ??_I2C_Master_Read 0007  
                     ??_I2C_Master_Wait 0006                       ??_I2C_Master_Stop 0007  
                       ___llmod@divisor 000A                         ___llmod@counter 000E  
                           vfprintf@fmt 006F                                ??___flge 000E  
                              ??___wmul 000A                   main@currentRobotState 00BB  
              I2C_Master_Init@clockFreq 0013                             __pdataBANK0 00EB  
               ??_requestIsTireDropDone 0009                        __CFG_LPT1OSC$OFF 000000  
                              ??_printf 0073               __size_of_interruptHandler 2648  
                              ??_strlen 0008                               ___fldiv@a 0031  
                             ___fldiv@b 002D                               ___flmul@a 0018  
                             ___flmul@b 0014                             __pbssCOMRAM 0073  
                         __pcstackBANK0 0080                        ___aodiv@dividend 0006  
                         _replaceOldLog 28D0                        ??_setMotorSpeeds 005F  
                     __size_of___xxtofl 0140                             _doOperation 1050  
                setMotorSpeeds@Aforward 005C                          _init_motor_PWM 2768  
                             _atoi$1590 0015                               _atoi$1591 0019  
                             _atoi$1592 0017                    __size_of_EncoderInit 0016  
                      _I2C_Master_Start 28C8                        _I2C_Master_Write 28AE  
              doOperation@topLaserState 00AA                               _dtoa$1094 0037  
                     __CFG_CCP2MX$PORTC 000000                               __pintcode 0008  
                         __pmediumconst FEA8                                ?___aodiv 0006  
                              ?___aomod 0006                                ?___fldiv 002D  
                      ___aodiv@quotient 0018                                ?___flmul 0014  
                              ?___fltol 002D                                ?___lldiv 0006  
                              ?___llmod 0006                                ?_lcdInst 0001  
                     __size_of_vfprintf 0056                                ?_initLCD 0001  
                              ?_isalpha 0006                                ?_isdigit 0006  
                              ?_islower 0006                                ?_isspace 0006  
                        ?_replaceOldLog 0001                                ?_isupper 0006  
                   _updateMotorBEncoder 21E2                           ??_send_nibble 0007  
                              ?_pulse_e 0001                          __size_of_fputc 006C  
                        __size_of_fputs 0038                                ?_toupper 000C  
                __end_of_init_motor_PWM 2790            doOperation@topLaserStatePrev 00A6  
                        __size_of_putch 000C                          ___wmul@product 000A  
                              _LATAbits 000F89                           ?_doDisplayLog 008E  
                              _LATDbits 000F8C                               _send_byte 2884  
                        _LCD_LINE1_ADDR FEC1                          _LCD_LINE2_ADDR FECB  
                        _LCD_LINE3_ADDR FECA                          _LCD_LINE4_ADDR FEC9  
            doOperation@timeInOperation 00A1                                i2u424_40 2244  
                              i2u416_40 21EC                 init_motor_PWM@FREQUENCY FEC5  
                              i2u425_40 2246                                i2u416_48 21EE  
                              i2u419_40 220C                                i2u419_48 220E  
                  ?_updateMotorBEncoder 0001                        __CFG_WDTPS$32768 000000  
                             _robotInit 2532                               _vfpfcnvrt 0012  
                             _xtoa$1116 0038                               _xtoa$1117 003A  
                     ___wmul@multiplier 0006            ??_sendArduinoTireDropRequest 0009  
                          _isspace$1617 000C                              vfpfcnvrt@c 0068  
                             copy_data0 240C                         ?_init_motor_PWM 0001  
               _set_pwm_duty_cycle$1951 0056                          ??_doDisplayLog 0090  
                __end_of_LCD_LINE1_ADDR FEC2                  __end_of_LCD_LINE2_ADDR FECC  
                __end_of_LCD_LINE3_ADDR FECB                  __end_of_LCD_LINE4_ADDR FECA  
                   __end_of_send_nibble 2872                              ?_send_byte 0001  
                              __Hrparam 0000                   ??_updateMotorBEncoder 0001  
       doDisplayLog@currentDisplayState 0095                              vfprintf@ap 0071  
                              __Lrparam 0000                              vfprintf@fp 006D  
                    __CFG_BOREN$SBORDIS 000000     __size_of_sendArduinoTireDropRequest 0022  
                            ?_robotInit 0001                        __size_of___aodiv 0148  
                      __size_of___aomod 0124                        __size_of___fldiv 0288  
                      __size_of___flmul 0352                        __size_of___fltol 00BA  
                      __size_of___lldiv 0082                        __size_of___llmod 0066  
                            ?_vfpfcnvrt 004C                         ___aodiv@divisor 000E  
                      _interruptHandler 0008                         ___aodiv@counter 0016  
                      __size_of_lcdInst 000C                         ??_replaceOldLog 0006  
                       _I2C_Master_Init 239C                         _I2C_Master_Read 27DE  
                      __size_of_initLCD 006A                                ___xxtofl 19D6  
                       _I2C_Master_Wait 2872                         _I2C_Master_Stop 28C0  
                      __size_of_isalpha 0034                        __size_of_isdigit 0030  
                      __size_of_islower 0030                        __size_of_isspace 003E  
                              __ptext10 19D6                                __ptext11 1F8A  
                              __ptext20 27DE                                __ptext12 0834  
                              __ptext21 2872                                __ptext13 1EBA  
                              __ptext30 2682                                __ptext22 2768  
                              __ptext14 0B86                                __ptext31 26B2  
                              __ptext23 2824                                __ptext15 2802  
                              __ptext40 2650                                __ptext32 25E8  
                              __ptext24 16B8                                __ptext16 2712  
                              __ptext41 1D96                                __ptext33 1B16  
                              __ptext25 2790                                __ptext17 28AE  
                              __ptext50 273E                                __ptext42 188E  
                              __ptext34 0E0E                                __ptext26 244E  
                              __ptext18 28C0                                __ptext51 2336  
                              __ptext43 1C56                                __ptext35 2044  
                              __ptext27 0012                                __ptext19 28C8  
                              __ptext44 2572                                __ptext36 24EE  
                              __ptext28 128A                                __ptext53 21E2  
                              __ptext45 26E2                                __ptext37 25B0  
                              __ptext29 24A4                                __ptext46 27B8  
                              __ptext38 2260                                __ptext47 28A2  
                              __ptext39 2896                                __ptext48 2884  
                              __ptext49 285C                        __size_of_isupper 0030  
                      __size_of_pulse_e 002A                         _motorADirection 00F2  
                      __size_of_toupper 004A                           __size_of_atoi 0140  
                         __size_of_main 040E                         _motorBDirection 0078  
                         __size_of_dtoa 0242                           __size_of_stoa 0140  
                         __size_of_xtoa 022C                               stoa@F1139 00EB  
        set_pwm_duty_cycle@max_duty_val 0050                                int$flags 0079  
                              _vfprintf 244E                               printf@fmt 0082  
                              main@tick 00B4                                main@time 00AD  
        __size_of_requestIsTireDropDone 002C           __end_of_requestIsTireDropDone 273E  
           I2C_Master_Write@byteToWrite 0007                        ___aomod@dividend 0006  
            __end_of_set_pwm_duty_cycle 16B8                               putch@data 0009  
                        _vfpfcnvrt$1131 006B                __end_of_I2C_Master_Start 28D0  
              __end_of_I2C_Master_Write 28B8                              _INTCONbits 000FF2  
                              isalpha@c 0006                                isdigit@c 0006  
                           _send_nibble 285C                            ?_doOperation 0001  
        _bottomBreakBeamTriggeredChange 00C8                                intlevel2 0000  
                         _LCD_SIZE_HORZ FEC3                                islower@c 0006  
                         _LCD_SIZE_VERT FEC2                                isspace@c 0006  
                      ___lldiv@dividend 0006                             ??_send_byte 0008  
                              isupper@c 0006                              _OSCCONbits 000FD3  
                           ??_robotInit 001B                                printf@ap 008C  
               __end_of_I2C_Master_Init 23F8                         ___aomod@divisor 000E  
               __end_of_I2C_Master_Read 2802                 __end_of_I2C_Master_Wait 2884  
               __end_of_I2C_Master_Stop 28C8                             ??_vfpfcnvrt 0052  
                           lcdInst@data 0009                                stoa@nuls 0018  
                       ___aomod@counter 0016      __end_of_sendArduinoTireDropRequest 2824  
            _sendArduinoTireDropRequest 2802                              _TIMER_INIT 2824  
       __end_ofinit_motor_PWM@FREQUENCY FEC9                    __end_of_doDisplayLog 188E  
                      ___lldiv@quotient 000E                                toupper@c 000C  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                          ___aodiv@sign 0017                           ??_EncoderInit 0006  
                          ___aomod@sign 0017  
