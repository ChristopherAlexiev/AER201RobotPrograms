

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 24 18:00:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85  0000                     
    86                           ; Version 2.05
    87                           ; Generated 20/12/2018 GMT
    88                           ; 
    89                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F4620 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	idataCOMRAM
   122  00375A                     __pidataCOMRAM:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _motorBDirection
   126  00375A  01                 	db	1
   127                           
   128                           	psect	idataBANK0
   129  003742                     __pidataBANK0:
   130                           	opt callstack 0
   131                           
   132                           ;initializer for stoa@F1144
   133  003742  28                 	db	40
   134  003743  6E                 	db	110
   135  003744  75                 	db	117
   136  003745  6C                 	db	108
   137  003746  6C                 	db	108
   138  003747  29                 	db	41
   139  003748  00                 	db	0
   140                           
   141                           ;initializer for _motorADirection
   142  003749  01                 	db	1
   143                           
   144                           	psect	mediumconst
   145  00FE60                     __pmediumconst:
   146                           	opt callstack 0
   147  00FE60  00                 	db	0
   148  00FE61                     _keys:
   149                           	opt callstack 0
   150  00FE61  31                 	db	49
   151  00FE62  32                 	db	50
   152  00FE63  33                 	db	51
   153  00FE64  41                 	db	65
   154  00FE65  34                 	db	52
   155  00FE66  35                 	db	53
   156  00FE67  36                 	db	54
   157  00FE68  42                 	db	66
   158  00FE69  37                 	db	55
   159  00FE6A  38                 	db	56
   160  00FE6B  39                 	db	57
   161  00FE6C  43                 	db	67
   162  00FE6D  2A                 	db	42
   163  00FE6E  30                 	db	48
   164  00FE6F  23                 	db	35
   165  00FE70  44                 	db	68
   166  00FE71  00                 	db	0
   167  00FE72                     __end_of_keys:
   168                           	opt callstack 0
   169  00FE72                     _happynewyear:
   170                           	opt callstack 0
   171  00FE72  00                 	db	0
   172  00FE73  37                 	db	55
   173  00FE74  0E                 	db	14
   174  00FE75  02                 	db	2
   175  00FE76  13                 	db	19
   176  00FE77  02                 	db	2
   177  00FE78  13                 	db	19
   178  00FE79                     __end_of_happynewyear:
   179                           	opt callstack 0
   180  00FE79                     _LCD_LINE1_ADDR:
   181                           	opt callstack 0
   182  00FE79  00                 	db	0
   183  00FE7A                     __end_of_LCD_LINE1_ADDR:
   184                           	opt callstack 0
   185  00FE7A                     _LCD_SIZE_VERT:
   186                           	opt callstack 0
   187  00FE7A  04                 	db	4
   188  00FE7B                     __end_of_LCD_SIZE_VERT:
   189                           	opt callstack 0
   190  00FE7B                     _LCD_SIZE_HORZ:
   191                           	opt callstack 0
   192  00FE7B  10                 	db	16
   193  00FE7C                     __end_of_LCD_SIZE_HORZ:
   194                           	opt callstack 0
   195  00FE7C  10                 	db	16
   196  00FE7D                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   197                           	opt callstack 0
   198  00FE7D  03E8               	dw	1000
   199  00FE7F  0000               	dw	0
   200  00FE81                     __end_ofinit_motor_PWM@FREQUENCY:
   201                           	opt callstack 0
   202  00FE81  50                 	db	80
   203  00FE82                     __end_of_LCD_LINE4_ADDR:
   204                           	opt callstack 0
   205  00FE82  10                 	db	16
   206  00FE83                     __end_of_LCD_LINE3_ADDR:
   207                           	opt callstack 0
   208  00FE83  40                 	db	64
   209  00FE84                     __end_of_LCD_LINE2_ADDR:
   210                           	opt callstack 0
   211  0000                     _SSPBUF	set	4041
   212  0000                     _SSPCON2bits	set	4037
   213  0000                     _SSPCON1	set	4038
   214  0000                     _SSPADD	set	4040
   215  0000                     _SSPCON1bits	set	4038
   216  0000                     _SSPCON2	set	4037
   217  0000                     _SSPSTAT	set	4039
   218  0000                     _LATDbits	set	3980
   219  0000                     _ADCON1	set	4033
   220  0000                     _LATB	set	3978
   221  0000                     _TRISD	set	3989
   222  0000                     _LATD	set	3980
   223  0000                     _EECON2	set	4007
   224  0000                     _EECON1bits	set	4006
   225  0000                     _EEADR	set	4009
   226  0000                     _EEDATA	set	4008
   227  0000                     _TRISAbits	set	3986
   228  0000                     _LATAbits	set	3977
   229  0000                     _CCPR2L	set	4027
   230  0000                     _CCPR1L	set	4030
   231  0000                     _PR2	set	4043
   232  0000                     _INTCONbits	set	4082
   233  0000                     _TMR0L	set	4054
   234  0000                     _TMR0H	set	4055
   235  0000                     _T0CONbits	set	4053
   236  0000                     _OSCCONbits	set	4051
   237  0000                     _TRISBbits	set	3987
   238  0000                     _TRISEbits	set	3990
   239  0000                     _TRISCbits	set	3988
   240  0000                     _PORTCbits	set	3970
   241  0000                     _PORTEbits	set	3972
   242  0000                     _PORTBbits	set	3969
   243  0000                     _PORTB	set	3969
   244  0000                     _INT0IF	set	32657
   245  0000                     _INT2IF	set	32641
   246  0000                     _TMR0IF	set	32658
   247  0000                     _INT1IF	set	32640
   248  0000                     _INT1IE	set	32643
   249  0000                     _CCP2Y	set	32212
   250  0000                     _CCP2X	set	32213
   251  0000                     _CCP1Y	set	32236
   252  0000                     _CCP1X	set	32237
   253  0000                     _TMR2ON	set	32338
   254  0000                     _T2CKPS1	set	32337
   255  0000                     _T2CKPS0	set	32336
   256  0000                     _CCP2M0	set	32208
   257  0000                     _CCP2M1	set	32209
   258  0000                     _CCP2M2	set	32210
   259  0000                     _CCP2M3	set	32211
   260  0000                     _CCP1M0	set	32232
   261  0000                     _CCP1M1	set	32233
   262  0000                     _CCP1M2	set	32234
   263  0000                     _CCP1M3	set	32235
   264  0000                     _P1M0	set	32238
   265  0000                     _P1M1	set	32239
   266  0000                     _TMR0ON	set	32431
   267  0000                     _TMR0IE	set	32661
   268  0000                     _PSA	set	32427
   269  0000                     _T0PS0	set	32424
   270  0000                     _T0PS1	set	32425
   271  0000                     _T0PS2	set	32426
   272  0000                     _T08BIT	set	32430
   273  0000                     _INT0IE	set	32660
   274  0000                     _INT2IE	set	32644
   275  00FE84                     STR_16:
   276                           
   277                           ; BSR set to: 0
   278  00FE84  54                 	db	84	;'T'
   279  00FE85  49                 	db	73	;'I'
   280  00FE86  52                 	db	82	;'R'
   281  00FE87  45                 	db	69	;'E'
   282  00FE88  2E                 	db	46
   283  00FE89  20                 	db	32
   284  00FE8A  4F                 	db	79	;'O'
   285  00FE8B  4E                 	db	78	;'N'
   286  00FE8C  20                 	db	32
   287  00FE8D  50                 	db	80	;'P'
   288  00FE8E  4F                 	db	79	;'O'
   289  00FE8F  4C                 	db	76	;'L'
   290  00FE90  45                 	db	69	;'E'
   291  00FE91  3A                 	db	58	;':'
   292  00FE92  20                 	db	32
   293  00FE93  00                 	db	0
   294  00FE94                     STR_51:
   295                           
   296                           ; BSR set to: 0
   297  00FE94  28                 	db	40
   298  00FE95  31                 	db	49	;'1'
   299  00FE96  29                 	db	41
   300  00FE97  20                 	db	32
   301  00FE98  28                 	db	40
   302  00FE99  32                 	db	50	;'2'
   303  00FE9A  29                 	db	41
   304  00FE9B  20                 	db	32
   305  00FE9C  28                 	db	40
   306  00FE9D  33                 	db	51	;'3'
   307  00FE9E  29                 	db	41
   308  00FE9F  20                 	db	32
   309  00FEA0  28                 	db	40
   310  00FEA1  34                 	db	52	;'4'
   311  00FEA2  29                 	db	41
   312  00FEA3  00                 	db	0
   313  00FEA4                     STR_9:
   314                           
   315                           ; BSR set to: 0
   316  00FEA4  28                 	db	40
   317  00FEA5  32                 	db	50	;'2'
   318  00FEA6  29                 	db	41
   319  00FEA7  20                 	db	32
   320  00FEA8  53                 	db	83	;'S'
   321  00FEA9  41                 	db	65	;'A'
   322  00FEAA  56                 	db	86	;'V'
   323  00FEAB  45                 	db	69	;'E'
   324  00FEAC  20                 	db	32
   325  00FEAD  26                 	db	38
   326  00FEAE  20                 	db	32
   327  00FEAF  45                 	db	69	;'E'
   328  00FEB0  58                 	db	88	;'X'
   329  00FEB1  49                 	db	73	;'I'
   330  00FEB2  54                 	db	84	;'T'
   331  00FEB3  00                 	db	0
   332  00FEB4                     STR_43:
   333                           
   334                           ; BSR set to: 0
   335  00FEB4  28                 	db	40
   336  00FEB5  32                 	db	50	;'2'
   337  00FEB6  29                 	db	41
   338  00FEB7  20                 	db	32
   339  00FEB8  51                 	db	81	;'Q'
   340  00FEB9  55                 	db	85	;'U'
   341  00FEBA  49                 	db	73	;'I'
   342  00FEBB  54                 	db	84	;'T'
   343  00FEBC  20                 	db	32
   344  00FEBD  44                 	db	68	;'D'
   345  00FEBE  4F                 	db	79	;'O'
   346  00FEBF  20                 	db	32
   347  00FEC0  4E                 	db	78	;'N'
   348  00FEC1  4F                 	db	79	;'O'
   349  00FEC2  54                 	db	84	;'T'
   350  00FEC3  00                 	db	0
   351  00FEC4                     STR_5:
   352                           
   353                           ; BSR set to: 0
   354  00FEC4  54                 	db	84	;'T'
   355  00FEC5  49                 	db	73	;'I'
   356  00FEC6  52                 	db	82	;'R'
   357  00FEC7  2E                 	db	46
   358  00FEC8  20                 	db	32
   359  00FEC9  53                 	db	83	;'S'
   360  00FECA  55                 	db	85	;'U'
   361  00FECB  50                 	db	80	;'P'
   362  00FECC  50                 	db	80	;'P'
   363  00FECD  4C                 	db	76	;'L'
   364  00FECE  49                 	db	73	;'I'
   365  00FECF  45                 	db	69	;'E'
   366  00FED0  44                 	db	68	;'D'
   367  00FED1  20                 	db	32
   368  00FED2  00                 	db	0
   369  00FED3                     STR_28:
   370                           
   371                           ; BSR set to: 0
   372  00FED3  25                 	db	37
   373  00FED4  30                 	db	48	;'0'
   374  00FED5  32                 	db	50	;'2'
   375  00FED6  78                 	db	120	;'x'
   376  00FED7  2F                 	db	47
   377  00FED8  25                 	db	37
   378  00FED9  30                 	db	48	;'0'
   379  00FEDA  32                 	db	50	;'2'
   380  00FEDB  78                 	db	120	;'x'
   381  00FEDC  2F                 	db	47
   382  00FEDD  25                 	db	37
   383  00FEDE  30                 	db	48	;'0'
   384  00FEDF  32                 	db	50	;'2'
   385  00FEE0  78                 	db	120	;'x'
   386  00FEE1  00                 	db	0
   387  00FEE2                     STR_29:
   388                           
   389                           ; BSR set to: 0
   390  00FEE2  25                 	db	37
   391  00FEE3  30                 	db	48	;'0'
   392  00FEE4  32                 	db	50	;'2'
   393  00FEE5  78                 	db	120	;'x'
   394  00FEE6  3A                 	db	58	;':'
   395  00FEE7  25                 	db	37
   396  00FEE8  30                 	db	48	;'0'
   397  00FEE9  32                 	db	50	;'2'
   398  00FEEA  78                 	db	120	;'x'
   399  00FEEB  3A                 	db	58	;':'
   400  00FEEC  25                 	db	37
   401  00FEED  30                 	db	48	;'0'
   402  00FEEE  32                 	db	50	;'2'
   403  00FEEF  78                 	db	120	;'x'
   404  00FEF0  00                 	db	0
   405  00FEF1                     STR_14:
   406                           
   407                           ; BSR set to: 0
   408  00FEF1  54                 	db	84	;'T'
   409  00FEF2  49                 	db	73	;'I'
   410  00FEF3  52                 	db	82	;'R'
   411  00FEF4  2E                 	db	46
   412  00FEF5  20                 	db	32
   413  00FEF6  44                 	db	68	;'D'
   414  00FEF7  45                 	db	69	;'E'
   415  00FEF8  50                 	db	80	;'P'
   416  00FEF9  4C                 	db	76	;'L'
   417  00FEFA  4F                 	db	79	;'O'
   418  00FEFB  59                 	db	89	;'Y'
   419  00FEFC  3A                 	db	58	;':'
   420  00FEFD  20                 	db	32
   421  00FEFE  00                 	db	0
   422  00FEFF                     STR_49:
   423                           
   424                           ; BSR set to: 0
   425  00FEFF  28                 	db	40
   426  00FF00  31                 	db	49	;'1'
   427  00FF01  20                 	db	32
   428  00FF02  49                 	db	73	;'I'
   429  00FF03  53                 	db	83	;'S'
   430  00FF04  20                 	db	32
   431  00FF05  4F                 	db	79	;'O'
   432  00FF06  4C                 	db	76	;'L'
   433  00FF07  44                 	db	68	;'D'
   434  00FF08  45                 	db	69	;'E'
   435  00FF09  53                 	db	83	;'S'
   436  00FF0A  54                 	db	84	;'T'
   437  00FF0B  29                 	db	41
   438  00FF0C  00                 	db	0
   439  00FF0D                     STR_7:
   440                           
   441                           ; BSR set to: 0
   442  00FF0D  28                 	db	40
   443  00FF0E  31                 	db	49	;'1'
   444  00FF0F  29                 	db	41
   445  00FF10  20                 	db	32
   446  00FF11  50                 	db	80	;'P'
   447  00FF12  4F                 	db	79	;'O'
   448  00FF13  4C                 	db	76	;'L'
   449  00FF14  45                 	db	69	;'E'
   450  00FF15  20                 	db	32
   451  00FF16  49                 	db	73	;'I'
   452  00FF17  4E                 	db	78	;'N'
   453  00FF18  46                 	db	70	;'F'
   454  00FF19  4F                 	db	79	;'O'
   455  00FF1A  00                 	db	0
   456  00FF1B                     STR_33:
   457                           
   458                           ; BSR set to: 0
   459  00FF1B  28                 	db	40
   460  00FF1C  32                 	db	50	;'2'
   461  00FF1D  29                 	db	41
   462  00FF1E  20                 	db	32
   463  00FF1F  56                 	db	86	;'V'
   464  00FF20  49                 	db	73	;'I'
   465  00FF21  45                 	db	69	;'E'
   466  00FF22  57                 	db	87	;'W'
   467  00FF23  20                 	db	32
   468  00FF24  4C                 	db	76	;'L'
   469  00FF25  4F                 	db	79	;'O'
   470  00FF26  47                 	db	71	;'G'
   471  00FF27  53                 	db	83	;'S'
   472  00FF28  00                 	db	0
   473  00FF29                     STR_18:
   474                           
   475                           ; BSR set to: 0
   476  00FF29  31                 	db	49	;'1'
   477  00FF2A  3C                 	db	60	;'<'
   478  00FF2B  2D                 	db	45
   479  00FF2C  20                 	db	32
   480  00FF2D  32                 	db	50	;'2'
   481  00FF2E  2D                 	db	45
   482  00FF2F  3E                 	db	62	;'>'
   483  00FF30  20                 	db	32
   484  00FF31  33                 	db	51	;'3'
   485  00FF32  4D                 	db	77	;'M'
   486  00FF33  45                 	db	69	;'E'
   487  00FF34  4E                 	db	78	;'N'
   488  00FF35  55                 	db	85	;'U'
   489  00FF36  00                 	db	0
   490  00FF37                     STR_39:
   491                           
   492                           ; BSR set to: 0
   493  00FF37  4F                 	db	79	;'O'
   494  00FF38  50                 	db	80	;'P'
   495  00FF39  2E                 	db	46
   496  00FF3A  20                 	db	32
   497  00FF3B  43                 	db	67	;'C'
   498  00FF3C  4F                 	db	79	;'O'
   499  00FF3D  4D                 	db	77	;'M'
   500  00FF3E  50                 	db	80	;'P'
   501  00FF3F  4C                 	db	76	;'L'
   502  00FF40  45                 	db	69	;'E'
   503  00FF41  54                 	db	84	;'T'
   504  00FF42  45                 	db	69	;'E'
   505  00FF43  00                 	db	0
   506  00FF44                     STR_41:
   507                           
   508                           ; BSR set to: 0
   509  00FF44  28                 	db	40
   510  00FF45  31                 	db	49	;'1'
   511  00FF46  29                 	db	41
   512  00FF47  20                 	db	32
   513  00FF48  56                 	db	86	;'V'
   514  00FF49  49                 	db	73	;'I'
   515  00FF4A  45                 	db	69	;'E'
   516  00FF4B  57                 	db	87	;'W'
   517  00FF4C  20                 	db	32
   518  00FF4D  4C                 	db	76	;'L'
   519  00FF4E  4F                 	db	79	;'O'
   520  00FF4F  47                 	db	71	;'G'
   521  00FF50  00                 	db	0
   522  00FF51                     STR_35:
   523                           
   524                           ; BSR set to: 0
   525  00FF51  4F                 	db	79	;'O'
   526  00FF52  50                 	db	80	;'P'
   527  00FF53  45                 	db	69	;'E'
   528  00FF54  52                 	db	82	;'R'
   529  00FF55  41                 	db	65	;'A'
   530  00FF56  54                 	db	84	;'T'
   531  00FF57  49                 	db	73	;'I'
   532  00FF58  4F                 	db	79	;'O'
   533  00FF59  4E                 	db	78	;'N'
   534  00FF5A  20                 	db	32
   535  00FF5B  49                 	db	73	;'I'
   536  00FF5C  4E                 	db	78	;'N'
   537  00FF5D  00                 	db	0
   538  00FF5E                     
   539                           ; BSR set to: 0
   540  00FF5E  45                 	db	69	;'E'
   541  00FF5F  45                 	db	69	;'E'
   542  00FF60  50                 	db	80	;'P'
   543  00FF61  52                 	db	82	;'R'
   544  00FF62  4F                 	db	79	;'O'
   545  00FF63  4D                 	db	77	;'M'
   546  00FF64  2D                 	db	45
   547  00FF65  44                 	db	68	;'D'
   548  00FF66  65                 	db	101	;'e'
   549  00FF67  6D                 	db	109	;'m'
   550  00FF68  6F                 	db	111	;'o'
   551  00FF69  6E                 	db	110	;'n'
   552  00FF6A  00                 	db	0
   553  00FF6B                     STR_47:
   554                           
   555                           ; BSR set to: 0
   556  00FF6B  53                 	db	83	;'S'
   557  00FF6C  45                 	db	69	;'E'
   558  00FF6D  4C                 	db	76	;'L'
   559  00FF6E  45                 	db	69	;'E'
   560  00FF6F  43                 	db	67	;'C'
   561  00FF70  54                 	db	84	;'T'
   562  00FF71  20                 	db	32
   563  00FF72  4C                 	db	76	;'L'
   564  00FF73  4F                 	db	79	;'O'
   565  00FF74  47                 	db	71	;'G'
   566  00FF75  00                 	db	0
   567  00FF76                     STR_24:
   568                           
   569                           ; BSR set to: 0
   570  00FF76  25                 	db	37
   571  00FF77  64                 	db	100	;'d'
   572  00FF78  20                 	db	32
   573  00FF79  6F                 	db	111	;'o'
   574  00FF7A  6E                 	db	110	;'n'
   575  00FF7B  20                 	db	32
   576  00FF7C  70                 	db	112	;'p'
   577  00FF7D  6F                 	db	111	;'o'
   578  00FF7E  6C                 	db	108	;'l'
   579  00FF7F  65                 	db	101	;'e'
   580  00FF80  00                 	db	0
   581  00FF81                     
   582                           ; BSR set to: 0
   583  00FF81  77                 	db	119	;'w'
   584  00FF82  72                 	db	114	;'r'
   585  00FF83  6F                 	db	111	;'o'
   586  00FF84  74                 	db	116	;'t'
   587  00FF85  65                 	db	101	;'e'
   588  00FF86  3A                 	db	58	;':'
   589  00FF87  20                 	db	32
   590  00FF88  25                 	db	37
   591  00FF89  63                 	db	99	;'c'
   592  00FF8A  6E                 	db	110	;'n'
   593  00FF8B  00                 	db	0
   594  00FF8C                     
   595                           ; BSR set to: 0
   596  00FF8C  72                 	db	114	;'r'
   597  00FF8D  65                 	db	101	;'e'
   598  00FF8E  61                 	db	97	;'a'
   599  00FF8F  64                 	db	100	;'d'
   600  00FF90  3A                 	db	58	;':'
   601  00FF91  20                 	db	32
   602  00FF92  25                 	db	37
   603  00FF93  63                 	db	99	;'c'
   604  00FF94  6E                 	db	110	;'n'
   605  00FF95  6E                 	db	110	;'n'
   606  00FF96  00                 	db	0
   607  00FF97                     STR_2:
   608                           
   609                           ; BSR set to: 0
   610  00FF97  4F                 	db	79	;'O'
   611  00FF98  50                 	db	80	;'P'
   612  00FF99  2E                 	db	46
   613  00FF9A  20                 	db	32
   614  00FF9B  54                 	db	84	;'T'
   615  00FF9C  49                 	db	73	;'I'
   616  00FF9D  4D                 	db	77	;'M'
   617  00FF9E  45                 	db	69	;'E'
   618  00FF9F  20                 	db	32
   619  00FFA0  00                 	db	0
   620  00FFA1                     STR_23:
   621                           
   622                           ; BSR set to: 0
   623  00FFA1  54                 	db	84	;'T'
   624  00FFA2  49                 	db	73	;'I'
   625  00FFA3  52                 	db	82	;'R'
   626  00FFA4  45                 	db	69	;'E'
   627  00FFA5  20                 	db	32
   628  00FFA6  44                 	db	68	;'D'
   629  00FFA7  52                 	db	82	;'R'
   630  00FFA8  4F                 	db	79	;'O'
   631  00FFA9  50                 	db	80	;'P'
   632  00FFAA  00                 	db	0
   633  00FFAB                     STR_31:
   634                           
   635                           ; BSR set to: 0
   636  00FFAB  28                 	db	40
   637  00FFAC  31                 	db	49	;'1'
   638  00FFAD  29                 	db	41
   639  00FFAE  20                 	db	32
   640  00FFAF  53                 	db	83	;'S'
   641  00FFB0  54                 	db	84	;'T'
   642  00FFB1  41                 	db	65	;'A'
   643  00FFB2  52                 	db	82	;'R'
   644  00FFB3  54                 	db	84	;'T'
   645  00FFB4  00                 	db	0
   646  00FFB5                     
   647                           ; BSR set to: 0
   648  00FFB5  72                 	db	114	;'r'
   649  00FFB6  65                 	db	101	;'e'
   650  00FFB7  61                 	db	97	;'a'
   651  00FFB8  64                 	db	100	;'d'
   652  00FFB9  3A                 	db	58	;':'
   653  00FFBA  20                 	db	32
   654  00FFBB  25                 	db	37
   655  00FFBC  63                 	db	99	;'c'
   656  00FFBD  6E                 	db	110	;'n'
   657  00FFBE  00                 	db	0
   658  00FFBF                     STR_27:
   659                           
   660                           ; BSR set to: 0
   661  00FFBF  57                 	db	87	;'W'
   662  00FFC0  45                 	db	69	;'E'
   663  00FFC1  4C                 	db	76	;'L'
   664  00FFC2  43                 	db	67	;'C'
   665  00FFC3  4F                 	db	79	;'O'
   666  00FFC4  4D                 	db	77	;'M'
   667  00FFC5  45                 	db	69	;'E'
   668  00FFC6  20                 	db	32
   669  00FFC7  00                 	db	0
   670  00FFC8                     STR_45:
   671                           
   672                           ; BSR set to: 0
   673  00FFC8  53                 	db	83	;'S'
   674  00FFC9  41                 	db	65	;'A'
   675  00FFCA  56                 	db	86	;'V'
   676  00FFCB  45                 	db	69	;'E'
   677  00FFCC  20                 	db	32
   678  00FFCD  4C                 	db	76	;'L'
   679  00FFCE  4F                 	db	79	;'O'
   680  00FFCF  47                 	db	71	;'G'
   681  00FFD0  00                 	db	0
   682  00FFD1                     STR_37:
   683                           
   684                           ; BSR set to: 0
   685  00FFD1  50                 	db	80	;'P'
   686  00FFD2  52                 	db	82	;'R'
   687  00FFD3  4F                 	db	79	;'O'
   688  00FFD4  47                 	db	71	;'G'
   689  00FFD5  52                 	db	82	;'R'
   690  00FFD6  45                 	db	69	;'E'
   691  00FFD7  53                 	db	83	;'S'
   692  00FFD8  53                 	db	83	;'S'
   693  00FFD9  00                 	db	0
   694  00FFDA                     STR_10:
   695                           
   696                           ; BSR set to: 0
   697  00FFDA  25                 	db	37
   698  00FFDB  73                 	db	115	;'s'
   699  00FFDC  25                 	db	37
   700  00FFDD  64                 	db	100	;'d'
   701  00FFDE  25                 	db	37
   702  00FFDF  73                 	db	115	;'s'
   703  00FFE0  25                 	db	37
   704  00FFE1  64                 	db	100	;'d'
   705  00FFE2  00                 	db	0
   706  00FFE3                     STR_1:
   707                           
   708                           ; BSR set to: 0
   709  00FFE3  25                 	db	37
   710  00FFE4  73                 	db	115	;'s'
   711  00FFE5  25                 	db	37
   712  00FFE6  64                 	db	100	;'d'
   713  00FFE7  25                 	db	37
   714  00FFE8  73                 	db	115	;'s'
   715  00FFE9  00                 	db	0
   716  00FFEA                     STR_11:
   717                           
   718                           ; BSR set to: 0
   719  00FFEA  50                 	db	80	;'P'
   720  00FFEB  4F                 	db	79	;'O'
   721  00FFEC  4C                 	db	76	;'L'
   722  00FFED  45                 	db	69	;'E'
   723  00FFEE  20                 	db	32
   724  00FFEF  00                 	db	0
   725  00FFF0                     STR_22:
   726                           
   727                           ; BSR set to: 0
   728  00FFF0  41                 	db	65	;'A'
   729  00FFF1  3A                 	db	58	;':'
   730  00FFF2  20                 	db	32
   731  00FFF3  25                 	db	37
   732  00FFF4  64                 	db	100	;'d'
   733  00FFF5  00                 	db	0
   734  00FFF6                     STR_21:
   735                           
   736                           ; BSR set to: 0
   737  00FFF6  42                 	db	66	;'B'
   738  00FFF7  3A                 	db	58	;':'
   739  00FFF8  20                 	db	32
   740  00FFF9  25                 	db	37
   741  00FFFA  64                 	db	100	;'d'
   742  00FFFB  00                 	db	0
   743  00FFFC                     STR_12:
   744                           
   745                           ; BSR set to: 0
   746  00FFFC  2F                 	db	47
   747  00FFFD  00                 	db	0
   748  0000                     
   749                           ; #config settings
   750  00FFFE  00                 	db	0	; dummy byte at the end
   751  0000                     
   752                           	psect	cinit
   753  002EAC                     __pcinit:
   754                           	opt callstack 0
   755  002EAC                     start_initialization:
   756                           	opt callstack 0
   757  002EAC                     __initialization:
   758                           	opt callstack 0
   759                           
   760                           ; Initialize objects allocated to BANK0 (8 bytes)
   761                           ; load TBLPTR registers with __pidataBANK0
   762  002EAC  0E42               	movlw	low __pidataBANK0
   763  002EAE  6EF6               	movwf	tblptrl,c
   764  002EB0  0E37               	movlw	high __pidataBANK0
   765  002EB2  6EF7               	movwf	tblptrh,c
   766  002EB4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   767  002EB6  6EF8               	movwf	tblptru,c
   768  002EB8  EE00  F0E9         	lfsr	0,__pdataBANK0
   769  002EBC  EE10 F008          	lfsr	1,8
   770  002EC0                     copy_data0:
   771  002EC0  0009               	tblrd		*+
   772  002EC2  CFF5 FFEE          	movff	tablat,postinc0
   773  002EC6  50E5               	movf	postdec1,w,c
   774  002EC8  50E1               	movf	fsr1l,w,c
   775  002ECA  E1FA               	bnz	copy_data0
   776                           
   777                           ; Initialize objects allocated to COMRAM (1 bytes)
   778                           ; load TBLPTR registers with __pidataCOMRAM
   779  002ECC  0E5A               	movlw	low __pidataCOMRAM
   780  002ECE  6EF6               	movwf	tblptrl,c
   781  002ED0  0E37               	movlw	high __pidataCOMRAM
   782  002ED2  6EF7               	movwf	tblptrh,c
   783  002ED4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   784  002ED6  6EF8               	movwf	tblptru,c
   785  002ED8  0009               	tblrd		*+	;fetch initializer
   786  002EDA  CFF5 F079          	movff	tablat,__pdataCOMRAM
   787                           
   788                           ; Clear objects allocated to BIGRAM (330 bytes)
   789  002EDE  EE01  F030         	lfsr	0,__pbssBIGRAM
   790  002EE2  EE11 F04A          	lfsr	1,330
   791  002EE6                     clear_0:
   792  002EE6  6AEE               	clrf	postinc0,c
   793  002EE8  50E5               	movf	postdec1,w,c
   794  002EEA  50E1               	movf	fsr1l,w,c
   795  002EEC  E1FC               	bnz	clear_0
   796  002EEE  50E2               	movf	fsr1h,w,c
   797  002EF0  E1FA               	bnz	clear_0
   798                           
   799                           ; Clear objects allocated to BANK1 (32 bytes)
   800  002EF2  EE01  F000         	lfsr	0,__pbssBANK1
   801  002EF6  0E20               	movlw	32
   802  002EF8                     clear_1:
   803  002EF8  6AEE               	clrf	postinc0,c
   804  002EFA  06E8               	decf	wreg,f,c
   805  002EFC  E1FD               	bnz	clear_1
   806                           
   807                           ; Clear objects allocated to BANK0 (19 bytes)
   808  002EFE  EE00  F0D6         	lfsr	0,__pbssBANK0
   809  002F02  0E13               	movlw	19
   810  002F04                     clear_2:
   811  002F04  6AEE               	clrf	postinc0,c
   812  002F06  06E8               	decf	wreg,f,c
   813  002F08  E1FD               	bnz	clear_2
   814                           
   815                           ; Clear objects allocated to COMRAM (4 bytes)
   816  002F0A  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   817  002F0C  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   818  002F0E  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   819  002F10  6A75               	clrf	__pbssCOMRAM& (0+255),c
   820  002F12                     end_of_initialization:
   821                           	opt callstack 0
   822  002F12                     __end_of__initialization:
   823                           	opt callstack 0
   824  002F12  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   825  002F14  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   826  002F16  0E00               	movlw	low (__Lmediumconst shr (0+16))
   827  002F18  6EF8               	movwf	tblptru,c
   828  002F1A  0100               	movlb	0
   829  002F1C  EF46  F002         	goto	_main	;jump to C main() function
   830                           
   831                           	psect	bssCOMRAM
   832  000075                     __pbssCOMRAM:
   833                           	opt callstack 0
   834  000075                     _flags:
   835                           	opt callstack 0
   836  000075                     	ds	2
   837  000077                     _millisecondsMeasured:
   838                           	opt callstack 0
   839  000077                     	ds	2
   840                           
   841                           	psect	dataCOMRAM
   842  000079                     __pdataCOMRAM:
   843                           	opt callstack 0
   844  000079                     _motorBDirection:
   845                           	opt callstack 0
   846  000079                     	ds	1
   847                           
   848                           	psect	bssBANK0
   849  0000D6                     __pbssBANK0:
   850                           	opt callstack 0
   851  0000D6                     	ds	4
   852  0000DA                     _nout:
   853                           	opt callstack 0
   854  0000DA                     	ds	2
   855  0000DC                     _width:
   856                           	opt callstack 0
   857  0000DC                     	ds	2
   858  0000DE                     _prec:
   859                           	opt callstack 0
   860  0000DE                     	ds	2
   861  0000E0                     _motorBDistance:
   862                           	opt callstack 0
   863  0000E0                     	ds	2
   864  0000E2                     _motorADistance:
   865                           	opt callstack 0
   866  0000E2                     	ds	2
   867  0000E4                     _encoderAInterruptLast:
   868                           	opt callstack 0
   869  0000E4                     	ds	1
   870  0000E5                     _encoderBInterruptLast:
   871                           	opt callstack 0
   872  0000E5                     	ds	1
   873  0000E6                     _bottomBreakBeamTriggeredChange:
   874                           	opt callstack 0
   875  0000E6                     	ds	1
   876  0000E7                     _topBreakBeamTriggeredChange:
   877                           	opt callstack 0
   878  0000E7                     	ds	1
   879  0000E8                     _keyPressed:
   880                           	opt callstack 0
   881  0000E8                     	ds	1
   882                           
   883                           	psect	dataBANK0
   884  0000E9                     __pdataBANK0:
   885                           	opt callstack 0
   886  0000E9                     stoa@F1144:
   887                           	opt callstack 0
   888  0000E9                     	ds	7
   889  0000F0                     _motorADirection:
   890                           	opt callstack 0
   891  0000F0                     	ds	1
   892                           
   893                           	psect	bssBANK1
   894  000100                     __pbssBANK1:
   895                           	opt callstack 0
   896  000100                     _dbuf:
   897                           	opt callstack 0
   898  000100                     	ds	32
   899                           
   900                           	psect	bssBIGRAM
   901  000130                     __pbssBIGRAM:
   902                           	opt callstack 0
   903  000130                     _logs:
   904                           	opt callstack 0
   905  000130                     	ds	330
   906                           
   907                           	psect	cstackBANK1
   908  000120                     __pcstackBANK1:
   909                           	opt callstack 0
   910  000120                     main@time:
   911                           	opt callstack 0
   912                           
   913                           ; 7 bytes @ 0x0
   914  000120                     	ds	7
   915  000127                     main@tick:
   916                           	opt callstack 0
   917                           
   918                           ; 4 bytes @ 0x7
   919  000127                     	ds	4
   920  00012B                     main@keypress:
   921                           	opt callstack 0
   922                           
   923                           ; 1 bytes @ 0xB
   924  00012B                     	ds	1
   925  00012C                     main@i:
   926                           	opt callstack 0
   927                           
   928                           ; 1 bytes @ 0xC
   929  00012C                     	ds	1
   930  00012D                     main@currentLogState:
   931                           	opt callstack 0
   932                           
   933                           ; 1 bytes @ 0xD
   934  00012D                     	ds	1
   935  00012E                     main@currentRobotState:
   936                           	opt callstack 0
   937                           
   938                           ; 1 bytes @ 0xE
   939  00012E                     	ds	1
   940  00012F                     main@keyValue:
   941                           	opt callstack 0
   942                           
   943                           ; 1 bytes @ 0xF
   944  00012F                     	ds	1
   945                           
   946                           	psect	cstackBANK0
   947  000080                     __pcstackBANK0:
   948                           	opt callstack 0
   949  000080                     ?_printf:
   950                           	opt callstack 0
   951  000080                     printf@fmt:
   952                           	opt callstack 0
   953  000080                     _setMotorSpeeds$2196:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x0
   957  000080                     	ds	4
   958  000084                     _setMotorSpeeds$2197:
   959                           	opt callstack 0
   960                           
   961                           ; 4 bytes @ 0x4
   962  000084                     	ds	4
   963  000088                     ?_tirePositioning:
   964                           	opt callstack 0
   965  000088                     tirePositioning@maxOperationTime:
   966                           	opt callstack 0
   967  000088                     errorCorrectedMove@goalSpeed:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x8
   971  000088                     	ds	2
   972  00008A                     tirePositioning@startDistanceTop:
   973                           	opt callstack 0
   974  00008A                     errorCorrectedMove@turnRatio:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0xA
   978  00008A                     	ds	2
   979  00008C                     tirePositioning@startDistanceBottom:
   980                           	opt callstack 0
   981  00008C                     printf@ap:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0xC
   985  00008C                     	ds	2
   986  00008E                     doDisplayLog@logNumber:
   987                           	opt callstack 0
   988  00008E                     tirePositioning@startDistance:
   989                           	opt callstack 0
   990  00008E                     errorCorrectedMove@motorAStartDistance:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0xE
   994  00008E                     	ds	2
   995  000090                     ??_doDisplayLog:
   996  000090                     tirePositioning@topPreviousState:
   997                           	opt callstack 0
   998  000090                     errorCorrectedMove@motorBStartDistance:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x10
  1002  000090                     	ds	2
  1003  000092                     tirePositioning@bottomPreviousState:
  1004                           	opt callstack 0
  1005  000092                     errorCorrectedMove@correctionConstant:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x12
  1009  000092                     	ds	2
  1010  000094                     doDisplayLog@keypress:
  1011                           	opt callstack 0
  1012  000094                     tirePositioning@distanceRecordedTop:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x14
  1016  000094                     	ds	1
  1017  000095                     doDisplayLog@currentDisplayState:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x15
  1021  000095                     	ds	1
  1022  000096                     ??_errorCorrectedMove:
  1023  000096                     doDisplayLog@keyValue:
  1024                           	opt callstack 0
  1025  000096                     tirePositioning@distanceRecordedBottom:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x16
  1029  000096                     	ds	1
  1030  000097                     doDisplayLog@currentPole:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x17
  1034  000097                     	ds	1
  1035  000098                     tirePositioning@topBreakbeam:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x18
  1039  000098                     	ds	1
  1040  000099                     _doDisplayLog$2194:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x19
  1044  000099                     	ds	1
  1045  00009A                     tirePositioning@bottomBreakbeam:
  1046                           	opt callstack 0
  1047  00009A                     errorCorrectedMove@error:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x1A
  1051  00009A                     	ds	2
  1052  00009C                     errorCorrectedMove@ASpeed:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x1C
  1056  00009C                     	ds	2
  1057  00009E                     errorCorrectedMove@BSpeed:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x1E
  1061  00009E                     	ds	2
  1062  0000A0                     ??_doOperation:
  1063                           
  1064                           ; 1 bytes @ 0x20
  1065  0000A0                     	ds	3
  1066  0000A3                     doOperation@PIDData:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x23
  1070  0000A3                     	ds	20
  1071  0000B7                     doOperation@send:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x37
  1075  0000B7                     	ds	1
  1076  0000B8                     doOperation@badCount:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x38
  1080  0000B8                     	ds	2
  1081  0000BA                     doOperation@badCountBot:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x3A
  1085  0000BA                     	ds	2
  1086  0000BC                     doOperation@motorAStartDistance:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x3C
  1090  0000BC                     	ds	2
  1091  0000BE                     doOperation@motorBStartDistance:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x3E
  1095  0000BE                     	ds	2
  1096  0000C0                     doOperation@tiresOnPole:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x40
  1100  0000C0                     	ds	2
  1101  0000C2                     doOperation@timeStart:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x42
  1105  0000C2                     	ds	2
  1106  0000C4                     doOperation@isDoneDrop:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x44
  1110  0000C4                     	ds	1
  1111  0000C5                     doOperation@counted:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x45
  1115  0000C5                     	ds	2
  1116  0000C7                     doOperation@millisecondsMeasuredOld:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x47
  1120  0000C7                     	ds	2
  1121  0000C9                     doOperation@tiresToDrop:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x49
  1125  0000C9                     	ds	2
  1126  0000CB                     doOperation@topLaserStatePrev:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x4B
  1130  0000CB                     	ds	1
  1131  0000CC                     doOperation@bottomLaserStatePrev:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x4C
  1135  0000CC                     	ds	1
  1136  0000CD                     doOperation@timeInOperation:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x4D
  1140  0000CD                     	ds	2
  1141  0000CF                     doOperation@i:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x4F
  1145  0000CF                     	ds	2
  1146  0000D1                     doOperation@currentOperationState:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x51
  1150  0000D1                     	ds	1
  1151  0000D2                     doOperation@bottomLaserState:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x52
  1155  0000D2                     	ds	1
  1156  0000D3                     doOperation@topLaserState:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x53
  1160  0000D3                     	ds	1
  1161  0000D4                     ??_main:
  1162                           
  1163                           ; 1 bytes @ 0x54
  1164  0000D4                     	ds	2
  1165                           
  1166                           	psect	cstackCOMRAM
  1167  000001                     __pcstackCOMRAM:
  1168                           	opt callstack 0
  1169  000001                     ??_updateMotorBEncoder:
  1170  000001                     ??_updateMotorAEncoder:
  1171  000001                     
  1172                           ; 1 bytes @ 0x0
  1173  000001                     	ds	1
  1174  000002                     updateMotorBEncoder@interruptPinState:
  1175                           	opt callstack 0
  1176  000002                     updateMotorAEncoder@interruptPinState:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x1
  1180  000002                     	ds	2
  1181  000004                     updateMotorBEncoder@directionPin:
  1182                           	opt callstack 0
  1183  000004                     updateMotorAEncoder@directionPin:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x3
  1187  000004                     	ds	2
  1188  000006                     ??_I2C_Master_Wait:
  1189  000006                     ?_strlen:
  1190                           	opt callstack 0
  1191  000006                     ?_isupper:
  1192                           	opt callstack 0
  1193  000006                     ?_isalpha:
  1194                           	opt callstack 0
  1195  000006                     ?_isdigit:
  1196                           	opt callstack 0
  1197  000006                     ?_isspace:
  1198                           	opt callstack 0
  1199  000006                     ?_islower:
  1200                           	opt callstack 0
  1201  000006                     ?___wmul:
  1202                           	opt callstack 0
  1203  000006                     ?___awdiv:
  1204                           	opt callstack 0
  1205  000006                     ?___awmod:
  1206                           	opt callstack 0
  1207  000006                     ?___lldiv:
  1208                           	opt callstack 0
  1209  000006                     ?___llmod:
  1210                           	opt callstack 0
  1211  000006                     ?___xxtofl:
  1212                           	opt callstack 0
  1213  000006                     ?___aodiv:
  1214                           	opt callstack 0
  1215  000006                     ?___aomod:
  1216                           	opt callstack 0
  1217  000006                     pulse_e@interruptState:
  1218                           	opt callstack 0
  1219  000006                     opDelay@millis:
  1220                           	opt callstack 0
  1221  000006                     replaceOldLog@i:
  1222                           	opt callstack 0
  1223  000006                     ___wmul@multiplier:
  1224                           	opt callstack 0
  1225  000006                     ___awdiv@dividend:
  1226                           	opt callstack 0
  1227  000006                     ___awmod@dividend:
  1228                           	opt callstack 0
  1229  000006                     isalpha@c:
  1230                           	opt callstack 0
  1231  000006                     isdigit@c:
  1232                           	opt callstack 0
  1233  000006                     isspace@c:
  1234                           	opt callstack 0
  1235  000006                     isupper@c:
  1236                           	opt callstack 0
  1237  000006                     strlen@s:
  1238                           	opt callstack 0
  1239  000006                     islower@c:
  1240                           	opt callstack 0
  1241  000006                     ___lldiv@dividend:
  1242                           	opt callstack 0
  1243  000006                     ___flge@ff1:
  1244                           	opt callstack 0
  1245  000006                     ___llmod@dividend:
  1246                           	opt callstack 0
  1247  000006                     ___xxtofl@val:
  1248                           	opt callstack 0
  1249  000006                     ___aodiv@dividend:
  1250                           	opt callstack 0
  1251  000006                     ___aomod@dividend:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 8 bytes @ 0x5
  1255  000006                     	ds	1
  1256  000007                     send_nibble@data:
  1257                           	opt callstack 0
  1258  000007                     I2C_Master_Read@ackBit:
  1259                           	opt callstack 0
  1260  000007                     I2C_Master_Write@byteToWrite:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x6
  1264  000007                     	ds	1
  1265  000008                     ??_isupper:
  1266  000008                     ??_isalpha:
  1267  000008                     ??_isdigit:
  1268  000008                     ??_isspace:
  1269  000008                     ??_islower:
  1270  000008                     send_byte@data:
  1271                           	opt callstack 0
  1272  000008                     I2C_Master_Read@receivedByte:
  1273                           	opt callstack 0
  1274  000008                     opDelay@maxOperationTime:
  1275                           	opt callstack 0
  1276  000008                     ___wmul@multiplicand:
  1277                           	opt callstack 0
  1278  000008                     ___awdiv@divisor:
  1279                           	opt callstack 0
  1280  000008                     ___awmod@divisor:
  1281                           	opt callstack 0
  1282  000008                     strlen@a:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x7
  1286  000008                     	ds	1
  1287  000009                     requestIsTireDropDone@data:
  1288                           	opt callstack 0
  1289  000009                     lcdInst@data:
  1290                           	opt callstack 0
  1291  000009                     putch@data:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 1 bytes @ 0x8
  1295  000009                     	ds	1
  1296  00000A                     ??_initLCD:
  1297  00000A                     ??_opDelay:
  1298  00000A                     ??___xxtofl:
  1299  00000A                     ___awdiv@counter:
  1300                           	opt callstack 0
  1301  00000A                     ___awmod@counter:
  1302                           	opt callstack 0
  1303  00000A                     ___wmul@product:
  1304                           	opt callstack 0
  1305  00000A                     fputc@c:
  1306                           	opt callstack 0
  1307  00000A                     ___lldiv@divisor:
  1308                           	opt callstack 0
  1309  00000A                     ___flge@ff2:
  1310                           	opt callstack 0
  1311  00000A                     ___llmod@divisor:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x9
  1315  00000A                     	ds	1
  1316  00000B                     ___awdiv@sign:
  1317                           	opt callstack 0
  1318  00000B                     ___awmod@sign:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 1 bytes @ 0xA
  1322  00000B                     	ds	1
  1323  00000C                     ?_toupper:
  1324                           	opt callstack 0
  1325  00000C                     _isspace$1834:
  1326                           	opt callstack 0
  1327  00000C                     ___awdiv@quotient:
  1328                           	opt callstack 0
  1329  00000C                     fputc@fp:
  1330                           	opt callstack 0
  1331  00000C                     toupper@c:
  1332                           	opt callstack 0
  1333                           
  1334                           ; 2 bytes @ 0xB
  1335  00000C                     	ds	1
  1336  00000D                     ?_atoi:
  1337                           	opt callstack 0
  1338  00000D                     opDelay@startTime:
  1339                           	opt callstack 0
  1340  00000D                     atoi@s:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0xC
  1344  00000D                     	ds	1
  1345  00000E                     ??_fputc:
  1346  00000E                     ??_toupper:
  1347  00000E                     ??___flge:
  1348  00000E                     ___llmod@counter:
  1349                           	opt callstack 0
  1350  00000E                     ___xxtofl@sign:
  1351                           	opt callstack 0
  1352  00000E                     ___lldiv@quotient:
  1353                           	opt callstack 0
  1354  00000E                     ___aodiv@divisor:
  1355                           	opt callstack 0
  1356  00000E                     ___aomod@divisor:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 8 bytes @ 0xD
  1360  00000E                     	ds	1
  1361  00000F                     ??_atoi:
  1362  00000F                     ___xxtofl@exp:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 1 bytes @ 0xE
  1366  00000F                     	ds	1
  1367  000010                     ___xxtofl@arg:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 4 bytes @ 0xF
  1371  000010                     	ds	2
  1372  000012                     ___lldiv@counter:
  1373                           	opt callstack 0
  1374  000012                     _toupper$1898:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x11
  1378  000012                     	ds	1
  1379  000013                     ?_stoa:
  1380                           	opt callstack 0
  1381  000013                     stoa@fp:
  1382                           	opt callstack 0
  1383  000013                     atoi@neg:
  1384                           	opt callstack 0
  1385  000013                     fputs@s:
  1386                           	opt callstack 0
  1387  000013                     I2C_Master_Init@clockFreq:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x12
  1391  000013                     	ds	1
  1392  000014                     ?___flmul:
  1393                           	opt callstack 0
  1394  000014                     ___flmul@b:
  1395                           	opt callstack 0
  1396                           
  1397                           ; 4 bytes @ 0x13
  1398  000014                     	ds	1
  1399  000015                     stoa@s:
  1400                           	opt callstack 0
  1401  000015                     _atoi$1807:
  1402                           	opt callstack 0
  1403  000015                     fputs@fp:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x14
  1407  000015                     	ds	1
  1408  000016                     ___aodiv@counter:
  1409                           	opt callstack 0
  1410  000016                     ___aomod@counter:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x15
  1414  000016                     	ds	1
  1415  000017                     ??_I2C_Master_Init:
  1416  000017                     ??_stoa:
  1417  000017                     ___aodiv@sign:
  1418                           	opt callstack 0
  1419  000017                     ___aomod@sign:
  1420                           	opt callstack 0
  1421  000017                     fputs@c:
  1422                           	opt callstack 0
  1423  000017                     _atoi$1809:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x16
  1427  000017                     	ds	1
  1428  000018                     ?_abs:
  1429                           	opt callstack 0
  1430  000018                     abs@a:
  1431                           	opt callstack 0
  1432  000018                     fputs@i:
  1433                           	opt callstack 0
  1434  000018                     ___flmul@a:
  1435                           	opt callstack 0
  1436  000018                     stoa@nuls:
  1437                           	opt callstack 0
  1438  000018                     ___aodiv@quotient:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 8 bytes @ 0x17
  1442  000018                     	ds	1
  1443  000019                     _atoi$1808:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x18
  1447  000019                     	ds	1
  1448  00001A                     ??_abs:
  1449  00001A                     ?_pad:
  1450                           	opt callstack 0
  1451  00001A                     pad@fp:
  1452                           	opt callstack 0
  1453  00001A                     atoi@n:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x19
  1457  00001A                     	ds	1
  1458  00001B                     
  1459                           ; 1 bytes @ 0x1A
  1460  00001B                     	ds	1
  1461  00001C                     ??___flmul:
  1462  00001C                     pad@buf:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x1B
  1466  00001C                     	ds	2
  1467  00001E                     pad@p:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x1D
  1471  00001E                     	ds	1
  1472  00001F                     stoa@i:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x1E
  1476  00001F                     	ds	1
  1477  000020                     ??_pad:
  1478  000020                     ___flmul@sign:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x1F
  1482  000020                     	ds	1
  1483  000021                     ___flmul@aexp:
  1484                           	opt callstack 0
  1485  000021                     pad@i:
  1486                           	opt callstack 0
  1487  000021                     stoa@w:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x20
  1491  000021                     	ds	1
  1492  000022                     ___flmul@grs:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x21
  1496  000022                     	ds	1
  1497  000023                     pad@w:
  1498                           	opt callstack 0
  1499  000023                     stoa@cp:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x22
  1503  000023                     	ds	2
  1504  000025                     ?_ctoa:
  1505                           	opt callstack 0
  1506  000025                     ?_dtoa:
  1507                           	opt callstack 0
  1508  000025                     ?_xtoa:
  1509                           	opt callstack 0
  1510  000025                     ctoa@fp:
  1511                           	opt callstack 0
  1512  000025                     dtoa@fp:
  1513                           	opt callstack 0
  1514  000025                     stoa@p:
  1515                           	opt callstack 0
  1516  000025                     xtoa@fp:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x24
  1520  000025                     	ds	1
  1521  000026                     ___flmul@bexp:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x25
  1525  000026                     	ds	1
  1526  000027                     ctoa@c:
  1527                           	opt callstack 0
  1528  000027                     stoa@l:
  1529                           	opt callstack 0
  1530  000027                     ___flmul@prod:
  1531                           	opt callstack 0
  1532  000027                     dtoa@d:
  1533                           	opt callstack 0
  1534  000027                     xtoa@d:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 8 bytes @ 0x26
  1538  000027                     	ds	1
  1539  000028                     ctoa@w:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x27
  1543  000028                     	ds	3
  1544  00002B                     ___flmul@temp:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x2A
  1548  00002B                     	ds	2
  1549  00002D                     ?___fladd:
  1550                           	opt callstack 0
  1551  00002D                     ?___fldiv:
  1552                           	opt callstack 0
  1553  00002D                     ___fladd@b:
  1554                           	opt callstack 0
  1555  00002D                     ___fldiv@b:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 4 bytes @ 0x2C
  1559  00002D                     	ds	2
  1560  00002F                     ??_dtoa:
  1561  00002F                     xtoa@x:
  1562                           	opt callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x2E
  1565  00002F                     	ds	1
  1566  000030                     ??_xtoa:
  1567                           
  1568                           ; 1 bytes @ 0x2F
  1569  000030                     	ds	1
  1570  000031                     ___fladd@a:
  1571                           	opt callstack 0
  1572  000031                     ___fldiv@a:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x30
  1576  000031                     	ds	4
  1577  000035                     ??___fladd:
  1578  000035                     ??___fldiv:
  1579                           
  1580                           ; 1 bytes @ 0x34
  1581  000035                     	ds	2
  1582  000037                     _dtoa$1311:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x36
  1586  000037                     	ds	1
  1587  000038                     _xtoa$1332:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x37
  1591  000038                     	ds	1
  1592  000039                     ___fladd@signs:
  1593                           	opt callstack 0
  1594  000039                     dtoa@p:
  1595                           	opt callstack 0
  1596  000039                     ___fldiv@rem:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x38
  1600  000039                     	ds	1
  1601  00003A                     ___fladd@aexp:
  1602                           	opt callstack 0
  1603  00003A                     _xtoa$1333:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x39
  1607  00003A                     	ds	1
  1608  00003B                     ___fladd@bexp:
  1609                           	opt callstack 0
  1610  00003B                     dtoa@w:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x3A
  1614  00003B                     	ds	1
  1615  00003C                     ___fladd@grs:
  1616                           	opt callstack 0
  1617  00003C                     xtoa@p:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x3B
  1621  00003C                     	ds	1
  1622  00003D                     ___fldiv@sign:
  1623                           	opt callstack 0
  1624  00003D                     dtoa@s:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x3C
  1628  00003D                     	ds	1
  1629  00003E                     xtoa@w:
  1630                           	opt callstack 0
  1631  00003E                     ___fldiv@new_exp:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x3D
  1635  00003E                     	ds	1
  1636  00003F                     dtoa@n:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 8 bytes @ 0x3E
  1640  00003F                     	ds	1
  1641  000040                     ___fldiv@grs:
  1642                           	opt callstack 0
  1643  000040                     xtoa@n:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 8 bytes @ 0x3F
  1647  000040                     	ds	4
  1648  000044                     ___fldiv@bexp:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 1 bytes @ 0x43
  1652  000044                     	ds	1
  1653  000045                     ___fldiv@aexp:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x44
  1657  000045                     	ds	1
  1658  000046                     ?___flsub:
  1659                           	opt callstack 0
  1660  000046                     ___flsub@b:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 4 bytes @ 0x45
  1664  000046                     	ds	1
  1665  000047                     dtoa@i:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x46
  1669  000047                     	ds	1
  1670  000048                     xtoa@i:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x47
  1674  000048                     	ds	2
  1675  00004A                     xtoa@c:
  1676                           	opt callstack 0
  1677  00004A                     ___flsub@a:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 4 bytes @ 0x49
  1681  00004A                     	ds	2
  1682  00004C                     ?_vfpfcnvrt:
  1683                           	opt callstack 0
  1684  00004C                     vfpfcnvrt@fp:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x4B
  1688  00004C                     	ds	2
  1689  00004E                     ?___fltol:
  1690                           	opt callstack 0
  1691  00004E                     vfpfcnvrt@fmt:
  1692                           	opt callstack 0
  1693  00004E                     ___fltol@f1:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x4D
  1697  00004E                     	ds	2
  1698  000050                     vfpfcnvrt@ap:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x4F
  1702  000050                     	ds	2
  1703  000052                     ??_vfpfcnvrt:
  1704  000052                     ??___fltol:
  1705                           
  1706                           ; 1 bytes @ 0x51
  1707  000052                     	ds	4
  1708  000056                     ___fltol@sign1:
  1709                           	opt callstack 0
  1710  000056                     vfpfcnvrt@ll:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 8 bytes @ 0x55
  1714  000056                     	ds	1
  1715  000057                     ___fltol@exp1:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 1 bytes @ 0x56
  1719  000057                     	ds	1
  1720  000058                     set_pwm_duty_cycle@dutyA:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x57
  1724  000058                     	ds	4
  1725  00005C                     set_pwm_duty_cycle@dutyB:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 4 bytes @ 0x5B
  1729  00005C                     	ds	2
  1730  00005E                     vfpfcnvrt@llu:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 8 bytes @ 0x5D
  1734  00005E                     	ds	2
  1735  000060                     ??_set_pwm_duty_cycle:
  1736                           
  1737                           ; 1 bytes @ 0x5F
  1738  000060                     	ds	2
  1739  000062                     set_pwm_duty_cycle@max_duty_val:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x61
  1743  000062                     	ds	2
  1744  000064                     set_pwm_duty_cycle@duty_valA:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x63
  1748  000064                     	ds	2
  1749  000066                     set_pwm_duty_cycle@duty_valB:
  1750                           	opt callstack 0
  1751  000066                     vfpfcnvrt@cp:
  1752                           	opt callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x65
  1755  000066                     	ds	2
  1756  000068                     vfpfcnvrt@done:
  1757                           	opt callstack 0
  1758  000068                     _set_pwm_duty_cycle$2195:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 4 bytes @ 0x67
  1762  000068                     	ds	2
  1763  00006A                     _vfpfcnvrt$1347:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x69
  1767  00006A                     	ds	2
  1768  00006C                     vfpfcnvrt@c:
  1769                           	opt callstack 0
  1770  00006C                     setMotorSpeeds@motorASpeed:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x6B
  1774  00006C                     	ds	1
  1775  00006D                     ?_vfprintf:
  1776                           	opt callstack 0
  1777  00006D                     vfprintf@fp:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x6C
  1781  00006D                     	ds	1
  1782  00006E                     setMotorSpeeds@Aforward:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x6D
  1786  00006E                     	ds	1
  1787  00006F                     setMotorSpeeds@Bforward:
  1788                           	opt callstack 0
  1789  00006F                     vfprintf@fmt:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x6E
  1793  00006F                     	ds	1
  1794  000070                     setMotorSpeeds@motorBSpeed:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 2 bytes @ 0x6F
  1798  000070                     	ds	1
  1799  000071                     vfprintf@ap:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x70
  1803  000071                     	ds	1
  1804  000072                     ??_tirePositioning:
  1805                           
  1806                           ; 1 bytes @ 0x71
  1807  000072                     	ds	1
  1808  000073                     vfprintf@cfmt:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x72
  1812  000073                     	ds	2
  1813  000075                     
  1814                           ; 1 bytes @ 0x74
  1815 ;;
  1816 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1817 ;;
  1818 ;; *************** function _main *****************
  1819 ;; Defined at:
  1820 ;;		line 932 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  i               1   12[BANK1 ] unsigned char 
  1825 ;;  keyValue        1   15[BANK1 ] unsigned char 
  1826 ;;  keypress        1   11[BANK1 ] unsigned char 
  1827 ;;  time            7    0[BANK1 ] unsigned char [7]
  1828 ;;  tick            4    7[BANK1 ] unsigned long 
  1829 ;;  currentRobot    1   14[BANK1 ] enum E3391
  1830 ;;  currentLogSt    1   13[BANK1 ] enum E3398
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;Total ram usage:       18 bytes
  1845 ;; Hardware stack levels required when called:   14
  1846 ;; This function calls:
  1847 ;;		_I2C_Master_Read
  1848 ;;		_I2C_Master_Start
  1849 ;;		_I2C_Master_Stop
  1850 ;;		_I2C_Master_Write
  1851 ;;		___llmod
  1852 ;;		_doDisplayLog
  1853 ;;		_doOperation
  1854 ;;		_lcdInst
  1855 ;;		_printf
  1856 ;;		_replaceOldLog
  1857 ;;		_robotInit
  1858 ;; This function is called by:
  1859 ;;		Startup code after reset
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text0
  1864  00048C                     __ptext0:
  1865                           	opt callstack 0
  1866  00048C                     _main:
  1867                           	opt callstack 17
  1868                           
  1869                           ;main.c: 933:     robotInit();
  1870                           
  1871                           ;incstack = 0
  1872  00048C  ECBB  F019         	call	_robotInit	;wreg free
  1873                           
  1874                           ;main.c: 936:     unsigned char time[7];;main.c: 943:     enum robotStates currentRobotS
      +                          tate = standby;
  1875  000490  0E00               	movlw	0
  1876  000492  0101               	movlb	1	; () banked
  1877  000494  6F2E               	movwf	main@currentRobotState& (0+255),b
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;main.c: 945:     enum logStates currentLogState = one;
  1881  000496  0E01               	movlw	1
  1882  000498  6F2D               	movwf	main@currentLogState& (0+255),b
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 947:     unsigned long tick = 0;
  1886  00049A  0E00               	movlw	0
  1887  00049C  6F27               	movwf	main@tick& (0+255),b
  1888  00049E  0E00               	movlw	0
  1889  0004A0  6F28               	movwf	(main@tick+1)& (0+255),b
  1890  0004A2  0E00               	movlw	0
  1891  0004A4  6F29               	movwf	(main@tick+2)& (0+255),b
  1892  0004A6  0E00               	movlw	0
  1893  0004A8  6F2A               	movwf	(main@tick+3)& (0+255),b
  1894  0004AA                     l8458:
  1895                           
  1896                           ;main.c: 950:             if (tick%10==0){
  1897  0004AA  C127  F006         	movff	main@tick,___llmod@dividend
  1898  0004AE  C128  F007         	movff	main@tick+1,___llmod@dividend+1
  1899  0004B2  C129  F008         	movff	main@tick+2,___llmod@dividend+2
  1900  0004B6  C12A  F009         	movff	main@tick+3,___llmod@dividend+3
  1901  0004BA  0E0A               	movlw	10
  1902  0004BC  6E0A               	movwf	___llmod@divisor,c
  1903  0004BE  0E00               	movlw	0
  1904  0004C0  6E0B               	movwf	___llmod@divisor+1,c
  1905  0004C2  0E00               	movlw	0
  1906  0004C4  6E0C               	movwf	___llmod@divisor+2,c
  1907  0004C6  0E00               	movlw	0
  1908  0004C8  6E0D               	movwf	___llmod@divisor+3,c
  1909  0004CA  EC33  F018         	call	___llmod	;wreg free
  1910  0004CE  5006               	movf	?___llmod,w,c
  1911  0004D0  1007               	iorwf	?___llmod+1,w,c
  1912  0004D2  1008               	iorwf	?___llmod+2,w,c
  1913  0004D4  1009               	iorwf	?___llmod+3,w,c
  1914  0004D6  A4D8               	btfss	status,2,c
  1915  0004D8  D152               	goto	l8564
  1916                           
  1917                           ;main.c: 952:                 I2C_Master_Start();
  1918  0004DA  ECA9  F01B         	call	_I2C_Master_Start	;wreg free
  1919                           
  1920                           ;main.c: 953:                 I2C_Master_Write(0b11010000);
  1921  0004DE  0E00               	movlw	0
  1922  0004E0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1923  0004E2  0ED0               	movlw	208
  1924  0004E4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1925  0004E6  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  1926                           
  1927                           ;main.c: 954:                 I2C_Master_Write(0x00);
  1928  0004EA  0E00               	movlw	0
  1929  0004EC  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1930  0004EE  0E00               	movlw	0
  1931  0004F0  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1932  0004F2  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  1933                           
  1934                           ;main.c: 955:                 I2C_Master_Stop();
  1935  0004F6  ECA5  F01B         	call	_I2C_Master_Stop	;wreg free
  1936                           
  1937                           ;main.c: 958:                 I2C_Master_Start();
  1938  0004FA  ECA9  F01B         	call	_I2C_Master_Start	;wreg free
  1939                           
  1940                           ;main.c: 959:                 I2C_Master_Write(0b11010001);
  1941  0004FE  0E00               	movlw	0
  1942  000500  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1943  000502  0ED1               	movlw	209
  1944  000504  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1945  000506  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  1946                           
  1947                           ;main.c: 960:                 for(unsigned char i = 0; i < 6; i++){
  1948  00050A  0E00               	movlw	0
  1949  00050C  0101               	movlb	1	; () banked
  1950  00050E  6F2C               	movwf	main@i& (0+255),b
  1951  000510                     l8468:
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;main.c: 961:                     time[i] = I2C_Master_Read(0);
  1955  000510  0E20               	movlw	low main@time
  1956  000512  252C               	addwf	main@i& (0+255),w,b
  1957  000514  6ED9               	movwf	fsr2l,c
  1958  000516  6ADA               	clrf	fsr2h,c
  1959  000518  0E01               	movlw	high main@time
  1960  00051A  22DA               	addwfc	fsr2h,f,c
  1961  00051C  0E00               	movlw	0
  1962  00051E  EC35  F01B         	call	_I2C_Master_Read
  1963  000522  6EDF               	movwf	indf2,c
  1964                           
  1965                           ;main.c: 962:                 }
  1966  000524  0101               	movlb	1	; () banked
  1967  000526  2B2C               	incf	main@i& (0+255),f,b
  1968                           
  1969                           ; BSR set to: 1
  1970  000528  0E05               	movlw	5
  1971  00052A  652C               	cpfsgt	main@i& (0+255),b
  1972  00052C  D7F1               	goto	l8468
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;main.c: 963:                 time[6] = I2C_Master_Read(1);
  1976  00052E  0E01               	movlw	1
  1977  000530  EC35  F01B         	call	_I2C_Master_Read
  1978  000534  0101               	movlb	1	; () banked
  1979  000536  6F26               	movwf	(main@time+6)& (0+255),b
  1980                           
  1981                           ;main.c: 964:                 I2C_Master_Stop();
  1982  000538  ECA5  F01B         	call	_I2C_Master_Stop	;wreg free
  1983  00053C  D120               	goto	l8564
  1984  00053E                     l8476:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;main.c: 977:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1988  00053E  0E80               	movlw	128
  1989  000540  EC96  F01B         	call	_lcdInst
  1990  000544  0E07               	movlw	7
  1991  000546  0100               	movlb	0	; () banked
  1992  000548  6FD4               	movwf	??_main& (0+255),b
  1993  00054A  0E7D               	movlw	125
  1994  00054C                     u10027:
  1995  00054C  2EE8               	decfsz	wreg,f,c
  1996  00054E  D7FE               	bra	u10027
  1997  000550  2FD4               	decfsz	??_main& (0+255),f,b
  1998  000552  D7FC               	bra	u10027
  1999                           
  2000                           ;main.c: 979:                 printf("%s", "WELCOME ");
  2001  000554  0EE7               	movlw	low (STR_1+4)
  2002  000556  0100               	movlb	0	; () banked
  2003  000558  6F80               	movwf	printf@fmt& (0+255),b
  2004  00055A  0EFF               	movlw	high (STR_1+4)
  2005  00055C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2006  00055E  0EBF               	movlw	low STR_27
  2007  000560  6F82               	movwf	(?_printf+2)& (0+255),b
  2008  000562  0EFF               	movlw	high STR_27
  2009  000564  6F83               	movwf	(?_printf+3)& (0+255),b
  2010  000566  EC0E  F01B         	call	_printf	;wreg free
  2011                           
  2012                           ;main.c: 980:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2013  00056A  0ED3               	movlw	low STR_28
  2014  00056C  0100               	movlb	0	; () banked
  2015  00056E  6F80               	movwf	printf@fmt& (0+255),b
  2016  000570  0EFE               	movlw	high STR_28
  2017  000572  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2018  000574  C126  F082         	movff	main@time+6,?_printf+2
  2019  000578  6B83               	clrf	(?_printf+3)& (0+255),b
  2020  00057A  C125  F084         	movff	main@time+5,?_printf+4
  2021  00057E  6B85               	clrf	(?_printf+5)& (0+255),b
  2022  000580  C124  F086         	movff	main@time+4,?_printf+6
  2023  000584  6B87               	clrf	(?_printf+7)& (0+255),b
  2024  000586  EC0E  F01B         	call	_printf	;wreg free
  2025  00058A  0EC0               	movlw	192
  2026  00058C  EC96  F01B         	call	_lcdInst
  2027                           
  2028                           ;main.c: 982:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2029  000590  0EE2               	movlw	low STR_29
  2030  000592  0100               	movlb	0	; () banked
  2031  000594  6F80               	movwf	printf@fmt& (0+255),b
  2032  000596  0EFE               	movlw	high STR_29
  2033  000598  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2034  00059A  C122  F082         	movff	main@time+2,?_printf+2
  2035  00059E  6B83               	clrf	(?_printf+3)& (0+255),b
  2036  0005A0  C121  F084         	movff	main@time+1,?_printf+4
  2037  0005A4  6B85               	clrf	(?_printf+5)& (0+255),b
  2038  0005A6  C120  F086         	movff	main@time,?_printf+6
  2039  0005AA  6B87               	clrf	(?_printf+7)& (0+255),b
  2040  0005AC  EC0E  F01B         	call	_printf	;wreg free
  2041  0005B0  0E90               	movlw	144
  2042  0005B2  EC96  F01B         	call	_lcdInst
  2043                           
  2044                           ;main.c: 984:                 printf("%s","(1) START");
  2045  0005B6  0EE7               	movlw	low (STR_1+4)
  2046  0005B8  0100               	movlb	0	; () banked
  2047  0005BA  6F80               	movwf	printf@fmt& (0+255),b
  2048  0005BC  0EFF               	movlw	high (STR_1+4)
  2049  0005BE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2050  0005C0  0EAB               	movlw	low STR_31
  2051  0005C2  6F82               	movwf	(?_printf+2)& (0+255),b
  2052  0005C4  0EFF               	movlw	high STR_31
  2053  0005C6  6F83               	movwf	(?_printf+3)& (0+255),b
  2054  0005C8  EC0E  F01B         	call	_printf	;wreg free
  2055  0005CC  0ED0               	movlw	208
  2056  0005CE  EC96  F01B         	call	_lcdInst
  2057                           
  2058                           ;main.c: 986:                 printf("%s","(2) VIEW LOGS");
  2059  0005D2  0EE7               	movlw	low (STR_1+4)
  2060  0005D4  0100               	movlb	0	; () banked
  2061  0005D6  6F80               	movwf	printf@fmt& (0+255),b
  2062  0005D8  0EFF               	movlw	high (STR_1+4)
  2063  0005DA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2064  0005DC  0E1B               	movlw	low STR_33
  2065  0005DE  6F82               	movwf	(?_printf+2)& (0+255),b
  2066  0005E0  0EFF               	movlw	high STR_33
  2067  0005E2  6F83               	movwf	(?_printf+3)& (0+255),b
  2068  0005E4  EC0E  F01B         	call	_printf	;wreg free
  2069                           
  2070                           ;main.c: 987:                 break;
  2071  0005E8  D0E3               	goto	l8566
  2072  0005EA                     l8496:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 990:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  2076  0005EA  0E80               	movlw	128
  2077  0005EC  EC96  F01B         	call	_lcdInst
  2078  0005F0  0E07               	movlw	7
  2079  0005F2  0100               	movlb	0	; () banked
  2080  0005F4  6FD4               	movwf	??_main& (0+255),b
  2081  0005F6  0E7D               	movlw	125
  2082  0005F8                     u10037:
  2083  0005F8  2EE8               	decfsz	wreg,f,c
  2084  0005FA  D7FE               	bra	u10037
  2085  0005FC  2FD4               	decfsz	??_main& (0+255),f,b
  2086  0005FE  D7FC               	bra	u10037
  2087                           
  2088                           ;main.c: 991:                 printf("%s", "OPERATION IN");
  2089  000600  0EE7               	movlw	low (STR_1+4)
  2090  000602  0100               	movlb	0	; () banked
  2091  000604  6F80               	movwf	printf@fmt& (0+255),b
  2092  000606  0EFF               	movlw	high (STR_1+4)
  2093  000608  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2094  00060A  0E51               	movlw	low STR_35
  2095  00060C  6F82               	movwf	(?_printf+2)& (0+255),b
  2096  00060E  0EFF               	movlw	high STR_35
  2097  000610  6F83               	movwf	(?_printf+3)& (0+255),b
  2098  000612  EC0E  F01B         	call	_printf	;wreg free
  2099  000616  0EC0               	movlw	192
  2100  000618  EC96  F01B         	call	_lcdInst
  2101                           
  2102                           ;main.c: 993:                 printf("%s","PROGRESS");
  2103  00061C  0EE7               	movlw	low (STR_1+4)
  2104  00061E  0100               	movlb	0	; () banked
  2105  000620  6F80               	movwf	printf@fmt& (0+255),b
  2106  000622  0EFF               	movlw	high (STR_1+4)
  2107  000624  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2108  000626  0ED1               	movlw	low STR_37
  2109  000628  6F82               	movwf	(?_printf+2)& (0+255),b
  2110  00062A  0EFF               	movlw	high STR_37
  2111  00062C  6F83               	movwf	(?_printf+3)& (0+255),b
  2112  00062E  EC0E  F01B         	call	_printf	;wreg free
  2113                           
  2114                           ;main.c: 994:                 doOperation();
  2115  000632  EC56  F004         	call	_doOperation	;wreg free
  2116                           
  2117                           ;main.c: 995:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2118  000636  0E01               	movlw	1
  2119  000638  EC96  F01B         	call	_lcdInst
  2120  00063C  0E11               	movlw	17
  2121  00063E  0100               	movlb	0	; () banked
  2122  000640  6FD4               	movwf	??_main& (0+255),b
  2123  000642  0E3A               	movlw	58
  2124  000644                     u10047:
  2125  000644  2EE8               	decfsz	wreg,f,c
  2126  000646  D7FE               	bra	u10047
  2127  000648  2FD4               	decfsz	??_main& (0+255),f,b
  2128  00064A  D7FC               	bra	u10047
  2129  00064C  F000               	nop	
  2130                           
  2131                           ;main.c: 996:                 currentRobotState = operationComplete;
  2132  00064E  0E02               	movlw	2
  2133  000650  D093               	goto	L1
  2134  000652                     l8514:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;main.c: 1002:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2138  000652  0E80               	movlw	128
  2139  000654  EC96  F01B         	call	_lcdInst
  2140  000658  0E07               	movlw	7
  2141  00065A  0100               	movlb	0	; () banked
  2142  00065C  6FD4               	movwf	??_main& (0+255),b
  2143  00065E  0E7D               	movlw	125
  2144  000660                     u10057:
  2145  000660  2EE8               	decfsz	wreg,f,c
  2146  000662  D7FE               	bra	u10057
  2147  000664  2FD4               	decfsz	??_main& (0+255),f,b
  2148  000666  D7FC               	bra	u10057
  2149                           
  2150                           ;main.c: 1003:                 printf("%s", "OP. COMPLETE");
  2151  000668  0EE7               	movlw	low (STR_1+4)
  2152  00066A  0100               	movlb	0	; () banked
  2153  00066C  6F80               	movwf	printf@fmt& (0+255),b
  2154  00066E  0EFF               	movlw	high (STR_1+4)
  2155  000670  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2156  000672  0E37               	movlw	low STR_39
  2157  000674  6F82               	movwf	(?_printf+2)& (0+255),b
  2158  000676  0EFF               	movlw	high STR_39
  2159  000678  6F83               	movwf	(?_printf+3)& (0+255),b
  2160  00067A  EC0E  F01B         	call	_printf	;wreg free
  2161  00067E  0EC0               	movlw	192
  2162  000680  EC96  F01B         	call	_lcdInst
  2163                           
  2164                           ;main.c: 1005:                 printf("%s","(1) VIEW LOG");
  2165  000684  0EE7               	movlw	low (STR_1+4)
  2166  000686  0100               	movlb	0	; () banked
  2167  000688  6F80               	movwf	printf@fmt& (0+255),b
  2168  00068A  0EFF               	movlw	high (STR_1+4)
  2169  00068C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2170  00068E  0E44               	movlw	low STR_41
  2171  000690  6F82               	movwf	(?_printf+2)& (0+255),b
  2172  000692  0EFF               	movlw	high STR_41
  2173  000694  6F83               	movwf	(?_printf+3)& (0+255),b
  2174  000696  EC0E  F01B         	call	_printf	;wreg free
  2175  00069A  0E90               	movlw	144
  2176  00069C  EC96  F01B         	call	_lcdInst
  2177                           
  2178                           ;main.c: 1007:                 printf("%s","(2) QUIT DO NOT");
  2179  0006A0  0EE7               	movlw	low (STR_1+4)
  2180  0006A2  0100               	movlb	0	; () banked
  2181  0006A4  6F80               	movwf	printf@fmt& (0+255),b
  2182  0006A6  0EFF               	movlw	high (STR_1+4)
  2183  0006A8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2184  0006AA  0EB4               	movlw	low STR_43
  2185  0006AC  6F82               	movwf	(?_printf+2)& (0+255),b
  2186  0006AE  0EFE               	movlw	high STR_43
  2187  0006B0  6F83               	movwf	(?_printf+3)& (0+255),b
  2188  0006B2  EC0E  F01B         	call	_printf	;wreg free
  2189  0006B6  0ED0               	movlw	208
  2190  0006B8  EC96  F01B         	call	_lcdInst
  2191                           
  2192                           ;main.c: 1009:                 printf("%s","SAVE LOG");
  2193  0006BC  0EE7               	movlw	low (STR_1+4)
  2194  0006BE  0100               	movlb	0	; () banked
  2195  0006C0  6F80               	movwf	printf@fmt& (0+255),b
  2196  0006C2  0EFF               	movlw	high (STR_1+4)
  2197  0006C4  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2198  0006C6  0EC8               	movlw	low STR_45
  2199  0006C8  6F82               	movwf	(?_printf+2)& (0+255),b
  2200  0006CA  0EFF               	movlw	high STR_45
  2201  0006CC  6F83               	movwf	(?_printf+3)& (0+255),b
  2202  0006CE  EC0E  F01B         	call	_printf	;wreg free
  2203                           
  2204                           ;main.c: 1010:                 currentLogState = justRan;
  2205  0006D2  0E00               	movlw	0
  2206  0006D4  0101               	movlb	1	; () banked
  2207  0006D6  6F2D               	movwf	main@currentLogState& (0+255),b
  2208                           
  2209                           ;main.c: 1011:                 break;
  2210  0006D8  D06B               	goto	l8566
  2211  0006DA                     l8534:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;main.c: 1014:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2215  0006DA  0E80               	movlw	128
  2216  0006DC  EC96  F01B         	call	_lcdInst
  2217  0006E0  0E07               	movlw	7
  2218  0006E2  0100               	movlb	0	; () banked
  2219  0006E4  6FD4               	movwf	??_main& (0+255),b
  2220  0006E6  0E7D               	movlw	125
  2221  0006E8                     u10067:
  2222  0006E8  2EE8               	decfsz	wreg,f,c
  2223  0006EA  D7FE               	bra	u10067
  2224  0006EC  2FD4               	decfsz	??_main& (0+255),f,b
  2225  0006EE  D7FC               	bra	u10067
  2226                           
  2227                           ;main.c: 1015:                 printf("%s", "SELECT LOG");
  2228  0006F0  0EE7               	movlw	low (STR_1+4)
  2229  0006F2  0100               	movlb	0	; () banked
  2230  0006F4  6F80               	movwf	printf@fmt& (0+255),b
  2231  0006F6  0EFF               	movlw	high (STR_1+4)
  2232  0006F8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2233  0006FA  0E6B               	movlw	low STR_47
  2234  0006FC  6F82               	movwf	(?_printf+2)& (0+255),b
  2235  0006FE  0EFF               	movlw	high STR_47
  2236  000700  6F83               	movwf	(?_printf+3)& (0+255),b
  2237  000702  EC0E  F01B         	call	_printf	;wreg free
  2238  000706  0EC0               	movlw	192
  2239  000708  EC96  F01B         	call	_lcdInst
  2240                           
  2241                           ;main.c: 1017:                 printf("%s","(1 IS OLDEST)");
  2242  00070C  0EE7               	movlw	low (STR_1+4)
  2243  00070E  0100               	movlb	0	; () banked
  2244  000710  6F80               	movwf	printf@fmt& (0+255),b
  2245  000712  0EFF               	movlw	high (STR_1+4)
  2246  000714  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2247  000716  0EFF               	movlw	low STR_49
  2248  000718  6F82               	movwf	(?_printf+2)& (0+255),b
  2249  00071A  0EFE               	movlw	high STR_49
  2250  00071C  6F83               	movwf	(?_printf+3)& (0+255),b
  2251  00071E  EC0E  F01B         	call	_printf	;wreg free
  2252  000722  0E90               	movlw	144
  2253  000724  EC96  F01B         	call	_lcdInst
  2254                           
  2255                           ;main.c: 1019:                 printf("%s","(1) (2) (3) (4)");
  2256  000728  0EE7               	movlw	low (STR_1+4)
  2257  00072A  0100               	movlb	0	; () banked
  2258  00072C  6F80               	movwf	printf@fmt& (0+255),b
  2259  00072E  0EFF               	movlw	high (STR_1+4)
  2260  000730  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2261  000732  0E94               	movlw	low STR_51
  2262  000734  6F82               	movwf	(?_printf+2)& (0+255),b
  2263  000736  0EFE               	movlw	high STR_51
  2264  000738  6F83               	movwf	(?_printf+3)& (0+255),b
  2265  00073A  EC0E  F01B         	call	_printf	;wreg free
  2266                           
  2267                           ;main.c: 1020:                 break;
  2268  00073E  D038               	goto	l8566
  2269  000740                     l8548:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 1022:                 if (currentLogState == justRan){
  2273  000740  0101               	movlb	1	; () banked
  2274  000742  512D               	movf	main@currentLogState& (0+255),w,b
  2275  000744  A4D8               	btfss	status,2,c
  2276  000746  D005               	goto	l8554
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;main.c: 1023:                     replaceOldLog();
  2280  000748  ECE7  F018         	call	_replaceOldLog	;wreg free
  2281                           
  2282                           ;main.c: 1024:                     currentLogState = four;
  2283  00074C  0E04               	movlw	4
  2284  00074E  0101               	movlb	1	; () banked
  2285  000750  6F2D               	movwf	main@currentLogState& (0+255),b
  2286  000752                     l8554:
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;main.c: 1026:                 doDisplayLog(currentLogState);
  2290  000752  C12D  F08E         	movff	main@currentLogState,doDisplayLog@logNumber
  2291  000756  0100               	movlb	0	; () banked
  2292  000758  6B8F               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2293  00075A  EC58  F006         	call	_doDisplayLog	;wreg free
  2294                           
  2295                           ;main.c: 1027:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2296  00075E  0E01               	movlw	1
  2297  000760  EC96  F01B         	call	_lcdInst
  2298  000764  0E11               	movlw	17
  2299  000766  0100               	movlb	0	; () banked
  2300  000768  6FD4               	movwf	??_main& (0+255),b
  2301  00076A  0E3A               	movlw	58
  2302  00076C                     u10077:
  2303  00076C  2EE8               	decfsz	wreg,f,c
  2304  00076E  D7FE               	bra	u10077
  2305  000770  2FD4               	decfsz	??_main& (0+255),f,b
  2306  000772  D7FC               	bra	u10077
  2307  000774  F000               	nop	
  2308                           
  2309                           ;main.c: 1028:                 currentRobotState = standby;
  2310  000776  0E00               	movlw	0
  2311  000778                     L1:
  2312  000778  0101               	movlb	1	; () banked
  2313  00077A  6F2E               	movwf	main@currentRobotState& (0+255),b
  2314                           
  2315                           ;main.c: 1029:                 break;
  2316  00077C  D019               	goto	l8566
  2317  00077E                     l8564:
  2318  00077E  0101               	movlb	1	; () banked
  2319  000780  512E               	movf	main@currentRobotState& (0+255),w,b
  2320  000782  0100               	movlb	0	; () banked
  2321  000784  6FD4               	movwf	??_main& (0+255),b
  2322  000786  6BD5               	clrf	(??_main+1)& (0+255),b
  2323                           
  2324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2325                           ; Switch size 1, requested type "simple"
  2326                           ; Number of cases is 1, Range of values is 0 to 0
  2327                           ; switch strategies available:
  2328                           ; Name         Instructions Cycles
  2329                           ; simple_byte            4     3 (average)
  2330                           ;	Chosen strategy is simple_byte
  2331  000788  51D5               	movf	(??_main+1)& (0+255),w,b
  2332  00078A  0A00               	xorlw	0	; case 0
  2333  00078C  A4D8               	btfss	status,2,c
  2334  00078E  D010               	goto	l8566
  2335                           
  2336                           ; BSR set to: 0
  2337                           ; Switch size 1, requested type "simple"
  2338                           ; Number of cases is 5, Range of values is 0 to 4
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte           16     9 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343  000790  51D4               	movf	??_main& (0+255),w,b
  2344  000792  0A00               	xorlw	0	; case 0
  2345  000794  B4D8               	btfsc	status,2,c
  2346  000796  D6D3               	goto	l8476
  2347  000798  0A01               	xorlw	1	; case 1
  2348  00079A  B4D8               	btfsc	status,2,c
  2349  00079C  D726               	goto	l8496
  2350  00079E  0A03               	xorlw	3	; case 2
  2351  0007A0  B4D8               	btfsc	status,2,c
  2352  0007A2  D757               	goto	l8514
  2353  0007A4  0A01               	xorlw	1	; case 3
  2354  0007A6  B4D8               	btfsc	status,2,c
  2355  0007A8  D798               	goto	l8534
  2356  0007AA  0A07               	xorlw	7	; case 4
  2357  0007AC  B4D8               	btfsc	status,2,c
  2358  0007AE  D7C8               	goto	l8548
  2359  0007B0                     l8566:
  2360                           
  2361                           ;main.c: 1033:         if(keyPressed){
  2362  0007B0  0100               	movlb	0	; () banked
  2363  0007B2  51E8               	movf	_keyPressed& (0+255),w,b	;volatile
  2364  0007B4  B4D8               	btfsc	status,2,c
  2365  0007B6  D069               	goto	l398
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 1036:             keyPressed = 0;
  2369  0007B8  0E00               	movlw	0
  2370  0007BA  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 1039:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2374  0007BC  3881               	swapf	3969,w,c	;volatile
  2375  0007BE  0B0F               	andlw	15
  2376  0007C0  0B0F               	andlw	15
  2377  0007C2  0101               	movlb	1	; () banked
  2378  0007C4  6F2B               	movwf	main@keypress& (0+255),b
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;main.c: 1040:             char keyValue = keys[keypress];
  2382  0007C6  0E61               	movlw	low _keys
  2383  0007C8  252B               	addwf	main@keypress& (0+255),w,b
  2384  0007CA  6EF6               	movwf	tblptrl,c
  2385  0007CC  6AF7               	clrf	tblptrh,c
  2386  0007CE  0EFE               	movlw	high _keys
  2387  0007D0  22F7               	addwfc	tblptrh,f,c
  2388  0007D2                     	if	0	;There are less than 3 active tblptr bytes
  2389  0007D2                     	endif
  2390  0007D2  0008               	tblrd		*
  2391  0007D4  CFF5 F12F          	movff	tablat,main@keyValue
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;main.c: 1041:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2395  0007D8  0E01               	movlw	1
  2396  0007DA  EC96  F01B         	call	_lcdInst
  2397  0007DE  0E11               	movlw	17
  2398  0007E0  0100               	movlb	0	; () banked
  2399  0007E2  6FD4               	movwf	??_main& (0+255),b
  2400  0007E4  0E3A               	movlw	58
  2401  0007E6                     u10087:
  2402  0007E6  2EE8               	decfsz	wreg,f,c
  2403  0007E8  D7FE               	bra	u10087
  2404  0007EA  2FD4               	decfsz	??_main& (0+255),f,b
  2405  0007EC  D7FC               	bra	u10087
  2406  0007EE  F000               	nop	
  2407                           
  2408                           ;main.c: 1042:             switch (currentRobotState){
  2409  0007F0  D035               	goto	l8614
  2410  0007F2                     l8578:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;main.c: 1044:                     if (keyValue == '1'){
  2414  0007F2  0E31               	movlw	49
  2415  0007F4  0101               	movlb	1	; () banked
  2416  0007F6  192F               	xorwf	main@keyValue& (0+255),w,b
  2417  0007F8  A4D8               	btfss	status,2,c
  2418  0007FA  D002               	goto	l8582
  2419                           
  2420                           ; BSR set to: 1
  2421                           ;main.c: 1045:                         currentRobotState = operation;
  2422  0007FC  0E01               	movlw	1
  2423  0007FE  D012               	goto	L4
  2424  000800                     l8582:
  2425                           
  2426                           ; BSR set to: 1
  2427  000800  0E32               	movlw	50
  2428  000802  192F               	xorwf	main@keyValue& (0+255),w,b
  2429  000804  A4D8               	btfss	status,2,c
  2430  000806  D041               	goto	l398
  2431                           
  2432                           ; BSR set to: 1
  2433                           ;main.c: 1047:                         currentRobotState = selectLog;
  2434  000808  0E03               	movlw	3
  2435  00080A  D00C               	goto	L4
  2436  00080C                     l8586:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;main.c: 1053:                     if (keyValue == '1'){
  2440  00080C  0E31               	movlw	49
  2441  00080E  0101               	movlb	1	; () banked
  2442  000810  192F               	xorwf	main@keyValue& (0+255),w,b
  2443  000812  A4D8               	btfss	status,2,c
  2444  000814  D002               	goto	l8590
  2445  000816                     u9940:
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;main.c: 1054:                         currentRobotState = displayLog;
  2449  000816  0E04               	movlw	4
  2450  000818  D005               	goto	L4
  2451  00081A                     l8590:
  2452                           
  2453                           ; BSR set to: 1
  2454  00081A  0E32               	movlw	50
  2455  00081C  192F               	xorwf	main@keyValue& (0+255),w,b
  2456  00081E  A4D8               	btfss	status,2,c
  2457  000820  D034               	goto	l398
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;main.c: 1056:                         currentRobotState = standby;
  2461  000822  0E00               	movlw	0
  2462  000824                     L4:
  2463  000824  6F2E               	movwf	main@currentRobotState& (0+255),b
  2464  000826  D031               	goto	l398
  2465  000828                     l8594:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 1060:                     if (keyValue == '1'){
  2469  000828  0E31               	movlw	49
  2470  00082A  0101               	movlb	1	; () banked
  2471  00082C  192F               	xorwf	main@keyValue& (0+255),w,b
  2472  00082E  A4D8               	btfss	status,2,c
  2473  000830  D002               	goto	l8598
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;main.c: 1061:                         currentLogState = one;
  2477  000832  0E01               	movlw	1
  2478  000834  D011               	goto	L7
  2479  000836                     l8598:
  2480                           
  2481                           ; BSR set to: 1
  2482  000836  0E32               	movlw	50
  2483  000838  192F               	xorwf	main@keyValue& (0+255),w,b
  2484  00083A  A4D8               	btfss	status,2,c
  2485  00083C  D002               	goto	l8602
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;main.c: 1063:                         currentLogState = two;
  2489  00083E  0E02               	movlw	2
  2490  000840  D00B               	goto	L7
  2491  000842                     l8602:
  2492                           
  2493                           ; BSR set to: 1
  2494  000842  0E33               	movlw	51
  2495  000844  192F               	xorwf	main@keyValue& (0+255),w,b
  2496  000846  A4D8               	btfss	status,2,c
  2497  000848  D002               	goto	l8606
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 1065:                         currentLogState = three;
  2501  00084A  0E03               	movlw	3
  2502  00084C  D005               	goto	L7
  2503  00084E                     l8606:
  2504                           
  2505                           ; BSR set to: 1
  2506  00084E  0E34               	movlw	52
  2507  000850  192F               	xorwf	main@keyValue& (0+255),w,b
  2508  000852  A4D8               	btfss	status,2,c
  2509  000854  D01A               	goto	l398
  2510                           
  2511                           ; BSR set to: 1
  2512                           ;main.c: 1067:                         currentLogState = '4';
  2513  000856  0E34               	movlw	52
  2514  000858                     L7:
  2515  000858  6F2D               	movwf	main@currentLogState& (0+255),b
  2516                           
  2517                           ;main.c: 1068:                     } else {
  2518  00085A  D7DD               	goto	u9940
  2519  00085C                     l8614:
  2520  00085C  0101               	movlb	1	; () banked
  2521  00085E  512E               	movf	main@currentRobotState& (0+255),w,b
  2522  000860  0100               	movlb	0	; () banked
  2523  000862  6FD4               	movwf	??_main& (0+255),b
  2524  000864  6BD5               	clrf	(??_main+1)& (0+255),b
  2525                           
  2526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2527                           ; Switch size 1, requested type "simple"
  2528                           ; Number of cases is 1, Range of values is 0 to 0
  2529                           ; switch strategies available:
  2530                           ; Name         Instructions Cycles
  2531                           ; simple_byte            4     3 (average)
  2532                           ;	Chosen strategy is simple_byte
  2533  000866  51D5               	movf	(??_main+1)& (0+255),w,b
  2534  000868  0A00               	xorlw	0	; case 0
  2535  00086A  A4D8               	btfss	status,2,c
  2536  00086C  D00E               	goto	l398
  2537                           
  2538                           ; BSR set to: 0
  2539                           ; Switch size 1, requested type "simple"
  2540                           ; Number of cases is 5, Range of values is 0 to 4
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte           16     9 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  00086E  51D4               	movf	??_main& (0+255),w,b
  2546  000870  0A00               	xorlw	0	; case 0
  2547  000872  B4D8               	btfsc	status,2,c
  2548  000874  D7BE               	goto	l8578
  2549  000876  0A01               	xorlw	1	; case 1
  2550  000878  B4D8               	btfsc	status,2,c
  2551  00087A  D007               	goto	l398
  2552  00087C  0A03               	xorlw	3	; case 2
  2553  00087E  B4D8               	btfsc	status,2,c
  2554  000880  D7C5               	goto	l8586
  2555  000882  0A01               	xorlw	1	; case 3
  2556  000884  B4D8               	btfsc	status,2,c
  2557  000886  D7D0               	goto	l8594
  2558  000888  0A07               	xorlw	7	; case 4
  2559  00088A                     l398:
  2560                           
  2561                           ;main.c: 1088:         tick++;
  2562                           
  2563                           ; BSR set to: 1
  2564  00088A  0E01               	movlw	1
  2565  00088C  0101               	movlb	1	; () banked
  2566  00088E  2727               	addwf	main@tick& (0+255),f,b
  2567  000890  0E00               	movlw	0
  2568  000892  2328               	addwfc	(main@tick+1)& (0+255),f,b
  2569  000894  2329               	addwfc	(main@tick+2)& (0+255),f,b
  2570  000896  232A               	addwfc	(main@tick+3)& (0+255),f,b
  2571                           
  2572                           ; BSR set to: 1
  2573                           ;main.c: 1089:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2574  000898  0E04               	movlw	4
  2575  00089A  0100               	movlb	0	; () banked
  2576  00089C  6FD4               	movwf	??_main& (0+255),b
  2577  00089E  0E3D               	movlw	61
  2578  0008A0                     u10097:
  2579  0008A0  2EE8               	decfsz	wreg,f,c
  2580  0008A2  D7FE               	bra	u10097
  2581  0008A4  2FD4               	decfsz	??_main& (0+255),f,b
  2582  0008A6  D7FC               	bra	u10097
  2583  0008A8  D000               	nop2	
  2584  0008AA  D5FF               	goto	l8458
  2585  0008AC                     __end_of_main:
  2586                           	opt callstack 0
  2587                           
  2588 ;; *************** function _robotInit *****************
  2589 ;; Defined at:
  2590 ;;		line 879 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    7
  2611 ;; This function calls:
  2612 ;;		_EncoderInit
  2613 ;;		_I2C_Master_Init
  2614 ;;		_initLCD
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;;		_mainEEPROM
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text1
  2622  003376                     __ptext1:
  2623                           	opt callstack 0
  2624  003376                     _robotInit:
  2625                           	opt callstack 23
  2626                           
  2627                           ;main.c: 881:     EncoderInit();
  2628                           
  2629                           ;incstack = 0
  2630  003376  EC67  F01B         	call	_EncoderInit	;wreg free
  2631                           
  2632                           ;main.c: 885:     LATD = 0x00;
  2633  00337A  0E00               	movlw	0
  2634  00337C  6E8C               	movwf	3980,c	;volatile
  2635                           
  2636                           ;main.c: 886:     TRISD = 0x00;
  2637  00337E  0E00               	movlw	0
  2638  003380  6E95               	movwf	3989,c	;volatile
  2639                           
  2640                           ;main.c: 889:     LATB = 0x00;
  2641  003382  0E00               	movlw	0
  2642  003384  6E8A               	movwf	3978,c	;volatile
  2643                           
  2644                           ;main.c: 890:     TRISBbits.TRISB1 = 1;
  2645  003386  8293               	bsf	3987,1,c	;volatile
  2646                           
  2647                           ;main.c: 891:     TRISBbits.TRISB4 = 1;
  2648  003388  8893               	bsf	3987,4,c	;volatile
  2649                           
  2650                           ;main.c: 892:     TRISBbits.TRISB5 = 1;
  2651  00338A  8A93               	bsf	3987,5,c	;volatile
  2652                           
  2653                           ;main.c: 893:     TRISBbits.TRISB6 = 1;
  2654  00338C  8C93               	bsf	3987,6,c	;volatile
  2655                           
  2656                           ;main.c: 894:     TRISBbits.TRISB7 = 1;
  2657  00338E  8E93               	bsf	3987,7,c	;volatile
  2658                           
  2659                           ;main.c: 897:     TRISAbits.TRISA4 = 0;
  2660  003390  9892               	bcf	3986,4,c	;volatile
  2661                           
  2662                           ;main.c: 898:     LATAbits.LATA4 = 0;
  2663  003392  9889               	bcf	3977,4,c	;volatile
  2664                           
  2665                           ;main.c: 901:     I2C_Master_Init(100000);
  2666  003394  0EA0               	movlw	160
  2667  003396  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2668  003398  0E86               	movlw	134
  2669  00339A  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2670  00339C  0E01               	movlw	1
  2671  00339E  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2672  0033A0  0E00               	movlw	0
  2673  0033A2  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2674  0033A4  EC66  F018         	call	_I2C_Master_Init	;wreg free
  2675                           
  2676                           ;main.c: 908:     ADCON1 = 0b00001111;
  2677  0033A8  0E0F               	movlw	15
  2678  0033AA  6EC1               	movwf	4033,c	;volatile
  2679                           
  2680                           ;main.c: 911:     INT1IE = 1;
  2681  0033AC  86F0               	bsf	4080,3,c	;volatile
  2682                           
  2683                           ;main.c: 914:     initLCD();
  2684  0033AE  ECFE  F017         	call	_initLCD	;wreg free
  2685                           
  2686                           ;main.c: 917:     (INTCONbits.GIE = 1);
  2687  0033B2  8EF2               	bsf	4082,7,c	;volatile
  2688  0033B4  0012               	return		;funcret
  2689  0033B6                     __end_of_robotInit:
  2690                           	opt callstack 0
  2691                           
  2692 ;; *************** function _initLCD *****************
  2693 ;; Defined at:
  2694 ;;		line 69 in file "lcd.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    6
  2715 ;; This function calls:
  2716 ;;		_lcdInst
  2717 ;;		_send_byte
  2718 ;;		_send_nibble
  2719 ;; This function is called by:
  2720 ;;		_robotInit
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text2
  2725  002FFC                     __ptext2:
  2726                           	opt callstack 0
  2727  002FFC                     _initLCD:
  2728                           	opt callstack 23
  2729                           
  2730                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2731                           
  2732                           ;incstack = 0
  2733  002FFC  0E31               	movlw	49
  2734  002FFE  6E0A               	movwf	??_initLCD& (0+255),c
  2735  003000  0EB2               	movlw	178
  2736  003002                     u10107:
  2737  003002  2EE8               	decfsz	wreg,f,c
  2738  003004  D7FE               	bra	u10107
  2739  003006  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2740  003008  D7FC               	bra	u10107
  2741  00300A  D000               	nop2	
  2742                           
  2743                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2744  00300C  948C               	bcf	3980,2,c	;volatile
  2745                           
  2746                           ;lcd.c: 74:     send_nibble(0b0011);
  2747  00300E  0E03               	movlw	3
  2748  003010  EC73  F01B         	call	_send_nibble
  2749                           
  2750                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2751  003014  0E11               	movlw	17
  2752  003016  6E0A               	movwf	??_initLCD& (0+255),c
  2753  003018  0E3A               	movlw	58
  2754  00301A                     u10117:
  2755  00301A  2EE8               	decfsz	wreg,f,c
  2756  00301C  D7FE               	bra	u10117
  2757  00301E  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2758  003020  D7FC               	bra	u10117
  2759  003022  D000               	nop2	
  2760                           
  2761                           ;lcd.c: 76:     send_nibble(0b0011);
  2762  003024  0E03               	movlw	3
  2763  003026  EC73  F01B         	call	_send_nibble
  2764                           
  2765                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2766  00302A  0E7D               	movlw	125
  2767  00302C                     u10127:
  2768  00302C  2EE8               	decfsz	wreg,f,c
  2769  00302E  D7FE               	bra	u10127
  2770                           
  2771                           ;lcd.c: 78:     send_byte(0b00110010);
  2772  003030  0E32               	movlw	50
  2773  003032  EC87  F01B         	call	_send_byte
  2774                           
  2775                           ;lcd.c: 80:     send_byte(0b00101000);
  2776  003036  0E28               	movlw	40
  2777  003038  EC87  F01B         	call	_send_byte
  2778                           
  2779                           ;lcd.c: 81:     send_byte(0b00001000);
  2780  00303C  0E08               	movlw	8
  2781  00303E  EC87  F01B         	call	_send_byte
  2782                           
  2783                           ;lcd.c: 82:     send_byte(0b00000001);
  2784  003042  0E01               	movlw	1
  2785  003044  EC87  F01B         	call	_send_byte
  2786                           
  2787                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2788  003048  0E11               	movlw	17
  2789  00304A  6E0A               	movwf	??_initLCD& (0+255),c
  2790  00304C  0E3A               	movlw	58
  2791  00304E                     u10137:
  2792  00304E  2EE8               	decfsz	wreg,f,c
  2793  003050  D7FE               	bra	u10137
  2794  003052  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2795  003054  D7FC               	bra	u10137
  2796  003056  D000               	nop2	
  2797                           
  2798                           ;lcd.c: 84:     send_byte(0b00000110);
  2799  003058  0E06               	movlw	6
  2800  00305A  EC87  F01B         	call	_send_byte
  2801                           
  2802                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2803  00305E  0E0C               	movlw	12
  2804  003060  EC96  F01B         	call	_lcdInst
  2805  003064  0012               	return		;funcret
  2806  003066                     __end_of_initLCD:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _I2C_Master_Init *****************
  2810 ;; Defined at:
  2811 ;;		line 32 in file "I2C.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        8 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    3
  2832 ;; This function calls:
  2833 ;;		___lldiv
  2834 ;; This function is called by:
  2835 ;;		_robotInit
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text3
  2840  0030CC                     __ptext3:
  2841                           	opt callstack 0
  2842  0030CC                     _I2C_Master_Init:
  2843                           	opt callstack 26
  2844                           
  2845                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2846                           
  2847                           ;incstack = 0
  2848  0030CC  9AC6               	bcf	4038,5,c	;volatile
  2849                           
  2850                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2851  0030CE  8694               	bsf	3988,3,c	;volatile
  2852                           
  2853                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2854  0030D0  8894               	bsf	3988,4,c	;volatile
  2855                           
  2856                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2857  0030D2  0E80               	movlw	128
  2858  0030D4  6E06               	movwf	___lldiv@dividend,c
  2859  0030D6  0E96               	movlw	150
  2860  0030D8  6E07               	movwf	___lldiv@dividend+1,c
  2861  0030DA  0E98               	movlw	152
  2862  0030DC  6E08               	movwf	___lldiv@dividend+2,c
  2863  0030DE  0E00               	movlw	0
  2864  0030E0  6E09               	movwf	___lldiv@dividend+3,c
  2865  0030E2  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2866  0030E6  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2867  0030EA  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2868  0030EE  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2869  0030F2  0E02               	movlw	2
  2870  0030F4                     u9485:
  2871  0030F4  90D8               	bcf	status,0,c
  2872  0030F6  3617               	rlcf	??_I2C_Master_Init,f,c
  2873  0030F8  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2874  0030FA  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2875  0030FC  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2876  0030FE  2EE8               	decfsz	wreg,f,c
  2877  003100  D7F9               	goto	u9485
  2878  003102  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2879  003106  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2880  00310A  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2881  00310E  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2882  003112  EC15  F017         	call	___lldiv	;wreg free
  2883  003116  0406               	decf	?___lldiv,w,c
  2884  003118  6EC8               	movwf	4040,c	;volatile
  2885                           
  2886                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2887  00311A  0E80               	movlw	128
  2888  00311C  6EC7               	movwf	4039,c	;volatile
  2889                           
  2890                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2891  00311E  0E28               	movlw	40
  2892  003120  6EC6               	movwf	4038,c	;volatile
  2893                           
  2894                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2895  003122  0E00               	movlw	0
  2896  003124  6EC5               	movwf	4037,c	;volatile
  2897  003126  0012               	return		;funcret
  2898  003128                     __end_of_I2C_Master_Init:
  2899                           	opt callstack 0
  2900                           
  2901 ;; *************** function ___lldiv *****************
  2902 ;; Defined at:
  2903 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  dividend        4    5[COMRAM] unsigned long 
  2906 ;;  divisor         4    9[COMRAM] unsigned long 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  quotient        4   13[COMRAM] unsigned long 
  2909 ;;  counter         1   17[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  4    5[COMRAM] unsigned long 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:       13 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    2
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_I2C_Master_Init
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text4
  2934  002E2A                     __ptext4:
  2935                           	opt callstack 0
  2936  002E2A                     ___lldiv:
  2937                           	opt callstack 26
  2938                           
  2939                           ;incstack = 0
  2940  002E2A  0E00               	movlw	0
  2941  002E2C  6E0E               	movwf	___lldiv@quotient,c
  2942  002E2E  0E00               	movlw	0
  2943  002E30  6E0F               	movwf	___lldiv@quotient+1,c
  2944  002E32  0E00               	movlw	0
  2945  002E34  6E10               	movwf	___lldiv@quotient+2,c
  2946  002E36  0E00               	movlw	0
  2947  002E38  6E11               	movwf	___lldiv@quotient+3,c
  2948  002E3A  500A               	movf	___lldiv@divisor,w,c
  2949  002E3C  100B               	iorwf	___lldiv@divisor+1,w,c
  2950  002E3E  100C               	iorwf	___lldiv@divisor+2,w,c
  2951  002E40  100D               	iorwf	___lldiv@divisor+3,w,c
  2952  002E42  B4D8               	btfsc	status,2,c
  2953  002E44  D02A               	goto	l718
  2954  002E46  0E01               	movlw	1
  2955  002E48  6E12               	movwf	___lldiv@counter,c
  2956  002E4A  D006               	goto	l7700
  2957  002E4C                     l7698:
  2958  002E4C  90D8               	bcf	status,0,c
  2959  002E4E  360A               	rlcf	___lldiv@divisor,f,c
  2960  002E50  360B               	rlcf	___lldiv@divisor+1,f,c
  2961  002E52  360C               	rlcf	___lldiv@divisor+2,f,c
  2962  002E54  360D               	rlcf	___lldiv@divisor+3,f,c
  2963  002E56  2A12               	incf	___lldiv@counter,f,c
  2964  002E58                     l7700:
  2965  002E58  AE0D               	btfss	___lldiv@divisor+3,7,c
  2966  002E5A  D7F8               	goto	l7698
  2967  002E5C                     u9140:
  2968  002E5C  90D8               	bcf	status,0,c
  2969  002E5E  360E               	rlcf	___lldiv@quotient,f,c
  2970  002E60  360F               	rlcf	___lldiv@quotient+1,f,c
  2971  002E62  3610               	rlcf	___lldiv@quotient+2,f,c
  2972  002E64  3611               	rlcf	___lldiv@quotient+3,f,c
  2973  002E66  500A               	movf	___lldiv@divisor,w,c
  2974  002E68  5C06               	subwf	___lldiv@dividend,w,c
  2975  002E6A  500B               	movf	___lldiv@divisor+1,w,c
  2976  002E6C  5807               	subwfb	___lldiv@dividend+1,w,c
  2977  002E6E  500C               	movf	___lldiv@divisor+2,w,c
  2978  002E70  5808               	subwfb	___lldiv@dividend+2,w,c
  2979  002E72  500D               	movf	___lldiv@divisor+3,w,c
  2980  002E74  5809               	subwfb	___lldiv@dividend+3,w,c
  2981  002E76  A0D8               	btfss	status,0,c
  2982  002E78  D009               	goto	l7710
  2983  002E7A  500A               	movf	___lldiv@divisor,w,c
  2984  002E7C  5E06               	subwf	___lldiv@dividend,f,c
  2985  002E7E  500B               	movf	___lldiv@divisor+1,w,c
  2986  002E80  5A07               	subwfb	___lldiv@dividend+1,f,c
  2987  002E82  500C               	movf	___lldiv@divisor+2,w,c
  2988  002E84  5A08               	subwfb	___lldiv@dividend+2,f,c
  2989  002E86  500D               	movf	___lldiv@divisor+3,w,c
  2990  002E88  5A09               	subwfb	___lldiv@dividend+3,f,c
  2991  002E8A  800E               	bsf	___lldiv@quotient,0,c
  2992  002E8C                     l7710:
  2993  002E8C  90D8               	bcf	status,0,c
  2994  002E8E  320D               	rrcf	___lldiv@divisor+3,f,c
  2995  002E90  320C               	rrcf	___lldiv@divisor+2,f,c
  2996  002E92  320B               	rrcf	___lldiv@divisor+1,f,c
  2997  002E94  320A               	rrcf	___lldiv@divisor,f,c
  2998  002E96  2E12               	decfsz	___lldiv@counter,f,c
  2999  002E98  D7E1               	goto	u9140
  3000  002E9A                     l718:
  3001  002E9A  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  3002  002E9E  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  3003  002EA2  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  3004  002EA6  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  3005  002EAA  0012               	return		;funcret
  3006  002EAC                     __end_of___lldiv:
  3007                           	opt callstack 0
  3008                           
  3009 ;; *************** function _EncoderInit *****************
  3010 ;; Defined at:
  3011 ;;		line 187 in file "main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_robotInit
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text5
  3040  0036CE                     __ptext5:
  3041                           	opt callstack 0
  3042  0036CE                     _EncoderInit:
  3043                           	opt callstack 27
  3044                           
  3045                           ;main.c: 188:   motorBDirection = 1;
  3046                           
  3047                           ;incstack = 0
  3048  0036CE  0E01               	movlw	1
  3049  0036D0  6E79               	movwf	_motorBDirection,c	;volatile
  3050                           
  3051                           ;main.c: 189:   motorADirection = 1;
  3052  0036D2  0E01               	movlw	1
  3053  0036D4  0100               	movlb	0	; () banked
  3054  0036D6  6FF0               	movwf	_motorADirection& (0+255),b	;volatile
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;main.c: 192:   TRISCbits.TRISC0 = 1;
  3058  0036D8  8094               	bsf	3988,0,c	;volatile
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;main.c: 193:   TRISEbits.TRISE1 = 1;
  3062  0036DA  8296               	bsf	3990,1,c	;volatile
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;main.c: 194:   TRISBbits.TRISB2 = 1;
  3066  0036DC  8493               	bsf	3987,2,c	;volatile
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;main.c: 195:   TRISBbits.TRISB0 = 1;
  3070  0036DE  8093               	bsf	3987,0,c	;volatile
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 198:   INT2IE = 1;
  3074  0036E0  88F0               	bsf	4080,4,c	;volatile
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;main.c: 200:   INT0IE = 1;
  3078  0036E2  88F2               	bsf	4082,4,c	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081  0036E4  0012               	return		;funcret
  3082  0036E6                     __end_of_EncoderInit:
  3083                           	opt callstack 0
  3084                           
  3085 ;; *************** function _replaceOldLog *****************
  3086 ;; Defined at:
  3087 ;;		line 925 in file "main.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  i               2    5[COMRAM] int 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    2
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text6
  3116  0031CE                     __ptext6:
  3117                           	opt callstack 0
  3118  0031CE                     _replaceOldLog:
  3119                           	opt callstack 28
  3120                           
  3121                           ;main.c: 926:     for (int i = 0; i< 33; i++){
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;incstack = 0
  3125  0031CE  0E00               	movlw	0
  3126  0031D0  6E07               	movwf	replaceOldLog@i+1,c
  3127  0031D2  0E00               	movlw	0
  3128  0031D4  6E06               	movwf	replaceOldLog@i,c
  3129  0031D6                     l8378:
  3130                           
  3131                           ;main.c: 927:         logs[4][i] = logs[0][i];
  3132  0031D6  90D8               	bcf	status,0,c
  3133  0031D8  3406               	rlcf	replaceOldLog@i,w,c
  3134  0031DA  6ED9               	movwf	fsr2l,c
  3135  0031DC  3407               	rlcf	replaceOldLog@i+1,w,c
  3136  0031DE  6EDA               	movwf	fsr2h,c
  3137  0031E0  0E30               	movlw	low _logs
  3138  0031E2  26D9               	addwf	fsr2l,f,c
  3139  0031E4  0E01               	movlw	high _logs
  3140  0031E6  22DA               	addwfc	fsr2h,f,c
  3141  0031E8  90D8               	bcf	status,0,c
  3142  0031EA  3406               	rlcf	replaceOldLog@i,w,c
  3143  0031EC  6EE1               	movwf	fsr1l,c
  3144  0031EE  3407               	rlcf	replaceOldLog@i+1,w,c
  3145  0031F0  6EE2               	movwf	fsr1h,c
  3146  0031F2  0E38               	movlw	low (_logs+264)
  3147  0031F4  26E1               	addwf	fsr1l,f,c
  3148  0031F6  0E02               	movlw	high (_logs+264)
  3149  0031F8  22E2               	addwfc	fsr1h,f,c
  3150  0031FA  CFDE FFE6          	movff	postinc2,postinc1
  3151  0031FE  CFDD FFE5          	movff	postdec2,postdec1
  3152                           
  3153                           ;main.c: 928:     }
  3154  003202  4A06               	infsnz	replaceOldLog@i,f,c
  3155  003204  2A07               	incf	replaceOldLog@i+1,f,c
  3156  003206  BE07               	btfsc	replaceOldLog@i+1,7,c
  3157  003208  D7E6               	goto	l8378
  3158  00320A  5007               	movf	replaceOldLog@i+1,w,c
  3159  00320C  E105               	bnz	u9790
  3160  00320E  0E21               	movlw	33
  3161  003210  5C06               	subwf	replaceOldLog@i,w,c
  3162  003212  B0D8               	btfsc	status,0,c
  3163  003214  0012               	return	
  3164  003216  D7DF               	goto	l8378
  3165  003218                     u9790:
  3166  003218  0012               	return		;funcret
  3167  00321A                     __end_of_replaceOldLog:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function _doOperation *****************
  3171 ;; Defined at:
  3172 ;;		line 562 in file "main.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  i               2   79[BANK0 ] int 
  3177 ;;  PIDData         4   35[BANK0 ] int [2]
  3178 ;;  timeInOperat    2   77[BANK0 ] int 
  3179 ;;  tiresToDrop     2   73[BANK0 ] int 
  3180 ;;  milliseconds    2   71[BANK0 ] int 
  3181 ;;  counted         2   69[BANK0 ] int 
  3182 ;;  timeStart       2   66[BANK0 ] int 
  3183 ;;  tiresOnPole     2   64[BANK0 ] int 
  3184 ;;  motorBStartD    2   62[BANK0 ] int 
  3185 ;;  motorAStartD    2   60[BANK0 ] int 
  3186 ;;  badCountBot     2   58[BANK0 ] int 
  3187 ;;  badCount        2   56[BANK0 ] int 
  3188 ;;  rightRangeFi    2    0        int 
  3189 ;;  leftRangeFin    2    0        int 
  3190 ;;  currentAngle    2    0        int 
  3191 ;;  error           2    0        int 
  3192 ;;  errorScaleFa    2    0        int 
  3193 ;;  motorBSpeed     2    0        int 
  3194 ;;  motorASpeed     2    0        int 
  3195 ;;  goalSpeed       2    0        int 
  3196 ;;  fourMetreEqu    2    0        int 
  3197 ;;  minimumSafeD    2    0        int 
  3198 ;;  topLaserStat    1   83[BANK0 ] _Bool 
  3199 ;;  bottomLaserS    1   82[BANK0 ] _Bool 
  3200 ;;  currentOpera    1   81[BANK0 ] enum E3343
  3201 ;;  bottomLaserS    1   76[BANK0 ] _Bool 
  3202 ;;  topLaserStat    1   75[BANK0 ] _Bool 
  3203 ;;  isDoneDrop      1   68[BANK0 ] _Bool 
  3204 ;;  send            1   55[BANK0 ] _Bool 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:       52 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:   13
  3221 ;; This function calls:
  3222 ;;		_I2C_Master_Start
  3223 ;;		_I2C_Master_Stop
  3224 ;;		_I2C_Master_Write
  3225 ;;		_TIMER_INIT
  3226 ;;		___awmod
  3227 ;;		_errorCorrectedMove
  3228 ;;		_init_motor_PWM
  3229 ;;		_lcdInst
  3230 ;;		_printf
  3231 ;;		_requestIsTireDropDone
  3232 ;;		_sendArduinoTireDropRequest
  3233 ;;		_setMotorSpeeds
  3234 ;;		_tirePositioning
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text7
  3241  0008AC                     __ptext7:
  3242                           	opt callstack 0
  3243  0008AC                     _doOperation:
  3244                           	opt callstack 17
  3245                           
  3246                           ;main.c: 568:     I2C_Master_Start();
  3247                           
  3248                           ;incstack = 0
  3249  0008AC  ECA9  F01B         	call	_I2C_Master_Start	;wreg free
  3250                           
  3251                           ;main.c: 569:     I2C_Master_Write(0b00010000);
  3252  0008B0  0E00               	movlw	0
  3253  0008B2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3254  0008B4  0E10               	movlw	16
  3255  0008B6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3256  0008B8  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  3257                           
  3258                           ;main.c: 570:     I2C_Master_Stop();
  3259  0008BC  ECA5  F01B         	call	_I2C_Master_Stop	;wreg free
  3260                           
  3261                           ;main.c: 575:     TIMER_INIT();
  3262  0008C0  EC58  F01B         	call	_TIMER_INIT	;wreg free
  3263                           
  3264                           ;main.c: 576:     millisecondsMeasured = 0;
  3265  0008C4  0E00               	movlw	0
  3266  0008C6  6E78               	movwf	_millisecondsMeasured+1,c	;volatile
  3267  0008C8  0E00               	movlw	0
  3268  0008CA  6E77               	movwf	_millisecondsMeasured,c	;volatile
  3269                           
  3270                           ;main.c: 585:  enum operationStates currentOperationState = moveForward;
  3271  0008CC  0E00               	movlw	0
  3272  0008CE  0100               	movlb	0	; () banked
  3273  0008D0  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 588:  int tiresToDrop = 0;
  3277                           
  3278                           ; BSR set to: 0
  3279                           
  3280                           ; BSR set to: 0
  3281  0008D2  0E00               	movlw	0
  3282  0008D4  6FCA               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3283  0008D6  0E00               	movlw	0
  3284  0008D8  6FC9               	movwf	doOperation@tiresToDrop& (0+255),b
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;main.c: 589:     int minimumSafeDistanceToPole;;main.c: 590:     int fourMetreEquivalen
      +                          t;;main.c: 591:     int timeInOperation = 15000;
  3288  0008DA  0E3A               	movlw	58
  3289  0008DC  6FCE               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3290  0008DE  0E98               	movlw	152
  3291  0008E0  6FCD               	movwf	doOperation@timeInOperation& (0+255),b
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;main.c: 592:     int motorAStartDistance = motorADistance;
  3295  0008E2  C0E2  F0BC         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3296  0008E6  C0E3  F0BD         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 593:     int motorBStartDistance = motorBDistance;
  3300  0008EA  C0E0  F0BE         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3301  0008EE  C0E1  F0BF         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;main.c: 594:     int tiresOnPole;;main.c: 595:     int PIDData[2] = {0,0};
  3305  0008F2  0E00               	movlw	0
  3306  0008F4  6FA3               	movwf	doOperation@PIDData& (0+255),b
  3307  0008F6  0E00               	movlw	0
  3308  0008F8  6FA4               	movwf	(doOperation@PIDData+1)& (0+255),b
  3309  0008FA  0E00               	movlw	0
  3310  0008FC  6FA5               	movwf	(doOperation@PIDData+2)& (0+255),b
  3311  0008FE  0E00               	movlw	0
  3312  000900  6FA6               	movwf	(doOperation@PIDData+3)& (0+255),b
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;main.c: 596:     _Bool topLaserState;;main.c: 597:     _Bool topLaserStatePrev;;main.c:
      +                           598:     _Bool bottomLaserState;;main.c: 599:     _Bool bottomLaserStatePrev;;main.c: 6
      +                          00:     _Bool isDoneDrop;;main.c: 601:     init_motor_PWM();
  3316  000902  ECFA  F01A         	call	_init_motor_PWM	;wreg free
  3317                           
  3318                           ;main.c: 602:     int counted = 0;
  3319  000906  0E00               	movlw	0
  3320  000908  0100               	movlb	0	; () banked
  3321  00090A  6FC6               	movwf	(doOperation@counted+1)& (0+255),b
  3322  00090C  0E00               	movlw	0
  3323  00090E  6FC5               	movwf	doOperation@counted& (0+255),b
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;main.c: 603:     int badCount = 0;
  3327  000910  0E00               	movlw	0
  3328  000912  6FB9               	movwf	(doOperation@badCount+1)& (0+255),b
  3329  000914  0E00               	movlw	0
  3330  000916  6FB8               	movwf	doOperation@badCount& (0+255),b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;main.c: 604:     int badCountBot = 0;
  3334  000918  0E00               	movlw	0
  3335  00091A  6FBB               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3336  00091C  0E00               	movlw	0
  3337  00091E  6FBA               	movwf	doOperation@badCountBot& (0+255),b
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 610:     TRISAbits.TRISA0 = 0;
  3341  000920  9092               	bcf	3986,0,c	;volatile
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 611:     TRISAbits.TRISA1 = 0;
  3345  000922  9292               	bcf	3986,1,c	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;main.c: 612:     TRISAbits.TRISA2 = 0;
  3349  000924  9492               	bcf	3986,2,c	;volatile
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;main.c: 613:     TRISAbits.TRISA3 = 0;
  3353  000926  9692               	bcf	3986,3,c	;volatile
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;main.c: 616:     TRISAbits.TRISA4 = 0;
  3357  000928  9892               	bcf	3986,4,c	;volatile
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 617:     LATAbits.LATA4 = 1;
  3361  00092A  8889               	bsf	3977,4,c	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;main.c: 618:     int timeStart = millisecondsMeasured;
  3365  00092C  C077  F0C2         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3366  000930  C078  F0C3         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3367  000934                     l8198:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;main.c: 619:     while(millisecondsMeasured < timeStart + 100){
  3371  000934  0E64               	movlw	100
  3372  000936  25C2               	addwf	doOperation@timeStart& (0+255),w,b
  3373  000938  6FA0               	movwf	??_doOperation& (0+255),b
  3374  00093A  0E00               	movlw	0
  3375  00093C  21C3               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3376  00093E  6FA1               	movwf	(??_doOperation+1)& (0+255),b
  3377  000940  51A0               	movf	??_doOperation& (0+255),w,b
  3378  000942  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  3379  000944  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  3380  000946  0A80               	xorlw	128
  3381  000948  6FA2               	movwf	(??_doOperation+2)& (0+255),b
  3382  00094A  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3383  00094C  0A80               	xorlw	128
  3384  00094E  59A2               	subwfb	(??_doOperation+2)& (0+255),w,b
  3385  000950  A0D8               	btfss	status,0,c
  3386  000952  D7F0               	goto	l8198
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 623:     topLaserState = PORTBbits.RB4;
  3390  000954  A881               	btfss	3969,4,c	;volatile
  3391  000956  D002               	goto	u9640
  3392  000958  0E01               	movlw	1
  3393  00095A  D001               	goto	u9646
  3394  00095C                     u9640:
  3395  00095C  0E00               	movlw	0
  3396  00095E                     u9646:
  3397  00095E  6FD3               	movwf	doOperation@topLaserState& (0+255),b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 624:     topLaserStatePrev = topLaserState;
  3401  000960  C0D3  F0CB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3402                           
  3403                           ;main.c: 625:     bottomLaserState = PORTBbits.RB5;
  3404  000964  AA81               	btfss	3969,5,c	;volatile
  3405  000966  D002               	goto	u9650
  3406  000968  0E01               	movlw	1
  3407  00096A  D001               	goto	u9656
  3408  00096C                     u9650:
  3409  00096C  0E00               	movlw	0
  3410  00096E                     u9656:
  3411  00096E  6FD2               	movwf	doOperation@bottomLaserState& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;main.c: 626:     bottomLaserStatePrev = bottomLaserState;
  3415  000970  C0D2  F0CC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3416                           
  3417                           ;main.c: 634:     _Bool send = 1;
  3418  000974  0E01               	movlw	1
  3419  000976  6FB7               	movwf	doOperation@send& (0+255),b
  3420                           
  3421                           ;main.c: 635:     int millisecondsMeasuredOld = 0;
  3422  000978  0E00               	movlw	0
  3423  00097A  6FC8               	movwf	(doOperation@millisecondsMeasuredOld+1)& (0+255),b
  3424  00097C  0E00               	movlw	0
  3425  00097E  6FC7               	movwf	doOperation@millisecondsMeasuredOld& (0+255),b
  3426  000980                     l8206:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;main.c: 640:         counted ++;
  3430  000980  4BC5               	infsnz	doOperation@counted& (0+255),f,b
  3431  000982  2BC6               	incf	(doOperation@counted+1)& (0+255),f,b
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;main.c: 641:         topLaserStatePrev = topLaserState;
  3435  000984  C0D3  F0CB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;main.c: 642:         topLaserState = PORTBbits.RB4;
  3439  000988  A881               	btfss	3969,4,c	;volatile
  3440  00098A  D002               	goto	u9660
  3441  00098C  0E01               	movlw	1
  3442  00098E  D001               	goto	u9666
  3443  000990                     u9660:
  3444  000990  0E00               	movlw	0
  3445  000992                     u9666:
  3446  000992  6FD3               	movwf	doOperation@topLaserState& (0+255),b
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 643:         bottomLaserStatePrev = bottomLaserState;
  3450  000994  C0D2  F0CC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 644:         bottomLaserState = PORTBbits.RB5;
  3454  000998  AA81               	btfss	3969,5,c	;volatile
  3455  00099A  D002               	goto	u9670
  3456  00099C  0E01               	movlw	1
  3457  00099E  D001               	goto	u9676
  3458  0009A0                     u9670:
  3459  0009A0  0E00               	movlw	0
  3460  0009A2                     u9676:
  3461  0009A2  6FD2               	movwf	doOperation@bottomLaserState& (0+255),b
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;main.c: 645:    if (millisecondsMeasured > millisecondsMeasuredOld){
  3465  0009A4  5077               	movf	_millisecondsMeasured,w,c	;volatile
  3466  0009A6  5DC7               	subwf	doOperation@millisecondsMeasuredOld& (0+255),w,b
  3467  0009A8  51C8               	movf	(doOperation@millisecondsMeasuredOld+1)& (0+255),w,b
  3468  0009AA  0A80               	xorlw	128
  3469  0009AC  6FA0               	movwf	??_doOperation& (0+255),b
  3470  0009AE  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  3471  0009B0  0A80               	xorlw	128
  3472  0009B2  59A0               	subwfb	??_doOperation& (0+255),w,b
  3473  0009B4  B0D8               	btfsc	status,0,c
  3474  0009B6  D124               	goto	l8306
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;main.c: 646:             millisecondsMeasuredOld++;
  3478  0009B8  4BC7               	infsnz	doOperation@millisecondsMeasuredOld& (0+255),f,b
  3479  0009BA  2BC8               	incf	(doOperation@millisecondsMeasuredOld+1)& (0+255),f,b
  3480  0009BC  D121               	goto	l8306
  3481  0009BE                     l8220:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;main.c: 652:                 if (counted%100 == 0){
  3485  0009BE  C0C5  F006         	movff	doOperation@counted,___awmod@dividend
  3486  0009C2  C0C6  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3487  0009C6  0E00               	movlw	0
  3488  0009C8  6E09               	movwf	___awmod@divisor+1,c
  3489  0009CA  0E64               	movlw	100
  3490  0009CC  6E08               	movwf	___awmod@divisor,c
  3491  0009CE  EC90  F017         	call	___awmod	;wreg free
  3492  0009D2  5006               	movf	?___awmod,w,c
  3493  0009D4  1007               	iorwf	?___awmod+1,w,c
  3494  0009D6  A4D8               	btfss	status,2,c
  3495  0009D8  D040               	goto	l8240
  3496                           
  3497                           ;main.c: 653:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3498  0009DA  0E01               	movlw	1
  3499  0009DC  EC96  F01B         	call	_lcdInst
  3500  0009E0  0E11               	movlw	17
  3501  0009E2  0100               	movlb	0	; () banked
  3502  0009E4  6FA0               	movwf	??_doOperation& (0+255),b
  3503  0009E6  0E3A               	movlw	58
  3504  0009E8                     u10147:
  3505  0009E8  2EE8               	decfsz	wreg,f,c
  3506  0009EA  D7FE               	bra	u10147
  3507  0009EC  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3508  0009EE  D7FC               	bra	u10147
  3509  0009F0  F000               	nop	
  3510                           
  3511                           ;main.c: 654:                 printf("%d", millisecondsMeasured);
  3512  0009F2  0EF3               	movlw	low (STR_22+3)
  3513  0009F4  0100               	movlb	0	; () banked
  3514  0009F6  6F80               	movwf	printf@fmt& (0+255),b
  3515  0009F8  0EFF               	movlw	high (STR_22+3)
  3516  0009FA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3517  0009FC  C077  F082         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3518  000A00  C078  F083         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3519  000A04  EC0E  F01B         	call	_printf	;wreg free
  3520  000A08  0E90               	movlw	144
  3521  000A0A  EC96  F01B         	call	_lcdInst
  3522                           
  3523                           ;main.c: 656:                 printf("%d", topLaserState);
  3524  000A0E  0EF3               	movlw	low (STR_22+3)
  3525  000A10  0100               	movlb	0	; () banked
  3526  000A12  6F80               	movwf	printf@fmt& (0+255),b
  3527  000A14  0EFF               	movlw	high (STR_22+3)
  3528  000A16  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3529  000A18  C0D3  F082         	movff	doOperation@topLaserState,?_printf+2
  3530  000A1C  6B83               	clrf	(?_printf+3)& (0+255),b
  3531  000A1E  EC0E  F01B         	call	_printf	;wreg free
  3532  000A22  0EC0               	movlw	192
  3533  000A24  EC96  F01B         	call	_lcdInst
  3534                           
  3535                           ;main.c: 658:                 printf("B: %d", motorBDistance);
  3536  000A28  0EF6               	movlw	low STR_21
  3537  000A2A  0100               	movlb	0	; () banked
  3538  000A2C  6F80               	movwf	printf@fmt& (0+255),b
  3539  000A2E  0EFF               	movlw	high STR_21
  3540  000A30  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3541  000A32  C0E0  F082         	movff	_motorBDistance,?_printf+2	;volatile
  3542  000A36  C0E1  F083         	movff	_motorBDistance+1,?_printf+3	;volatile
  3543  000A3A  EC0E  F01B         	call	_printf	;wreg free
  3544  000A3E  0ED0               	movlw	208
  3545  000A40  EC96  F01B         	call	_lcdInst
  3546                           
  3547                           ;main.c: 660:                 printf("A: %d", motorADistance);
  3548  000A44  0EF0               	movlw	low STR_22
  3549  000A46  0100               	movlb	0	; () banked
  3550  000A48  6F80               	movwf	printf@fmt& (0+255),b
  3551  000A4A  0EFF               	movlw	high STR_22
  3552  000A4C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3553  000A4E  C0E2  F082         	movff	_motorADistance,?_printf+2	;volatile
  3554  000A52  C0E3  F083         	movff	_motorADistance+1,?_printf+3	;volatile
  3555  000A56  EC0E  F01B         	call	_printf	;wreg free
  3556  000A5A                     l8240:
  3557                           
  3558                           ;main.c: 679:                 errorCorrectedMove(30, 1, motorAStartDistance, motorBStart
      +                          Distance, 0.1);
  3559  000A5A  0E00               	movlw	0
  3560  000A5C  0100               	movlb	0	; () banked
  3561  000A5E  6F89               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  3562  000A60  0E1E               	movlw	30
  3563  000A62  6F88               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  3564  000A64  0E00               	movlw	0
  3565  000A66  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3566  000A68  0E00               	movlw	0
  3567  000A6A  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3568  000A6C  0E80               	movlw	128
  3569  000A6E  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3570  000A70  0E3F               	movlw	63
  3571  000A72  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3572  000A74  C0BC  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3573  000A78  C0BD  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3574  000A7C  C0BE  F090         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3575  000A80  C0BF  F091         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3576  000A84  0ECD               	movlw	205
  3577  000A86  6F92               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3578  000A88  0ECC               	movlw	204
  3579  000A8A  6F93               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3580  000A8C  0ECC               	movlw	204
  3581  000A8E  6F94               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3582  000A90  0E3D               	movlw	61
  3583  000A92  6F95               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3584  000A94  ECF6  F00D         	call	_errorCorrectedMove	;wreg free
  3585                           
  3586                           ;main.c: 681:                 break;
  3587  000A98  D0CD               	goto	l8308
  3588  000A9A                     l8242:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 685:                 tiresOnPole = tirePositioning(timeInOperation);
  3592  000A9A  C0CD  F088         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  3593  000A9E  C0CE  F089         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  3594  000AA2  EC5E  F00B         	call	_tirePositioning	;wreg free
  3595  000AA6  C088  F0C0         	movff	?_tirePositioning,doOperation@tiresOnPole
  3596  000AAA  C089  F0C1         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  3597                           
  3598                           ;main.c: 686:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3599  000AAE  0E01               	movlw	1
  3600  000AB0  EC96  F01B         	call	_lcdInst
  3601  000AB4  0E11               	movlw	17
  3602  000AB6  0100               	movlb	0	; () banked
  3603  000AB8  6FA0               	movwf	??_doOperation& (0+255),b
  3604  000ABA  0E3A               	movlw	58
  3605  000ABC                     u10157:
  3606  000ABC  2EE8               	decfsz	wreg,f,c
  3607  000ABE  D7FE               	bra	u10157
  3608  000AC0  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3609  000AC2  D7FC               	bra	u10157
  3610  000AC4  F000               	nop	
  3611                           
  3612                           ;main.c: 687:                 printf("TIRE DROP");
  3613  000AC6  0EA1               	movlw	low STR_23
  3614  000AC8  0100               	movlb	0	; () banked
  3615  000ACA  6F80               	movwf	printf@fmt& (0+255),b
  3616  000ACC  0EFF               	movlw	high STR_23
  3617  000ACE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3618  000AD0  EC0E  F01B         	call	_printf	;wreg free
  3619  000AD4  0EC0               	movlw	192
  3620  000AD6  EC96  F01B         	call	_lcdInst
  3621                           
  3622                           ;main.c: 689:                 printf("%d on pole", tiresOnPole);
  3623  000ADA  0E76               	movlw	low STR_24
  3624  000ADC  0100               	movlb	0	; () banked
  3625  000ADE  6F80               	movwf	printf@fmt& (0+255),b
  3626  000AE0  0EFF               	movlw	high STR_24
  3627  000AE2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3628  000AE4  C0C0  F082         	movff	doOperation@tiresOnPole,?_printf+2
  3629  000AE8  C0C1  F083         	movff	doOperation@tiresOnPole+1,?_printf+3
  3630  000AEC  EC0E  F01B         	call	_printf	;wreg free
  3631                           
  3632                           ;main.c: 691:                 setMotorSpeeds(0, 1, 1, 0);
  3633  000AF0  0E00               	movlw	0
  3634  000AF2  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3635  000AF4  0E00               	movlw	0
  3636  000AF6  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3637  000AF8  0E01               	movlw	1
  3638  000AFA  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3639  000AFC  0E01               	movlw	1
  3640  000AFE  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3641  000B00  0E00               	movlw	0
  3642  000B02  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3643  000B04  0E00               	movlw	0
  3644  000B06  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3645  000B08  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  3646  000B0C                     l8256:
  3647                           
  3648                           ;main.c: 692:                 while(millisecondsMeasured < timeInOperation){
  3649  000B0C  0100               	movlb	0	; () banked
  3650  000B0E  51CD               	movf	doOperation@timeInOperation& (0+255),w,b
  3651  000B10  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  3652  000B12  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  3653  000B14  0A80               	xorlw	128
  3654  000B16  6FA0               	movwf	??_doOperation& (0+255),b
  3655  000B18  51CE               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3656  000B1A  0A80               	xorlw	128
  3657  000B1C  59A0               	subwfb	??_doOperation& (0+255),w,b
  3658  000B1E  A0D8               	btfss	status,0,c
  3659  000B20  D7F5               	goto	l8256
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;main.c: 701:     sendArduinoTireDropRequest();
  3663  000B22  EC47  F01B         	call	_sendArduinoTireDropRequest	;wreg free
  3664                           
  3665                           ;main.c: 704:                 sendArduinoTireDropRequest();
  3666  000B26  EC47  F01B         	call	_sendArduinoTireDropRequest	;wreg free
  3667                           
  3668                           ;main.c: 705:                 tiresToDrop = 1;
  3669  000B2A  0E00               	movlw	0
  3670  000B2C  0100               	movlb	0	; () banked
  3671  000B2E  6FCA               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3672  000B30  0E01               	movlw	1
  3673  000B32  6FC9               	movwf	doOperation@tiresToDrop& (0+255),b
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;main.c: 706:                 currentOperationState = tireDrop;
  3677  000B34  0E02               	movlw	2
  3678  000B36  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3679                           
  3680                           ;main.c: 707:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3681  000B38  0E01               	movlw	1
  3682  000B3A  EC96  F01B         	call	_lcdInst
  3683  000B3E  0E11               	movlw	17
  3684  000B40  0100               	movlb	0	; () banked
  3685  000B42  6FA0               	movwf	??_doOperation& (0+255),b
  3686  000B44  0E3A               	movlw	58
  3687  000B46                     u10167:
  3688  000B46  2EE8               	decfsz	wreg,f,c
  3689  000B48  D7FE               	bra	u10167
  3690  000B4A  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3691  000B4C  D7FC               	bra	u10167
  3692  000B4E  F000               	nop	
  3693                           
  3694                           ;main.c: 708:                 printf("TIRE DROP");
  3695  000B50  0EA1               	movlw	low STR_23
  3696  000B52  0100               	movlb	0	; () banked
  3697  000B54  6F80               	movwf	printf@fmt& (0+255),b
  3698  000B56  0EFF               	movlw	high STR_23
  3699  000B58  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3700  000B5A  EC0E  F01B         	call	_printf	;wreg free
  3701                           
  3702                           ;main.c: 709:                 setMotorSpeeds(0, 1, 1, 0);
  3703  000B5E  0E00               	movlw	0
  3704  000B60  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3705  000B62  0E00               	movlw	0
  3706  000B64  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3707  000B66  0E01               	movlw	1
  3708  000B68  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3709  000B6A  0E01               	movlw	1
  3710  000B6C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3711  000B6E  0E00               	movlw	0
  3712  000B70  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3713  000B72  0E00               	movlw	0
  3714  000B74  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3715  000B76  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  3716                           
  3717                           ;main.c: 710:     break;
  3718  000B7A  D05C               	goto	l8308
  3719  000B7C                     l8270:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;main.c: 713:     isDoneDrop = requestIsTireDropDone();
  3723  000B7C  ECCF  F01A         	call	_requestIsTireDropDone	;wreg free
  3724  000B80  0100               	movlb	0	; () banked
  3725  000B82  6FC4               	movwf	doOperation@isDoneDrop& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;main.c: 715:     if (isDoneDrop){
  3729  000B84  51C4               	movf	doOperation@isDoneDrop& (0+255),w,b
  3730  000B86  B4D8               	btfsc	status,2,c
  3731  000B88  D055               	goto	l8308
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;main.c: 716:      tiresToDrop -- ;
  3735  000B8A  07C9               	decf	doOperation@tiresToDrop& (0+255),f,b
  3736  000B8C  A0D8               	btfss	status,0,c
  3737  000B8E  07CA               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;main.c: 717:      if (tiresToDrop == 0){
  3741  000B90  51C9               	movf	doOperation@tiresToDrop& (0+255),w,b
  3742  000B92  11CA               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3743  000B94  A4D8               	btfss	status,2,c
  3744  000B96  D002               	goto	l8280
  3745  000B98                     u9720:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;main.c: 718:       currentOperationState = moveForward;
  3749  000B98  0E00               	movlw	0
  3750  000B9A  D004               	goto	L8
  3751  000B9C                     l8280:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;main.c: 721:       sendArduinoTireDropRequest();
  3755  000B9C  EC47  F01B         	call	_sendArduinoTireDropRequest	;wreg free
  3756  000BA0  D049               	goto	l8308
  3757  000BA2                     l8284:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;main.c: 732:     currentOperationState = complete;
  3761  000BA2  0E05               	movlw	5
  3762  000BA4                     L8:
  3763  000BA4  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3764                           
  3765                           ;main.c: 733:     break;
  3766  000BA6  D046               	goto	l8308
  3767  000BA8                     l8286:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;main.c: 736:                 for (int i = 0; i < 33; i++){
  3771  000BA8  0E00               	movlw	0
  3772  000BAA  6FD0               	movwf	(doOperation@i+1)& (0+255),b
  3773  000BAC  0E00               	movlw	0
  3774  000BAE  6FCF               	movwf	doOperation@i& (0+255),b
  3775  000BB0                     l8288:
  3776                           
  3777                           ; BSR set to: 0
  3778  000BB0  BFD0               	btfsc	(doOperation@i+1)& (0+255),7,b
  3779  000BB2  D006               	goto	l8292
  3780  000BB4  51D0               	movf	(doOperation@i+1)& (0+255),w,b
  3781  000BB6  E114               	bnz	l8298
  3782  000BB8  0E21               	movlw	33
  3783  000BBA  5DCF               	subwf	doOperation@i& (0+255),w,b
  3784  000BBC  B0D8               	btfsc	status,0,c
  3785  000BBE  D010               	goto	l8298
  3786  000BC0                     l8292:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;main.c: 737:                     logs[0][i] = 3;
  3790  000BC0  90D8               	bcf	status,0,c
  3791  000BC2  35CF               	rlcf	doOperation@i& (0+255),w,b
  3792  000BC4  6ED9               	movwf	fsr2l,c
  3793  000BC6  35D0               	rlcf	(doOperation@i+1)& (0+255),w,b
  3794  000BC8  6EDA               	movwf	fsr2h,c
  3795  000BCA  0E30               	movlw	low _logs
  3796  000BCC  26D9               	addwf	fsr2l,f,c
  3797  000BCE  0E01               	movlw	high _logs
  3798  000BD0  22DA               	addwfc	fsr2h,f,c
  3799  000BD2  0E03               	movlw	3
  3800  000BD4  6EDE               	movwf	postinc2,c
  3801  000BD6  0E00               	movlw	0
  3802  000BD8  6EDD               	movwf	postdec2,c
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;main.c: 738:                 }
  3806  000BDA  4BCF               	infsnz	doOperation@i& (0+255),f,b
  3807  000BDC  2BD0               	incf	(doOperation@i+1)& (0+255),f,b
  3808  000BDE  D7E8               	goto	l8288
  3809  000BE0                     l8298:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 739:     setMotorSpeeds(0, 1, 1, 0);
  3813  000BE0  0E00               	movlw	0
  3814  000BE2  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3815  000BE4  0E00               	movlw	0
  3816  000BE6  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3817  000BE8  0E01               	movlw	1
  3818  000BEA  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3819  000BEC  0E01               	movlw	1
  3820  000BEE  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3821  000BF0  0E00               	movlw	0
  3822  000BF2  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3823  000BF4  0E00               	movlw	0
  3824  000BF6  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3825  000BF8  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  3826                           
  3827                           ;main.c: 740:                 LATAbits.LATA4 = 0;
  3828  000BFC  9889               	bcf	3977,4,c	;volatile
  3829  000BFE  0012               	return	
  3830  000C00                     l8306:
  3831                           
  3832                           ; BSR set to: 0
  3833  000C00  51D1               	movf	doOperation@currentOperationState& (0+255),w,b
  3834  000C02  6FA0               	movwf	??_doOperation& (0+255),b
  3835  000C04  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  3836                           
  3837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3838                           ; Switch size 1, requested type "simple"
  3839                           ; Number of cases is 1, Range of values is 0 to 0
  3840                           ; switch strategies available:
  3841                           ; Name         Instructions Cycles
  3842                           ; simple_byte            4     3 (average)
  3843                           ;	Chosen strategy is simple_byte
  3844  000C06  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3845  000C08  0A00               	xorlw	0	; case 0
  3846  000C0A  A4D8               	btfss	status,2,c
  3847  000C0C  D013               	goto	l8308
  3848                           
  3849                           ; BSR set to: 0
  3850                           ; Switch size 1, requested type "simple"
  3851                           ; Number of cases is 6, Range of values is 0 to 5
  3852                           ; switch strategies available:
  3853                           ; Name         Instructions Cycles
  3854                           ; simple_byte           19    10 (average)
  3855                           ;	Chosen strategy is simple_byte
  3856  000C0E  51A0               	movf	??_doOperation& (0+255),w,b
  3857  000C10  0A00               	xorlw	0	; case 0
  3858  000C12  B4D8               	btfsc	status,2,c
  3859  000C14  D6D4               	goto	l8220
  3860  000C16  0A01               	xorlw	1	; case 1
  3861  000C18  B4D8               	btfsc	status,2,c
  3862  000C1A  D73F               	goto	l8242
  3863  000C1C  0A03               	xorlw	3	; case 2
  3864  000C1E  B4D8               	btfsc	status,2,c
  3865  000C20  D7AD               	goto	l8270
  3866  000C22  0A01               	xorlw	1	; case 3
  3867  000C24  B4D8               	btfsc	status,2,c
  3868  000C26  D7B8               	goto	u9720
  3869  000C28  0A07               	xorlw	7	; case 4
  3870  000C2A  B4D8               	btfsc	status,2,c
  3871  000C2C  D7BA               	goto	l8284
  3872  000C2E  0A01               	xorlw	1	; case 5
  3873  000C30  B4D8               	btfsc	status,2,c
  3874  000C32  D7BA               	goto	l8286
  3875  000C34                     l8308:
  3876                           
  3877                           ;main.c: 758:   if (millisecondsMeasured >= timeInOperation){
  3878  000C34  0100               	movlb	0	; () banked
  3879  000C36  51CD               	movf	doOperation@timeInOperation& (0+255),w,b
  3880  000C38  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  3881  000C3A  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  3882  000C3C  0A80               	xorlw	128
  3883  000C3E  6FA0               	movwf	??_doOperation& (0+255),b
  3884  000C40  51CE               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3885  000C42  0A80               	xorlw	128
  3886  000C44  59A0               	subwfb	??_doOperation& (0+255),w,b
  3887  000C46  A0D8               	btfss	status,0,c
  3888  000C48  D01A               	goto	l8328
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;main.c: 759:    currentOperationState = complete;
  3892  000C4A  0E05               	movlw	5
  3893  000C4C  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3894  000C4E  D017               	goto	l8328
  3895  000C50                     l8312:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;main.c: 769:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  3899  000C50  51D3               	movf	doOperation@topLaserState& (0+255),w,b
  3900  000C52  19CB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3901  000C54  A4D8               	btfss	status,2,c
  3902  000C56  D004               	goto	u9760
  3903                           
  3904                           ; BSR set to: 0
  3905  000C58  51D2               	movf	doOperation@bottomLaserState& (0+255),w,b
  3906  000C5A  19CC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  3907  000C5C  B4D8               	btfsc	status,2,c
  3908  000C5E  D690               	goto	l8206
  3909  000C60                     u9760:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;main.c: 770:                     if (topLaserStatePrev != topLaserState){
  3913  000C60  51D3               	movf	doOperation@topLaserState& (0+255),w,b
  3914  000C62  19CB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3915  000C64  B4D8               	btfsc	status,2,c
  3916  000C66  D002               	goto	l8320
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;main.c: 771:                         badCount++;
  3920  000C68  4BB8               	infsnz	doOperation@badCount& (0+255),f,b
  3921  000C6A  2BB9               	incf	(doOperation@badCount+1)& (0+255),f,b
  3922  000C6C                     l8320:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 773:                     if (bottomLaserStatePrev != bottomLaserState){
  3926  000C6C  51D2               	movf	doOperation@bottomLaserState& (0+255),w,b
  3927  000C6E  19CC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  3928  000C70  B4D8               	btfsc	status,2,c
  3929  000C72  D002               	goto	l8324
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;main.c: 774:                         badCountBot++;
  3933  000C74  4BBA               	infsnz	doOperation@badCountBot& (0+255),f,b
  3934  000C76  2BBB               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  3935  000C78                     l8324:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 776:                     currentOperationState = poleFinding;
  3939  000C78  0E01               	movlw	1
  3940  000C7A  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3941  000C7C  D681               	goto	l8206
  3942  000C7E                     l8328:
  3943                           
  3944                           ; BSR set to: 0
  3945  000C7E  51D1               	movf	doOperation@currentOperationState& (0+255),w,b
  3946  000C80  6FA0               	movwf	??_doOperation& (0+255),b
  3947  000C82  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  3948                           
  3949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 1, Range of values is 0 to 0
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            4     3 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956  000C84  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3957  000C86  0A00               	xorlw	0	; case 0
  3958  000C88  A4D8               	btfss	status,2,c
  3959  000C8A  D67A               	goto	l8206
  3960                           
  3961                           ; BSR set to: 0
  3962                           ; Switch size 1, requested type "simple"
  3963                           ; Number of cases is 6, Range of values is 0 to 5
  3964                           ; switch strategies available:
  3965                           ; Name         Instructions Cycles
  3966                           ; simple_byte           19    10 (average)
  3967                           ;	Chosen strategy is simple_byte
  3968  000C8C  51A0               	movf	??_doOperation& (0+255),w,b
  3969  000C8E  0A00               	xorlw	0	; case 0
  3970  000C90  B4D8               	btfsc	status,2,c
  3971  000C92  D7DE               	goto	l8312
  3972  000C94  0A01               	xorlw	1	; case 1
  3973  000C96  B4D8               	btfsc	status,2,c
  3974  000C98  D673               	goto	l8206
  3975  000C9A  0A03               	xorlw	3	; case 2
  3976  000C9C  B4D8               	btfsc	status,2,c
  3977  000C9E  D670               	goto	l8206
  3978  000CA0  0A01               	xorlw	1	; case 3
  3979  000CA2  B4D8               	btfsc	status,2,c
  3980  000CA4  D66D               	goto	l8206
  3981  000CA6  0A07               	xorlw	7	; case 4
  3982  000CA8  B4D8               	btfsc	status,2,c
  3983  000CAA  D66A               	goto	l8206
  3984  000CAC  0A01               	xorlw	1	; case 5
  3985  000CAE  D668               	goto	l8206
  3986  000CB0                     __end_of_doOperation:
  3987                           	opt callstack 0
  3988                           
  3989 ;; *************** function _tirePositioning *****************
  3990 ;; Defined at:
  3991 ;;		line 356 in file "main.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  maxOperation    2    8[BANK0 ] int 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  startDistanc    2   14[BANK0 ] int 
  3996 ;;  bottomBreakb    2   26[BANK0 ] int 
  3997 ;;  topBreakbeam    2   24[BANK0 ] int 
  3998 ;;  distanceReco    2   22[BANK0 ] int 
  3999 ;;  distanceReco    2   20[BANK0 ] int 
  4000 ;;  bottomPrevio    2   18[BANK0 ] int 
  4001 ;;  topPreviousS    2   16[BANK0 ] int 
  4002 ;;  startDistanc    2   12[BANK0 ] int 
  4003 ;;  startDistanc    2   10[BANK0 ] int 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2    8[BANK0 ] int 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Totals:         3      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;Total ram usage:       23 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    5
  4020 ;; This function calls:
  4021 ;;		___awdiv
  4022 ;;		_abs
  4023 ;;		_opDelay
  4024 ;;		_setMotorSpeeds
  4025 ;; This function is called by:
  4026 ;;		_doOperation
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text8
  4031  0016BC                     __ptext8:
  4032                           	opt callstack 0
  4033  0016BC                     _tirePositioning:
  4034                           	opt callstack 24
  4035                           
  4036                           ;main.c: 357:     int topBreakbeam;;main.c: 358:     int bottomBreakbeam;;main.c: 359:  
      +                             int distanceRecordedTop;;main.c: 360:     int startDistanceTop;;main.c: 361:     int 
      +                          distanceRecordedBottom;;main.c: 362:     int startDistanceBottom;;main.c: 363:     int t
      +                          opPreviousState = 1;
  4037                           
  4038                           ;incstack = 0
  4039  0016BC  0E00               	movlw	0
  4040  0016BE  0100               	movlb	0	; () banked
  4041  0016C0  6F91               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  4042  0016C2  0E01               	movlw	1
  4043  0016C4  6F90               	movwf	tirePositioning@topPreviousState& (0+255),b
  4044                           
  4045                           ;main.c: 364:     int bottomPreviousState = 1;
  4046  0016C6  0E00               	movlw	0
  4047  0016C8  6F93               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  4048  0016CA  0E01               	movlw	1
  4049  0016CC  6F92               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  4050                           
  4051                           ;main.c: 367:     while(millisecondsMeasured < maxOperationTime){
  4052  0016CE  D050               	goto	l7858
  4053  0016D0                     l7834:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 368:         topBreakbeam = PORTBbits.RB4;
  4057  0016D0  A881               	btfss	3969,4,c	;volatile
  4058  0016D2  D003               	goto	u9220
  4059  0016D4  6A72               	clrf	??_tirePositioning& (0+255),c
  4060  0016D6  2A72               	incf	??_tirePositioning& (0+255),f,c
  4061  0016D8  D001               	goto	u9228
  4062  0016DA                     u9220:
  4063  0016DA  6A72               	clrf	??_tirePositioning& (0+255),c
  4064  0016DC                     u9228:
  4065  0016DC  5072               	movf	??_tirePositioning,w,c
  4066  0016DE  0100               	movlb	0	; () banked
  4067  0016E0  6F98               	movwf	tirePositioning@topBreakbeam& (0+255),b
  4068  0016E2  6B99               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  4069                           
  4070                           ;main.c: 369:         bottomBreakbeam = PORTBbits.RB5;
  4071  0016E4  AA81               	btfss	3969,5,c	;volatile
  4072  0016E6  D003               	goto	u9230
  4073  0016E8  6A72               	clrf	??_tirePositioning& (0+255),c
  4074  0016EA  2A72               	incf	??_tirePositioning& (0+255),f,c
  4075  0016EC  D001               	goto	u9238
  4076  0016EE                     u9230:
  4077  0016EE  6A72               	clrf	??_tirePositioning& (0+255),c
  4078  0016F0                     u9238:
  4079  0016F0  5072               	movf	??_tirePositioning,w,c
  4080  0016F2  0100               	movlb	0	; () banked
  4081  0016F4  6F9A               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  4082  0016F6  6B9B               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 370:         if (topBreakbeam == 0 && topPreviousState == 1){
  4086  0016F8  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4087  0016FA  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4088  0016FC  A4D8               	btfss	status,2,c
  4089  0016FE  D008               	goto	l7842
  4090                           
  4091                           ; BSR set to: 0
  4092  001700  0590               	decf	tirePositioning@topPreviousState& (0+255),w,b
  4093  001702  1191               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  4094  001704  A4D8               	btfss	status,2,c
  4095  001706  D004               	goto	l7842
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 371:             startDistanceTop = motorADistance;
  4099  001708  C0E2  F08A         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  4100  00170C  C0E3  F08B         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  4101  001710                     l7842:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;main.c: 373:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  4105  001710  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4106  001712  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4107  001714  A4D8               	btfss	status,2,c
  4108  001716  D008               	goto	l7848
  4109                           
  4110                           ; BSR set to: 0
  4111  001718  0592               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  4112  00171A  1193               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  4113  00171C  A4D8               	btfss	status,2,c
  4114  00171E  D004               	goto	l7848
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;main.c: 374:             startDistanceBottom = motorADistance;
  4118  001720  C0E2  F08C         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4119  001724  C0E3  F08D         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4120  001728                     l7848:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;main.c: 376:         if(!topBreakbeam){
  4124  001728  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4125  00172A  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4126  00172C  A4D8               	btfss	status,2,c
  4127  00172E  D006               	goto	l263
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 377:             distanceRecordedTop = motorADistance - startDistanceTop;
  4131  001730  518A               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  4132  001732  5DE2               	subwf	_motorADistance& (0+255),w,b	;volatile
  4133  001734  6F94               	movwf	tirePositioning@distanceRecordedTop& (0+255),b
  4134  001736  518B               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  4135  001738  59E3               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4136  00173A  6F95               	movwf	(tirePositioning@distanceRecordedTop+1)& (0+255),b
  4137  00173C                     l263:
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;main.c: 379:         if(!bottomBreakbeam){
  4141  00173C  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4142  00173E  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4143  001740  A4D8               	btfss	status,2,c
  4144  001742  D006               	goto	l264
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;main.c: 380:             distanceRecordedBottom = motorADistance - startDistanceBottom;
  4148  001744  518C               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  4149  001746  5DE2               	subwf	_motorADistance& (0+255),w,b	;volatile
  4150  001748  6F96               	movwf	tirePositioning@distanceRecordedBottom& (0+255),b
  4151  00174A  518D               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  4152  00174C  59E3               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4153  00174E  6F97               	movwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),b
  4154  001750                     l264:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;main.c: 382:         if(topBreakbeam && bottomBreakbeam){
  4158  001750  5198               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4159  001752  1199               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4160  001754  B4D8               	btfsc	status,2,c
  4161  001756  D004               	goto	l265
  4162                           
  4163                           ; BSR set to: 0
  4164  001758  519A               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4165  00175A  119B               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4166  00175C  A4D8               	btfss	status,2,c
  4167  00175E  D012               	goto	u9320
  4168  001760                     l265:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 385:         topPreviousState = topBreakbeam;
  4172  001760  C098  F090         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4173  001764  C099  F091         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4174                           
  4175                           ;main.c: 386:         bottomPreviousState = bottomBreakbeam;
  4176  001768  C09A  F092         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4177  00176C  C09B  F093         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4178  001770                     l7858:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;main.c: 367:     while(millisecondsMeasured < maxOperationTime){
  4182  001770  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4183  001772  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4184  001774  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  4185  001776  0A80               	xorlw	128
  4186  001778  6E72               	movwf	??_tirePositioning& (0+255),c
  4187  00177A  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4188  00177C  0A80               	xorlw	128
  4189  00177E  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4190  001780  A0D8               	btfss	status,0,c
  4191  001782  D7A6               	goto	l7834
  4192  001784                     u9320:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;main.c: 389:     if (distanceRecordedTop < 170){
  4196  001784  BF95               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4197  001786  D006               	goto	u9330
  4198  001788  5195               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4199  00178A  E147               	bnz	l7874
  4200  00178C  0EAA               	movlw	170
  4201  00178E  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4202  001790  B0D8               	btfsc	status,0,c
  4203  001792  D043               	goto	l7874
  4204  001794                     u9330:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 390:         setMotorSpeeds(0, 1, 1, 0);
  4208  001794  0E00               	movlw	0
  4209  001796  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4210  001798  0E00               	movlw	0
  4211  00179A  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4212  00179C  0E01               	movlw	1
  4213  00179E  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4214  0017A0  0E01               	movlw	1
  4215  0017A2  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4216  0017A4  0E00               	movlw	0
  4217  0017A6  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4218  0017A8  0E00               	movlw	0
  4219  0017AA  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4220  0017AC  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4221                           
  4222                           ;main.c: 391:         opDelay(100, maxOperationTime);
  4223  0017B0  0E00               	movlw	0
  4224  0017B2  6E07               	movwf	opDelay@millis+1,c
  4225  0017B4  0E64               	movlw	100
  4226  0017B6  6E06               	movwf	opDelay@millis,c
  4227  0017B8  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4228  0017BC  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4229  0017C0  ECDB  F019         	call	_opDelay	;wreg free
  4230                           
  4231                           ;main.c: 392:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4232  0017C4  D00E               	goto	l7868
  4233  0017C6                     l7866:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;main.c: 393:             setMotorSpeeds(30, 0, 0, 30);
  4237  0017C6  0E00               	movlw	0
  4238  0017C8  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4239  0017CA  0E1E               	movlw	30
  4240  0017CC  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4241  0017CE  0E00               	movlw	0
  4242  0017D0  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4243  0017D2  0E00               	movlw	0
  4244  0017D4  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4245  0017D6  0E00               	movlw	0
  4246  0017D8  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4247  0017DA  0E1E               	movlw	30
  4248  0017DC  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4249  0017DE  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4250  0017E2                     l7868:
  4251                           
  4252                           ;main.c: 392:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4253  0017E2  0100               	movlb	0	; () banked
  4254  0017E4  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4255  0017E6  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4256  0017E8  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  4257  0017EA  0A80               	xorlw	128
  4258  0017EC  6E72               	movwf	??_tirePositioning& (0+255),c
  4259  0017EE  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4260  0017F0  0A80               	xorlw	128
  4261  0017F2  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4262  0017F4  B0D8               	btfsc	status,0,c
  4263  0017F6  D002               	goto	u9350
  4264                           
  4265                           ; BSR set to: 0
  4266  0017F8  B881               	btfsc	3969,4,c	;volatile
  4267  0017FA  D7E5               	goto	l7866
  4268  0017FC                     u9350:
  4269                           
  4270                           ;main.c: 395:         setMotorSpeeds(0, 1, 1, 0);
  4271  0017FC  0E00               	movlw	0
  4272  0017FE  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4273  001800  0E00               	movlw	0
  4274  001802  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4275  001804  0E01               	movlw	1
  4276  001806  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4277  001808  0E01               	movlw	1
  4278  00180A  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4279  00180C  0E00               	movlw	0
  4280  00180E  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4281  001810  0E00               	movlw	0
  4282  001812  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4283  001814  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4284                           
  4285                           ;main.c: 396:     } else {
  4286  001818  D073               	goto	l7892
  4287  00181A                     l7874:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;main.c: 397:         setMotorSpeeds(0, 1, 1, 0);
  4291  00181A  0E00               	movlw	0
  4292  00181C  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4293  00181E  0E00               	movlw	0
  4294  001820  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4295  001822  0E01               	movlw	1
  4296  001824  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4297  001826  0E01               	movlw	1
  4298  001828  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4299  00182A  0E00               	movlw	0
  4300  00182C  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4301  00182E  0E00               	movlw	0
  4302  001830  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4303  001832  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4304                           
  4305                           ;main.c: 398:         opDelay(100, maxOperationTime);
  4306  001836  0E00               	movlw	0
  4307  001838  6E07               	movwf	opDelay@millis+1,c
  4308  00183A  0E64               	movlw	100
  4309  00183C  6E06               	movwf	opDelay@millis,c
  4310  00183E  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4311  001842  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4312  001846  ECDB  F019         	call	_opDelay	;wreg free
  4313                           
  4314                           ;main.c: 399:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4315  00184A  D00E               	goto	l7880
  4316  00184C                     l7878:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;main.c: 400:             setMotorSpeeds(30, 0, 0, 30);
  4320  00184C  0E00               	movlw	0
  4321  00184E  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4322  001850  0E1E               	movlw	30
  4323  001852  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4324  001854  0E00               	movlw	0
  4325  001856  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4326  001858  0E00               	movlw	0
  4327  00185A  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4328  00185C  0E00               	movlw	0
  4329  00185E  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4330  001860  0E1E               	movlw	30
  4331  001862  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4332  001864  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4333  001868                     l7880:
  4334                           
  4335                           ;main.c: 399:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4336  001868  0100               	movlb	0	; () banked
  4337  00186A  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4338  00186C  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4339  00186E  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  4340  001870  0A80               	xorlw	128
  4341  001872  6E72               	movwf	??_tirePositioning& (0+255),c
  4342  001874  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4343  001876  0A80               	xorlw	128
  4344  001878  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4345  00187A  B0D8               	btfsc	status,0,c
  4346  00187C  D002               	goto	u9370
  4347                           
  4348                           ; BSR set to: 0
  4349  00187E  B881               	btfsc	3969,4,c	;volatile
  4350  001880  D7E5               	goto	l7878
  4351  001882                     u9370:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;main.c: 402:         int startDistance = motorADistance;
  4355  001882  C0E2  F08E         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  4356  001886  C0E3  F08F         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  4357                           
  4358                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4359  00188A  D00E               	goto	l7886
  4360  00188C                     l7884:
  4361                           
  4362                           ;main.c: 404:             setMotorSpeeds(30, 0, 0, 30);
  4363  00188C  0E00               	movlw	0
  4364  00188E  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4365  001890  0E1E               	movlw	30
  4366  001892  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4367  001894  0E00               	movlw	0
  4368  001896  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4369  001898  0E00               	movlw	0
  4370  00189A  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4371  00189C  0E00               	movlw	0
  4372  00189E  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4373  0018A0  0E1E               	movlw	30
  4374  0018A2  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4375  0018A4  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  4376  0018A8                     l7886:
  4377                           
  4378                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4379  0018A8  0100               	movlb	0	; () banked
  4380  0018AA  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4381  0018AC  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4382  0018AE  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  4383  0018B0  0A80               	xorlw	128
  4384  0018B2  6E72               	movwf	??_tirePositioning& (0+255),c
  4385  0018B4  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4386  0018B6  0A80               	xorlw	128
  4387  0018B8  5872               	subwfb	??_tirePositioning& (0+255),w,c
  4388  0018BA  B0D8               	btfsc	status,0,c
  4389  0018BC  D79F               	goto	u9350
  4390                           
  4391                           ; BSR set to: 0
  4392  0018BE  51E2               	movf	_motorADistance& (0+255),w,b	;volatile
  4393  0018C0  5D8E               	subwf	tirePositioning@startDistance& (0+255),w,b
  4394  0018C2  6E18               	movwf	abs@a,c
  4395  0018C4  51E3               	movf	(_motorADistance+1)& (0+255),w,b	;volatile
  4396  0018C6  598F               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  4397  0018C8  6E19               	movwf	abs@a+1,c
  4398  0018CA  EC6E  F01A         	call	_abs	;wreg free
  4399  0018CE  C018  F072         	movff	?_abs,??_tirePositioning
  4400  0018D2  C019  F073         	movff	?_abs+1,??_tirePositioning+1
  4401  0018D6  C096  F006         	movff	tirePositioning@distanceRecordedBottom,___awdiv@dividend
  4402  0018DA  C097  F007         	movff	tirePositioning@distanceRecordedBottom+1,___awdiv@dividend+1
  4403  0018DE  0E00               	movlw	0
  4404  0018E0  6E09               	movwf	___awdiv@divisor+1,c
  4405  0018E2  0E02               	movlw	2
  4406  0018E4  6E08               	movwf	___awdiv@divisor,c
  4407  0018E6  ECD3  F016         	call	___awdiv	;wreg free
  4408  0018EA  5006               	movf	?___awdiv,w,c
  4409  0018EC  5C72               	subwf	??_tirePositioning,w,c
  4410  0018EE  5073               	movf	??_tirePositioning+1,w,c
  4411  0018F0  0A80               	xorlw	128
  4412  0018F2  6E74               	movwf	(??_tirePositioning+2)& (0+255),c
  4413  0018F4  5007               	movf	?___awdiv+1,w,c
  4414  0018F6  0A80               	xorlw	128
  4415  0018F8  5874               	subwfb	(??_tirePositioning+2)& (0+255),w,c
  4416  0018FA  B0D8               	btfsc	status,0,c
  4417  0018FC  D77F               	goto	u9350
  4418  0018FE  D7C6               	goto	l7884
  4419  001900                     l7892:
  4420                           
  4421                           ;main.c: 410:     if (distanceRecordedTop < 170 && distanceRecordedBottom < 170){
  4422  001900  0100               	movlb	0	; () banked
  4423  001902  BF95               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4424  001904  D006               	goto	u9400
  4425  001906  5195               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4426  001908  E111               	bnz	l7902
  4427  00190A  0EAA               	movlw	170
  4428  00190C  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4429  00190E  B0D8               	btfsc	status,0,c
  4430  001910  D00D               	goto	l7902
  4431  001912                     u9400:
  4432                           
  4433                           ; BSR set to: 0
  4434  001912  BF97               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  4435  001914  D006               	goto	u9410
  4436  001916  5197               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4437  001918  E109               	bnz	l7902
  4438  00191A  0EAA               	movlw	170
  4439  00191C  5D96               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4440  00191E  B0D8               	btfsc	status,0,c
  4441  001920  D005               	goto	l7902
  4442  001922                     u9410:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 411:         return 0;
  4446  001922  0E00               	movlw	0
  4447  001924  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4448  001926  0E00               	movlw	0
  4449  001928  6F88               	movwf	?_tirePositioning& (0+255),b
  4450  00192A  0012               	return	
  4451  00192C                     l7902:
  4452                           
  4453                           ; BSR set to: 0
  4454  00192C  5196               	movf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4455  00192E  5D94               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4456  001930  6E18               	movwf	abs@a,c
  4457  001932  5197               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4458  001934  5995               	subwfb	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4459  001936  6E19               	movwf	abs@a+1,c
  4460  001938  EC6E  F01A         	call	_abs	;wreg free
  4461  00193C  BE19               	btfsc	?_abs+1,7,c
  4462  00193E  D00C               	goto	l7910
  4463  001940  5019               	movf	?_abs+1,w,c
  4464  001942  E104               	bnz	u9420
  4465  001944  0EB5               	movlw	181
  4466  001946  5C18               	subwf	?_abs,w,c
  4467  001948  A0D8               	btfss	status,0,c
  4468  00194A  D006               	goto	l7910
  4469  00194C                     u9420:
  4470                           
  4471                           ;main.c: 413:         return 1;
  4472  00194C  0E00               	movlw	0
  4473  00194E  0100               	movlb	0	; () banked
  4474  001950  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4475  001952  0E01               	movlw	1
  4476  001954  6F88               	movwf	?_tirePositioning& (0+255),b
  4477  001956  0012               	return	
  4478  001958                     l7910:
  4479                           
  4480                           ;main.c: 415:         return 2;
  4481  001958  0E00               	movlw	0
  4482  00195A  0100               	movlb	0	; () banked
  4483  00195C  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4484  00195E  0E02               	movlw	2
  4485  001960  6F88               	movwf	?_tirePositioning& (0+255),b
  4486                           
  4487                           ; BSR set to: 0
  4488  001962  0012               	return		;funcret
  4489  001964                     __end_of_tirePositioning:
  4490                           	opt callstack 0
  4491                           
  4492 ;; *************** function _opDelay *****************
  4493 ;; Defined at:
  4494 ;;		line 117 in file "main.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  millis          2    5[COMRAM] int 
  4497 ;;  maxOperation    2    7[COMRAM] int 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  startTime       2   12[COMRAM] int 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:        9 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    2
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_tirePositioning
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text9
  4524  0033B6                     __ptext9:
  4525                           	opt callstack 0
  4526  0033B6                     _opDelay:
  4527                           	opt callstack 26
  4528                           
  4529                           ;main.c: 118:     int startTime = millisecondsMeasured;
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;incstack = 0
  4533  0033B6  C077  F00D         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  4534  0033BA  C078  F00E         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  4535  0033BE                     l7640:
  4536                           
  4537                           ;main.c: 119:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  4538  0033BE  5008               	movf	opDelay@maxOperationTime,w,c
  4539  0033C0  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4540  0033C2  5078               	movf	_millisecondsMeasured+1,w,c	;volatile
  4541  0033C4  0A80               	xorlw	128
  4542  0033C6  6E0A               	movwf	??_opDelay& (0+255),c
  4543  0033C8  5009               	movf	opDelay@maxOperationTime+1,w,c
  4544  0033CA  0A80               	xorlw	128
  4545  0033CC  580A               	subwfb	??_opDelay& (0+255),w,c
  4546  0033CE  B0D8               	btfsc	status,0,c
  4547  0033D0  0012               	return	
  4548  0033D2  500D               	movf	opDelay@startTime,w,c
  4549  0033D4  5C77               	subwf	_millisecondsMeasured,w,c	;volatile
  4550  0033D6  6E0A               	movwf	??_opDelay& (0+255),c
  4551  0033D8  500E               	movf	opDelay@startTime+1,w,c
  4552  0033DA  5878               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4553  0033DC  6E0B               	movwf	(??_opDelay+1)& (0+255),c
  4554  0033DE  5006               	movf	opDelay@millis,w,c
  4555  0033E0  5C0A               	subwf	??_opDelay,w,c
  4556  0033E2  500B               	movf	??_opDelay+1,w,c
  4557  0033E4  0A80               	xorlw	128
  4558  0033E6  6E0C               	movwf	(??_opDelay+2)& (0+255),c
  4559  0033E8  5007               	movf	opDelay@millis+1,w,c
  4560  0033EA  0A80               	xorlw	128
  4561  0033EC  580C               	subwfb	(??_opDelay+2)& (0+255),w,c
  4562  0033EE  B0D8               	btfsc	status,0,c
  4563  0033F0  0012               	return	
  4564  0033F2  D7E5               	goto	l7640
  4565  0033F4                     __end_of_opDelay:
  4566                           	opt callstack 0
  4567                           
  4568 ;; *************** function ___awdiv *****************
  4569 ;; Defined at:
  4570 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  dividend        2    5[COMRAM] int 
  4573 ;;  divisor         2    7[COMRAM] int 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  quotient        2   11[COMRAM] int 
  4576 ;;  sign            1   10[COMRAM] unsigned char 
  4577 ;;  counter         1    9[COMRAM] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  2    5[COMRAM] int 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;Total ram usage:        8 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    2
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_tirePositioning
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text10
  4602  002DA6                     __ptext10:
  4603                           	opt callstack 0
  4604  002DA6                     ___awdiv:
  4605                           	opt callstack 26
  4606                           
  4607                           ;incstack = 0
  4608  002DA6  0E00               	movlw	0
  4609  002DA8  6E0B               	movwf	___awdiv@sign,c
  4610  002DAA  AE09               	btfss	___awdiv@divisor+1,7,c
  4611  002DAC  D006               	goto	l7728
  4612  002DAE  6C08               	negf	___awdiv@divisor,c
  4613  002DB0  1E09               	comf	___awdiv@divisor+1,f,c
  4614  002DB2  B0D8               	btfsc	status,0,c
  4615  002DB4  2A09               	incf	___awdiv@divisor+1,f,c
  4616  002DB6  0E01               	movlw	1
  4617  002DB8  6E0B               	movwf	___awdiv@sign,c
  4618  002DBA                     l7728:
  4619  002DBA  AE07               	btfss	___awdiv@dividend+1,7,c
  4620  002DBC  D006               	goto	l7734
  4621  002DBE  6C06               	negf	___awdiv@dividend,c
  4622  002DC0  1E07               	comf	___awdiv@dividend+1,f,c
  4623  002DC2  B0D8               	btfsc	status,0,c
  4624  002DC4  2A07               	incf	___awdiv@dividend+1,f,c
  4625  002DC6  0E01               	movlw	1
  4626  002DC8  1A0B               	xorwf	___awdiv@sign,f,c
  4627  002DCA                     l7734:
  4628  002DCA  0E00               	movlw	0
  4629  002DCC  6E0D               	movwf	___awdiv@quotient+1,c
  4630  002DCE  0E00               	movlw	0
  4631  002DD0  6E0C               	movwf	___awdiv@quotient,c
  4632  002DD2  5008               	movf	___awdiv@divisor,w,c
  4633  002DD4  1009               	iorwf	___awdiv@divisor+1,w,c
  4634  002DD6  B4D8               	btfsc	status,2,c
  4635  002DD8  D01C               	goto	l7756
  4636  002DDA  0E01               	movlw	1
  4637  002DDC  6E0A               	movwf	___awdiv@counter,c
  4638  002DDE  D004               	goto	l7742
  4639  002DE0                     l7740:
  4640  002DE0  90D8               	bcf	status,0,c
  4641  002DE2  3608               	rlcf	___awdiv@divisor,f,c
  4642  002DE4  3609               	rlcf	___awdiv@divisor+1,f,c
  4643  002DE6  2A0A               	incf	___awdiv@counter,f,c
  4644  002DE8                     l7742:
  4645  002DE8  AE09               	btfss	___awdiv@divisor+1,7,c
  4646  002DEA  D7FA               	goto	l7740
  4647  002DEC                     u9190:
  4648  002DEC  90D8               	bcf	status,0,c
  4649  002DEE  360C               	rlcf	___awdiv@quotient,f,c
  4650  002DF0  360D               	rlcf	___awdiv@quotient+1,f,c
  4651  002DF2  5008               	movf	___awdiv@divisor,w,c
  4652  002DF4  5C06               	subwf	___awdiv@dividend,w,c
  4653  002DF6  5009               	movf	___awdiv@divisor+1,w,c
  4654  002DF8  5807               	subwfb	___awdiv@dividend+1,w,c
  4655  002DFA  A0D8               	btfss	status,0,c
  4656  002DFC  D005               	goto	l7752
  4657  002DFE  5008               	movf	___awdiv@divisor,w,c
  4658  002E00  5E06               	subwf	___awdiv@dividend,f,c
  4659  002E02  5009               	movf	___awdiv@divisor+1,w,c
  4660  002E04  5A07               	subwfb	___awdiv@dividend+1,f,c
  4661  002E06  800C               	bsf	___awdiv@quotient,0,c
  4662  002E08                     l7752:
  4663  002E08  90D8               	bcf	status,0,c
  4664  002E0A  3209               	rrcf	___awdiv@divisor+1,f,c
  4665  002E0C  3208               	rrcf	___awdiv@divisor,f,c
  4666  002E0E  2E0A               	decfsz	___awdiv@counter,f,c
  4667  002E10  D7ED               	goto	u9190
  4668  002E12                     l7756:
  4669  002E12  500B               	movf	___awdiv@sign,w,c
  4670  002E14  B4D8               	btfsc	status,2,c
  4671  002E16  D004               	goto	l7760
  4672  002E18  6C0C               	negf	___awdiv@quotient,c
  4673  002E1A  1E0D               	comf	___awdiv@quotient+1,f,c
  4674  002E1C  B0D8               	btfsc	status,0,c
  4675  002E1E  2A0D               	incf	___awdiv@quotient+1,f,c
  4676  002E20                     l7760:
  4677  002E20  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4678  002E24  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4679  002E28  0012               	return		;funcret
  4680  002E2A                     __end_of___awdiv:
  4681                           	opt callstack 0
  4682                           
  4683 ;; *************** function _sendArduinoTireDropRequest *****************
  4684 ;; Defined at:
  4685 ;;		line 423 in file "main.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  data            1    0        unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;Total ram usage:        1 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    4
  4706 ;; This function calls:
  4707 ;;		_I2C_Master_Start
  4708 ;;		_I2C_Master_Stop
  4709 ;;		_I2C_Master_Write
  4710 ;; This function is called by:
  4711 ;;		_doOperation
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text11
  4716  00368E                     __ptext11:
  4717                           	opt callstack 0
  4718  00368E                     _sendArduinoTireDropRequest:
  4719                           	opt callstack 25
  4720                           
  4721                           ;main.c: 430:     I2C_Master_Start();
  4722                           
  4723                           ;incstack = 0
  4724  00368E  ECA9  F01B         	call	_I2C_Master_Start	;wreg free
  4725                           
  4726                           ;main.c: 431:     I2C_Master_Write(0b00010000);
  4727  003692  0E00               	movlw	0
  4728  003694  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4729  003696  0E10               	movlw	16
  4730  003698  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4731  00369A  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  4732                           
  4733                           ;main.c: 432:     I2C_Master_Write(data);
  4734  00369E  0E00               	movlw	0
  4735  0036A0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4736  0036A2  0E31               	movlw	49
  4737  0036A4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4738  0036A6  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  4739                           
  4740                           ;main.c: 433:     I2C_Master_Stop();
  4741  0036AA  ECA5  F01B         	call	_I2C_Master_Stop	;wreg free
  4742  0036AE  0012               	return		;funcret
  4743  0036B0                     __end_of_sendArduinoTireDropRequest:
  4744                           	opt callstack 0
  4745                           
  4746 ;; *************** function _requestIsTireDropDone *****************
  4747 ;; Defined at:
  4748 ;;		line 482 in file "main.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  data            1    8[COMRAM] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      _Bool 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;Total ram usage:        1 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    4
  4769 ;; This function calls:
  4770 ;;		_I2C_Master_Read
  4771 ;;		_I2C_Master_Start
  4772 ;;		_I2C_Master_Stop
  4773 ;;		_I2C_Master_Write
  4774 ;; This function is called by:
  4775 ;;		_doOperation
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text12
  4780  00359E                     __ptext12:
  4781                           	opt callstack 0
  4782  00359E                     _requestIsTireDropDone:
  4783                           	opt callstack 25
  4784                           
  4785                           ;main.c: 483:     I2C_Master_Start();
  4786                           
  4787                           ;incstack = 0
  4788  00359E  ECA9  F01B         	call	_I2C_Master_Start	;wreg free
  4789                           
  4790                           ;main.c: 484:     I2C_Master_Write(0b00010001);
  4791  0035A2  0E00               	movlw	0
  4792  0035A4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4793  0035A6  0E11               	movlw	17
  4794  0035A8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4795  0035AA  EC9C  F01B         	call	_I2C_Master_Write	;wreg free
  4796                           
  4797                           ;main.c: 485:     unsigned char data = I2C_Master_Read(1);
  4798  0035AE  0E01               	movlw	1
  4799  0035B0  EC35  F01B         	call	_I2C_Master_Read
  4800  0035B4  6E09               	movwf	requestIsTireDropDone@data,c
  4801                           
  4802                           ;main.c: 486:     I2C_Master_Stop();
  4803  0035B6  ECA5  F01B         	call	_I2C_Master_Stop	;wreg free
  4804                           
  4805                           ;main.c: 487:     if(data == '1'){
  4806  0035BA  0E31               	movlw	49
  4807  0035BC  1809               	xorwf	requestIsTireDropDone@data,w,c
  4808  0035BE  A4D8               	btfss	status,2,c
  4809  0035C0  D002               	goto	l7934
  4810                           
  4811                           ;main.c: 488:         return 1;
  4812  0035C2  0E01               	movlw	1
  4813  0035C4  0012               	return	
  4814  0035C6                     l7934:
  4815                           
  4816                           ;main.c: 490:     return 0;
  4817  0035C6  0E00               	movlw	0
  4818  0035C8  0012               	return		;funcret
  4819  0035CA                     __end_of_requestIsTireDropDone:
  4820                           	opt callstack 0
  4821                           
  4822 ;; *************** function _I2C_Master_Write *****************
  4823 ;; Defined at:
  4824 ;;		line 70 in file "I2C.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;Total ram usage:        2 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    3
  4845 ;; This function calls:
  4846 ;;		_I2C_Master_Wait
  4847 ;; This function is called by:
  4848 ;;		_sendArduinoTireDropRequest
  4849 ;;		_requestIsTireDropDone
  4850 ;;		_doOperation
  4851 ;;		_main
  4852 ;;		_rtc_set_time
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text13
  4857  003738                     __ptext13:
  4858                           	opt callstack 0
  4859  003738                     _I2C_Master_Write:
  4860                           	opt callstack 25
  4861                           
  4862                           ;I2C.c: 71:     I2C_Master_Wait();
  4863                           
  4864                           ;incstack = 0
  4865  003738  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  4866                           
  4867                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  4868  00373C  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  4869  003740  0012               	return		;funcret
  4870  003742                     __end_of_I2C_Master_Write:
  4871                           	opt callstack 0
  4872                           
  4873 ;; *************** function _I2C_Master_Stop *****************
  4874 ;; Defined at:
  4875 ;;		line 65 in file "I2C.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;Total ram usage:        0 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		_I2C_Master_Wait
  4898 ;; This function is called by:
  4899 ;;		_sendArduinoTireDropRequest
  4900 ;;		_requestIsTireDropDone
  4901 ;;		_doOperation
  4902 ;;		_main
  4903 ;;		_rtc_set_time
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text14
  4908  00374A                     __ptext14:
  4909                           	opt callstack 0
  4910  00374A                     _I2C_Master_Stop:
  4911                           	opt callstack 25
  4912                           
  4913                           ;I2C.c: 66:     I2C_Master_Wait();
  4914                           
  4915                           ;incstack = 0
  4916  00374A  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  4917                           
  4918                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  4919  00374E  84C5               	bsf	4037,2,c	;volatile
  4920  003750  0012               	return		;funcret
  4921  003752                     __end_of_I2C_Master_Stop:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _I2C_Master_Start *****************
  4925 ;; Defined at:
  4926 ;;		line 55 in file "I2C.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    3
  4947 ;; This function calls:
  4948 ;;		_I2C_Master_Wait
  4949 ;; This function is called by:
  4950 ;;		_sendArduinoTireDropRequest
  4951 ;;		_requestIsTireDropDone
  4952 ;;		_doOperation
  4953 ;;		_main
  4954 ;;		_rtc_set_time
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text15
  4959  003752                     __ptext15:
  4960                           	opt callstack 0
  4961  003752                     _I2C_Master_Start:
  4962                           	opt callstack 25
  4963                           
  4964                           ;I2C.c: 56:     I2C_Master_Wait();
  4965                           
  4966                           ;incstack = 0
  4967  003752  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  4968                           
  4969                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  4970  003756  80C5               	bsf	4037,0,c	;volatile
  4971  003758  0012               	return		;funcret
  4972  00375A                     __end_of_I2C_Master_Start:
  4973                           	opt callstack 0
  4974                           
  4975 ;; *************** function _I2C_Master_Read *****************
  4976 ;; Defined at:
  4977 ;;		line 77 in file "I2C.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  ackBit          1    wreg     unsigned char 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  ackBit          1    6[COMRAM] unsigned char 
  4982 ;;  receivedByte    1    7[COMRAM] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      unsigned char 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;Total ram usage:        2 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    3
  4999 ;; This function calls:
  5000 ;;		_I2C_Master_Wait
  5001 ;; This function is called by:
  5002 ;;		_requestIsTireDropDone
  5003 ;;		_main
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text16
  5008  00366A                     __ptext16:
  5009                           	opt callstack 0
  5010  00366A                     _I2C_Master_Read:
  5011                           	opt callstack 25
  5012                           
  5013                           ;incstack = 0
  5014                           ;I2C_Master_Read@ackBit stored from wreg
  5015  00366A  6E07               	movwf	I2C_Master_Read@ackBit,c
  5016                           
  5017                           ;I2C.c: 78:     I2C_Master_Wait();
  5018  00366C  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  5019                           
  5020                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5021  003670  86C5               	bsf	4037,3,c	;volatile
  5022                           
  5023                           ;I2C.c: 81:     I2C_Master_Wait();
  5024  003672  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  5025                           
  5026                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5027  003676  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5028                           
  5029                           ;I2C.c: 86:     I2C_Master_Wait();
  5030  00367A  EC7E  F01B         	call	_I2C_Master_Wait	;wreg free
  5031                           
  5032                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5033  00367E  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5034  003680  D002               	bra	u9115
  5035  003682  9AC5               	bcf	4037,5,c	;volatile
  5036  003684  D001               	bra	u9116
  5037  003686                     u9115:
  5038  003686  8AC5               	bsf	4037,5,c	;volatile
  5039  003688                     u9116:
  5040                           
  5041                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5042  003688  88C5               	bsf	4037,4,c	;volatile
  5043                           
  5044                           ;I2C.c: 90:     return receivedByte;
  5045  00368A  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5046  00368C  0012               	return		;funcret
  5047  00368E                     __end_of_I2C_Master_Read:
  5048                           	opt callstack 0
  5049                           
  5050 ;; *************** function _I2C_Master_Wait *****************
  5051 ;; Defined at:
  5052 ;;		line 21 in file "I2C.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        1 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    2
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_I2C_Master_Start
  5077 ;;		_I2C_Master_Stop
  5078 ;;		_I2C_Master_Write
  5079 ;;		_I2C_Master_Read
  5080 ;;		_I2C_Master_RepeatedStart
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text17
  5085  0036FC                     __ptext17:
  5086                           	opt callstack 0
  5087  0036FC                     _I2C_Master_Wait:
  5088                           	opt callstack 25
  5089                           
  5090                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5091                           
  5092                           ;I2C.c: 28:     }
  5093                           
  5094                           ;incstack = 0
  5095  0036FC  B4C7               	btfsc	4039,2,c	;volatile
  5096  0036FE  D7FE               	goto	_I2C_Master_Wait
  5097  003700  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5098  003704  0E1F               	movlw	31
  5099  003706  1606               	andwf	??_I2C_Master_Wait,f,c
  5100  003708  B4D8               	btfsc	status,2,c
  5101  00370A  0012               	return	
  5102  00370C  D7F7               	goto	_I2C_Master_Wait
  5103  00370E                     __end_of_I2C_Master_Wait:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function _init_motor_PWM *****************
  5107 ;; Defined at:
  5108 ;;		line 261 in file "main.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;Total ram usage:        0 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    2
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_doOperation
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text18
  5137  0035F4                     __ptext18:
  5138                           	opt callstack 0
  5139  0035F4                     _init_motor_PWM:
  5140                           	opt callstack 27
  5141                           
  5142                           ;main.c: 269:     TRISCbits.TRISC2 = 1;
  5143                           
  5144                           ;incstack = 0
  5145  0035F4  8494               	bsf	3988,2,c	;volatile
  5146                           
  5147                           ;main.c: 270:     TRISCbits.TRISC1 = 1;
  5148  0035F6  8294               	bsf	3988,1,c	;volatile
  5149                           
  5150                           ;main.c: 273:     const unsigned long FREQUENCY = 1000;;main.c: 274:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 275:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  5151  0035F8  0E9B               	movlw	155
  5152  0035FA  6ECB               	movwf	4043,c	;volatile
  5153                           
  5154                           ;main.c: 278:     P1M1 = 0;
  5155  0035FC  9EBD               	bcf	4029,7,c	;volatile
  5156                           
  5157                           ;main.c: 279:     P1M0 = 0;
  5158  0035FE  9CBD               	bcf	4029,6,c	;volatile
  5159                           
  5160                           ;main.c: 280:     CCP1M3 = 1;
  5161  003600  86BD               	bsf	4029,3,c	;volatile
  5162                           
  5163                           ;main.c: 281:     CCP1M2 = 1;
  5164  003602  84BD               	bsf	4029,2,c	;volatile
  5165                           
  5166                           ;main.c: 282:     CCP1M1 = 0;
  5167  003604  92BD               	bcf	4029,1,c	;volatile
  5168                           
  5169                           ;main.c: 283:     CCP1M0 = 0;
  5170  003606  90BD               	bcf	4029,0,c	;volatile
  5171                           
  5172                           ;main.c: 285:     CCP2M3 = 1;
  5173  003608  86BA               	bsf	4026,3,c	;volatile
  5174                           
  5175                           ;main.c: 286:     CCP2M2 = 1;
  5176  00360A  84BA               	bsf	4026,2,c	;volatile
  5177                           
  5178                           ;main.c: 287:     CCP2M1 = 0;
  5179  00360C  92BA               	bcf	4026,1,c	;volatile
  5180                           
  5181                           ;main.c: 288:     CCP2M0 = 0;
  5182  00360E  90BA               	bcf	4026,0,c	;volatile
  5183                           
  5184                           ;main.c: 291:     T2CKPS0 = 1;
  5185  003610  80CA               	bsf	4042,0,c	;volatile
  5186                           
  5187                           ;main.c: 292:     T2CKPS1 = 1;
  5188  003612  82CA               	bsf	4042,1,c	;volatile
  5189                           
  5190                           ;main.c: 295:     TMR2ON = 1;
  5191  003614  84CA               	bsf	4042,2,c	;volatile
  5192                           
  5193                           ;main.c: 298:     TRISCbits.TRISC2 = 0;
  5194  003616  9494               	bcf	3988,2,c	;volatile
  5195                           
  5196                           ;main.c: 299:     TRISCbits.TRISC1 = 0;
  5197  003618  9294               	bcf	3988,1,c	;volatile
  5198  00361A  0012               	return		;funcret
  5199  00361C                     __end_of_init_motor_PWM:
  5200                           	opt callstack 0
  5201                           
  5202 ;; *************** function _errorCorrectedMove *****************
  5203 ;; Defined at:
  5204 ;;		line 539 in file "main.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  goalSpeed       2    8[BANK0 ] int 
  5207 ;;  turnRatio       4   10[BANK0 ] float 
  5208 ;;  motorAStartD    2   14[BANK0 ] int 
  5209 ;;  motorBStartD    2   16[BANK0 ] int 
  5210 ;;  correctionCo    4   18[BANK0 ] float 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  BSpeed          2   30[BANK0 ] int 
  5213 ;;  ASpeed          2   28[BANK0 ] int 
  5214 ;;  error           2   26[BANK0 ] int 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5224 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;Total ram usage:       24 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    5
  5231 ;; This function calls:
  5232 ;;		___fladd
  5233 ;;		___fldiv
  5234 ;;		___flmul
  5235 ;;		___flsub
  5236 ;;		___fltol
  5237 ;;		___xxtofl
  5238 ;;		_setMotorSpeeds
  5239 ;; This function is called by:
  5240 ;;		_doOperation
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text19
  5245  001BEC                     __ptext19:
  5246                           	opt callstack 0
  5247  001BEC                     _errorCorrectedMove:
  5248                           	opt callstack 24
  5249                           
  5250                           ;main.c: 540:     int error = (int)((motorADistance - motorAStartDistance)-(motorBDistan
      +                          ce - motorBStartDistance)/turnRatio);
  5251                           
  5252                           ;incstack = 0
  5253  001BEC  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  5254  001BF0  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  5255  001BF4  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  5256  001BF8  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  5257  001BFC  0100               	movlb	0	; () banked
  5258  001BFE  5190               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  5259  001C00  5DE0               	subwf	_motorBDistance& (0+255),w,b	;volatile
  5260  001C02  6F96               	movwf	??_errorCorrectedMove& (0+255),b
  5261  001C04  5191               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  5262  001C06  59E1               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  5263  001C08  6F97               	movwf	(??_errorCorrectedMove+1)& (0+255),b
  5264  001C0A  C096  F006         	movff	??_errorCorrectedMove,___xxtofl@val
  5265  001C0E  C097  F007         	movff	??_errorCorrectedMove+1,___xxtofl@val+1
  5266  001C12  0E00               	movlw	0
  5267  001C14  BE07               	btfsc	___xxtofl@val+1,7,c
  5268  001C16  0EFF               	movlw	-1
  5269  001C18  6E08               	movwf	___xxtofl@val+2,c
  5270  001C1A  6E09               	movwf	___xxtofl@val+3,c
  5271  001C1C  0E01               	movlw	1
  5272  001C1E  EC06  F013         	call	___xxtofl
  5273  001C22  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5274  001C26  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5275  001C2A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5276  001C2E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5277  001C32  ECB2  F00C         	call	___fldiv	;wreg free
  5278  001C36  C02D  F04A         	movff	?___fldiv,___flsub@a
  5279  001C3A  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  5280  001C3E  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  5281  001C42  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  5282  001C46  0100               	movlb	0	; () banked
  5283  001C48  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  5284  001C4A  5DE2               	subwf	_motorADistance& (0+255),w,b	;volatile
  5285  001C4C  6F98               	movwf	(??_errorCorrectedMove+2)& (0+255),b
  5286  001C4E  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  5287  001C50  59E3               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5288  001C52  6F99               	movwf	(??_errorCorrectedMove+3)& (0+255),b
  5289  001C54  C098  F006         	movff	??_errorCorrectedMove+2,___xxtofl@val
  5290  001C58  C099  F007         	movff	??_errorCorrectedMove+3,___xxtofl@val+1
  5291  001C5C  0E00               	movlw	0
  5292  001C5E  BE07               	btfsc	___xxtofl@val+1,7,c
  5293  001C60  0EFF               	movlw	-1
  5294  001C62  6E08               	movwf	___xxtofl@val+2,c
  5295  001C64  6E09               	movwf	___xxtofl@val+3,c
  5296  001C66  0E01               	movlw	1
  5297  001C68  EC06  F013         	call	___xxtofl
  5298  001C6C  C006  F046         	movff	?___xxtofl,___flsub@b
  5299  001C70  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5300  001C74  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5301  001C78  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5302  001C7C  EC32  F019         	call	___flsub	;wreg free
  5303  001C80  C046  F04E         	movff	?___flsub,___fltol@f1
  5304  001C84  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5305  001C88  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5306  001C8C  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5307  001C90  ECE0  F015         	call	___fltol	;wreg free
  5308  001C94  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  5309  001C98  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  5310                           
  5311                           ;main.c: 541:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  5312  001C9C  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5313  001CA0  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5314  001CA4  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5315  001CA8  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5316  001CAC  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5317  001CB0  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5318  001CB4  0E00               	movlw	0
  5319  001CB6  BE07               	btfsc	___xxtofl@val+1,7,c
  5320  001CB8  0EFF               	movlw	-1
  5321  001CBA  6E08               	movwf	___xxtofl@val+2,c
  5322  001CBC  6E09               	movwf	___xxtofl@val+3,c
  5323  001CBE  0E01               	movlw	1
  5324  001CC0  EC06  F013         	call	___xxtofl
  5325  001CC4  C006  F014         	movff	?___xxtofl,___flmul@b
  5326  001CC8  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5327  001CCC  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5328  001CD0  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5329  001CD4  EC2F  F008         	call	___flmul	;wreg free
  5330  001CD8  C014  F04A         	movff	?___flmul,___flsub@a
  5331  001CDC  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  5332  001CE0  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  5333  001CE4  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  5334  001CE8  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5335  001CEC  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5336  001CF0  0E00               	movlw	0
  5337  001CF2  BE07               	btfsc	___xxtofl@val+1,7,c
  5338  001CF4  0EFF               	movlw	-1
  5339  001CF6  6E08               	movwf	___xxtofl@val+2,c
  5340  001CF8  6E09               	movwf	___xxtofl@val+3,c
  5341  001CFA  0E01               	movlw	1
  5342  001CFC  EC06  F013         	call	___xxtofl
  5343  001D00  C006  F046         	movff	?___xxtofl,___flsub@b
  5344  001D04  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5345  001D08  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5346  001D0C  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5347  001D10  EC32  F019         	call	___flsub	;wreg free
  5348  001D14  C046  F04E         	movff	?___flsub,___fltol@f1
  5349  001D18  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5350  001D1C  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5351  001D20  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5352  001D24  ECE0  F015         	call	___fltol	;wreg free
  5353  001D28  C04E  F09C         	movff	?___fltol,errorCorrectedMove@ASpeed
  5354  001D2C  C04F  F09D         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  5355                           
  5356                           ;main.c: 542:     int BSpeed = (int)((goalSpeed*turnRatio + error*correctionConstant));
  5357  001D30  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5358  001D34  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5359  001D38  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5360  001D3C  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5361  001D40  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5362  001D44  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5363  001D48  0E00               	movlw	0
  5364  001D4A  BE07               	btfsc	___xxtofl@val+1,7,c
  5365  001D4C  0EFF               	movlw	-1
  5366  001D4E  6E08               	movwf	___xxtofl@val+2,c
  5367  001D50  6E09               	movwf	___xxtofl@val+3,c
  5368  001D52  0E01               	movlw	1
  5369  001D54  EC06  F013         	call	___xxtofl
  5370  001D58  C006  F014         	movff	?___xxtofl,___flmul@b
  5371  001D5C  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5372  001D60  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5373  001D64  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5374  001D68  EC2F  F008         	call	___flmul	;wreg free
  5375  001D6C  C014  F031         	movff	?___flmul,___fladd@a
  5376  001D70  C015  F032         	movff	?___flmul+1,___fladd@a+1
  5377  001D74  C016  F033         	movff	?___flmul+2,___fladd@a+2
  5378  001D78  C017  F034         	movff	?___flmul+3,___fladd@a+3
  5379  001D7C  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  5380  001D80  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  5381  001D84  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  5382  001D88  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  5383  001D8C  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5384  001D90  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5385  001D94  0E00               	movlw	0
  5386  001D96  BE07               	btfsc	___xxtofl@val+1,7,c
  5387  001D98  0EFF               	movlw	-1
  5388  001D9A  6E08               	movwf	___xxtofl@val+2,c
  5389  001D9C  6E09               	movwf	___xxtofl@val+3,c
  5390  001D9E  0E01               	movlw	1
  5391  001DA0  EC06  F013         	call	___xxtofl
  5392  001DA4  C006  F014         	movff	?___xxtofl,___flmul@b
  5393  001DA8  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5394  001DAC  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5395  001DB0  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5396  001DB4  EC2F  F008         	call	___flmul	;wreg free
  5397  001DB8  C014  F02D         	movff	?___flmul,___fladd@b
  5398  001DBC  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5399  001DC0  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5400  001DC4  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5401  001DC8  ECD8  F009         	call	___fladd	;wreg free
  5402  001DCC  C02D  F04E         	movff	?___fladd,___fltol@f1
  5403  001DD0  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  5404  001DD4  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  5405  001DD8  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  5406  001DDC  ECE0  F015         	call	___fltol	;wreg free
  5407  001DE0  C04E  F09E         	movff	?___fltol,errorCorrectedMove@BSpeed
  5408  001DE4  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  5409                           
  5410                           ;main.c: 544:     if (ASpeed > 100){
  5411  001DE8  0100               	movlb	0	; () banked
  5412  001DEA  BF9D               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5413  001DEC  D00A               	goto	l7948
  5414  001DEE  519D               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  5415  001DF0  E104               	bnz	u9440
  5416  001DF2  0E65               	movlw	101
  5417  001DF4  5D9C               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  5418  001DF6  A0D8               	btfss	status,0,c
  5419  001DF8  D004               	goto	l7948
  5420  001DFA                     u9440:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;main.c: 545:         ASpeed = 100;
  5424  001DFA  0E00               	movlw	0
  5425  001DFC  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5426  001DFE  0E64               	movlw	100
  5427  001E00  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5428  001E02                     l7948:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;main.c: 547:     if (ASpeed < 0){
  5432  001E02  AF9D               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5433  001E04  D004               	goto	l7952
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;main.c: 548:         ASpeed = 0;
  5437  001E06  0E00               	movlw	0
  5438  001E08  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5439  001E0A  0E00               	movlw	0
  5440  001E0C  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5441  001E0E                     l7952:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;main.c: 550:     if (BSpeed > 100){
  5445  001E0E  BF9F               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5446  001E10  D00A               	goto	l7956
  5447  001E12  519F               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  5448  001E14  E104               	bnz	u9460
  5449  001E16  0E65               	movlw	101
  5450  001E18  5D9E               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  5451  001E1A  A0D8               	btfss	status,0,c
  5452  001E1C  D004               	goto	l7956
  5453  001E1E                     u9460:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;main.c: 551:         BSpeed = 100;
  5457  001E1E  0E00               	movlw	0
  5458  001E20  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5459  001E22  0E64               	movlw	100
  5460  001E24  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5461  001E26                     l7956:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;main.c: 553:     if (BSpeed < 0){
  5465  001E26  AF9F               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5466  001E28  D004               	goto	l7960
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;main.c: 554:         BSpeed = 0;
  5470  001E2A  0E00               	movlw	0
  5471  001E2C  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5472  001E2E  0E00               	movlw	0
  5473  001E30  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5474  001E32                     l7960:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;main.c: 557:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  5478  001E32  C09C  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  5479  001E36  C09D  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  5480  001E3A  0E01               	movlw	1
  5481  001E3C  6E6E               	movwf	setMotorSpeeds@Aforward,c
  5482  001E3E  0E01               	movlw	1
  5483  001E40  6E6F               	movwf	setMotorSpeeds@Bforward,c
  5484  001E42  C09E  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  5485  001E46  C09F  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  5486  001E4A  EC3D  F016         	call	_setMotorSpeeds	;wreg free
  5487  001E4E  0012               	return		;funcret
  5488  001E50                     __end_of_errorCorrectedMove:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _setMotorSpeeds *****************
  5492 ;; Defined at:
  5493 ;;		line 334 in file "main.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  motorASpeed     2  107[COMRAM] int 
  5496 ;;  Aforward        1  109[COMRAM] _Bool 
  5497 ;;  Bforward        1  110[COMRAM] _Bool 
  5498 ;;  motorBSpeed     2  111[COMRAM] int 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5510 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;Total ram usage:       14 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    4
  5517 ;; This function calls:
  5518 ;;		___xxtofl
  5519 ;;		_set_pwm_duty_cycle
  5520 ;; This function is called by:
  5521 ;;		_tirePositioning
  5522 ;;		_errorCorrectedMove
  5523 ;;		_doOperation
  5524 ;;		_PIDCorrectedMove
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text20
  5529  002C7A                     __ptext20:
  5530                           	opt callstack 0
  5531  002C7A                     _setMotorSpeeds:
  5532                           	opt callstack 24
  5533                           
  5534                           ;main.c: 335:     if (Aforward){
  5535                           
  5536                           ;incstack = 0
  5537  002C7A  506E               	movf	setMotorSpeeds@Aforward,w,c
  5538  002C7C  B4D8               	btfsc	status,2,c
  5539  002C7E  D003               	goto	l252
  5540                           
  5541                           ;main.c: 336:         LATAbits.LATA0 = 1;
  5542  002C80  8089               	bsf	3977,0,c	;volatile
  5543                           
  5544                           ;main.c: 337:         LATAbits.LATA1 = 0;
  5545  002C82  9289               	bcf	3977,1,c	;volatile
  5546                           
  5547                           ;main.c: 338:     } else {
  5548  002C84  D002               	goto	l7648
  5549  002C86                     l252:
  5550                           
  5551                           ;main.c: 339:         LATAbits.LATA0 = 0;
  5552  002C86  9089               	bcf	3977,0,c	;volatile
  5553                           
  5554                           ;main.c: 340:         LATAbits.LATA1 = 1;
  5555  002C88  8289               	bsf	3977,1,c	;volatile
  5556  002C8A                     l7648:
  5557                           
  5558                           ;main.c: 342:     if (Bforward){
  5559  002C8A  506F               	movf	setMotorSpeeds@Bforward,w,c
  5560  002C8C  B4D8               	btfsc	status,2,c
  5561  002C8E  D003               	goto	l254
  5562                           
  5563                           ;main.c: 343:         LATAbits.LATA2 = 1;
  5564  002C90  8489               	bsf	3977,2,c	;volatile
  5565                           
  5566                           ;main.c: 344:         LATAbits.LATA3 = 0;
  5567  002C92  9689               	bcf	3977,3,c	;volatile
  5568                           
  5569                           ;main.c: 345:     } else {
  5570  002C94  D002               	goto	l7652
  5571  002C96                     l254:
  5572                           
  5573                           ;main.c: 346:         LATAbits.LATA2 = 0;
  5574  002C96  9489               	bcf	3977,2,c	;volatile
  5575                           
  5576                           ;main.c: 347:         LATAbits.LATA3 = 1;
  5577  002C98  8689               	bsf	3977,3,c	;volatile
  5578  002C9A                     l7652:
  5579                           
  5580                           ;main.c: 350:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5581  002C9A  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  5582  002C9E  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  5583  002CA2  0E00               	movlw	0
  5584  002CA4  BE07               	btfsc	___xxtofl@val+1,7,c
  5585  002CA6  0EFF               	movlw	-1
  5586  002CA8  6E08               	movwf	___xxtofl@val+2,c
  5587  002CAA  6E09               	movwf	___xxtofl@val+3,c
  5588  002CAC  0E01               	movlw	1
  5589  002CAE  EC06  F013         	call	___xxtofl
  5590  002CB2  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2196
  5591  002CB6  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2196+1
  5592  002CBA  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2196+2
  5593  002CBE  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2196+3
  5594                           
  5595                           ;main.c: 350:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5596  002CC2  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  5597  002CC6  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  5598  002CCA  0E00               	movlw	0
  5599  002CCC  BE07               	btfsc	___xxtofl@val+1,7,c
  5600  002CCE  0EFF               	movlw	-1
  5601  002CD0  6E08               	movwf	___xxtofl@val+2,c
  5602  002CD2  6E09               	movwf	___xxtofl@val+3,c
  5603  002CD4  0E01               	movlw	1
  5604  002CD6  EC06  F013         	call	___xxtofl
  5605  002CDA  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2197
  5606  002CDE  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2197+1
  5607  002CE2  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2197+2
  5608  002CE6  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2197+3
  5609                           
  5610                           ;main.c: 350:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5611  002CEA  C080  F058         	movff	_setMotorSpeeds$2196,set_pwm_duty_cycle@dutyA
  5612  002CEE  C081  F059         	movff	_setMotorSpeeds$2196+1,set_pwm_duty_cycle@dutyA+1
  5613  002CF2  C082  F05A         	movff	_setMotorSpeeds$2196+2,set_pwm_duty_cycle@dutyA+2
  5614  002CF6  C083  F05B         	movff	_setMotorSpeeds$2196+3,set_pwm_duty_cycle@dutyA+3
  5615  002CFA  C084  F05C         	movff	_setMotorSpeeds$2197,set_pwm_duty_cycle@dutyB
  5616  002CFE  C085  F05D         	movff	_setMotorSpeeds$2197+1,set_pwm_duty_cycle@dutyB+1
  5617  002D02  C086  F05E         	movff	_setMotorSpeeds$2197+2,set_pwm_duty_cycle@dutyB+2
  5618  002D06  C087  F05F         	movff	_setMotorSpeeds$2197+3,set_pwm_duty_cycle@dutyB+3
  5619  002D0A  EC61  F011         	call	_set_pwm_duty_cycle	;wreg free
  5620  002D0E  0012               	return		;funcret
  5621  002D10                     __end_of_setMotorSpeeds:
  5622                           	opt callstack 0
  5623                           
  5624 ;; *************** function _set_pwm_duty_cycle *****************
  5625 ;; Defined at:
  5626 ;;		line 304 in file "main.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  dutyA           4   87[COMRAM] float 
  5629 ;;  dutyB           4   91[COMRAM] float 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  duty_valB       2  101[COMRAM] unsigned short 
  5632 ;;  duty_valA       2   99[COMRAM] unsigned short 
  5633 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;Total ram usage:       20 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    3
  5650 ;; This function calls:
  5651 ;;		___fldiv
  5652 ;;		___flge
  5653 ;;		___flmul
  5654 ;;		___fltol
  5655 ;;		___xxtofl
  5656 ;; This function is called by:
  5657 ;;		_setMotorSpeeds
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text21
  5662  0022C2                     __ptext21:
  5663                           	opt callstack 0
  5664  0022C2                     _set_pwm_duty_cycle:
  5665                           	opt callstack 24
  5666                           
  5667                           ;main.c: 305:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  5668                           
  5669                           ;incstack = 0
  5670  0022C2  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  5671  0022C4  0012               	return	
  5672  0022C6  0E00               	movlw	0
  5673  0022C8  6E06               	movwf	___flge@ff1,c
  5674  0022CA  0E00               	movlw	0
  5675  0022CC  6E07               	movwf	___flge@ff1+1,c
  5676  0022CE  0EC8               	movlw	200
  5677  0022D0  6E08               	movwf	___flge@ff1+2,c
  5678  0022D2  0E42               	movlw	66
  5679  0022D4  6E09               	movwf	___flge@ff1+3,c
  5680  0022D6  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  5681  0022DA  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  5682  0022DE  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  5683  0022E2  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  5684  0022E6  EC78  F015         	call	___flge	;wreg free
  5685  0022EA  A0D8               	btfss	status,0,c
  5686  0022EC  0012               	return	
  5687  0022EE  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  5688  0022F0  0012               	return	
  5689  0022F2  0E00               	movlw	0
  5690  0022F4  6E06               	movwf	___flge@ff1,c
  5691  0022F6  0E00               	movlw	0
  5692  0022F8  6E07               	movwf	___flge@ff1+1,c
  5693  0022FA  0EC8               	movlw	200
  5694  0022FC  6E08               	movwf	___flge@ff1+2,c
  5695  0022FE  0E42               	movlw	66
  5696  002300  6E09               	movwf	___flge@ff1+3,c
  5697  002302  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  5698  002306  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  5699  00230A  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  5700  00230E  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  5701  002312  EC78  F015         	call	___flge	;wreg free
  5702  002316  A0D8               	btfss	status,0,c
  5703  002318  0012               	return	
  5704                           
  5705                           ;main.c: 310:         unsigned short max_duty_val = PR2 + 1;
  5706  00231A  0E01               	movlw	1
  5707  00231C  24CB               	addwf	4043,w,c	;volatile
  5708  00231E  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  5709  002320  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  5710  002322  0E00               	movlw	0
  5711  002324  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  5712                           
  5713                           ;main.c: 316:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5714  002326  0E00               	movlw	0
  5715  002328  6E31               	movwf	___fldiv@a,c
  5716  00232A  0E00               	movlw	0
  5717  00232C  6E32               	movwf	___fldiv@a+1,c
  5718  00232E  0EC8               	movlw	200
  5719  002330  6E33               	movwf	___fldiv@a+2,c
  5720  002332  0E42               	movlw	66
  5721  002334  6E34               	movwf	___fldiv@a+3,c
  5722  002336  0E00               	movlw	0
  5723  002338  6E18               	movwf	___flmul@a,c
  5724  00233A  0E00               	movlw	0
  5725  00233C  6E19               	movwf	___flmul@a+1,c
  5726  00233E  0E80               	movlw	128
  5727  002340  6E1A               	movwf	___flmul@a+2,c
  5728  002342  0E40               	movlw	64
  5729  002344  6E1B               	movwf	___flmul@a+3,c
  5730  002346  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  5731  00234A  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  5732  00234E  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  5733  002352  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  5734  002356  EC2F  F008         	call	___flmul	;wreg free
  5735  00235A  C014  F02D         	movff	?___flmul,___fldiv@b
  5736  00235E  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5737  002362  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5738  002366  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5739  00236A  ECB2  F00C         	call	___fldiv	;wreg free
  5740  00236E  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2195
  5741  002372  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2195+1
  5742  002376  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2195+2
  5743  00237A  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2195+3
  5744                           
  5745                           ;main.c: 316:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5746  00237E  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  5747  002382  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  5748  002386  6A08               	clrf	___xxtofl@val+2,c
  5749  002388  6A09               	clrf	___xxtofl@val+3,c
  5750  00238A  0E00               	movlw	0
  5751  00238C  EC06  F013         	call	___xxtofl
  5752  002390  C006  F018         	movff	?___xxtofl,___flmul@a
  5753  002394  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  5754  002398  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  5755  00239C  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  5756  0023A0  C068  F014         	movff	_set_pwm_duty_cycle$2195,___flmul@b
  5757  0023A4  C069  F015         	movff	_set_pwm_duty_cycle$2195+1,___flmul@b+1
  5758  0023A8  C06A  F016         	movff	_set_pwm_duty_cycle$2195+2,___flmul@b+2
  5759  0023AC  C06B  F017         	movff	_set_pwm_duty_cycle$2195+3,___flmul@b+3
  5760  0023B0  EC2F  F008         	call	___flmul	;wreg free
  5761  0023B4  C014  F04E         	movff	?___flmul,___fltol@f1
  5762  0023B8  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  5763  0023BC  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  5764  0023C0  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  5765  0023C4  ECE0  F015         	call	___fltol	;wreg free
  5766  0023C8  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  5767  0023CC  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  5768                           
  5769                           ;main.c: 317:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  5770  0023D0  0E00               	movlw	0
  5771  0023D2  6E31               	movwf	___fldiv@a,c
  5772  0023D4  0E00               	movlw	0
  5773  0023D6  6E32               	movwf	___fldiv@a+1,c
  5774  0023D8  0EC8               	movlw	200
  5775  0023DA  6E33               	movwf	___fldiv@a+2,c
  5776  0023DC  0E42               	movlw	66
  5777  0023DE  6E34               	movwf	___fldiv@a+3,c
  5778  0023E0  0E00               	movlw	0
  5779  0023E2  6E18               	movwf	___flmul@a,c
  5780  0023E4  0E00               	movlw	0
  5781  0023E6  6E19               	movwf	___flmul@a+1,c
  5782  0023E8  0E80               	movlw	128
  5783  0023EA  6E1A               	movwf	___flmul@a+2,c
  5784  0023EC  0E40               	movlw	64
  5785  0023EE  6E1B               	movwf	___flmul@a+3,c
  5786  0023F0  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  5787  0023F4  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  5788  0023F8  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  5789  0023FC  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  5790  002400  EC2F  F008         	call	___flmul	;wreg free
  5791  002404  C014  F02D         	movff	?___flmul,___fldiv@b
  5792  002408  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5793  00240C  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5794  002410  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5795  002414  ECB2  F00C         	call	___fldiv	;wreg free
  5796  002418  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2195
  5797  00241C  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2195+1
  5798  002420  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2195+2
  5799  002424  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2195+3
  5800                           
  5801                           ;main.c: 317:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  5802  002428  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  5803  00242C  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  5804  002430  6A08               	clrf	___xxtofl@val+2,c
  5805  002432  6A09               	clrf	___xxtofl@val+3,c
  5806  002434  0E00               	movlw	0
  5807  002436  EC06  F013         	call	___xxtofl
  5808  00243A  C006  F018         	movff	?___xxtofl,___flmul@a
  5809  00243E  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  5810  002442  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  5811  002446  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  5812  00244A  C068  F014         	movff	_set_pwm_duty_cycle$2195,___flmul@b
  5813  00244E  C069  F015         	movff	_set_pwm_duty_cycle$2195+1,___flmul@b+1
  5814  002452  C06A  F016         	movff	_set_pwm_duty_cycle$2195+2,___flmul@b+2
  5815  002456  C06B  F017         	movff	_set_pwm_duty_cycle$2195+3,___flmul@b+3
  5816  00245A  EC2F  F008         	call	___flmul	;wreg free
  5817  00245E  C014  F04E         	movff	?___flmul,___fltol@f1
  5818  002462  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  5819  002466  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  5820  00246A  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  5821  00246E  ECE0  F015         	call	___fltol	;wreg free
  5822  002472  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  5823  002476  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  5824                           
  5825                           ;main.c: 321:         CCP1X = duty_valA & 2;
  5826  00247A  9ABD               	bcf	4029,5,c	;volatile
  5827                           
  5828                           ;main.c: 322:         CCP1Y = duty_valA & 1;
  5829  00247C  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  5830  00247E  D002               	goto	u8470
  5831  002480  88BD               	bsf	4029,4,c	;volatile
  5832  002482  D001               	goto	u8485
  5833  002484                     u8470:
  5834  002484  98BD               	bcf	4029,4,c	;volatile
  5835  002486                     u8485:
  5836                           
  5837                           ;main.c: 323:         CCPR1L = duty_valA >> 2;
  5838  002486  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  5839  00248A  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  5840  00248E  90D8               	bcf	status,0,c
  5841  002490  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5842  002492  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5843  002494  90D8               	bcf	status,0,c
  5844  002496  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5845  002498  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5846  00249A  5060               	movf	??_set_pwm_duty_cycle,w,c
  5847  00249C  6EBE               	movwf	4030,c	;volatile
  5848                           
  5849                           ;main.c: 327:         CCP2X = duty_valB & 2;
  5850  00249E  9ABA               	bcf	4026,5,c	;volatile
  5851                           
  5852                           ;main.c: 328:         CCP2Y = duty_valB & 1;
  5853  0024A0  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  5854  0024A2  D002               	goto	u8490
  5855  0024A4  88BA               	bsf	4026,4,c	;volatile
  5856  0024A6  D001               	goto	u8505
  5857  0024A8                     u8490:
  5858  0024A8  98BA               	bcf	4026,4,c	;volatile
  5859  0024AA                     u8505:
  5860                           
  5861                           ;main.c: 329:         CCPR2L = duty_valB >> 2;
  5862  0024AA  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  5863  0024AE  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  5864  0024B2  90D8               	bcf	status,0,c
  5865  0024B4  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5866  0024B6  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5867  0024B8  90D8               	bcf	status,0,c
  5868  0024BA  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5869  0024BC  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5870  0024BE  5060               	movf	??_set_pwm_duty_cycle,w,c
  5871  0024C0  6EBB               	movwf	4027,c	;volatile
  5872  0024C2  0012               	return		;funcret
  5873  0024C4                     __end_of_set_pwm_duty_cycle:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function ___xxtofl *****************
  5877 ;; Defined at:
  5878 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  sign            1    wreg     unsigned char 
  5881 ;;  val             4    5[COMRAM] long 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  sign            1   13[COMRAM] unsigned char 
  5884 ;;  arg             4   15[COMRAM] unsigned long 
  5885 ;;  exp             1   14[COMRAM] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  4    5[COMRAM] unsigned char 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;Total ram usage:       14 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    2
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_set_pwm_duty_cycle
  5906 ;;		_setMotorSpeeds
  5907 ;;		_errorCorrectedMove
  5908 ;;		_PIDCorrectedMove
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text22
  5913  00260C                     __ptext22:
  5914                           	opt callstack 0
  5915  00260C                     ___xxtofl:
  5916                           	opt callstack 24
  5917                           
  5918                           ;incstack = 0
  5919                           ;___xxtofl@sign stored from wreg
  5920  00260C  6E0E               	movwf	___xxtofl@sign,c
  5921  00260E  500E               	movf	___xxtofl@sign,w,c
  5922  002610  A4D8               	btfss	status,2,c
  5923  002612  AE09               	btfss	___xxtofl@val+3,7,c
  5924  002614  D01A               	goto	l1346
  5925  002616  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5926  00261A  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5927  00261E  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5928  002622  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5929  002626  1E0A               	comf	??___xxtofl,f,c
  5930  002628  1E0B               	comf	??___xxtofl+1,f,c
  5931  00262A  1E0C               	comf	??___xxtofl+2,f,c
  5932  00262C  1E0D               	comf	??___xxtofl+3,f,c
  5933  00262E  2A0A               	incf	??___xxtofl,f,c
  5934  002630  0E00               	movlw	0
  5935  002632  220B               	addwfc	??___xxtofl+1,f,c
  5936  002634  220C               	addwfc	??___xxtofl+2,f,c
  5937  002636  220D               	addwfc	??___xxtofl+3,f,c
  5938  002638  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5939  00263C  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5940  002640  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5941  002644  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5942  002648  D008               	goto	l7236
  5943  00264A                     l1346:
  5944  00264A  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5945  00264E  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5946  002652  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5947  002656  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5948  00265A                     l7236:
  5949  00265A  5006               	movf	___xxtofl@val,w,c
  5950  00265C  1007               	iorwf	___xxtofl@val+1,w,c
  5951  00265E  1008               	iorwf	___xxtofl@val+2,w,c
  5952  002660  1009               	iorwf	___xxtofl@val+3,w,c
  5953  002662  A4D8               	btfss	status,2,c
  5954  002664  D009               	goto	l7242
  5955  002666  0E00               	movlw	0
  5956  002668  6E06               	movwf	?___xxtofl,c
  5957  00266A  0E00               	movlw	0
  5958  00266C  6E07               	movwf	?___xxtofl+1,c
  5959  00266E  0E00               	movlw	0
  5960  002670  6E08               	movwf	?___xxtofl+2,c
  5961  002672  0E00               	movlw	0
  5962  002674  6E09               	movwf	?___xxtofl+3,c
  5963  002676  0012               	return	
  5964  002678                     l7242:
  5965  002678  0E96               	movlw	150
  5966  00267A  6E0F               	movwf	___xxtofl@exp,c
  5967  00267C  D006               	goto	l7246
  5968  00267E                     l7244:
  5969  00267E  2A0F               	incf	___xxtofl@exp,f,c
  5970  002680  90D8               	bcf	status,0,c
  5971  002682  3213               	rrcf	___xxtofl@arg+3,f,c
  5972  002684  3212               	rrcf	___xxtofl@arg+2,f,c
  5973  002686  3211               	rrcf	___xxtofl@arg+1,f,c
  5974  002688  3210               	rrcf	___xxtofl@arg,f,c
  5975  00268A                     l7246:
  5976  00268A  0E00               	movlw	0
  5977  00268C  1410               	andwf	___xxtofl@arg,w,c
  5978  00268E  6E0A               	movwf	??___xxtofl& (0+255),c
  5979  002690  0E00               	movlw	0
  5980  002692  1411               	andwf	___xxtofl@arg+1,w,c
  5981  002694  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  5982  002696  0E00               	movlw	0
  5983  002698  1412               	andwf	___xxtofl@arg+2,w,c
  5984  00269A  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  5985  00269C  0EFE               	movlw	254
  5986  00269E  1413               	andwf	___xxtofl@arg+3,w,c
  5987  0026A0  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  5988  0026A2  500A               	movf	??___xxtofl,w,c
  5989  0026A4  100B               	iorwf	??___xxtofl+1,w,c
  5990  0026A6  100C               	iorwf	??___xxtofl+2,w,c
  5991  0026A8  100D               	iorwf	??___xxtofl+3,w,c
  5992  0026AA  B4D8               	btfsc	status,2,c
  5993  0026AC  D00D               	goto	l1353
  5994  0026AE  D7E7               	goto	l7244
  5995  0026B0                     l7248:
  5996  0026B0  2A0F               	incf	___xxtofl@exp,f,c
  5997  0026B2  0E01               	movlw	1
  5998  0026B4  2610               	addwf	___xxtofl@arg,f,c
  5999  0026B6  0E00               	movlw	0
  6000  0026B8  2211               	addwfc	___xxtofl@arg+1,f,c
  6001  0026BA  2212               	addwfc	___xxtofl@arg+2,f,c
  6002  0026BC  2213               	addwfc	___xxtofl@arg+3,f,c
  6003  0026BE  90D8               	bcf	status,0,c
  6004  0026C0  3213               	rrcf	___xxtofl@arg+3,f,c
  6005  0026C2  3212               	rrcf	___xxtofl@arg+2,f,c
  6006  0026C4  3211               	rrcf	___xxtofl@arg+1,f,c
  6007  0026C6  3210               	rrcf	___xxtofl@arg,f,c
  6008  0026C8                     l1353:
  6009  0026C8  0E00               	movlw	0
  6010  0026CA  1410               	andwf	___xxtofl@arg,w,c
  6011  0026CC  6E0A               	movwf	??___xxtofl& (0+255),c
  6012  0026CE  0E00               	movlw	0
  6013  0026D0  1411               	andwf	___xxtofl@arg+1,w,c
  6014  0026D2  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6015  0026D4  0E00               	movlw	0
  6016  0026D6  1412               	andwf	___xxtofl@arg+2,w,c
  6017  0026D8  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6018  0026DA  0EFF               	movlw	255
  6019  0026DC  1413               	andwf	___xxtofl@arg+3,w,c
  6020  0026DE  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6021  0026E0  500A               	movf	??___xxtofl,w,c
  6022  0026E2  100B               	iorwf	??___xxtofl+1,w,c
  6023  0026E4  100C               	iorwf	??___xxtofl+2,w,c
  6024  0026E6  100D               	iorwf	??___xxtofl+3,w,c
  6025  0026E8  B4D8               	btfsc	status,2,c
  6026  0026EA  D007               	goto	l7256
  6027  0026EC  D7E1               	goto	l7248
  6028  0026EE                     l7254:
  6029  0026EE  060F               	decf	___xxtofl@exp,f,c
  6030  0026F0  90D8               	bcf	status,0,c
  6031  0026F2  3610               	rlcf	___xxtofl@arg,f,c
  6032  0026F4  3611               	rlcf	___xxtofl@arg+1,f,c
  6033  0026F6  3612               	rlcf	___xxtofl@arg+2,f,c
  6034  0026F8  3613               	rlcf	___xxtofl@arg+3,f,c
  6035  0026FA                     l7256:
  6036  0026FA  BE12               	btfsc	___xxtofl@arg+2,7,c
  6037  0026FC  D003               	goto	u8390
  6038  0026FE  0E02               	movlw	2
  6039  002700  600F               	cpfslt	___xxtofl@exp,c
  6040  002702  D7F5               	goto	l7254
  6041  002704                     u8390:
  6042  002704  A00F               	btfss	___xxtofl@exp,0,c
  6043  002706  9E12               	bcf	___xxtofl@arg+2,7,c
  6044  002708  90D8               	bcf	status,0,c
  6045  00270A  320F               	rrcf	___xxtofl@exp,f,c
  6046  00270C  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6047  002710  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6048  002712  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6049  002714  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6050  002716  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6051  00271A  6A0C               	clrf	??___xxtofl+2,c
  6052  00271C  6A0B               	clrf	??___xxtofl+1,c
  6053  00271E  6A0A               	clrf	??___xxtofl,c
  6054  002720  500A               	movf	??___xxtofl,w,c
  6055  002722  1210               	iorwf	___xxtofl@arg,f,c
  6056  002724  500B               	movf	??___xxtofl+1,w,c
  6057  002726  1211               	iorwf	___xxtofl@arg+1,f,c
  6058  002728  500C               	movf	??___xxtofl+2,w,c
  6059  00272A  1212               	iorwf	___xxtofl@arg+2,f,c
  6060  00272C  500D               	movf	??___xxtofl+3,w,c
  6061  00272E  1213               	iorwf	___xxtofl@arg+3,f,c
  6062  002730  500E               	movf	___xxtofl@sign,w,c
  6063  002732  A4D8               	btfss	status,2,c
  6064  002734  AE09               	btfss	___xxtofl@val+3,7,c
  6065  002736  D001               	goto	l7272
  6066  002738  8E13               	bsf	___xxtofl@arg+3,7,c
  6067  00273A                     l7272:
  6068  00273A  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6069  00273E  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6070  002742  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6071  002746  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6072  00274A  0012               	return		;funcret
  6073  00274C                     __end_of___xxtofl:
  6074                           	opt callstack 0
  6075                           
  6076 ;; *************** function ___fltol *****************
  6077 ;; Defined at:
  6078 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  f1              4   77[COMRAM] unsigned char 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  exp1            1   86[COMRAM] unsigned char 
  6083 ;;  sign1           1   85[COMRAM] unsigned char 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  4   77[COMRAM] long 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;Total ram usage:       10 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    2
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_set_pwm_duty_cycle
  6104 ;;		_errorCorrectedMove
  6105 ;;		_PIDCorrectedMove
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text23
  6110  002BC0                     __ptext23:
  6111                           	opt callstack 0
  6112  002BC0                     ___fltol:
  6113                           	opt callstack 24
  6114                           
  6115                           ;incstack = 0
  6116  002BC0  3450               	rlcf	___fltol@f1+2,w,c
  6117  002BC2  3451               	rlcf	___fltol@f1+3,w,c
  6118  002BC4  6E57               	movwf	___fltol@exp1,c
  6119  002BC6  5057               	movf	___fltol@exp1,w,c
  6120  002BC8  A4D8               	btfss	status,2,c
  6121  002BCA  D009               	goto	l7192
  6122  002BCC                     u8260:
  6123  002BCC  0E00               	movlw	0
  6124  002BCE  6E4E               	movwf	?___fltol,c
  6125  002BD0  0E00               	movlw	0
  6126  002BD2  6E4F               	movwf	?___fltol+1,c
  6127  002BD4  0E00               	movlw	0
  6128  002BD6  6E50               	movwf	?___fltol+2,c
  6129  002BD8  0E00               	movlw	0
  6130  002BDA  6E51               	movwf	?___fltol+3,c
  6131  002BDC  0012               	return	
  6132  002BDE                     l7192:
  6133  002BDE  C04E  F052         	movff	___fltol@f1,??___fltol
  6134  002BE2  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  6135  002BE6  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  6136  002BEA  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  6137  002BEE  0E20               	movlw	32
  6138  002BF0  D005               	goto	u8270
  6139  002BF2                     u8275:
  6140  002BF2  90D8               	bcf	status,0,c
  6141  002BF4  3255               	rrcf	??___fltol+3,f,c
  6142  002BF6  3254               	rrcf	??___fltol+2,f,c
  6143  002BF8  3253               	rrcf	??___fltol+1,f,c
  6144  002BFA  3252               	rrcf	??___fltol,f,c
  6145  002BFC                     u8270:
  6146  002BFC  2EE8               	decfsz	wreg,f,c
  6147  002BFE  D7F9               	goto	u8275
  6148  002C00  5052               	movf	??___fltol,w,c
  6149  002C02  6E56               	movwf	___fltol@sign1,c
  6150  002C04  8E50               	bsf	___fltol@f1+2,7,c
  6151  002C06  0EFF               	movlw	255
  6152  002C08  164E               	andwf	___fltol@f1,f,c
  6153  002C0A  0EFF               	movlw	255
  6154  002C0C  164F               	andwf	___fltol@f1+1,f,c
  6155  002C0E  0EFF               	movlw	255
  6156  002C10  1650               	andwf	___fltol@f1+2,f,c
  6157  002C12  0E00               	movlw	0
  6158  002C14  1651               	andwf	___fltol@f1+3,f,c
  6159  002C16  0E96               	movlw	150
  6160  002C18  5E57               	subwf	___fltol@exp1,f,c
  6161  002C1A  AE57               	btfss	___fltol@exp1,7,c
  6162  002C1C  D00D               	goto	l7212
  6163  002C1E  5057               	movf	___fltol@exp1,w,c
  6164  002C20  0A80               	xorlw	128
  6165  002C22  0F97               	addlw	151
  6166  002C24  A0D8               	btfss	status,0,c
  6167  002C26  D7D2               	goto	u8260
  6168  002C28                     l7208:
  6169  002C28  90D8               	bcf	status,0,c
  6170  002C2A  3251               	rrcf	___fltol@f1+3,f,c
  6171  002C2C  3250               	rrcf	___fltol@f1+2,f,c
  6172  002C2E  324F               	rrcf	___fltol@f1+1,f,c
  6173  002C30  324E               	rrcf	___fltol@f1,f,c
  6174  002C32  3E57               	incfsz	___fltol@exp1,f,c
  6175  002C34  D7F9               	goto	l7208
  6176  002C36  D00D               	goto	u8310
  6177  002C38                     l7212:
  6178  002C38  0E1F               	movlw	31
  6179  002C3A  6457               	cpfsgt	___fltol@exp1,c
  6180  002C3C  D007               	goto	l7220
  6181  002C3E  D7C6               	goto	u8260
  6182  002C40                     l7218:
  6183  002C40  90D8               	bcf	status,0,c
  6184  002C42  364E               	rlcf	___fltol@f1,f,c
  6185  002C44  364F               	rlcf	___fltol@f1+1,f,c
  6186  002C46  3650               	rlcf	___fltol@f1+2,f,c
  6187  002C48  3651               	rlcf	___fltol@f1+3,f,c
  6188  002C4A  0657               	decf	___fltol@exp1,f,c
  6189  002C4C                     l7220:
  6190  002C4C  5057               	movf	___fltol@exp1,w,c
  6191  002C4E  A4D8               	btfss	status,2,c
  6192  002C50  D7F7               	goto	l7218
  6193  002C52                     u8310:
  6194  002C52  5056               	movf	___fltol@sign1,w,c
  6195  002C54  B4D8               	btfsc	status,2,c
  6196  002C56  D008               	goto	l7226
  6197  002C58  1E51               	comf	___fltol@f1+3,f,c
  6198  002C5A  1E50               	comf	___fltol@f1+2,f,c
  6199  002C5C  1E4F               	comf	___fltol@f1+1,f,c
  6200  002C5E  6C4E               	negf	___fltol@f1,c
  6201  002C60  0E00               	movlw	0
  6202  002C62  224F               	addwfc	___fltol@f1+1,f,c
  6203  002C64  2250               	addwfc	___fltol@f1+2,f,c
  6204  002C66  2251               	addwfc	___fltol@f1+3,f,c
  6205  002C68                     l7226:
  6206  002C68  C04E  F04E         	movff	___fltol@f1,?___fltol
  6207  002C6C  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  6208  002C70  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  6209  002C74  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  6210  002C78  0012               	return		;funcret
  6211  002C7A                     __end_of___fltol:
  6212                           	opt callstack 0
  6213                           
  6214 ;; *************** function ___flmul *****************
  6215 ;; Defined at:
  6216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  b               4   19[COMRAM] long 
  6219 ;;  a               4   23[COMRAM] long 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  prod            4   38[COMRAM] struct .
  6222 ;;  grs             4   33[COMRAM] unsigned long 
  6223 ;;  temp            2   42[COMRAM] struct .
  6224 ;;  bexp            1   37[COMRAM] unsigned char 
  6225 ;;  aexp            1   32[COMRAM] unsigned char 
  6226 ;;  sign            1   31[COMRAM] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  4   19[COMRAM] unsigned char 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0, prodl, prodh
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:       25 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:    2
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_set_pwm_duty_cycle
  6247 ;;		_errorCorrectedMove
  6248 ;;		_PIDCorrectedMove
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text24
  6253  00105E                     __ptext24:
  6254                           	opt callstack 0
  6255  00105E                     ___flmul:
  6256                           	opt callstack 24
  6257                           
  6258                           ;incstack = 0
  6259  00105E  5017               	movf	___flmul@b+3,w,c
  6260  001060  0B80               	andlw	128
  6261  001062  6E20               	movwf	___flmul@sign,c
  6262  001064  5017               	movf	___flmul@b+3,w,c
  6263  001066  2417               	addwf	___flmul@b+3,w,c
  6264  001068  6E26               	movwf	___flmul@bexp,c
  6265  00106A  BE16               	btfsc	___flmul@b+2,7,c
  6266  00106C  8026               	bsf	___flmul@bexp,0,c
  6267  00106E  5026               	movf	___flmul@bexp,w,c
  6268  001070  B4D8               	btfsc	status,2,c
  6269  001072  D00D               	goto	l7048
  6270  001074  2826               	incf	___flmul@bexp,w,c
  6271  001076  A4D8               	btfss	status,2,c
  6272  001078  D008               	goto	l7046
  6273  00107A  0E00               	movlw	0
  6274  00107C  6E14               	movwf	___flmul@b,c
  6275  00107E  0E00               	movlw	0
  6276  001080  6E15               	movwf	___flmul@b+1,c
  6277  001082  0E00               	movlw	0
  6278  001084  6E16               	movwf	___flmul@b+2,c
  6279  001086  0E00               	movlw	0
  6280  001088  6E17               	movwf	___flmul@b+3,c
  6281  00108A                     l7046:
  6282  00108A  8E16               	bsf	___flmul@b+2,7,c
  6283  00108C  D008               	goto	l7050
  6284  00108E                     l7048:
  6285  00108E  0E00               	movlw	0
  6286  001090  6E14               	movwf	___flmul@b,c
  6287  001092  0E00               	movlw	0
  6288  001094  6E15               	movwf	___flmul@b+1,c
  6289  001096  0E00               	movlw	0
  6290  001098  6E16               	movwf	___flmul@b+2,c
  6291  00109A  0E00               	movlw	0
  6292  00109C  6E17               	movwf	___flmul@b+3,c
  6293  00109E                     l7050:
  6294  00109E  501B               	movf	___flmul@a+3,w,c
  6295  0010A0  0B80               	andlw	128
  6296  0010A2  1A20               	xorwf	___flmul@sign,f,c
  6297  0010A4  501B               	movf	___flmul@a+3,w,c
  6298  0010A6  241B               	addwf	___flmul@a+3,w,c
  6299  0010A8  6E21               	movwf	___flmul@aexp,c
  6300  0010AA  BE1A               	btfsc	___flmul@a+2,7,c
  6301  0010AC  8021               	bsf	___flmul@aexp,0,c
  6302  0010AE  5021               	movf	___flmul@aexp,w,c
  6303  0010B0  B4D8               	btfsc	status,2,c
  6304  0010B2  D00D               	goto	l7066
  6305  0010B4  2821               	incf	___flmul@aexp,w,c
  6306  0010B6  A4D8               	btfss	status,2,c
  6307  0010B8  D008               	goto	l7064
  6308  0010BA  0E00               	movlw	0
  6309  0010BC  6E18               	movwf	___flmul@a,c
  6310  0010BE  0E00               	movlw	0
  6311  0010C0  6E19               	movwf	___flmul@a+1,c
  6312  0010C2  0E00               	movlw	0
  6313  0010C4  6E1A               	movwf	___flmul@a+2,c
  6314  0010C6  0E00               	movlw	0
  6315  0010C8  6E1B               	movwf	___flmul@a+3,c
  6316  0010CA                     l7064:
  6317  0010CA  8E1A               	bsf	___flmul@a+2,7,c
  6318  0010CC  D008               	goto	l1305
  6319  0010CE                     l7066:
  6320  0010CE  0E00               	movlw	0
  6321  0010D0  6E18               	movwf	___flmul@a,c
  6322  0010D2  0E00               	movlw	0
  6323  0010D4  6E19               	movwf	___flmul@a+1,c
  6324  0010D6  0E00               	movlw	0
  6325  0010D8  6E1A               	movwf	___flmul@a+2,c
  6326  0010DA  0E00               	movlw	0
  6327  0010DC  6E1B               	movwf	___flmul@a+3,c
  6328  0010DE                     l1305:
  6329  0010DE  5021               	movf	___flmul@aexp,w,c
  6330  0010E0  B4D8               	btfsc	status,2,c
  6331  0010E2  D003               	goto	u8090
  6332  0010E4  5026               	movf	___flmul@bexp,w,c
  6333  0010E6  A4D8               	btfss	status,2,c
  6334  0010E8  D009               	goto	l7074
  6335  0010EA                     u8090:
  6336  0010EA  0E00               	movlw	0
  6337  0010EC  6E14               	movwf	?___flmul,c
  6338  0010EE  0E00               	movlw	0
  6339  0010F0  6E15               	movwf	?___flmul+1,c
  6340  0010F2  0E00               	movlw	0
  6341  0010F4  6E16               	movwf	?___flmul+2,c
  6342  0010F6  0E00               	movlw	0
  6343  0010F8  6E17               	movwf	?___flmul+3,c
  6344  0010FA  0012               	return	
  6345  0010FC                     l7074:
  6346  0010FC  501A               	movf	___flmul@a+2,w,c
  6347  0010FE  0214               	mulwf	___flmul@b,c
  6348  001100  CFF3 F02B          	movff	prodl,___flmul@temp
  6349  001104  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6350  001108  502B               	movf	___flmul@temp,w,c
  6351  00110A  6E22               	movwf	___flmul@grs,c
  6352  00110C  6A23               	clrf	___flmul@grs+1,c
  6353  00110E  6A24               	clrf	___flmul@grs+2,c
  6354  001110  6A25               	clrf	___flmul@grs+3,c
  6355  001112  502C               	movf	___flmul@temp+1,w,c
  6356  001114  6E27               	movwf	___flmul@prod,c
  6357  001116  6A28               	clrf	___flmul@prod+1,c
  6358  001118  6A29               	clrf	___flmul@prod+2,c
  6359  00111A  6A2A               	clrf	___flmul@prod+3,c
  6360  00111C  5019               	movf	___flmul@a+1,w,c
  6361  00111E  0215               	mulwf	___flmul@b+1,c
  6362  001120  CFF3 F02B          	movff	prodl,___flmul@temp
  6363  001124  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6364  001128  502B               	movf	___flmul@temp,w,c
  6365  00112A  2622               	addwf	___flmul@grs,f,c
  6366  00112C  0E00               	movlw	0
  6367  00112E  2223               	addwfc	___flmul@grs+1,f,c
  6368  001130  2224               	addwfc	___flmul@grs+2,f,c
  6369  001132  2225               	addwfc	___flmul@grs+3,f,c
  6370  001134  502C               	movf	___flmul@temp+1,w,c
  6371  001136  2627               	addwf	___flmul@prod,f,c
  6372  001138  0E00               	movlw	0
  6373  00113A  2228               	addwfc	___flmul@prod+1,f,c
  6374  00113C  2229               	addwfc	___flmul@prod+2,f,c
  6375  00113E  222A               	addwfc	___flmul@prod+3,f,c
  6376  001140  5018               	movf	___flmul@a,w,c
  6377  001142  0216               	mulwf	___flmul@b+2,c
  6378  001144  CFF3 F02B          	movff	prodl,___flmul@temp
  6379  001148  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6380  00114C  502B               	movf	___flmul@temp,w,c
  6381  00114E  2622               	addwf	___flmul@grs,f,c
  6382  001150  0E00               	movlw	0
  6383  001152  2223               	addwfc	___flmul@grs+1,f,c
  6384  001154  2224               	addwfc	___flmul@grs+2,f,c
  6385  001156  2225               	addwfc	___flmul@grs+3,f,c
  6386  001158  502C               	movf	___flmul@temp+1,w,c
  6387  00115A  2627               	addwf	___flmul@prod,f,c
  6388  00115C  0E00               	movlw	0
  6389  00115E  2228               	addwfc	___flmul@prod+1,f,c
  6390  001160  2229               	addwfc	___flmul@prod+2,f,c
  6391  001162  222A               	addwfc	___flmul@prod+3,f,c
  6392  001164  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6393  001168  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6394  00116C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6395  001170  6A22               	clrf	___flmul@grs,c
  6396  001172  5018               	movf	___flmul@a,w,c
  6397  001174  0215               	mulwf	___flmul@b+1,c
  6398  001176  CFF3 F02B          	movff	prodl,___flmul@temp
  6399  00117A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6400  00117E  502B               	movf	___flmul@temp,w,c
  6401  001180  2622               	addwf	___flmul@grs,f,c
  6402  001182  502C               	movf	___flmul@temp+1,w,c
  6403  001184  2223               	addwfc	___flmul@grs+1,f,c
  6404  001186  0E00               	movlw	0
  6405  001188  2224               	addwfc	___flmul@grs+2,f,c
  6406  00118A  0E00               	movlw	0
  6407  00118C  2225               	addwfc	___flmul@grs+3,f,c
  6408  00118E  5019               	movf	___flmul@a+1,w,c
  6409  001190  0214               	mulwf	___flmul@b,c
  6410  001192  CFF3 F02B          	movff	prodl,___flmul@temp
  6411  001196  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6412  00119A  502B               	movf	___flmul@temp,w,c
  6413  00119C  2622               	addwf	___flmul@grs,f,c
  6414  00119E  502C               	movf	___flmul@temp+1,w,c
  6415  0011A0  2223               	addwfc	___flmul@grs+1,f,c
  6416  0011A2  0E00               	movlw	0
  6417  0011A4  2224               	addwfc	___flmul@grs+2,f,c
  6418  0011A6  0E00               	movlw	0
  6419  0011A8  2225               	addwfc	___flmul@grs+3,f,c
  6420  0011AA  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6421  0011AE  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6422  0011B2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6423  0011B6  6A22               	clrf	___flmul@grs,c
  6424  0011B8  5018               	movf	___flmul@a,w,c
  6425  0011BA  0214               	mulwf	___flmul@b,c
  6426  0011BC  CFF3 F02B          	movff	prodl,___flmul@temp
  6427  0011C0  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6428  0011C4  502B               	movf	___flmul@temp,w,c
  6429  0011C6  2622               	addwf	___flmul@grs,f,c
  6430  0011C8  502C               	movf	___flmul@temp+1,w,c
  6431  0011CA  2223               	addwfc	___flmul@grs+1,f,c
  6432  0011CC  0E00               	movlw	0
  6433  0011CE  2224               	addwfc	___flmul@grs+2,f,c
  6434  0011D0  0E00               	movlw	0
  6435  0011D2  2225               	addwfc	___flmul@grs+3,f,c
  6436  0011D4  501A               	movf	___flmul@a+2,w,c
  6437  0011D6  0215               	mulwf	___flmul@b+1,c
  6438  0011D8  CFF3 F02B          	movff	prodl,___flmul@temp
  6439  0011DC  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6440  0011E0  502B               	movf	___flmul@temp,w,c
  6441  0011E2  2627               	addwf	___flmul@prod,f,c
  6442  0011E4  502C               	movf	___flmul@temp+1,w,c
  6443  0011E6  2228               	addwfc	___flmul@prod+1,f,c
  6444  0011E8  0E00               	movlw	0
  6445  0011EA  2229               	addwfc	___flmul@prod+2,f,c
  6446  0011EC  0E00               	movlw	0
  6447  0011EE  222A               	addwfc	___flmul@prod+3,f,c
  6448  0011F0  5019               	movf	___flmul@a+1,w,c
  6449  0011F2  0216               	mulwf	___flmul@b+2,c
  6450  0011F4  CFF3 F02B          	movff	prodl,___flmul@temp
  6451  0011F8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6452  0011FC  502B               	movf	___flmul@temp,w,c
  6453  0011FE  2627               	addwf	___flmul@prod,f,c
  6454  001200  502C               	movf	___flmul@temp+1,w,c
  6455  001202  2228               	addwfc	___flmul@prod+1,f,c
  6456  001204  0E00               	movlw	0
  6457  001206  2229               	addwfc	___flmul@prod+2,f,c
  6458  001208  0E00               	movlw	0
  6459  00120A  222A               	addwfc	___flmul@prod+3,f,c
  6460  00120C  501A               	movf	___flmul@a+2,w,c
  6461  00120E  0216               	mulwf	___flmul@b+2,c
  6462  001210  CFF3 F02B          	movff	prodl,___flmul@temp
  6463  001214  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6464  001218  502B               	movf	___flmul@temp,w,c
  6465  00121A  6E1C               	movwf	??___flmul& (0+255),c
  6466  00121C  502C               	movf	___flmul@temp+1,w,c
  6467  00121E  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6468  001220  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6469  001222  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6470  001224  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6471  001228  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6472  00122C  C01C  F01D         	movff	??___flmul,??___flmul+1
  6473  001230  6A1C               	clrf	??___flmul,c
  6474  001232  501C               	movf	??___flmul,w,c
  6475  001234  2627               	addwf	___flmul@prod,f,c
  6476  001236  501D               	movf	??___flmul+1,w,c
  6477  001238  2228               	addwfc	___flmul@prod+1,f,c
  6478  00123A  501E               	movf	??___flmul+2,w,c
  6479  00123C  2229               	addwfc	___flmul@prod+2,f,c
  6480  00123E  501F               	movf	??___flmul+3,w,c
  6481  001240  222A               	addwfc	___flmul@prod+3,f,c
  6482  001242  C022  F01C         	movff	___flmul@grs,??___flmul
  6483  001246  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6484  00124A  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6485  00124E  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6486  001252  0E19               	movlw	25
  6487  001254  D005               	goto	u8100
  6488  001256                     u8105:
  6489  001256  90D8               	bcf	status,0,c
  6490  001258  321F               	rrcf	??___flmul+3,f,c
  6491  00125A  321E               	rrcf	??___flmul+2,f,c
  6492  00125C  321D               	rrcf	??___flmul+1,f,c
  6493  00125E  321C               	rrcf	??___flmul,f,c
  6494  001260                     u8100:
  6495  001260  2EE8               	decfsz	wreg,f,c
  6496  001262  D7F9               	goto	u8105
  6497  001264  501C               	movf	??___flmul,w,c
  6498  001266  2627               	addwf	___flmul@prod,f,c
  6499  001268  501D               	movf	??___flmul+1,w,c
  6500  00126A  2228               	addwfc	___flmul@prod+1,f,c
  6501  00126C  501E               	movf	??___flmul+2,w,c
  6502  00126E  2229               	addwfc	___flmul@prod+2,f,c
  6503  001270  501F               	movf	??___flmul+3,w,c
  6504  001272  222A               	addwfc	___flmul@prod+3,f,c
  6505  001274  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6506  001278  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6507  00127C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6508  001280  6A22               	clrf	___flmul@grs,c
  6509  001282  5021               	movf	___flmul@aexp,w,c
  6510  001284  C026  F01C         	movff	___flmul@bexp,??___flmul
  6511  001288  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6512  00128A  261C               	addwf	??___flmul,f,c
  6513  00128C  0E00               	movlw	0
  6514  00128E  221D               	addwfc	??___flmul+1,f,c
  6515  001290  0E82               	movlw	130
  6516  001292  241C               	addwf	??___flmul,w,c
  6517  001294  6E2B               	movwf	___flmul@temp,c
  6518  001296  0EFF               	movlw	255
  6519  001298  201D               	addwfc	??___flmul+1,w,c
  6520  00129A  6E2C               	movwf	___flmul@temp+1,c
  6521  00129C  D00F               	goto	l7122
  6522  00129E                     l7116:
  6523  00129E  90D8               	bcf	status,0,c
  6524  0012A0  3627               	rlcf	___flmul@prod,f,c
  6525  0012A2  3628               	rlcf	___flmul@prod+1,f,c
  6526  0012A4  3629               	rlcf	___flmul@prod+2,f,c
  6527  0012A6  362A               	rlcf	___flmul@prod+3,f,c
  6528  0012A8  BE25               	btfsc	___flmul@grs+3,7,c
  6529  0012AA  8027               	bsf	___flmul@prod,0,c
  6530  0012AC  90D8               	bcf	status,0,c
  6531  0012AE  3622               	rlcf	___flmul@grs,f,c
  6532  0012B0  3623               	rlcf	___flmul@grs+1,f,c
  6533  0012B2  3624               	rlcf	___flmul@grs+2,f,c
  6534  0012B4  3625               	rlcf	___flmul@grs+3,f,c
  6535  0012B6  062B               	decf	___flmul@temp,f,c
  6536  0012B8  A0D8               	btfss	status,0,c
  6537  0012BA  062C               	decf	___flmul@temp+1,f,c
  6538  0012BC                     l7122:
  6539  0012BC  AE29               	btfss	___flmul@prod+2,7,c
  6540  0012BE  D7EF               	goto	l7116
  6541  0012C0  0E00               	movlw	0
  6542  0012C2  6E21               	movwf	___flmul@aexp,c
  6543  0012C4  AE25               	btfss	___flmul@grs+3,7,c
  6544  0012C6  D017               	goto	l1314
  6545  0012C8  0EFF               	movlw	255
  6546  0012CA  1422               	andwf	___flmul@grs,w,c
  6547  0012CC  6E1C               	movwf	??___flmul& (0+255),c
  6548  0012CE  0EFF               	movlw	255
  6549  0012D0  1423               	andwf	___flmul@grs+1,w,c
  6550  0012D2  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6551  0012D4  0EFF               	movlw	255
  6552  0012D6  1424               	andwf	___flmul@grs+2,w,c
  6553  0012D8  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6554  0012DA  0E7F               	movlw	127
  6555  0012DC  1425               	andwf	___flmul@grs+3,w,c
  6556  0012DE  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6557  0012E0  501C               	movf	??___flmul,w,c
  6558  0012E2  101D               	iorwf	??___flmul+1,w,c
  6559  0012E4  101E               	iorwf	??___flmul+2,w,c
  6560  0012E6  101F               	iorwf	??___flmul+3,w,c
  6561  0012E8  B4D8               	btfsc	status,2,c
  6562  0012EA  D003               	goto	l1315
  6563  0012EC                     u8140:
  6564  0012EC  0E01               	movlw	1
  6565  0012EE  6E21               	movwf	___flmul@aexp,c
  6566  0012F0  D002               	goto	l1314
  6567  0012F2                     l1315:
  6568  0012F2  B027               	btfsc	___flmul@prod,0,c
  6569  0012F4  D7FB               	goto	u8140
  6570  0012F6                     l1314:
  6571  0012F6  5021               	movf	___flmul@aexp,w,c
  6572  0012F8  B4D8               	btfsc	status,2,c
  6573  0012FA  D01F               	goto	l7142
  6574  0012FC  0E01               	movlw	1
  6575  0012FE  2627               	addwf	___flmul@prod,f,c
  6576  001300  0E00               	movlw	0
  6577  001302  2228               	addwfc	___flmul@prod+1,f,c
  6578  001304  2229               	addwfc	___flmul@prod+2,f,c
  6579  001306  222A               	addwfc	___flmul@prod+3,f,c
  6580  001308  A02A               	btfss	___flmul@prod+3,0,c
  6581  00130A  D017               	goto	l7142
  6582  00130C  C027  F01C         	movff	___flmul@prod,??___flmul
  6583  001310  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6584  001314  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6585  001318  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6586  00131C  341F               	rlcf	??___flmul+3,w,c
  6587  00131E  321F               	rrcf	??___flmul+3,f,c
  6588  001320  321E               	rrcf	??___flmul+2,f,c
  6589  001322  321D               	rrcf	??___flmul+1,f,c
  6590  001324  321C               	rrcf	??___flmul,f,c
  6591  001326  C01C  F027         	movff	??___flmul,___flmul@prod
  6592  00132A  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6593  00132E  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6594  001332  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6595  001336  4A2B               	infsnz	___flmul@temp,f,c
  6596  001338  2A2C               	incf	___flmul@temp+1,f,c
  6597  00133A                     l7142:
  6598  00133A  BE2C               	btfsc	___flmul@temp+1,7,c
  6599  00133C  D00D               	goto	l7146
  6600  00133E  502C               	movf	___flmul@temp+1,w,c
  6601  001340  E103               	bnz	u8180
  6602  001342  282B               	incf	___flmul@temp,w,c
  6603  001344  A0D8               	btfss	status,0,c
  6604  001346  D008               	goto	l7146
  6605  001348                     u8180:
  6606  001348  0E00               	movlw	0
  6607  00134A  6E27               	movwf	___flmul@prod,c
  6608  00134C  0E00               	movlw	0
  6609  00134E  6E28               	movwf	___flmul@prod+1,c
  6610  001350  0E80               	movlw	128
  6611  001352  6E29               	movwf	___flmul@prod+2,c
  6612  001354  0E7F               	movlw	127
  6613  001356  D020               	goto	L9
  6614  001358                     l7146:
  6615  001358  BE2C               	btfsc	___flmul@temp+1,7,c
  6616  00135A  D005               	goto	u8190
  6617  00135C  502C               	movf	___flmul@temp+1,w,c
  6618  00135E  E10E               	bnz	l1322
  6619  001360  042B               	decf	___flmul@temp,w,c
  6620  001362  B0D8               	btfsc	status,0,c
  6621  001364  D00B               	goto	l1322
  6622  001366                     u8190:
  6623  001366  0E00               	movlw	0
  6624  001368  6E27               	movwf	___flmul@prod,c
  6625  00136A  0E00               	movlw	0
  6626  00136C  6E28               	movwf	___flmul@prod+1,c
  6627  00136E  0E00               	movlw	0
  6628  001370  6E29               	movwf	___flmul@prod+2,c
  6629  001372  0E00               	movlw	0
  6630  001374  6E2A               	movwf	___flmul@prod+3,c
  6631  001376  0E00               	movlw	0
  6632  001378  6E20               	movwf	___flmul@sign,c
  6633  00137A  D00F               	goto	l7158
  6634  00137C                     l1322:
  6635  00137C  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6636  001380  0EFF               	movlw	255
  6637  001382  1627               	andwf	___flmul@prod,f,c
  6638  001384  0EFF               	movlw	255
  6639  001386  1628               	andwf	___flmul@prod+1,f,c
  6640  001388  0E7F               	movlw	127
  6641  00138A  1629               	andwf	___flmul@prod+2,f,c
  6642  00138C  0E00               	movlw	0
  6643  00138E  162A               	andwf	___flmul@prod+3,f,c
  6644  001390  B026               	btfsc	___flmul@bexp,0,c
  6645  001392  8E29               	bsf	___flmul@prod+2,7,c
  6646  001394  90D8               	bcf	status,0,c
  6647  001396  3026               	rrcf	___flmul@bexp,w,c
  6648  001398                     L9:
  6649  001398  6E2A               	movwf	___flmul@prod+3,c
  6650  00139A                     l7158:
  6651  00139A  5020               	movf	___flmul@sign,w,c
  6652  00139C  122A               	iorwf	___flmul@prod+3,f,c
  6653  00139E  C027  F014         	movff	___flmul@prod,?___flmul
  6654  0013A2  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6655  0013A6  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6656  0013AA  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6657  0013AE  0012               	return		;funcret
  6658  0013B0                     __end_of___flmul:
  6659                           	opt callstack 0
  6660                           
  6661 ;; *************** function ___flge *****************
  6662 ;; Defined at:
  6663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  ff1             4    5[COMRAM] unsigned char 
  6666 ;;  ff2             4    9[COMRAM] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;		None               void
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6678 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;Total ram usage:       12 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    2
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_set_pwm_duty_cycle
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text25
  6693  002AF0                     __ptext25:
  6694                           	opt callstack 0
  6695  002AF0                     ___flge:
  6696                           	opt callstack 24
  6697                           
  6698                           ;incstack = 0
  6699  002AF0  0E00               	movlw	0
  6700  002AF2  1406               	andwf	___flge@ff1,w,c
  6701  002AF4  6E0E               	movwf	??___flge& (0+255),c
  6702  002AF6  0E00               	movlw	0
  6703  002AF8  1407               	andwf	___flge@ff1+1,w,c
  6704  002AFA  6E0F               	movwf	(??___flge+1)& (0+255),c
  6705  002AFC  0E80               	movlw	128
  6706  002AFE  1408               	andwf	___flge@ff1+2,w,c
  6707  002B00  6E10               	movwf	(??___flge+2)& (0+255),c
  6708  002B02  0E7F               	movlw	127
  6709  002B04  1409               	andwf	___flge@ff1+3,w,c
  6710  002B06  6E11               	movwf	(??___flge+3)& (0+255),c
  6711  002B08  500E               	movf	??___flge,w,c
  6712  002B0A  100F               	iorwf	??___flge+1,w,c
  6713  002B0C  1010               	iorwf	??___flge+2,w,c
  6714  002B0E  1011               	iorwf	??___flge+3,w,c
  6715  002B10  A4D8               	btfss	status,2,c
  6716  002B12  D008               	goto	l7168
  6717  002B14  0E00               	movlw	0
  6718  002B16  6E06               	movwf	___flge@ff1,c
  6719  002B18  0E00               	movlw	0
  6720  002B1A  6E07               	movwf	___flge@ff1+1,c
  6721  002B1C  0E00               	movlw	0
  6722  002B1E  6E08               	movwf	___flge@ff1+2,c
  6723  002B20  0E00               	movlw	0
  6724  002B22  6E09               	movwf	___flge@ff1+3,c
  6725  002B24                     l7168:
  6726  002B24  0E00               	movlw	0
  6727  002B26  140A               	andwf	___flge@ff2,w,c
  6728  002B28  6E0E               	movwf	??___flge& (0+255),c
  6729  002B2A  0E00               	movlw	0
  6730  002B2C  140B               	andwf	___flge@ff2+1,w,c
  6731  002B2E  6E0F               	movwf	(??___flge+1)& (0+255),c
  6732  002B30  0E80               	movlw	128
  6733  002B32  140C               	andwf	___flge@ff2+2,w,c
  6734  002B34  6E10               	movwf	(??___flge+2)& (0+255),c
  6735  002B36  0E7F               	movlw	127
  6736  002B38  140D               	andwf	___flge@ff2+3,w,c
  6737  002B3A  6E11               	movwf	(??___flge+3)& (0+255),c
  6738  002B3C  500E               	movf	??___flge,w,c
  6739  002B3E  100F               	iorwf	??___flge+1,w,c
  6740  002B40  1010               	iorwf	??___flge+2,w,c
  6741  002B42  1011               	iorwf	??___flge+3,w,c
  6742  002B44  A4D8               	btfss	status,2,c
  6743  002B46  D008               	goto	l7172
  6744  002B48  0E00               	movlw	0
  6745  002B4A  6E0A               	movwf	___flge@ff2,c
  6746  002B4C  0E00               	movlw	0
  6747  002B4E  6E0B               	movwf	___flge@ff2+1,c
  6748  002B50  0E00               	movlw	0
  6749  002B52  6E0C               	movwf	___flge@ff2+2,c
  6750  002B54  0E00               	movlw	0
  6751  002B56  6E0D               	movwf	___flge@ff2+3,c
  6752  002B58                     l7172:
  6753  002B58  AE09               	btfss	___flge@ff1+3,7,c
  6754  002B5A  D009               	goto	l7176
  6755  002B5C  6C06               	negf	___flge@ff1,c
  6756  002B5E  1E07               	comf	___flge@ff1+1,f,c
  6757  002B60  B0D8               	btfsc	status,0,c
  6758  002B62  2A07               	incf	___flge@ff1+1,f,c
  6759  002B64  1E08               	comf	___flge@ff1+2,f,c
  6760  002B66  B0D8               	btfsc	status,0,c
  6761  002B68  2A08               	incf	___flge@ff1+2,f,c
  6762  002B6A  0E80               	movlw	128
  6763  002B6C  5609               	subfwb	___flge@ff1+3,f,c
  6764  002B6E                     l7176:
  6765  002B6E  AE0D               	btfss	___flge@ff2+3,7,c
  6766  002B70  D009               	goto	l956
  6767  002B72  6C0A               	negf	___flge@ff2,c
  6768  002B74  1E0B               	comf	___flge@ff2+1,f,c
  6769  002B76  B0D8               	btfsc	status,0,c
  6770  002B78  2A0B               	incf	___flge@ff2+1,f,c
  6771  002B7A  1E0C               	comf	___flge@ff2+2,f,c
  6772  002B7C  B0D8               	btfsc	status,0,c
  6773  002B7E  2A0C               	incf	___flge@ff2+2,f,c
  6774  002B80  0E80               	movlw	128
  6775  002B82  560D               	subfwb	___flge@ff2+3,f,c
  6776  002B84                     l956:
  6777  002B84  0E00               	movlw	0
  6778  002B86  1A06               	xorwf	___flge@ff1,f,c
  6779  002B88  0E00               	movlw	0
  6780  002B8A  1A07               	xorwf	___flge@ff1+1,f,c
  6781  002B8C  0E00               	movlw	0
  6782  002B8E  1A08               	xorwf	___flge@ff1+2,f,c
  6783  002B90  0E80               	movlw	128
  6784  002B92  1A09               	xorwf	___flge@ff1+3,f,c
  6785  002B94  0E00               	movlw	0
  6786  002B96  1A0A               	xorwf	___flge@ff2,f,c
  6787  002B98  0E00               	movlw	0
  6788  002B9A  1A0B               	xorwf	___flge@ff2+1,f,c
  6789  002B9C  0E00               	movlw	0
  6790  002B9E  1A0C               	xorwf	___flge@ff2+2,f,c
  6791  002BA0  0E80               	movlw	128
  6792  002BA2  1A0D               	xorwf	___flge@ff2+3,f,c
  6793  002BA4  500A               	movf	___flge@ff2,w,c
  6794  002BA6  5C06               	subwf	___flge@ff1,w,c
  6795  002BA8  500B               	movf	___flge@ff2+1,w,c
  6796  002BAA  5807               	subwfb	___flge@ff1+1,w,c
  6797  002BAC  500C               	movf	___flge@ff2+2,w,c
  6798  002BAE  5808               	subwfb	___flge@ff1+2,w,c
  6799  002BB0  500D               	movf	___flge@ff2+3,w,c
  6800  002BB2  5809               	subwfb	___flge@ff1+3,w,c
  6801  002BB4  B0D8               	btfsc	status,0,c
  6802  002BB6  D002               	goto	l7182
  6803  002BB8  90D8               	bcf	status,0,c
  6804  002BBA  0012               	return	
  6805  002BBC                     l7182:
  6806  002BBC  80D8               	bsf	status,0,c
  6807  002BBE  0012               	return		;funcret
  6808  002BC0                     __end_of___flge:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function ___fldiv *****************
  6812 ;; Defined at:
  6813 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  b               4   44[COMRAM] unsigned char 
  6816 ;;  a               4   48[COMRAM] unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  grs             4   63[COMRAM] unsigned long 
  6819 ;;  rem             4   56[COMRAM] unsigned long 
  6820 ;;  new_exp         2   61[COMRAM] short 
  6821 ;;  aexp            1   68[COMRAM] unsigned char 
  6822 ;;  bexp            1   67[COMRAM] unsigned char 
  6823 ;;  sign            1   60[COMRAM] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  4   44[COMRAM] unsigned char 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6833 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;Total ram usage:       25 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    2
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_set_pwm_duty_cycle
  6844 ;;		_errorCorrectedMove
  6845 ;;		_PIDCorrectedMove
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text26
  6850  001964                     __ptext26:
  6851                           	opt callstack 0
  6852  001964                     ___fldiv:
  6853                           	opt callstack 24
  6854                           
  6855                           ;incstack = 0
  6856  001964  5030               	movf	___fldiv@b+3,w,c
  6857  001966  0B80               	andlw	128
  6858  001968  6E3D               	movwf	___fldiv@sign,c
  6859  00196A  5030               	movf	___fldiv@b+3,w,c
  6860  00196C  2430               	addwf	___fldiv@b+3,w,c
  6861  00196E  6E44               	movwf	___fldiv@bexp,c
  6862  001970  BE2F               	btfsc	___fldiv@b+2,7,c
  6863  001972  8044               	bsf	___fldiv@bexp,0,c
  6864  001974  5044               	movf	___fldiv@bexp,w,c
  6865  001976  B4D8               	btfsc	status,2,c
  6866  001978  D00D               	goto	l6912
  6867  00197A  2844               	incf	___fldiv@bexp,w,c
  6868  00197C  A4D8               	btfss	status,2,c
  6869  00197E  D008               	goto	l6908
  6870  001980  0E00               	movlw	0
  6871  001982  6E2D               	movwf	___fldiv@b,c
  6872  001984  0E00               	movlw	0
  6873  001986  6E2E               	movwf	___fldiv@b+1,c
  6874  001988  0E00               	movlw	0
  6875  00198A  6E2F               	movwf	___fldiv@b+2,c
  6876  00198C  0E00               	movlw	0
  6877  00198E  6E30               	movwf	___fldiv@b+3,c
  6878  001990                     l6908:
  6879  001990  8E2F               	bsf	___fldiv@b+2,7,c
  6880  001992  D006               	goto	L10
  6881  001994                     l6912:
  6882  001994  0E00               	movlw	0
  6883  001996  6E2D               	movwf	___fldiv@b,c
  6884  001998  0E00               	movlw	0
  6885  00199A  6E2E               	movwf	___fldiv@b+1,c
  6886  00199C  0E00               	movlw	0
  6887  00199E  6E2F               	movwf	___fldiv@b+2,c
  6888  0019A0                     L10:
  6889  0019A0  0E00               	movlw	0
  6890  0019A2  6E30               	movwf	___fldiv@b+3,c
  6891  0019A4  5034               	movf	___fldiv@a+3,w,c
  6892  0019A6  0B80               	andlw	128
  6893  0019A8  1A3D               	xorwf	___fldiv@sign,f,c
  6894  0019AA  5034               	movf	___fldiv@a+3,w,c
  6895  0019AC  2434               	addwf	___fldiv@a+3,w,c
  6896  0019AE  6E45               	movwf	___fldiv@aexp,c
  6897  0019B0  BE33               	btfsc	___fldiv@a+2,7,c
  6898  0019B2  8045               	bsf	___fldiv@aexp,0,c
  6899  0019B4  5045               	movf	___fldiv@aexp,w,c
  6900  0019B6  B4D8               	btfsc	status,2,c
  6901  0019B8  D00D               	goto	l6932
  6902  0019BA  2845               	incf	___fldiv@aexp,w,c
  6903  0019BC  A4D8               	btfss	status,2,c
  6904  0019BE  D008               	goto	l6928
  6905  0019C0  0E00               	movlw	0
  6906  0019C2  6E31               	movwf	___fldiv@a,c
  6907  0019C4  0E00               	movlw	0
  6908  0019C6  6E32               	movwf	___fldiv@a+1,c
  6909  0019C8  0E00               	movlw	0
  6910  0019CA  6E33               	movwf	___fldiv@a+2,c
  6911  0019CC  0E00               	movlw	0
  6912  0019CE  6E34               	movwf	___fldiv@a+3,c
  6913  0019D0                     l6928:
  6914  0019D0  8E33               	bsf	___fldiv@a+2,7,c
  6915  0019D2  D006               	goto	L11
  6916  0019D4                     l6932:
  6917  0019D4  0E00               	movlw	0
  6918  0019D6  6E31               	movwf	___fldiv@a,c
  6919  0019D8  0E00               	movlw	0
  6920  0019DA  6E32               	movwf	___fldiv@a+1,c
  6921  0019DC  0E00               	movlw	0
  6922  0019DE  6E33               	movwf	___fldiv@a+2,c
  6923  0019E0                     L11:
  6924  0019E0  0E00               	movlw	0
  6925  0019E2  6E34               	movwf	___fldiv@a+3,c
  6926  0019E4  5031               	movf	___fldiv@a,w,c
  6927  0019E6  1032               	iorwf	___fldiv@a+1,w,c
  6928  0019E8  1033               	iorwf	___fldiv@a+2,w,c
  6929  0019EA  1034               	iorwf	___fldiv@a+3,w,c
  6930  0019EC  A4D8               	btfss	status,2,c
  6931  0019EE  D017               	goto	l6946
  6932  0019F0  0E00               	movlw	0
  6933  0019F2  6E2D               	movwf	___fldiv@b,c
  6934  0019F4  0E00               	movlw	0
  6935  0019F6  6E2E               	movwf	___fldiv@b+1,c
  6936  0019F8  0E00               	movlw	0
  6937  0019FA  6E2F               	movwf	___fldiv@b+2,c
  6938  0019FC  0E00               	movlw	0
  6939  0019FE  6E30               	movwf	___fldiv@b+3,c
  6940  001A00  0E80               	movlw	128
  6941  001A02  122F               	iorwf	___fldiv@b+2,f,c
  6942  001A04  0E7F               	movlw	127
  6943  001A06  1230               	iorwf	___fldiv@b+3,f,c
  6944  001A08                     l6940:
  6945  001A08  503D               	movf	___fldiv@sign,w,c
  6946  001A0A  1230               	iorwf	___fldiv@b+3,f,c
  6947  001A0C  C02D  F02D         	movff	___fldiv@b,?___fldiv
  6948  001A10  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  6949  001A14  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  6950  001A18  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  6951  001A1C  0012               	return	
  6952  001A1E                     l6946:
  6953  001A1E  5044               	movf	___fldiv@bexp,w,c
  6954  001A20  A4D8               	btfss	status,2,c
  6955  001A22  D009               	goto	l6954
  6956  001A24  0E00               	movlw	0
  6957  001A26  6E2D               	movwf	?___fldiv,c
  6958  001A28  0E00               	movlw	0
  6959  001A2A  6E2E               	movwf	?___fldiv+1,c
  6960  001A2C  0E00               	movlw	0
  6961  001A2E  6E2F               	movwf	?___fldiv+2,c
  6962  001A30  0E00               	movlw	0
  6963  001A32  6E30               	movwf	?___fldiv+3,c
  6964  001A34  0012               	return	
  6965  001A36                     l6954:
  6966  001A36  5045               	movf	___fldiv@aexp,w,c
  6967  001A38  C044  F035         	movff	___fldiv@bexp,??___fldiv
  6968  001A3C  6A36               	clrf	(??___fldiv+1)& (0+255),c
  6969  001A3E  5E35               	subwf	??___fldiv,f,c
  6970  001A40  0E00               	movlw	0
  6971  001A42  5A36               	subwfb	??___fldiv+1,f,c
  6972  001A44  0E7F               	movlw	127
  6973  001A46  2435               	addwf	??___fldiv,w,c
  6974  001A48  6E3E               	movwf	___fldiv@new_exp,c
  6975  001A4A  0E00               	movlw	0
  6976  001A4C  2036               	addwfc	??___fldiv+1,w,c
  6977  001A4E  6E3F               	movwf	___fldiv@new_exp+1,c
  6978  001A50  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  6979  001A54  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  6980  001A58  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  6981  001A5C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  6982  001A60  0E00               	movlw	0
  6983  001A62  6E2D               	movwf	___fldiv@b,c
  6984  001A64  0E00               	movlw	0
  6985  001A66  6E2E               	movwf	___fldiv@b+1,c
  6986  001A68  0E00               	movlw	0
  6987  001A6A  6E2F               	movwf	___fldiv@b+2,c
  6988  001A6C  0E00               	movlw	0
  6989  001A6E  6E30               	movwf	___fldiv@b+3,c
  6990  001A70  0E00               	movlw	0
  6991  001A72  6E40               	movwf	___fldiv@grs,c
  6992  001A74  0E00               	movlw	0
  6993  001A76  6E41               	movwf	___fldiv@grs+1,c
  6994  001A78  0E00               	movlw	0
  6995  001A7A  6E42               	movwf	___fldiv@grs+2,c
  6996  001A7C  0E00               	movlw	0
  6997  001A7E  6E43               	movwf	___fldiv@grs+3,c
  6998  001A80  0E00               	movlw	0
  6999  001A82  6E45               	movwf	___fldiv@aexp,c
  7000  001A84  D028               	goto	l1275
  7001  001A86                     l6964:
  7002  001A86  5045               	movf	___fldiv@aexp,w,c
  7003  001A88  B4D8               	btfsc	status,2,c
  7004  001A8A  D011               	goto	l6972
  7005  001A8C  90D8               	bcf	status,0,c
  7006  001A8E  3639               	rlcf	___fldiv@rem,f,c
  7007  001A90  363A               	rlcf	___fldiv@rem+1,f,c
  7008  001A92  363B               	rlcf	___fldiv@rem+2,f,c
  7009  001A94  363C               	rlcf	___fldiv@rem+3,f,c
  7010  001A96  90D8               	bcf	status,0,c
  7011  001A98  362D               	rlcf	___fldiv@b,f,c
  7012  001A9A  362E               	rlcf	___fldiv@b+1,f,c
  7013  001A9C  362F               	rlcf	___fldiv@b+2,f,c
  7014  001A9E  3630               	rlcf	___fldiv@b+3,f,c
  7015  001AA0  BE43               	btfsc	___fldiv@grs+3,7,c
  7016  001AA2  802D               	bsf	___fldiv@b,0,c
  7017  001AA4  90D8               	bcf	status,0,c
  7018  001AA6  3640               	rlcf	___fldiv@grs,f,c
  7019  001AA8  3641               	rlcf	___fldiv@grs+1,f,c
  7020  001AAA  3642               	rlcf	___fldiv@grs+2,f,c
  7021  001AAC  3643               	rlcf	___fldiv@grs+3,f,c
  7022  001AAE                     l6972:
  7023  001AAE  5031               	movf	___fldiv@a,w,c
  7024  001AB0  5C39               	subwf	___fldiv@rem,w,c
  7025  001AB2  5032               	movf	___fldiv@a+1,w,c
  7026  001AB4  583A               	subwfb	___fldiv@rem+1,w,c
  7027  001AB6  5033               	movf	___fldiv@a+2,w,c
  7028  001AB8  583B               	subwfb	___fldiv@rem+2,w,c
  7029  001ABA  5034               	movf	___fldiv@a+3,w,c
  7030  001ABC  583C               	subwfb	___fldiv@rem+3,w,c
  7031  001ABE  A0D8               	btfss	status,0,c
  7032  001AC0  D009               	goto	l6978
  7033  001AC2  8C43               	bsf	___fldiv@grs+3,6,c
  7034  001AC4  5031               	movf	___fldiv@a,w,c
  7035  001AC6  5E39               	subwf	___fldiv@rem,f,c
  7036  001AC8  5032               	movf	___fldiv@a+1,w,c
  7037  001ACA  5A3A               	subwfb	___fldiv@rem+1,f,c
  7038  001ACC  5033               	movf	___fldiv@a+2,w,c
  7039  001ACE  5A3B               	subwfb	___fldiv@rem+2,f,c
  7040  001AD0  5034               	movf	___fldiv@a+3,w,c
  7041  001AD2  5A3C               	subwfb	___fldiv@rem+3,f,c
  7042  001AD4                     l6978:
  7043  001AD4  2A45               	incf	___fldiv@aexp,f,c
  7044  001AD6                     l1275:
  7045  001AD6  0E19               	movlw	25
  7046  001AD8  6445               	cpfsgt	___fldiv@aexp,c
  7047  001ADA  D7D5               	goto	l6964
  7048  001ADC  5039               	movf	___fldiv@rem,w,c
  7049  001ADE  103A               	iorwf	___fldiv@rem+1,w,c
  7050  001AE0  103B               	iorwf	___fldiv@rem+2,w,c
  7051  001AE2  103C               	iorwf	___fldiv@rem+3,w,c
  7052  001AE4  B4D8               	btfsc	status,2,c
  7053  001AE6  D011               	goto	l6990
  7054  001AE8  8040               	bsf	___fldiv@grs,0,c
  7055  001AEA  D00F               	goto	l6990
  7056  001AEC                     l6984:
  7057  001AEC  90D8               	bcf	status,0,c
  7058  001AEE  362D               	rlcf	___fldiv@b,f,c
  7059  001AF0  362E               	rlcf	___fldiv@b+1,f,c
  7060  001AF2  362F               	rlcf	___fldiv@b+2,f,c
  7061  001AF4  3630               	rlcf	___fldiv@b+3,f,c
  7062  001AF6  BE43               	btfsc	___fldiv@grs+3,7,c
  7063  001AF8  802D               	bsf	___fldiv@b,0,c
  7064  001AFA  90D8               	bcf	status,0,c
  7065  001AFC  3640               	rlcf	___fldiv@grs,f,c
  7066  001AFE  3641               	rlcf	___fldiv@grs+1,f,c
  7067  001B00  3642               	rlcf	___fldiv@grs+2,f,c
  7068  001B02  3643               	rlcf	___fldiv@grs+3,f,c
  7069  001B04  063E               	decf	___fldiv@new_exp,f,c
  7070  001B06  A0D8               	btfss	status,0,c
  7071  001B08  063F               	decf	___fldiv@new_exp+1,f,c
  7072  001B0A                     l6990:
  7073  001B0A  AE2F               	btfss	___fldiv@b+2,7,c
  7074  001B0C  D7EF               	goto	l6984
  7075  001B0E  0E00               	movlw	0
  7076  001B10  6E45               	movwf	___fldiv@aexp,c
  7077  001B12  AE43               	btfss	___fldiv@grs+3,7,c
  7078  001B14  D017               	goto	l1286
  7079  001B16  0EFF               	movlw	255
  7080  001B18  1440               	andwf	___fldiv@grs,w,c
  7081  001B1A  6E35               	movwf	??___fldiv& (0+255),c
  7082  001B1C  0EFF               	movlw	255
  7083  001B1E  1441               	andwf	___fldiv@grs+1,w,c
  7084  001B20  6E36               	movwf	(??___fldiv+1)& (0+255),c
  7085  001B22  0EFF               	movlw	255
  7086  001B24  1442               	andwf	___fldiv@grs+2,w,c
  7087  001B26  6E37               	movwf	(??___fldiv+2)& (0+255),c
  7088  001B28  0E7F               	movlw	127
  7089  001B2A  1443               	andwf	___fldiv@grs+3,w,c
  7090  001B2C  6E38               	movwf	(??___fldiv+3)& (0+255),c
  7091  001B2E  5035               	movf	??___fldiv,w,c
  7092  001B30  1036               	iorwf	??___fldiv+1,w,c
  7093  001B32  1037               	iorwf	??___fldiv+2,w,c
  7094  001B34  1038               	iorwf	??___fldiv+3,w,c
  7095  001B36  B4D8               	btfsc	status,2,c
  7096  001B38  D003               	goto	l1287
  7097  001B3A                     u7950:
  7098  001B3A  0E01               	movlw	1
  7099  001B3C  6E45               	movwf	___fldiv@aexp,c
  7100  001B3E  D002               	goto	l1286
  7101  001B40                     l1287:
  7102  001B40  B02D               	btfsc	___fldiv@b,0,c
  7103  001B42  D7FB               	goto	u7950
  7104  001B44                     l1286:
  7105  001B44  5045               	movf	___fldiv@aexp,w,c
  7106  001B46  B4D8               	btfsc	status,2,c
  7107  001B48  D01F               	goto	l7010
  7108  001B4A  0E01               	movlw	1
  7109  001B4C  262D               	addwf	___fldiv@b,f,c
  7110  001B4E  0E00               	movlw	0
  7111  001B50  222E               	addwfc	___fldiv@b+1,f,c
  7112  001B52  222F               	addwfc	___fldiv@b+2,f,c
  7113  001B54  2230               	addwfc	___fldiv@b+3,f,c
  7114  001B56  A030               	btfss	___fldiv@b+3,0,c
  7115  001B58  D017               	goto	l7010
  7116  001B5A  C02D  F035         	movff	___fldiv@b,??___fldiv
  7117  001B5E  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7118  001B62  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7119  001B66  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7120  001B6A  3438               	rlcf	??___fldiv+3,w,c
  7121  001B6C  3238               	rrcf	??___fldiv+3,f,c
  7122  001B6E  3237               	rrcf	??___fldiv+2,f,c
  7123  001B70  3236               	rrcf	??___fldiv+1,f,c
  7124  001B72  3235               	rrcf	??___fldiv,f,c
  7125  001B74  C035  F02D         	movff	??___fldiv,___fldiv@b
  7126  001B78  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7127  001B7C  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7128  001B80  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7129  001B84  4A3E               	infsnz	___fldiv@new_exp,f,c
  7130  001B86  2A3F               	incf	___fldiv@new_exp+1,f,c
  7131  001B88                     l7010:
  7132  001B88  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7133  001B8A  D010               	goto	l7014
  7134  001B8C  503F               	movf	___fldiv@new_exp+1,w,c
  7135  001B8E  E103               	bnz	u7990
  7136  001B90  283E               	incf	___fldiv@new_exp,w,c
  7137  001B92  A0D8               	btfss	status,0,c
  7138  001B94  D00B               	goto	l7014
  7139  001B96                     u7990:
  7140  001B96  0E00               	movlw	0
  7141  001B98  6E3F               	movwf	___fldiv@new_exp+1,c
  7142  001B9A  683E               	setf	___fldiv@new_exp,c
  7143  001B9C  0E00               	movlw	0
  7144  001B9E  6E2D               	movwf	___fldiv@b,c
  7145  001BA0  0E00               	movlw	0
  7146  001BA2  6E2E               	movwf	___fldiv@b+1,c
  7147  001BA4  0E00               	movlw	0
  7148  001BA6  6E2F               	movwf	___fldiv@b+2,c
  7149  001BA8  0E00               	movlw	0
  7150  001BAA  6E30               	movwf	___fldiv@b+3,c
  7151  001BAC                     l7014:
  7152  001BAC  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7153  001BAE  D005               	goto	u8000
  7154  001BB0  503F               	movf	___fldiv@new_exp+1,w,c
  7155  001BB2  E111               	bnz	l7018
  7156  001BB4  043E               	decf	___fldiv@new_exp,w,c
  7157  001BB6  B0D8               	btfsc	status,0,c
  7158  001BB8  D00E               	goto	l7018
  7159  001BBA                     u8000:
  7160  001BBA  0E00               	movlw	0
  7161  001BBC  6E3F               	movwf	___fldiv@new_exp+1,c
  7162  001BBE  0E00               	movlw	0
  7163  001BC0  6E3E               	movwf	___fldiv@new_exp,c
  7164  001BC2  0E00               	movlw	0
  7165  001BC4  6E2D               	movwf	___fldiv@b,c
  7166  001BC6  0E00               	movlw	0
  7167  001BC8  6E2E               	movwf	___fldiv@b+1,c
  7168  001BCA  0E00               	movlw	0
  7169  001BCC  6E2F               	movwf	___fldiv@b+2,c
  7170  001BCE  0E00               	movlw	0
  7171  001BD0  6E30               	movwf	___fldiv@b+3,c
  7172  001BD2  0E00               	movlw	0
  7173  001BD4  6E3D               	movwf	___fldiv@sign,c
  7174  001BD6                     l7018:
  7175  001BD6  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7176  001BDA  A044               	btfss	___fldiv@bexp,0,c
  7177  001BDC  D002               	goto	l7024
  7178  001BDE  8E2F               	bsf	___fldiv@b+2,7,c
  7179  001BE0  D001               	goto	l7026
  7180  001BE2                     l7024:
  7181  001BE2  9E2F               	bcf	___fldiv@b+2,7,c
  7182  001BE4                     l7026:
  7183  001BE4  90D8               	bcf	status,0,c
  7184  001BE6  3044               	rrcf	___fldiv@bexp,w,c
  7185  001BE8  6E30               	movwf	___fldiv@b+3,c
  7186  001BEA  D70E               	goto	l6940
  7187  001BEC                     __end_of___fldiv:
  7188                           	opt callstack 0
  7189                           
  7190 ;; *************** function ___flsub *****************
  7191 ;; Defined at:
  7192 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  b               4   69[COMRAM] unsigned char 
  7195 ;;  a               4   73[COMRAM] unsigned char 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  4   69[COMRAM] unsigned char 
  7200 ;; Registers used:
  7201 ;;		wreg, status,2, status,0, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7207 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;Total ram usage:        8 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    3
  7214 ;; This function calls:
  7215 ;;		___fladd
  7216 ;; This function is called by:
  7217 ;;		_errorCorrectedMove
  7218 ;;		_PIDCorrectedMove
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text27
  7223  003264                     __ptext27:
  7224                           	opt callstack 0
  7225  003264                     ___flsub:
  7226                           	opt callstack 25
  7227                           
  7228                           ;incstack = 0
  7229  003264  0E00               	movlw	0
  7230  003266  1A4A               	xorwf	___flsub@a,f,c
  7231  003268  0E00               	movlw	0
  7232  00326A  1A4B               	xorwf	___flsub@a+1,f,c
  7233  00326C  0E00               	movlw	0
  7234  00326E  1A4C               	xorwf	___flsub@a+2,f,c
  7235  003270  0E80               	movlw	128
  7236  003272  1A4D               	xorwf	___flsub@a+3,f,c
  7237  003274  C046  F02D         	movff	___flsub@b,___fladd@b
  7238  003278  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  7239  00327C  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  7240  003280  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  7241  003284  C04A  F031         	movff	___flsub@a,___fladd@a
  7242  003288  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  7243  00328C  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  7244  003290  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  7245  003294  ECD8  F009         	call	___fladd	;wreg free
  7246  003298  C02D  F046         	movff	?___fladd,?___flsub
  7247  00329C  C02E  F047         	movff	?___fladd+1,?___flsub+1
  7248  0032A0  C02F  F048         	movff	?___fladd+2,?___flsub+2
  7249  0032A4  C030  F049         	movff	?___fladd+3,?___flsub+3
  7250  0032A8  0012               	return		;funcret
  7251  0032AA                     __end_of___flsub:
  7252                           	opt callstack 0
  7253                           
  7254 ;; *************** function ___fladd *****************
  7255 ;; Defined at:
  7256 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  b               4   44[COMRAM] unsigned char 
  7259 ;;  a               4   48[COMRAM] unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  grs             1   59[COMRAM] unsigned char 
  7262 ;;  bexp            1   58[COMRAM] unsigned char 
  7263 ;;  aexp            1   57[COMRAM] unsigned char 
  7264 ;;  signs           1   56[COMRAM] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  4   44[COMRAM] unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7274 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;Total ram usage:       16 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    2
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_errorCorrectedMove
  7285 ;;		___flsub
  7286 ;;		_PIDCorrectedMove
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text28
  7291  0013B0                     __ptext28:
  7292                           	opt callstack 0
  7293  0013B0                     ___fladd:
  7294                           	opt callstack 25
  7295                           
  7296                           ;incstack = 0
  7297  0013B0  5030               	movf	___fladd@b+3,w,c
  7298  0013B2  0B80               	andlw	128
  7299  0013B4  6E39               	movwf	___fladd@signs,c
  7300  0013B6  5030               	movf	___fladd@b+3,w,c
  7301  0013B8  2430               	addwf	___fladd@b+3,w,c
  7302  0013BA  6E3B               	movwf	___fladd@bexp,c
  7303  0013BC  BE2F               	btfsc	___fladd@b+2,7,c
  7304  0013BE  803B               	bsf	___fladd@bexp,0,c
  7305  0013C0  503B               	movf	___fladd@bexp,w,c
  7306  0013C2  B4D8               	btfsc	status,2,c
  7307  0013C4  D00D               	goto	l7448
  7308  0013C6  283B               	incf	___fladd@bexp,w,c
  7309  0013C8  A4D8               	btfss	status,2,c
  7310  0013CA  D008               	goto	l7444
  7311  0013CC  0E00               	movlw	0
  7312  0013CE  6E2D               	movwf	___fladd@b,c
  7313  0013D0  0E00               	movlw	0
  7314  0013D2  6E2E               	movwf	___fladd@b+1,c
  7315  0013D4  0E00               	movlw	0
  7316  0013D6  6E2F               	movwf	___fladd@b+2,c
  7317  0013D8  0E00               	movlw	0
  7318  0013DA  6E30               	movwf	___fladd@b+3,c
  7319  0013DC                     l7444:
  7320  0013DC  8E2F               	bsf	___fladd@b+2,7,c
  7321  0013DE  D006               	goto	L12
  7322  0013E0                     l7448:
  7323  0013E0  0E00               	movlw	0
  7324  0013E2  6E2D               	movwf	___fladd@b,c
  7325  0013E4  0E00               	movlw	0
  7326  0013E6  6E2E               	movwf	___fladd@b+1,c
  7327  0013E8  0E00               	movlw	0
  7328  0013EA  6E2F               	movwf	___fladd@b+2,c
  7329  0013EC                     L12:
  7330  0013EC  0E00               	movlw	0
  7331  0013EE  6E30               	movwf	___fladd@b+3,c
  7332  0013F0  5034               	movf	___fladd@a+3,w,c
  7333  0013F2  0B80               	andlw	128
  7334  0013F4  6E3A               	movwf	___fladd@aexp,c
  7335  0013F6  5039               	movf	___fladd@signs,w,c
  7336  0013F8  183A               	xorwf	___fladd@aexp,w,c
  7337  0013FA  A4D8               	btfss	status,2,c
  7338  0013FC  8C39               	bsf	___fladd@signs,6,c
  7339  0013FE  5034               	movf	___fladd@a+3,w,c
  7340  001400  2434               	addwf	___fladd@a+3,w,c
  7341  001402  6E3A               	movwf	___fladd@aexp,c
  7342  001404  BE33               	btfsc	___fladd@a+2,7,c
  7343  001406  803A               	bsf	___fladd@aexp,0,c
  7344  001408  503A               	movf	___fladd@aexp,w,c
  7345  00140A  B4D8               	btfsc	status,2,c
  7346  00140C  D00D               	goto	l7472
  7347  00140E  283A               	incf	___fladd@aexp,w,c
  7348  001410  A4D8               	btfss	status,2,c
  7349  001412  D008               	goto	l7468
  7350  001414  0E00               	movlw	0
  7351  001416  6E31               	movwf	___fladd@a,c
  7352  001418  0E00               	movlw	0
  7353  00141A  6E32               	movwf	___fladd@a+1,c
  7354  00141C  0E00               	movlw	0
  7355  00141E  6E33               	movwf	___fladd@a+2,c
  7356  001420  0E00               	movlw	0
  7357  001422  6E34               	movwf	___fladd@a+3,c
  7358  001424                     l7468:
  7359  001424  8E33               	bsf	___fladd@a+2,7,c
  7360  001426  D006               	goto	L13
  7361  001428                     l7472:
  7362  001428  0E00               	movlw	0
  7363  00142A  6E31               	movwf	___fladd@a,c
  7364  00142C  0E00               	movlw	0
  7365  00142E  6E32               	movwf	___fladd@a+1,c
  7366  001430  0E00               	movlw	0
  7367  001432  6E33               	movwf	___fladd@a+2,c
  7368  001434                     L13:
  7369  001434  0E00               	movlw	0
  7370  001436  6E34               	movwf	___fladd@a+3,c
  7371  001438  503B               	movf	___fladd@bexp,w,c
  7372  00143A  5C3A               	subwf	___fladd@aexp,w,c
  7373  00143C  B0D8               	btfsc	status,0,c
  7374  00143E  D022               	goto	l7510
  7375  001440  AC39               	btfss	___fladd@signs,6,c
  7376  001442  D002               	goto	l7480
  7377  001444  0E80               	movlw	128
  7378  001446  1A39               	xorwf	___fladd@signs,f,c
  7379  001448                     l7480:
  7380  001448  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  7381  00144C  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7382  001450  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  7383  001454  C02D  F03C         	movff	___fladd@b,___fladd@grs
  7384  001458  C031  F02D         	movff	___fladd@a,___fladd@b
  7385  00145C  C03C  F031         	movff	___fladd@grs,___fladd@a
  7386  001460  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  7387  001464  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  7388  001468  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  7389  00146C  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  7390  001470  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  7391  001474  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  7392  001478  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  7393  00147C  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  7394  001480  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  7395  001484                     l7510:
  7396  001484  0E00               	movlw	0
  7397  001486  6E3C               	movwf	___fladd@grs,c
  7398  001488  503B               	movf	___fladd@bexp,w,c
  7399  00148A  C03A  F035         	movff	___fladd@aexp,??___fladd
  7400  00148E  6A36               	clrf	(??___fladd+1)& (0+255),c
  7401  001490  5E35               	subwf	??___fladd,f,c
  7402  001492  0E00               	movlw	0
  7403  001494  5A36               	subwfb	??___fladd+1,f,c
  7404  001496  BE36               	btfsc	??___fladd+1,7,c
  7405  001498  D02C               	goto	l1220
  7406  00149A  5036               	movf	??___fladd+1,w,c
  7407  00149C  E104               	bnz	u8770
  7408  00149E  0E1A               	movlw	26
  7409  0014A0  5C35               	subwf	??___fladd,w,c
  7410  0014A2  A0D8               	btfss	status,0,c
  7411  0014A4  D026               	goto	l1220
  7412  0014A6                     u8770:
  7413  0014A6  502D               	movf	___fladd@b,w,c
  7414  0014A8  102E               	iorwf	___fladd@b+1,w,c
  7415  0014AA  102F               	iorwf	___fladd@b+2,w,c
  7416  0014AC  1030               	iorwf	___fladd@b+3,w,c
  7417  0014AE  B4D8               	btfsc	status,2,c
  7418  0014B0  D002               	goto	u8780
  7419  0014B2  0E01               	movlw	1
  7420  0014B4  D001               	goto	u8790
  7421  0014B6                     u8780:
  7422  0014B6  0E00               	movlw	0
  7423  0014B8                     u8790:
  7424  0014B8  6E3C               	movwf	___fladd@grs,c
  7425  0014BA  0E00               	movlw	0
  7426  0014BC  6E2D               	movwf	___fladd@b,c
  7427  0014BE  0E00               	movlw	0
  7428  0014C0  6E2E               	movwf	___fladd@b+1,c
  7429  0014C2  0E00               	movlw	0
  7430  0014C4  6E2F               	movwf	___fladd@b+2,c
  7431  0014C6  0E00               	movlw	0
  7432  0014C8  6E30               	movwf	___fladd@b+3,c
  7433  0014CA  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7434  0014CE  D015               	goto	u8820
  7435  0014D0                     l1221:
  7436  0014D0  A03C               	btfss	___fladd@grs,0,c
  7437  0014D2  D005               	goto	l7522
  7438  0014D4  90D8               	bcf	status,0,c
  7439  0014D6  303C               	rrcf	___fladd@grs,w,c
  7440  0014D8  0901               	iorlw	1
  7441  0014DA  6E3C               	movwf	___fladd@grs,c
  7442  0014DC  D002               	goto	l7524
  7443  0014DE                     l7522:
  7444  0014DE  90D8               	bcf	status,0,c
  7445  0014E0  323C               	rrcf	___fladd@grs,f,c
  7446  0014E2                     l7524:
  7447  0014E2  B02D               	btfsc	___fladd@b,0,c
  7448  0014E4  8E3C               	bsf	___fladd@grs,7,c
  7449  0014E6  3430               	rlcf	___fladd@b+3,w,c
  7450  0014E8  3230               	rrcf	___fladd@b+3,f,c
  7451  0014EA  322F               	rrcf	___fladd@b+2,f,c
  7452  0014EC  322E               	rrcf	___fladd@b+1,f,c
  7453  0014EE  322D               	rrcf	___fladd@b,f,c
  7454  0014F0  2A3B               	incf	___fladd@bexp,f,c
  7455  0014F2                     l1220:
  7456  0014F2  503A               	movf	___fladd@aexp,w,c
  7457  0014F4  5C3B               	subwf	___fladd@bexp,w,c
  7458  0014F6  A0D8               	btfss	status,0,c
  7459  0014F8  D7EB               	goto	l1221
  7460  0014FA                     u8820:
  7461  0014FA  BC39               	btfsc	___fladd@signs,6,c
  7462  0014FC  D028               	goto	l7556
  7463  0014FE  503B               	movf	___fladd@bexp,w,c
  7464  001500  A4D8               	btfss	status,2,c
  7465  001502  D009               	goto	l7538
  7466  001504  0E00               	movlw	0
  7467  001506  6E2D               	movwf	?___fladd,c
  7468  001508  0E00               	movlw	0
  7469  00150A  6E2E               	movwf	?___fladd+1,c
  7470  00150C  0E00               	movlw	0
  7471  00150E  6E2F               	movwf	?___fladd+2,c
  7472  001510  0E00               	movlw	0
  7473  001512  6E30               	movwf	?___fladd+3,c
  7474  001514  0012               	return	
  7475  001516                     l7538:
  7476  001516  5031               	movf	___fladd@a,w,c
  7477  001518  262D               	addwf	___fladd@b,f,c
  7478  00151A  5032               	movf	___fladd@a+1,w,c
  7479  00151C  222E               	addwfc	___fladd@b+1,f,c
  7480  00151E  5033               	movf	___fladd@a+2,w,c
  7481  001520  222F               	addwfc	___fladd@b+2,f,c
  7482  001522  5034               	movf	___fladd@a+3,w,c
  7483  001524  2230               	addwfc	___fladd@b+3,f,c
  7484  001526  A030               	btfss	___fladd@b+3,0,c
  7485  001528  D071               	goto	u8950
  7486  00152A  A03C               	btfss	___fladd@grs,0,c
  7487  00152C  D005               	goto	l7546
  7488  00152E  90D8               	bcf	status,0,c
  7489  001530  303C               	rrcf	___fladd@grs,w,c
  7490  001532  0901               	iorlw	1
  7491  001534  6E3C               	movwf	___fladd@grs,c
  7492  001536  D002               	goto	l7548
  7493  001538                     l7546:
  7494  001538  90D8               	bcf	status,0,c
  7495  00153A  323C               	rrcf	___fladd@grs,f,c
  7496  00153C                     l7548:
  7497  00153C  B02D               	btfsc	___fladd@b,0,c
  7498  00153E  8E3C               	bsf	___fladd@grs,7,c
  7499  001540  3430               	rlcf	___fladd@b+3,w,c
  7500  001542  3230               	rrcf	___fladd@b+3,f,c
  7501  001544  322F               	rrcf	___fladd@b+2,f,c
  7502  001546  322E               	rrcf	___fladd@b+1,f,c
  7503  001548  322D               	rrcf	___fladd@b,f,c
  7504  00154A  2A3B               	incf	___fladd@bexp,f,c
  7505  00154C  D05F               	goto	u8950
  7506  00154E                     l7556:
  7507  00154E  5031               	movf	___fladd@a,w,c
  7508  001550  5C2D               	subwf	___fladd@b,w,c
  7509  001552  5032               	movf	___fladd@a+1,w,c
  7510  001554  582E               	subwfb	___fladd@b+1,w,c
  7511  001556  5033               	movf	___fladd@a+2,w,c
  7512  001558  582F               	subwfb	___fladd@b+2,w,c
  7513  00155A  5030               	movf	___fladd@b+3,w,c
  7514  00155C  0A80               	xorlw	128
  7515  00155E  6E35               	movwf	??___fladd& (0+255),c
  7516  001560  5034               	movf	___fladd@a+3,w,c
  7517  001562  0A80               	xorlw	128
  7518  001564  5835               	subwfb	??___fladd& (0+255),w,c
  7519  001566  B0D8               	btfsc	status,0,c
  7520  001568  D025               	goto	l7566
  7521  00156A  502D               	movf	___fladd@b,w,c
  7522  00156C  5C31               	subwf	___fladd@a,w,c
  7523  00156E  6E35               	movwf	??___fladd& (0+255),c
  7524  001570  502E               	movf	___fladd@b+1,w,c
  7525  001572  5832               	subwfb	___fladd@a+1,w,c
  7526  001574  6E36               	movwf	(??___fladd+1)& (0+255),c
  7527  001576  502F               	movf	___fladd@b+2,w,c
  7528  001578  5833               	subwfb	___fladd@a+2,w,c
  7529  00157A  6E37               	movwf	(??___fladd+2)& (0+255),c
  7530  00157C  5030               	movf	___fladd@b+3,w,c
  7531  00157E  5834               	subwfb	___fladd@a+3,w,c
  7532  001580  6E38               	movwf	(??___fladd+3)& (0+255),c
  7533  001582  0EFF               	movlw	255
  7534  001584  2435               	addwf	??___fladd,w,c
  7535  001586  6E2D               	movwf	___fladd@b,c
  7536  001588  0EFF               	movlw	255
  7537  00158A  2036               	addwfc	??___fladd+1,w,c
  7538  00158C  6E2E               	movwf	___fladd@b+1,c
  7539  00158E  0EFF               	movlw	255
  7540  001590  2037               	addwfc	??___fladd+2,w,c
  7541  001592  6E2F               	movwf	___fladd@b+2,c
  7542  001594  0EFF               	movlw	255
  7543  001596  2038               	addwfc	??___fladd+3,w,c
  7544  001598  6E30               	movwf	___fladd@b+3,c
  7545  00159A  0E80               	movlw	128
  7546  00159C  1A39               	xorwf	___fladd@signs,f,c
  7547  00159E  6C3C               	negf	___fladd@grs,c
  7548  0015A0  503C               	movf	___fladd@grs,w,c
  7549  0015A2  A4D8               	btfss	status,2,c
  7550  0015A4  D00F               	goto	l1236
  7551  0015A6  0E01               	movlw	1
  7552  0015A8  262D               	addwf	___fladd@b,f,c
  7553  0015AA  0E00               	movlw	0
  7554  0015AC  222E               	addwfc	___fladd@b+1,f,c
  7555  0015AE  222F               	addwfc	___fladd@b+2,f,c
  7556  0015B0  2230               	addwfc	___fladd@b+3,f,c
  7557  0015B2  D008               	goto	l1236
  7558  0015B4                     l7566:
  7559  0015B4  5031               	movf	___fladd@a,w,c
  7560  0015B6  5E2D               	subwf	___fladd@b,f,c
  7561  0015B8  5032               	movf	___fladd@a+1,w,c
  7562  0015BA  5A2E               	subwfb	___fladd@b+1,f,c
  7563  0015BC  5033               	movf	___fladd@a+2,w,c
  7564  0015BE  5A2F               	subwfb	___fladd@b+2,f,c
  7565  0015C0  5034               	movf	___fladd@a+3,w,c
  7566  0015C2  5A30               	subwfb	___fladd@b+3,f,c
  7567  0015C4                     l1236:
  7568  0015C4  502D               	movf	___fladd@b,w,c
  7569  0015C6  102E               	iorwf	___fladd@b+1,w,c
  7570  0015C8  102F               	iorwf	___fladd@b+2,w,c
  7571  0015CA  1030               	iorwf	___fladd@b+3,w,c
  7572  0015CC  A4D8               	btfss	status,2,c
  7573  0015CE  D01C               	goto	l7590
  7574  0015D0  503C               	movf	___fladd@grs,w,c
  7575  0015D2  A4D8               	btfss	status,2,c
  7576  0015D4  D019               	goto	l7590
  7577  0015D6  0E00               	movlw	0
  7578  0015D8  6E2D               	movwf	?___fladd,c
  7579  0015DA  0E00               	movlw	0
  7580  0015DC  6E2E               	movwf	?___fladd+1,c
  7581  0015DE  0E00               	movlw	0
  7582  0015E0  6E2F               	movwf	?___fladd+2,c
  7583  0015E2  0E00               	movlw	0
  7584  0015E4  6E30               	movwf	?___fladd+3,c
  7585  0015E6  0012               	return	
  7586  0015E8                     l7574:
  7587  0015E8  90D8               	bcf	status,0,c
  7588  0015EA  362D               	rlcf	___fladd@b,f,c
  7589  0015EC  362E               	rlcf	___fladd@b+1,f,c
  7590  0015EE  362F               	rlcf	___fladd@b+2,f,c
  7591  0015F0  3630               	rlcf	___fladd@b+3,f,c
  7592  0015F2  BE3C               	btfsc	___fladd@grs,7,c
  7593  0015F4  802D               	bsf	___fladd@b,0,c
  7594  0015F6  A03C               	btfss	___fladd@grs,0,c
  7595  0015F8  D002               	goto	l7584
  7596  0015FA  80D8               	bsf	status,0,c
  7597  0015FC  D001               	goto	L14
  7598  0015FE                     l7584:
  7599  0015FE  90D8               	bcf	status,0,c
  7600  001600                     L14:
  7601  001600  363C               	rlcf	___fladd@grs,f,c
  7602  001602  503B               	movf	___fladd@bexp,w,c
  7603  001604  A4D8               	btfss	status,2,c
  7604  001606  063B               	decf	___fladd@bexp,f,c
  7605  001608                     l7590:
  7606  001608  AE2F               	btfss	___fladd@b+2,7,c
  7607  00160A  D7EE               	goto	l7574
  7608  00160C                     u8950:
  7609  00160C  0E00               	movlw	0
  7610  00160E  6E3A               	movwf	___fladd@aexp,c
  7611  001610  AE3C               	btfss	___fladd@grs,7,c
  7612  001612  D00B               	goto	l1245
  7613  001614  C03C  F035         	movff	___fladd@grs,??___fladd
  7614  001618  0E7F               	movlw	127
  7615  00161A  1635               	andwf	??___fladd,f,c
  7616  00161C  B4D8               	btfsc	status,2,c
  7617  00161E  D003               	goto	l1246
  7618  001620                     u8970:
  7619  001620  0E01               	movlw	1
  7620  001622  6E3A               	movwf	___fladd@aexp,c
  7621  001624  D002               	goto	l1245
  7622  001626                     l1246:
  7623  001626  B02D               	btfsc	___fladd@b,0,c
  7624  001628  D7FB               	goto	u8970
  7625  00162A                     l1245:
  7626  00162A  503A               	movf	___fladd@aexp,w,c
  7627  00162C  B4D8               	btfsc	status,2,c
  7628  00162E  D020               	goto	l7610
  7629  001630  0E01               	movlw	1
  7630  001632  262D               	addwf	___fladd@b,f,c
  7631  001634  0E00               	movlw	0
  7632  001636  222E               	addwfc	___fladd@b+1,f,c
  7633  001638  222F               	addwfc	___fladd@b+2,f,c
  7634  00163A  2230               	addwfc	___fladd@b+3,f,c
  7635  00163C  A030               	btfss	___fladd@b+3,0,c
  7636  00163E  D018               	goto	l7610
  7637  001640  C02D  F035         	movff	___fladd@b,??___fladd
  7638  001644  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  7639  001648  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  7640  00164C  C030  F038         	movff	___fladd@b+3,??___fladd+3
  7641  001650  3438               	rlcf	??___fladd+3,w,c
  7642  001652  3238               	rrcf	??___fladd+3,f,c
  7643  001654  3237               	rrcf	??___fladd+2,f,c
  7644  001656  3236               	rrcf	??___fladd+1,f,c
  7645  001658  3235               	rrcf	??___fladd,f,c
  7646  00165A  C035  F02D         	movff	??___fladd,___fladd@b
  7647  00165E  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  7648  001662  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  7649  001666  C038  F030         	movff	??___fladd+3,___fladd@b+3
  7650  00166A  283B               	incf	___fladd@bexp,w,c
  7651  00166C  A4D8               	btfss	status,2,c
  7652  00166E  2A3B               	incf	___fladd@bexp,f,c
  7653  001670                     l7610:
  7654  001670  283B               	incf	___fladd@bexp,w,c
  7655  001672  B4D8               	btfsc	status,2,c
  7656  001674  D003               	goto	u9030
  7657  001676  503B               	movf	___fladd@bexp,w,c
  7658  001678  A4D8               	btfss	status,2,c
  7659  00167A  D00D               	goto	l7618
  7660  00167C                     u9030:
  7661  00167C  0E00               	movlw	0
  7662  00167E  6E2D               	movwf	___fladd@b,c
  7663  001680  0E00               	movlw	0
  7664  001682  6E2E               	movwf	___fladd@b+1,c
  7665  001684  0E00               	movlw	0
  7666  001686  6E2F               	movwf	___fladd@b+2,c
  7667  001688  0E00               	movlw	0
  7668  00168A  6E30               	movwf	___fladd@b+3,c
  7669  00168C  503B               	movf	___fladd@bexp,w,c
  7670  00168E  A4D8               	btfss	status,2,c
  7671  001690  D002               	goto	l7618
  7672  001692  0E00               	movlw	0
  7673  001694  6E39               	movwf	___fladd@signs,c
  7674  001696                     l7618:
  7675  001696  A03B               	btfss	___fladd@bexp,0,c
  7676  001698  D002               	goto	l7622
  7677  00169A  8E2F               	bsf	___fladd@b+2,7,c
  7678  00169C  D001               	goto	l7624
  7679  00169E                     l7622:
  7680  00169E  9E2F               	bcf	___fladd@b+2,7,c
  7681  0016A0                     l7624:
  7682  0016A0  90D8               	bcf	status,0,c
  7683  0016A2  303B               	rrcf	___fladd@bexp,w,c
  7684  0016A4  6E30               	movwf	___fladd@b+3,c
  7685  0016A6  BE39               	btfsc	___fladd@signs,7,c
  7686  0016A8  8E30               	bsf	___fladd@b+3,7,c
  7687  0016AA  C02D  F02D         	movff	___fladd@b,?___fladd
  7688  0016AE  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  7689  0016B2  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  7690  0016B6  C030  F030         	movff	___fladd@b+3,?___fladd+3
  7691  0016BA  0012               	return		;funcret
  7692  0016BC                     __end_of___fladd:
  7693                           	opt callstack 0
  7694                           
  7695 ;; *************** function ___awmod *****************
  7696 ;; Defined at:
  7697 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  dividend        2    5[COMRAM] int 
  7700 ;;  divisor         2    7[COMRAM] int 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  sign            1   10[COMRAM] unsigned char 
  7703 ;;  counter         1    9[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  2    5[COMRAM] int 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;Total ram usage:        6 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    2
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_doOperation
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text29
  7728  002F20                     __ptext29:
  7729                           	opt callstack 0
  7730  002F20                     ___awmod:
  7731                           	opt callstack 27
  7732                           
  7733                           ;incstack = 0
  7734  002F20  0E00               	movlw	0
  7735  002F22  6E0B               	movwf	___awmod@sign,c
  7736  002F24  AE07               	btfss	___awmod@dividend+1,7,c
  7737  002F26  D006               	goto	l8002
  7738  002F28  6C06               	negf	___awmod@dividend,c
  7739  002F2A  1E07               	comf	___awmod@dividend+1,f,c
  7740  002F2C  B0D8               	btfsc	status,0,c
  7741  002F2E  2A07               	incf	___awmod@dividend+1,f,c
  7742  002F30  0E01               	movlw	1
  7743  002F32  6E0B               	movwf	___awmod@sign,c
  7744  002F34                     l8002:
  7745  002F34  AE09               	btfss	___awmod@divisor+1,7,c
  7746  002F36  D004               	goto	l8006
  7747  002F38  6C08               	negf	___awmod@divisor,c
  7748  002F3A  1E09               	comf	___awmod@divisor+1,f,c
  7749  002F3C  B0D8               	btfsc	status,0,c
  7750  002F3E  2A09               	incf	___awmod@divisor+1,f,c
  7751  002F40                     l8006:
  7752  002F40  5008               	movf	___awmod@divisor,w,c
  7753  002F42  1009               	iorwf	___awmod@divisor+1,w,c
  7754  002F44  B4D8               	btfsc	status,2,c
  7755  002F46  D018               	goto	l8022
  7756  002F48  0E01               	movlw	1
  7757  002F4A  6E0A               	movwf	___awmod@counter,c
  7758  002F4C  D004               	goto	l8012
  7759  002F4E                     l8010:
  7760  002F4E  90D8               	bcf	status,0,c
  7761  002F50  3608               	rlcf	___awmod@divisor,f,c
  7762  002F52  3609               	rlcf	___awmod@divisor+1,f,c
  7763  002F54  2A0A               	incf	___awmod@counter,f,c
  7764  002F56                     l8012:
  7765  002F56  AE09               	btfss	___awmod@divisor+1,7,c
  7766  002F58  D7FA               	goto	l8010
  7767  002F5A                     u9520:
  7768  002F5A  5008               	movf	___awmod@divisor,w,c
  7769  002F5C  5C06               	subwf	___awmod@dividend,w,c
  7770  002F5E  5009               	movf	___awmod@divisor+1,w,c
  7771  002F60  5807               	subwfb	___awmod@dividend+1,w,c
  7772  002F62  A0D8               	btfss	status,0,c
  7773  002F64  D004               	goto	l8018
  7774  002F66  5008               	movf	___awmod@divisor,w,c
  7775  002F68  5E06               	subwf	___awmod@dividend,f,c
  7776  002F6A  5009               	movf	___awmod@divisor+1,w,c
  7777  002F6C  5A07               	subwfb	___awmod@dividend+1,f,c
  7778  002F6E                     l8018:
  7779  002F6E  90D8               	bcf	status,0,c
  7780  002F70  3209               	rrcf	___awmod@divisor+1,f,c
  7781  002F72  3208               	rrcf	___awmod@divisor,f,c
  7782  002F74  2E0A               	decfsz	___awmod@counter,f,c
  7783  002F76  D7F1               	goto	u9520
  7784  002F78                     l8022:
  7785  002F78  500B               	movf	___awmod@sign,w,c
  7786  002F7A  B4D8               	btfsc	status,2,c
  7787  002F7C  D004               	goto	l8026
  7788  002F7E  6C06               	negf	___awmod@dividend,c
  7789  002F80  1E07               	comf	___awmod@dividend+1,f,c
  7790  002F82  B0D8               	btfsc	status,0,c
  7791  002F84  2A07               	incf	___awmod@dividend+1,f,c
  7792  002F86                     l8026:
  7793  002F86  C006  F006         	movff	___awmod@dividend,?___awmod
  7794  002F8A  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  7795  002F8E  0012               	return		;funcret
  7796  002F90                     __end_of___awmod:
  7797                           	opt callstack 0
  7798                           
  7799 ;; *************** function _TIMER_INIT *****************
  7800 ;; Defined at:
  7801 ;;		line 215 in file "main.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    2
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_doOperation
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text30
  7830  0036B0                     __ptext30:
  7831                           	opt callstack 0
  7832  0036B0                     _TIMER_INIT:
  7833                           	opt callstack 27
  7834                           
  7835                           ;main.c: 216:     T0CONbits.TMR0ON = 0;
  7836                           
  7837                           ;incstack = 0
  7838  0036B0  9ED5               	bcf	4053,7,c	;volatile
  7839                           
  7840                           ;main.c: 217:     T0CONbits.T08BIT = 0;
  7841  0036B2  9CD5               	bcf	4053,6,c	;volatile
  7842                           
  7843                           ;main.c: 218:     T0CONbits.T0CS = 0;
  7844  0036B4  9AD5               	bcf	4053,5,c	;volatile
  7845                           
  7846                           ;main.c: 219:     T0CONbits.PSA = 0;
  7847  0036B6  96D5               	bcf	4053,3,c	;volatile
  7848                           
  7849                           ;main.c: 220:     T0CONbits.T0PS = 0b000;
  7850  0036B8  0EF8               	movlw	-8
  7851  0036BA  16D5               	andwf	4053,f,c	;volatile
  7852                           
  7853                           ;main.c: 221:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  7854  0036BC  0EFB               	movlw	251
  7855  0036BE  6ED7               	movwf	4055,c	;volatile
  7856                           
  7857                           ;main.c: 222:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  7858  0036C0  0E1E               	movlw	30
  7859  0036C2  6ED6               	movwf	4054,c	;volatile
  7860                           
  7861                           ;main.c: 223:     T0CONbits.TMR0ON = 1;
  7862  0036C4  8ED5               	bsf	4053,7,c	;volatile
  7863                           
  7864                           ;main.c: 224:     INTCONbits.TMR0IE = 1;
  7865  0036C6  8AF2               	bsf	4082,5,c	;volatile
  7866                           
  7867                           ;main.c: 226:     INTCONbits.GIE = 1;
  7868  0036C8  8EF2               	bsf	4082,7,c	;volatile
  7869                           
  7870                           ;main.c: 227:     INTCONbits.PEIE = 1;
  7871  0036CA  8CF2               	bsf	4082,6,c	;volatile
  7872  0036CC  0012               	return		;funcret
  7873  0036CE                     __end_of_TIMER_INIT:
  7874                           	opt callstack 0
  7875                           
  7876 ;; *************** function _doDisplayLog *****************
  7877 ;; Defined at:
  7878 ;;		line 40 in file "main.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  logNumber       2   14[BANK0 ] int 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  keyValue        1   22[BANK0 ] unsigned char 
  7883 ;;  keypress        1   20[BANK0 ] unsigned char 
  7884 ;;  currentPole     2   23[BANK0 ] int 
  7885 ;;  currentDispl    1   21[BANK0 ] enum E3250
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;Total ram usage:       13 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:   13
  7902 ;; This function calls:
  7903 ;;		___wmul
  7904 ;;		_lcdInst
  7905 ;;		_printf
  7906 ;; This function is called by:
  7907 ;;		_main
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text31
  7912  000CB0                     __ptext31:
  7913                           	opt callstack 0
  7914  000CB0                     _doDisplayLog:
  7915                           	opt callstack 17
  7916                           
  7917                           ;main.c: 41:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  7918                           
  7919                           ;incstack = 0
  7920  000CB0  0E80               	movlw	128
  7921  000CB2  EC96  F01B         	call	_lcdInst
  7922  000CB6  0E07               	movlw	7
  7923  000CB8  0100               	movlb	0	; () banked
  7924  000CBA  6F90               	movwf	??_doDisplayLog& (0+255),b
  7925  000CBC  0E7D               	movlw	125
  7926  000CBE                     u10177:
  7927  000CBE  2EE8               	decfsz	wreg,f,c
  7928  000CC0  D7FE               	bra	u10177
  7929  000CC2  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7930  000CC4  D7FC               	bra	u10177
  7931                           
  7932                           ;main.c: 46:     int currentPole = 1;
  7933  000CC6  0E00               	movlw	0
  7934  000CC8  0100               	movlb	0	; () banked
  7935  000CCA  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  7936  000CCC  0E01               	movlw	1
  7937  000CCE  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;main.c: 48:     enum displayStates currentDisplayState = opTime;
  7941  000CD0  0E00               	movlw	0
  7942  000CD2  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  7943  000CD4  D134               	goto	l8086
  7944  000CD6                     l8038:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;main.c: 53:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  7948  000CD6  0E80               	movlw	128
  7949  000CD8  EC96  F01B         	call	_lcdInst
  7950  000CDC  0E07               	movlw	7
  7951  000CDE  0100               	movlb	0	; () banked
  7952  000CE0  6F90               	movwf	??_doDisplayLog& (0+255),b
  7953  000CE2  0E7D               	movlw	125
  7954  000CE4                     u10187:
  7955  000CE4  2EE8               	decfsz	wreg,f,c
  7956  000CE6  D7FE               	bra	u10187
  7957  000CE8  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7958  000CEA  D7FC               	bra	u10187
  7959                           
  7960                           ;main.c: 54:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  7961  000CEC  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7962  000CF0  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7963  000CF4  0E00               	movlw	0
  7964  000CF6  6E09               	movwf	___wmul@multiplicand+1,c
  7965  000CF8  0E42               	movlw	66
  7966  000CFA  6E08               	movwf	___wmul@multiplicand,c
  7967  000CFC  EC22  F01B         	call	___wmul	;wreg free
  7968  000D00  0E30               	movlw	low _logs
  7969  000D02  2406               	addwf	?___wmul,w,c
  7970  000D04  6ED9               	movwf	fsr2l,c
  7971  000D06  0E01               	movlw	high _logs
  7972  000D08  2007               	addwfc	?___wmul+1,w,c
  7973  000D0A  6EDA               	movwf	fsr2h,c
  7974  000D0C  CFDE F099          	movff	postinc2,_doDisplayLog$2194
  7975  000D10  CFDD F09A          	movff	postdec2,_doDisplayLog$2194+1
  7976                           
  7977                           ;main.c: 54:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  7978  000D14  0EE3               	movlw	low STR_1
  7979  000D16  0100               	movlb	0	; () banked
  7980  000D18  6F80               	movwf	printf@fmt& (0+255),b
  7981  000D1A  0EFF               	movlw	high STR_1
  7982  000D1C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7983  000D1E  0E97               	movlw	low STR_2
  7984  000D20  6F82               	movwf	(?_printf+2)& (0+255),b
  7985  000D22  0EFF               	movlw	high STR_2
  7986  000D24  6F83               	movwf	(?_printf+3)& (0+255),b
  7987  000D26  C099  F084         	movff	_doDisplayLog$2194,?_printf+4
  7988  000D2A  C09A  F085         	movff	_doDisplayLog$2194+1,?_printf+5
  7989  000D2E  0EE8               	movlw	low (STR_1+5)
  7990  000D30  6F86               	movwf	(?_printf+6)& (0+255),b
  7991  000D32  0EFF               	movlw	high (STR_1+5)
  7992  000D34  6F87               	movwf	(?_printf+7)& (0+255),b
  7993  000D36  EC0E  F01B         	call	_printf	;wreg free
  7994  000D3A  0EC0               	movlw	192
  7995  000D3C  EC96  F01B         	call	_lcdInst
  7996                           
  7997                           ;main.c: 56:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  7998  000D40  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7999  000D44  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8000  000D48  0E00               	movlw	0
  8001  000D4A  6E09               	movwf	___wmul@multiplicand+1,c
  8002  000D4C  0E42               	movlw	66
  8003  000D4E  6E08               	movwf	___wmul@multiplicand,c
  8004  000D50  EC22  F01B         	call	___wmul	;wreg free
  8005  000D54  0E32               	movlw	low (_logs+2)
  8006  000D56  2406               	addwf	?___wmul,w,c
  8007  000D58  6ED9               	movwf	fsr2l,c
  8008  000D5A  0E01               	movlw	high (_logs+2)
  8009  000D5C  2007               	addwfc	?___wmul+1,w,c
  8010  000D5E  6EDA               	movwf	fsr2h,c
  8011  000D60  CFDE F099          	movff	postinc2,_doDisplayLog$2194
  8012  000D64  CFDD F09A          	movff	postdec2,_doDisplayLog$2194+1
  8013                           
  8014                           ;main.c: 56:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8015  000D68  0EDE               	movlw	low (STR_10+4)
  8016  000D6A  0100               	movlb	0	; () banked
  8017  000D6C  6F80               	movwf	printf@fmt& (0+255),b
  8018  000D6E  0EFF               	movlw	high (STR_10+4)
  8019  000D70  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8020  000D72  0EC4               	movlw	low STR_5
  8021  000D74  6F82               	movwf	(?_printf+2)& (0+255),b
  8022  000D76  0EFE               	movlw	high STR_5
  8023  000D78  6F83               	movwf	(?_printf+3)& (0+255),b
  8024  000D7A  C099  F084         	movff	_doDisplayLog$2194,?_printf+4
  8025  000D7E  C09A  F085         	movff	_doDisplayLog$2194+1,?_printf+5
  8026  000D82  EC0E  F01B         	call	_printf	;wreg free
  8027  000D86  0E90               	movlw	144
  8028  000D88  EC96  F01B         	call	_lcdInst
  8029                           
  8030                           ;main.c: 58:                 printf("%s","(1) POLE INFO");
  8031  000D8C  0EE7               	movlw	low (STR_1+4)
  8032  000D8E  0100               	movlb	0	; () banked
  8033  000D90  6F80               	movwf	printf@fmt& (0+255),b
  8034  000D92  0EFF               	movlw	high (STR_1+4)
  8035  000D94  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8036  000D96  0E0D               	movlw	low STR_7
  8037  000D98  6F82               	movwf	(?_printf+2)& (0+255),b
  8038  000D9A  0EFF               	movlw	high STR_7
  8039  000D9C  6F83               	movwf	(?_printf+3)& (0+255),b
  8040  000D9E  EC0E  F01B         	call	_printf	;wreg free
  8041  000DA2  0ED0               	movlw	208
  8042  000DA4  EC96  F01B         	call	_lcdInst
  8043                           
  8044                           ;main.c: 60:                 printf("%s","(2) SAVE & EXIT");
  8045  000DA8  0EE7               	movlw	low (STR_1+4)
  8046  000DAA  0100               	movlb	0	; () banked
  8047  000DAC  6F80               	movwf	printf@fmt& (0+255),b
  8048  000DAE  0EFF               	movlw	high (STR_1+4)
  8049  000DB0  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8050  000DB2  0EA4               	movlw	low STR_9
  8051  000DB4  6F82               	movwf	(?_printf+2)& (0+255),b
  8052  000DB6  0EFE               	movlw	high STR_9
  8053  000DB8  6F83               	movwf	(?_printf+3)& (0+255),b
  8054  000DBA  EC0E  F01B         	call	_printf	;wreg free
  8055                           
  8056                           ;main.c: 61:                 break;
  8057  000DBE  D0CE               	goto	l8088
  8058  000DC0                     l8060:
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;main.c: 63:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8062  000DC0  0E80               	movlw	128
  8063  000DC2  EC96  F01B         	call	_lcdInst
  8064  000DC6  0E07               	movlw	7
  8065  000DC8  0100               	movlb	0	; () banked
  8066  000DCA  6F90               	movwf	??_doDisplayLog& (0+255),b
  8067  000DCC  0E7D               	movlw	125
  8068  000DCE                     u10197:
  8069  000DCE  2EE8               	decfsz	wreg,f,c
  8070  000DD0  D7FE               	bra	u10197
  8071  000DD2  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8072  000DD4  D7FC               	bra	u10197
  8073                           
  8074                           ;main.c: 64:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8075  000DD6  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8076  000DDA  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8077  000DDE  0E00               	movlw	0
  8078  000DE0  6E09               	movwf	___wmul@multiplicand+1,c
  8079  000DE2  0E42               	movlw	66
  8080  000DE4  6E08               	movwf	___wmul@multiplicand,c
  8081  000DE6  EC22  F01B         	call	___wmul	;wreg free
  8082  000DEA  0E34               	movlw	low (_logs+4)
  8083  000DEC  2406               	addwf	?___wmul,w,c
  8084  000DEE  6ED9               	movwf	fsr2l,c
  8085  000DF0  0E01               	movlw	high (_logs+4)
  8086  000DF2  2007               	addwfc	?___wmul+1,w,c
  8087  000DF4  6EDA               	movwf	fsr2h,c
  8088  000DF6  CFDE F099          	movff	postinc2,_doDisplayLog$2194
  8089  000DFA  CFDD F09A          	movff	postdec2,_doDisplayLog$2194+1
  8090                           
  8091                           ;main.c: 64:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8092  000DFE  0EDA               	movlw	low STR_10
  8093  000E00  0100               	movlb	0	; () banked
  8094  000E02  6F80               	movwf	printf@fmt& (0+255),b
  8095  000E04  0EFF               	movlw	high STR_10
  8096  000E06  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8097  000E08  0EEA               	movlw	low STR_11
  8098  000E0A  6F82               	movwf	(?_printf+2)& (0+255),b
  8099  000E0C  0EFF               	movlw	high STR_11
  8100  000E0E  6F83               	movwf	(?_printf+3)& (0+255),b
  8101  000E10  C097  F084         	movff	doDisplayLog@currentPole,?_printf+4
  8102  000E14  C098  F085         	movff	doDisplayLog@currentPole+1,?_printf+5
  8103  000E18  0EFC               	movlw	low STR_12
  8104  000E1A  6F86               	movwf	(?_printf+6)& (0+255),b
  8105  000E1C  0EFF               	movlw	high STR_12
  8106  000E1E  6F87               	movwf	(?_printf+7)& (0+255),b
  8107  000E20  C099  F088         	movff	_doDisplayLog$2194,?_printf+8
  8108  000E24  C09A  F089         	movff	_doDisplayLog$2194+1,?_printf+9
  8109  000E28  EC0E  F01B         	call	_printf	;wreg free
  8110  000E2C  0EC0               	movlw	192
  8111  000E2E  EC96  F01B         	call	_lcdInst
  8112                           
  8113                           ;main.c: 66:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8114  000E32  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8115  000E36  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8116  000E3A  90D8               	bcf	status,0,c
  8117  000E3C  0100               	movlb	0	; () banked
  8118  000E3E  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8119  000E40  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8120  000E42  90D8               	bcf	status,0,c
  8121  000E44  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8122  000E46  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8123  000E48  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8124  000E4C  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8125  000E50  0E00               	movlw	0
  8126  000E52  6E09               	movwf	___wmul@multiplicand+1,c
  8127  000E54  0E42               	movlw	66
  8128  000E56  6E08               	movwf	___wmul@multiplicand,c
  8129  000E58  EC22  F01B         	call	___wmul	;wreg free
  8130  000E5C  0E30               	movlw	low _logs
  8131  000E5E  0100               	movlb	0	; () banked
  8132  000E60  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8133  000E62  0E01               	movlw	high _logs
  8134  000E64  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8135  000E66  0E02               	movlw	2
  8136  000E68  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8137  000E6A  0E00               	movlw	0
  8138  000E6C  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8139  000E6E  5006               	movf	?___wmul,w,c
  8140  000E70  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8141  000E72  5007               	movf	?___wmul+1,w,c
  8142  000E74  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8143  000E76  5190               	movf	??_doDisplayLog& (0+255),w,b
  8144  000E78  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8145  000E7A  6ED9               	movwf	fsr2l,c
  8146  000E7C  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8147  000E7E  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8148  000E80  6EDA               	movwf	fsr2h,c
  8149  000E82  CFDE F099          	movff	postinc2,_doDisplayLog$2194
  8150  000E86  CFDD F09A          	movff	postdec2,_doDisplayLog$2194+1
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;main.c: 66:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8154  000E8A  0EDE               	movlw	low (STR_10+4)
  8155  000E8C  6F80               	movwf	printf@fmt& (0+255),b
  8156  000E8E  0EFF               	movlw	high (STR_10+4)
  8157  000E90  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8158  000E92  0EF1               	movlw	low STR_14
  8159  000E94  6F82               	movwf	(?_printf+2)& (0+255),b
  8160  000E96  0EFE               	movlw	high STR_14
  8161  000E98  6F83               	movwf	(?_printf+3)& (0+255),b
  8162  000E9A  C099  F084         	movff	_doDisplayLog$2194,?_printf+4
  8163  000E9E  C09A  F085         	movff	_doDisplayLog$2194+1,?_printf+5
  8164  000EA2  EC0E  F01B         	call	_printf	;wreg free
  8165  000EA6  0E90               	movlw	144
  8166  000EA8  EC96  F01B         	call	_lcdInst
  8167                           
  8168                           ;main.c: 68:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8169  000EAC  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8170  000EB0  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8171  000EB4  90D8               	bcf	status,0,c
  8172  000EB6  0100               	movlb	0	; () banked
  8173  000EB8  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8174  000EBA  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8175  000EBC  90D8               	bcf	status,0,c
  8176  000EBE  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8177  000EC0  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8178  000EC2  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8179  000EC6  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8180  000ECA  0E00               	movlw	0
  8181  000ECC  6E09               	movwf	___wmul@multiplicand+1,c
  8182  000ECE  0E42               	movlw	66
  8183  000ED0  6E08               	movwf	___wmul@multiplicand,c
  8184  000ED2  EC22  F01B         	call	___wmul	;wreg free
  8185  000ED6  0E30               	movlw	low _logs
  8186  000ED8  0100               	movlb	0	; () banked
  8187  000EDA  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8188  000EDC  0E01               	movlw	high _logs
  8189  000EDE  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8190  000EE0  0E04               	movlw	4
  8191  000EE2  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8192  000EE4  0E00               	movlw	0
  8193  000EE6  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8194  000EE8  5006               	movf	?___wmul,w,c
  8195  000EEA  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8196  000EEC  5007               	movf	?___wmul+1,w,c
  8197  000EEE  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8198  000EF0  5190               	movf	??_doDisplayLog& (0+255),w,b
  8199  000EF2  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8200  000EF4  6ED9               	movwf	fsr2l,c
  8201  000EF6  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8202  000EF8  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8203  000EFA  6EDA               	movwf	fsr2h,c
  8204  000EFC  CFDE F099          	movff	postinc2,_doDisplayLog$2194
  8205  000F00  CFDD F09A          	movff	postdec2,_doDisplayLog$2194+1
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;main.c: 68:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8209  000F04  0EDE               	movlw	low (STR_10+4)
  8210  000F06  6F80               	movwf	printf@fmt& (0+255),b
  8211  000F08  0EFF               	movlw	high (STR_10+4)
  8212  000F0A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8213  000F0C  0E84               	movlw	low STR_16
  8214  000F0E  6F82               	movwf	(?_printf+2)& (0+255),b
  8215  000F10  0EFE               	movlw	high STR_16
  8216  000F12  6F83               	movwf	(?_printf+3)& (0+255),b
  8217  000F14  C099  F084         	movff	_doDisplayLog$2194,?_printf+4
  8218  000F18  C09A  F085         	movff	_doDisplayLog$2194+1,?_printf+5
  8219  000F1C  EC0E  F01B         	call	_printf	;wreg free
  8220  000F20  0ED0               	movlw	208
  8221  000F22  EC96  F01B         	call	_lcdInst
  8222                           
  8223                           ;main.c: 70:                 printf("%s","1<- 2-> 3MENU");
  8224  000F26  0EE7               	movlw	low (STR_1+4)
  8225  000F28  0100               	movlb	0	; () banked
  8226  000F2A  6F80               	movwf	printf@fmt& (0+255),b
  8227  000F2C  0EFF               	movlw	high (STR_1+4)
  8228  000F2E  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8229  000F30  0E29               	movlw	low STR_18
  8230  000F32  6F82               	movwf	(?_printf+2)& (0+255),b
  8231  000F34  0EFF               	movlw	high STR_18
  8232  000F36  6F83               	movwf	(?_printf+3)& (0+255),b
  8233  000F38  EC0E  F01B         	call	_printf	;wreg free
  8234                           
  8235                           ;main.c: 71:                 break;
  8236  000F3C  D00F               	goto	l8088
  8237  000F3E                     l8086:
  8238  000F3E  0100               	movlb	0	; () banked
  8239  000F40  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8240  000F42  6F90               	movwf	??_doDisplayLog& (0+255),b
  8241  000F44  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8242                           
  8243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8244                           ; Switch size 1, requested type "simple"
  8245                           ; Number of cases is 1, Range of values is 0 to 0
  8246                           ; switch strategies available:
  8247                           ; Name         Instructions Cycles
  8248                           ; simple_byte            4     3 (average)
  8249                           ;	Chosen strategy is simple_byte
  8250  000F46  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8251  000F48  0A00               	xorlw	0	; case 0
  8252  000F4A  A4D8               	btfss	status,2,c
  8253  000F4C  D007               	goto	l8088
  8254                           
  8255                           ; BSR set to: 0
  8256                           ; Switch size 1, requested type "simple"
  8257                           ; Number of cases is 2, Range of values is 0 to 1
  8258                           ; switch strategies available:
  8259                           ; Name         Instructions Cycles
  8260                           ; simple_byte            7     4 (average)
  8261                           ;	Chosen strategy is simple_byte
  8262  000F4E  5190               	movf	??_doDisplayLog& (0+255),w,b
  8263  000F50  0A00               	xorlw	0	; case 0
  8264  000F52  B4D8               	btfsc	status,2,c
  8265  000F54  D6C0               	goto	l8038
  8266  000F56  0A01               	xorlw	1	; case 1
  8267  000F58  B4D8               	btfsc	status,2,c
  8268  000F5A  D732               	goto	l8060
  8269  000F5C                     l8088:
  8270                           
  8271                           ;main.c: 74:         if(keyPressed){
  8272  000F5C  0100               	movlb	0	; () banked
  8273  000F5E  51E8               	movf	_keyPressed& (0+255),w,b	;volatile
  8274  000F60  B4D8               	btfsc	status,2,c
  8275  000F62  D073               	goto	l8128
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;main.c: 77:             keyPressed = 0;
  8279  000F64  0E00               	movlw	0
  8280  000F66  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;main.c: 80:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  8284  000F68  3881               	swapf	3969,w,c	;volatile
  8285  000F6A  0B0F               	andlw	15
  8286  000F6C  0B0F               	andlw	15
  8287  000F6E  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;main.c: 81:             char keyValue = keys[keypress];
  8291  000F70  0E61               	movlw	low _keys
  8292  000F72  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  8293  000F74  6EF6               	movwf	tblptrl,c
  8294  000F76  6AF7               	clrf	tblptrh,c
  8295  000F78  0EFE               	movlw	high _keys
  8296  000F7A  22F7               	addwfc	tblptrh,f,c
  8297  000F7C                     	if	0	;There are less than 3 active tblptr bytes
  8298  000F7C                     	endif
  8299  000F7C  0008               	tblrd		*
  8300  000F7E  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;main.c: 82:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  8304  000F82  0E01               	movlw	1
  8305  000F84  EC96  F01B         	call	_lcdInst
  8306  000F88  0E11               	movlw	17
  8307  000F8A  0100               	movlb	0	; () banked
  8308  000F8C  6F90               	movwf	??_doDisplayLog& (0+255),b
  8309  000F8E  0E3A               	movlw	58
  8310  000F90                     u10207:
  8311  000F90  2EE8               	decfsz	wreg,f,c
  8312  000F92  D7FE               	bra	u10207
  8313  000F94  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8314  000F96  D7FC               	bra	u10207
  8315  000F98  F000               	nop	
  8316                           
  8317                           ;main.c: 83:             switch (currentDisplayState){
  8318  000F9A  D048               	goto	l8126
  8319  000F9C                     l8100:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;main.c: 85:                     if (keyValue == '1'){
  8323  000F9C  0E31               	movlw	49
  8324  000F9E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8325  000FA0  A4D8               	btfss	status,2,c
  8326  000FA2  D003               	goto	l8104
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;main.c: 86:                         currentDisplayState = pole;
  8330  000FA4  0E01               	movlw	1
  8331  000FA6  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8332                           
  8333                           ;main.c: 87:                     } else if (keyValue == '2'){
  8334  000FA8  D050               	goto	l8128
  8335  000FAA                     l8104:
  8336                           
  8337                           ; BSR set to: 0
  8338  000FAA  0E32               	movlw	50
  8339  000FAC  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8340  000FAE  B4D8               	btfsc	status,2,c
  8341  000FB0  0012               	return	
  8342  000FB2  D04B               	goto	l8128
  8343  000FB4                     l8108:
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;main.c: 92:                     if (keyValue == '3'){
  8347  000FB4  0E33               	movlw	51
  8348  000FB6  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8349  000FB8  A4D8               	btfss	status,2,c
  8350  000FBA  D007               	goto	l8112
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;main.c: 93:                         currentDisplayState = opTime;
  8354  000FBC  0E00               	movlw	0
  8355  000FBE  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8356                           
  8357                           ;main.c: 94:                         currentPole = 1;
  8358  000FC0  0E00               	movlw	0
  8359  000FC2  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8360  000FC4  0E01               	movlw	1
  8361  000FC6  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8362                           
  8363                           ;main.c: 96:                     } else if (keyValue == '2'){
  8364  000FC8  D040               	goto	l8128
  8365  000FCA                     l8112:
  8366                           
  8367                           ; BSR set to: 0
  8368  000FCA  0E32               	movlw	50
  8369  000FCC  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8370  000FCE  A4D8               	btfss	status,2,c
  8371  000FD0  D01E               	goto	l8118
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;main.c: 97:                         if(currentPole < logs[logNumber][2]){
  8375  000FD2  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8376  000FD6  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8377  000FDA  0E00               	movlw	0
  8378  000FDC  6E09               	movwf	___wmul@multiplicand+1,c
  8379  000FDE  0E42               	movlw	66
  8380  000FE0  6E08               	movwf	___wmul@multiplicand,c
  8381  000FE2  EC22  F01B         	call	___wmul	;wreg free
  8382  000FE6  0E34               	movlw	low (_logs+4)
  8383  000FE8  2406               	addwf	?___wmul,w,c
  8384  000FEA  6ED9               	movwf	fsr2l,c
  8385  000FEC  0E01               	movlw	high (_logs+4)
  8386  000FEE  2007               	addwfc	?___wmul+1,w,c
  8387  000FF0  6EDA               	movwf	fsr2h,c
  8388  000FF2  50DE               	movf	postinc2,w,c
  8389  000FF4  0100               	movlb	0	; () banked
  8390  000FF6  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8391  000FF8  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8392  000FFA  0A80               	xorlw	128
  8393  000FFC  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8394  000FFE  50DE               	movf	postinc2,w,c
  8395  001000  0A80               	xorlw	128
  8396  001002  5992               	subwfb	(??_doDisplayLog+2)& (0+255),w,b
  8397  001004  B0D8               	btfsc	status,0,c
  8398  001006  D021               	goto	l8128
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;main.c: 98:                             currentPole++;
  8402  001008  4B97               	infsnz	doDisplayLog@currentPole& (0+255),f,b
  8403  00100A  2B98               	incf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8404  00100C  D01E               	goto	l8128
  8405  00100E                     l8118:
  8406                           
  8407                           ; BSR set to: 0
  8408  00100E  0E31               	movlw	49
  8409  001010  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8410  001012  B4D8               	btfsc	status,2,c
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;main.c: 101:                         if (currentPole > 1){
  8414  001014  BF98               	btfsc	(doDisplayLog@currentPole+1)& (0+255),7,b
  8415  001016  D019               	goto	l8128
  8416  001018  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8417  00101A  E104               	bnz	u9620
  8418  00101C  0E02               	movlw	2
  8419  00101E  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8420  001020  A0D8               	btfss	status,0,c
  8421  001022  D013               	goto	l8128
  8422  001024                     u9620:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;main.c: 102:                             currentPole--;
  8426  001024  0797               	decf	doDisplayLog@currentPole& (0+255),f,b
  8427  001026  A0D8               	btfss	status,0,c
  8428  001028  0798               	decf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8429  00102A  D00F               	goto	l8128
  8430  00102C                     l8126:
  8431  00102C  0100               	movlb	0	; () banked
  8432  00102E  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8433  001030  6F90               	movwf	??_doDisplayLog& (0+255),b
  8434  001032  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8435                           
  8436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8437                           ; Switch size 1, requested type "simple"
  8438                           ; Number of cases is 1, Range of values is 0 to 0
  8439                           ; switch strategies available:
  8440                           ; Name         Instructions Cycles
  8441                           ; simple_byte            4     3 (average)
  8442                           ;	Chosen strategy is simple_byte
  8443  001034  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8444  001036  0A00               	xorlw	0	; case 0
  8445  001038  A4D8               	btfss	status,2,c
  8446  00103A  D007               	goto	l8128
  8447                           
  8448                           ; BSR set to: 0
  8449                           ; Switch size 1, requested type "simple"
  8450                           ; Number of cases is 2, Range of values is 0 to 1
  8451                           ; switch strategies available:
  8452                           ; Name         Instructions Cycles
  8453                           ; simple_byte            7     4 (average)
  8454                           ;	Chosen strategy is simple_byte
  8455  00103C  5190               	movf	??_doDisplayLog& (0+255),w,b
  8456  00103E  0A00               	xorlw	0	; case 0
  8457  001040  B4D8               	btfsc	status,2,c
  8458  001042  D7AC               	goto	l8100
  8459  001044  0A01               	xorlw	1	; case 1
  8460  001046  B4D8               	btfsc	status,2,c
  8461  001048  D7B5               	goto	l8108
  8462  00104A                     l8128:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;main.c: 110:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8466  00104A  0E04               	movlw	4
  8467  00104C  0100               	movlb	0	; () banked
  8468  00104E  6F90               	movwf	??_doDisplayLog& (0+255),b
  8469  001050  0E3D               	movlw	61
  8470  001052                     u10217:
  8471  001052  2EE8               	decfsz	wreg,f,c
  8472  001054  D7FE               	bra	u10217
  8473  001056  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8474  001058  D7FC               	bra	u10217
  8475  00105A  D000               	nop2	
  8476  00105C  D770               	goto	l8086
  8477  00105E                     __end_of_doDisplayLog:
  8478                           	opt callstack 0
  8479                           
  8480 ;; *************** function _printf *****************
  8481 ;; Defined at:
  8482 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  8485 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  8486 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  8487 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  8488 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  8489 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(11), 
  8490 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  8491 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  8492 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  8493 ;;		 -> STR_1(7), 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  ap              2   12[BANK0 ] PTR void [1]
  8496 ;;		 -> ?_printf(2), 
  8497 ;;  ret             2    0        int 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2    0[BANK0 ] int 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8507 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;Total ram usage:       14 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:   12
  8514 ;; This function calls:
  8515 ;;		_vfprintf
  8516 ;; This function is called by:
  8517 ;;		_doDisplayLog
  8518 ;;		_doOperation
  8519 ;;		_main
  8520 ;;		_mainEEPROM
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text32
  8525  00361C                     __ptext32:
  8526                           	opt callstack 0
  8527  00361C                     _printf:
  8528                           	opt callstack 18
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;incstack = 0
  8532  00361C  0E82               	movlw	low (?_printf+2)
  8533  00361E  0100               	movlb	0	; () banked
  8534  003620  6F8C               	movwf	printf@ap& (0+255),b
  8535  003622  0E00               	movlw	high (?_printf+2)
  8536  003624  6F8D               	movwf	(printf@ap+1)& (0+255),b
  8537                           
  8538                           ; BSR set to: 0
  8539  003626  0E00               	movlw	0
  8540  003628  6E6D               	movwf	vfprintf@fp,c
  8541  00362A  0E00               	movlw	0
  8542  00362C  6E6E               	movwf	vfprintf@fp+1,c
  8543  00362E  C080  F06F         	movff	printf@fmt,vfprintf@fmt
  8544  003632  C081  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  8545  003636  0E8C               	movlw	low printf@ap
  8546  003638  6E71               	movwf	vfprintf@ap,c
  8547  00363A  0E00               	movlw	high printf@ap
  8548  00363C  6E72               	movwf	vfprintf@ap+1,c
  8549  00363E  EC94  F018         	call	_vfprintf	;wreg free
  8550  003642  0012               	return		;funcret
  8551  003644                     __end_of_printf:
  8552                           	opt callstack 0
  8553                           
  8554 ;; *************** function _vfprintf *****************
  8555 ;; Defined at:
  8556 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  8559 ;;		 -> NULL(0), 
  8560 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  8561 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  8562 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  8563 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  8564 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  8565 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(11), 
  8566 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  8567 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  8568 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  8569 ;;		 -> STR_1(7), 
  8570 ;;  ap              2  112[COMRAM] PTR PTR void 
  8571 ;;		 -> printf@ap(2), 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  8574 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  8575 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  8576 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  8577 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  8578 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(11), 
  8579 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  8580 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  8581 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  8582 ;;		 -> STR_1(7), 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  2  108[COMRAM] int 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;Total ram usage:        8 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:   11
  8599 ;; This function calls:
  8600 ;;		_vfpfcnvrt
  8601 ;; This function is called by:
  8602 ;;		_printf
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text33
  8607  003128                     __ptext33:
  8608                           	opt callstack 0
  8609  003128                     _vfprintf:
  8610                           	opt callstack 18
  8611                           
  8612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8613                           
  8614                           ;incstack = 0
  8615  003128  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  8616  00312C  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8617                           
  8618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8619  003130  0E00               	movlw	0
  8620  003132  0100               	movlb	0	; () banked
  8621  003134  6FDB               	movwf	(_nout+1)& (0+255),b
  8622  003136  0E00               	movlw	0
  8623  003138  6FDA               	movwf	_nout& (0+255),b
  8624                           
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8626  00313A  D013               	goto	l7690
  8627  00313C                     l7688:
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8631  00313C  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  8632  003140  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8633  003144  0E73               	movlw	low vfprintf@cfmt
  8634  003146  6E4E               	movwf	vfpfcnvrt@fmt,c
  8635  003148  0E00               	movlw	high vfprintf@cfmt
  8636  00314A  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  8637  00314C  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  8638  003150  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8639  003154  EC09  F000         	call	_vfpfcnvrt	;wreg free
  8640  003158  504C               	movf	?_vfpfcnvrt,w,c
  8641  00315A  0100               	movlb	0	; () banked
  8642  00315C  27DA               	addwf	_nout& (0+255),f,b
  8643  00315E  504D               	movf	?_vfpfcnvrt+1,w,c
  8644  003160  23DB               	addwfc	(_nout+1)& (0+255),f,b
  8645  003162                     l7690:
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8649  003162  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  8650  003166  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8651  00316A                     	if	0	;tblptru may be non-zero
  8652  00316A                     	endif
  8653  00316A                     	if	0	;tblptru may be non-zero
  8654  00316A                     	endif
  8655  00316A  0008               	tblrd		*
  8656  00316C  50F5               	movf	tablat,w,c
  8657  00316E  0900               	iorlw	0
  8658  003170  A4D8               	btfss	status,2,c
  8659  003172  D7E4               	goto	l7688
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8663  003174  C0DA  F06D         	movff	_nout,?_vfprintf
  8664  003178  C0DB  F06E         	movff	_nout+1,?_vfprintf+1
  8665                           
  8666                           ; BSR set to: 0
  8667  00317C  0012               	return		;funcret
  8668  00317E                     __end_of_vfprintf:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _vfpfcnvrt *****************
  8672 ;; Defined at:
  8673 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  8676 ;;		 -> NULL(0), 
  8677 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  8678 ;;		 -> vfprintf@cfmt(2), 
  8679 ;;  ap              2   79[COMRAM] PTR PTR void 
  8680 ;;		 -> printf@ap(2), 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;  llu             8   93[COMRAM] unsigned long long 
  8683 ;;  ll              8   85[COMRAM] long long 
  8684 ;;  f               4    0        long long 
  8685 ;;  vp              3    0        PTR void 
  8686 ;;  ct              3    0        unsigned char [3]
  8687 ;;  done            2  103[COMRAM] int 
  8688 ;;  cp              2  101[COMRAM] PTR unsigned char 
  8689 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  8690 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  8691 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  8692 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  8693 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  8694 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  8695 ;;  i               2    0        int 
  8696 ;;  c               1  107[COMRAM] unsigned char 
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  2   75[COMRAM] int 
  8699 ;; Registers used:
  8700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8706 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;Total ram usage:       33 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:   10
  8713 ;; This function calls:
  8714 ;;		_atoi
  8715 ;;		_ctoa
  8716 ;;		_dtoa
  8717 ;;		_fputc
  8718 ;;		_isdigit
  8719 ;;		_stoa
  8720 ;;		_xtoa
  8721 ;; This function is called by:
  8722 ;;		_vfprintf
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text34
  8727  000012                     __ptext34:
  8728                           	opt callstack 0
  8729  000012                     _vfpfcnvrt:
  8730                           	opt callstack 18
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;incstack = 0
  8736  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8737  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8738  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  8739  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  8740  000022                     	if	0	;tblptru may be non-zero
  8741  000022                     	endif
  8742  000022                     	if	0	;tblptru may be non-zero
  8743  000022                     	endif
  8744  000022  0008               	tblrd		*
  8745  000024  50F5               	movf	tablat,w,c
  8746  000026  0A25               	xorlw	37
  8747  000028  A4D8               	btfss	status,2,c
  8748  00002A  D216               	goto	l7420
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8751  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8752  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8753  000034  2ADE               	incf	postinc2,f,c
  8754  000036  0E00               	movlw	0
  8755  000038  22DD               	addwfc	postdec2,f,c
  8756                           
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8758  00003A  0E00               	movlw	0
  8759  00003C  0100               	movlb	0	; () banked
  8760  00003E  6FDD               	movwf	(_width+1)& (0+255),b
  8761  000040  0E00               	movlw	0
  8762  000042  6FDC               	movwf	_width& (0+255),b
  8763  000044  C0DC  F075         	movff	_width,_flags
  8764  000048  C0DD  F076         	movff	_width+1,_flags+1
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8768  00004C  69DE               	setf	_prec& (0+255),b
  8769  00004E  69DF               	setf	(_prec+1)& (0+255),b
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8773  000050  0E00               	movlw	0
  8774  000052  6E69               	movwf	vfpfcnvrt@done+1,c
  8775  000054  0E00               	movlw	0
  8776  000056  D014               	goto	L15
  8777  000058                     l7316:
  8778                           
  8779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8780  000058  8075               	bsf	_flags,0,c
  8781  00005A                     l7318:
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8784  00005A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8785  00005E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8786  000062  2ADE               	incf	postinc2,f,c
  8787  000064  0E00               	movlw	0
  8788  000066  22DD               	addwfc	postdec2,f,c
  8789                           
  8790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8791  000068  D02E               	goto	l7342
  8792  00006A                     l7320:
  8793                           
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8795  00006A  8275               	bsf	_flags,1,c
  8796  00006C  D7F6               	goto	l7318
  8797  00006E                     l7324:
  8798                           
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8800  00006E  8475               	bsf	_flags,2,c
  8801  000070  D7F4               	goto	l7318
  8802  000072                     l7328:
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8805  000072  8675               	bsf	_flags,3,c
  8806  000074  D7F2               	goto	l7318
  8807  000076                     l7332:
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8810  000076  8875               	bsf	_flags,4,c
  8811  000078  D7F0               	goto	l7318
  8812  00007A                     l7336:
  8813                           
  8814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8815  00007A  0E00               	movlw	0
  8816  00007C  6E69               	movwf	vfpfcnvrt@done+1,c
  8817  00007E  0E01               	movlw	1
  8818  000080                     L15:
  8819  000080  6E68               	movwf	vfpfcnvrt@done,c
  8820                           
  8821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8822  000082  D021               	goto	l7342
  8823  000084                     l7340:
  8824  000084  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8825  000088  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8826  00008C  CFDE FFF6          	movff	postinc2,tblptrl
  8827  000090  CFDD FFF7          	movff	postdec2,tblptrh
  8828  000094                     	if	0	;tblptru may be non-zero
  8829  000094                     	endif
  8830  000094                     	if	0	;tblptru may be non-zero
  8831  000094                     	endif
  8832  000094  0008               	tblrd		*
  8833  000096  50F5               	movf	tablat,w,c
  8834  000098  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  8835  00009A  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  8836                           
  8837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8838                           ; Switch size 1, requested type "simple"
  8839                           ; Number of cases is 1, Range of values is 0 to 0
  8840                           ; switch strategies available:
  8841                           ; Name         Instructions Cycles
  8842                           ; simple_byte            4     3 (average)
  8843                           ;	Chosen strategy is simple_byte
  8844  00009C  5053               	movf	??_vfpfcnvrt+1,w,c
  8845  00009E  0A00               	xorlw	0	; case 0
  8846  0000A0  A4D8               	btfss	status,2,c
  8847  0000A2  D7EB               	goto	l7336
  8848                           
  8849                           ; Switch size 1, requested type "simple"
  8850                           ; Number of cases is 5, Range of values is 32 to 48
  8851                           ; switch strategies available:
  8852                           ; Name         Instructions Cycles
  8853                           ; simple_byte           16     9 (average)
  8854                           ;	Chosen strategy is simple_byte
  8855  0000A4  5052               	movf	??_vfpfcnvrt,w,c
  8856  0000A6  0A20               	xorlw	32	; case 32
  8857  0000A8  B4D8               	btfsc	status,2,c
  8858  0000AA  D7E3               	goto	l7328
  8859  0000AC  0A03               	xorlw	3	; case 35
  8860  0000AE  B4D8               	btfsc	status,2,c
  8861  0000B0  D7E2               	goto	l7332
  8862  0000B2  0A08               	xorlw	8	; case 43
  8863  0000B4  B4D8               	btfsc	status,2,c
  8864  0000B6  D7DB               	goto	l7324
  8865  0000B8  0A06               	xorlw	6	; case 45
  8866  0000BA  B4D8               	btfsc	status,2,c
  8867  0000BC  D7CD               	goto	l7316
  8868  0000BE  0A1D               	xorlw	29	; case 48
  8869  0000C0  B4D8               	btfsc	status,2,c
  8870  0000C2  D7D3               	goto	l7320
  8871  0000C4  D7DA               	goto	l7336
  8872  0000C6                     l7342:
  8873                           
  8874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8875  0000C6  5068               	movf	vfpfcnvrt@done,w,c
  8876  0000C8  1069               	iorwf	vfpfcnvrt@done+1,w,c
  8877  0000CA  B4D8               	btfsc	status,2,c
  8878  0000CC  D7DB               	goto	l7340
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8881  0000CE  B075               	btfsc	_flags,0,c
  8882                           
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8884  0000D0  9275               	bcf	_flags,1,c
  8885                           
  8886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8887  0000D2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8888  0000D6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8889  0000DA  CFDE FFF6          	movff	postinc2,tblptrl
  8890  0000DE  CFDD FFF7          	movff	postdec2,tblptrh
  8891  0000E2                     	if	0	;tblptru may be non-zero
  8892  0000E2                     	endif
  8893  0000E2                     	if	0	;tblptru may be non-zero
  8894  0000E2                     	endif
  8895  0000E2  0008               	tblrd		*
  8896  0000E4  50F5               	movf	tablat,w,c
  8897  0000E6  0A2A               	xorlw	42
  8898  0000E8  A4D8               	btfss	status,2,c
  8899  0000EA  D024               	goto	l7354
  8900                           
  8901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8902  0000EC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8903  0000F0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8904  0000F4  2ADE               	incf	postinc2,f,c
  8905  0000F6  0E00               	movlw	0
  8906  0000F8  22DD               	addwfc	postdec2,f,c
  8907                           
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8909  0000FA  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8910  0000FE  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8911  000102  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8912  000106  0E02               	movlw	2
  8913  000108  26DE               	addwf	postinc2,f,c
  8914  00010A  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8915  00010E  0E00               	movlw	0
  8916  000110  22DD               	addwfc	postdec2,f,c
  8917  000112  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8918  000116  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8919  00011A  CFDE F0DC          	movff	postinc2,_width
  8920  00011E  CFDD F0DD          	movff	postdec2,_width+1
  8921                           
  8922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8923  000122  0100               	movlb	0	; () banked
  8924  000124  AFDD               	btfss	(_width+1)& (0+255),7,b
  8925  000126  D03F               	goto	u8600
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8929  000128  8075               	bsf	_flags,0,c
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8932  00012A  6DDC               	negf	_width& (0+255),b
  8933  00012C  1FDD               	comf	(_width+1)& (0+255),f,b
  8934  00012E  B0D8               	btfsc	status,0,c
  8935  000130  2BDD               	incf	(_width+1)& (0+255),f,b
  8936  000132  D039               	goto	u8600
  8937  000134                     l7354:
  8938                           
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8940  000134  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8941  000138  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8942  00013C  CFDE F00D          	movff	postinc2,atoi@s
  8943  000140  CFDD F00E          	movff	postdec2,atoi@s+1
  8944  000144  EC46  F014         	call	_atoi	;wreg free
  8945  000148  C00D  F0DC         	movff	?_atoi,_width
  8946  00014C  C00E  F0DD         	movff	?_atoi+1,_width+1
  8947                           
  8948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8949  000150  D007               	goto	l7358
  8950  000152                     l7356:
  8951                           
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8953  000152  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8954  000156  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8955  00015A  2ADE               	incf	postinc2,f,c
  8956  00015C  0E00               	movlw	0
  8957  00015E  22DD               	addwfc	postdec2,f,c
  8958  000160                     l7358:
  8959  000160  0ED0               	movlw	208
  8960  000162  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  8961  000164  0EFF               	movlw	255
  8962  000166  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  8963  000168  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8964  00016C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8965  000170  CFDE FFF6          	movff	postinc2,tblptrl
  8966  000174  CFDD FFF7          	movff	postdec2,tblptrh
  8967  000178                     	if	0	;tblptru may be non-zero
  8968  000178                     	endif
  8969  000178                     	if	0	;tblptru may be non-zero
  8970  000178                     	endif
  8971  000178  0008               	tblrd		*
  8972  00017A  50F5               	movf	tablat,w,c
  8973  00017C  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  8974  00017E  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  8975  000180  5052               	movf	??_vfpfcnvrt,w,c
  8976  000182  2654               	addwf	??_vfpfcnvrt+2,f,c
  8977  000184  5053               	movf	??_vfpfcnvrt+1,w,c
  8978  000186  2255               	addwfc	??_vfpfcnvrt+3,f,c
  8979  000188  5055               	movf	??_vfpfcnvrt+3,w,c
  8980  00018A  E106               	bnz	u8580
  8981  00018C  0E0A               	movlw	10
  8982  00018E  5C54               	subwf	??_vfpfcnvrt+2,w,c
  8983  000190  B0D8               	btfsc	status,0,c
  8984  000192  D002               	goto	u8580
  8985  000194  0E01               	movlw	1
  8986  000196  D001               	goto	u8590
  8987  000198                     u8580:
  8988  000198  0E00               	movlw	0
  8989  00019A                     u8590:
  8990  00019A  6E6A               	movwf	_vfpfcnvrt$1347,c
  8991  00019C  6A6B               	clrf	_vfpfcnvrt$1347+1,c
  8992  00019E  506A               	movf	_vfpfcnvrt$1347,w,c
  8993  0001A0  106B               	iorwf	_vfpfcnvrt$1347+1,w,c
  8994  0001A2  A4D8               	btfss	status,2,c
  8995  0001A4  D7D6               	goto	l7356
  8996  0001A6                     u8600:
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8999  0001A6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9000  0001AA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9001  0001AE  CFDE FFF6          	movff	postinc2,tblptrl
  9002  0001B2  CFDD FFF7          	movff	postdec2,tblptrh
  9003  0001B6                     	if	0	;tblptru may be non-zero
  9004  0001B6                     	endif
  9005  0001B6                     	if	0	;tblptru may be non-zero
  9006  0001B6                     	endif
  9007  0001B6  0008               	tblrd		*
  9008  0001B8  50F5               	movf	tablat,w,c
  9009  0001BA  0A63               	xorlw	99
  9010  0001BC  A4D8               	btfss	status,2,c
  9011  0001BE  D026               	goto	l7372
  9012                           
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  9014  0001C0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9015  0001C4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9016  0001C8  2ADE               	incf	postinc2,f,c
  9017  0001CA  0E00               	movlw	0
  9018  0001CC  22DD               	addwfc	postdec2,f,c
  9019                           
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9021  0001CE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9022  0001D2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9023  0001D6  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9024  0001DA  0E02               	movlw	2
  9025  0001DC  26DE               	addwf	postinc2,f,c
  9026  0001DE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9027  0001E2  0E00               	movlw	0
  9028  0001E4  22DD               	addwfc	postdec2,f,c
  9029  0001E6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9030  0001EA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9031  0001EE  50DF               	movf	indf2,w,c
  9032  0001F0  6E6C               	movwf	vfpfcnvrt@c,c
  9033                           
  9034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  9035  0001F2  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  9036  0001F6  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9037  0001FA  C06C  F027         	movff	vfpfcnvrt@c,ctoa@c
  9038  0001FE  ECBF  F018         	call	_ctoa	;wreg free
  9039  000202  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  9040  000206  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9041  00020A  0012               	return	
  9042  00020C                     l7372:
  9043                           
  9044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9045  00020C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9046  000210  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9047  000214  CFDE FFF6          	movff	postinc2,tblptrl
  9048  000218  CFDD FFF7          	movff	postdec2,tblptrh
  9049  00021C                     	if	0	;tblptru may be non-zero
  9050  00021C                     	endif
  9051  00021C                     	if	0	;tblptru may be non-zero
  9052  00021C                     	endif
  9053  00021C  0008               	tblrd		*
  9054  00021E  50F5               	movf	tablat,w,c
  9055  000220  0A64               	xorlw	100
  9056  000222  B4D8               	btfsc	status,2,c
  9057  000224  D00D               	goto	u8630
  9058  000226  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9059  00022A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9060  00022E  CFDE FFF6          	movff	postinc2,tblptrl
  9061  000232  CFDD FFF7          	movff	postdec2,tblptrh
  9062  000236                     	if	0	;tblptru may be non-zero
  9063  000236                     	endif
  9064  000236                     	if	0	;tblptru may be non-zero
  9065  000236                     	endif
  9066  000236  0008               	tblrd		*
  9067  000238  50F5               	movf	tablat,w,c
  9068  00023A  0A69               	xorlw	105
  9069  00023C  A4D8               	btfss	status,2,c
  9070  00023E  D03F               	goto	l7382
  9071  000240                     u8630:
  9072                           
  9073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9074  000240  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9075  000244  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9076  000248  2ADE               	incf	postinc2,f,c
  9077  00024A  0E00               	movlw	0
  9078  00024C  22DD               	addwfc	postdec2,f,c
  9079                           
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9081  00024E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9082  000252  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9083  000256  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9084  00025A  0E02               	movlw	2
  9085  00025C  26DE               	addwf	postinc2,f,c
  9086  00025E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9087  000262  0E00               	movlw	0
  9088  000264  22DD               	addwfc	postdec2,f,c
  9089  000266  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9090  00026A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9091  00026E  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  9092  000272  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  9093  000276  0E00               	movlw	0
  9094  000278  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  9095  00027A  0EFF               	movlw	-1
  9096  00027C  6E58               	movwf	vfpfcnvrt@ll+2,c
  9097  00027E  6E59               	movwf	vfpfcnvrt@ll+3,c
  9098  000280  6E5A               	movwf	vfpfcnvrt@ll+4,c
  9099  000282  6E5B               	movwf	vfpfcnvrt@ll+5,c
  9100  000284  6E5C               	movwf	vfpfcnvrt@ll+6,c
  9101  000286  6E5D               	movwf	vfpfcnvrt@ll+7,c
  9102                           
  9103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9104  000288  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9105  00028C  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9106  000290  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9107  000294  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9108  000298  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9109  00029C  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9110  0002A0  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9111  0002A4  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9112  0002A8  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9113  0002AC  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9114  0002B0  EC28  F00F         	call	_dtoa	;wreg free
  9115  0002B4  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9116  0002B8  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9117  0002BC  0012               	return	
  9118  0002BE                     l7382:
  9119                           
  9120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9121  0002BE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9122  0002C2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9123  0002C6  CFDE FFF6          	movff	postinc2,tblptrl
  9124  0002CA  CFDD FFF7          	movff	postdec2,tblptrh
  9125  0002CE                     	if	0	;tblptru may be non-zero
  9126  0002CE                     	endif
  9127  0002CE                     	if	0	;tblptru may be non-zero
  9128  0002CE                     	endif
  9129  0002CE  0008               	tblrd		*
  9130  0002D0  50F5               	movf	tablat,w,c
  9131  0002D2  0A73               	xorlw	115
  9132  0002D4  A4D8               	btfss	status,2,c
  9133  0002D6  D02A               	goto	l7390
  9134                           
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9136  0002D8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9137  0002DC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9138  0002E0  2ADE               	incf	postinc2,f,c
  9139  0002E2  0E00               	movlw	0
  9140  0002E4  22DD               	addwfc	postdec2,f,c
  9141                           
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9143  0002E6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9144  0002EA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9145  0002EE  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9146  0002F2  0E02               	movlw	2
  9147  0002F4  26DE               	addwf	postinc2,f,c
  9148  0002F6  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9149  0002FA  0E00               	movlw	0
  9150  0002FC  22DD               	addwfc	postdec2,f,c
  9151  0002FE  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9152  000302  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9153  000306  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  9154  00030A  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  9155                           
  9156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9157  00030E  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  9158  000312  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9159  000316  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  9160  00031A  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9161  00031E  ECA6  F013         	call	_stoa	;wreg free
  9162  000322  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  9163  000326  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  9164  00032A  0012               	return	
  9165  00032C                     l7390:
  9166                           
  9167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9168  00032C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9169  000330  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9170  000334  CFDE FFF6          	movff	postinc2,tblptrl
  9171  000338  CFDD FFF7          	movff	postdec2,tblptrh
  9172  00033C                     	if	0	;tblptru may be non-zero
  9173  00033C                     	endif
  9174  00033C                     	if	0	;tblptru may be non-zero
  9175  00033C                     	endif
  9176  00033C  0008               	tblrd		*
  9177  00033E  50F5               	movf	tablat,w,c
  9178  000340  0A78               	xorlw	120
  9179  000342  B4D8               	btfsc	status,2,c
  9180  000344  D00D               	goto	u8660
  9181  000346  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9182  00034A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9183  00034E  CFDE FFF6          	movff	postinc2,tblptrl
  9184  000352  CFDD FFF7          	movff	postdec2,tblptrh
  9185  000356                     	if	0	;tblptru may be non-zero
  9186  000356                     	endif
  9187  000356                     	if	0	;tblptru may be non-zero
  9188  000356                     	endif
  9189  000356  0008               	tblrd		*
  9190  000358  50F5               	movf	tablat,w,c
  9191  00035A  0A58               	xorlw	88
  9192  00035C  A4D8               	btfss	status,2,c
  9193  00035E  D04D               	goto	l7404
  9194  000360                     u8660:
  9195                           
  9196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9197  000360  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9198  000364  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9199  000368  CFDE FFF6          	movff	postinc2,tblptrl
  9200  00036C  CFDD FFF7          	movff	postdec2,tblptrh
  9201  000370                     	if	0	;tblptru may be non-zero
  9202  000370                     	endif
  9203  000370                     	if	0	;tblptru may be non-zero
  9204  000370                     	endif
  9205  000370  0008               	tblrd		*
  9206  000372  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  9207                           
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9209  000376  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9210  00037A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9211  00037E  2ADE               	incf	postinc2,f,c
  9212  000380  0E00               	movlw	0
  9213  000382  22DD               	addwfc	postdec2,f,c
  9214                           
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9216  000384  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9217  000388  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9218  00038C  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9219  000390  0E02               	movlw	2
  9220  000392  26DE               	addwf	postinc2,f,c
  9221  000394  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9222  000398  0E00               	movlw	0
  9223  00039A  22DD               	addwfc	postdec2,f,c
  9224  00039C  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9225  0003A0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9226  0003A4  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  9227  0003A8  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  9228  0003AC  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9229  0003B0  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9230  0003B4  6A60               	clrf	vfpfcnvrt@llu+2,c
  9231  0003B6  6A61               	clrf	vfpfcnvrt@llu+3,c
  9232  0003B8  6A62               	clrf	vfpfcnvrt@llu+4,c
  9233  0003BA  6A63               	clrf	vfpfcnvrt@llu+5,c
  9234  0003BC  6A64               	clrf	vfpfcnvrt@llu+6,c
  9235  0003BE  6A65               	clrf	vfpfcnvrt@llu+7,c
  9236                           
  9237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9238  0003C0  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  9239  0003C4  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9240  0003C8  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  9241  0003CC  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9242  0003D0  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9243  0003D4  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9244  0003D8  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9245  0003DC  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9246  0003E0  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9247  0003E4  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9248  0003E8  C06C  F02F         	movff	vfpfcnvrt@c,xtoa@x
  9249  0003EC  EC4A  F010         	call	_xtoa	;wreg free
  9250  0003F0  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  9251  0003F4  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9252  0003F8  0012               	return	
  9253  0003FA                     l7404:
  9254                           
  9255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9256  0003FA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9257  0003FE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9258  000402  CFDE FFF6          	movff	postinc2,tblptrl
  9259  000406  CFDD FFF7          	movff	postdec2,tblptrh
  9260  00040A                     	if	0	;tblptru may be non-zero
  9261  00040A                     	endif
  9262  00040A                     	if	0	;tblptru may be non-zero
  9263  00040A                     	endif
  9264  00040A  0008               	tblrd		*
  9265  00040C  50F5               	movf	tablat,w,c
  9266  00040E  0A25               	xorlw	37
  9267  000410  A4D8               	btfss	status,2,c
  9268  000412  D016               	goto	l7414
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9271  000414  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9272  000418  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9273  00041C  2ADE               	incf	postinc2,f,c
  9274  00041E  0E00               	movlw	0
  9275  000420  22DD               	addwfc	postdec2,f,c
  9276                           
  9277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9278  000422  0E00               	movlw	0
  9279  000424  6E0B               	movwf	fputc@c+1,c
  9280  000426  0E25               	movlw	37
  9281  000428  6E0A               	movwf	fputc@c,c
  9282  00042A  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9283  00042E  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9284  000432  ECC8  F017         	call	_fputc	;wreg free
  9285  000436                     l7410:
  9286                           
  9287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9288  000436  0E00               	movlw	0
  9289  000438  6E4D               	movwf	?_vfpfcnvrt+1,c
  9290  00043A  0E01               	movlw	1
  9291  00043C  6E4C               	movwf	?_vfpfcnvrt,c
  9292  00043E  0012               	return	
  9293  000440                     l7414:
  9294                           
  9295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9296  000440  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9297  000444  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9298  000448  2ADE               	incf	postinc2,f,c
  9299  00044A  0E00               	movlw	0
  9300  00044C  22DD               	addwfc	postdec2,f,c
  9301                           
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9303  00044E  0E00               	movlw	0
  9304  000450  6E4D               	movwf	?_vfpfcnvrt+1,c
  9305  000452  0E00               	movlw	0
  9306  000454  6E4C               	movwf	?_vfpfcnvrt,c
  9307  000456  0012               	return	
  9308  000458                     l7420:
  9309                           
  9310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9311  000458  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9312  00045C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9313  000460  CFDE FFF6          	movff	postinc2,tblptrl
  9314  000464  CFDD FFF7          	movff	postdec2,tblptrh
  9315  000468                     	if	0	;tblptru may be non-zero
  9316  000468                     	endif
  9317  000468                     	if	0	;tblptru may be non-zero
  9318  000468                     	endif
  9319  000468  0008               	tblrd		*
  9320  00046A  50F5               	movf	tablat,w,c
  9321  00046C  6E0A               	movwf	fputc@c,c
  9322  00046E  6A0B               	clrf	fputc@c+1,c
  9323  000470  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9324  000474  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9325  000478  ECC8  F017         	call	_fputc	;wreg free
  9326                           
  9327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9328  00047C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9329  000480  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9330  000484  2ADE               	incf	postinc2,f,c
  9331  000486  0E00               	movlw	0
  9332  000488  22DD               	addwfc	postdec2,f,c
  9333  00048A  D7D5               	goto	l7410
  9334  00048C                     __end_of_vfpfcnvrt:
  9335                           	opt callstack 0
  9336                           
  9337 ;; *************** function _xtoa *****************
  9338 ;; Defined at:
  9339 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  9342 ;;		 -> NULL(0), 
  9343 ;;  d               8   38[COMRAM] unsigned long long 
  9344 ;;  x               1   46[COMRAM] unsigned char 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  n               8   63[COMRAM] unsigned long long 
  9347 ;;  c               2   73[COMRAM] int 
  9348 ;;  i               2   71[COMRAM] int 
  9349 ;;  w               2   61[COMRAM] int 
  9350 ;;  p               2   59[COMRAM] int 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  2   36[COMRAM] int 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9360 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;Total ram usage:       39 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    9
  9367 ;; This function calls:
  9368 ;;		_isalpha
  9369 ;;		_isupper
  9370 ;;		_pad
  9371 ;;		_toupper
  9372 ;; This function is called by:
  9373 ;;		_vfpfcnvrt
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text35
  9378  002094                     __ptext35:
  9379                           	opt callstack 0
  9380  002094                     _xtoa:
  9381                           	opt callstack 18
  9382                           
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9384                           
  9385                           ;incstack = 0
  9386  002094  0100               	movlb	0	; () banked
  9387  002096  AFDF               	btfss	(_prec+1)& (0+255),7,b
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9391  002098  9275               	bcf	_flags,1,c
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9395  00209A  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  9396  00209C  D005               	goto	u7560
  9397  00209E  51DF               	movf	(_prec+1)& (0+255),w,b
  9398  0020A0  E108               	bnz	l622
  9399  0020A2  05DE               	decf	_prec& (0+255),w,b
  9400  0020A4  B0D8               	btfsc	status,0,c
  9401  0020A6  D005               	goto	l622
  9402  0020A8                     u7560:
  9403                           
  9404                           ; BSR set to: 0
  9405  0020A8  0E00               	movlw	0
  9406  0020AA  6E3D               	movwf	xtoa@p+1,c
  9407  0020AC  0E01               	movlw	1
  9408  0020AE  6E3C               	movwf	xtoa@p,c
  9409  0020B0  D004               	goto	l624
  9410  0020B2                     l622:
  9411                           
  9412                           ; BSR set to: 0
  9413  0020B2  C0DE  F03C         	movff	_prec,xtoa@p
  9414  0020B6  C0DF  F03D         	movff	_prec+1,xtoa@p+1
  9415  0020BA                     l624:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9419  0020BA  C0DC  F03E         	movff	_width,xtoa@w
  9420  0020BE  C0DD  F03F         	movff	_width+1,xtoa@w+1
  9421                           
  9422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9423  0020C2  A875               	btfss	_flags,4,c
  9424  0020C4  D004               	goto	l6798
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9428  0020C6  0EFE               	movlw	254
  9429  0020C8  263E               	addwf	xtoa@w,f,c
  9430  0020CA  0EFF               	movlw	255
  9431  0020CC  223F               	addwfc	xtoa@w+1,f,c
  9432  0020CE                     l6798:
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9436  0020CE  C027  F040         	movff	xtoa@d,xtoa@n
  9437  0020D2  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  9438  0020D6  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  9439  0020DA  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  9440  0020DE  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  9441  0020E2  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  9442  0020E6  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  9443  0020EA  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9447  0020EE  0E00               	movlw	0
  9448  0020F0  6E49               	movwf	xtoa@i+1,c
  9449  0020F2  0E1F               	movlw	31
  9450  0020F4  6E48               	movwf	xtoa@i,c
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9454  0020F6  0E00               	movlw	0
  9455  0020F8  0101               	movlb	1	; () banked
  9456  0020FA  6F1F               	movwf	(_dbuf+31)& (0+255),b
  9457                           
  9458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9459  0020FC  D093               	goto	l6834
  9460  0020FE                     l6804:
  9461                           
  9462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9463  0020FE  0648               	decf	xtoa@i,f,c
  9464  002100  A0D8               	btfss	status,0,c
  9465  002102  0649               	decf	xtoa@i+1,f,c
  9466                           
  9467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9468  002104  0E0F               	movlw	15
  9469  002106  1440               	andwf	xtoa@n,w,c
  9470  002108  6E4A               	movwf	xtoa@c,c
  9471  00210A  6A4B               	clrf	xtoa@c+1,c
  9472                           
  9473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9474  00210C  BE4B               	btfsc	xtoa@c+1,7,c
  9475  00210E  D008               	goto	l6812
  9476  002110  504B               	movf	xtoa@c+1,w,c
  9477  002112  E104               	bnz	u7580
  9478  002114  0E0A               	movlw	10
  9479  002116  5C4A               	subwf	xtoa@c,w,c
  9480  002118  A0D8               	btfss	status,0,c
  9481  00211A  D002               	goto	l6812
  9482  00211C                     u7580:
  9483  00211C  0E57               	movlw	87
  9484  00211E  D001               	goto	L16
  9485  002120                     l6812:
  9486  002120  0E30               	movlw	48
  9487  002122                     L16:
  9488  002122  244A               	addwf	xtoa@c,w,c
  9489  002124  6E4A               	movwf	xtoa@c,c
  9490  002126  0E00               	movlw	0
  9491  002128  204B               	addwfc	xtoa@c+1,w,c
  9492  00212A  6E4B               	movwf	xtoa@c+1,c
  9493                           
  9494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9495  00212C  0EBF               	movlw	191
  9496  00212E  6E30               	movwf	??_xtoa& (0+255),c
  9497  002130  0EFF               	movlw	255
  9498  002132  6E31               	movwf	(??_xtoa+1)& (0+255),c
  9499  002134  502F               	movf	xtoa@x,w,c
  9500  002136  6E32               	movwf	(??_xtoa+2)& (0+255),c
  9501  002138  6A33               	clrf	(??_xtoa+3)& (0+255),c
  9502  00213A  5030               	movf	??_xtoa,w,c
  9503  00213C  2632               	addwf	??_xtoa+2,f,c
  9504  00213E  5031               	movf	??_xtoa+1,w,c
  9505  002140  2233               	addwfc	??_xtoa+3,f,c
  9506  002142  5033               	movf	??_xtoa+3,w,c
  9507  002144  E106               	bnz	u7590
  9508  002146  0E1A               	movlw	26
  9509  002148  5C32               	subwf	??_xtoa+2,w,c
  9510  00214A  B0D8               	btfsc	status,0,c
  9511  00214C  D002               	goto	u7590
  9512  00214E  0E01               	movlw	1
  9513  002150  D001               	goto	u7600
  9514  002152                     u7590:
  9515  002152  0E00               	movlw	0
  9516  002154                     u7600:
  9517  002154  6E38               	movwf	_xtoa$1332,c
  9518  002156  6A39               	clrf	_xtoa$1332+1,c
  9519  002158  5038               	movf	_xtoa$1332,w,c
  9520  00215A  1039               	iorwf	_xtoa$1332+1,w,c
  9521  00215C  B4D8               	btfsc	status,2,c
  9522  00215E  D027               	goto	l6826
  9523  002160  0E9F               	movlw	159
  9524  002162  6E30               	movwf	??_xtoa& (0+255),c
  9525  002164  0EFF               	movlw	255
  9526  002166  6E31               	movwf	(??_xtoa+1)& (0+255),c
  9527  002168  0E20               	movlw	32
  9528  00216A  104A               	iorwf	xtoa@c,w,c
  9529  00216C  6E32               	movwf	(??_xtoa+2)& (0+255),c
  9530  00216E  0E00               	movlw	0
  9531  002170  104B               	iorwf	xtoa@c+1,w,c
  9532  002172  6E33               	movwf	(??_xtoa+3)& (0+255),c
  9533  002174  5030               	movf	??_xtoa,w,c
  9534  002176  2632               	addwf	??_xtoa+2,f,c
  9535  002178  5031               	movf	??_xtoa+1,w,c
  9536  00217A  2233               	addwfc	??_xtoa+3,f,c
  9537  00217C  5033               	movf	??_xtoa+3,w,c
  9538  00217E  E106               	bnz	u7620
  9539  002180  0E1A               	movlw	26
  9540  002182  5C32               	subwf	??_xtoa+2,w,c
  9541  002184  B0D8               	btfsc	status,0,c
  9542  002186  D002               	goto	u7620
  9543  002188  0E01               	movlw	1
  9544  00218A  D001               	goto	u7630
  9545  00218C                     u7620:
  9546  00218C  0E00               	movlw	0
  9547  00218E                     u7630:
  9548  00218E  6E3A               	movwf	_xtoa$1333,c
  9549  002190  6A3B               	clrf	_xtoa$1333+1,c
  9550  002192  503A               	movf	_xtoa$1333,w,c
  9551  002194  103B               	iorwf	_xtoa$1333+1,w,c
  9552  002196  B4D8               	btfsc	status,2,c
  9553  002198  D00A               	goto	l6826
  9554                           
  9555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9556  00219A  C04A  F00C         	movff	xtoa@c,toupper@c
  9557  00219E  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
  9558  0021A2  EC0D  F019         	call	_toupper	;wreg free
  9559  0021A6  C00C  F04A         	movff	?_toupper,xtoa@c
  9560  0021AA  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
  9561  0021AE                     l6826:
  9562                           
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9564  0021AE  0E00               	movlw	low _dbuf
  9565  0021B0  2448               	addwf	xtoa@i,w,c
  9566  0021B2  6ED9               	movwf	fsr2l,c
  9567  0021B4  0E01               	movlw	high _dbuf
  9568  0021B6  2049               	addwfc	xtoa@i+1,w,c
  9569  0021B8  6EDA               	movwf	fsr2h,c
  9570  0021BA  C04A  FFDF         	movff	xtoa@c,indf2
  9571                           
  9572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9573  0021BE  063C               	decf	xtoa@p,f,c
  9574  0021C0  A0D8               	btfss	status,0,c
  9575  0021C2  063D               	decf	xtoa@p+1,f,c
  9576                           
  9577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9578  0021C4  063E               	decf	xtoa@w,f,c
  9579  0021C6  A0D8               	btfss	status,0,c
  9580  0021C8  063F               	decf	xtoa@w+1,f,c
  9581                           
  9582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9583  0021CA  C040  F030         	movff	xtoa@n,??_xtoa
  9584  0021CE  C041  F031         	movff	xtoa@n+1,??_xtoa+1
  9585  0021D2  C042  F032         	movff	xtoa@n+2,??_xtoa+2
  9586  0021D6  C043  F033         	movff	xtoa@n+3,??_xtoa+3
  9587  0021DA  C044  F034         	movff	xtoa@n+4,??_xtoa+4
  9588  0021DE  C045  F035         	movff	xtoa@n+5,??_xtoa+5
  9589  0021E2  C046  F036         	movff	xtoa@n+6,??_xtoa+6
  9590  0021E6  C047  F037         	movff	xtoa@n+7,??_xtoa+7
  9591  0021EA  0E05               	movlw	5
  9592  0021EC  D009               	goto	u7650
  9593  0021EE                     u7655:
  9594  0021EE  90D8               	bcf	status,0,c
  9595  0021F0  3237               	rrcf	??_xtoa+7,f,c
  9596  0021F2  3236               	rrcf	??_xtoa+6,f,c
  9597  0021F4  3235               	rrcf	??_xtoa+5,f,c
  9598  0021F6  3234               	rrcf	??_xtoa+4,f,c
  9599  0021F8  3233               	rrcf	??_xtoa+3,f,c
  9600  0021FA  3232               	rrcf	??_xtoa+2,f,c
  9601  0021FC  3231               	rrcf	??_xtoa+1,f,c
  9602  0021FE  3230               	rrcf	??_xtoa,f,c
  9603  002200                     u7650:
  9604  002200  2EE8               	decfsz	wreg,f,c
  9605  002202  D7F5               	goto	u7655
  9606  002204  C030  F040         	movff	??_xtoa,xtoa@n
  9607  002208  C031  F041         	movff	??_xtoa+1,xtoa@n+1
  9608  00220C  C032  F042         	movff	??_xtoa+2,xtoa@n+2
  9609  002210  C033  F043         	movff	??_xtoa+3,xtoa@n+3
  9610  002214  C034  F044         	movff	??_xtoa+4,xtoa@n+4
  9611  002218  C035  F045         	movff	??_xtoa+5,xtoa@n+5
  9612  00221C  C036  F046         	movff	??_xtoa+6,xtoa@n+6
  9613  002220  C037  F047         	movff	??_xtoa+7,xtoa@n+7
  9614  002224                     l6834:
  9615                           
  9616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9617  002224  BE49               	btfsc	xtoa@i+1,7,c
  9618  002226  D020               	goto	u7700
  9619  002228  5049               	movf	xtoa@i+1,w,c
  9620  00222A  E104               	bnz	u7660
  9621  00222C  0E02               	movlw	2
  9622  00222E  5C48               	subwf	xtoa@i,w,c
  9623  002230  A0D8               	btfss	status,0,c
  9624  002232  D01A               	goto	u7700
  9625  002234                     u7660:
  9626  002234  5040               	movf	xtoa@n,w,c
  9627  002236  1041               	iorwf	xtoa@n+1,w,c
  9628  002238  1042               	iorwf	xtoa@n+2,w,c
  9629  00223A  1043               	iorwf	xtoa@n+3,w,c
  9630  00223C  1044               	iorwf	xtoa@n+4,w,c
  9631  00223E  1045               	iorwf	xtoa@n+5,w,c
  9632  002240  1046               	iorwf	xtoa@n+6,w,c
  9633  002242  1047               	iorwf	xtoa@n+7,w,c
  9634  002244  A4D8               	btfss	status,2,c
  9635  002246  D75B               	goto	l6804
  9636  002248  BE3D               	btfsc	xtoa@p+1,7,c
  9637  00224A  D005               	goto	u7680
  9638  00224C  503D               	movf	xtoa@p+1,w,c
  9639  00224E  E102               	bnz	u7681
  9640  002250  043C               	decf	xtoa@p,w,c
  9641  002252  B0D8               	btfsc	status,0,c
  9642  002254                     u7681:
  9643  002254  D754               	goto	l6804
  9644  002256                     u7680:
  9645  002256  BE3F               	btfsc	xtoa@w+1,7,c
  9646  002258  D007               	goto	u7700
  9647  00225A  503F               	movf	xtoa@w+1,w,c
  9648  00225C  E103               	bnz	u7690
  9649  00225E  043E               	decf	xtoa@w,w,c
  9650  002260  A0D8               	btfss	status,0,c
  9651  002262  D002               	goto	u7700
  9652  002264                     u7690:
  9653  002264  B275               	btfsc	_flags,1,c
  9654  002266  D74B               	goto	l6804
  9655  002268                     u7700:
  9656                           
  9657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9658  002268  A875               	btfss	_flags,4,c
  9659  00226A  D016               	goto	l6850
  9660                           
  9661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9662  00226C  0648               	decf	xtoa@i,f,c
  9663  00226E  A0D8               	btfss	status,0,c
  9664  002270  0649               	decf	xtoa@i+1,f,c
  9665                           
  9666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9667  002272  0E00               	movlw	low _dbuf
  9668  002274  2448               	addwf	xtoa@i,w,c
  9669  002276  6ED9               	movwf	fsr2l,c
  9670  002278  0E01               	movlw	high _dbuf
  9671  00227A  2049               	addwfc	xtoa@i+1,w,c
  9672  00227C  6EDA               	movwf	fsr2h,c
  9673  00227E  C02F  FFDF         	movff	xtoa@x,indf2
  9674                           
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9676  002282  0648               	decf	xtoa@i,f,c
  9677  002284  A0D8               	btfss	status,0,c
  9678  002286  0649               	decf	xtoa@i+1,f,c
  9679                           
  9680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9681  002288  0E00               	movlw	low _dbuf
  9682  00228A  2448               	addwf	xtoa@i,w,c
  9683  00228C  6ED9               	movwf	fsr2l,c
  9684  00228E  0E01               	movlw	high _dbuf
  9685  002290  2049               	addwfc	xtoa@i+1,w,c
  9686  002292  6EDA               	movwf	fsr2h,c
  9687  002294  0E30               	movlw	48
  9688  002296  6EDF               	movwf	indf2,c
  9689  002298                     l6850:
  9690                           
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9692  002298  C025  F01A         	movff	xtoa@fp,pad@fp
  9693  00229C  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
  9694  0022A0  0E00               	movlw	low _dbuf
  9695  0022A2  2448               	addwf	xtoa@i,w,c
  9696  0022A4  6E1C               	movwf	pad@buf,c
  9697  0022A6  0E01               	movlw	high _dbuf
  9698  0022A8  2049               	addwfc	xtoa@i+1,w,c
  9699  0022AA  6E1D               	movwf	pad@buf+1,c
  9700  0022AC  C03E  F01E         	movff	xtoa@w,pad@p
  9701  0022B0  C03F  F01F         	movff	xtoa@w+1,pad@p+1
  9702  0022B4  EC88  F016         	call	_pad	;wreg free
  9703  0022B8  C01A  F025         	movff	?_pad,?_xtoa
  9704  0022BC  C01B  F026         	movff	?_pad+1,?_xtoa+1
  9705  0022C0  0012               	return		;funcret
  9706  0022C2                     __end_of_xtoa:
  9707                           	opt callstack 0
  9708                           
  9709 ;; *************** function _toupper *****************
  9710 ;; Defined at:
  9711 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  c               2   11[COMRAM] int 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  2   11[COMRAM] int 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;Total ram usage:        8 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    3
  9732 ;; This function calls:
  9733 ;;		_islower
  9734 ;; This function is called by:
  9735 ;;		_xtoa
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text36
  9740  00321A                     __ptext36:
  9741                           	opt callstack 0
  9742  00321A                     _toupper:
  9743                           	opt callstack 23
  9744                           
  9745                           ;incstack = 0
  9746  00321A  0E9F               	movlw	159
  9747  00321C  6E0E               	movwf	??_toupper& (0+255),c
  9748  00321E  0EFF               	movlw	255
  9749  003220  6E0F               	movwf	(??_toupper+1)& (0+255),c
  9750  003222  C00C  F010         	movff	toupper@c,??_toupper+2
  9751  003226  C00D  F011         	movff	toupper@c+1,??_toupper+3
  9752  00322A  500E               	movf	??_toupper,w,c
  9753  00322C  2610               	addwf	??_toupper+2,f,c
  9754  00322E  500F               	movf	??_toupper+1,w,c
  9755  003230  2211               	addwfc	??_toupper+3,f,c
  9756  003232  5011               	movf	??_toupper+3,w,c
  9757  003234  E106               	bnz	u7090
  9758  003236  0E1A               	movlw	26
  9759  003238  5C10               	subwf	??_toupper+2,w,c
  9760  00323A  B0D8               	btfsc	status,0,c
  9761  00323C  D002               	goto	u7090
  9762  00323E  0E01               	movlw	1
  9763  003240  D001               	goto	u7100
  9764  003242                     u7090:
  9765  003242  0E00               	movlw	0
  9766  003244                     u7100:
  9767  003244  6E12               	movwf	_toupper$1898,c
  9768  003246  6A13               	clrf	_toupper$1898+1,c
  9769  003248  5012               	movf	_toupper$1898,w,c
  9770  00324A  1013               	iorwf	_toupper$1898+1,w,c
  9771  00324C  B4D8               	btfsc	status,2,c
  9772  00324E  D005               	goto	l1464
  9773  003250  0E5F               	movlw	95
  9774  003252  140C               	andwf	toupper@c,w,c
  9775  003254  6E0C               	movwf	?_toupper,c
  9776  003256  6A0D               	clrf	?_toupper+1,c
  9777  003258  0012               	return	
  9778  00325A                     l1464:
  9779  00325A  C00C  F00C         	movff	toupper@c,?_toupper
  9780  00325E  C00D  F00D         	movff	toupper@c+1,?_toupper+1
  9781  003262  0012               	return		;funcret
  9782  003264                     __end_of_toupper:
  9783                           	opt callstack 0
  9784                           
  9785 ;; *************** function _islower *****************
  9786 ;; Defined at:
  9787 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  c               2    5[COMRAM] int 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2    5[COMRAM] int 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        6 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    2
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_toupper
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text37
  9816  00350E                     __ptext37:
  9817                           	opt callstack 0
  9818  00350E                     _islower:
  9819                           	opt callstack 23
  9820                           
  9821                           ;incstack = 0
  9822  00350E  0E9F               	movlw	159
  9823  003510  6E08               	movwf	??_islower& (0+255),c
  9824  003512  0EFF               	movlw	255
  9825  003514  6E09               	movwf	(??_islower+1)& (0+255),c
  9826  003516  C006  F00A         	movff	islower@c,??_islower+2
  9827  00351A  C007  F00B         	movff	islower@c+1,??_islower+3
  9828  00351E  5008               	movf	??_islower,w,c
  9829  003520  260A               	addwf	??_islower+2,f,c
  9830  003522  5009               	movf	??_islower+1,w,c
  9831  003524  220B               	addwfc	??_islower+3,f,c
  9832  003526  500B               	movf	??_islower+3,w,c
  9833  003528  E106               	bnz	u6980
  9834  00352A  0E1A               	movlw	26
  9835  00352C  5C0A               	subwf	??_islower+2,w,c
  9836  00352E  B0D8               	btfsc	status,0,c
  9837  003530  D002               	goto	u6980
  9838  003532  0E01               	movlw	1
  9839  003534  D001               	goto	u6990
  9840  003536                     u6980:
  9841  003536  0E00               	movlw	0
  9842  003538                     u6990:
  9843  003538  6E06               	movwf	?_islower,c
  9844  00353A  6A07               	clrf	?_islower+1,c
  9845  00353C  0012               	return		;funcret
  9846  00353E                     __end_of_islower:
  9847                           	opt callstack 0
  9848                           
  9849 ;; *************** function _isupper *****************
  9850 ;; Defined at:
  9851 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  c               2    5[COMRAM] int 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  2    5[COMRAM] int 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9867 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;Total ram usage:        6 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    2
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_xtoa
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text38
  9880  00353E                     __ptext38:
  9881                           	opt callstack 0
  9882  00353E                     _isupper:
  9883                           	opt callstack 24
  9884                           
  9885                           ;incstack = 0
  9886  00353E  0EBF               	movlw	191
  9887  003540  6E08               	movwf	??_isupper& (0+255),c
  9888  003542  0EFF               	movlw	255
  9889  003544  6E09               	movwf	(??_isupper+1)& (0+255),c
  9890  003546  C006  F00A         	movff	isupper@c,??_isupper+2
  9891  00354A  C007  F00B         	movff	isupper@c+1,??_isupper+3
  9892  00354E  5008               	movf	??_isupper,w,c
  9893  003550  260A               	addwf	??_isupper+2,f,c
  9894  003552  5009               	movf	??_isupper+1,w,c
  9895  003554  220B               	addwfc	??_isupper+3,f,c
  9896  003556  500B               	movf	??_isupper+3,w,c
  9897  003558  E106               	bnz	u7050
  9898  00355A  0E1A               	movlw	26
  9899  00355C  5C0A               	subwf	??_isupper+2,w,c
  9900  00355E  B0D8               	btfsc	status,0,c
  9901  003560  D002               	goto	u7050
  9902  003562  0E01               	movlw	1
  9903  003564  D001               	goto	u7060
  9904  003566                     u7050:
  9905  003566  0E00               	movlw	0
  9906  003568                     u7060:
  9907  003568  6E06               	movwf	?_isupper,c
  9908  00356A  6A07               	clrf	?_isupper+1,c
  9909  00356C  0012               	return		;funcret
  9910  00356E                     __end_of_isupper:
  9911                           	opt callstack 0
  9912                           
  9913 ;; *************** function _isalpha *****************
  9914 ;; Defined at:
  9915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;  c               2    5[COMRAM] int 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  2    5[COMRAM] int 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2, status,0
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;Total ram usage:        6 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    2
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_xtoa
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text39
  9944  0034A8                     __ptext39:
  9945                           	opt callstack 0
  9946  0034A8                     _isalpha:
  9947                           	opt callstack 24
  9948                           
  9949                           ;incstack = 0
  9950  0034A8  0E9F               	movlw	159
  9951  0034AA  6E08               	movwf	??_isalpha& (0+255),c
  9952  0034AC  0EFF               	movlw	255
  9953  0034AE  6E09               	movwf	(??_isalpha+1)& (0+255),c
  9954  0034B0  0E20               	movlw	32
  9955  0034B2  1006               	iorwf	isalpha@c,w,c
  9956  0034B4  6E0A               	movwf	(??_isalpha+2)& (0+255),c
  9957  0034B6  0E00               	movlw	0
  9958  0034B8  1007               	iorwf	isalpha@c+1,w,c
  9959  0034BA  6E0B               	movwf	(??_isalpha+3)& (0+255),c
  9960  0034BC  5008               	movf	??_isalpha,w,c
  9961  0034BE  260A               	addwf	??_isalpha+2,f,c
  9962  0034C0  5009               	movf	??_isalpha+1,w,c
  9963  0034C2  220B               	addwfc	??_isalpha+3,f,c
  9964  0034C4  500B               	movf	??_isalpha+3,w,c
  9965  0034C6  E106               	bnz	u7070
  9966  0034C8  0E1A               	movlw	26
  9967  0034CA  5C0A               	subwf	??_isalpha+2,w,c
  9968  0034CC  B0D8               	btfsc	status,0,c
  9969  0034CE  D002               	goto	u7070
  9970  0034D0  0E01               	movlw	1
  9971  0034D2  D001               	goto	u7080
  9972  0034D4                     u7070:
  9973  0034D4  0E00               	movlw	0
  9974  0034D6                     u7080:
  9975  0034D6  6E06               	movwf	?_isalpha,c
  9976  0034D8  6A07               	clrf	?_isalpha+1,c
  9977  0034DA  0012               	return		;funcret
  9978  0034DC                     __end_of_isalpha:
  9979                           	opt callstack 0
  9980                           
  9981 ;; *************** function _stoa *****************
  9982 ;; Defined at:
  9983 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  9986 ;;		 -> NULL(0), 
  9987 ;;  s               2   20[COMRAM] PTR unsigned char 
  9988 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  9989 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  9990 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  9991 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  9992 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9993 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  nuls            7   23[COMRAM] unsigned char [7]
  9996 ;;  l               2   38[COMRAM] int 
  9997 ;;  p               2   36[COMRAM] int 
  9998 ;;  cp              2   34[COMRAM] PTR unsigned char 
  9999 ;;		 -> ?_printf(2), stoa@nuls(7), STR_51(16), STR_49(14), 
 10000 ;;		 -> STR_47(11), STR_45(9), STR_43(16), STR_41(13), 
 10001 ;;		 -> STR_39(13), STR_37(9), STR_35(13), STR_33(14), 
 10002 ;;		 -> STR_31(10), STR_27(9), STR_18(14), STR_16(16), 
 10003 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
 10004 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 10005 ;;  w               2   32[COMRAM] int 
 10006 ;;  i               2   30[COMRAM] int 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  2   18[COMRAM] int 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;Total ram usage:       22 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    7
 10023 ;; This function calls:
 10024 ;;		_fputc
 10025 ;;		_strlen
 10026 ;; This function is called by:
 10027 ;;		_vfpfcnvrt
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text40
 10032  00274C                     __ptext40:
 10033                           	opt callstack 0
 10034  00274C                     _stoa:
 10035                           	opt callstack 20
 10036                           
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10038                           
 10039                           ;incstack = 0
 10040  00274C  EE20  F0E9         	lfsr	2,stoa@F1144
 10041  002750  EE10  F018         	lfsr	1,stoa@nuls
 10042  002754  0E06               	movlw	6
 10043  002756                     u7451:
 10044  002756  CFDB FFE3          	movff	plusw2,plusw1
 10045  00275A  06E8               	decf	wreg,f,c
 10046  00275C  E2FC               	bc	u7451
 10047                           
 10048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 10049  00275E  C015  F023         	movff	stoa@s,stoa@cp
 10050  002762  C016  F024         	movff	stoa@s+1,stoa@cp+1
 10051                           
 10052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 10053  002766  5023               	movf	stoa@cp,w,c
 10054  002768  1024               	iorwf	stoa@cp+1,w,c
 10055  00276A  A4D8               	btfss	status,2,c
 10056  00276C  D004               	goto	l6754
 10057                           
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 10059  00276E  0E18               	movlw	low stoa@nuls
 10060  002770  6E23               	movwf	stoa@cp,c
 10061  002772  0E00               	movlw	high stoa@nuls
 10062  002774  6E24               	movwf	stoa@cp+1,c
 10063  002776                     l6754:
 10064                           
 10065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 10066  002776  C023  F006         	movff	stoa@cp,strlen@s
 10067  00277A  C024  F007         	movff	stoa@cp+1,strlen@s+1
 10068  00277E  EC55  F019         	call	_strlen	;wreg free
 10069  002782  C006  F027         	movff	?_strlen,stoa@l
 10070  002786  C007  F028         	movff	?_strlen+1,stoa@l+1
 10071                           
 10072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 10073  00278A  C0DE  F025         	movff	_prec,stoa@p
 10074  00278E  C0DF  F026         	movff	_prec+1,stoa@p+1
 10075                           
 10076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 10077  002792  BE26               	btfsc	stoa@p+1,7,c
 10078  002794  D00E               	goto	l603
 10079  002796  5027               	movf	stoa@l,w,c
 10080  002798  5C25               	subwf	stoa@p,w,c
 10081  00279A  5026               	movf	stoa@p+1,w,c
 10082  00279C  0A80               	xorlw	128
 10083  00279E  6E17               	movwf	??_stoa& (0+255),c
 10084  0027A0  5028               	movf	stoa@l+1,w,c
 10085  0027A2  0A80               	xorlw	128
 10086  0027A4  5817               	subwfb	??_stoa& (0+255),w,c
 10087  0027A6  B0D8               	btfsc	status,0,c
 10088  0027A8  D004               	goto	l603
 10089  0027AA  C025  F027         	movff	stoa@p,stoa@l
 10090  0027AE  C026  F028         	movff	stoa@p+1,stoa@l+1
 10091  0027B2                     l603:
 10092                           
 10093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 10094  0027B2  C027  F025         	movff	stoa@l,stoa@p
 10095  0027B6  C028  F026         	movff	stoa@l+1,stoa@p+1
 10096                           
 10097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 10098  0027BA  C0DC  F021         	movff	_width,stoa@w
 10099  0027BE  C0DD  F022         	movff	_width+1,stoa@w+1
 10100                           
 10101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 10102  0027C2  A075               	btfss	_flags,0,c
 10103  0027C4  D00D               	goto	l6768
 10104  0027C6  D016               	goto	u7500
 10105  0027C8                     l6764:
 10106                           
 10107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 10108  0027C8  0E00               	movlw	0
 10109  0027CA  6E0B               	movwf	fputc@c+1,c
 10110  0027CC  0E20               	movlw	32
 10111  0027CE  6E0A               	movwf	fputc@c,c
 10112  0027D0  C013  F00C         	movff	stoa@fp,fputc@fp
 10113  0027D4  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10114  0027D8  ECC8  F017         	call	_fputc	;wreg free
 10115                           
 10116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 10117  0027DC  4A27               	infsnz	stoa@l,f,c
 10118  0027DE  2A28               	incf	stoa@l+1,f,c
 10119  0027E0                     l6768:
 10120                           
 10121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 10122  0027E0  5021               	movf	stoa@w,w,c
 10123  0027E2  5C27               	subwf	stoa@l,w,c
 10124  0027E4  5028               	movf	stoa@l+1,w,c
 10125  0027E6  0A80               	xorlw	128
 10126  0027E8  6E17               	movwf	??_stoa& (0+255),c
 10127  0027EA  5022               	movf	stoa@w+1,w,c
 10128  0027EC  0A80               	xorlw	128
 10129  0027EE  5817               	subwfb	??_stoa& (0+255),w,c
 10130  0027F0  A0D8               	btfss	status,0,c
 10131  0027F2  D7EA               	goto	l6764
 10132  0027F4                     u7500:
 10133                           
 10134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 10135  0027F4  0E00               	movlw	0
 10136  0027F6  6E20               	movwf	stoa@i+1,c
 10137  0027F8  0E00               	movlw	0
 10138  0027FA  6E1F               	movwf	stoa@i,c
 10139                           
 10140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10141  0027FC  D01F               	goto	l6778
 10142  0027FE                     l6772:
 10143                           
 10144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 10145  0027FE  C023  FFF6         	movff	stoa@cp,tblptrl
 10146  002802  C024  FFF7         	movff	stoa@cp+1,tblptrh
 10147  002806  0E00               	movlw	low (__mediumconst shr (0+16))
 10148  002808  6EF8               	movwf	tblptru,c
 10149  00280A  0E0F               	movlw	(high __ramtop+-1)
 10150  00280C  64F7               	cpfsgt	tblptrh,c
 10151  00280E  D003               	bra	u7517
 10152  002810  0008               	tblrd		*
 10153  002812  50F5               	movf	tablat,w,c
 10154  002814  D005               	bra	u7510
 10155  002816                     u7517:
 10156  002816  CFF6 FFE1          	movff	tblptrl,fsr1l
 10157  00281A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10158  00281E  50E7               	movf	indf1,w,c
 10159  002820                     u7510:
 10160  002820  6E17               	movwf	??_stoa& (0+255),c
 10161  002822  5017               	movf	??_stoa,w,c
 10162  002824  6E0A               	movwf	fputc@c,c
 10163  002826  6A0B               	clrf	fputc@c+1,c
 10164  002828  C013  F00C         	movff	stoa@fp,fputc@fp
 10165  00282C  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10166  002830  ECC8  F017         	call	_fputc	;wreg free
 10167                           
 10168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 10169  002834  4A23               	infsnz	stoa@cp,f,c
 10170  002836  2A24               	incf	stoa@cp+1,f,c
 10171                           
 10172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 10173  002838  4A1F               	infsnz	stoa@i,f,c
 10174  00283A  2A20               	incf	stoa@i+1,f,c
 10175  00283C                     l6778:
 10176                           
 10177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10178  00283C  5025               	movf	stoa@p,w,c
 10179  00283E  5C1F               	subwf	stoa@i,w,c
 10180  002840  5020               	movf	stoa@i+1,w,c
 10181  002842  0A80               	xorlw	128
 10182  002844  6E17               	movwf	??_stoa& (0+255),c
 10183  002846  5026               	movf	stoa@p+1,w,c
 10184  002848  0A80               	xorlw	128
 10185  00284A  5817               	subwfb	??_stoa& (0+255),w,c
 10186  00284C  A0D8               	btfss	status,0,c
 10187  00284E  D7D7               	goto	l6772
 10188                           
 10189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 10190  002850  B075               	btfsc	_flags,0,c
 10191  002852  D00D               	goto	l6786
 10192  002854  D016               	goto	u7540
 10193  002856                     l6782:
 10194                           
 10195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 10196  002856  0E00               	movlw	0
 10197  002858  6E0B               	movwf	fputc@c+1,c
 10198  00285A  0E20               	movlw	32
 10199  00285C  6E0A               	movwf	fputc@c,c
 10200  00285E  C013  F00C         	movff	stoa@fp,fputc@fp
 10201  002862  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10202  002866  ECC8  F017         	call	_fputc	;wreg free
 10203                           
 10204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 10205  00286A  4A27               	infsnz	stoa@l,f,c
 10206  00286C  2A28               	incf	stoa@l+1,f,c
 10207  00286E                     l6786:
 10208                           
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 10210  00286E  5021               	movf	stoa@w,w,c
 10211  002870  5C27               	subwf	stoa@l,w,c
 10212  002872  5028               	movf	stoa@l+1,w,c
 10213  002874  0A80               	xorlw	128
 10214  002876  6E17               	movwf	??_stoa& (0+255),c
 10215  002878  5022               	movf	stoa@w+1,w,c
 10216  00287A  0A80               	xorlw	128
 10217  00287C  5817               	subwfb	??_stoa& (0+255),w,c
 10218  00287E  A0D8               	btfss	status,0,c
 10219  002880  D7EA               	goto	l6782
 10220  002882                     u7540:
 10221                           
 10222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 10223                           
 10224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 10225  002882  C027  F013         	movff	stoa@l,?_stoa
 10226  002886  C028  F014         	movff	stoa@l+1,?_stoa+1
 10227  00288A  0012               	return		;funcret
 10228  00288C                     __end_of_stoa:
 10229                           	opt callstack 0
 10230                           
 10231 ;; *************** function _dtoa *****************
 10232 ;; Defined at:
 10233 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10236 ;;		 -> NULL(0), 
 10237 ;;  d               8   38[COMRAM] long long 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  n               8   62[COMRAM] long long 
 10240 ;;  i               2   70[COMRAM] int 
 10241 ;;  s               2   60[COMRAM] int 
 10242 ;;  w               2   58[COMRAM] int 
 10243 ;;  p               2   56[COMRAM] int 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  2   36[COMRAM] int 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:       36 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    9
 10260 ;; This function calls:
 10261 ;;		___aodiv
 10262 ;;		___aomod
 10263 ;;		_abs
 10264 ;;		_pad
 10265 ;; This function is called by:
 10266 ;;		_vfpfcnvrt
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text41
 10271  001E50                     __ptext41:
 10272                           	opt callstack 0
 10273  001E50                     _dtoa:
 10274                           	opt callstack 18
 10275                           
 10276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10277                           
 10278                           ;incstack = 0
 10279  001E50  C027  F03F         	movff	dtoa@d,dtoa@n
 10280  001E54  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 10281  001E58  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 10282  001E5C  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 10283  001E60  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 10284  001E64  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 10285  001E68  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 10286  001E6C  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 10287                           
 10288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10289  001E70  AE46               	btfss	dtoa@n+7,7,c
 10290  001E72  D002               	goto	u7300
 10291  001E74  0E01               	movlw	1
 10292  001E76  D001               	goto	u7310
 10293  001E78                     u7300:
 10294  001E78  0E00               	movlw	0
 10295  001E7A                     u7310:
 10296  001E7A  6E3D               	movwf	dtoa@s,c
 10297  001E7C  6A3E               	clrf	dtoa@s+1,c
 10298                           
 10299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10300  001E7E  503D               	movf	dtoa@s,w,c
 10301  001E80  103E               	iorwf	dtoa@s+1,w,c
 10302  001E82  B4D8               	btfsc	status,2,c
 10303  001E84  D010               	goto	l6690
 10304                           
 10305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10306  001E86  1E46               	comf	dtoa@n+7,f,c
 10307  001E88  1E45               	comf	dtoa@n+6,f,c
 10308  001E8A  1E44               	comf	dtoa@n+5,f,c
 10309  001E8C  1E43               	comf	dtoa@n+4,f,c
 10310  001E8E  1E42               	comf	dtoa@n+3,f,c
 10311  001E90  1E41               	comf	dtoa@n+2,f,c
 10312  001E92  1E40               	comf	dtoa@n+1,f,c
 10313  001E94  6C3F               	negf	dtoa@n,c
 10314  001E96  0E00               	movlw	0
 10315  001E98  2240               	addwfc	dtoa@n+1,f,c
 10316  001E9A  2241               	addwfc	dtoa@n+2,f,c
 10317  001E9C  2242               	addwfc	dtoa@n+3,f,c
 10318  001E9E  2243               	addwfc	dtoa@n+4,f,c
 10319  001EA0  2244               	addwfc	dtoa@n+5,f,c
 10320  001EA2  2245               	addwfc	dtoa@n+6,f,c
 10321  001EA4  2246               	addwfc	dtoa@n+7,f,c
 10322  001EA6                     l6690:
 10323                           
 10324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10325  001EA6  0100               	movlb	0	; () banked
 10326  001EA8  AFDF               	btfss	(_prec+1)& (0+255),7,b
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10330  001EAA  9275               	bcf	_flags,1,c
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10334  001EAC  BFDF               	btfsc	(_prec+1)& (0+255),7,b
 10335  001EAE  D005               	goto	u7340
 10336  001EB0  51DF               	movf	(_prec+1)& (0+255),w,b
 10337  001EB2  E108               	bnz	l574
 10338  001EB4  05DE               	decf	_prec& (0+255),w,b
 10339  001EB6  B0D8               	btfsc	status,0,c
 10340  001EB8  D005               	goto	l574
 10341  001EBA                     u7340:
 10342                           
 10343                           ; BSR set to: 0
 10344  001EBA  0E00               	movlw	0
 10345  001EBC  6E3A               	movwf	dtoa@p+1,c
 10346  001EBE  0E01               	movlw	1
 10347  001EC0  6E39               	movwf	dtoa@p,c
 10348  001EC2  D004               	goto	l576
 10349  001EC4                     l574:
 10350                           
 10351                           ; BSR set to: 0
 10352  001EC4  C0DE  F039         	movff	_prec,dtoa@p
 10353  001EC8  C0DF  F03A         	movff	_prec+1,dtoa@p+1
 10354  001ECC                     l576:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10358  001ECC  C0DC  F03B         	movff	_width,dtoa@w
 10359  001ED0  C0DD  F03C         	movff	_width+1,dtoa@w+1
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10363  001ED4  503D               	movf	dtoa@s,w,c
 10364  001ED6  103E               	iorwf	dtoa@s+1,w,c
 10365  001ED8  A4D8               	btfss	status,2,c
 10366  001EDA  D002               	goto	u7360
 10367                           
 10368                           ; BSR set to: 0
 10369  001EDC  A475               	btfss	_flags,2,c
 10370  001EDE  D003               	goto	l6704
 10371  001EE0                     u7360:
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10375  001EE0  063B               	decf	dtoa@w,f,c
 10376  001EE2  A0D8               	btfss	status,0,c
 10377  001EE4  063C               	decf	dtoa@w+1,f,c
 10378  001EE6                     l6704:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10382  001EE6  0E00               	movlw	0
 10383  001EE8  6E48               	movwf	dtoa@i+1,c
 10384  001EEA  0E1F               	movlw	31
 10385  001EEC  6E47               	movwf	dtoa@i,c
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10389  001EEE  0E00               	movlw	0
 10390  001EF0  0101               	movlb	1	; () banked
 10391  001EF2  6F1F               	movwf	(_dbuf+31)& (0+255),b
 10392                           
 10393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10394  001EF4  D07C               	goto	l6718
 10395  001EF6                     l6708:
 10396                           
 10397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10398  001EF6  0647               	decf	dtoa@i,f,c
 10399  001EF8  A0D8               	btfss	status,0,c
 10400  001EFA  0648               	decf	dtoa@i+1,f,c
 10401                           
 10402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10403  001EFC  0E00               	movlw	low _dbuf
 10404  001EFE  2447               	addwf	dtoa@i,w,c
 10405  001F00  6ED9               	movwf	fsr2l,c
 10406  001F02  0E01               	movlw	high _dbuf
 10407  001F04  2048               	addwfc	dtoa@i+1,w,c
 10408  001F06  6EDA               	movwf	fsr2h,c
 10409  001F08  C03F  F006         	movff	dtoa@n,___aomod@dividend
 10410  001F0C  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 10411  001F10  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 10412  001F14  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 10413  001F18  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 10414  001F1C  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 10415  001F20  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 10416  001F24  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 10417  001F28  0E0A               	movlw	10
 10418  001F2A  6E0E               	movwf	___aomod@divisor,c
 10419  001F2C  0E00               	movlw	0
 10420  001F2E  6E0F               	movwf	___aomod@divisor+1,c
 10421  001F30  0E00               	movlw	0
 10422  001F32  6E10               	movwf	___aomod@divisor+2,c
 10423  001F34  0E00               	movlw	0
 10424  001F36  6E11               	movwf	___aomod@divisor+3,c
 10425  001F38  0E00               	movlw	0
 10426  001F3A  6E12               	movwf	___aomod@divisor+4,c
 10427  001F3C  0E00               	movlw	0
 10428  001F3E  6E13               	movwf	___aomod@divisor+5,c
 10429  001F40  0E00               	movlw	0
 10430  001F42  6E14               	movwf	___aomod@divisor+6,c
 10431  001F44  0E00               	movlw	0
 10432  001F46  6E15               	movwf	___aomod@divisor+7,c
 10433  001F48  ECE6  F014         	call	___aomod	;wreg free
 10434  001F4C  C006  F02F         	movff	?___aomod,??_dtoa
 10435  001F50  C007  F030         	movff	?___aomod+1,??_dtoa+1
 10436  001F54  C008  F031         	movff	?___aomod+2,??_dtoa+2
 10437  001F58  C009  F032         	movff	?___aomod+3,??_dtoa+3
 10438  001F5C  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 10439  001F60  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 10440  001F64  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 10441  001F68  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 10442  001F6C  C02F  F018         	movff	??_dtoa,abs@a
 10443  001F70  C031  F019         	movff	??_dtoa+2,abs@a+1
 10444  001F74  EC6E  F01A         	call	_abs	;wreg free
 10445  001F78  5018               	movf	?_abs,w,c
 10446  001F7A  0F30               	addlw	48
 10447  001F7C  6EDF               	movwf	indf2,c
 10448                           
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10450  001F7E  0639               	decf	dtoa@p,f,c
 10451  001F80  A0D8               	btfss	status,0,c
 10452  001F82  063A               	decf	dtoa@p+1,f,c
 10453                           
 10454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10455  001F84  063B               	decf	dtoa@w,f,c
 10456  001F86  A0D8               	btfss	status,0,c
 10457  001F88  063C               	decf	dtoa@w+1,f,c
 10458                           
 10459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10460  001F8A  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 10461  001F8E  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 10462  001F92  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 10463  001F96  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 10464  001F9A  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 10465  001F9E  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 10466  001FA2  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 10467  001FA6  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 10468  001FAA  0E0A               	movlw	10
 10469  001FAC  6E0E               	movwf	___aodiv@divisor,c
 10470  001FAE  0E00               	movlw	0
 10471  001FB0  6E0F               	movwf	___aodiv@divisor+1,c
 10472  001FB2  0E00               	movlw	0
 10473  001FB4  6E10               	movwf	___aodiv@divisor+2,c
 10474  001FB6  0E00               	movlw	0
 10475  001FB8  6E11               	movwf	___aodiv@divisor+3,c
 10476  001FBA  0E00               	movlw	0
 10477  001FBC  6E12               	movwf	___aodiv@divisor+4,c
 10478  001FBE  0E00               	movlw	0
 10479  001FC0  6E13               	movwf	___aodiv@divisor+5,c
 10480  001FC2  0E00               	movlw	0
 10481  001FC4  6E14               	movwf	___aodiv@divisor+6,c
 10482  001FC6  0E00               	movlw	0
 10483  001FC8  6E15               	movwf	___aodiv@divisor+7,c
 10484  001FCA  EC62  F012         	call	___aodiv	;wreg free
 10485  001FCE  C006  F03F         	movff	?___aodiv,dtoa@n
 10486  001FD2  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 10487  001FD6  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 10488  001FDA  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 10489  001FDE  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 10490  001FE2  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 10491  001FE6  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 10492  001FEA  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 10493  001FEE                     l6718:
 10494                           
 10495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10496  001FEE  BE48               	btfsc	dtoa@i+1,7,c
 10497  001FF0  D01F               	goto	u7410
 10498  001FF2  5048               	movf	dtoa@i+1,w,c
 10499  001FF4  E103               	bnz	u7370
 10500  001FF6  0447               	decf	dtoa@i,w,c
 10501  001FF8  A0D8               	btfss	status,0,c
 10502  001FFA  D01A               	goto	u7410
 10503  001FFC                     u7370:
 10504  001FFC  503F               	movf	dtoa@n,w,c
 10505  001FFE  1040               	iorwf	dtoa@n+1,w,c
 10506  002000  1041               	iorwf	dtoa@n+2,w,c
 10507  002002  1042               	iorwf	dtoa@n+3,w,c
 10508  002004  1043               	iorwf	dtoa@n+4,w,c
 10509  002006  1044               	iorwf	dtoa@n+5,w,c
 10510  002008  1045               	iorwf	dtoa@n+6,w,c
 10511  00200A  1046               	iorwf	dtoa@n+7,w,c
 10512  00200C  A4D8               	btfss	status,2,c
 10513  00200E  D773               	goto	l6708
 10514  002010  BE3A               	btfsc	dtoa@p+1,7,c
 10515  002012  D005               	goto	u7390
 10516  002014  503A               	movf	dtoa@p+1,w,c
 10517  002016  E102               	bnz	u7391
 10518  002018  0439               	decf	dtoa@p,w,c
 10519  00201A  B0D8               	btfsc	status,0,c
 10520  00201C                     u7391:
 10521  00201C  D76C               	goto	l6708
 10522  00201E                     u7390:
 10523  00201E  BE3C               	btfsc	dtoa@w+1,7,c
 10524  002020  D007               	goto	u7410
 10525  002022  503C               	movf	dtoa@w+1,w,c
 10526  002024  E103               	bnz	u7400
 10527  002026  043B               	decf	dtoa@w,w,c
 10528  002028  A0D8               	btfss	status,0,c
 10529  00202A  D002               	goto	u7410
 10530  00202C                     u7400:
 10531  00202C  B275               	btfsc	_flags,1,c
 10532  00202E  D763               	goto	l6708
 10533  002030                     u7410:
 10534                           
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10536  002030  503D               	movf	dtoa@s,w,c
 10537  002032  103E               	iorwf	dtoa@s+1,w,c
 10538  002034  A4D8               	btfss	status,2,c
 10539  002036  D002               	goto	u7430
 10540  002038  A475               	btfss	_flags,2,c
 10541  00203A  D017               	goto	l6742
 10542  00203C                     u7430:
 10543                           
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10545  00203C  0647               	decf	dtoa@i,f,c
 10546  00203E  A0D8               	btfss	status,0,c
 10547  002040  0648               	decf	dtoa@i+1,f,c
 10548                           
 10549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10550  002042  503D               	movf	dtoa@s,w,c
 10551  002044  103E               	iorwf	dtoa@s+1,w,c
 10552  002046  A4D8               	btfss	status,2,c
 10553  002048  D004               	goto	l6738
 10554  00204A  0E00               	movlw	0
 10555  00204C  6E38               	movwf	_dtoa$1311+1,c
 10556  00204E  0E2B               	movlw	43
 10557  002050  D003               	goto	L17
 10558  002052                     l6738:
 10559  002052  0E00               	movlw	0
 10560  002054  6E38               	movwf	_dtoa$1311+1,c
 10561  002056  0E2D               	movlw	45
 10562  002058                     L17:
 10563  002058  6E37               	movwf	_dtoa$1311,c
 10564  00205A  0E00               	movlw	low _dbuf
 10565  00205C  2447               	addwf	dtoa@i,w,c
 10566  00205E  6ED9               	movwf	fsr2l,c
 10567  002060  0E01               	movlw	high _dbuf
 10568  002062  2048               	addwfc	dtoa@i+1,w,c
 10569  002064  6EDA               	movwf	fsr2h,c
 10570  002066  C037  FFDF         	movff	_dtoa$1311,indf2
 10571  00206A                     l6742:
 10572                           
 10573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10574  00206A  C025  F01A         	movff	dtoa@fp,pad@fp
 10575  00206E  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 10576  002072  0E00               	movlw	low _dbuf
 10577  002074  2447               	addwf	dtoa@i,w,c
 10578  002076  6E1C               	movwf	pad@buf,c
 10579  002078  0E01               	movlw	high _dbuf
 10580  00207A  2048               	addwfc	dtoa@i+1,w,c
 10581  00207C  6E1D               	movwf	pad@buf+1,c
 10582  00207E  C03B  F01E         	movff	dtoa@w,pad@p
 10583  002082  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 10584  002086  EC88  F016         	call	_pad	;wreg free
 10585  00208A  C01A  F025         	movff	?_pad,?_dtoa
 10586  00208E  C01B  F026         	movff	?_pad+1,?_dtoa+1
 10587  002092  0012               	return		;funcret
 10588  002094                     __end_of_dtoa:
 10589                           	opt callstack 0
 10590                           
 10591 ;; *************** function _abs *****************
 10592 ;; Defined at:
 10593 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  a               2   23[COMRAM] int 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  2   23[COMRAM] int 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;Total ram usage:        4 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    2
 10614 ;; This function calls:
 10615 ;;		Nothing
 10616 ;; This function is called by:
 10617 ;;		_tirePositioning
 10618 ;;		_dtoa
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text42
 10623  0034DC                     __ptext42:
 10624                           	opt callstack 0
 10625  0034DC                     _abs:
 10626                           	opt callstack 24
 10627                           
 10628                           ;incstack = 0
 10629  0034DC  BE19               	btfsc	abs@a+1,7,c
 10630  0034DE  D005               	goto	u7000
 10631  0034E0  5019               	movf	abs@a+1,w,c
 10632  0034E2  E110               	bnz	l1366
 10633  0034E4  0418               	decf	abs@a,w,c
 10634  0034E6  B0D8               	btfsc	status,0,c
 10635  0034E8  D00D               	goto	l1366
 10636  0034EA                     u7000:
 10637  0034EA  C018  F01A         	movff	abs@a,??_abs
 10638  0034EE  C019  F01B         	movff	abs@a+1,??_abs+1
 10639  0034F2  1E1A               	comf	??_abs,f,c
 10640  0034F4  1E1B               	comf	??_abs+1,f,c
 10641  0034F6  4A1A               	infsnz	??_abs,f,c
 10642  0034F8  2A1B               	incf	??_abs+1,f,c
 10643  0034FA  C01A  F018         	movff	??_abs,?_abs
 10644  0034FE  C01B  F019         	movff	??_abs+1,?_abs+1
 10645  003502  0012               	return	
 10646  003504                     l1366:
 10647  003504  C018  F018         	movff	abs@a,?_abs
 10648  003508  C019  F019         	movff	abs@a+1,?_abs+1
 10649  00350C  0012               	return		;funcret
 10650  00350E                     __end_of_abs:
 10651                           	opt callstack 0
 10652                           
 10653 ;; *************** function ___aomod *****************
 10654 ;; Defined at:
 10655 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  dividend        8    5[COMRAM] long long 
 10658 ;;  divisor         8   13[COMRAM] long long 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  sign            1   22[COMRAM] unsigned char 
 10661 ;;  counter         1   21[COMRAM] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  8    5[COMRAM] long long 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10671 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;Total ram usage:       18 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    2
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_dtoa
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text43
 10686  0029CC                     __ptext43:
 10687                           	opt callstack 0
 10688  0029CC                     ___aomod:
 10689                           	opt callstack 24
 10690                           
 10691                           ;incstack = 0
 10692  0029CC  0E00               	movlw	0
 10693  0029CE  6E17               	movwf	___aomod@sign,c
 10694  0029D0  AE0D               	btfss	___aomod@dividend+7,7,c
 10695  0029D2  D012               	goto	l6630
 10696  0029D4  1E0D               	comf	___aomod@dividend+7,f,c
 10697  0029D6  1E0C               	comf	___aomod@dividend+6,f,c
 10698  0029D8  1E0B               	comf	___aomod@dividend+5,f,c
 10699  0029DA  1E0A               	comf	___aomod@dividend+4,f,c
 10700  0029DC  1E09               	comf	___aomod@dividend+3,f,c
 10701  0029DE  1E08               	comf	___aomod@dividend+2,f,c
 10702  0029E0  1E07               	comf	___aomod@dividend+1,f,c
 10703  0029E2  6C06               	negf	___aomod@dividend,c
 10704  0029E4  0E00               	movlw	0
 10705  0029E6  2207               	addwfc	___aomod@dividend+1,f,c
 10706  0029E8  2208               	addwfc	___aomod@dividend+2,f,c
 10707  0029EA  2209               	addwfc	___aomod@dividend+3,f,c
 10708  0029EC  220A               	addwfc	___aomod@dividend+4,f,c
 10709  0029EE  220B               	addwfc	___aomod@dividend+5,f,c
 10710  0029F0  220C               	addwfc	___aomod@dividend+6,f,c
 10711  0029F2  220D               	addwfc	___aomod@dividend+7,f,c
 10712  0029F4  0E01               	movlw	1
 10713  0029F6  6E17               	movwf	___aomod@sign,c
 10714  0029F8                     l6630:
 10715  0029F8  AE15               	btfss	___aomod@divisor+7,7,c
 10716  0029FA  D010               	goto	l6634
 10717  0029FC  1E15               	comf	___aomod@divisor+7,f,c
 10718  0029FE  1E14               	comf	___aomod@divisor+6,f,c
 10719  002A00  1E13               	comf	___aomod@divisor+5,f,c
 10720  002A02  1E12               	comf	___aomod@divisor+4,f,c
 10721  002A04  1E11               	comf	___aomod@divisor+3,f,c
 10722  002A06  1E10               	comf	___aomod@divisor+2,f,c
 10723  002A08  1E0F               	comf	___aomod@divisor+1,f,c
 10724  002A0A  6C0E               	negf	___aomod@divisor,c
 10725  002A0C  0E00               	movlw	0
 10726  002A0E  220F               	addwfc	___aomod@divisor+1,f,c
 10727  002A10  2210               	addwfc	___aomod@divisor+2,f,c
 10728  002A12  2211               	addwfc	___aomod@divisor+3,f,c
 10729  002A14  2212               	addwfc	___aomod@divisor+4,f,c
 10730  002A16  2213               	addwfc	___aomod@divisor+5,f,c
 10731  002A18  2214               	addwfc	___aomod@divisor+6,f,c
 10732  002A1A  2215               	addwfc	___aomod@divisor+7,f,c
 10733  002A1C                     l6634:
 10734  002A1C  500E               	movf	___aomod@divisor,w,c
 10735  002A1E  100F               	iorwf	___aomod@divisor+1,w,c
 10736  002A20  1010               	iorwf	___aomod@divisor+2,w,c
 10737  002A22  1011               	iorwf	___aomod@divisor+3,w,c
 10738  002A24  1012               	iorwf	___aomod@divisor+4,w,c
 10739  002A26  1013               	iorwf	___aomod@divisor+5,w,c
 10740  002A28  1014               	iorwf	___aomod@divisor+6,w,c
 10741  002A2A  1015               	iorwf	___aomod@divisor+7,w,c
 10742  002A2C  B4D8               	btfsc	status,2,c
 10743  002A2E  D03C               	goto	l6650
 10744  002A30  0E01               	movlw	1
 10745  002A32  6E16               	movwf	___aomod@counter,c
 10746  002A34  D00A               	goto	l6640
 10747  002A36                     l6638:
 10748  002A36  90D8               	bcf	status,0,c
 10749  002A38  360E               	rlcf	___aomod@divisor,f,c
 10750  002A3A  360F               	rlcf	___aomod@divisor+1,f,c
 10751  002A3C  3610               	rlcf	___aomod@divisor+2,f,c
 10752  002A3E  3611               	rlcf	___aomod@divisor+3,f,c
 10753  002A40  3612               	rlcf	___aomod@divisor+4,f,c
 10754  002A42  3613               	rlcf	___aomod@divisor+5,f,c
 10755  002A44  3614               	rlcf	___aomod@divisor+6,f,c
 10756  002A46  3615               	rlcf	___aomod@divisor+7,f,c
 10757  002A48  2A16               	incf	___aomod@counter,f,c
 10758  002A4A                     l6640:
 10759  002A4A  AE15               	btfss	___aomod@divisor+7,7,c
 10760  002A4C  D7F4               	goto	l6638
 10761  002A4E                     u7240:
 10762  002A4E  500E               	movf	___aomod@divisor,w,c
 10763  002A50  5C06               	subwf	___aomod@dividend,w,c
 10764  002A52  500F               	movf	___aomod@divisor+1,w,c
 10765  002A54  5807               	subwfb	___aomod@dividend+1,w,c
 10766  002A56  5010               	movf	___aomod@divisor+2,w,c
 10767  002A58  5808               	subwfb	___aomod@dividend+2,w,c
 10768  002A5A  5011               	movf	___aomod@divisor+3,w,c
 10769  002A5C  5809               	subwfb	___aomod@dividend+3,w,c
 10770  002A5E  5012               	movf	___aomod@divisor+4,w,c
 10771  002A60  580A               	subwfb	___aomod@dividend+4,w,c
 10772  002A62  5013               	movf	___aomod@divisor+5,w,c
 10773  002A64  580B               	subwfb	___aomod@dividend+5,w,c
 10774  002A66  5014               	movf	___aomod@divisor+6,w,c
 10775  002A68  580C               	subwfb	___aomod@dividend+6,w,c
 10776  002A6A  5015               	movf	___aomod@divisor+7,w,c
 10777  002A6C  580D               	subwfb	___aomod@dividend+7,w,c
 10778  002A6E  A0D8               	btfss	status,0,c
 10779  002A70  D010               	goto	l6646
 10780  002A72  500E               	movf	___aomod@divisor,w,c
 10781  002A74  5E06               	subwf	___aomod@dividend,f,c
 10782  002A76  500F               	movf	___aomod@divisor+1,w,c
 10783  002A78  5A07               	subwfb	___aomod@dividend+1,f,c
 10784  002A7A  5010               	movf	___aomod@divisor+2,w,c
 10785  002A7C  5A08               	subwfb	___aomod@dividend+2,f,c
 10786  002A7E  5011               	movf	___aomod@divisor+3,w,c
 10787  002A80  5A09               	subwfb	___aomod@dividend+3,f,c
 10788  002A82  5012               	movf	___aomod@divisor+4,w,c
 10789  002A84  5A0A               	subwfb	___aomod@dividend+4,f,c
 10790  002A86  5013               	movf	___aomod@divisor+5,w,c
 10791  002A88  5A0B               	subwfb	___aomod@dividend+5,f,c
 10792  002A8A  5014               	movf	___aomod@divisor+6,w,c
 10793  002A8C  5A0C               	subwfb	___aomod@dividend+6,f,c
 10794  002A8E  5015               	movf	___aomod@divisor+7,w,c
 10795  002A90  5A0D               	subwfb	___aomod@dividend+7,f,c
 10796  002A92                     l6646:
 10797  002A92  90D8               	bcf	status,0,c
 10798  002A94  3215               	rrcf	___aomod@divisor+7,f,c
 10799  002A96  3214               	rrcf	___aomod@divisor+6,f,c
 10800  002A98  3213               	rrcf	___aomod@divisor+5,f,c
 10801  002A9A  3212               	rrcf	___aomod@divisor+4,f,c
 10802  002A9C  3211               	rrcf	___aomod@divisor+3,f,c
 10803  002A9E  3210               	rrcf	___aomod@divisor+2,f,c
 10804  002AA0  320F               	rrcf	___aomod@divisor+1,f,c
 10805  002AA2  320E               	rrcf	___aomod@divisor,f,c
 10806  002AA4  2E16               	decfsz	___aomod@counter,f,c
 10807  002AA6  D7D3               	goto	u7240
 10808  002AA8                     l6650:
 10809  002AA8  5017               	movf	___aomod@sign,w,c
 10810  002AAA  B4D8               	btfsc	status,2,c
 10811  002AAC  D010               	goto	l6654
 10812  002AAE  1E0D               	comf	___aomod@dividend+7,f,c
 10813  002AB0  1E0C               	comf	___aomod@dividend+6,f,c
 10814  002AB2  1E0B               	comf	___aomod@dividend+5,f,c
 10815  002AB4  1E0A               	comf	___aomod@dividend+4,f,c
 10816  002AB6  1E09               	comf	___aomod@dividend+3,f,c
 10817  002AB8  1E08               	comf	___aomod@dividend+2,f,c
 10818  002ABA  1E07               	comf	___aomod@dividend+1,f,c
 10819  002ABC  6C06               	negf	___aomod@dividend,c
 10820  002ABE  0E00               	movlw	0
 10821  002AC0  2207               	addwfc	___aomod@dividend+1,f,c
 10822  002AC2  2208               	addwfc	___aomod@dividend+2,f,c
 10823  002AC4  2209               	addwfc	___aomod@dividend+3,f,c
 10824  002AC6  220A               	addwfc	___aomod@dividend+4,f,c
 10825  002AC8  220B               	addwfc	___aomod@dividend+5,f,c
 10826  002ACA  220C               	addwfc	___aomod@dividend+6,f,c
 10827  002ACC  220D               	addwfc	___aomod@dividend+7,f,c
 10828  002ACE                     l6654:
 10829  002ACE  C006  F006         	movff	___aomod@dividend,?___aomod
 10830  002AD2  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 10831  002AD6  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 10832  002ADA  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 10833  002ADE  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 10834  002AE2  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 10835  002AE6  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 10836  002AEA  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 10837  002AEE  0012               	return		;funcret
 10838  002AF0                     __end_of___aomod:
 10839                           	opt callstack 0
 10840                           
 10841 ;; *************** function ___aodiv *****************
 10842 ;; Defined at:
 10843 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  dividend        8    5[COMRAM] long long 
 10846 ;;  divisor         8   13[COMRAM] long long 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;  quotient        8   23[COMRAM] long long 
 10849 ;;  sign            1   22[COMRAM] unsigned char 
 10850 ;;  counter         1   21[COMRAM] unsigned char 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  8    5[COMRAM] long long 
 10853 ;; Registers used:
 10854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10860 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;Total ram usage:       26 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    2
 10867 ;; This function calls:
 10868 ;;		Nothing
 10869 ;; This function is called by:
 10870 ;;		_dtoa
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text44
 10875  0024C4                     __ptext44:
 10876                           	opt callstack 0
 10877  0024C4                     ___aodiv:
 10878                           	opt callstack 24
 10879                           
 10880                           ;incstack = 0
 10881  0024C4  0E00               	movlw	0
 10882  0024C6  6E17               	movwf	___aodiv@sign,c
 10883  0024C8  AE15               	btfss	___aodiv@divisor+7,7,c
 10884  0024CA  D012               	goto	l6586
 10885  0024CC  1E15               	comf	___aodiv@divisor+7,f,c
 10886  0024CE  1E14               	comf	___aodiv@divisor+6,f,c
 10887  0024D0  1E13               	comf	___aodiv@divisor+5,f,c
 10888  0024D2  1E12               	comf	___aodiv@divisor+4,f,c
 10889  0024D4  1E11               	comf	___aodiv@divisor+3,f,c
 10890  0024D6  1E10               	comf	___aodiv@divisor+2,f,c
 10891  0024D8  1E0F               	comf	___aodiv@divisor+1,f,c
 10892  0024DA  6C0E               	negf	___aodiv@divisor,c
 10893  0024DC  0E00               	movlw	0
 10894  0024DE  220F               	addwfc	___aodiv@divisor+1,f,c
 10895  0024E0  2210               	addwfc	___aodiv@divisor+2,f,c
 10896  0024E2  2211               	addwfc	___aodiv@divisor+3,f,c
 10897  0024E4  2212               	addwfc	___aodiv@divisor+4,f,c
 10898  0024E6  2213               	addwfc	___aodiv@divisor+5,f,c
 10899  0024E8  2214               	addwfc	___aodiv@divisor+6,f,c
 10900  0024EA  2215               	addwfc	___aodiv@divisor+7,f,c
 10901  0024EC  0E01               	movlw	1
 10902  0024EE  6E17               	movwf	___aodiv@sign,c
 10903  0024F0                     l6586:
 10904  0024F0  AE0D               	btfss	___aodiv@dividend+7,7,c
 10905  0024F2  D012               	goto	l6592
 10906  0024F4  1E0D               	comf	___aodiv@dividend+7,f,c
 10907  0024F6  1E0C               	comf	___aodiv@dividend+6,f,c
 10908  0024F8  1E0B               	comf	___aodiv@dividend+5,f,c
 10909  0024FA  1E0A               	comf	___aodiv@dividend+4,f,c
 10910  0024FC  1E09               	comf	___aodiv@dividend+3,f,c
 10911  0024FE  1E08               	comf	___aodiv@dividend+2,f,c
 10912  002500  1E07               	comf	___aodiv@dividend+1,f,c
 10913  002502  6C06               	negf	___aodiv@dividend,c
 10914  002504  0E00               	movlw	0
 10915  002506  2207               	addwfc	___aodiv@dividend+1,f,c
 10916  002508  2208               	addwfc	___aodiv@dividend+2,f,c
 10917  00250A  2209               	addwfc	___aodiv@dividend+3,f,c
 10918  00250C  220A               	addwfc	___aodiv@dividend+4,f,c
 10919  00250E  220B               	addwfc	___aodiv@dividend+5,f,c
 10920  002510  220C               	addwfc	___aodiv@dividend+6,f,c
 10921  002512  220D               	addwfc	___aodiv@dividend+7,f,c
 10922  002514  0E01               	movlw	1
 10923  002516  1A17               	xorwf	___aodiv@sign,f,c
 10924  002518                     l6592:
 10925  002518  EE20  F018         	lfsr	2,___aodiv@quotient
 10926  00251C  0E07               	movlw	7
 10927  00251E                     u7161:
 10928  00251E  6ADE               	clrf	postinc2,c
 10929  002520  06E8               	decf	wreg,f,c
 10930  002522  E2FD               	bc	u7161
 10931  002524  500E               	movf	___aodiv@divisor,w,c
 10932  002526  100F               	iorwf	___aodiv@divisor+1,w,c
 10933  002528  1010               	iorwf	___aodiv@divisor+2,w,c
 10934  00252A  1011               	iorwf	___aodiv@divisor+3,w,c
 10935  00252C  1012               	iorwf	___aodiv@divisor+4,w,c
 10936  00252E  1013               	iorwf	___aodiv@divisor+5,w,c
 10937  002530  1014               	iorwf	___aodiv@divisor+6,w,c
 10938  002532  1015               	iorwf	___aodiv@divisor+7,w,c
 10939  002534  B4D8               	btfsc	status,2,c
 10940  002536  D046               	goto	l6614
 10941  002538  0E01               	movlw	1
 10942  00253A  6E16               	movwf	___aodiv@counter,c
 10943  00253C  D00A               	goto	l6600
 10944  00253E                     l6598:
 10945  00253E  90D8               	bcf	status,0,c
 10946  002540  360E               	rlcf	___aodiv@divisor,f,c
 10947  002542  360F               	rlcf	___aodiv@divisor+1,f,c
 10948  002544  3610               	rlcf	___aodiv@divisor+2,f,c
 10949  002546  3611               	rlcf	___aodiv@divisor+3,f,c
 10950  002548  3612               	rlcf	___aodiv@divisor+4,f,c
 10951  00254A  3613               	rlcf	___aodiv@divisor+5,f,c
 10952  00254C  3614               	rlcf	___aodiv@divisor+6,f,c
 10953  00254E  3615               	rlcf	___aodiv@divisor+7,f,c
 10954  002550  2A16               	incf	___aodiv@counter,f,c
 10955  002552                     l6600:
 10956  002552  AE15               	btfss	___aodiv@divisor+7,7,c
 10957  002554  D7F4               	goto	l6598
 10958  002556                     u7180:
 10959  002556  90D8               	bcf	status,0,c
 10960  002558  3618               	rlcf	___aodiv@quotient,f,c
 10961  00255A  3619               	rlcf	___aodiv@quotient+1,f,c
 10962  00255C  361A               	rlcf	___aodiv@quotient+2,f,c
 10963  00255E  361B               	rlcf	___aodiv@quotient+3,f,c
 10964  002560  361C               	rlcf	___aodiv@quotient+4,f,c
 10965  002562  361D               	rlcf	___aodiv@quotient+5,f,c
 10966  002564  361E               	rlcf	___aodiv@quotient+6,f,c
 10967  002566  361F               	rlcf	___aodiv@quotient+7,f,c
 10968  002568  500E               	movf	___aodiv@divisor,w,c
 10969  00256A  5C06               	subwf	___aodiv@dividend,w,c
 10970  00256C  500F               	movf	___aodiv@divisor+1,w,c
 10971  00256E  5807               	subwfb	___aodiv@dividend+1,w,c
 10972  002570  5010               	movf	___aodiv@divisor+2,w,c
 10973  002572  5808               	subwfb	___aodiv@dividend+2,w,c
 10974  002574  5011               	movf	___aodiv@divisor+3,w,c
 10975  002576  5809               	subwfb	___aodiv@dividend+3,w,c
 10976  002578  5012               	movf	___aodiv@divisor+4,w,c
 10977  00257A  580A               	subwfb	___aodiv@dividend+4,w,c
 10978  00257C  5013               	movf	___aodiv@divisor+5,w,c
 10979  00257E  580B               	subwfb	___aodiv@dividend+5,w,c
 10980  002580  5014               	movf	___aodiv@divisor+6,w,c
 10981  002582  580C               	subwfb	___aodiv@dividend+6,w,c
 10982  002584  5015               	movf	___aodiv@divisor+7,w,c
 10983  002586  580D               	subwfb	___aodiv@dividend+7,w,c
 10984  002588  A0D8               	btfss	status,0,c
 10985  00258A  D011               	goto	l6610
 10986  00258C  500E               	movf	___aodiv@divisor,w,c
 10987  00258E  5E06               	subwf	___aodiv@dividend,f,c
 10988  002590  500F               	movf	___aodiv@divisor+1,w,c
 10989  002592  5A07               	subwfb	___aodiv@dividend+1,f,c
 10990  002594  5010               	movf	___aodiv@divisor+2,w,c
 10991  002596  5A08               	subwfb	___aodiv@dividend+2,f,c
 10992  002598  5011               	movf	___aodiv@divisor+3,w,c
 10993  00259A  5A09               	subwfb	___aodiv@dividend+3,f,c
 10994  00259C  5012               	movf	___aodiv@divisor+4,w,c
 10995  00259E  5A0A               	subwfb	___aodiv@dividend+4,f,c
 10996  0025A0  5013               	movf	___aodiv@divisor+5,w,c
 10997  0025A2  5A0B               	subwfb	___aodiv@dividend+5,f,c
 10998  0025A4  5014               	movf	___aodiv@divisor+6,w,c
 10999  0025A6  5A0C               	subwfb	___aodiv@dividend+6,f,c
 11000  0025A8  5015               	movf	___aodiv@divisor+7,w,c
 11001  0025AA  5A0D               	subwfb	___aodiv@dividend+7,f,c
 11002  0025AC  8018               	bsf	___aodiv@quotient,0,c
 11003  0025AE                     l6610:
 11004  0025AE  90D8               	bcf	status,0,c
 11005  0025B0  3215               	rrcf	___aodiv@divisor+7,f,c
 11006  0025B2  3214               	rrcf	___aodiv@divisor+6,f,c
 11007  0025B4  3213               	rrcf	___aodiv@divisor+5,f,c
 11008  0025B6  3212               	rrcf	___aodiv@divisor+4,f,c
 11009  0025B8  3211               	rrcf	___aodiv@divisor+3,f,c
 11010  0025BA  3210               	rrcf	___aodiv@divisor+2,f,c
 11011  0025BC  320F               	rrcf	___aodiv@divisor+1,f,c
 11012  0025BE  320E               	rrcf	___aodiv@divisor,f,c
 11013  0025C0  2E16               	decfsz	___aodiv@counter,f,c
 11014  0025C2  D7C9               	goto	u7180
 11015  0025C4                     l6614:
 11016  0025C4  5017               	movf	___aodiv@sign,w,c
 11017  0025C6  B4D8               	btfsc	status,2,c
 11018  0025C8  D010               	goto	l6618
 11019  0025CA  1E1F               	comf	___aodiv@quotient+7,f,c
 11020  0025CC  1E1E               	comf	___aodiv@quotient+6,f,c
 11021  0025CE  1E1D               	comf	___aodiv@quotient+5,f,c
 11022  0025D0  1E1C               	comf	___aodiv@quotient+4,f,c
 11023  0025D2  1E1B               	comf	___aodiv@quotient+3,f,c
 11024  0025D4  1E1A               	comf	___aodiv@quotient+2,f,c
 11025  0025D6  1E19               	comf	___aodiv@quotient+1,f,c
 11026  0025D8  6C18               	negf	___aodiv@quotient,c
 11027  0025DA  0E00               	movlw	0
 11028  0025DC  2219               	addwfc	___aodiv@quotient+1,f,c
 11029  0025DE  221A               	addwfc	___aodiv@quotient+2,f,c
 11030  0025E0  221B               	addwfc	___aodiv@quotient+3,f,c
 11031  0025E2  221C               	addwfc	___aodiv@quotient+4,f,c
 11032  0025E4  221D               	addwfc	___aodiv@quotient+5,f,c
 11033  0025E6  221E               	addwfc	___aodiv@quotient+6,f,c
 11034  0025E8  221F               	addwfc	___aodiv@quotient+7,f,c
 11035  0025EA                     l6618:
 11036  0025EA  C018  F006         	movff	___aodiv@quotient,?___aodiv
 11037  0025EE  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 11038  0025F2  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 11039  0025F6  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 11040  0025FA  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 11041  0025FE  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 11042  002602  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 11043  002606  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 11044  00260A  0012               	return		;funcret
 11045  00260C                     __end_of___aodiv:
 11046                           	opt callstack 0
 11047                           
 11048 ;; *************** function _ctoa *****************
 11049 ;; Defined at:
 11050 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11053 ;;		 -> NULL(0), 
 11054 ;;  c               1   38[COMRAM] unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  w               2   39[COMRAM] int 
 11057 ;;  l               2    0        int 
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  2   36[COMRAM] int 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;Total ram usage:        5 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    9
 11074 ;; This function calls:
 11075 ;;		_pad
 11076 ;; This function is called by:
 11077 ;;		_vfpfcnvrt
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text45
 11082  00317E                     __ptext45:
 11083                           	opt callstack 0
 11084  00317E                     _ctoa:
 11085                           	opt callstack 18
 11086                           
 11087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 11088                           
 11089                           ;incstack = 0
 11090  00317E  0100               	movlb	0	; () banked
 11091  003180  51DC               	movf	_width& (0+255),w,b
 11092  003182  11DD               	iorwf	(_width+1)& (0+255),w,b
 11093  003184  A4D8               	btfss	status,2,c
 11094  003186  D005               	goto	l6674
 11095                           
 11096                           ; BSR set to: 0
 11097  003188  C0DC  F028         	movff	_width,ctoa@w
 11098  00318C  C0DD  F029         	movff	_width+1,ctoa@w+1
 11099  003190  D006               	goto	l6676
 11100  003192                     l6674:
 11101                           
 11102                           ; BSR set to: 0
 11103  003192  0EFF               	movlw	255
 11104  003194  25DC               	addwf	_width& (0+255),w,b
 11105  003196  6E28               	movwf	ctoa@w,c
 11106  003198  0EFF               	movlw	255
 11107  00319A  21DD               	addwfc	(_width+1)& (0+255),w,b
 11108  00319C  6E29               	movwf	ctoa@w+1,c
 11109  00319E                     l6676:
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 11113  00319E  C027  F100         	movff	ctoa@c,_dbuf
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 11117  0031A2  0E00               	movlw	0
 11118  0031A4  0101               	movlb	1	; () banked
 11119  0031A6  6F01               	movwf	(_dbuf+1)& (0+255),b
 11120                           
 11121                           ; BSR set to: 1
 11122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 11123  0031A8  C025  F01A         	movff	ctoa@fp,pad@fp
 11124  0031AC  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 11125  0031B0  0E00               	movlw	low _dbuf
 11126  0031B2  6E1C               	movwf	pad@buf,c
 11127  0031B4  0E01               	movlw	high _dbuf
 11128  0031B6  6E1D               	movwf	pad@buf+1,c
 11129  0031B8  C028  F01E         	movff	ctoa@w,pad@p
 11130  0031BC  C029  F01F         	movff	ctoa@w+1,pad@p+1
 11131  0031C0  EC88  F016         	call	_pad	;wreg free
 11132  0031C4  C01A  F025         	movff	?_pad,?_ctoa
 11133  0031C8  C01B  F026         	movff	?_pad+1,?_ctoa+1
 11134  0031CC  0012               	return		;funcret
 11135  0031CE                     __end_of_ctoa:
 11136                           	opt callstack 0
 11137                           
 11138 ;; *************** function _pad *****************
 11139 ;; Defined at:
 11140 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11143 ;;		 -> NULL(0), 
 11144 ;;  buf             2   27[COMRAM] PTR unsigned char 
 11145 ;;		 -> dbuf(32), 
 11146 ;;  p               2   29[COMRAM] int 
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;  w               2   34[COMRAM] int 
 11149 ;;  i               2   32[COMRAM] int 
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  2   25[COMRAM] int 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11159 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11160 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;Total ram usage:       11 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    8
 11166 ;; This function calls:
 11167 ;;		_fputc
 11168 ;;		_fputs
 11169 ;;		_strlen
 11170 ;; This function is called by:
 11171 ;;		_ctoa
 11172 ;;		_dtoa
 11173 ;;		_xtoa
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text46
 11178  002D10                     __ptext46:
 11179                           	opt callstack 0
 11180  002D10                     _pad:
 11181                           	opt callstack 18
 11182                           
 11183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11184                           
 11185                           ;incstack = 0
 11186  002D10  A075               	btfss	_flags,0,c
 11187  002D12  D00A               	goto	l6532
 11188                           
 11189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11190  002D14  C01C  F013         	movff	pad@buf,fputs@s
 11191  002D18  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11192  002D1C  C01A  F015         	movff	pad@fp,fputs@fp
 11193  002D20  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11194  002D24  EC38  F01A         	call	_fputs	;wreg free
 11195  002D28                     l6532:
 11196                           
 11197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11198  002D28  BE1F               	btfsc	pad@p+1,7,c
 11199  002D2A  D005               	goto	l6536
 11200  002D2C  C01E  F023         	movff	pad@p,pad@w
 11201  002D30  C01F  F024         	movff	pad@p+1,pad@w+1
 11202  002D34  D004               	goto	l556
 11203  002D36                     l6536:
 11204  002D36  0E00               	movlw	0
 11205  002D38  6E24               	movwf	pad@w+1,c
 11206  002D3A  0E00               	movlw	0
 11207  002D3C  6E23               	movwf	pad@w,c
 11208  002D3E                     l556:
 11209                           
 11210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11211  002D3E  0E00               	movlw	0
 11212  002D40  6E22               	movwf	pad@i+1,c
 11213  002D42  0E00               	movlw	0
 11214  002D44  6E21               	movwf	pad@i,c
 11215                           
 11216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11217  002D46  D00C               	goto	l6542
 11218  002D48                     l6538:
 11219                           
 11220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11221  002D48  0E00               	movlw	0
 11222  002D4A  6E0B               	movwf	fputc@c+1,c
 11223  002D4C  0E20               	movlw	32
 11224  002D4E  6E0A               	movwf	fputc@c,c
 11225  002D50  C01A  F00C         	movff	pad@fp,fputc@fp
 11226  002D54  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 11227  002D58  ECC8  F017         	call	_fputc	;wreg free
 11228                           
 11229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11230  002D5C  4A21               	infsnz	pad@i,f,c
 11231  002D5E  2A22               	incf	pad@i+1,f,c
 11232  002D60                     l6542:
 11233                           
 11234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11235  002D60  5023               	movf	pad@w,w,c
 11236  002D62  5C21               	subwf	pad@i,w,c
 11237  002D64  5022               	movf	pad@i+1,w,c
 11238  002D66  0A80               	xorlw	128
 11239  002D68  6E20               	movwf	??_pad& (0+255),c
 11240  002D6A  5024               	movf	pad@w+1,w,c
 11241  002D6C  0A80               	xorlw	128
 11242  002D6E  5820               	subwfb	??_pad& (0+255),w,c
 11243  002D70  A0D8               	btfss	status,0,c
 11244  002D72  D7EA               	goto	l6538
 11245                           
 11246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11247  002D74  B075               	btfsc	_flags,0,c
 11248  002D76  D00A               	goto	l6546
 11249                           
 11250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11251  002D78  C01C  F013         	movff	pad@buf,fputs@s
 11252  002D7C  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11253  002D80  C01A  F015         	movff	pad@fp,fputs@fp
 11254  002D84  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11255  002D88  EC38  F01A         	call	_fputs	;wreg free
 11256  002D8C                     l6546:
 11257                           
 11258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11259  002D8C  C01C  F006         	movff	pad@buf,strlen@s
 11260  002D90  C01D  F007         	movff	pad@buf+1,strlen@s+1
 11261  002D94  EC55  F019         	call	_strlen	;wreg free
 11262  002D98  5023               	movf	pad@w,w,c
 11263  002D9A  2406               	addwf	?_strlen,w,c
 11264  002D9C  6E1A               	movwf	?_pad,c
 11265  002D9E  5024               	movf	pad@w+1,w,c
 11266  002DA0  2007               	addwfc	?_strlen+1,w,c
 11267  002DA2  6E1B               	movwf	?_pad+1,c
 11268  002DA4  0012               	return		;funcret
 11269  002DA6                     __end_of_pad:
 11270                           	opt callstack 0
 11271                           
 11272 ;; *************** function _strlen *****************
 11273 ;; Defined at:
 11274 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  s               2    5[COMRAM] PTR const unsigned char 
 11277 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 11278 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 11279 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 11280 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 11281 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11282 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11283 ;;		 -> STR_2(10), 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  a               2    7[COMRAM] PTR const unsigned char 
 11286 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 11287 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 11288 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 11289 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 11290 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11291 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11292 ;;		 -> STR_2(10), 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  2    5[COMRAM] unsigned int 
 11295 ;; Registers used:
 11296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;Total ram usage:        4 bytes
 11307 ;; Hardware stack levels used:    1
 11308 ;; Hardware stack levels required when called:    2
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_pad
 11313 ;;		_stoa
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           	psect	text47
 11318  0032AA                     __ptext47:
 11319                           	opt callstack 0
 11320  0032AA                     _strlen:
 11321                           	opt callstack 23
 11322                           
 11323                           ;incstack = 0
 11324  0032AA  C006  F008         	movff	strlen@s,strlen@a
 11325  0032AE  C007  F009         	movff	strlen@s+1,strlen@a+1
 11326  0032B2  D002               	goto	l6514
 11327  0032B4                     l6512:
 11328  0032B4  4A06               	infsnz	strlen@s,f,c
 11329  0032B6  2A07               	incf	strlen@s+1,f,c
 11330  0032B8                     l6514:
 11331  0032B8  C006  FFF6         	movff	strlen@s,tblptrl
 11332  0032BC  C007  FFF7         	movff	strlen@s+1,tblptrh
 11333  0032C0  0E00               	movlw	low (__mediumconst shr (0+16))
 11334  0032C2  6EF8               	movwf	tblptru,c
 11335  0032C4  0E0F               	movlw	(high __ramtop+-1)
 11336  0032C6  64F7               	cpfsgt	tblptrh,c
 11337  0032C8  D003               	bra	u6967
 11338  0032CA  0008               	tblrd		*
 11339  0032CC  50F5               	movf	tablat,w,c
 11340  0032CE  D005               	bra	u6960
 11341  0032D0                     u6967:
 11342  0032D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11343  0032D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11344  0032D8  50E7               	movf	indf1,w,c
 11345  0032DA                     u6960:
 11346  0032DA  0900               	iorlw	0
 11347  0032DC  A4D8               	btfss	status,2,c
 11348  0032DE  D7EA               	goto	l6512
 11349  0032E0  5008               	movf	strlen@a,w,c
 11350  0032E2  5C06               	subwf	strlen@s,w,c
 11351  0032E4  6E06               	movwf	?_strlen,c
 11352  0032E6  5009               	movf	strlen@a+1,w,c
 11353  0032E8  5807               	subwfb	strlen@s+1,w,c
 11354  0032EA  6E07               	movwf	?_strlen+1,c
 11355  0032EC  0012               	return		;funcret
 11356  0032EE                     __end_of_strlen:
 11357                           	opt callstack 0
 11358                           
 11359 ;; *************** function _fputs *****************
 11360 ;; Defined at:
 11361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;  s               2   18[COMRAM] PTR const unsigned char 
 11364 ;;		 -> dbuf(32), 
 11365 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 11366 ;;		 -> NULL(0), 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  i               2   23[COMRAM] int 
 11369 ;;  c               1   22[COMRAM] unsigned char 
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  2   18[COMRAM] int 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11382 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11383 ;;Total ram usage:        7 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    7
 11386 ;; This function calls:
 11387 ;;		_fputc
 11388 ;; This function is called by:
 11389 ;;		_pad
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text48
 11394  003470                     __ptext48:
 11395                           	opt callstack 0
 11396  003470                     _fputs:
 11397                           	opt callstack 18
 11398                           
 11399                           ;incstack = 0
 11400  003470  0E00               	movlw	0
 11401  003472  6E19               	movwf	fputs@i+1,c
 11402  003474  0E00               	movlw	0
 11403  003476  6E18               	movwf	fputs@i,c
 11404  003478  D00B               	goto	l6508
 11405  00347A                     l6504:
 11406  00347A  C017  F00A         	movff	fputs@c,fputc@c
 11407  00347E  6A0B               	clrf	fputc@c+1,c
 11408  003480  C015  F00C         	movff	fputs@fp,fputc@fp
 11409  003484  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 11410  003488  ECC8  F017         	call	_fputc	;wreg free
 11411  00348C  4A18               	infsnz	fputs@i,f,c
 11412  00348E  2A19               	incf	fputs@i+1,f,c
 11413  003490                     l6508:
 11414  003490  5018               	movf	fputs@i,w,c
 11415  003492  2413               	addwf	fputs@s,w,c
 11416  003494  6ED9               	movwf	fsr2l,c
 11417  003496  5019               	movf	fputs@i+1,w,c
 11418  003498  2014               	addwfc	fputs@s+1,w,c
 11419  00349A  6EDA               	movwf	fsr2h,c
 11420  00349C  50DF               	movf	indf2,w,c
 11421  00349E  6E17               	movwf	fputs@c,c
 11422  0034A0  5017               	movf	fputs@c,w,c
 11423  0034A2  B4D8               	btfsc	status,2,c
 11424  0034A4  0012               	return	
 11425  0034A6  D7E9               	goto	l6504
 11426  0034A8                     __end_of_fputs:
 11427                           	opt callstack 0
 11428                           
 11429 ;; *************** function _fputc *****************
 11430 ;; Defined at:
 11431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;  c               2    9[COMRAM] int 
 11434 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11435 ;;		 -> NULL(0), 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  2    9[COMRAM] int 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;Total ram usage:        9 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    6
 11454 ;; This function calls:
 11455 ;;		_putch
 11456 ;; This function is called by:
 11457 ;;		_pad
 11458 ;;		_stoa
 11459 ;;		_vfpfcnvrt
 11460 ;;		_fputs
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text49
 11465  002F90                     __ptext49:
 11466                           	opt callstack 0
 11467  002F90                     _fputc:
 11468                           	opt callstack 18
 11469                           
 11470                           ;incstack = 0
 11471  002F90  500C               	movf	fputc@fp,w,c
 11472  002F92  100D               	iorwf	fputc@fp+1,w,c
 11473  002F94  B4D8               	btfsc	status,2,c
 11474  002F96  D004               	goto	u6920
 11475  002F98  500C               	movf	fputc@fp,w,c
 11476  002F9A  100D               	iorwf	fputc@fp+1,w,c
 11477  002F9C  A4D8               	btfss	status,2,c
 11478  002F9E  D004               	goto	l6494
 11479  002FA0                     u6920:
 11480  002FA0  500A               	movf	fputc@c,w,c
 11481  002FA2  EC90  F01B         	call	_putch
 11482  002FA6  0012               	return	
 11483  002FA8                     l6494:
 11484  002FA8  EE20 F004          	lfsr	2,4
 11485  002FAC  500C               	movf	fputc@fp,w,c
 11486  002FAE  26D9               	addwf	fsr2l,f,c
 11487  002FB0  500D               	movf	fputc@fp+1,w,c
 11488  002FB2  22DA               	addwfc	fsr2h,f,c
 11489  002FB4  50DE               	movf	postinc2,w,c
 11490  002FB6  10DE               	iorwf	postinc2,w,c
 11491  002FB8  B4D8               	btfsc	status,2,c
 11492  002FBA  D016               	goto	u6940
 11493  002FBC  EE20 F004          	lfsr	2,4
 11494  002FC0  500C               	movf	fputc@fp,w,c
 11495  002FC2  26D9               	addwf	fsr2l,f,c
 11496  002FC4  500D               	movf	fputc@fp+1,w,c
 11497  002FC6  22DA               	addwfc	fsr2h,f,c
 11498  002FC8  EE10 F002          	lfsr	1,2
 11499  002FCC  500C               	movf	fputc@fp,w,c
 11500  002FCE  26E1               	addwf	fsr1l,f,c
 11501  002FD0  500D               	movf	fputc@fp+1,w,c
 11502  002FD2  22E2               	addwfc	fsr1h,f,c
 11503  002FD4  50DE               	movf	postinc2,w,c
 11504  002FD6  5CE6               	subwf	postinc1,w,c
 11505  002FD8  50E6               	movf	postinc1,w,c
 11506  002FDA  0A80               	xorlw	128
 11507  002FDC  6E12               	movwf	(??_fputc+4)& (0+255),c
 11508  002FDE  50DE               	movf	postinc2,w,c
 11509  002FE0  0A80               	xorlw	128
 11510  002FE2  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 11511  002FE4  B0D8               	btfsc	status,0,c
 11512  002FE6  0012               	return	
 11513  002FE8                     u6940:
 11514  002FE8  EE20 F002          	lfsr	2,2
 11515  002FEC  500C               	movf	fputc@fp,w,c
 11516  002FEE  26D9               	addwf	fsr2l,f,c
 11517  002FF0  500D               	movf	fputc@fp+1,w,c
 11518  002FF2  22DA               	addwfc	fsr2h,f,c
 11519  002FF4  2ADE               	incf	postinc2,f,c
 11520  002FF6  0E00               	movlw	0
 11521  002FF8  22DD               	addwfc	postdec2,f,c
 11522  002FFA  0012               	return		;funcret
 11523  002FFC                     __end_of_fputc:
 11524                           	opt callstack 0
 11525                           
 11526 ;; *************** function _putch *****************
 11527 ;; Defined at:
 11528 ;;		line 102 in file "lcd.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;  data            1    wreg     unsigned char 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  data            1    8[COMRAM] unsigned char 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, status,2, status,0, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;Total ram usage:        1 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:    5
 11549 ;; This function calls:
 11550 ;;		_send_byte
 11551 ;; This function is called by:
 11552 ;;		_fputc
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           	psect	text50
 11557  003720                     __ptext50:
 11558                           	opt callstack 0
 11559  003720                     _putch:
 11560                           	opt callstack 18
 11561                           
 11562                           ;incstack = 0
 11563                           ;putch@data stored from wreg
 11564  003720  6E09               	movwf	putch@data,c
 11565                           
 11566                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 11567  003722  848C               	bsf	3980,2,c	;volatile
 11568                           
 11569                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11570  003724  5009               	movf	putch@data,w,c
 11571  003726  EC87  F01B         	call	_send_byte
 11572  00372A  0012               	return		;funcret
 11573  00372C                     __end_of_putch:
 11574                           	opt callstack 0
 11575                           
 11576 ;; *************** function _atoi *****************
 11577 ;; Defined at:
 11578 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  s               2   12[COMRAM] PTR const unsigned char 
 11581 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
 11582 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
 11583 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
 11584 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
 11585 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(11), 
 11586 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
 11587 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
 11588 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
 11589 ;;		 -> STR_1(7), 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  n               2   25[COMRAM] int 
 11592 ;;  neg             2   18[COMRAM] int 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  2   12[COMRAM] int 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;Total ram usage:       15 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    3
 11609 ;; This function calls:
 11610 ;;		___wmul
 11611 ;;		_isdigit
 11612 ;;		_isspace
 11613 ;; This function is called by:
 11614 ;;		_vfpfcnvrt
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text51
 11619  00288C                     __ptext51:
 11620                           	opt callstack 0
 11621  00288C                     _atoi:
 11622                           	opt callstack 24
 11623                           
 11624                           ;incstack = 0
 11625  00288C  0E00               	movlw	0
 11626  00288E  6E1B               	movwf	atoi@n+1,c
 11627  002890  0E00               	movlw	0
 11628  002892  6E1A               	movwf	atoi@n,c
 11629  002894  0E00               	movlw	0
 11630  002896  6E14               	movwf	atoi@neg+1,c
 11631  002898  0E00               	movlw	0
 11632  00289A  6E13               	movwf	atoi@neg,c
 11633  00289C  D002               	goto	l6858
 11634  00289E                     l6856:
 11635  00289E  4A0D               	infsnz	atoi@s,f,c
 11636  0028A0  2A0E               	incf	atoi@s+1,f,c
 11637  0028A2                     l6858:
 11638  0028A2  0E01               	movlw	1
 11639  0028A4  6E19               	movwf	_atoi$1808,c
 11640  0028A6  C00D  FFF6         	movff	atoi@s,tblptrl
 11641  0028AA  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11642  0028AE                     	if	0	;tblptru may be non-zero
 11643  0028AE                     	endif
 11644  0028AE                     	if	0	;tblptru may be non-zero
 11645  0028AE                     	endif
 11646  0028AE  0008               	tblrd		*
 11647  0028B0  50F5               	movf	tablat,w,c
 11648  0028B2  0A20               	xorlw	32
 11649  0028B4  B4D8               	btfsc	status,2,c
 11650  0028B6  D018               	goto	l6866
 11651  0028B8  0EF7               	movlw	247
 11652  0028BA  6E0F               	movwf	??_atoi& (0+255),c
 11653  0028BC  0EFF               	movlw	255
 11654  0028BE  6E10               	movwf	(??_atoi+1)& (0+255),c
 11655  0028C0  C00D  FFF6         	movff	atoi@s,tblptrl
 11656  0028C4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11657  0028C8                     	if	0	;tblptru may be non-zero
 11658  0028C8                     	endif
 11659  0028C8                     	if	0	;tblptru may be non-zero
 11660  0028C8                     	endif
 11661  0028C8  0008               	tblrd		*
 11662  0028CA  50F5               	movf	tablat,w,c
 11663  0028CC  6E11               	movwf	(??_atoi+2)& (0+255),c
 11664  0028CE  6A12               	clrf	(??_atoi+3)& (0+255),c
 11665  0028D0  500F               	movf	??_atoi,w,c
 11666  0028D2  2611               	addwf	??_atoi+2,f,c
 11667  0028D4  5010               	movf	??_atoi+1,w,c
 11668  0028D6  2212               	addwfc	??_atoi+3,f,c
 11669  0028D8  5012               	movf	??_atoi+3,w,c
 11670  0028DA  E104               	bnz	u7730
 11671  0028DC  0E05               	movlw	5
 11672  0028DE  5C11               	subwf	??_atoi+2,w,c
 11673  0028E0  A0D8               	btfss	status,0,c
 11674  0028E2  D002               	goto	l6866
 11675  0028E4                     u7730:
 11676  0028E4  0E00               	movlw	0
 11677  0028E6  6E19               	movwf	_atoi$1808,c
 11678  0028E8                     l6866:
 11679  0028E8  C019  F015         	movff	_atoi$1808,_atoi$1807
 11680  0028EC  6A16               	clrf	_atoi$1807+1,c
 11681  0028EE  5015               	movf	_atoi$1807,w,c
 11682  0028F0  1016               	iorwf	_atoi$1807+1,w,c
 11683  0028F2  B4D8               	btfsc	status,2,c
 11684  0028F4  D008               	goto	l6876
 11685  0028F6  D7D3               	goto	l6856
 11686  0028F8                     l6872:
 11687  0028F8  0E00               	movlw	0
 11688  0028FA  6E14               	movwf	atoi@neg+1,c
 11689  0028FC  0E01               	movlw	1
 11690  0028FE  6E13               	movwf	atoi@neg,c
 11691  002900                     l6874:
 11692  002900  4A0D               	infsnz	atoi@s,f,c
 11693  002902  2A0E               	incf	atoi@s+1,f,c
 11694  002904  D02E               	goto	l6882
 11695  002906                     l6876:
 11696  002906  C00D  FFF6         	movff	atoi@s,tblptrl
 11697  00290A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11698  00290E                     	if	0	;tblptru may be non-zero
 11699  00290E                     	endif
 11700  00290E                     	if	0	;tblptru may be non-zero
 11701  00290E                     	endif
 11702  00290E  0008               	tblrd		*
 11703  002910  50F5               	movf	tablat,w,c
 11704  002912  6E0F               	movwf	??_atoi& (0+255),c
 11705  002914  6A10               	clrf	(??_atoi+1)& (0+255),c
 11706                           
 11707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11708                           ; Switch size 1, requested type "simple"
 11709                           ; Number of cases is 1, Range of values is 0 to 0
 11710                           ; switch strategies available:
 11711                           ; Name         Instructions Cycles
 11712                           ; simple_byte            4     3 (average)
 11713                           ;	Chosen strategy is simple_byte
 11714  002916  5010               	movf	??_atoi+1,w,c
 11715  002918  0A00               	xorlw	0	; case 0
 11716  00291A  A4D8               	btfss	status,2,c
 11717  00291C  D022               	goto	l6882
 11718                           
 11719                           ; Switch size 1, requested type "simple"
 11720                           ; Number of cases is 2, Range of values is 43 to 45
 11721                           ; switch strategies available:
 11722                           ; Name         Instructions Cycles
 11723                           ; simple_byte            7     4 (average)
 11724                           ;	Chosen strategy is simple_byte
 11725  00291E  500F               	movf	??_atoi,w,c
 11726  002920  0A2B               	xorlw	43	; case 43
 11727  002922  B4D8               	btfsc	status,2,c
 11728  002924  D7ED               	goto	l6874
 11729  002926  0A06               	xorlw	6	; case 45
 11730  002928  B4D8               	btfsc	status,2,c
 11731  00292A  D7E6               	goto	l6872
 11732  00292C  D01A               	goto	l6882
 11733  00292E                     l6878:
 11734  00292E  C01A  F006         	movff	atoi@n,___wmul@multiplier
 11735  002932  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 11736  002936  0E00               	movlw	0
 11737  002938  6E09               	movwf	___wmul@multiplicand+1,c
 11738  00293A  0E0A               	movlw	10
 11739  00293C  6E08               	movwf	___wmul@multiplicand,c
 11740  00293E  EC22  F01B         	call	___wmul	;wreg free
 11741  002942  C00D  FFF6         	movff	atoi@s,tblptrl
 11742  002946  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11743  00294A                     	if	0	;tblptru may be non-zero
 11744  00294A                     	endif
 11745  00294A                     	if	0	;tblptru may be non-zero
 11746  00294A                     	endif
 11747  00294A  0008               	tblrd		*
 11748  00294C  50F5               	movf	tablat,w,c
 11749  00294E  5E06               	subwf	?___wmul,f,c
 11750  002950  0E00               	movlw	0
 11751  002952  5A07               	subwfb	?___wmul+1,f,c
 11752  002954  0E30               	movlw	48
 11753  002956  2406               	addwf	?___wmul,w,c
 11754  002958  6E1A               	movwf	atoi@n,c
 11755  00295A  0E00               	movlw	0
 11756  00295C  2007               	addwfc	?___wmul+1,w,c
 11757  00295E  6E1B               	movwf	atoi@n+1,c
 11758  002960  D7CF               	goto	l6874
 11759  002962                     l6882:
 11760  002962  0ED0               	movlw	208
 11761  002964  6E0F               	movwf	??_atoi& (0+255),c
 11762  002966  0EFF               	movlw	255
 11763  002968  6E10               	movwf	(??_atoi+1)& (0+255),c
 11764  00296A  C00D  FFF6         	movff	atoi@s,tblptrl
 11765  00296E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11766  002972                     	if	0	;tblptru may be non-zero
 11767  002972                     	endif
 11768  002972                     	if	0	;tblptru may be non-zero
 11769  002972                     	endif
 11770  002972  0008               	tblrd		*
 11771  002974  50F5               	movf	tablat,w,c
 11772  002976  6E11               	movwf	(??_atoi+2)& (0+255),c
 11773  002978  6A12               	clrf	(??_atoi+3)& (0+255),c
 11774  00297A  500F               	movf	??_atoi,w,c
 11775  00297C  2611               	addwf	??_atoi+2,f,c
 11776  00297E  5010               	movf	??_atoi+1,w,c
 11777  002980  2212               	addwfc	??_atoi+3,f,c
 11778  002982  5012               	movf	??_atoi+3,w,c
 11779  002984  E106               	bnz	u7750
 11780  002986  0E0A               	movlw	10
 11781  002988  5C11               	subwf	??_atoi+2,w,c
 11782  00298A  B0D8               	btfsc	status,0,c
 11783  00298C  D002               	goto	u7750
 11784  00298E  0E01               	movlw	1
 11785  002990  D001               	goto	u7760
 11786  002992                     u7750:
 11787  002992  0E00               	movlw	0
 11788  002994                     u7760:
 11789  002994  6E17               	movwf	_atoi$1809,c
 11790  002996  6A18               	clrf	_atoi$1809+1,c
 11791  002998  5017               	movf	_atoi$1809,w,c
 11792  00299A  1018               	iorwf	_atoi$1809+1,w,c
 11793  00299C  A4D8               	btfss	status,2,c
 11794  00299E  D7C7               	goto	l6878
 11795  0029A0  5013               	movf	atoi@neg,w,c
 11796  0029A2  1014               	iorwf	atoi@neg+1,w,c
 11797  0029A4  A4D8               	btfss	status,2,c
 11798  0029A6  D00D               	goto	l1397
 11799  0029A8  C01A  F00F         	movff	atoi@n,??_atoi
 11800  0029AC  C01B  F010         	movff	atoi@n+1,??_atoi+1
 11801  0029B0  1E0F               	comf	??_atoi,f,c
 11802  0029B2  1E10               	comf	??_atoi+1,f,c
 11803  0029B4  4A0F               	infsnz	??_atoi,f,c
 11804  0029B6  2A10               	incf	??_atoi+1,f,c
 11805  0029B8  C00F  F00D         	movff	??_atoi,?_atoi
 11806  0029BC  C010  F00E         	movff	??_atoi+1,?_atoi+1
 11807  0029C0  0012               	return	
 11808  0029C2                     l1397:
 11809  0029C2  C01A  F00D         	movff	atoi@n,?_atoi
 11810  0029C6  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 11811  0029CA  0012               	return		;funcret
 11812  0029CC                     __end_of_atoi:
 11813                           	opt callstack 0
 11814                           
 11815 ;; *************** function _isspace *****************
 11816 ;; Defined at:
 11817 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;  c               2    5[COMRAM] int 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  2    5[COMRAM] int 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;Total ram usage:        7 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:    2
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_atoi
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text52
 11846  0033F4                     __ptext52:
 11847                           	opt callstack 0
 11848  0033F4                     _isspace:
 11849                           	opt callstack 24
 11850                           
 11851                           ;incstack = 0
 11852  0033F4  0E01               	movlw	1
 11853  0033F6  6E0C               	movwf	_isspace$1834,c
 11854  0033F8  0E20               	movlw	32
 11855  0033FA  1806               	xorwf	isspace@c,w,c
 11856  0033FC  1007               	iorwf	isspace@c+1,w,c
 11857  0033FE  B4D8               	btfsc	status,2,c
 11858  003400  D014               	goto	l6666
 11859  003402  0EF7               	movlw	247
 11860  003404  6E08               	movwf	??_isspace& (0+255),c
 11861  003406  0EFF               	movlw	255
 11862  003408  6E09               	movwf	(??_isspace+1)& (0+255),c
 11863  00340A  C006  F00A         	movff	isspace@c,??_isspace+2
 11864  00340E  C007  F00B         	movff	isspace@c+1,??_isspace+3
 11865  003412  5008               	movf	??_isspace,w,c
 11866  003414  260A               	addwf	??_isspace+2,f,c
 11867  003416  5009               	movf	??_isspace+1,w,c
 11868  003418  220B               	addwfc	??_isspace+3,f,c
 11869  00341A  500B               	movf	??_isspace+3,w,c
 11870  00341C  E104               	bnz	u7280
 11871  00341E  0E05               	movlw	5
 11872  003420  5C0A               	subwf	??_isspace+2,w,c
 11873  003422  A0D8               	btfss	status,0,c
 11874  003424  D002               	goto	l6666
 11875  003426                     u7280:
 11876  003426  0E00               	movlw	0
 11877  003428  6E0C               	movwf	_isspace$1834,c
 11878  00342A                     l6666:
 11879  00342A  C00C  F006         	movff	_isspace$1834,?_isspace
 11880  00342E  6A07               	clrf	?_isspace+1,c
 11881  003430  0012               	return		;funcret
 11882  003432                     __end_of_isspace:
 11883                           	opt callstack 0
 11884                           
 11885 ;; *************** function _isdigit *****************
 11886 ;; Defined at:
 11887 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  c               2    5[COMRAM] int 
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  2    5[COMRAM] int 
 11894 ;; Registers used:
 11895 ;;		wreg, status,2, status,0
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11904 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;Total ram usage:        6 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    2
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_vfpfcnvrt
 11912 ;;		_atoi
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text53
 11917  00356E                     __ptext53:
 11918                           	opt callstack 0
 11919  00356E                     _isdigit:
 11920                           	opt callstack 25
 11921                           
 11922                           ;incstack = 0
 11923  00356E  0ED0               	movlw	208
 11924  003570  6E08               	movwf	??_isdigit& (0+255),c
 11925  003572  0EFF               	movlw	255
 11926  003574  6E09               	movwf	(??_isdigit+1)& (0+255),c
 11927  003576  C006  F00A         	movff	isdigit@c,??_isdigit+2
 11928  00357A  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 11929  00357E  5008               	movf	??_isdigit,w,c
 11930  003580  260A               	addwf	??_isdigit+2,f,c
 11931  003582  5009               	movf	??_isdigit+1,w,c
 11932  003584  220B               	addwfc	??_isdigit+3,f,c
 11933  003586  500B               	movf	??_isdigit+3,w,c
 11934  003588  E106               	bnz	u7120
 11935  00358A  0E0A               	movlw	10
 11936  00358C  5C0A               	subwf	??_isdigit+2,w,c
 11937  00358E  B0D8               	btfsc	status,0,c
 11938  003590  D002               	goto	u7120
 11939  003592  0E01               	movlw	1
 11940  003594  D001               	goto	u7130
 11941  003596                     u7120:
 11942  003596  0E00               	movlw	0
 11943  003598                     u7130:
 11944  003598  6E06               	movwf	?_isdigit,c
 11945  00359A  6A07               	clrf	?_isdigit+1,c
 11946  00359C  0012               	return		;funcret
 11947  00359E                     __end_of_isdigit:
 11948                           	opt callstack 0
 11949                           
 11950 ;; *************** function ___wmul *****************
 11951 ;; Defined at:
 11952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;  multiplier      2    5[COMRAM] unsigned int 
 11955 ;;  multiplicand    2    7[COMRAM] unsigned int 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  product         2    9[COMRAM] unsigned int 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  2    5[COMRAM] unsigned int 
 11960 ;; Registers used:
 11961 ;;		wreg, status,2, status,0, prodl, prodh
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;Total ram usage:        6 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    2
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_doDisplayLog
 11978 ;;		_atoi
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text54
 11983  003644                     __ptext54:
 11984                           	opt callstack 0
 11985  003644                     ___wmul:
 11986                           	opt callstack 24
 11987                           
 11988                           ;incstack = 0
 11989  003644  5006               	movf	___wmul@multiplier,w,c
 11990  003646  0208               	mulwf	___wmul@multiplicand,c
 11991  003648  CFF3 F00A          	movff	prodl,___wmul@product
 11992  00364C  CFF4 F00B          	movff	prodh,___wmul@product+1
 11993  003650  5006               	movf	___wmul@multiplier,w,c
 11994  003652  0209               	mulwf	___wmul@multiplicand+1,c
 11995  003654  50F3               	movf	prodl,w,c
 11996  003656  260B               	addwf	___wmul@product+1,f,c
 11997  003658  5007               	movf	___wmul@multiplier+1,w,c
 11998  00365A  0208               	mulwf	___wmul@multiplicand,c
 11999  00365C  50F3               	movf	prodl,w,c
 12000  00365E  260B               	addwf	___wmul@product+1,f,c
 12001  003660  C00A  F006         	movff	___wmul@product,?___wmul
 12002  003664  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 12003  003668  0012               	return		;funcret
 12004  00366A                     __end_of___wmul:
 12005                           	opt callstack 0
 12006                           
 12007 ;; *************** function _lcdInst *****************
 12008 ;; Defined at:
 12009 ;;		line 64 in file "lcd.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  data            1    wreg     unsigned char 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;  data            1    8[COMRAM] unsigned char 
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      void 
 12016 ;; Registers used:
 12017 ;;		wreg, status,2, status,0, cstack
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;Total ram usage:        1 bytes
 12028 ;; Hardware stack levels used:    1
 12029 ;; Hardware stack levels required when called:    5
 12030 ;; This function calls:
 12031 ;;		_send_byte
 12032 ;; This function is called by:
 12033 ;;		_doDisplayLog
 12034 ;;		_doOperation
 12035 ;;		_main
 12036 ;;		_initLCD
 12037 ;;		_mainEEPROM
 12038 ;;		_lcd_shift_cursor
 12039 ;;		_lcd_shift_display
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text55
 12044  00372C                     __ptext55:
 12045                           	opt callstack 0
 12046  00372C                     _lcdInst:
 12047                           	opt callstack 23
 12048                           
 12049                           ;incstack = 0
 12050                           ;lcdInst@data stored from wreg
 12051  00372C  6E09               	movwf	lcdInst@data,c
 12052                           
 12053                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12054  00372E  948C               	bcf	3980,2,c	;volatile
 12055                           
 12056                           ;lcd.c: 66:     send_byte(data);
 12057  003730  5009               	movf	lcdInst@data,w,c
 12058  003732  EC87  F01B         	call	_send_byte
 12059  003736  0012               	return		;funcret
 12060  003738                     __end_of_lcdInst:
 12061                           	opt callstack 0
 12062                           
 12063 ;; *************** function _send_byte *****************
 12064 ;; Defined at:
 12065 ;;		line 55 in file "lcd.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;  data            1    wreg     unsigned char 
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;  data            1    7[COMRAM] unsigned char 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, status,2, status,0, cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12083 ;;Total ram usage:        1 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    4
 12086 ;; This function calls:
 12087 ;;		_send_nibble
 12088 ;; This function is called by:
 12089 ;;		_lcdInst
 12090 ;;		_initLCD
 12091 ;;		_putch
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text56
 12096  00370E                     __ptext56:
 12097                           	opt callstack 0
 12098  00370E                     _send_byte:
 12099                           	opt callstack 24
 12100                           
 12101                           ;incstack = 0
 12102                           ;send_byte@data stored from wreg
 12103  00370E  6E08               	movwf	send_byte@data,c
 12104                           
 12105                           ;lcd.c: 57:     send_nibble(data >> 4);
 12106  003710  3808               	swapf	send_byte@data,w,c
 12107  003712  0B0F               	andlw	15
 12108  003714  EC73  F01B         	call	_send_nibble
 12109                           
 12110                           ;lcd.c: 60:     send_nibble(data);
 12111  003718  5008               	movf	send_byte@data,w,c
 12112  00371A  EC73  F01B         	call	_send_nibble
 12113  00371E  0012               	return		;funcret
 12114  003720                     __end_of_send_byte:
 12115                           	opt callstack 0
 12116                           
 12117 ;; *************** function _send_nibble *****************
 12118 ;; Defined at:
 12119 ;;		line 44 in file "lcd.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;  data            1    wreg     unsigned char 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  data            1    6[COMRAM] unsigned char 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, status,2, status,0, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;Total ram usage:        1 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    3
 12140 ;; This function calls:
 12141 ;;		_pulse_e
 12142 ;; This function is called by:
 12143 ;;		_send_byte
 12144 ;;		_initLCD
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text57
 12149  0036E6                     __ptext57:
 12150                           	opt callstack 0
 12151  0036E6                     _send_nibble:
 12152                           	opt callstack 25
 12153                           
 12154                           ;incstack = 0
 12155                           ;send_nibble@data stored from wreg
 12156  0036E6  6E07               	movwf	send_nibble@data,c
 12157                           
 12158                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12159  0036E8  508C               	movf	3980,w,c	;volatile
 12160  0036EA  0B0F               	andlw	15
 12161  0036EC  6E8C               	movwf	3980,c	;volatile
 12162                           
 12163                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12164  0036EE  3807               	swapf	send_nibble@data,w,c
 12165  0036F0  0BF0               	andlw	240
 12166  0036F2  108C               	iorwf	3980,w,c	;volatile
 12167  0036F4  6E8C               	movwf	3980,c	;volatile
 12168                           
 12169                           ;lcd.c: 48:     pulse_e();
 12170  0036F6  ECE5  F01A         	call	_pulse_e	;wreg free
 12171  0036FA  0012               	return		;funcret
 12172  0036FC                     __end_of_send_nibble:
 12173                           	opt callstack 0
 12174                           
 12175 ;; *************** function _pulse_e *****************
 12176 ;; Defined at:
 12177 ;;		line 28 in file "lcd.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  interruptSta    1    5[COMRAM] unsigned char 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;Total ram usage:        1 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:    2
 12198 ;; This function calls:
 12199 ;;		Nothing
 12200 ;; This function is called by:
 12201 ;;		_send_nibble
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text58
 12206  0035CA                     __ptext58:
 12207                           	opt callstack 0
 12208  0035CA                     _pulse_e:
 12209                           	opt callstack 25
 12210                           
 12211                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12212                           
 12213                           ;incstack = 0
 12214  0035CA  0E00               	movlw	0
 12215  0035CC  BEF2               	btfsc	4082,7,c	;volatile
 12216  0035CE  0E01               	movlw	1
 12217  0035D0  6E06               	movwf	pulse_e@interruptState,c
 12218                           
 12219                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12220  0035D2  9EF2               	bcf	4082,7,c	;volatile
 12221                           
 12222                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12223  0035D4  868C               	bsf	3980,3,c	;volatile
 12224                           
 12225                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12226  0035D6  0E14               	movlw	20
 12227  0035D8                     u10227:
 12228  0035D8  2EE8               	decfsz	wreg,f,c
 12229  0035DA  D7FE               	bra	u10227
 12230  0035DC  D000               	nop2	
 12231                           
 12232                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12233  0035DE  968C               	bcf	3980,3,c	;volatile
 12234                           
 12235                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12236  0035E0  0E53               	movlw	83
 12237  0035E2                     u10237:
 12238  0035E2  2EE8               	decfsz	wreg,f,c
 12239  0035E4  D7FE               	bra	u10237
 12240  0035E6  F000               	nop	
 12241                           
 12242                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12243  0035E8  B006               	btfsc	pulse_e@interruptState,0,c
 12244  0035EA  D002               	bra	u6905
 12245  0035EC  9EF2               	bcf	4082,7,c	;volatile
 12246  0035EE  D001               	bra	u6906
 12247  0035F0                     u6905:
 12248  0035F0  8EF2               	bsf	4082,7,c	;volatile
 12249  0035F2                     u6906:
 12250  0035F2  0012               	return		;funcret
 12251  0035F4                     __end_of_pulse_e:
 12252                           	opt callstack 0
 12253                           
 12254 ;; *************** function ___llmod *****************
 12255 ;; Defined at:
 12256 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;  dividend        4    5[COMRAM] unsigned long 
 12259 ;;  divisor         4    9[COMRAM] unsigned long 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;  counter         1   13[COMRAM] unsigned char 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  4    5[COMRAM] unsigned long 
 12264 ;; Registers used:
 12265 ;;		wreg, status,2, status,0
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;Total ram usage:        9 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    2
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_main
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text59
 12286  003066                     __ptext59:
 12287                           	opt callstack 0
 12288  003066                     ___llmod:
 12289                           	opt callstack 28
 12290                           
 12291                           ;incstack = 0
 12292  003066  500A               	movf	___llmod@divisor,w,c
 12293  003068  100B               	iorwf	___llmod@divisor+1,w,c
 12294  00306A  100C               	iorwf	___llmod@divisor+2,w,c
 12295  00306C  100D               	iorwf	___llmod@divisor+3,w,c
 12296  00306E  B4D8               	btfsc	status,2,c
 12297  003070  D024               	goto	l1111
 12298  003072  0E01               	movlw	1
 12299  003074  6E0E               	movwf	___llmod@counter,c
 12300  003076  D006               	goto	l8390
 12301  003078                     l8388:
 12302  003078  90D8               	bcf	status,0,c
 12303  00307A  360A               	rlcf	___llmod@divisor,f,c
 12304  00307C  360B               	rlcf	___llmod@divisor+1,f,c
 12305  00307E  360C               	rlcf	___llmod@divisor+2,f,c
 12306  003080  360D               	rlcf	___llmod@divisor+3,f,c
 12307  003082  2A0E               	incf	___llmod@counter,f,c
 12308  003084                     l8390:
 12309  003084  AE0D               	btfss	___llmod@divisor+3,7,c
 12310  003086  D7F8               	goto	l8388
 12311  003088                     u9810:
 12312  003088  500A               	movf	___llmod@divisor,w,c
 12313  00308A  5C06               	subwf	___llmod@dividend,w,c
 12314  00308C  500B               	movf	___llmod@divisor+1,w,c
 12315  00308E  5807               	subwfb	___llmod@dividend+1,w,c
 12316  003090  500C               	movf	___llmod@divisor+2,w,c
 12317  003092  5808               	subwfb	___llmod@dividend+2,w,c
 12318  003094  500D               	movf	___llmod@divisor+3,w,c
 12319  003096  5809               	subwfb	___llmod@dividend+3,w,c
 12320  003098  A0D8               	btfss	status,0,c
 12321  00309A  D008               	goto	l8396
 12322  00309C  500A               	movf	___llmod@divisor,w,c
 12323  00309E  5E06               	subwf	___llmod@dividend,f,c
 12324  0030A0  500B               	movf	___llmod@divisor+1,w,c
 12325  0030A2  5A07               	subwfb	___llmod@dividend+1,f,c
 12326  0030A4  500C               	movf	___llmod@divisor+2,w,c
 12327  0030A6  5A08               	subwfb	___llmod@dividend+2,f,c
 12328  0030A8  500D               	movf	___llmod@divisor+3,w,c
 12329  0030AA  5A09               	subwfb	___llmod@dividend+3,f,c
 12330  0030AC                     l8396:
 12331  0030AC  90D8               	bcf	status,0,c
 12332  0030AE  320D               	rrcf	___llmod@divisor+3,f,c
 12333  0030B0  320C               	rrcf	___llmod@divisor+2,f,c
 12334  0030B2  320B               	rrcf	___llmod@divisor+1,f,c
 12335  0030B4  320A               	rrcf	___llmod@divisor,f,c
 12336  0030B6  2E0E               	decfsz	___llmod@counter,f,c
 12337  0030B8  D7E7               	goto	u9810
 12338  0030BA                     l1111:
 12339  0030BA  C006  F006         	movff	___llmod@dividend,?___llmod
 12340  0030BE  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 12341  0030C2  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 12342  0030C6  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 12343  0030CA  0012               	return		;funcret
 12344  0030CC                     __end_of___llmod:
 12345                           	opt callstack 0
 12346                           
 12347 ;; *************** function _interruptHandler *****************
 12348 ;; Defined at:
 12349 ;;		line 1101 in file "main.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;		None
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;		None
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      void 
 12356 ;; Registers used:
 12357 ;;		wreg, status,2, status,0, cstack
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;Total ram usage:        0 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:    1
 12370 ;; This function calls:
 12371 ;;		_updateMotorAEncoder
 12372 ;;		_updateMotorBEncoder
 12373 ;; This function is called by:
 12374 ;;		Interrupt level 2
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	intcode
 12379  000008                     __pintcode:
 12380                           	opt callstack 0
 12381  000008                     _interruptHandler:
 12382                           	opt callstack 17
 12383                           
 12384                           ;incstack = 0
 12385  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12386  00000A  ED19  F01A         	call	int_func,f	;refresh shadow registers
 12387                           
 12388                           	psect	intcode_body
 12389  003432                     __pintcode_body:
 12390                           	opt callstack 17
 12391  003432                     int_func:
 12392                           	opt callstack 17
 12393  003432  0006               	pop		; remove dummy address from shadow register refresh
 12394                           
 12395                           ;main.c: 1103:     if(INT1IF){
 12396  003434  A0F0               	btfss	4080,0,c	;volatile
 12397  003436  D005               	goto	i2l421
 12398                           
 12399                           ;main.c: 1106:         keyPressed = 1;
 12400  003438  0E01               	movlw	1
 12401  00343A  0100               	movlb	0	; () banked
 12402  00343C  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;main.c: 1107:         INT1IF = 0;
 12406  00343E  90F0               	bcf	4080,0,c	;volatile
 12407                           
 12408                           ;main.c: 1108:     } else if (TMR0IF) {
 12409  003440  D015               	goto	i2l424
 12410  003442                     i2l421:
 12411  003442  A4F2               	btfss	4082,2,c	;volatile
 12412  003444  D008               	goto	i2l423
 12413                           
 12414                           ;main.c: 1109:     INTCONbits.TMR0IF = 0;
 12415  003446  94F2               	bcf	4082,2,c	;volatile
 12416                           
 12417                           ;main.c: 1110:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 12418  003448  0EFB               	movlw	251
 12419  00344A  6ED7               	movwf	4055,c	;volatile
 12420                           
 12421                           ;main.c: 1111:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 12422  00344C  0E1E               	movlw	30
 12423  00344E  6ED6               	movwf	4054,c	;volatile
 12424                           
 12425                           ;main.c: 1112:     millisecondsMeasured++;
 12426  003450  4A77               	infsnz	_millisecondsMeasured,f,c	;volatile
 12427  003452  2A78               	incf	_millisecondsMeasured+1,f,c	;volatile
 12428                           
 12429                           ;main.c: 1113:    } else if (INT2IF){
 12430  003454  D00B               	goto	i2l424
 12431  003456                     i2l423:
 12432  003456  A2F0               	btfss	4080,1,c	;volatile
 12433  003458  D004               	goto	i2l425
 12434                           
 12435                           ;main.c: 1114:        INT2IF = 0;
 12436  00345A  92F0               	bcf	4080,1,c	;volatile
 12437                           
 12438                           ;main.c: 1115:        updateMotorBEncoder();
 12439  00345C  EC77  F019         	call	_updateMotorBEncoder	;wreg free
 12440                           
 12441                           ;main.c: 1116:    } else if (INT0IF){
 12442  003460  D005               	goto	i2l424
 12443  003462                     i2l425:
 12444  003462  A2F2               	btfss	4082,1,c	;volatile
 12445  003464  D003               	goto	i2l424
 12446                           
 12447                           ;main.c: 1117:        INT0IF = 0;
 12448  003466  92F2               	bcf	4082,1,c	;volatile
 12449                           
 12450                           ;main.c: 1118:        updateMotorAEncoder();
 12451  003468  EC99  F019         	call	_updateMotorAEncoder	;wreg free
 12452  00346C                     i2l424:
 12453  00346C  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12454  00346E  0011               	retfie		f
 12455  003470                     __end_of_interruptHandler:
 12456                           	opt callstack 0
 12457                           
 12458 ;; *************** function _updateMotorBEncoder *****************
 12459 ;; Defined at:
 12460 ;;		line 146 in file "main.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;		None
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;  directionPin    2    3[COMRAM] int 
 12465 ;;  interruptPin    2    1[COMRAM] int 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      void 
 12468 ;; Registers used:
 12469 ;;		wreg, status,2, status,0
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;Total ram usage:        5 bytes
 12480 ;; Hardware stack levels used:    1
 12481 ;; This function calls:
 12482 ;;		Nothing
 12483 ;; This function is called by:
 12484 ;;		_interruptHandler
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text61
 12489  0032EE                     __ptext61:
 12490                           	opt callstack 0
 12491  0032EE                     _updateMotorBEncoder:
 12492                           	opt callstack 17
 12493                           
 12494                           ;main.c: 147:   int interruptPinState = PORTBbits.RB2;
 12495                           
 12496                           ;incstack = 0
 12497  0032EE  A481               	btfss	3969,2,c	;volatile
 12498  0032F0  D003               	goto	i2u619_40
 12499  0032F2  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12500  0032F4  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 12501  0032F6  D001               	goto	i2u619_48
 12502  0032F8                     i2u619_40:
 12503  0032F8  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12504  0032FA                     i2u619_48:
 12505  0032FA  5001               	movf	??_updateMotorBEncoder,w,c
 12506  0032FC  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 12507  0032FE  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 12508                           
 12509                           ;main.c: 148:   int directionPin = PORTCbits.RC0;
 12510  003300  A082               	btfss	3970,0,c	;volatile
 12511  003302  D003               	goto	i2u620_40
 12512  003304  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12513  003306  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 12514  003308  D001               	goto	i2u620_48
 12515  00330A                     i2u620_40:
 12516  00330A  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12517  00330C                     i2u620_48:
 12518  00330C  5001               	movf	??_updateMotorBEncoder,w,c
 12519  00330E  6E04               	movwf	updateMotorBEncoder@directionPin,c
 12520  003310  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 12521                           
 12522                           ;main.c: 149:   if(directionPin == interruptPinState){
 12523  003312  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 12524  003314  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 12525  003316  E108               	bnz	i2l5668
 12526  003318  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 12527  00331A  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 12528  00331C  A4D8               	btfss	status,2,c
 12529  00331E  D004               	goto	i2l5668
 12530                           
 12531                           ;main.c: 150:     motorBDistance++;
 12532  003320  0100               	movlb	0	; () banked
 12533  003322  4BE0               	infsnz	_motorBDistance& (0+255),f,b	;volatile
 12534  003324  2BE1               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
 12535                           
 12536                           ;main.c: 151:   } else {
 12537  003326  0012               	return	
 12538  003328                     i2l5668:
 12539                           
 12540                           ;main.c: 152:     motorBDistance--;
 12541  003328  0100               	movlb	0	; () banked
 12542  00332A  07E0               	decf	_motorBDistance& (0+255),f,b	;volatile
 12543  00332C  A0D8               	btfss	status,0,c
 12544  00332E  07E1               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
 12545                           
 12546                           ; BSR set to: 0
 12547  003330  0012               	return		;funcret
 12548  003332                     __end_of_updateMotorBEncoder:
 12549                           	opt callstack 0
 12550                           
 12551 ;; *************** function _updateMotorAEncoder *****************
 12552 ;; Defined at:
 12553 ;;		line 177 in file "main.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;		None
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;  directionPin    2    3[COMRAM] int 
 12558 ;;  interruptPin    2    1[COMRAM] int 
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1    wreg      void 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0
 12563 ;; Tracked objects:
 12564 ;;		On entry : 0/0
 12565 ;;		On exit  : 0/0
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12572 ;;Total ram usage:        5 bytes
 12573 ;; Hardware stack levels used:    1
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_interruptHandler
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text62
 12582  003332                     __ptext62:
 12583                           	opt callstack 0
 12584  003332                     _updateMotorAEncoder:
 12585                           	opt callstack 17
 12586                           
 12587                           ;main.c: 178:   int interruptPinState = PORTBbits.RB0;
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;incstack = 0
 12591  003332  A081               	btfss	3969,0,c	;volatile
 12592  003334  D003               	goto	i2u622_40
 12593  003336  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12594  003338  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12595  00333A  D001               	goto	i2u622_48
 12596  00333C                     i2u622_40:
 12597  00333C  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12598  00333E                     i2u622_48:
 12599  00333E  5001               	movf	??_updateMotorAEncoder,w,c
 12600  003340  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 12601  003342  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 12602                           
 12603                           ;main.c: 179:   int directionPin = PORTEbits.RE1;
 12604  003344  A284               	btfss	3972,1,c	;volatile
 12605  003346  D003               	goto	i2u623_40
 12606  003348  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12607  00334A  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12608  00334C  D001               	goto	i2u623_48
 12609  00334E                     i2u623_40:
 12610  00334E  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12611  003350                     i2u623_48:
 12612  003350  5001               	movf	??_updateMotorAEncoder,w,c
 12613  003352  6E04               	movwf	updateMotorAEncoder@directionPin,c
 12614  003354  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 12615                           
 12616                           ;main.c: 180:   if(directionPin == interruptPinState){
 12617  003356  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 12618  003358  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 12619  00335A  E109               	bnz	i2l5676
 12620  00335C  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 12621  00335E  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 12622  003360  A4D8               	btfss	status,2,c
 12623  003362  D005               	goto	i2l5676
 12624                           
 12625                           ;main.c: 181:     motorADistance--;
 12626  003364  0100               	movlb	0	; () banked
 12627  003366  07E2               	decf	_motorADistance& (0+255),f,b	;volatile
 12628  003368  A0D8               	btfss	status,0,c
 12629  00336A  07E3               	decf	(_motorADistance+1)& (0+255),f,b	;volatile
 12630                           
 12631                           ;main.c: 182:   } else {
 12632  00336C  0012               	return	
 12633  00336E                     i2l5676:
 12634                           
 12635                           ;main.c: 183:     motorADistance++;
 12636  00336E  0100               	movlb	0	; () banked
 12637  003370  4BE2               	infsnz	_motorADistance& (0+255),f,b	;volatile
 12638  003372  2BE3               	incf	(_motorADistance+1)& (0+255),f,b	;volatile
 12639                           
 12640                           ; BSR set to: 0
 12641  003374  0012               	return		;funcret
 12642  003376                     __end_of_updateMotorAEncoder:
 12643                           	opt callstack 0
 12644                           
 12645                           	psect	rparam
 12646  0000                     
 12647                           	psect	temp
 12648  00007A                     btemp:
 12649                           	opt callstack 0
 12650  00007A                     	ds	1
 12651  0000                     int$flags	set	btemp
 12652  0000                     wtemp8	set	btemp+1
 12653  0000                     ttemp5	set	btemp+1
 12654  0000                     ttemp6	set	btemp+4
 12655  0000                     ttemp7	set	btemp+8
 12656                           tosu	equ	0xFFF
 12657                           tosh	equ	0xFFE
 12658                           tosl	equ	0xFFD
 12659                           stkptr	equ	0xFFC
 12660                           pclatu	equ	0xFFB
 12661                           pclath	equ	0xFFA
 12662                           pcl	equ	0xFF9
 12663                           tblptru	equ	0xFF8
 12664                           tblptrh	equ	0xFF7
 12665                           tblptrl	equ	0xFF6
 12666                           tablat	equ	0xFF5
 12667                           prodh	equ	0xFF4
 12668                           prodl	equ	0xFF3
 12669                           indf0	equ	0xFEF
 12670                           postinc0	equ	0xFEE
 12671                           postdec0	equ	0xFED
 12672                           preinc0	equ	0xFEC
 12673                           plusw0	equ	0xFEB
 12674                           fsr0h	equ	0xFEA
 12675                           fsr0l	equ	0xFE9
 12676                           wreg	equ	0xFE8
 12677                           indf1	equ	0xFE7
 12678                           postinc1	equ	0xFE6
 12679                           postdec1	equ	0xFE5
 12680                           preinc1	equ	0xFE4
 12681                           plusw1	equ	0xFE3
 12682                           fsr1h	equ	0xFE2
 12683                           fsr1l	equ	0xFE1
 12684                           bsr	equ	0xFE0
 12685                           indf2	equ	0xFDF
 12686                           postinc2	equ	0xFDE
 12687                           postdec2	equ	0xFDD
 12688                           preinc2	equ	0xFDC
 12689                           plusw2	equ	0xFDB
 12690                           fsr2h	equ	0xFDA
 12691                           fsr2l	equ	0xFD9
 12692                           status	equ	0xFD8


Data Sizes:
    Strings     378
    Constant    35
    Data        9
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128     86     113
    BANK1           256     16      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1847_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_51(CODE[16]), STR_49(CODE[14]), 
		 -> STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), 
		 -> STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), 
		 -> STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_tirePositioning
    _tirePositioning->_setMotorSpeeds
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_errorCorrectedMove
    _tirePositioning->_setMotorSpeeds
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  186712
                                             84 BANK0      2     2      0
                                              0 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     892
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0     130
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         56    56      0  113305
                                             32 BANK0     52    52      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                             _printf
              _requestIsTireDropDone
         _sendArduinoTireDropRequest
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     23    21      2   20034
                                            113 COMRAM     3     3      0
                                              8 BANK0     20    18      2
                            ___awdiv
                                _abs
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                              9     5      4     456
                                              5 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0     965
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1030
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     931
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _errorCorrectedMove                                  24    10     14   37287
                                              8 BANK0     24    10     14
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   17692
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   11174
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    2006
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2543
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4727
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3982
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   36390
                                             14 BANK0     13    11      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33564
                                              0 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30489
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   29926
                                             75 COMRAM    33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7287
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7703
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     363
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5536
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5257
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2895
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1792
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___awdiv
       _abs
         ___aomod (ARG)
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     14A      37        8.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      30       7       18.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     56      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      34        0.0%
DATA                 0      0     264       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 24 18:00:30 2019

                          ___fldiv@aexp 0045                            ___fldiv@bexp 0044  
                          ___fldiv@sign 003D                             __CFG_CPD$ON 000000  
                          ___awdiv@sign 000B                     ___wmul@multiplicand 0008  
                           __CFG_BORV$3 000000          doOperation@motorBStartDistance 00BE  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                           __CFG_OSC$HS 000000                                     l252 2C86  
                                   l254 2C96                                     l263 173C  
                                   l264 1750                                     l265 1760  
                                   l603 27B2                                     l622 20B2  
                                   l624 20BA                                     l556 2D3E  
                                   l574 1EC4                                     l718 2E9A  
                                   l398 088A                                     l576 1ECC  
                                   l956 2B84                            __CFG_CPB$OFF 000000  
                                   _PR2 000FCB                                     _PSA 007EAB  
                                   _abs 34DC                                     _pad 2D10  
                          ___awmod@sign 000B                        ??_init_motor_PWM 0006  
                                   wreg 000FE8                            ___flmul@aexp 0021  
                          ___flmul@bexp 0026                            ___flmul@sign 0020  
                          ___flmul@temp 002B                            ___flmul@prod 0027  
                     _doDisplayLog$2194 0099              __end_of_errorCorrectedMove 1E50  
                          __CFG_LVP$OFF 000000                            ___fltol@exp1 0057  
                          __CFG_WDT$OFF 000000                                    l1111 30BA  
                                  ?_abs 0018                                    l1220 14F2  
                                  l1221 14D0                                    l1305 10DE  
                                  l1322 137C                                    l1314 12F6  
                                  l1315 12F2                                    l1236 15C4  
                                  l1245 162A                                    l1246 1626  
                                  l1353 26C8                                    l1346 264A  
                                  l1275 1AD6                                    l1366 3504  
                                  l1286 1B44                                    l1287 1B40  
                                  l1464 325A                                    l1397 29C2  
                                  l7010 1B88                                    l7014 1BAC  
                                  ?_pad 001A                                    l7024 1BE2  
                                  l8010 2F4E                                    l8002 2F34  
                                  l7026 1BE4                                    l7018 1BD6  
                                  l7122 12BC                                    l7050 109E  
                                  l8100 0F9C                                    l8012 2F56  
                                  l7116 129E                                    l7220 2C4C  
                                  l7212 2C38                                    l8022 2F78  
                                  l8006 2F40                                    l7142 133A  
                                  l7046 108A                                    l6504 347A  
                                  l6512 32B4                                    l6600 2552  
                                  l7320 006A                                    l8112 0FCA  
                                  l8104 0FAA                                    l7064 10CA  
                                  l7048 108E                                    l7208 2C28  
                                  l6514 32B8                                    l6610 25AE  
                                  l7410 0436                                    l8026 2F86  
                                  l8018 2F6E                                    l7146 1358  
                                  l7074 10FC                                    l7066 10CE  
                                  l7226 2C68                                    l7218 2C40  
                                  l7242 2678                                    l6508 3490  
                                  l6532 2D28                                    l7404 03FA  
                                  l7340 0084                                    l7332 0076  
                                  l7324 006E                                    l7316 0058  
                                  l7420 0458                                    l8108 0FB4  
                                  l8060 0DC0                                    l7172 2B58  
                                  l7244 267E                                    l7236 265A  
                                  l8220 09BE                                    l6542 2D60  
                                  l6614 25C4                                    l6630 29F8  
                                  l7414 0440                                    l7318 005A  
                                  l7342 00C6                                    l8118 100E  
                                  l8126 102C                                    l8038 0CD6  
                                  l7510 1484                                    l7182 2BBC  
                                  l7158 139A                                    l7254 26EE  
                                  l7246 268A                                    l8206 0980  
                                  l6536 2D36                                    l6640 2A4A  
                                  l6704 1EE6                                    l7336 007A  
                                  l7328 0072                                    l8128 104A  
                                  l7176 2B6E                                    l7168 2B24  
                                  l7192 2BDE                                    l7272 273A  
                                  l7256 26FA                                    l7248 26B0  
                                  l8320 0C6C                                    l8312 0C50  
                                  l8240 0A5A                                    l6546 2D8C  
                                  l6538 2D48                                    l6618 25EA  
                                  l6650 2AA8                                    l6634 2A1C  
                                  l7354 0134                                    l7610 1670  
                                  l7522 14DE                                    l8242 0A9A  
                                  l8306 0C00                                    l6708 1EF6  
                                  l6812 2120                                    l6804 20FE  
                                  l7372 020C                                    l7356 0152  
                                  l7524 14E2                                    l7444 13DC  
                                  l8324 0C78                                    l8308 0C34  
                                  l7700 2E58                                    l6494 2FA8  
                                  l6654 2ACE                                    l6646 2A92  
                                  l6638 2A36                                    l6742 206A  
                                  l6718 1FEE                                    l7390 032C  
                                  l7382 02BE                                    l7358 0160  
                                  l8086 0F3E                                    l7622 169E  
                                  l8270 0B7C                                    l7710 2E8C  
                                  l6592 2518                                    l8088 0F5C  
                                  l7624 16A0                                    l7480 1448  
                                  l7472 1428                                    l7448 13E0  
                                  l6912 1994                                    l7640 33BE  
                                  l8328 0C7E                                    l8280 0B9C  
                                  l8256 0B0C                                    l6666 342A  
                                  l6674 3192                                    l6586 24F0  
                                  l6738 2052                                    l6690 1EA6  
                                  l6754 2776                                    l6850 2298  
                                  l6826 21AE                                    l6834 2224  
                                  l7618 1696                                    l7546 1538  
                                  l7538 1516                                    l8602 0842  
                                  l8514 0652                                    l6676 319E  
                                  l6772 27FE                                    l6764 27C8  
                                  l7548 153C                                    l7556 154E  
                                  l7468 1424                                    l6940 1A08  
                                  l6932 19D4                                    l6908 1990  
                                  l7652 2C9A                                    l7740 2DE0  
                                  l8292 0BC0                                    l8284 0BA2  
                                  l8390 3084                                    l6598 253E  
                                  l6782 2856                                    l7574 15E8  
                                  l7590 1608                                    l7566 15B4  
                                  l7742 2DE8                                    l7734 2DCA  
                                  l7910 1958                                    l7902 192C  
                                  l8286 0BA8                                    l8198 0934  
                                  l8606 084E                                    l8614 085C  
                                  l8534 06DA                                    l6872 28F8  
                                  l6856 289E                                    l6768 27E0  
                                  l7584 15FE                                    l6928 19D0  
                                  l7648 2C8A                                    l7760 2E20  
                                  l7752 2E08                                    l7728 2DBA  
                                  l8288 0BB0                                    l6882 2962  
                                  l6874 2900                                    l6866 28E8  
                                  l6858 28A2                                    l6786 286E  
                                  l6778 283C                                    l7690 3162  
                                  l6954 1A36                                    l6946 1A1E  
                                  l7842 1710                                    l7834 16D0  
                                  l8298 0BE0                                    l8378 31D6  
                                  l8554 0752                                    l8458 04AA  
                                  l8396 30AC                                    l8388 3078  
                                  l6876 2906                                    l6972 1AAE  
                                  l6964 1A86                                    l7756 2E12  
                                  l8548 0740                                    l8476 053E  
                                  l8468 0510                                    l8564 077E  
                                  l6878 292E                                    l6798 20CE  
                                  l6990 1B0A                                    l7934 35C6  
                                  l8590 081A                                    l8582 0800  
                                  l8566 07B0                                    l7688 313C  
                                  l6984 1AEC                                    l7960 1E32  
                                  l7952 1E0E                                    l7880 1868  
                                  l7848 1728                                    l8496 05EA  
                                  l6978 1AD4                                    l7866 17C6  
                                  l7874 181A                                    l7858 1770  
                                  l7698 2E4C                                    l8594 0828  
                                  l8586 080C                                    l8578 07F2  
                                  l7956 1E26                                    l7948 1E02  
                                  l7884 188C                                    l7892 1900  
                                  l7868 17E2                                    l7886 18A8  
                                  l7878 184C                                    l8598 0836  
                                  _P1M0 007DEE                                    _P1M1 007DEF  
                                  STR_1 FFE3                                    STR_2 FF97  
                                  STR_3 FFE8                                    STR_4 FFDE  
                                  STR_5 FEC4                                    STR_6 FFE7  
                                  STR_7 FF0D                                    STR_8 FFE7  
                                  STR_9 FEA4                                    _LATB 000F8A  
                                  _LATD 000F8C                                    u7000 34EA  
                                  u7100 3244                                    u7120 3596  
                                  u8000 1BBA                                    u7130 3598  
                                  u7050 3566                                    u7300 1E78  
                                  u7060 3568                                    u8100 1260  
                                  u7310 1E7A                                    u7070 34D4  
                                  u7240 2A4E                                    u7400 202C  
                                  u7080 34D6                                    u7161 251E  
                                  u8105 1256                                    u7410 2030  
                                  u7090 3242                                    u7180 2556  
                                  u7340 1EBA                                    u7500 27F4  
                                  u8140 12EC                                    u7430 203C  
                                  u7510 2820                                    u9030 167C  
                                  u8310 2C52                                    u7280 3426  
                                  u7360 1EE0                                    u7600 2154  
                                  u7370 1FFC                                    u8090 10EA  
                                  u7451 2756                                    u9115 3686  
                                  u7540 2882                                    u7700 2268  
                                  u7620 218C                                    u8180 1348  
                                  u8260 2BCC                                    u9116 3688  
                                  u9220 16DA                                    u9140 2E5C  
                                  u7517 2816                                    u7390 201E  
                                  u7630 218E                                    u8190 1366  
                                  u8270 2BFC                                    u9230 16EE  
                                  u7391 201C                                    u6920 2FA0  
                                  u7560 20A8                                    u8600 01A6  
                                  u9400 1912                                    u9320 1784  
                                  u6905 35F0                                    u8505 24AA  
                                  u6906 35F2                                    u7730 28E4  
                                  u7650 2200                                    u9410 1922  
                                  u9330 1794                                    u8275 2BF2  
                                  u6940 2FE8                                    u7660 2234  
                                  u7580 211C                                    u9420 194C  
                                  u9228 16DC                                    u7750 2992  
                                  u7590 2152                                    u8630 0240  
                                  u8390 2704                                    u8470 2484  
                                  u9190 2DEC                                    u9350 17FC  
                                  u9238 16F0                                    u7655 21EE  
                                  u7760 2994                                    u6960 32DA  
                                  u7680 2256                                    u9520 2F5A  
                                  u9440 1DFA                                    u7681 2254  
                                  u7690 2264                                    u8490 24A8  
                                  u9370 1882                                    u6980 3536  
                                  u8660 0360                                    u8580 0198  
                                  u9620 1024                                    u8820 14FA  
                                  u9460 1E1E                                    u8485 2486  
                                  u6990 3538                                    u8590 019A  
                                  u7950 1B3A                                    u6967 32D0  
                                  u9720 0B98                                    u9640 095C  
                                  u9810 3088                                    u8770 14A6  
                                  u9650 096C                                    u8780 14B6  
                                  u9660 0990                                    u9485 30F4  
                                  u8950 160C                                    u8790 14B8  
                                  u7990 1B96                                    u9670 09A0  
                                  u9646 095E                                    u9760 0C60  
                                  u9656 096E                                    u8970 1620  
                                  u9666 0992                                    u9676 09A2  
                                  u9940 0816                                    u9790 3218  
                                  abs@a 0018                                    _dbuf 0100  
                                  _atoi 288C                                    _ctoa 317E  
                                  _main 048C                                    _dtoa 1E50  
              __end_of_interruptHandler 3470                                    _keys FE61  
                                  _logs 0130                                    _prec 00DE  
                                  _nout 00DA                                    pad@i 0021  
                                  pad@p 001E                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 0023                                    fsr2l 000FD9  
                                  _stoa 274C                                    btemp 007A  
                                  _xtoa 2094                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                         __CFG_IESO$OFF 000000                 __size_of_setMotorSpeeds 0096  
                       ___fldiv@new_exp 003E                     __end_of_EncoderInit 36E6  
                         __CFG_MCLRE$ON 000000      tirePositioning@bottomPreviousState 0092  
                          ___param_bank 000000                                   ??_abs 001A  
                                 ??_pad 0020                __size_of_tirePositioning 02A8  
                 I2C_Master_Read@ackBit 0007                        ?_I2C_Master_Init 0013  
                      ?_I2C_Master_Read 0001                        ?_I2C_Master_Wait 0001  
                      ?_I2C_Master_Stop 0001                          replaceOldLog@i 0006  
                         ___fltol@sign1 0056                             ?_TIMER_INIT 0001  
                       __end_of___aodiv 260C                                   ?_atoi 000D  
                                 ?_ctoa 0025                         __end_of___fladd 16BC  
                                 ?_main 0001                                   ?_dtoa 0025  
                       __end_of___aomod 2AF0                                   _CCP1X 007DED  
                       __end_of___fldiv 1BEC                                   _CCP1Y 007DEC  
                                 _CCP2X 007DD5                                   _CCP2Y 007DD4  
                       __end_of___awdiv 2E2A                                   _EEADR 000FA9  
                                 STR_10 FFDA                                   STR_11 FFEA  
                                 STR_20 FFF3                                   STR_12 FFFC  
                                 STR_13 FFDE                                   STR_21 FFF6  
                                 STR_30 FFE7                                   STR_22 FFF0  
                                 STR_14 FEF1                                   STR_15 FFDE  
                                 STR_31 FFAB                                   STR_23 FFA1  
                                 STR_40 FFE7                                   STR_32 FFE7  
                                 STR_24 FF76                                   STR_16 FE84  
                                 STR_25 FFA1                                   STR_17 FFE7  
                                 STR_41 FF44                                   STR_33 FF1B  
                                 STR_50 FFE7                                   STR_42 FFE7  
                                 STR_34 FFE7                                   STR_26 FFE7  
                                 STR_18 FF29                                   STR_19 FFF3  
                                 STR_27 FFBF                                   STR_35 FF51  
                                 STR_43 FEB4                                   STR_51 FE94  
                                 STR_44 FFE7                                   STR_36 FFE7  
                                 STR_52 FF5E                                   STR_28 FED3  
                       __end_of___awmod 2F90                                   STR_37 FFD1  
                                 STR_45 FFC8                                   STR_53 FFB5  
                                 STR_29 FEE2                                   STR_46 FFE7  
                                 STR_38 FFE7                                   STR_54 FF81  
                                 STR_55 FF8C                                   STR_47 FF6B  
                                 STR_39 FF37                                   STR_48 FFE7  
                                 STR_49 FEFF                         __end_of___flmul 13B0  
                       __end_of___flsub 32AA                         __end_of___fltol 2C7A  
                                 ?_stoa 0013                         __end_of___lldiv 2EAC  
                                 u10107 3002                                   u10027 054C  
                                 u10117 301A                                   u10037 05F8  
                                 u10207 0F90                                   u10127 302C  
                                 u10047 0644                                   u10217 1052  
                                 u10137 304E                                   u10057 0660  
                                 u10227 35D8                                   u10147 09E8  
                                 u10067 06E8                                   u10237 35E2  
                                 u10157 0ABC                                   u10077 076C  
                                 u10167 0B46                                   u10087 07E6  
                                 u10177 0CBE                                   u10097 08A0  
                                 u10187 0CE4                         ___awdiv@divisor 0008  
                                 u10197 0DCE                                   ?_xtoa 0025  
                       __end_of___llmod 30CC                                   _T0PS0 007EA8  
                                 _T0PS1 007EA9                                   _T0PS2 007EAA  
                                 i2l421 3442                                   i2l423 3456  
                                 i2l424 346C                                   i2l425 3462  
                          main@keyValue 012F                         ___awdiv@counter 000A  
                          vfpfcnvrt@fmt 004E                                   _TMR0H 000FD7  
                          vfpfcnvrt@llu 005E                                   _TMR0L 000FD6  
                                 _PORTB 000F81                                   _TRISD 000F95  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                         __CFG_WRT3$OFF 000000                         __end_of_lcdInst 3738  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                          main@keypress 012B                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000             set_pwm_duty_cycle@duty_valA 0064  
           set_pwm_duty_cycle@duty_valB 0066                         __end_of_opDelay 33F4  
                       __end_of_initLCD 3066                          __CFG_EBTRB$OFF 000000  
       tirePositioning@topPreviousState 0090                                   _flags 0075  
__end_ofinit_motor_PWM@TIMER2_PRESCALER FE7D          init_motor_PWM@TIMER2_PRESCALER FE7C  
                                 _fputc 2F90                         __end_of_isalpha 34DC  
                                 _fputs 3470                         __end_of_isdigit 359E  
                                 atoi@n 001A                                   pad@fp 001A  
                                 atoi@s 000D                                   _width 00DC  
                                 ctoa@c 0027                                   _putch 3720  
                                 ctoa@w 0028                                   main@i 012C  
                                 dtoa@d 0027                                   dtoa@i 0047  
                                 dtoa@n 003F                                   dtoa@p 0039  
                                 dtoa@s 003D                                   dtoa@w 003B  
                       __end_of_islower 353E                         __end_of_isspace 3432  
                       __end_of_isupper 356E                                   tablat 000FF5  
           __end_of_updateMotorAEncoder 3376                         send_nibble@data 0007  
                                 plusw1 000FE3                                   plusw2 000FDB  
                  __size_of_doOperation 0404             __end_of_updateMotorBEncoder 3332  
                                 stoa@i 001F                                   stoa@l 0027  
                                 stoa@p 0025                                   stoa@s 0015  
                                 stoa@w 0021                         __end_of_pulse_e 35F4  
                                 ttemp5 007B                                   ttemp6 007E  
                                 ttemp7 0082                                   status 000FD8  
           I2C_Master_Read@receivedByte 0008               requestIsTireDropDone@data 0009  
                                 wtemp8 007B                                   xtoa@c 004A  
                                 xtoa@d 0027                                   xtoa@i 0048  
                                 xtoa@n 0040                                   xtoa@p 003C  
                                 xtoa@w 003E                                   xtoa@x 002F  
                       __end_of_toupper 3264                errorCorrectedMove@ASpeed 009C  
              errorCorrectedMove@BSpeed 009E                          __CFG_PBADEN$ON 000000  
                          _toupper$1898 0012                         __initialization 2EAC  
                   main@currentLogState 012D                            __end_of_atoi 29CC  
                          __end_of_ctoa 31CE                            __end_of_main 08AC  
                          __end_of_dtoa 2094                            __end_of_keys FE72  
                          __end_of_stoa 288C                   __size_of_doDisplayLog 03AE  
                          __end_of_xtoa 22C2                                  ??_atoi 000F  
                                ??_ctoa 0028                                  ??_main 00D4  
                                ??_dtoa 002F                        opDelay@startTime 000D  
                                ??_stoa 0017                                  ??_xtoa 0030  
                         __activetblptr 000002                 set_pwm_duty_cycle@dutyA 0058  
               set_pwm_duty_cycle@dutyB 005C                       ?_I2C_Master_Start 0001  
                     ?_I2C_Master_Write 0007                   __end_of_replaceOldLog 321A  
                    ??_I2C_Master_Start 0007                    _millisecondsMeasured 0077  
                                _ADCON1 000FC1                      ??_I2C_Master_Write 0009  
                                _CCP1M0 007DE8                                  _CCP1M1 007DE9  
                                _CCP1M2 007DEA                                  _CCP1M3 007DEB  
                                _CCP2M0 007DD0                                  _CCP2M1 007DD1  
                                _CCP2M2 007DD2                                  _CCP2M3 007DD3  
                          ?_send_nibble 0001                                  ?_fputc 000A  
                      ___llmod@dividend 0006                                  ?_fputs 0013  
                                _EEDATA 000FA8                                  _CCPR1L 000FBE  
                                _CCPR2L 000FBB                                  _EECON2 000FA7  
                                _T08BIT 007EAE                        ___awdiv@dividend 0006  
                doOperation@tiresOnPole 00C0                                  ?_putch 0001  
                doOperation@tiresToDrop 00C9                                  _INT0IE 007F94  
                                _INT0IF 007F91                                  _INT1IE 007F83  
                                _INT1IF 007F80                                  _INT2IE 007F84  
                                _INT2IF 007F81                                  i2l5676 336E  
                                i2l5668 3328                      _set_pwm_duty_cycle 22C2  
                           _EncoderInit 36CE                           vfpfcnvrt@done 0068  
                                _TMR0IE 007F95                                  _TMR0IF 007F92  
                                _TMR0ON 007EAF                                  _TMR2ON 007E52  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 274C                            _doDisplayLog 0CB0  
                   __size_of_TIMER_INIT 001E                     ?_set_pwm_duty_cycle 0058  
                        __CFG_XINST$OFF 000000                   _encoderAInterruptLast 00E4  
                          vfprintf@cfmt 0073                                  ___flge 2AF0  
                             ??___aodiv 0016                               ??___fladd 0035  
                             ??___aomod 0016                                  ___wmul 3644  
                             ??___fldiv 0035                               ??___awdiv 000A  
                        __CFG_STVREN$ON 000000                               ??___awmod 000A  
                             ??___flmul 001C                               ??___flsub 004E  
                             ??___fltol 0052                               ??___lldiv 000E  
                             ??___llmod 000E                        doOperation@F3360 00D6  
                                clear_0 2EE6                                  clear_1 2EF8  
                                clear_2 2F04                        ___awdiv@quotient 000C  
                       ___awmod@divisor 0008                         ___awmod@counter 000A  
                             ??_lcdInst 0009                                  _printf 361C  
                                pad@buf 001C                                  ctoa@fp 0025  
           ?_sendArduinoTireDropRequest 0001                                  dtoa@fp 0025  
       updateMotorBEncoder@directionPin 0004                                  _strlen 32AA  
                             ??_opDelay 000A                               ??_initLCD 000A  
                                fputc@c 000A                                  fputs@c 0017  
                                fputs@i 0018                            __pdataCOMRAM 0079  
                                fputs@s 0013                               ??_isalpha 0008  
                             ??_isdigit 0008                   _requestIsTireDropDone 359E  
                  ??_set_pwm_duty_cycle 0060                       ??_tirePositioning 0072  
                             ??_islower 0008                            __mediumconst FE60  
                             ??_isspace 0008        doOperation@currentOperationState 00D1  
                                tblptrh 000FF7                               ??_isupper 0008  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                stoa@cp 0023                                  stoa@fp 0013  
                      __end_of_vfprintf 317E                               ??_pulse_e 0006  
                                xtoa@fp 0025                               ??_toupper 000E  
                            ___flge@ff1 0006                              ___flge@ff2 000A  
                          ___xxtofl@arg 0010                   pulse_e@interruptState 0006  
                          ___xxtofl@exp 000F                            ___xxtofl@val 0006  
                            __accesstop 0080                 __end_of__initialization 2F12  
                   _setMotorSpeeds$2196 0080                     _setMotorSpeeds$2197 0084  
                         ___rparam_used 000001                          _setMotorSpeeds 2C7A  
                            ___fltol@f1 004E                    __end_of_happynewyear FE79  
                        __pcstackCOMRAM 0001                            __pidataBANK0 3742  
               opDelay@maxOperationTime 0008                           __end_of_fputc 2FFC  
                         __end_of_fputs 34A8                           __end_of_putch 372C  
                               ??_fputc 000E                                 ??_fputs 0017  
                               ??_putch 0009                              __pbssBANK0 00D6  
                            __pbssBANK1 0100                  __end_of_setMotorSpeeds 2D10  
                     ?_interruptHandler 0001                      _errorCorrectedMove 1BEC  
                    ??_interruptHandler 0006                   _encoderBInterruptLast 00E5  
                               ?___flge 0006                                 ?___wmul 0006  
    tirePositioning@distanceRecordedTop 0094                     ?_errorCorrectedMove 0088  
                    __size_of_send_byte 0012                            ??_TIMER_INIT 0006  
                               ?_printf 0080                                 ?_strlen 0006  
                               _T2CKPS0 007E50                                 _T2CKPS1 007E51  
           tirePositioning@topBreakbeam 0098                  ?_requestIsTireDropDone 0001  
                    __size_of_robotInit 0040                               ?___xxtofl 0006  
                    __size_of_vfpfcnvrt 047A                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                  ??_errorCorrectedMove 0096                    __size_of_send_nibble 0016  
                       ?_setMotorSpeeds 006C                           opDelay@millis 0006  
                    __end_of_TIMER_INIT 36CE                                 __Hparam 0000  
                            _keyPressed 00E8                                 __Lparam 0000  
       tirePositioning@maxOperationTime 0088                         __size_of___flge 00D0  
                               ___aodiv 24C4                                 ___fladd 13B0  
                               ___aomod 29CC                                 ___fldiv 1964  
                               ___awdiv 2DA6                                 ___awmod 2F20  
                               ___flmul 105E                                 ___flsub 3264  
                               ___fltol 2BC0                                 ___lldiv 2E2A  
                       __size_of___wmul 0026                                 ___llmod 3066  
                             ?_vfprintf 006D                                 __pcinit 2EAC  
                               __ramtop 1000                                 _lcdInst 372C  
                               __ptext0 048C                                 __ptext1 3376  
                               __ptext2 2FFC                                 __ptext3 30CC  
                               __ptext4 2E2A                                 __ptext5 36CE  
                               __ptext6 31CE                                 __ptext7 08AC  
                               __ptext8 16BC                                 __ptext9 33B6  
                       __size_of_printf 0028                               _T0CONbits 000FD5  
                               _opDelay 33B6                         __size_of_strlen 0044  
                               _initLCD 2FFC                          _motorADistance 00E2  
                          __size_of_abs 0032                            __size_of_pad 0096  
                               _isalpha 34A8                                 _isdigit 356E  
                            ??___xxtofl 000A                        ___awmod@dividend 0006  
                        _motorBDistance 00E0                                 _islower 350E  
                               _isspace 33F4                                 _isupper 353E  
              __size_of_I2C_Master_Init 005C                __size_of_I2C_Master_Read 0024  
              __size_of_I2C_Master_Wait 0012                __size_of_I2C_Master_Stop 0008  
                               atoi@neg 0013                                 _pulse_e 35CA  
                         ??_doOperation 00A0                          __pintcode_body 3432  
                               _toupper 321A             _topBreakBeamTriggeredChange 00E7  
                  end_of_initialization 2F12                   __end_of_LCD_SIZE_HORZ FE7C  
                     __end_of_send_byte 3720                   __end_of_LCD_SIZE_VERT FE7B  
                          ?_EncoderInit 0001                   doOperation@isDoneDrop 00C4  
                               fputc@fp 000C                           __Lmediumconst FE60  
                               int_func 3432                                 fputs@fp 0015  
               __size_of_init_motor_PWM 0028                       __end_of_robotInit 33B6  
             __size_of_I2C_Master_Start 0008               __size_of_I2C_Master_Write 000A  
                       ___lldiv@divisor 000A                         ___lldiv@counter 0012  
          __size_of_updateMotorAEncoder 0044                       __end_of_vfpfcnvrt 048C  
    tirePositioning@startDistanceBottom 008C            __size_of_updateMotorBEncoder 0044  
                  doDisplayLog@keyValue 0096                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                       _tirePositioning 16BC                              ??_vfprintf 0073  
                  doDisplayLog@keypress 0094                                 strlen@a 0008  
                               strlen@s 0006                               _PORTBbits 000F81  
                             _PORTCbits 000F82                               _PORTEbits 000F84  
  updateMotorBEncoder@interruptPinState 0002                             ___fladd@grs 003C  
                         ___xxtofl@sign 000E                               _TRISAbits 000F92  
           doOperation@bottomLaserState 00D2                               _TRISBbits 000F93  
                             _TRISCbits 000F94                               _TRISEbits 000F96  
    doOperation@millisecondsMeasuredOld 00C7                             ___fldiv@grs 0040  
                           ___fldiv@rem 0039                            _happynewyear FE72  
          tirePositioning@startDistance 008E                             ___flmul@grs 0022  
                         send_byte@data 0008                     __end_of_doOperation 0CB0  
                __size_of_replaceOldLog 004C                          __end_of___flge 2BC0  
                           vfpfcnvrt@ap 0050                             vfpfcnvrt@cp 0066  
                           vfpfcnvrt@fp 004C                             vfpfcnvrt@ll 0056  
                        __end_of___wmul 366A                           __pidataCOMRAM 375A  
                        __end_of_printf 3644                          __end_of_strlen 32EE  
                   start_initialization 2EAC             __size_of_set_pwm_duty_cycle 0202  
             setMotorSpeeds@motorASpeed 006C               setMotorSpeeds@motorBSpeed 0070  
                           __end_of_abs 350E                             __end_of_pad 2DA6  
               errorCorrectedMove@error 009A                       ??_I2C_Master_Init 0017  
                     ??_I2C_Master_Read 0007                       ??_I2C_Master_Wait 0006  
                     ??_I2C_Master_Stop 0007                         ___llmod@divisor 000A  
                       ___llmod@counter 000E                 __end_of_tirePositioning 1964  
                           vfprintf@fmt 006F                                ??___flge 000E  
                              ??___wmul 000A                   main@currentRobotState 012E  
              I2C_Master_Init@clockFreq 0013                             __pdataBANK0 00E9  
               ??_requestIsTireDropDone 0009                        __CFG_LPT1OSC$OFF 000000  
       tirePositioning@startDistanceTop 008A                         doOperation@send 00B7  
                              ??_printf 0075               __size_of_interruptHandler 3468  
                              ??_strlen 0008                               ___fladd@a 0031  
                             ___fladd@b 002D                               ___fldiv@a 0031  
                             ___fldiv@b 002D                             __pbssBIGRAM 0130  
                             ___flmul@a 0018                               ___flmul@b 0014  
                           __pbssCOMRAM 0075                               ___flsub@a 004A  
                             ___flsub@b 0046                           __pcstackBANK0 0080  
                         __pcstackBANK1 0120                        ___aodiv@dividend 0006  
                         _replaceOldLog 31CE                        ??_setMotorSpeeds 0072  
                     __size_of___xxtofl 0140                             _doOperation 08AC  
                setMotorSpeeds@Aforward 006E                  setMotorSpeeds@Bforward 006F  
                        _init_motor_PWM 35F4                               _atoi$1807 0015  
                             _atoi$1808 0019                               _atoi$1809 0017  
                  __size_of_EncoderInit 0018                        _I2C_Master_Start 3752  
                      _I2C_Master_Write 3738                doOperation@topLaserState 00D3  
                             _dtoa$1311 0037                       __CFG_CCP2MX$PORTC 000000  
                             __pintcode 0008                           __pmediumconst FE60  
                              ?___aodiv 0006                                ?___fladd 002D  
                              ?___aomod 0006                                ?___fldiv 002D  
                              ?___awdiv 0006                        ___aodiv@quotient 0018  
                              ?___awmod 0006                                ?___flmul 0014  
                              ?___flsub 0046                                ?___fltol 004E  
                              ?___lldiv 0006   errorCorrectedMove@motorAStartDistance 008E  
                              ?___llmod 0006                                ?_lcdInst 0001  
                     __size_of_vfprintf 0056                                ?_opDelay 0006  
                              ?_initLCD 0001                  doOperation@badCountBot 00BA  
                              ?_isalpha 0006                                ?_isdigit 0006  
                              ?_islower 0006                                ?_isspace 0006  
                        ?_replaceOldLog 0001                                ?_isupper 0006  
                   _updateMotorAEncoder 3332                            doOperation@i 00CF  
                   _updateMotorBEncoder 32EE                           ??_send_nibble 0007  
                              ?_pulse_e 0001                          __size_of_fputc 006C  
                        __size_of_fputs 0038                                ?_toupper 000C  
                __end_of_init_motor_PWM 361C            doOperation@topLaserStatePrev 00CB  
                        __size_of_putch 000C             __size_of_errorCorrectedMove 0264  
                        ___wmul@product 000A                                _LATAbits 000F89  
                         ?_doDisplayLog 008E                                _LATDbits 000F8C  
                      ?_tirePositioning 0088                               _send_byte 370E  
           errorCorrectedMove@goalSpeed 0088                          _LCD_LINE1_ADDR FE79  
                        _LCD_LINE2_ADDR FE83                          _LCD_LINE3_ADDR FE82  
                        _LCD_LINE4_ADDR FE81              doOperation@timeInOperation 00CD  
               init_motor_PWM@FREQUENCY FE7D                                i2u620_40 330A  
                              i2u620_48 330C                                i2u622_40 333C  
                              i2u623_40 334E                                i2u622_48 333E  
                  ?_updateMotorAEncoder 0001                                i2u623_48 3350  
                              i2u619_40 32F8                                i2u619_48 32FA  
                  ?_updateMotorBEncoder 0001                        __CFG_WDTPS$32768 000000  
                             _robotInit 3376                               _vfpfcnvrt 0012  
                             _xtoa$1332 0038                               _xtoa$1333 003A  
                     ___wmul@multiplier 0006            ??_sendArduinoTireDropRequest 0009  
                          _isspace$1834 000C                              vfpfcnvrt@c 006C  
                             copy_data0 2EC0                 _set_pwm_duty_cycle$2195 0068  
                       ?_init_motor_PWM 0001                          ??_doDisplayLog 0090  
                  doOperation@timeStart 00C2                  __end_of_LCD_LINE1_ADDR FE7A  
                __end_of_LCD_LINE2_ADDR FE84                  __end_of_LCD_LINE3_ADDR FE83  
                __end_of_LCD_LINE4_ADDR FE82                     __end_of_send_nibble 36FC  
                            _EECON1bits 000FA6                              ?_send_byte 0001  
                              __Hrparam 0000                   ??_updateMotorAEncoder 0001  
                 ??_updateMotorBEncoder 0001                 doDisplayLog@currentPole 0097  
       doDisplayLog@currentDisplayState 0095                              vfprintf@ap 0071  
                              __Lrparam 0000                              vfprintf@fp 006D  
                    __CFG_BOREN$SBORDIS 000000     __size_of_sendArduinoTireDropRequest 0022  
                            ?_robotInit 0001    updateMotorAEncoder@interruptPinState 0002  
                      __size_of___aodiv 0148                        __size_of___fladd 030C  
 errorCorrectedMove@motorBStartDistance 0090                        __size_of___aomod 0124  
                      __size_of___fldiv 0288                        __size_of___awdiv 0084  
                      __size_of___awmod 0070                        __size_of___flmul 0352  
                      __size_of___flsub 0046                        __size_of___fltol 00BA  
                      __size_of___lldiv 0082                        __size_of___llmod 0066  
           errorCorrectedMove@turnRatio 008A                              ?_vfpfcnvrt 004C  
                       ___aodiv@divisor 000E                        _interruptHandler 0008  
                       ___aodiv@counter 0016                        __size_of_lcdInst 000C  
                       ??_replaceOldLog 0006                        __size_of_opDelay 003E  
                       _I2C_Master_Init 30CC                         _I2C_Master_Read 366A  
                      __size_of_initLCD 006A                                ___xxtofl 260C  
                       _I2C_Master_Wait 36FC                         _I2C_Master_Stop 374A  
                      __size_of_isalpha 0034                        __size_of_isdigit 0030  
                      __size_of_islower 0030                        __size_of_isspace 003E  
                   doOperation@badCount 00B8                                __ptext10 2DA6  
                              __ptext11 368E                                __ptext20 2C7A  
                              __ptext12 359E                                __ptext21 22C2  
                              __ptext13 3738                                __ptext30 36B0  
                              __ptext22 260C                                __ptext14 374A  
                              __ptext31 0CB0                                __ptext23 2BC0  
                              __ptext15 3752                                __ptext40 274C  
                              __ptext32 361C                                __ptext24 105E  
                              __ptext16 366A                                __ptext41 1E50  
                              __ptext33 3128                                __ptext25 2AF0  
                              __ptext17 36FC                                __ptext50 3720  
                              __ptext42 34DC                                __ptext34 0012  
                              __ptext26 1964                                __ptext18 35F4  
                              __ptext51 288C                                __ptext43 29CC  
                              __ptext35 2094                                __ptext27 3264  
                              __ptext19 1BEC                                __ptext52 33F4  
                              __ptext44 24C4                                __ptext36 321A  
                              __ptext28 13B0                                __ptext61 32EE  
                              __ptext53 356E                                __ptext45 317E  
                              __ptext37 350E                                __ptext29 2F20  
                              __ptext62 3332                                __ptext54 3644  
                              __ptext46 2D10                                __ptext38 353E  
                              __ptext55 372C                                __ptext47 32AA  
                              __ptext39 34A8                                __ptext56 370E  
                              __ptext48 3470                                __ptext57 36E6  
                              __ptext49 2F90                                __ptext58 35CA  
                              __ptext59 3066                        __size_of_isupper 0030  
                      __size_of_pulse_e 002A                         _motorADirection 00F0  
                      __size_of_toupper 004A                           __size_of_atoi 0140  
                         __size_of_ctoa 0050                           __size_of_main 0420  
                       _motorBDirection 0079                           __size_of_dtoa 0244  
                         __size_of_stoa 0140                           __size_of_xtoa 022E  
                             stoa@F1144 00E9          set_pwm_duty_cycle@max_duty_val 0062  
                              int$flags 007A                      doOperation@PIDData 00A3  
                              _vfprintf 3128                               printf@fmt 0080  
        doOperation@motorAStartDistance 00BC                                main@tick 0127  
                              main@time 0120          __size_of_requestIsTireDropDone 002C  
         __end_of_requestIsTireDropDone 35CA             I2C_Master_Write@byteToWrite 0007  
       updateMotorAEncoder@directionPin 0004                        ___aomod@dividend 0006  
            __end_of_set_pwm_duty_cycle 24C4                               putch@data 0009  
              __end_of_I2C_Master_Start 375A                          _vfpfcnvrt$1347 006A  
              __end_of_I2C_Master_Write 3742                              _INTCONbits 000FF2  
 tirePositioning@distanceRecordedBottom 0096                                isalpha@c 0006  
                              isdigit@c 0006                             _send_nibble 36E6  
                          ?_doOperation 0001          _bottomBreakBeamTriggeredChange 00E6  
                              intlevel2 0000                           _LCD_SIZE_HORZ FE7B  
                              islower@c 0006    errorCorrectedMove@correctionConstant 0092  
                         _LCD_SIZE_VERT FE7A                                isspace@c 0006  
                      ___lldiv@dividend 0006                             ??_send_byte 0008  
                              isupper@c 0006         doOperation@bottomLaserStatePrev 00CC  
                            _OSCCONbits 000FD3                      doOperation@counted 00C5  
                           ??_robotInit 001B                                printf@ap 008C  
               __end_of_I2C_Master_Init 3128                         ___aomod@divisor 000E  
               __end_of_I2C_Master_Read 368E                 __end_of_I2C_Master_Wait 370E  
               __end_of_I2C_Master_Stop 3752                             ??_vfpfcnvrt 0052  
                           lcdInst@data 0009                                stoa@nuls 0018  
                       ___aomod@counter 0016                   doDisplayLog@logNumber 008E  
    __end_of_sendArduinoTireDropRequest 36B0              _sendArduinoTireDropRequest 368E  
                            _TIMER_INIT 36B0         __end_ofinit_motor_PWM@FREQUENCY FE81  
                  __end_of_doDisplayLog 105E          tirePositioning@bottomBreakbeam 009A  
                      ___lldiv@quotient 000E                                toupper@c 000C  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0039                            ___aodiv@sign 0017  
                         ??_EncoderInit 0006                            ___fladd@aexp 003A  
                          ___fladd@bexp 003B                            ___aomod@sign 0017  
