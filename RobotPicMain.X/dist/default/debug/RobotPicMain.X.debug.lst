

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 24 14:34:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.05
    85                           ; Generated 20/12/2018 GMT
    86                           ; 
    87                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4620 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataCOMRAM
   120  0034F2                     __pidataCOMRAM:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _motorBDirection
   124  0034F2  01                 	db	1
   125                           
   126                           	psect	idataBANK0
   127  0034DA                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for stoa@F1144
   131  0034DA  28                 	db	40
   132  0034DB  6E                 	db	110
   133  0034DC  75                 	db	117
   134  0034DD  6C                 	db	108
   135  0034DE  6C                 	db	108
   136  0034DF  29                 	db	41
   137  0034E0  00                 	db	0
   138                           
   139                           ;initializer for _motorADirection
   140  0034E1  01                 	db	1
   141                           
   142                           	psect	mediumconst
   143  00FB9C                     __pmediumconst:
   144                           	opt callstack 0
   145  00FB9C  00                 	db	0
   146  00FB9D                     _keys:
   147                           	opt callstack 0
   148  00FB9D  31                 	db	49
   149  00FB9E  32                 	db	50
   150  00FB9F  33                 	db	51
   151  00FBA0  41                 	db	65
   152  00FBA1  34                 	db	52
   153  00FBA2  35                 	db	53
   154  00FBA3  36                 	db	54
   155  00FBA4  42                 	db	66
   156  00FBA5  37                 	db	55
   157  00FBA6  38                 	db	56
   158  00FBA7  39                 	db	57
   159  00FBA8  43                 	db	67
   160  00FBA9  2A                 	db	42
   161  00FBAA  30                 	db	48
   162  00FBAB  23                 	db	35
   163  00FBAC  44                 	db	68
   164  00FBAD  00                 	db	0
   165  00FBAE                     __end_of_keys:
   166                           	opt callstack 0
   167  00FBAE                     _happynewyear:
   168                           	opt callstack 0
   169  00FBAE  00                 	db	0
   170  00FBAF  37                 	db	55
   171  00FBB0  0E                 	db	14
   172  00FBB1  02                 	db	2
   173  00FBB2  13                 	db	19
   174  00FBB3  02                 	db	2
   175  00FBB4  13                 	db	19
   176  00FBB5                     __end_of_happynewyear:
   177                           	opt callstack 0
   178  00FBB5                     _LCD_LINE1_ADDR:
   179                           	opt callstack 0
   180  00FBB5  00                 	db	0
   181  00FBB6                     __end_of_LCD_LINE1_ADDR:
   182                           	opt callstack 0
   183  00FBB6                     _LCD_SIZE_VERT:
   184                           	opt callstack 0
   185  00FBB6  04                 	db	4
   186  00FBB7                     __end_of_LCD_SIZE_VERT:
   187                           	opt callstack 0
   188  00FBB7                     _LCD_SIZE_HORZ:
   189                           	opt callstack 0
   190  00FBB7  10                 	db	16
   191  00FBB8                     __end_of_LCD_SIZE_HORZ:
   192                           	opt callstack 0
   193  00FBB8  10                 	db	16
   194  00FBB9                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   195                           	opt callstack 0
   196  00FBB9  03E8               	dw	1000
   197  00FBBB  0000               	dw	0
   198  00FBBD                     __end_ofinit_motor_PWM@FREQUENCY:
   199                           	opt callstack 0
   200  00FBBD  50                 	db	80
   201  00FBBE                     __end_of_LCD_LINE4_ADDR:
   202                           	opt callstack 0
   203  00FBBE  10                 	db	16
   204  00FBBF                     __end_of_LCD_LINE3_ADDR:
   205                           	opt callstack 0
   206  00FBBF  40                 	db	64
   207  00FBC0                     __end_of_LCD_LINE2_ADDR:
   208                           	opt callstack 0
   209  0000                     _LATDbits	set	3980
   210  0000                     _LATB	set	3978
   211  0000                     _TRISD	set	3989
   212  0000                     _LATD	set	3980
   213  0000                     _TRISAbits	set	3986
   214  0000                     _LATAbits	set	3977
   215  0000                     _TRISBbits	set	3987
   216  0000                     _TRISEbits	set	3990
   217  0000                     _TRISCbits	set	3988
   218  0000                     _PORTCbits	set	3970
   219  0000                     _PORTEbits	set	3972
   220  0000                     _PORTBbits	set	3969
   221  0000                     _PORTB	set	3969
   222  0000                     _SSPBUF	set	4041
   223  0000                     _SSPCON2bits	set	4037
   224  0000                     _SSPCON1	set	4038
   225  0000                     _SSPADD	set	4040
   226  0000                     _SSPCON1bits	set	4038
   227  0000                     _SSPCON2	set	4037
   228  0000                     _SSPSTAT	set	4039
   229  0000                     _ADCON1	set	4033
   230  0000                     _EECON2	set	4007
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _EEDATA	set	4008
   234  0000                     _CCPR2L	set	4027
   235  0000                     _CCPR1L	set	4030
   236  0000                     _PR2	set	4043
   237  0000                     _OSCCONbits	set	4051
   238  0000                     _CCP2Y	set	32212
   239  0000                     _CCP2X	set	32213
   240  0000                     _CCP1Y	set	32236
   241  0000                     _CCP1X	set	32237
   242  0000                     _TMR2ON	set	32338
   243  0000                     _T2CKPS1	set	32337
   244  0000                     _T2CKPS0	set	32336
   245  0000                     _CCP2M0	set	32208
   246  0000                     _CCP2M1	set	32209
   247  0000                     _CCP2M2	set	32210
   248  0000                     _CCP2M3	set	32211
   249  0000                     _CCP1M0	set	32232
   250  0000                     _CCP1M1	set	32233
   251  0000                     _CCP1M2	set	32234
   252  0000                     _CCP1M3	set	32235
   253  0000                     _P1M0	set	32238
   254  0000                     _P1M1	set	32239
   255  0000                     _TMR0L	set	4054
   256  0000                     _TMR0H	set	4055
   257  0000                     _T0CONbits	set	4053
   258  0000                     _TMR0ON	set	32431
   259  0000                     _PSA	set	32427
   260  0000                     _T0PS0	set	32424
   261  0000                     _T0PS1	set	32425
   262  0000                     _T0PS2	set	32426
   263  0000                     _T08BIT	set	32430
   264  0000                     _INTCONbits	set	4082
   265  0000                     _INT0IF	set	32657
   266  0000                     _INT2IF	set	32641
   267  0000                     _TMR0IF	set	32658
   268  0000                     _INT1IF	set	32640
   269  0000                     _INT1IE	set	32643
   270  0000                     _TMR0IE	set	32661
   271  0000                     _INT0IE	set	32660
   272  0000                     _INT2IE	set	32644
   273  00FBC0                     STR_16:
   274  00FBC0  54                 	db	84	;'T'
   275  00FBC1  49                 	db	73	;'I'
   276  00FBC2  52                 	db	82	;'R'
   277  00FBC3  45                 	db	69	;'E'
   278  00FBC4  2E                 	db	46
   279  00FBC5  20                 	db	32
   280  00FBC6  4F                 	db	79	;'O'
   281  00FBC7  4E                 	db	78	;'N'
   282  00FBC8  20                 	db	32
   283  00FBC9  50                 	db	80	;'P'
   284  00FBCA  4F                 	db	79	;'O'
   285  00FBCB  4C                 	db	76	;'L'
   286  00FBCC  45                 	db	69	;'E'
   287  00FBCD  3A                 	db	58	;':'
   288  00FBCE  20                 	db	32
   289  00FBCF  00                 	db	0
   290  00FBD0                     STR_51:
   291  00FBD0  28                 	db	40
   292  00FBD1  31                 	db	49	;'1'
   293  00FBD2  29                 	db	41
   294  00FBD3  20                 	db	32
   295  00FBD4  28                 	db	40
   296  00FBD5  32                 	db	50	;'2'
   297  00FBD6  29                 	db	41
   298  00FBD7  20                 	db	32
   299  00FBD8  28                 	db	40
   300  00FBD9  33                 	db	51	;'3'
   301  00FBDA  29                 	db	41
   302  00FBDB  20                 	db	32
   303  00FBDC  28                 	db	40
   304  00FBDD  34                 	db	52	;'4'
   305  00FBDE  29                 	db	41
   306  00FBDF  00                 	db	0
   307  00FBE0                     STR_9:
   308  00FBE0  28                 	db	40
   309  00FBE1  32                 	db	50	;'2'
   310  00FBE2  29                 	db	41
   311  00FBE3  20                 	db	32
   312  00FBE4  53                 	db	83	;'S'
   313  00FBE5  41                 	db	65	;'A'
   314  00FBE6  56                 	db	86	;'V'
   315  00FBE7  45                 	db	69	;'E'
   316  00FBE8  20                 	db	32
   317  00FBE9  26                 	db	38
   318  00FBEA  20                 	db	32
   319  00FBEB  45                 	db	69	;'E'
   320  00FBEC  58                 	db	88	;'X'
   321  00FBED  49                 	db	73	;'I'
   322  00FBEE  54                 	db	84	;'T'
   323  00FBEF  00                 	db	0
   324  00FBF0                     STR_43:
   325  00FBF0  28                 	db	40
   326  00FBF1  32                 	db	50	;'2'
   327  00FBF2  29                 	db	41
   328  00FBF3  20                 	db	32
   329  00FBF4  51                 	db	81	;'Q'
   330  00FBF5  55                 	db	85	;'U'
   331  00FBF6  49                 	db	73	;'I'
   332  00FBF7  54                 	db	84	;'T'
   333  00FBF8  20                 	db	32
   334  00FBF9  44                 	db	68	;'D'
   335  00FBFA  4F                 	db	79	;'O'
   336  00FBFB  20                 	db	32
   337  00FBFC  4E                 	db	78	;'N'
   338  00FBFD  4F                 	db	79	;'O'
   339  00FBFE  54                 	db	84	;'T'
   340  00FBFF  00                 	db	0
   341  00FC00                     STR_5:
   342  00FC00  54                 	db	84	;'T'
   343  00FC01  49                 	db	73	;'I'
   344  00FC02  52                 	db	82	;'R'
   345  00FC03  2E                 	db	46
   346  00FC04  20                 	db	32
   347  00FC05  53                 	db	83	;'S'
   348  00FC06  55                 	db	85	;'U'
   349  00FC07  50                 	db	80	;'P'
   350  00FC08  50                 	db	80	;'P'
   351  00FC09  4C                 	db	76	;'L'
   352  00FC0A  49                 	db	73	;'I'
   353  00FC0B  45                 	db	69	;'E'
   354  00FC0C  44                 	db	68	;'D'
   355  00FC0D  20                 	db	32
   356  00FC0E  00                 	db	0
   357  00FC0F                     STR_28:
   358  00FC0F  25                 	db	37
   359  00FC10  30                 	db	48	;'0'
   360  00FC11  32                 	db	50	;'2'
   361  00FC12  78                 	db	120	;'x'
   362  00FC13  2F                 	db	47
   363  00FC14  25                 	db	37
   364  00FC15  30                 	db	48	;'0'
   365  00FC16  32                 	db	50	;'2'
   366  00FC17  78                 	db	120	;'x'
   367  00FC18  2F                 	db	47
   368  00FC19  25                 	db	37
   369  00FC1A  30                 	db	48	;'0'
   370  00FC1B  32                 	db	50	;'2'
   371  00FC1C  78                 	db	120	;'x'
   372  00FC1D  00                 	db	0
   373  00FC1E                     STR_29:
   374  00FC1E  25                 	db	37
   375  00FC1F  30                 	db	48	;'0'
   376  00FC20  32                 	db	50	;'2'
   377  00FC21  78                 	db	120	;'x'
   378  00FC22  3A                 	db	58	;':'
   379  00FC23  25                 	db	37
   380  00FC24  30                 	db	48	;'0'
   381  00FC25  32                 	db	50	;'2'
   382  00FC26  78                 	db	120	;'x'
   383  00FC27  3A                 	db	58	;':'
   384  00FC28  25                 	db	37
   385  00FC29  30                 	db	48	;'0'
   386  00FC2A  32                 	db	50	;'2'
   387  00FC2B  78                 	db	120	;'x'
   388  00FC2C  00                 	db	0
   389  00FC2D                     STR_14:
   390  00FC2D  54                 	db	84	;'T'
   391  00FC2E  49                 	db	73	;'I'
   392  00FC2F  52                 	db	82	;'R'
   393  00FC30  2E                 	db	46
   394  00FC31  20                 	db	32
   395  00FC32  44                 	db	68	;'D'
   396  00FC33  45                 	db	69	;'E'
   397  00FC34  50                 	db	80	;'P'
   398  00FC35  4C                 	db	76	;'L'
   399  00FC36  4F                 	db	79	;'O'
   400  00FC37  59                 	db	89	;'Y'
   401  00FC38  3A                 	db	58	;':'
   402  00FC39  20                 	db	32
   403  00FC3A  00                 	db	0
   404  00FC3B                     STR_49:
   405  00FC3B  28                 	db	40
   406  00FC3C  31                 	db	49	;'1'
   407  00FC3D  20                 	db	32
   408  00FC3E  49                 	db	73	;'I'
   409  00FC3F  53                 	db	83	;'S'
   410  00FC40  20                 	db	32
   411  00FC41  4F                 	db	79	;'O'
   412  00FC42  4C                 	db	76	;'L'
   413  00FC43  44                 	db	68	;'D'
   414  00FC44  45                 	db	69	;'E'
   415  00FC45  53                 	db	83	;'S'
   416  00FC46  54                 	db	84	;'T'
   417  00FC47  29                 	db	41
   418  00FC48  00                 	db	0
   419  00FC49                     STR_7:
   420  00FC49  28                 	db	40
   421  00FC4A  31                 	db	49	;'1'
   422  00FC4B  29                 	db	41
   423  00FC4C  20                 	db	32
   424  00FC4D  50                 	db	80	;'P'
   425  00FC4E  4F                 	db	79	;'O'
   426  00FC4F  4C                 	db	76	;'L'
   427  00FC50  45                 	db	69	;'E'
   428  00FC51  20                 	db	32
   429  00FC52  49                 	db	73	;'I'
   430  00FC53  4E                 	db	78	;'N'
   431  00FC54  46                 	db	70	;'F'
   432  00FC55  4F                 	db	79	;'O'
   433  00FC56  00                 	db	0
   434  00FC57                     STR_33:
   435  00FC57  28                 	db	40
   436  00FC58  32                 	db	50	;'2'
   437  00FC59  29                 	db	41
   438  00FC5A  20                 	db	32
   439  00FC5B  56                 	db	86	;'V'
   440  00FC5C  49                 	db	73	;'I'
   441  00FC5D  45                 	db	69	;'E'
   442  00FC5E  57                 	db	87	;'W'
   443  00FC5F  20                 	db	32
   444  00FC60  4C                 	db	76	;'L'
   445  00FC61  4F                 	db	79	;'O'
   446  00FC62  47                 	db	71	;'G'
   447  00FC63  53                 	db	83	;'S'
   448  00FC64  00                 	db	0
   449  00FC65                     STR_18:
   450  00FC65  31                 	db	49	;'1'
   451  00FC66  3C                 	db	60	;'<'
   452  00FC67  2D                 	db	45
   453  00FC68  20                 	db	32
   454  00FC69  32                 	db	50	;'2'
   455  00FC6A  2D                 	db	45
   456  00FC6B  3E                 	db	62	;'>'
   457  00FC6C  20                 	db	32
   458  00FC6D  33                 	db	51	;'3'
   459  00FC6E  4D                 	db	77	;'M'
   460  00FC6F  45                 	db	69	;'E'
   461  00FC70  4E                 	db	78	;'N'
   462  00FC71  55                 	db	85	;'U'
   463  00FC72  00                 	db	0
   464  00FC73                     STR_39:
   465  00FC73  4F                 	db	79	;'O'
   466  00FC74  50                 	db	80	;'P'
   467  00FC75  2E                 	db	46
   468  00FC76  20                 	db	32
   469  00FC77  43                 	db	67	;'C'
   470  00FC78  4F                 	db	79	;'O'
   471  00FC79  4D                 	db	77	;'M'
   472  00FC7A  50                 	db	80	;'P'
   473  00FC7B  4C                 	db	76	;'L'
   474  00FC7C  45                 	db	69	;'E'
   475  00FC7D  54                 	db	84	;'T'
   476  00FC7E  45                 	db	69	;'E'
   477  00FC7F  00                 	db	0
   478  00FC80                     STR_41:
   479  00FC80  28                 	db	40
   480  00FC81  31                 	db	49	;'1'
   481  00FC82  29                 	db	41
   482  00FC83  20                 	db	32
   483  00FC84  56                 	db	86	;'V'
   484  00FC85  49                 	db	73	;'I'
   485  00FC86  45                 	db	69	;'E'
   486  00FC87  57                 	db	87	;'W'
   487  00FC88  20                 	db	32
   488  00FC89  4C                 	db	76	;'L'
   489  00FC8A  4F                 	db	79	;'O'
   490  00FC8B  47                 	db	71	;'G'
   491  00FC8C  00                 	db	0
   492  00FC8D                     STR_35:
   493  00FC8D  4F                 	db	79	;'O'
   494  00FC8E  50                 	db	80	;'P'
   495  00FC8F  45                 	db	69	;'E'
   496  00FC90  52                 	db	82	;'R'
   497  00FC91  41                 	db	65	;'A'
   498  00FC92  54                 	db	84	;'T'
   499  00FC93  49                 	db	73	;'I'
   500  00FC94  4F                 	db	79	;'O'
   501  00FC95  4E                 	db	78	;'N'
   502  00FC96  20                 	db	32
   503  00FC97  49                 	db	73	;'I'
   504  00FC98  4E                 	db	78	;'N'
   505  00FC99  00                 	db	0
   506  00FC9A  45                 	db	69	;'E'
   507  00FC9B  45                 	db	69	;'E'
   508  00FC9C  50                 	db	80	;'P'
   509  00FC9D  52                 	db	82	;'R'
   510  00FC9E  4F                 	db	79	;'O'
   511  00FC9F  4D                 	db	77	;'M'
   512  00FCA0  2D                 	db	45
   513  00FCA1  44                 	db	68	;'D'
   514  00FCA2  65                 	db	101	;'e'
   515  00FCA3  6D                 	db	109	;'m'
   516  00FCA4  6F                 	db	111	;'o'
   517  00FCA5  6E                 	db	110	;'n'
   518  00FCA6  00                 	db	0
   519  00FCA7                     STR_47:
   520  00FCA7  53                 	db	83	;'S'
   521  00FCA8  45                 	db	69	;'E'
   522  00FCA9  4C                 	db	76	;'L'
   523  00FCAA  45                 	db	69	;'E'
   524  00FCAB  43                 	db	67	;'C'
   525  00FCAC  54                 	db	84	;'T'
   526  00FCAD  20                 	db	32
   527  00FCAE  4C                 	db	76	;'L'
   528  00FCAF  4F                 	db	79	;'O'
   529  00FCB0  47                 	db	71	;'G'
   530  00FCB1  00                 	db	0
   531  00FCB2  77                 	db	119	;'w'
   532  00FCB3  72                 	db	114	;'r'
   533  00FCB4  6F                 	db	111	;'o'
   534  00FCB5  74                 	db	116	;'t'
   535  00FCB6  65                 	db	101	;'e'
   536  00FCB7  3A                 	db	58	;':'
   537  00FCB8  20                 	db	32
   538  00FCB9  25                 	db	37
   539  00FCBA  63                 	db	99	;'c'
   540  00FCBB  6E                 	db	110	;'n'
   541  00FCBC  00                 	db	0
   542  00FCBD  72                 	db	114	;'r'
   543  00FCBE  65                 	db	101	;'e'
   544  00FCBF  61                 	db	97	;'a'
   545  00FCC0  64                 	db	100	;'d'
   546  00FCC1  3A                 	db	58	;':'
   547  00FCC2  20                 	db	32
   548  00FCC3  25                 	db	37
   549  00FCC4  63                 	db	99	;'c'
   550  00FCC5  6E                 	db	110	;'n'
   551  00FCC6  6E                 	db	110	;'n'
   552  00FCC7  00                 	db	0
   553  00FCC8                     STR_2:
   554  00FCC8  4F                 	db	79	;'O'
   555  00FCC9  50                 	db	80	;'P'
   556  00FCCA  2E                 	db	46
   557  00FCCB  20                 	db	32
   558  00FCCC  54                 	db	84	;'T'
   559  00FCCD  49                 	db	73	;'I'
   560  00FCCE  4D                 	db	77	;'M'
   561  00FCCF  45                 	db	69	;'E'
   562  00FCD0  20                 	db	32
   563  00FCD1  00                 	db	0
   564  00FCD2                     STR_23:
   565  00FCD2  54                 	db	84	;'T'
   566  00FCD3  49                 	db	73	;'I'
   567  00FCD4  52                 	db	82	;'R'
   568  00FCD5  45                 	db	69	;'E'
   569  00FCD6  20                 	db	32
   570  00FCD7  44                 	db	68	;'D'
   571  00FCD8  52                 	db	82	;'R'
   572  00FCD9  4F                 	db	79	;'O'
   573  00FCDA  50                 	db	80	;'P'
   574  00FCDB  00                 	db	0
   575  00FCDC                     STR_31:
   576  00FCDC  28                 	db	40
   577  00FCDD  31                 	db	49	;'1'
   578  00FCDE  29                 	db	41
   579  00FCDF  20                 	db	32
   580  00FCE0  53                 	db	83	;'S'
   581  00FCE1  54                 	db	84	;'T'
   582  00FCE2  41                 	db	65	;'A'
   583  00FCE3  52                 	db	82	;'R'
   584  00FCE4  54                 	db	84	;'T'
   585  00FCE5  00                 	db	0
   586  00FCE6  72                 	db	114	;'r'
   587  00FCE7  65                 	db	101	;'e'
   588  00FCE8  61                 	db	97	;'a'
   589  00FCE9  64                 	db	100	;'d'
   590  00FCEA  3A                 	db	58	;':'
   591  00FCEB  20                 	db	32
   592  00FCEC  25                 	db	37
   593  00FCED  63                 	db	99	;'c'
   594  00FCEE  6E                 	db	110	;'n'
   595  00FCEF  00                 	db	0
   596  00FCF0                     STR_27:
   597  00FCF0  57                 	db	87	;'W'
   598  00FCF1  45                 	db	69	;'E'
   599  00FCF2  4C                 	db	76	;'L'
   600  00FCF3  43                 	db	67	;'C'
   601  00FCF4  4F                 	db	79	;'O'
   602  00FCF5  4D                 	db	77	;'M'
   603  00FCF6  45                 	db	69	;'E'
   604  00FCF7  20                 	db	32
   605  00FCF8  00                 	db	0
   606  00FCF9                     STR_45:
   607  00FCF9  53                 	db	83	;'S'
   608  00FCFA  41                 	db	65	;'A'
   609  00FCFB  56                 	db	86	;'V'
   610  00FCFC  45                 	db	69	;'E'
   611  00FCFD  20                 	db	32
   612  00FCFE  4C                 	db	76	;'L'
   613  00FCFF  4F                 	db	79	;'O'
   614  00FD00  47                 	db	71	;'G'
   615  00FD01  00                 	db	0
   616  00FD02                     STR_37:
   617  00FD02  50                 	db	80	;'P'
   618  00FD03  52                 	db	82	;'R'
   619  00FD04  4F                 	db	79	;'O'
   620  00FD05  47                 	db	71	;'G'
   621  00FD06  52                 	db	82	;'R'
   622  00FD07  45                 	db	69	;'E'
   623  00FD08  53                 	db	83	;'S'
   624  00FD09  53                 	db	83	;'S'
   625  00FD0A  00                 	db	0
   626  00FD0B                     STR_10:
   627  00FD0B  25                 	db	37
   628  00FD0C  73                 	db	115	;'s'
   629  00FD0D  25                 	db	37
   630  00FD0E  64                 	db	100	;'d'
   631  00FD0F  25                 	db	37
   632  00FD10  73                 	db	115	;'s'
   633  00FD11  25                 	db	37
   634  00FD12  64                 	db	100	;'d'
   635  00FD13  00                 	db	0
   636  00FD14                     STR_1:
   637  00FD14  25                 	db	37
   638  00FD15  73                 	db	115	;'s'
   639  00FD16  25                 	db	37
   640  00FD17  64                 	db	100	;'d'
   641  00FD18  25                 	db	37
   642  00FD19  73                 	db	115	;'s'
   643  00FD1A  00                 	db	0
   644  00FD1B                     STR_11:
   645  00FD1B  50                 	db	80	;'P'
   646  00FD1C  4F                 	db	79	;'O'
   647  00FD1D  4C                 	db	76	;'L'
   648  00FD1E  45                 	db	69	;'E'
   649  00FD1F  20                 	db	32
   650  00FD20  00                 	db	0
   651  00FD21                     STR_22:
   652  00FD21  41                 	db	65	;'A'
   653  00FD22  3A                 	db	58	;':'
   654  00FD23  20                 	db	32
   655  00FD24  25                 	db	37
   656  00FD25  64                 	db	100	;'d'
   657  00FD26  00                 	db	0
   658  00FD27                     STR_21:
   659  00FD27  42                 	db	66	;'B'
   660  00FD28  3A                 	db	58	;':'
   661  00FD29  20                 	db	32
   662  00FD2A  25                 	db	37
   663  00FD2B  64                 	db	100	;'d'
   664  00FD2C  00                 	db	0
   665  00FD2D                     STR_12:
   666  00FD2D  2F                 	db	47
   667  00FD2E  00                 	db	0
   668  0000                     
   669                           ; #config settings
   670  00FD2F  00                 	db	0	; dummy byte at the end
   671  0000                     
   672                           	psect	cinit
   673  002C86                     __pcinit:
   674                           	opt callstack 0
   675  002C86                     start_initialization:
   676                           	opt callstack 0
   677  002C86                     __initialization:
   678                           	opt callstack 0
   679                           
   680                           ; Initialize objects allocated to BANK0 (8 bytes)
   681                           ; load TBLPTR registers with __pidataBANK0
   682  002C86  0EDA               	movlw	low __pidataBANK0
   683  002C88  6EF6               	movwf	tblptrl,c
   684  002C8A  0E34               	movlw	high __pidataBANK0
   685  002C8C  6EF7               	movwf	tblptrh,c
   686  002C8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   687  002C90  6EF8               	movwf	tblptru,c
   688  002C92  EE00  F0E9         	lfsr	0,__pdataBANK0
   689  002C96  EE10 F008          	lfsr	1,8
   690  002C9A                     copy_data0:
   691  002C9A  0009               	tblrd		*+
   692  002C9C  CFF5 FFEE          	movff	tablat,postinc0
   693  002CA0  50E5               	movf	postdec1,w,c
   694  002CA2  50E1               	movf	fsr1l,w,c
   695  002CA4  E1FA               	bnz	copy_data0
   696                           
   697                           ; Initialize objects allocated to COMRAM (1 bytes)
   698                           ; load TBLPTR registers with __pidataCOMRAM
   699  002CA6  0EF2               	movlw	low __pidataCOMRAM
   700  002CA8  6EF6               	movwf	tblptrl,c
   701  002CAA  0E34               	movlw	high __pidataCOMRAM
   702  002CAC  6EF7               	movwf	tblptrh,c
   703  002CAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   704  002CB0  6EF8               	movwf	tblptru,c
   705  002CB2  0009               	tblrd		*+	;fetch initializer
   706  002CB4  CFF5 F079          	movff	tablat,__pdataCOMRAM
   707                           
   708                           ; Clear objects allocated to BIGRAM (330 bytes)
   709  002CB8  EE01  F030         	lfsr	0,__pbssBIGRAM
   710  002CBC  EE11 F04A          	lfsr	1,330
   711  002CC0                     clear_0:
   712  002CC0  6AEE               	clrf	postinc0,c
   713  002CC2  50E5               	movf	postdec1,w,c
   714  002CC4  50E1               	movf	fsr1l,w,c
   715  002CC6  E1FC               	bnz	clear_0
   716  002CC8  50E2               	movf	fsr1h,w,c
   717  002CCA  E1FA               	bnz	clear_0
   718                           
   719                           ; Clear objects allocated to BANK1 (32 bytes)
   720  002CCC  EE01  F000         	lfsr	0,__pbssBANK1
   721  002CD0  0E20               	movlw	32
   722  002CD2                     clear_1:
   723  002CD2  6AEE               	clrf	postinc0,c
   724  002CD4  06E8               	decf	wreg,f,c
   725  002CD6  E1FD               	bnz	clear_1
   726                           
   727                           ; Clear objects allocated to BANK0 (19 bytes)
   728  002CD8  EE00  F0D6         	lfsr	0,__pbssBANK0
   729  002CDC  0E13               	movlw	19
   730  002CDE                     clear_2:
   731  002CDE  6AEE               	clrf	postinc0,c
   732  002CE0  06E8               	decf	wreg,f,c
   733  002CE2  E1FD               	bnz	clear_2
   734                           
   735                           ; Clear objects allocated to COMRAM (4 bytes)
   736  002CE4  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   737  002CE6  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   738  002CE8  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   739  002CEA  6A75               	clrf	__pbssCOMRAM& (0+255),c
   740  002CEC                     end_of_initialization:
   741                           	opt callstack 0
   742  002CEC                     __end_of__initialization:
   743                           	opt callstack 0
   744  002CEC  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   745  002CEE  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   746  002CF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   747  002CF2  6EF8               	movwf	tblptru,c
   748  002CF4  0100               	movlb	0
   749  002CF6  EF4B  F002         	goto	_main	;jump to C main() function
   750                           
   751                           	psect	bssCOMRAM
   752  000075                     __pbssCOMRAM:
   753                           	opt callstack 0
   754  000075                     _millisecondsMeasured:
   755                           	opt callstack 0
   756  000075                     	ds	2
   757  000077                     _motorADistance:
   758                           	opt callstack 0
   759  000077                     	ds	2
   760                           
   761                           	psect	dataCOMRAM
   762  000079                     __pdataCOMRAM:
   763                           	opt callstack 0
   764  000079                     _motorBDirection:
   765                           	opt callstack 0
   766  000079                     	ds	1
   767                           
   768                           	psect	bssBANK0
   769  0000D6                     __pbssBANK0:
   770                           	opt callstack 0
   771  0000D6                     	ds	4
   772  0000DA                     _nout:
   773                           	opt callstack 0
   774  0000DA                     	ds	2
   775  0000DC                     _width:
   776                           	opt callstack 0
   777  0000DC                     	ds	2
   778  0000DE                     _prec:
   779                           	opt callstack 0
   780  0000DE                     	ds	2
   781  0000E0                     _flags:
   782                           	opt callstack 0
   783  0000E0                     	ds	2
   784  0000E2                     _motorBDistance:
   785                           	opt callstack 0
   786  0000E2                     	ds	2
   787  0000E4                     _encoderAInterruptLast:
   788                           	opt callstack 0
   789  0000E4                     	ds	1
   790  0000E5                     _encoderBInterruptLast:
   791                           	opt callstack 0
   792  0000E5                     	ds	1
   793  0000E6                     _bottomBreakBeamTriggeredChange:
   794                           	opt callstack 0
   795  0000E6                     	ds	1
   796  0000E7                     _topBreakBeamTriggeredChange:
   797                           	opt callstack 0
   798  0000E7                     	ds	1
   799  0000E8                     _keyPressed:
   800                           	opt callstack 0
   801  0000E8                     	ds	1
   802                           
   803                           	psect	dataBANK0
   804  0000E9                     __pdataBANK0:
   805                           	opt callstack 0
   806  0000E9                     stoa@F1144:
   807                           	opt callstack 0
   808  0000E9                     	ds	7
   809  0000F0                     _motorADirection:
   810                           	opt callstack 0
   811  0000F0                     	ds	1
   812                           
   813                           	psect	bssBANK1
   814  000100                     __pbssBANK1:
   815                           	opt callstack 0
   816  000100                     _dbuf:
   817                           	opt callstack 0
   818  000100                     	ds	32
   819                           
   820                           	psect	bssBIGRAM
   821  000130                     __pbssBIGRAM:
   822                           	opt callstack 0
   823  000130                     _logs:
   824                           	opt callstack 0
   825  000130                     	ds	330
   826                           
   827                           	psect	cstackBANK1
   828  000120                     __pcstackBANK1:
   829                           	opt callstack 0
   830  000120                     main@time:
   831                           	opt callstack 0
   832                           
   833                           ; 7 bytes @ 0x0
   834  000120                     	ds	7
   835  000127                     main@tick:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x7
   839  000127                     	ds	4
   840  00012B                     main@keypress:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0xB
   844  00012B                     	ds	1
   845  00012C                     main@i:
   846                           	opt callstack 0
   847                           
   848                           ; 1 bytes @ 0xC
   849  00012C                     	ds	1
   850  00012D                     main@currentLogState:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0xD
   854  00012D                     	ds	1
   855  00012E                     main@currentRobotState:
   856                           	opt callstack 0
   857                           
   858                           ; 1 bytes @ 0xE
   859  00012E                     	ds	1
   860  00012F                     main@keyValue:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0xF
   864  00012F                     	ds	1
   865                           
   866                           	psect	cstackBANK0
   867  000080                     __pcstackBANK0:
   868                           	opt callstack 0
   869  000080                     ?_printf:
   870                           	opt callstack 0
   871  000080                     printf@fmt:
   872                           	opt callstack 0
   873  000080                     _setMotorSpeeds$2188:
   874                           	opt callstack 0
   875                           
   876                           ; 4 bytes @ 0x0
   877  000080                     	ds	4
   878  000084                     _setMotorSpeeds$2189:
   879                           	opt callstack 0
   880                           
   881                           ; 4 bytes @ 0x4
   882  000084                     	ds	4
   883  000088                     errorCorrectedMove@goalSpeed:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x8
   887  000088                     	ds	2
   888  00008A                     errorCorrectedMove@turnRatio:
   889                           	opt callstack 0
   890                           
   891                           ; 4 bytes @ 0xA
   892  00008A                     	ds	2
   893  00008C                     printf@ap:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0xC
   897  00008C                     	ds	2
   898  00008E                     doDisplayLog@logNumber:
   899                           	opt callstack 0
   900  00008E                     errorCorrectedMove@motorAStartDistance:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0xE
   904  00008E                     	ds	2
   905  000090                     ??_doDisplayLog:
   906  000090                     errorCorrectedMove@motorBStartDistance:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x10
   910  000090                     	ds	2
   911  000092                     errorCorrectedMove@correctionConstant:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x12
   915  000092                     	ds	2
   916  000094                     doDisplayLog@keypress:
   917                           	opt callstack 0
   918                           
   919                           ; 1 bytes @ 0x14
   920  000094                     	ds	1
   921  000095                     doDisplayLog@currentDisplayState:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x15
   925  000095                     	ds	1
   926  000096                     ??_errorCorrectedMove:
   927  000096                     doDisplayLog@keyValue:
   928                           	opt callstack 0
   929                           
   930                           ; 1 bytes @ 0x16
   931  000096                     	ds	1
   932  000097                     doDisplayLog@currentPole:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x17
   936  000097                     	ds	2
   937  000099                     _doDisplayLog$2186:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x19
   941  000099                     	ds	1
   942  00009A                     errorCorrectedMove@error:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x1A
   946  00009A                     	ds	2
   947  00009C                     errorCorrectedMove@ASpeed:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x1C
   951  00009C                     	ds	2
   952  00009E                     errorCorrectedMove@BSpeed:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x1E
   956  00009E                     	ds	2
   957  0000A0                     ??_doOperation:
   958                           
   959                           ; 1 bytes @ 0x20
   960  0000A0                     	ds	3
   961  0000A3                     doOperation@PIDData:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x23
   965  0000A3                     	ds	20
   966  0000B7                     doOperation@send:
   967                           	opt callstack 0
   968                           
   969                           ; 1 bytes @ 0x37
   970  0000B7                     	ds	1
   971  0000B8                     doOperation@badCount:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x38
   975  0000B8                     	ds	2
   976  0000BA                     doOperation@badCountBot:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x3A
   980  0000BA                     	ds	2
   981  0000BC                     doOperation@motorAStartDistance:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x3C
   985  0000BC                     	ds	2
   986  0000BE                     doOperation@motorBStartDistance:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x3E
   990  0000BE                     	ds	2
   991  0000C0                     doOperation@tiresOnPole:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x40
   995  0000C0                     	ds	2
   996  0000C2                     doOperation@timeStart:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x42
  1000  0000C2                     	ds	2
  1001  0000C4                     doOperation@isDoneDrop:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x44
  1005  0000C4                     	ds	1
  1006  0000C5                     doOperation@counted:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x45
  1010  0000C5                     	ds	2
  1011  0000C7                     doOperation@millisecondsMeasuredOld:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x47
  1015  0000C7                     	ds	2
  1016  0000C9                     doOperation@tiresToDrop:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x49
  1020  0000C9                     	ds	2
  1021  0000CB                     doOperation@topLaserStatePrev:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x4B
  1025  0000CB                     	ds	1
  1026  0000CC                     doOperation@bottomLaserStatePrev:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x4C
  1030  0000CC                     	ds	1
  1031  0000CD                     doOperation@timeInOperation:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x4D
  1035  0000CD                     	ds	2
  1036  0000CF                     doOperation@i:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x4F
  1040  0000CF                     	ds	2
  1041  0000D1                     doOperation@currentOperationState:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x51
  1045  0000D1                     	ds	1
  1046  0000D2                     doOperation@bottomLaserState:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x52
  1050  0000D2                     	ds	1
  1051  0000D3                     doOperation@topLaserState:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x53
  1055  0000D3                     	ds	1
  1056  0000D4                     ??_main:
  1057                           
  1058                           ; 1 bytes @ 0x54
  1059  0000D4                     	ds	2
  1060                           
  1061                           	psect	cstackCOMRAM
  1062  000001                     __pcstackCOMRAM:
  1063                           	opt callstack 0
  1064  000001                     ??_updateMotorBEncoder:
  1065  000001                     ??_updateMotorAEncoder:
  1066  000001                     
  1067                           ; 1 bytes @ 0x0
  1068  000001                     	ds	1
  1069  000002                     updateMotorBEncoder@interruptPinState:
  1070                           	opt callstack 0
  1071  000002                     updateMotorAEncoder@interruptPinState:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1
  1075  000002                     	ds	2
  1076  000004                     updateMotorBEncoder@directionPin:
  1077                           	opt callstack 0
  1078  000004                     updateMotorAEncoder@directionPin:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x3
  1082  000004                     	ds	2
  1083  000006                     ??_I2C_Master_Wait:
  1084  000006                     ?_strlen:
  1085                           	opt callstack 0
  1086  000006                     ?_isupper:
  1087                           	opt callstack 0
  1088  000006                     ?_isalpha:
  1089                           	opt callstack 0
  1090  000006                     ?_isdigit:
  1091                           	opt callstack 0
  1092  000006                     ?_isspace:
  1093                           	opt callstack 0
  1094  000006                     ?_islower:
  1095                           	opt callstack 0
  1096  000006                     ?___wmul:
  1097                           	opt callstack 0
  1098  000006                     ?___awmod:
  1099                           	opt callstack 0
  1100  000006                     ?___lldiv:
  1101                           	opt callstack 0
  1102  000006                     ?___llmod:
  1103                           	opt callstack 0
  1104  000006                     ?___xxtofl:
  1105                           	opt callstack 0
  1106  000006                     ?___aodiv:
  1107                           	opt callstack 0
  1108  000006                     ?___aomod:
  1109                           	opt callstack 0
  1110  000006                     pulse_e@interruptState:
  1111                           	opt callstack 0
  1112  000006                     replaceOldLog@i:
  1113                           	opt callstack 0
  1114  000006                     ___wmul@multiplier:
  1115                           	opt callstack 0
  1116  000006                     ___awmod@dividend:
  1117                           	opt callstack 0
  1118  000006                     isalpha@c:
  1119                           	opt callstack 0
  1120  000006                     isdigit@c:
  1121                           	opt callstack 0
  1122  000006                     isspace@c:
  1123                           	opt callstack 0
  1124  000006                     isupper@c:
  1125                           	opt callstack 0
  1126  000006                     strlen@s:
  1127                           	opt callstack 0
  1128  000006                     islower@c:
  1129                           	opt callstack 0
  1130  000006                     ___lldiv@dividend:
  1131                           	opt callstack 0
  1132  000006                     ___flge@ff1:
  1133                           	opt callstack 0
  1134  000006                     ___llmod@dividend:
  1135                           	opt callstack 0
  1136  000006                     ___xxtofl@val:
  1137                           	opt callstack 0
  1138  000006                     ___aodiv@dividend:
  1139                           	opt callstack 0
  1140  000006                     ___aomod@dividend:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x5
  1144  000006                     	ds	1
  1145  000007                     send_nibble@data:
  1146                           	opt callstack 0
  1147  000007                     I2C_Master_Read@ackBit:
  1148                           	opt callstack 0
  1149  000007                     I2C_Master_Write@byteToWrite:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x6
  1153  000007                     	ds	1
  1154  000008                     ??_isupper:
  1155  000008                     ??_isalpha:
  1156  000008                     ??_isdigit:
  1157  000008                     ??_isspace:
  1158  000008                     ??_islower:
  1159  000008                     send_byte@data:
  1160                           	opt callstack 0
  1161  000008                     I2C_Master_Read@receivedByte:
  1162                           	opt callstack 0
  1163  000008                     ___wmul@multiplicand:
  1164                           	opt callstack 0
  1165  000008                     ___awmod@divisor:
  1166                           	opt callstack 0
  1167  000008                     strlen@a:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x7
  1171  000008                     	ds	1
  1172  000009                     requestIsTireDropDone@data:
  1173                           	opt callstack 0
  1174  000009                     lcdInst@data:
  1175                           	opt callstack 0
  1176  000009                     putch@data:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x8
  1180  000009                     	ds	1
  1181  00000A                     ??_initLCD:
  1182  00000A                     ??___xxtofl:
  1183  00000A                     ___awmod@counter:
  1184                           	opt callstack 0
  1185  00000A                     ___wmul@product:
  1186                           	opt callstack 0
  1187  00000A                     fputc@c:
  1188                           	opt callstack 0
  1189  00000A                     ___lldiv@divisor:
  1190                           	opt callstack 0
  1191  00000A                     ___flge@ff2:
  1192                           	opt callstack 0
  1193  00000A                     ___llmod@divisor:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x9
  1197  00000A                     	ds	1
  1198  00000B                     ___awmod@sign:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 1 bytes @ 0xA
  1202  00000B                     	ds	1
  1203  00000C                     ?_toupper:
  1204                           	opt callstack 0
  1205  00000C                     _isspace$1828:
  1206                           	opt callstack 0
  1207  00000C                     fputc@fp:
  1208                           	opt callstack 0
  1209  00000C                     toupper@c:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0xB
  1213  00000C                     	ds	1
  1214  00000D                     ?_atoi:
  1215                           	opt callstack 0
  1216  00000D                     atoi@s:
  1217                           	opt callstack 0
  1218                           
  1219                           ; 2 bytes @ 0xC
  1220  00000D                     	ds	1
  1221  00000E                     ??_fputc:
  1222  00000E                     ??_toupper:
  1223  00000E                     ??___flge:
  1224  00000E                     ___llmod@counter:
  1225                           	opt callstack 0
  1226  00000E                     ___xxtofl@sign:
  1227                           	opt callstack 0
  1228  00000E                     ___lldiv@quotient:
  1229                           	opt callstack 0
  1230  00000E                     ___aodiv@divisor:
  1231                           	opt callstack 0
  1232  00000E                     ___aomod@divisor:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 8 bytes @ 0xD
  1236  00000E                     	ds	1
  1237  00000F                     ??_atoi:
  1238  00000F                     ___xxtofl@exp:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 1 bytes @ 0xE
  1242  00000F                     	ds	1
  1243  000010                     ___xxtofl@arg:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 4 bytes @ 0xF
  1247  000010                     	ds	2
  1248  000012                     ___lldiv@counter:
  1249                           	opt callstack 0
  1250  000012                     _toupper$1892:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x11
  1254  000012                     	ds	1
  1255  000013                     ?_stoa:
  1256                           	opt callstack 0
  1257  000013                     stoa@fp:
  1258                           	opt callstack 0
  1259  000013                     atoi@neg:
  1260                           	opt callstack 0
  1261  000013                     fputs@s:
  1262                           	opt callstack 0
  1263  000013                     I2C_Master_Init@clockFreq:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x12
  1267  000013                     	ds	1
  1268  000014                     ?___flmul:
  1269                           	opt callstack 0
  1270  000014                     ___flmul@b:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x13
  1274  000014                     	ds	1
  1275  000015                     stoa@s:
  1276                           	opt callstack 0
  1277  000015                     _atoi$1801:
  1278                           	opt callstack 0
  1279  000015                     fputs@fp:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x14
  1283  000015                     	ds	1
  1284  000016                     ___aodiv@counter:
  1285                           	opt callstack 0
  1286  000016                     ___aomod@counter:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x15
  1290  000016                     	ds	1
  1291  000017                     ??_I2C_Master_Init:
  1292  000017                     ??_stoa:
  1293  000017                     ___aodiv@sign:
  1294                           	opt callstack 0
  1295  000017                     ___aomod@sign:
  1296                           	opt callstack 0
  1297  000017                     fputs@c:
  1298                           	opt callstack 0
  1299  000017                     _atoi$1803:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x16
  1303  000017                     	ds	1
  1304  000018                     ?_abs:
  1305                           	opt callstack 0
  1306  000018                     abs@a:
  1307                           	opt callstack 0
  1308  000018                     fputs@i:
  1309                           	opt callstack 0
  1310  000018                     ___flmul@a:
  1311                           	opt callstack 0
  1312  000018                     stoa@nuls:
  1313                           	opt callstack 0
  1314  000018                     ___aodiv@quotient:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 8 bytes @ 0x17
  1318  000018                     	ds	1
  1319  000019                     _atoi$1802:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x18
  1323  000019                     	ds	1
  1324  00001A                     ??_abs:
  1325  00001A                     ?_pad:
  1326                           	opt callstack 0
  1327  00001A                     pad@fp:
  1328                           	opt callstack 0
  1329  00001A                     atoi@n:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x19
  1333  00001A                     	ds	1
  1334  00001B                     
  1335                           ; 1 bytes @ 0x1A
  1336  00001B                     	ds	1
  1337  00001C                     ??___flmul:
  1338  00001C                     ?_tirePositioning:
  1339                           	opt callstack 0
  1340  00001C                     tirePositioning@maxOperationTime:
  1341                           	opt callstack 0
  1342  00001C                     pad@buf:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x1B
  1346  00001C                     	ds	2
  1347  00001E                     ??_tirePositioning:
  1348  00001E                     pad@p:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x1D
  1352  00001E                     	ds	1
  1353  00001F                     tirePositioning@startDistanceTop:
  1354                           	opt callstack 0
  1355  00001F                     stoa@i:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359  00001F                     	ds	1
  1360  000020                     ??_pad:
  1361  000020                     ___flmul@sign:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x1F
  1365  000020                     	ds	1
  1366  000021                     ___flmul@aexp:
  1367                           	opt callstack 0
  1368  000021                     tirePositioning@startDistanceBottom:
  1369                           	opt callstack 0
  1370  000021                     pad@i:
  1371                           	opt callstack 0
  1372  000021                     stoa@w:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x20
  1376  000021                     	ds	1
  1377  000022                     ___flmul@grs:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 4 bytes @ 0x21
  1381  000022                     	ds	1
  1382  000023                     tirePositioning@topPreviousState:
  1383                           	opt callstack 0
  1384  000023                     pad@w:
  1385                           	opt callstack 0
  1386  000023                     stoa@cp:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x22
  1390  000023                     	ds	2
  1391  000025                     ?_ctoa:
  1392                           	opt callstack 0
  1393  000025                     ?_dtoa:
  1394                           	opt callstack 0
  1395  000025                     ?_xtoa:
  1396                           	opt callstack 0
  1397  000025                     tirePositioning@bottomPreviousState:
  1398                           	opt callstack 0
  1399  000025                     ctoa@fp:
  1400                           	opt callstack 0
  1401  000025                     dtoa@fp:
  1402                           	opt callstack 0
  1403  000025                     stoa@p:
  1404                           	opt callstack 0
  1405  000025                     xtoa@fp:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x24
  1409  000025                     	ds	1
  1410  000026                     ___flmul@bexp:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x25
  1414  000026                     	ds	1
  1415  000027                     ctoa@c:
  1416                           	opt callstack 0
  1417  000027                     tirePositioning@distanceRecordedTop:
  1418                           	opt callstack 0
  1419  000027                     stoa@l:
  1420                           	opt callstack 0
  1421  000027                     ___flmul@prod:
  1422                           	opt callstack 0
  1423  000027                     dtoa@d:
  1424                           	opt callstack 0
  1425  000027                     xtoa@d:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 8 bytes @ 0x26
  1429  000027                     	ds	1
  1430  000028                     ctoa@w:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x27
  1434  000028                     	ds	1
  1435  000029                     tirePositioning@distanceRecordedBottom:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x28
  1439  000029                     	ds	2
  1440  00002B                     tirePositioning@topBreakbeam:
  1441                           	opt callstack 0
  1442  00002B                     ___flmul@temp:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x2A
  1446  00002B                     	ds	2
  1447  00002D                     ?___fladd:
  1448                           	opt callstack 0
  1449  00002D                     ?___fldiv:
  1450                           	opt callstack 0
  1451  00002D                     tirePositioning@bottomBreakbeam:
  1452                           	opt callstack 0
  1453  00002D                     ___fladd@b:
  1454                           	opt callstack 0
  1455  00002D                     ___fldiv@b:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x2C
  1459  00002D                     	ds	2
  1460  00002F                     ??_dtoa:
  1461  00002F                     xtoa@x:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 1 bytes @ 0x2E
  1465  00002F                     	ds	1
  1466  000030                     ??_xtoa:
  1467                           
  1468                           ; 1 bytes @ 0x2F
  1469  000030                     	ds	1
  1470  000031                     ___fladd@a:
  1471                           	opt callstack 0
  1472  000031                     ___fldiv@a:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 4 bytes @ 0x30
  1476  000031                     	ds	4
  1477  000035                     ??___fladd:
  1478  000035                     ??___fldiv:
  1479                           
  1480                           ; 1 bytes @ 0x34
  1481  000035                     	ds	2
  1482  000037                     _dtoa$1305:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x36
  1486  000037                     	ds	1
  1487  000038                     _xtoa$1326:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x37
  1491  000038                     	ds	1
  1492  000039                     ___fladd@signs:
  1493                           	opt callstack 0
  1494  000039                     dtoa@p:
  1495                           	opt callstack 0
  1496  000039                     ___fldiv@rem:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x38
  1500  000039                     	ds	1
  1501  00003A                     ___fladd@aexp:
  1502                           	opt callstack 0
  1503  00003A                     _xtoa$1327:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x39
  1507  00003A                     	ds	1
  1508  00003B                     ___fladd@bexp:
  1509                           	opt callstack 0
  1510  00003B                     dtoa@w:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x3A
  1514  00003B                     	ds	1
  1515  00003C                     ___fladd@grs:
  1516                           	opt callstack 0
  1517  00003C                     xtoa@p:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x3B
  1521  00003C                     	ds	1
  1522  00003D                     ___fldiv@sign:
  1523                           	opt callstack 0
  1524  00003D                     dtoa@s:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x3C
  1528  00003D                     	ds	1
  1529  00003E                     xtoa@w:
  1530                           	opt callstack 0
  1531  00003E                     ___fldiv@new_exp:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x3D
  1535  00003E                     	ds	1
  1536  00003F                     dtoa@n:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 8 bytes @ 0x3E
  1540  00003F                     	ds	1
  1541  000040                     ___fldiv@grs:
  1542                           	opt callstack 0
  1543  000040                     xtoa@n:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 8 bytes @ 0x3F
  1547  000040                     	ds	4
  1548  000044                     ___fldiv@bexp:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x43
  1552  000044                     	ds	1
  1553  000045                     ___fldiv@aexp:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 1 bytes @ 0x44
  1557  000045                     	ds	1
  1558  000046                     ?___flsub:
  1559                           	opt callstack 0
  1560  000046                     ___flsub@b:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x45
  1564  000046                     	ds	1
  1565  000047                     dtoa@i:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x46
  1569  000047                     	ds	1
  1570  000048                     xtoa@i:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x47
  1574  000048                     	ds	2
  1575  00004A                     xtoa@c:
  1576                           	opt callstack 0
  1577  00004A                     ___flsub@a:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x49
  1581  00004A                     	ds	2
  1582  00004C                     ?_vfpfcnvrt:
  1583                           	opt callstack 0
  1584  00004C                     vfpfcnvrt@fp:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x4B
  1588  00004C                     	ds	2
  1589  00004E                     ?___fltol:
  1590                           	opt callstack 0
  1591  00004E                     vfpfcnvrt@fmt:
  1592                           	opt callstack 0
  1593  00004E                     ___fltol@f1:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x4D
  1597  00004E                     	ds	2
  1598  000050                     vfpfcnvrt@ap:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x4F
  1602  000050                     	ds	2
  1603  000052                     ??_vfpfcnvrt:
  1604  000052                     ??___fltol:
  1605                           
  1606                           ; 1 bytes @ 0x51
  1607  000052                     	ds	4
  1608  000056                     ___fltol@sign1:
  1609                           	opt callstack 0
  1610  000056                     vfpfcnvrt@ll:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 8 bytes @ 0x55
  1614  000056                     	ds	1
  1615  000057                     ___fltol@exp1:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 1 bytes @ 0x56
  1619  000057                     	ds	1
  1620  000058                     set_pwm_duty_cycle@dutyA:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 4 bytes @ 0x57
  1624  000058                     	ds	4
  1625  00005C                     set_pwm_duty_cycle@dutyB:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x5B
  1629  00005C                     	ds	2
  1630  00005E                     vfpfcnvrt@llu:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 8 bytes @ 0x5D
  1634  00005E                     	ds	2
  1635  000060                     ??_set_pwm_duty_cycle:
  1636                           
  1637                           ; 1 bytes @ 0x5F
  1638  000060                     	ds	2
  1639  000062                     set_pwm_duty_cycle@max_duty_val:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x61
  1643  000062                     	ds	2
  1644  000064                     set_pwm_duty_cycle@duty_valA:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 2 bytes @ 0x63
  1648  000064                     	ds	2
  1649  000066                     set_pwm_duty_cycle@duty_valB:
  1650                           	opt callstack 0
  1651  000066                     vfpfcnvrt@cp:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x65
  1655  000066                     	ds	2
  1656  000068                     vfpfcnvrt@done:
  1657                           	opt callstack 0
  1658  000068                     _set_pwm_duty_cycle$2187:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x67
  1662  000068                     	ds	2
  1663  00006A                     _vfpfcnvrt$1341:
  1664                           	opt callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x69
  1667  00006A                     	ds	2
  1668  00006C                     vfpfcnvrt@c:
  1669                           	opt callstack 0
  1670  00006C                     setMotorSpeeds@motorASpeed:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x6B
  1674  00006C                     	ds	1
  1675  00006D                     ?_vfprintf:
  1676                           	opt callstack 0
  1677  00006D                     vfprintf@fp:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x6C
  1681  00006D                     	ds	1
  1682  00006E                     setMotorSpeeds@Aforward:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 1 bytes @ 0x6D
  1686  00006E                     	ds	1
  1687  00006F                     setMotorSpeeds@Bforward:
  1688                           	opt callstack 0
  1689  00006F                     vfprintf@fmt:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x6E
  1693  00006F                     	ds	1
  1694  000070                     setMotorSpeeds@motorBSpeed:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x6F
  1698  000070                     	ds	1
  1699  000071                     vfprintf@ap:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x70
  1703  000071                     	ds	1
  1704  000072                     
  1705                           ; 1 bytes @ 0x71
  1706  000072                     	ds	1
  1707  000073                     vfprintf@cfmt:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x72
  1711  000073                     	ds	2
  1712  000075                     
  1713                           ; 1 bytes @ 0x74
  1714 ;;
  1715 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1716 ;;
  1717 ;; *************** function _main *****************
  1718 ;; Defined at:
  1719 ;;		line 899 in file "main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  i               1   12[BANK1 ] unsigned char 
  1724 ;;  keyValue        1   15[BANK1 ] unsigned char 
  1725 ;;  keypress        1   11[BANK1 ] unsigned char 
  1726 ;;  time            7    0[BANK1 ] unsigned char [7]
  1727 ;;  tick            4    7[BANK1 ] unsigned long 
  1728 ;;  currentRobot    1   14[BANK1 ] enum E3386
  1729 ;;  currentLogSt    1   13[BANK1 ] enum E3393
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:       18 bytes
  1744 ;; Hardware stack levels required when called:   14
  1745 ;; This function calls:
  1746 ;;		_I2C_Master_Read
  1747 ;;		_I2C_Master_Start
  1748 ;;		_I2C_Master_Stop
  1749 ;;		_I2C_Master_Write
  1750 ;;		___llmod
  1751 ;;		_doDisplayLog
  1752 ;;		_doOperation
  1753 ;;		_lcdInst
  1754 ;;		_printf
  1755 ;;		_replaceOldLog
  1756 ;;		_robotInit
  1757 ;; This function is called by:
  1758 ;;		Startup code after reset
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text0
  1763  000496                     __ptext0:
  1764                           	opt callstack 0
  1765  000496                     _main:
  1766                           	opt callstack 17
  1767                           
  1768                           ;main.c: 900:     robotInit();
  1769                           
  1770                           ;incstack = 0
  1771  000496  EC86  F018         	call	_robotInit	;wreg free
  1772                           
  1773                           ;main.c: 903:     unsigned char time[7];;main.c: 910:     enum robotStates currentRobotS
      +                          tate = standby;
  1774  00049A  0E00               	movlw	0
  1775  00049C  0101               	movlb	1	; () banked
  1776  00049E  6F2E               	movwf	main@currentRobotState& (0+255),b
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;main.c: 912:     enum logStates currentLogState = one;
  1780  0004A0  0E01               	movlw	1
  1781  0004A2  6F2D               	movwf	main@currentLogState& (0+255),b
  1782                           
  1783                           ; BSR set to: 1
  1784                           ;main.c: 914:     unsigned long tick = 0;
  1785  0004A4  0E00               	movlw	0
  1786  0004A6  6F27               	movwf	main@tick& (0+255),b
  1787  0004A8  0E00               	movlw	0
  1788  0004AA  6F28               	movwf	(main@tick+1)& (0+255),b
  1789  0004AC  0E00               	movlw	0
  1790  0004AE  6F29               	movwf	(main@tick+2)& (0+255),b
  1791  0004B0  0E00               	movlw	0
  1792  0004B2  6F2A               	movwf	(main@tick+3)& (0+255),b
  1793  0004B4                     l8163:
  1794                           
  1795                           ;main.c: 917:             if (tick%10==0){
  1796  0004B4  C127  F006         	movff	main@tick,___llmod@dividend
  1797  0004B8  C128  F007         	movff	main@tick+1,___llmod@dividend+1
  1798  0004BC  C129  F008         	movff	main@tick+2,___llmod@dividend+2
  1799  0004C0  C12A  F009         	movff	main@tick+3,___llmod@dividend+3
  1800  0004C4  0E0A               	movlw	10
  1801  0004C6  6E0A               	movwf	___llmod@divisor,c
  1802  0004C8  0E00               	movlw	0
  1803  0004CA  6E0B               	movwf	___llmod@divisor+1,c
  1804  0004CC  0E00               	movlw	0
  1805  0004CE  6E0C               	movwf	___llmod@divisor+2,c
  1806  0004D0  0E00               	movlw	0
  1807  0004D2  6E0D               	movwf	___llmod@divisor+3,c
  1808  0004D4  EC20  F017         	call	___llmod	;wreg free
  1809  0004D8  5006               	movf	?___llmod,w,c
  1810  0004DA  1007               	iorwf	?___llmod+1,w,c
  1811  0004DC  1008               	iorwf	?___llmod+2,w,c
  1812  0004DE  1009               	iorwf	?___llmod+3,w,c
  1813  0004E0  A4D8               	btfss	status,2,c
  1814  0004E2  D152               	goto	l8269
  1815                           
  1816                           ;main.c: 919:                 I2C_Master_Start();
  1817  0004E4  EC75  F01A         	call	_I2C_Master_Start	;wreg free
  1818                           
  1819                           ;main.c: 920:                 I2C_Master_Write(0b11010000);
  1820  0004E8  0E00               	movlw	0
  1821  0004EA  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1822  0004EC  0ED0               	movlw	208
  1823  0004EE  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1824  0004F0  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  1825                           
  1826                           ;main.c: 921:                 I2C_Master_Write(0x00);
  1827  0004F4  0E00               	movlw	0
  1828  0004F6  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1829  0004F8  0E00               	movlw	0
  1830  0004FA  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1831  0004FC  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  1832                           
  1833                           ;main.c: 922:                 I2C_Master_Stop();
  1834  000500  EC71  F01A         	call	_I2C_Master_Stop	;wreg free
  1835                           
  1836                           ;main.c: 925:                 I2C_Master_Start();
  1837  000504  EC75  F01A         	call	_I2C_Master_Start	;wreg free
  1838                           
  1839                           ;main.c: 926:                 I2C_Master_Write(0b11010001);
  1840  000508  0E00               	movlw	0
  1841  00050A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1842  00050C  0ED1               	movlw	209
  1843  00050E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1844  000510  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  1845                           
  1846                           ;main.c: 927:                 for(unsigned char i = 0; i < 6; i++){
  1847  000514  0E00               	movlw	0
  1848  000516  0101               	movlb	1	; () banked
  1849  000518  6F2C               	movwf	main@i& (0+255),b
  1850  00051A                     l8173:
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;main.c: 928:                     time[i] = I2C_Master_Read(0);
  1854  00051A  0E20               	movlw	low main@time
  1855  00051C  252C               	addwf	main@i& (0+255),w,b
  1856  00051E  6ED9               	movwf	fsr2l,c
  1857  000520  6ADA               	clrf	fsr2h,c
  1858  000522  0E01               	movlw	high main@time
  1859  000524  22DA               	addwfc	fsr2h,f,c
  1860  000526  0E00               	movlw	0
  1861  000528  EC01  F01A         	call	_I2C_Master_Read
  1862  00052C  6EDF               	movwf	indf2,c
  1863                           
  1864                           ;main.c: 929:                 }
  1865  00052E  0101               	movlb	1	; () banked
  1866  000530  2B2C               	incf	main@i& (0+255),f,b
  1867                           
  1868                           ; BSR set to: 1
  1869  000532  0E05               	movlw	5
  1870  000534  652C               	cpfsgt	main@i& (0+255),b
  1871  000536  D7F1               	goto	l8173
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 930:                 time[6] = I2C_Master_Read(1);
  1875  000538  0E01               	movlw	1
  1876  00053A  EC01  F01A         	call	_I2C_Master_Read
  1877  00053E  0101               	movlb	1	; () banked
  1878  000540  6F26               	movwf	(main@time+6)& (0+255),b
  1879                           
  1880                           ;main.c: 931:                 I2C_Master_Stop();
  1881  000542  EC71  F01A         	call	_I2C_Master_Stop	;wreg free
  1882  000546  D120               	goto	l8269
  1883  000548                     l8181:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 944:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1887  000548  0E80               	movlw	128
  1888  00054A  EC62  F01A         	call	_lcdInst
  1889  00054E  0E07               	movlw	7
  1890  000550  0100               	movlb	0	; () banked
  1891  000552  6FD4               	movwf	??_main& (0+255),b
  1892  000554  0E7D               	movlw	125
  1893  000556                     u9487:
  1894  000556  2EE8               	decfsz	wreg,f,c
  1895  000558  D7FE               	bra	u9487
  1896  00055A  2FD4               	decfsz	??_main& (0+255),f,b
  1897  00055C  D7FC               	bra	u9487
  1898                           
  1899                           ;main.c: 946:                 printf("%s", "WELCOME ");
  1900  00055E  0E18               	movlw	low (STR_1+4)
  1901  000560  0100               	movlb	0	; () banked
  1902  000562  6F80               	movwf	printf@fmt& (0+255),b
  1903  000564  0EFD               	movlw	high (STR_1+4)
  1904  000566  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1905  000568  0EF0               	movlw	low STR_27
  1906  00056A  6F82               	movwf	(?_printf+2)& (0+255),b
  1907  00056C  0EFC               	movlw	high STR_27
  1908  00056E  6F83               	movwf	(?_printf+3)& (0+255),b
  1909  000570  ECDA  F019         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 947:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1912  000574  0E0F               	movlw	low STR_28
  1913  000576  0100               	movlb	0	; () banked
  1914  000578  6F80               	movwf	printf@fmt& (0+255),b
  1915  00057A  0EFC               	movlw	high STR_28
  1916  00057C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1917  00057E  C126  F082         	movff	main@time+6,?_printf+2
  1918  000582  6B83               	clrf	(?_printf+3)& (0+255),b
  1919  000584  C125  F084         	movff	main@time+5,?_printf+4
  1920  000588  6B85               	clrf	(?_printf+5)& (0+255),b
  1921  00058A  C124  F086         	movff	main@time+4,?_printf+6
  1922  00058E  6B87               	clrf	(?_printf+7)& (0+255),b
  1923  000590  ECDA  F019         	call	_printf	;wreg free
  1924  000594  0EC0               	movlw	192
  1925  000596  EC62  F01A         	call	_lcdInst
  1926                           
  1927                           ;main.c: 949:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1928  00059A  0E1E               	movlw	low STR_29
  1929  00059C  0100               	movlb	0	; () banked
  1930  00059E  6F80               	movwf	printf@fmt& (0+255),b
  1931  0005A0  0EFC               	movlw	high STR_29
  1932  0005A2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1933  0005A4  C122  F082         	movff	main@time+2,?_printf+2
  1934  0005A8  6B83               	clrf	(?_printf+3)& (0+255),b
  1935  0005AA  C121  F084         	movff	main@time+1,?_printf+4
  1936  0005AE  6B85               	clrf	(?_printf+5)& (0+255),b
  1937  0005B0  C120  F086         	movff	main@time,?_printf+6
  1938  0005B4  6B87               	clrf	(?_printf+7)& (0+255),b
  1939  0005B6  ECDA  F019         	call	_printf	;wreg free
  1940  0005BA  0E90               	movlw	144
  1941  0005BC  EC62  F01A         	call	_lcdInst
  1942                           
  1943                           ;main.c: 951:                 printf("%s","(1) START");
  1944  0005C0  0E18               	movlw	low (STR_1+4)
  1945  0005C2  0100               	movlb	0	; () banked
  1946  0005C4  6F80               	movwf	printf@fmt& (0+255),b
  1947  0005C6  0EFD               	movlw	high (STR_1+4)
  1948  0005C8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1949  0005CA  0EDC               	movlw	low STR_31
  1950  0005CC  6F82               	movwf	(?_printf+2)& (0+255),b
  1951  0005CE  0EFC               	movlw	high STR_31
  1952  0005D0  6F83               	movwf	(?_printf+3)& (0+255),b
  1953  0005D2  ECDA  F019         	call	_printf	;wreg free
  1954  0005D6  0ED0               	movlw	208
  1955  0005D8  EC62  F01A         	call	_lcdInst
  1956                           
  1957                           ;main.c: 953:                 printf("%s","(2) VIEW LOGS");
  1958  0005DC  0E18               	movlw	low (STR_1+4)
  1959  0005DE  0100               	movlb	0	; () banked
  1960  0005E0  6F80               	movwf	printf@fmt& (0+255),b
  1961  0005E2  0EFD               	movlw	high (STR_1+4)
  1962  0005E4  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1963  0005E6  0E57               	movlw	low STR_33
  1964  0005E8  6F82               	movwf	(?_printf+2)& (0+255),b
  1965  0005EA  0EFC               	movlw	high STR_33
  1966  0005EC  6F83               	movwf	(?_printf+3)& (0+255),b
  1967  0005EE  ECDA  F019         	call	_printf	;wreg free
  1968                           
  1969                           ;main.c: 954:                 break;
  1970  0005F2  D0E3               	goto	l8271
  1971  0005F4                     l8201:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;main.c: 957:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1975  0005F4  0E80               	movlw	128
  1976  0005F6  EC62  F01A         	call	_lcdInst
  1977  0005FA  0E07               	movlw	7
  1978  0005FC  0100               	movlb	0	; () banked
  1979  0005FE  6FD4               	movwf	??_main& (0+255),b
  1980  000600  0E7D               	movlw	125
  1981  000602                     u9497:
  1982  000602  2EE8               	decfsz	wreg,f,c
  1983  000604  D7FE               	bra	u9497
  1984  000606  2FD4               	decfsz	??_main& (0+255),f,b
  1985  000608  D7FC               	bra	u9497
  1986                           
  1987                           ;main.c: 958:                 printf("%s", "OPERATION IN");
  1988  00060A  0E18               	movlw	low (STR_1+4)
  1989  00060C  0100               	movlb	0	; () banked
  1990  00060E  6F80               	movwf	printf@fmt& (0+255),b
  1991  000610  0EFD               	movlw	high (STR_1+4)
  1992  000612  6F81               	movwf	(printf@fmt+1)& (0+255),b
  1993  000614  0E8D               	movlw	low STR_35
  1994  000616  6F82               	movwf	(?_printf+2)& (0+255),b
  1995  000618  0EFC               	movlw	high STR_35
  1996  00061A  6F83               	movwf	(?_printf+3)& (0+255),b
  1997  00061C  ECDA  F019         	call	_printf	;wreg free
  1998  000620  0EC0               	movlw	192
  1999  000622  EC62  F01A         	call	_lcdInst
  2000                           
  2001                           ;main.c: 960:                 printf("%s","PROGRESS");
  2002  000626  0E18               	movlw	low (STR_1+4)
  2003  000628  0100               	movlb	0	; () banked
  2004  00062A  6F80               	movwf	printf@fmt& (0+255),b
  2005  00062C  0EFD               	movlw	high (STR_1+4)
  2006  00062E  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2007  000630  0E02               	movlw	low STR_37
  2008  000632  6F82               	movwf	(?_printf+2)& (0+255),b
  2009  000634  0EFD               	movlw	high STR_37
  2010  000636  6F83               	movwf	(?_printf+3)& (0+255),b
  2011  000638  ECDA  F019         	call	_printf	;wreg free
  2012                           
  2013                           ;main.c: 961:                 doOperation();
  2014  00063C  EC5B  F004         	call	_doOperation	;wreg free
  2015                           
  2016                           ;main.c: 962:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2017  000640  0E01               	movlw	1
  2018  000642  EC62  F01A         	call	_lcdInst
  2019  000646  0E11               	movlw	17
  2020  000648  0100               	movlb	0	; () banked
  2021  00064A  6FD4               	movwf	??_main& (0+255),b
  2022  00064C  0E3A               	movlw	58
  2023  00064E                     u9507:
  2024  00064E  2EE8               	decfsz	wreg,f,c
  2025  000650  D7FE               	bra	u9507
  2026  000652  2FD4               	decfsz	??_main& (0+255),f,b
  2027  000654  D7FC               	bra	u9507
  2028  000656  F000               	nop	
  2029                           
  2030                           ;main.c: 963:                 currentRobotState = operationComplete;
  2031  000658  0E02               	movlw	2
  2032  00065A  D093               	goto	L1
  2033  00065C                     l8219:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 969:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  2037  00065C  0E80               	movlw	128
  2038  00065E  EC62  F01A         	call	_lcdInst
  2039  000662  0E07               	movlw	7
  2040  000664  0100               	movlb	0	; () banked
  2041  000666  6FD4               	movwf	??_main& (0+255),b
  2042  000668  0E7D               	movlw	125
  2043  00066A                     u9517:
  2044  00066A  2EE8               	decfsz	wreg,f,c
  2045  00066C  D7FE               	bra	u9517
  2046  00066E  2FD4               	decfsz	??_main& (0+255),f,b
  2047  000670  D7FC               	bra	u9517
  2048                           
  2049                           ;main.c: 970:                 printf("%s", "OP. COMPLETE");
  2050  000672  0E18               	movlw	low (STR_1+4)
  2051  000674  0100               	movlb	0	; () banked
  2052  000676  6F80               	movwf	printf@fmt& (0+255),b
  2053  000678  0EFD               	movlw	high (STR_1+4)
  2054  00067A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2055  00067C  0E73               	movlw	low STR_39
  2056  00067E  6F82               	movwf	(?_printf+2)& (0+255),b
  2057  000680  0EFC               	movlw	high STR_39
  2058  000682  6F83               	movwf	(?_printf+3)& (0+255),b
  2059  000684  ECDA  F019         	call	_printf	;wreg free
  2060  000688  0EC0               	movlw	192
  2061  00068A  EC62  F01A         	call	_lcdInst
  2062                           
  2063                           ;main.c: 972:                 printf("%s","(1) VIEW LOG");
  2064  00068E  0E18               	movlw	low (STR_1+4)
  2065  000690  0100               	movlb	0	; () banked
  2066  000692  6F80               	movwf	printf@fmt& (0+255),b
  2067  000694  0EFD               	movlw	high (STR_1+4)
  2068  000696  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2069  000698  0E80               	movlw	low STR_41
  2070  00069A  6F82               	movwf	(?_printf+2)& (0+255),b
  2071  00069C  0EFC               	movlw	high STR_41
  2072  00069E  6F83               	movwf	(?_printf+3)& (0+255),b
  2073  0006A0  ECDA  F019         	call	_printf	;wreg free
  2074  0006A4  0E90               	movlw	144
  2075  0006A6  EC62  F01A         	call	_lcdInst
  2076                           
  2077                           ;main.c: 974:                 printf("%s","(2) QUIT DO NOT");
  2078  0006AA  0E18               	movlw	low (STR_1+4)
  2079  0006AC  0100               	movlb	0	; () banked
  2080  0006AE  6F80               	movwf	printf@fmt& (0+255),b
  2081  0006B0  0EFD               	movlw	high (STR_1+4)
  2082  0006B2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2083  0006B4  0EF0               	movlw	low STR_43
  2084  0006B6  6F82               	movwf	(?_printf+2)& (0+255),b
  2085  0006B8  0EFB               	movlw	high STR_43
  2086  0006BA  6F83               	movwf	(?_printf+3)& (0+255),b
  2087  0006BC  ECDA  F019         	call	_printf	;wreg free
  2088  0006C0  0ED0               	movlw	208
  2089  0006C2  EC62  F01A         	call	_lcdInst
  2090                           
  2091                           ;main.c: 976:                 printf("%s","SAVE LOG");
  2092  0006C6  0E18               	movlw	low (STR_1+4)
  2093  0006C8  0100               	movlb	0	; () banked
  2094  0006CA  6F80               	movwf	printf@fmt& (0+255),b
  2095  0006CC  0EFD               	movlw	high (STR_1+4)
  2096  0006CE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2097  0006D0  0EF9               	movlw	low STR_45
  2098  0006D2  6F82               	movwf	(?_printf+2)& (0+255),b
  2099  0006D4  0EFC               	movlw	high STR_45
  2100  0006D6  6F83               	movwf	(?_printf+3)& (0+255),b
  2101  0006D8  ECDA  F019         	call	_printf	;wreg free
  2102                           
  2103                           ;main.c: 977:                 currentLogState = justRan;
  2104  0006DC  0E00               	movlw	0
  2105  0006DE  0101               	movlb	1	; () banked
  2106  0006E0  6F2D               	movwf	main@currentLogState& (0+255),b
  2107                           
  2108                           ;main.c: 978:                 break;
  2109  0006E2  D06B               	goto	l8271
  2110  0006E4                     l8239:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;main.c: 981:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  2114  0006E4  0E80               	movlw	128
  2115  0006E6  EC62  F01A         	call	_lcdInst
  2116  0006EA  0E07               	movlw	7
  2117  0006EC  0100               	movlb	0	; () banked
  2118  0006EE  6FD4               	movwf	??_main& (0+255),b
  2119  0006F0  0E7D               	movlw	125
  2120  0006F2                     u9527:
  2121  0006F2  2EE8               	decfsz	wreg,f,c
  2122  0006F4  D7FE               	bra	u9527
  2123  0006F6  2FD4               	decfsz	??_main& (0+255),f,b
  2124  0006F8  D7FC               	bra	u9527
  2125                           
  2126                           ;main.c: 982:                 printf("%s", "SELECT LOG");
  2127  0006FA  0E18               	movlw	low (STR_1+4)
  2128  0006FC  0100               	movlb	0	; () banked
  2129  0006FE  6F80               	movwf	printf@fmt& (0+255),b
  2130  000700  0EFD               	movlw	high (STR_1+4)
  2131  000702  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2132  000704  0EA7               	movlw	low STR_47
  2133  000706  6F82               	movwf	(?_printf+2)& (0+255),b
  2134  000708  0EFC               	movlw	high STR_47
  2135  00070A  6F83               	movwf	(?_printf+3)& (0+255),b
  2136  00070C  ECDA  F019         	call	_printf	;wreg free
  2137  000710  0EC0               	movlw	192
  2138  000712  EC62  F01A         	call	_lcdInst
  2139                           
  2140                           ;main.c: 984:                 printf("%s","(1 IS OLDEST)");
  2141  000716  0E18               	movlw	low (STR_1+4)
  2142  000718  0100               	movlb	0	; () banked
  2143  00071A  6F80               	movwf	printf@fmt& (0+255),b
  2144  00071C  0EFD               	movlw	high (STR_1+4)
  2145  00071E  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2146  000720  0E3B               	movlw	low STR_49
  2147  000722  6F82               	movwf	(?_printf+2)& (0+255),b
  2148  000724  0EFC               	movlw	high STR_49
  2149  000726  6F83               	movwf	(?_printf+3)& (0+255),b
  2150  000728  ECDA  F019         	call	_printf	;wreg free
  2151  00072C  0E90               	movlw	144
  2152  00072E  EC62  F01A         	call	_lcdInst
  2153                           
  2154                           ;main.c: 986:                 printf("%s","(1) (2) (3) (4)");
  2155  000732  0E18               	movlw	low (STR_1+4)
  2156  000734  0100               	movlb	0	; () banked
  2157  000736  6F80               	movwf	printf@fmt& (0+255),b
  2158  000738  0EFD               	movlw	high (STR_1+4)
  2159  00073A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2160  00073C  0ED0               	movlw	low STR_51
  2161  00073E  6F82               	movwf	(?_printf+2)& (0+255),b
  2162  000740  0EFB               	movlw	high STR_51
  2163  000742  6F83               	movwf	(?_printf+3)& (0+255),b
  2164  000744  ECDA  F019         	call	_printf	;wreg free
  2165                           
  2166                           ;main.c: 987:                 break;
  2167  000748  D038               	goto	l8271
  2168  00074A                     l8253:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;main.c: 989:                 if (currentLogState == justRan){
  2172  00074A  0101               	movlb	1	; () banked
  2173  00074C  512D               	movf	main@currentLogState& (0+255),w,b
  2174  00074E  A4D8               	btfss	status,2,c
  2175  000750  D005               	goto	l8259
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;main.c: 990:                     replaceOldLog();
  2179  000752  ECD4  F017         	call	_replaceOldLog	;wreg free
  2180                           
  2181                           ;main.c: 991:                     currentLogState = four;
  2182  000756  0E04               	movlw	4
  2183  000758  0101               	movlb	1	; () banked
  2184  00075A  6F2D               	movwf	main@currentLogState& (0+255),b
  2185  00075C                     l8259:
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;main.c: 993:                 doDisplayLog(currentLogState);
  2189  00075C  C12D  F08E         	movff	main@currentLogState,doDisplayLog@logNumber
  2190  000760  0100               	movlb	0	; () banked
  2191  000762  6B8F               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2192  000764  EC5D  F006         	call	_doDisplayLog	;wreg free
  2193                           
  2194                           ;main.c: 994:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2195  000768  0E01               	movlw	1
  2196  00076A  EC62  F01A         	call	_lcdInst
  2197  00076E  0E11               	movlw	17
  2198  000770  0100               	movlb	0	; () banked
  2199  000772  6FD4               	movwf	??_main& (0+255),b
  2200  000774  0E3A               	movlw	58
  2201  000776                     u9537:
  2202  000776  2EE8               	decfsz	wreg,f,c
  2203  000778  D7FE               	bra	u9537
  2204  00077A  2FD4               	decfsz	??_main& (0+255),f,b
  2205  00077C  D7FC               	bra	u9537
  2206  00077E  F000               	nop	
  2207                           
  2208                           ;main.c: 995:                 currentRobotState = standby;
  2209  000780  0E00               	movlw	0
  2210  000782                     L1:
  2211  000782  0101               	movlb	1	; () banked
  2212  000784  6F2E               	movwf	main@currentRobotState& (0+255),b
  2213                           
  2214                           ;main.c: 996:                 break;
  2215  000786  D019               	goto	l8271
  2216  000788                     l8269:
  2217  000788  0101               	movlb	1	; () banked
  2218  00078A  512E               	movf	main@currentRobotState& (0+255),w,b
  2219  00078C  0100               	movlb	0	; () banked
  2220  00078E  6FD4               	movwf	??_main& (0+255),b
  2221  000790  6BD5               	clrf	(??_main+1)& (0+255),b
  2222                           
  2223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 1, Range of values is 0 to 0
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte            4     3 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  000792  51D5               	movf	(??_main+1)& (0+255),w,b
  2231  000794  0A00               	xorlw	0	; case 0
  2232  000796  A4D8               	btfss	status,2,c
  2233  000798  D010               	goto	l8271
  2234                           
  2235                           ; BSR set to: 0
  2236                           ; Switch size 1, requested type "simple"
  2237                           ; Number of cases is 5, Range of values is 0 to 4
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte           16     9 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242  00079A  51D4               	movf	??_main& (0+255),w,b
  2243  00079C  0A00               	xorlw	0	; case 0
  2244  00079E  B4D8               	btfsc	status,2,c
  2245  0007A0  D6D3               	goto	l8181
  2246  0007A2  0A01               	xorlw	1	; case 1
  2247  0007A4  B4D8               	btfsc	status,2,c
  2248  0007A6  D726               	goto	l8201
  2249  0007A8  0A03               	xorlw	3	; case 2
  2250  0007AA  B4D8               	btfsc	status,2,c
  2251  0007AC  D757               	goto	l8219
  2252  0007AE  0A01               	xorlw	1	; case 3
  2253  0007B0  B4D8               	btfsc	status,2,c
  2254  0007B2  D798               	goto	l8239
  2255  0007B4  0A07               	xorlw	7	; case 4
  2256  0007B6  B4D8               	btfsc	status,2,c
  2257  0007B8  D7C8               	goto	l8253
  2258  0007BA                     l8271:
  2259                           
  2260                           ;main.c: 1000:         if(keyPressed){
  2261  0007BA  0100               	movlb	0	; () banked
  2262  0007BC  51E8               	movf	_keyPressed& (0+255),w,b	;volatile
  2263  0007BE  B4D8               	btfsc	status,2,c
  2264  0007C0  D069               	goto	l371
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 1003:             keyPressed = 0;
  2268  0007C2  0E00               	movlw	0
  2269  0007C4  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 1006:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2273  0007C6  3881               	swapf	3969,w,c	;volatile
  2274  0007C8  0B0F               	andlw	15
  2275  0007CA  0B0F               	andlw	15
  2276  0007CC  0101               	movlb	1	; () banked
  2277  0007CE  6F2B               	movwf	main@keypress& (0+255),b
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;main.c: 1007:             char keyValue = keys[keypress];
  2281  0007D0  0E9D               	movlw	low _keys
  2282  0007D2  252B               	addwf	main@keypress& (0+255),w,b
  2283  0007D4  6EF6               	movwf	tblptrl,c
  2284  0007D6  6AF7               	clrf	tblptrh,c
  2285  0007D8  0EFB               	movlw	high _keys
  2286  0007DA  22F7               	addwfc	tblptrh,f,c
  2287  0007DC                     	if	0	;There are less than 3 active tblptr bytes
  2288  0007DC                     	endif
  2289  0007DC  0008               	tblrd		*
  2290  0007DE  CFF5 F12F          	movff	tablat,main@keyValue
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;main.c: 1008:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2294  0007E2  0E01               	movlw	1
  2295  0007E4  EC62  F01A         	call	_lcdInst
  2296  0007E8  0E11               	movlw	17
  2297  0007EA  0100               	movlb	0	; () banked
  2298  0007EC  6FD4               	movwf	??_main& (0+255),b
  2299  0007EE  0E3A               	movlw	58
  2300  0007F0                     u9547:
  2301  0007F0  2EE8               	decfsz	wreg,f,c
  2302  0007F2  D7FE               	bra	u9547
  2303  0007F4  2FD4               	decfsz	??_main& (0+255),f,b
  2304  0007F6  D7FC               	bra	u9547
  2305  0007F8  F000               	nop	
  2306                           
  2307                           ;main.c: 1009:             switch (currentRobotState){
  2308  0007FA  D035               	goto	l8319
  2309  0007FC                     l8283:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 1011:                     if (keyValue == '1'){
  2313  0007FC  0E31               	movlw	49
  2314  0007FE  0101               	movlb	1	; () banked
  2315  000800  192F               	xorwf	main@keyValue& (0+255),w,b
  2316  000802  A4D8               	btfss	status,2,c
  2317  000804  D002               	goto	l8287
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;main.c: 1012:                         currentRobotState = operation;
  2321  000806  0E01               	movlw	1
  2322  000808  D012               	goto	L4
  2323  00080A                     l8287:
  2324                           
  2325                           ; BSR set to: 1
  2326  00080A  0E32               	movlw	50
  2327  00080C  192F               	xorwf	main@keyValue& (0+255),w,b
  2328  00080E  A4D8               	btfss	status,2,c
  2329  000810  D041               	goto	l371
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;main.c: 1014:                         currentRobotState = selectLog;
  2333  000812  0E03               	movlw	3
  2334  000814  D00C               	goto	L4
  2335  000816                     l8291:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;main.c: 1020:                     if (keyValue == '1'){
  2339  000816  0E31               	movlw	49
  2340  000818  0101               	movlb	1	; () banked
  2341  00081A  192F               	xorwf	main@keyValue& (0+255),w,b
  2342  00081C  A4D8               	btfss	status,2,c
  2343  00081E  D002               	goto	l8295
  2344  000820                     u9400:
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;main.c: 1021:                         currentRobotState = displayLog;
  2348  000820  0E04               	movlw	4
  2349  000822  D005               	goto	L4
  2350  000824                     l8295:
  2351                           
  2352                           ; BSR set to: 1
  2353  000824  0E32               	movlw	50
  2354  000826  192F               	xorwf	main@keyValue& (0+255),w,b
  2355  000828  A4D8               	btfss	status,2,c
  2356  00082A  D034               	goto	l371
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;main.c: 1023:                         currentRobotState = standby;
  2360  00082C  0E00               	movlw	0
  2361  00082E                     L4:
  2362  00082E  6F2E               	movwf	main@currentRobotState& (0+255),b
  2363  000830  D031               	goto	l371
  2364  000832                     l8299:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;main.c: 1027:                     if (keyValue == '1'){
  2368  000832  0E31               	movlw	49
  2369  000834  0101               	movlb	1	; () banked
  2370  000836  192F               	xorwf	main@keyValue& (0+255),w,b
  2371  000838  A4D8               	btfss	status,2,c
  2372  00083A  D002               	goto	l8303
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;main.c: 1028:                         currentLogState = one;
  2376  00083C  0E01               	movlw	1
  2377  00083E  D011               	goto	L7
  2378  000840                     l8303:
  2379                           
  2380                           ; BSR set to: 1
  2381  000840  0E32               	movlw	50
  2382  000842  192F               	xorwf	main@keyValue& (0+255),w,b
  2383  000844  A4D8               	btfss	status,2,c
  2384  000846  D002               	goto	l8307
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;main.c: 1030:                         currentLogState = two;
  2388  000848  0E02               	movlw	2
  2389  00084A  D00B               	goto	L7
  2390  00084C                     l8307:
  2391                           
  2392                           ; BSR set to: 1
  2393  00084C  0E33               	movlw	51
  2394  00084E  192F               	xorwf	main@keyValue& (0+255),w,b
  2395  000850  A4D8               	btfss	status,2,c
  2396  000852  D002               	goto	l8311
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;main.c: 1032:                         currentLogState = three;
  2400  000854  0E03               	movlw	3
  2401  000856  D005               	goto	L7
  2402  000858                     l8311:
  2403                           
  2404                           ; BSR set to: 1
  2405  000858  0E34               	movlw	52
  2406  00085A  192F               	xorwf	main@keyValue& (0+255),w,b
  2407  00085C  A4D8               	btfss	status,2,c
  2408  00085E  D01A               	goto	l371
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;main.c: 1034:                         currentLogState = '4';
  2412  000860  0E34               	movlw	52
  2413  000862                     L7:
  2414  000862  6F2D               	movwf	main@currentLogState& (0+255),b
  2415                           
  2416                           ;main.c: 1035:                     } else {
  2417  000864  D7DD               	goto	u9400
  2418  000866                     l8319:
  2419  000866  0101               	movlb	1	; () banked
  2420  000868  512E               	movf	main@currentRobotState& (0+255),w,b
  2421  00086A  0100               	movlb	0	; () banked
  2422  00086C  6FD4               	movwf	??_main& (0+255),b
  2423  00086E  6BD5               	clrf	(??_main+1)& (0+255),b
  2424                           
  2425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2426                           ; Switch size 1, requested type "simple"
  2427                           ; Number of cases is 1, Range of values is 0 to 0
  2428                           ; switch strategies available:
  2429                           ; Name         Instructions Cycles
  2430                           ; simple_byte            4     3 (average)
  2431                           ;	Chosen strategy is simple_byte
  2432  000870  51D5               	movf	(??_main+1)& (0+255),w,b
  2433  000872  0A00               	xorlw	0	; case 0
  2434  000874  A4D8               	btfss	status,2,c
  2435  000876  D00E               	goto	l371
  2436                           
  2437                           ; BSR set to: 0
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 5, Range of values is 0 to 4
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte           16     9 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444  000878  51D4               	movf	??_main& (0+255),w,b
  2445  00087A  0A00               	xorlw	0	; case 0
  2446  00087C  B4D8               	btfsc	status,2,c
  2447  00087E  D7BE               	goto	l8283
  2448  000880  0A01               	xorlw	1	; case 1
  2449  000882  B4D8               	btfsc	status,2,c
  2450  000884  D007               	goto	l371
  2451  000886  0A03               	xorlw	3	; case 2
  2452  000888  B4D8               	btfsc	status,2,c
  2453  00088A  D7C5               	goto	l8291
  2454  00088C  0A01               	xorlw	1	; case 3
  2455  00088E  B4D8               	btfsc	status,2,c
  2456  000890  D7D0               	goto	l8299
  2457  000892  0A07               	xorlw	7	; case 4
  2458  000894                     l371:
  2459                           
  2460                           ;main.c: 1055:         tick++;
  2461                           
  2462                           ; BSR set to: 1
  2463  000894  0E01               	movlw	1
  2464  000896  0101               	movlb	1	; () banked
  2465  000898  2727               	addwf	main@tick& (0+255),f,b
  2466  00089A  0E00               	movlw	0
  2467  00089C  2328               	addwfc	(main@tick+1)& (0+255),f,b
  2468  00089E  2329               	addwfc	(main@tick+2)& (0+255),f,b
  2469  0008A0  232A               	addwfc	(main@tick+3)& (0+255),f,b
  2470                           
  2471                           ; BSR set to: 1
  2472                           ;main.c: 1056:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2473  0008A2  0E04               	movlw	4
  2474  0008A4  0100               	movlb	0	; () banked
  2475  0008A6  6FD4               	movwf	??_main& (0+255),b
  2476  0008A8  0E3D               	movlw	61
  2477  0008AA                     u9557:
  2478  0008AA  2EE8               	decfsz	wreg,f,c
  2479  0008AC  D7FE               	bra	u9557
  2480  0008AE  2FD4               	decfsz	??_main& (0+255),f,b
  2481  0008B0  D7FC               	bra	u9557
  2482  0008B2  D000               	nop2	
  2483  0008B4  D5FF               	goto	l8163
  2484  0008B6                     __end_of_main:
  2485                           	opt callstack 0
  2486                           
  2487 ;; *************** function _robotInit *****************
  2488 ;; Defined at:
  2489 ;;		line 846 in file "main.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    7
  2510 ;; This function calls:
  2511 ;;		_EncoderInit
  2512 ;;		_I2C_Master_Init
  2513 ;;		_initLCD
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;;		_mainEEPROM
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text1
  2521  00310C                     __ptext1:
  2522                           	opt callstack 0
  2523  00310C                     _robotInit:
  2524                           	opt callstack 23
  2525                           
  2526                           ;main.c: 848:     EncoderInit();
  2527                           
  2528                           ;incstack = 0
  2529  00310C  EC33  F01A         	call	_EncoderInit	;wreg free
  2530                           
  2531                           ;main.c: 852:     LATD = 0x00;
  2532  003110  0E00               	movlw	0
  2533  003112  6E8C               	movwf	3980,c	;volatile
  2534                           
  2535                           ;main.c: 853:     TRISD = 0x00;
  2536  003114  0E00               	movlw	0
  2537  003116  6E95               	movwf	3989,c	;volatile
  2538                           
  2539                           ;main.c: 856:     LATB = 0x00;
  2540  003118  0E00               	movlw	0
  2541  00311A  6E8A               	movwf	3978,c	;volatile
  2542                           
  2543                           ;main.c: 857:     TRISBbits.TRISB1 = 1;
  2544  00311C  8293               	bsf	3987,1,c	;volatile
  2545                           
  2546                           ;main.c: 858:     TRISBbits.TRISB4 = 1;
  2547  00311E  8893               	bsf	3987,4,c	;volatile
  2548                           
  2549                           ;main.c: 859:     TRISBbits.TRISB5 = 1;
  2550  003120  8A93               	bsf	3987,5,c	;volatile
  2551                           
  2552                           ;main.c: 860:     TRISBbits.TRISB6 = 1;
  2553  003122  8C93               	bsf	3987,6,c	;volatile
  2554                           
  2555                           ;main.c: 861:     TRISBbits.TRISB7 = 1;
  2556  003124  8E93               	bsf	3987,7,c	;volatile
  2557                           
  2558                           ;main.c: 864:     TRISAbits.TRISA4 = 0;
  2559  003126  9892               	bcf	3986,4,c	;volatile
  2560                           
  2561                           ;main.c: 865:     LATAbits.LATA4 = 0;
  2562  003128  9889               	bcf	3977,4,c	;volatile
  2563                           
  2564                           ;main.c: 868:     I2C_Master_Init(100000);
  2565  00312A  0EA0               	movlw	160
  2566  00312C  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2567  00312E  0E86               	movlw	134
  2568  003130  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2569  003132  0E01               	movlw	1
  2570  003134  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2571  003136  0E00               	movlw	0
  2572  003138  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2573  00313A  EC53  F017         	call	_I2C_Master_Init	;wreg free
  2574                           
  2575                           ;main.c: 875:     ADCON1 = 0b00001111;
  2576  00313E  0E0F               	movlw	15
  2577  003140  6EC1               	movwf	4033,c	;volatile
  2578                           
  2579                           ;main.c: 878:     INT1IE = 1;
  2580  003142  86F0               	bsf	4080,3,c	;volatile
  2581                           
  2582                           ;main.c: 881:     initLCD();
  2583  003144  ECEB  F016         	call	_initLCD	;wreg free
  2584                           
  2585                           ;main.c: 884:     (INTCONbits.GIE = 1);
  2586  003148  8EF2               	bsf	4082,7,c	;volatile
  2587  00314A  0012               	return		;funcret
  2588  00314C                     __end_of_robotInit:
  2589                           	opt callstack 0
  2590                           
  2591 ;; *************** function _initLCD *****************
  2592 ;; Defined at:
  2593 ;;		line 69 in file "lcd.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    6
  2614 ;; This function calls:
  2615 ;;		_lcdInst
  2616 ;;		_send_byte
  2617 ;;		_send_nibble
  2618 ;; This function is called by:
  2619 ;;		_robotInit
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text2
  2624  002DD6                     __ptext2:
  2625                           	opt callstack 0
  2626  002DD6                     _initLCD:
  2627                           	opt callstack 23
  2628                           
  2629                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2630                           
  2631                           ;incstack = 0
  2632  002DD6  0E31               	movlw	49
  2633  002DD8  6E0A               	movwf	??_initLCD& (0+255),c
  2634  002DDA  0EB2               	movlw	178
  2635  002DDC                     u9567:
  2636  002DDC  2EE8               	decfsz	wreg,f,c
  2637  002DDE  D7FE               	bra	u9567
  2638  002DE0  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2639  002DE2  D7FC               	bra	u9567
  2640  002DE4  D000               	nop2	
  2641                           
  2642                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2643  002DE6  948C               	bcf	3980,2,c	;volatile
  2644                           
  2645                           ;lcd.c: 74:     send_nibble(0b0011);
  2646  002DE8  0E03               	movlw	3
  2647  002DEA  EC3F  F01A         	call	_send_nibble
  2648                           
  2649                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2650  002DEE  0E11               	movlw	17
  2651  002DF0  6E0A               	movwf	??_initLCD& (0+255),c
  2652  002DF2  0E3A               	movlw	58
  2653  002DF4                     u9577:
  2654  002DF4  2EE8               	decfsz	wreg,f,c
  2655  002DF6  D7FE               	bra	u9577
  2656  002DF8  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2657  002DFA  D7FC               	bra	u9577
  2658  002DFC  D000               	nop2	
  2659                           
  2660                           ;lcd.c: 76:     send_nibble(0b0011);
  2661  002DFE  0E03               	movlw	3
  2662  002E00  EC3F  F01A         	call	_send_nibble
  2663                           
  2664                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2665  002E04  0E7D               	movlw	125
  2666  002E06                     u9587:
  2667  002E06  2EE8               	decfsz	wreg,f,c
  2668  002E08  D7FE               	bra	u9587
  2669                           
  2670                           ;lcd.c: 78:     send_byte(0b00110010);
  2671  002E0A  0E32               	movlw	50
  2672  002E0C  EC53  F01A         	call	_send_byte
  2673                           
  2674                           ;lcd.c: 80:     send_byte(0b00101000);
  2675  002E10  0E28               	movlw	40
  2676  002E12  EC53  F01A         	call	_send_byte
  2677                           
  2678                           ;lcd.c: 81:     send_byte(0b00001000);
  2679  002E16  0E08               	movlw	8
  2680  002E18  EC53  F01A         	call	_send_byte
  2681                           
  2682                           ;lcd.c: 82:     send_byte(0b00000001);
  2683  002E1C  0E01               	movlw	1
  2684  002E1E  EC53  F01A         	call	_send_byte
  2685                           
  2686                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2687  002E22  0E11               	movlw	17
  2688  002E24  6E0A               	movwf	??_initLCD& (0+255),c
  2689  002E26  0E3A               	movlw	58
  2690  002E28                     u9597:
  2691  002E28  2EE8               	decfsz	wreg,f,c
  2692  002E2A  D7FE               	bra	u9597
  2693  002E2C  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2694  002E2E  D7FC               	bra	u9597
  2695  002E30  D000               	nop2	
  2696                           
  2697                           ;lcd.c: 84:     send_byte(0b00000110);
  2698  002E32  0E06               	movlw	6
  2699  002E34  EC53  F01A         	call	_send_byte
  2700                           
  2701                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2702  002E38  0E0C               	movlw	12
  2703  002E3A  EC62  F01A         	call	_lcdInst
  2704  002E3E  0012               	return		;funcret
  2705  002E40                     __end_of_initLCD:
  2706                           	opt callstack 0
  2707                           
  2708 ;; *************** function _I2C_Master_Init *****************
  2709 ;; Defined at:
  2710 ;;		line 32 in file "I2C.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        8 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    3
  2731 ;; This function calls:
  2732 ;;		___lldiv
  2733 ;; This function is called by:
  2734 ;;		_robotInit
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text3
  2739  002EA6                     __ptext3:
  2740                           	opt callstack 0
  2741  002EA6                     _I2C_Master_Init:
  2742                           	opt callstack 26
  2743                           
  2744                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2745                           
  2746                           ;incstack = 0
  2747  002EA6  9AC6               	bcf	4038,5,c	;volatile
  2748                           
  2749                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2750  002EA8  8694               	bsf	3988,3,c	;volatile
  2751                           
  2752                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2753  002EAA  8894               	bsf	3988,4,c	;volatile
  2754                           
  2755                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2756  002EAC  0E80               	movlw	128
  2757  002EAE  6E06               	movwf	___lldiv@dividend,c
  2758  002EB0  0E96               	movlw	150
  2759  002EB2  6E07               	movwf	___lldiv@dividend+1,c
  2760  002EB4  0E98               	movlw	152
  2761  002EB6  6E08               	movwf	___lldiv@dividend+2,c
  2762  002EB8  0E00               	movlw	0
  2763  002EBA  6E09               	movwf	___lldiv@dividend+3,c
  2764  002EBC  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2765  002EC0  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2766  002EC4  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2767  002EC8  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2768  002ECC  0E02               	movlw	2
  2769  002ECE                     u8945:
  2770  002ECE  90D8               	bcf	status,0,c
  2771  002ED0  3617               	rlcf	??_I2C_Master_Init,f,c
  2772  002ED2  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2773  002ED4  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2774  002ED6  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2775  002ED8  2EE8               	decfsz	wreg,f,c
  2776  002EDA  D7F9               	goto	u8945
  2777  002EDC  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2778  002EE0  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2779  002EE4  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2780  002EE8  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2781  002EEC  EC02  F016         	call	___lldiv	;wreg free
  2782  002EF0  0406               	decf	?___lldiv,w,c
  2783  002EF2  6EC8               	movwf	4040,c	;volatile
  2784                           
  2785                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2786  002EF4  0E80               	movlw	128
  2787  002EF6  6EC7               	movwf	4039,c	;volatile
  2788                           
  2789                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2790  002EF8  0E28               	movlw	40
  2791  002EFA  6EC6               	movwf	4038,c	;volatile
  2792                           
  2793                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2794  002EFC  0E00               	movlw	0
  2795  002EFE  6EC5               	movwf	4037,c	;volatile
  2796  002F00  0012               	return		;funcret
  2797  002F02                     __end_of_I2C_Master_Init:
  2798                           	opt callstack 0
  2799                           
  2800 ;; *************** function ___lldiv *****************
  2801 ;; Defined at:
  2802 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  dividend        4    5[COMRAM] unsigned long 
  2805 ;;  divisor         4    9[COMRAM] unsigned long 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  quotient        4   13[COMRAM] unsigned long 
  2808 ;;  counter         1   17[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  4    5[COMRAM] unsigned long 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:       13 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    2
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_I2C_Master_Init
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text4
  2833  002C04                     __ptext4:
  2834                           	opt callstack 0
  2835  002C04                     ___lldiv:
  2836                           	opt callstack 26
  2837                           
  2838                           ;incstack = 0
  2839  002C04  0E00               	movlw	0
  2840  002C06  6E0E               	movwf	___lldiv@quotient,c
  2841  002C08  0E00               	movlw	0
  2842  002C0A  6E0F               	movwf	___lldiv@quotient+1,c
  2843  002C0C  0E00               	movlw	0
  2844  002C0E  6E10               	movwf	___lldiv@quotient+2,c
  2845  002C10  0E00               	movlw	0
  2846  002C12  6E11               	movwf	___lldiv@quotient+3,c
  2847  002C14  500A               	movf	___lldiv@divisor,w,c
  2848  002C16  100B               	iorwf	___lldiv@divisor+1,w,c
  2849  002C18  100C               	iorwf	___lldiv@divisor+2,w,c
  2850  002C1A  100D               	iorwf	___lldiv@divisor+3,w,c
  2851  002C1C  B4D8               	btfsc	status,2,c
  2852  002C1E  D02A               	goto	l691
  2853  002C20  0E01               	movlw	1
  2854  002C22  6E12               	movwf	___lldiv@counter,c
  2855  002C24  D006               	goto	l7493
  2856  002C26                     l7491:
  2857  002C26  90D8               	bcf	status,0,c
  2858  002C28  360A               	rlcf	___lldiv@divisor,f,c
  2859  002C2A  360B               	rlcf	___lldiv@divisor+1,f,c
  2860  002C2C  360C               	rlcf	___lldiv@divisor+2,f,c
  2861  002C2E  360D               	rlcf	___lldiv@divisor+3,f,c
  2862  002C30  2A12               	incf	___lldiv@counter,f,c
  2863  002C32                     l7493:
  2864  002C32  AE0D               	btfss	___lldiv@divisor+3,7,c
  2865  002C34  D7F8               	goto	l7491
  2866  002C36                     u8760:
  2867  002C36  90D8               	bcf	status,0,c
  2868  002C38  360E               	rlcf	___lldiv@quotient,f,c
  2869  002C3A  360F               	rlcf	___lldiv@quotient+1,f,c
  2870  002C3C  3610               	rlcf	___lldiv@quotient+2,f,c
  2871  002C3E  3611               	rlcf	___lldiv@quotient+3,f,c
  2872  002C40  500A               	movf	___lldiv@divisor,w,c
  2873  002C42  5C06               	subwf	___lldiv@dividend,w,c
  2874  002C44  500B               	movf	___lldiv@divisor+1,w,c
  2875  002C46  5807               	subwfb	___lldiv@dividend+1,w,c
  2876  002C48  500C               	movf	___lldiv@divisor+2,w,c
  2877  002C4A  5808               	subwfb	___lldiv@dividend+2,w,c
  2878  002C4C  500D               	movf	___lldiv@divisor+3,w,c
  2879  002C4E  5809               	subwfb	___lldiv@dividend+3,w,c
  2880  002C50  A0D8               	btfss	status,0,c
  2881  002C52  D009               	goto	l7503
  2882  002C54  500A               	movf	___lldiv@divisor,w,c
  2883  002C56  5E06               	subwf	___lldiv@dividend,f,c
  2884  002C58  500B               	movf	___lldiv@divisor+1,w,c
  2885  002C5A  5A07               	subwfb	___lldiv@dividend+1,f,c
  2886  002C5C  500C               	movf	___lldiv@divisor+2,w,c
  2887  002C5E  5A08               	subwfb	___lldiv@dividend+2,f,c
  2888  002C60  500D               	movf	___lldiv@divisor+3,w,c
  2889  002C62  5A09               	subwfb	___lldiv@dividend+3,f,c
  2890  002C64  800E               	bsf	___lldiv@quotient,0,c
  2891  002C66                     l7503:
  2892  002C66  90D8               	bcf	status,0,c
  2893  002C68  320D               	rrcf	___lldiv@divisor+3,f,c
  2894  002C6A  320C               	rrcf	___lldiv@divisor+2,f,c
  2895  002C6C  320B               	rrcf	___lldiv@divisor+1,f,c
  2896  002C6E  320A               	rrcf	___lldiv@divisor,f,c
  2897  002C70  2E12               	decfsz	___lldiv@counter,f,c
  2898  002C72  D7E1               	goto	u8760
  2899  002C74                     l691:
  2900  002C74  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  2901  002C78  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  2902  002C7C  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  2903  002C80  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  2904  002C84  0012               	return		;funcret
  2905  002C86                     __end_of___lldiv:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _EncoderInit *****************
  2909 ;; Defined at:
  2910 ;;		line 179 in file "main.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    2
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_robotInit
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text5
  2939  003466                     __ptext5:
  2940                           	opt callstack 0
  2941  003466                     _EncoderInit:
  2942                           	opt callstack 27
  2943                           
  2944                           ;main.c: 180:   motorBDirection = 1;
  2945                           
  2946                           ;incstack = 0
  2947  003466  0E01               	movlw	1
  2948  003468  6E79               	movwf	_motorBDirection,c	;volatile
  2949                           
  2950                           ;main.c: 181:   motorADirection = 1;
  2951  00346A  0E01               	movlw	1
  2952  00346C  0100               	movlb	0	; () banked
  2953  00346E  6FF0               	movwf	_motorADirection& (0+255),b	;volatile
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;main.c: 184:   TRISCbits.TRISC0 = 1;
  2957  003470  8094               	bsf	3988,0,c	;volatile
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;main.c: 185:   TRISEbits.TRISE1 = 1;
  2961  003472  8296               	bsf	3990,1,c	;volatile
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;main.c: 186:   TRISBbits.TRISB2 = 1;
  2965  003474  8493               	bsf	3987,2,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;main.c: 187:   TRISBbits.TRISB0 = 1;
  2969  003476  8093               	bsf	3987,0,c	;volatile
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 190:   INT2IE = 1;
  2973  003478  88F0               	bsf	4080,4,c	;volatile
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;main.c: 192:   INT0IE = 1;
  2977  00347A  88F2               	bsf	4082,4,c	;volatile
  2978                           
  2979                           ; BSR set to: 0
  2980  00347C  0012               	return		;funcret
  2981  00347E                     __end_of_EncoderInit:
  2982                           	opt callstack 0
  2983                           
  2984 ;; *************** function _replaceOldLog *****************
  2985 ;; Defined at:
  2986 ;;		line 892 in file "main.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  i               2    5[COMRAM] int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;Total ram usage:        2 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text6
  3015  002FA8                     __ptext6:
  3016                           	opt callstack 0
  3017  002FA8                     _replaceOldLog:
  3018                           	opt callstack 28
  3019                           
  3020                           ;main.c: 893:     for (int i = 0; i< 33; i++){
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;incstack = 0
  3024  002FA8  0E00               	movlw	0
  3025  002FAA  6E07               	movwf	replaceOldLog@i+1,c
  3026  002FAC  0E00               	movlw	0
  3027  002FAE  6E06               	movwf	replaceOldLog@i,c
  3028  002FB0                     l8083:
  3029                           
  3030                           ;main.c: 894:         logs[4][i] = logs[0][i];
  3031  002FB0  90D8               	bcf	status,0,c
  3032  002FB2  3406               	rlcf	replaceOldLog@i,w,c
  3033  002FB4  6ED9               	movwf	fsr2l,c
  3034  002FB6  3407               	rlcf	replaceOldLog@i+1,w,c
  3035  002FB8  6EDA               	movwf	fsr2h,c
  3036  002FBA  0E30               	movlw	low _logs
  3037  002FBC  26D9               	addwf	fsr2l,f,c
  3038  002FBE  0E01               	movlw	high _logs
  3039  002FC0  22DA               	addwfc	fsr2h,f,c
  3040  002FC2  90D8               	bcf	status,0,c
  3041  002FC4  3406               	rlcf	replaceOldLog@i,w,c
  3042  002FC6  6EE1               	movwf	fsr1l,c
  3043  002FC8  3407               	rlcf	replaceOldLog@i+1,w,c
  3044  002FCA  6EE2               	movwf	fsr1h,c
  3045  002FCC  0E38               	movlw	low (_logs+264)
  3046  002FCE  26E1               	addwf	fsr1l,f,c
  3047  002FD0  0E02               	movlw	high (_logs+264)
  3048  002FD2  22E2               	addwfc	fsr1h,f,c
  3049  002FD4  CFDE FFE6          	movff	postinc2,postinc1
  3050  002FD8  CFDD FFE5          	movff	postdec2,postdec1
  3051                           
  3052                           ;main.c: 895:     }
  3053  002FDC  4A06               	infsnz	replaceOldLog@i,f,c
  3054  002FDE  2A07               	incf	replaceOldLog@i+1,f,c
  3055  002FE0  BE07               	btfsc	replaceOldLog@i+1,7,c
  3056  002FE2  D7E6               	goto	l8083
  3057  002FE4  5007               	movf	replaceOldLog@i+1,w,c
  3058  002FE6  E105               	bnz	u9250
  3059  002FE8  0E21               	movlw	33
  3060  002FEA  5C06               	subwf	replaceOldLog@i,w,c
  3061  002FEC  B0D8               	btfsc	status,0,c
  3062  002FEE  0012               	return	
  3063  002FF0  D7DF               	goto	l8083
  3064  002FF2                     u9250:
  3065  002FF2  0012               	return		;funcret
  3066  002FF4                     __end_of_replaceOldLog:
  3067                           	opt callstack 0
  3068                           
  3069 ;; *************** function _doOperation *****************
  3070 ;; Defined at:
  3071 ;;		line 529 in file "main.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  i               2   79[BANK0 ] int 
  3076 ;;  PIDData         4   35[BANK0 ] int [2]
  3077 ;;  timeInOperat    2   77[BANK0 ] int 
  3078 ;;  tiresToDrop     2   73[BANK0 ] int 
  3079 ;;  milliseconds    2   71[BANK0 ] int 
  3080 ;;  counted         2   69[BANK0 ] int 
  3081 ;;  timeStart       2   66[BANK0 ] int 
  3082 ;;  tiresOnPole     2   64[BANK0 ] int 
  3083 ;;  motorBStartD    2   62[BANK0 ] int 
  3084 ;;  motorAStartD    2   60[BANK0 ] int 
  3085 ;;  badCountBot     2   58[BANK0 ] int 
  3086 ;;  badCount        2   56[BANK0 ] int 
  3087 ;;  rightRangeFi    2    0        int 
  3088 ;;  leftRangeFin    2    0        int 
  3089 ;;  currentAngle    2    0        int 
  3090 ;;  error           2    0        int 
  3091 ;;  errorScaleFa    2    0        int 
  3092 ;;  motorBSpeed     2    0        int 
  3093 ;;  motorASpeed     2    0        int 
  3094 ;;  goalSpeed       2    0        int 
  3095 ;;  fourMetreEqu    2    0        int 
  3096 ;;  minimumSafeD    2    0        int 
  3097 ;;  topLaserStat    1   83[BANK0 ] _Bool 
  3098 ;;  bottomLaserS    1   82[BANK0 ] _Bool 
  3099 ;;  currentOpera    1   81[BANK0 ] enum E3338
  3100 ;;  bottomLaserS    1   76[BANK0 ] _Bool 
  3101 ;;  topLaserStat    1   75[BANK0 ] _Bool 
  3102 ;;  isDoneDrop      1   68[BANK0 ] _Bool 
  3103 ;;  send            1   55[BANK0 ] _Bool 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:       52 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:   13
  3120 ;; This function calls:
  3121 ;;		_I2C_Master_Start
  3122 ;;		_I2C_Master_Stop
  3123 ;;		_I2C_Master_Write
  3124 ;;		_TIMER_INIT
  3125 ;;		___awmod
  3126 ;;		_errorCorrectedMove
  3127 ;;		_init_motor_PWM
  3128 ;;		_lcdInst
  3129 ;;		_printf
  3130 ;;		_requestIsTireDropDone
  3131 ;;		_sendArduinoTireDropRequest
  3132 ;;		_setMotorSpeeds
  3133 ;;		_tirePositioning
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text7
  3140  0008B6                     __ptext7:
  3141                           	opt callstack 0
  3142  0008B6                     _doOperation:
  3143                           	opt callstack 17
  3144                           
  3145                           ;main.c: 535:     I2C_Master_Start();
  3146                           
  3147                           ;incstack = 0
  3148  0008B6  EC75  F01A         	call	_I2C_Master_Start	;wreg free
  3149                           
  3150                           ;main.c: 536:     I2C_Master_Write(0b00010000);
  3151  0008BA  0E00               	movlw	0
  3152  0008BC  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3153  0008BE  0E10               	movlw	16
  3154  0008C0  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3155  0008C2  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  3156                           
  3157                           ;main.c: 537:     I2C_Master_Stop();
  3158  0008C6  EC71  F01A         	call	_I2C_Master_Stop	;wreg free
  3159                           
  3160                           ;main.c: 542:     TIMER_INIT();
  3161  0008CA  EC24  F01A         	call	_TIMER_INIT	;wreg free
  3162                           
  3163                           ;main.c: 543:     millisecondsMeasured = 0;
  3164  0008CE  0E00               	movlw	0
  3165  0008D0  6E76               	movwf	_millisecondsMeasured+1,c	;volatile
  3166  0008D2  0E00               	movlw	0
  3167  0008D4  6E75               	movwf	_millisecondsMeasured,c	;volatile
  3168                           
  3169                           ;main.c: 552:  enum operationStates currentOperationState = moveForward;
  3170  0008D6  0E00               	movlw	0
  3171  0008D8  0100               	movlb	0	; () banked
  3172  0008DA  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;main.c: 555:  int tiresToDrop = 0;
  3176                           
  3177                           ; BSR set to: 0
  3178                           
  3179                           ; BSR set to: 0
  3180  0008DC  0E00               	movlw	0
  3181  0008DE  6FCA               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3182  0008E0  0E00               	movlw	0
  3183  0008E2  6FC9               	movwf	doOperation@tiresToDrop& (0+255),b
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;main.c: 556:     int minimumSafeDistanceToPole;;main.c: 557:     int fourMetreEquivalen
      +                          t;;main.c: 558:     int timeInOperation = 15000;
  3187  0008E4  0E3A               	movlw	58
  3188  0008E6  6FCE               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3189  0008E8  0E98               	movlw	152
  3190  0008EA  6FCD               	movwf	doOperation@timeInOperation& (0+255),b
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;main.c: 559:     int motorAStartDistance = motorADistance;
  3194  0008EC  C077  F0BC         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3195  0008F0  C078  F0BD         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;main.c: 560:     int motorBStartDistance = motorBDistance;
  3199  0008F4  C0E2  F0BE         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3200  0008F8  C0E3  F0BF         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 561:     int tiresOnPole;;main.c: 562:     int PIDData[2] = {0,0};
  3204  0008FC  0E00               	movlw	0
  3205  0008FE  6FA3               	movwf	doOperation@PIDData& (0+255),b
  3206  000900  0E00               	movlw	0
  3207  000902  6FA4               	movwf	(doOperation@PIDData+1)& (0+255),b
  3208  000904  0E00               	movlw	0
  3209  000906  6FA5               	movwf	(doOperation@PIDData+2)& (0+255),b
  3210  000908  0E00               	movlw	0
  3211  00090A  6FA6               	movwf	(doOperation@PIDData+3)& (0+255),b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;main.c: 563:     _Bool topLaserState;;main.c: 564:     _Bool topLaserStatePrev;;main.c:
      +                           565:     _Bool bottomLaserState;;main.c: 566:     _Bool bottomLaserStatePrev;;main.c: 5
      +                          67:     _Bool isDoneDrop;;main.c: 568:     init_motor_PWM();
  3215  00090C  ECC6  F019         	call	_init_motor_PWM	;wreg free
  3216                           
  3217                           ;main.c: 569:     int counted = 0;
  3218  000910  0E00               	movlw	0
  3219  000912  0100               	movlb	0	; () banked
  3220  000914  6FC6               	movwf	(doOperation@counted+1)& (0+255),b
  3221  000916  0E00               	movlw	0
  3222  000918  6FC5               	movwf	doOperation@counted& (0+255),b
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;main.c: 570:     int badCount = 0;
  3226  00091A  0E00               	movlw	0
  3227  00091C  6FB9               	movwf	(doOperation@badCount+1)& (0+255),b
  3228  00091E  0E00               	movlw	0
  3229  000920  6FB8               	movwf	doOperation@badCount& (0+255),b
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;main.c: 571:     int badCountBot = 0;
  3233  000922  0E00               	movlw	0
  3234  000924  6FBB               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3235  000926  0E00               	movlw	0
  3236  000928  6FBA               	movwf	doOperation@badCountBot& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;main.c: 577:     TRISAbits.TRISA0 = 0;
  3240  00092A  9092               	bcf	3986,0,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;main.c: 578:     TRISAbits.TRISA1 = 0;
  3244  00092C  9292               	bcf	3986,1,c	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;main.c: 579:     TRISAbits.TRISA2 = 0;
  3248  00092E  9492               	bcf	3986,2,c	;volatile
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;main.c: 580:     TRISAbits.TRISA3 = 0;
  3252  000930  9692               	bcf	3986,3,c	;volatile
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;main.c: 583:     TRISAbits.TRISA4 = 0;
  3256  000932  9892               	bcf	3986,4,c	;volatile
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 584:     LATAbits.LATA4 = 1;
  3260  000934  8889               	bsf	3977,4,c	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;main.c: 585:     int timeStart = millisecondsMeasured;
  3264  000936  C075  F0C2         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3265  00093A  C076  F0C3         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3266  00093E                     l7905:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 586:     while(millisecondsMeasured < timeStart + 100){
  3270  00093E  0E64               	movlw	100
  3271  000940  25C2               	addwf	doOperation@timeStart& (0+255),w,b
  3272  000942  6FA0               	movwf	??_doOperation& (0+255),b
  3273  000944  0E00               	movlw	0
  3274  000946  21C3               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3275  000948  6FA1               	movwf	(??_doOperation+1)& (0+255),b
  3276  00094A  51A0               	movf	??_doOperation& (0+255),w,b
  3277  00094C  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3278  00094E  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3279  000950  0A80               	xorlw	128
  3280  000952  6FA2               	movwf	(??_doOperation+2)& (0+255),b
  3281  000954  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3282  000956  0A80               	xorlw	128
  3283  000958  59A2               	subwfb	(??_doOperation+2)& (0+255),w,b
  3284  00095A  A0D8               	btfss	status,0,c
  3285  00095C  D7F0               	goto	l7905
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 590:     topLaserState = PORTBbits.RB4;
  3289  00095E  A881               	btfss	3969,4,c	;volatile
  3290  000960  D002               	goto	u9100
  3291  000962  0E01               	movlw	1
  3292  000964  D001               	goto	u9106
  3293  000966                     u9100:
  3294  000966  0E00               	movlw	0
  3295  000968                     u9106:
  3296  000968  6FD3               	movwf	doOperation@topLaserState& (0+255),b
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 591:     topLaserStatePrev = topLaserState;
  3300  00096A  C0D3  F0CB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3301                           
  3302                           ;main.c: 592:     bottomLaserState = PORTBbits.RB5;
  3303  00096E  AA81               	btfss	3969,5,c	;volatile
  3304  000970  D002               	goto	u9110
  3305  000972  0E01               	movlw	1
  3306  000974  D001               	goto	u9116
  3307  000976                     u9110:
  3308  000976  0E00               	movlw	0
  3309  000978                     u9116:
  3310  000978  6FD2               	movwf	doOperation@bottomLaserState& (0+255),b
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;main.c: 593:     bottomLaserStatePrev = bottomLaserState;
  3314  00097A  C0D2  F0CC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3315                           
  3316                           ;main.c: 601:     _Bool send = 1;
  3317  00097E  0E01               	movlw	1
  3318  000980  6FB7               	movwf	doOperation@send& (0+255),b
  3319                           
  3320                           ;main.c: 602:     int millisecondsMeasuredOld = 0;
  3321  000982  0E00               	movlw	0
  3322  000984  6FC8               	movwf	(doOperation@millisecondsMeasuredOld+1)& (0+255),b
  3323  000986  0E00               	movlw	0
  3324  000988  6FC7               	movwf	doOperation@millisecondsMeasuredOld& (0+255),b
  3325  00098A                     l7913:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;main.c: 607:         counted ++;
  3329  00098A  4BC5               	infsnz	doOperation@counted& (0+255),f,b
  3330  00098C  2BC6               	incf	(doOperation@counted+1)& (0+255),f,b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;main.c: 608:         topLaserStatePrev = topLaserState;
  3334  00098E  C0D3  F0CB         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;main.c: 609:         topLaserState = PORTBbits.RB4;
  3338  000992  A881               	btfss	3969,4,c	;volatile
  3339  000994  D002               	goto	u9120
  3340  000996  0E01               	movlw	1
  3341  000998  D001               	goto	u9126
  3342  00099A                     u9120:
  3343  00099A  0E00               	movlw	0
  3344  00099C                     u9126:
  3345  00099C  6FD3               	movwf	doOperation@topLaserState& (0+255),b
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;main.c: 610:         bottomLaserStatePrev = bottomLaserState;
  3349  00099E  C0D2  F0CC         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;main.c: 611:         bottomLaserState = PORTBbits.RB5;
  3353  0009A2  AA81               	btfss	3969,5,c	;volatile
  3354  0009A4  D002               	goto	u9130
  3355  0009A6  0E01               	movlw	1
  3356  0009A8  D001               	goto	u9136
  3357  0009AA                     u9130:
  3358  0009AA  0E00               	movlw	0
  3359  0009AC                     u9136:
  3360  0009AC  6FD2               	movwf	doOperation@bottomLaserState& (0+255),b
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;main.c: 612:    if (millisecondsMeasured > millisecondsMeasuredOld){
  3364  0009AE  5075               	movf	_millisecondsMeasured,w,c	;volatile
  3365  0009B0  5DC7               	subwf	doOperation@millisecondsMeasuredOld& (0+255),w,b
  3366  0009B2  51C8               	movf	(doOperation@millisecondsMeasuredOld+1)& (0+255),w,b
  3367  0009B4  0A80               	xorlw	128
  3368  0009B6  6FA0               	movwf	??_doOperation& (0+255),b
  3369  0009B8  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3370  0009BA  0A80               	xorlw	128
  3371  0009BC  59A0               	subwfb	??_doOperation& (0+255),w,b
  3372  0009BE  B0D8               	btfsc	status,0,c
  3373  0009C0  D124               	goto	l8011
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;main.c: 613:             millisecondsMeasuredOld++;
  3377  0009C2  4BC7               	infsnz	doOperation@millisecondsMeasuredOld& (0+255),f,b
  3378  0009C4  2BC8               	incf	(doOperation@millisecondsMeasuredOld+1)& (0+255),f,b
  3379  0009C6  D121               	goto	l8011
  3380  0009C8                     l7927:
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;main.c: 619:                 if (counted%100 == 0){
  3384  0009C8  C0C5  F006         	movff	doOperation@counted,___awmod@dividend
  3385  0009CC  C0C6  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3386  0009D0  0E00               	movlw	0
  3387  0009D2  6E09               	movwf	___awmod@divisor+1,c
  3388  0009D4  0E64               	movlw	100
  3389  0009D6  6E08               	movwf	___awmod@divisor,c
  3390  0009D8  EC7D  F016         	call	___awmod	;wreg free
  3391  0009DC  5006               	movf	?___awmod,w,c
  3392  0009DE  1007               	iorwf	?___awmod+1,w,c
  3393  0009E0  A4D8               	btfss	status,2,c
  3394  0009E2  D040               	goto	l7947
  3395                           
  3396                           ;main.c: 620:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3397  0009E4  0E01               	movlw	1
  3398  0009E6  EC62  F01A         	call	_lcdInst
  3399  0009EA  0E11               	movlw	17
  3400  0009EC  0100               	movlb	0	; () banked
  3401  0009EE  6FA0               	movwf	??_doOperation& (0+255),b
  3402  0009F0  0E3A               	movlw	58
  3403  0009F2                     u9607:
  3404  0009F2  2EE8               	decfsz	wreg,f,c
  3405  0009F4  D7FE               	bra	u9607
  3406  0009F6  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3407  0009F8  D7FC               	bra	u9607
  3408  0009FA  F000               	nop	
  3409                           
  3410                           ;main.c: 621:                 printf("%d", millisecondsMeasured);
  3411  0009FC  0E24               	movlw	low (STR_22+3)
  3412  0009FE  0100               	movlb	0	; () banked
  3413  000A00  6F80               	movwf	printf@fmt& (0+255),b
  3414  000A02  0EFD               	movlw	high (STR_22+3)
  3415  000A04  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3416  000A06  C075  F082         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3417  000A0A  C076  F083         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3418  000A0E  ECDA  F019         	call	_printf	;wreg free
  3419  000A12  0E90               	movlw	144
  3420  000A14  EC62  F01A         	call	_lcdInst
  3421                           
  3422                           ;main.c: 623:                 printf("%d", topLaserState);
  3423  000A18  0E24               	movlw	low (STR_22+3)
  3424  000A1A  0100               	movlb	0	; () banked
  3425  000A1C  6F80               	movwf	printf@fmt& (0+255),b
  3426  000A1E  0EFD               	movlw	high (STR_22+3)
  3427  000A20  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3428  000A22  C0D3  F082         	movff	doOperation@topLaserState,?_printf+2
  3429  000A26  6B83               	clrf	(?_printf+3)& (0+255),b
  3430  000A28  ECDA  F019         	call	_printf	;wreg free
  3431  000A2C  0EC0               	movlw	192
  3432  000A2E  EC62  F01A         	call	_lcdInst
  3433                           
  3434                           ;main.c: 625:                 printf("B: %d", motorBDistance);
  3435  000A32  0E27               	movlw	low STR_21
  3436  000A34  0100               	movlb	0	; () banked
  3437  000A36  6F80               	movwf	printf@fmt& (0+255),b
  3438  000A38  0EFD               	movlw	high STR_21
  3439  000A3A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3440  000A3C  C0E2  F082         	movff	_motorBDistance,?_printf+2	;volatile
  3441  000A40  C0E3  F083         	movff	_motorBDistance+1,?_printf+3	;volatile
  3442  000A44  ECDA  F019         	call	_printf	;wreg free
  3443  000A48  0ED0               	movlw	208
  3444  000A4A  EC62  F01A         	call	_lcdInst
  3445                           
  3446                           ;main.c: 627:                 printf("A: %d", motorADistance);
  3447  000A4E  0E21               	movlw	low STR_22
  3448  000A50  0100               	movlb	0	; () banked
  3449  000A52  6F80               	movwf	printf@fmt& (0+255),b
  3450  000A54  0EFD               	movlw	high STR_22
  3451  000A56  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3452  000A58  C077  F082         	movff	_motorADistance,?_printf+2	;volatile
  3453  000A5C  C078  F083         	movff	_motorADistance+1,?_printf+3	;volatile
  3454  000A60  ECDA  F019         	call	_printf	;wreg free
  3455  000A64                     l7947:
  3456                           
  3457                           ;main.c: 646:                 errorCorrectedMove(30, 1, motorAStartDistance, motorBStart
      +                          Distance, 0.1);
  3458  000A64  0E00               	movlw	0
  3459  000A66  0100               	movlb	0	; () banked
  3460  000A68  6F89               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  3461  000A6A  0E1E               	movlw	30
  3462  000A6C  6F88               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  3463  000A6E  0E00               	movlw	0
  3464  000A70  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3465  000A72  0E00               	movlw	0
  3466  000A74  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3467  000A76  0E80               	movlw	128
  3468  000A78  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3469  000A7A  0E3F               	movlw	63
  3470  000A7C  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3471  000A7E  C0BC  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3472  000A82  C0BD  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3473  000A86  C0BE  F090         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3474  000A8A  C0BF  F091         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3475  000A8E  0ECD               	movlw	205
  3476  000A90  6F92               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3477  000A92  0ECC               	movlw	204
  3478  000A94  6F93               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3479  000A96  0ECC               	movlw	204
  3480  000A98  6F94               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3481  000A9A  0E3D               	movlw	61
  3482  000A9C  6F95               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3483  000A9E  ECA7  F00C         	call	_errorCorrectedMove	;wreg free
  3484                           
  3485                           ;main.c: 648:                 break;
  3486  000AA2  D0CD               	goto	l8013
  3487  000AA4                     l7949:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;main.c: 652:                 tiresOnPole = tirePositioning(timeInOperation);
  3491  000AA4  C0CD  F01C         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  3492  000AA8  C0CE  F01D         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  3493  000AAC  EC2F  F014         	call	_tirePositioning	;wreg free
  3494  000AB0  C01C  F0C0         	movff	?_tirePositioning,doOperation@tiresOnPole
  3495  000AB4  C01D  F0C1         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  3496                           
  3497                           ;main.c: 653:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3498  000AB8  0E01               	movlw	1
  3499  000ABA  EC62  F01A         	call	_lcdInst
  3500  000ABE  0E11               	movlw	17
  3501  000AC0  0100               	movlb	0	; () banked
  3502  000AC2  6FA0               	movwf	??_doOperation& (0+255),b
  3503  000AC4  0E3A               	movlw	58
  3504  000AC6                     u9617:
  3505  000AC6  2EE8               	decfsz	wreg,f,c
  3506  000AC8  D7FE               	bra	u9617
  3507  000ACA  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3508  000ACC  D7FC               	bra	u9617
  3509  000ACE  F000               	nop	
  3510                           
  3511                           ;main.c: 654:                 printf("TIRE DROP");
  3512  000AD0  0ED2               	movlw	low STR_23
  3513  000AD2  0100               	movlb	0	; () banked
  3514  000AD4  6F80               	movwf	printf@fmt& (0+255),b
  3515  000AD6  0EFC               	movlw	high STR_23
  3516  000AD8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3517  000ADA  ECDA  F019         	call	_printf	;wreg free
  3518  000ADE  0EC0               	movlw	192
  3519  000AE0  EC62  F01A         	call	_lcdInst
  3520                           
  3521                           ;main.c: 656:                 printf("%d", tiresOnPole);
  3522  000AE4  0E24               	movlw	low (STR_22+3)
  3523  000AE6  0100               	movlb	0	; () banked
  3524  000AE8  6F80               	movwf	printf@fmt& (0+255),b
  3525  000AEA  0EFD               	movlw	high (STR_22+3)
  3526  000AEC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3527  000AEE  C0C0  F082         	movff	doOperation@tiresOnPole,?_printf+2
  3528  000AF2  C0C1  F083         	movff	doOperation@tiresOnPole+1,?_printf+3
  3529  000AF6  ECDA  F019         	call	_printf	;wreg free
  3530                           
  3531                           ;main.c: 658:                 setMotorSpeeds(0, 1, 1, 0);
  3532  000AFA  0E00               	movlw	0
  3533  000AFC  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3534  000AFE  0E00               	movlw	0
  3535  000B00  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3536  000B02  0E01               	movlw	1
  3537  000B04  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3538  000B06  0E01               	movlw	1
  3539  000B08  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3540  000B0A  0E00               	movlw	0
  3541  000B0C  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3542  000B0E  0E00               	movlw	0
  3543  000B10  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3544  000B12  ECB7  F015         	call	_setMotorSpeeds	;wreg free
  3545  000B16                     l7961:
  3546                           
  3547                           ;main.c: 659:                 while(millisecondsMeasured < timeInOperation){
  3548  000B16  0100               	movlb	0	; () banked
  3549  000B18  51CD               	movf	doOperation@timeInOperation& (0+255),w,b
  3550  000B1A  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3551  000B1C  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3552  000B1E  0A80               	xorlw	128
  3553  000B20  6FA0               	movwf	??_doOperation& (0+255),b
  3554  000B22  51CE               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3555  000B24  0A80               	xorlw	128
  3556  000B26  59A0               	subwfb	??_doOperation& (0+255),w,b
  3557  000B28  A0D8               	btfss	status,0,c
  3558  000B2A  D7F5               	goto	l7961
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;main.c: 668:     sendArduinoTireDropRequest();
  3562  000B2C  EC13  F01A         	call	_sendArduinoTireDropRequest	;wreg free
  3563                           
  3564                           ;main.c: 671:                 sendArduinoTireDropRequest();
  3565  000B30  EC13  F01A         	call	_sendArduinoTireDropRequest	;wreg free
  3566                           
  3567                           ;main.c: 672:                 tiresToDrop = 1;
  3568  000B34  0E00               	movlw	0
  3569  000B36  0100               	movlb	0	; () banked
  3570  000B38  6FCA               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3571  000B3A  0E01               	movlw	1
  3572  000B3C  6FC9               	movwf	doOperation@tiresToDrop& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 673:                 currentOperationState = tireDrop;
  3576  000B3E  0E02               	movlw	2
  3577  000B40  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3578                           
  3579                           ;main.c: 674:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3580  000B42  0E01               	movlw	1
  3581  000B44  EC62  F01A         	call	_lcdInst
  3582  000B48  0E11               	movlw	17
  3583  000B4A  0100               	movlb	0	; () banked
  3584  000B4C  6FA0               	movwf	??_doOperation& (0+255),b
  3585  000B4E  0E3A               	movlw	58
  3586  000B50                     u9627:
  3587  000B50  2EE8               	decfsz	wreg,f,c
  3588  000B52  D7FE               	bra	u9627
  3589  000B54  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3590  000B56  D7FC               	bra	u9627
  3591  000B58  F000               	nop	
  3592                           
  3593                           ;main.c: 675:                 printf("TIRE DROP");
  3594  000B5A  0ED2               	movlw	low STR_23
  3595  000B5C  0100               	movlb	0	; () banked
  3596  000B5E  6F80               	movwf	printf@fmt& (0+255),b
  3597  000B60  0EFC               	movlw	high STR_23
  3598  000B62  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3599  000B64  ECDA  F019         	call	_printf	;wreg free
  3600                           
  3601                           ;main.c: 676:                 setMotorSpeeds(0, 1, 1, 0);
  3602  000B68  0E00               	movlw	0
  3603  000B6A  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3604  000B6C  0E00               	movlw	0
  3605  000B6E  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3606  000B70  0E01               	movlw	1
  3607  000B72  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3608  000B74  0E01               	movlw	1
  3609  000B76  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3610  000B78  0E00               	movlw	0
  3611  000B7A  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3612  000B7C  0E00               	movlw	0
  3613  000B7E  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3614  000B80  ECB7  F015         	call	_setMotorSpeeds	;wreg free
  3615                           
  3616                           ;main.c: 677:     break;
  3617  000B84  D05C               	goto	l8013
  3618  000B86                     l7975:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;main.c: 680:     isDoneDrop = requestIsTireDropDone();
  3622  000B86  EC9B  F019         	call	_requestIsTireDropDone	;wreg free
  3623  000B8A  0100               	movlb	0	; () banked
  3624  000B8C  6FC4               	movwf	doOperation@isDoneDrop& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;main.c: 682:     if (isDoneDrop){
  3628  000B8E  51C4               	movf	doOperation@isDoneDrop& (0+255),w,b
  3629  000B90  B4D8               	btfsc	status,2,c
  3630  000B92  D055               	goto	l8013
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;main.c: 683:      tiresToDrop -- ;
  3634  000B94  07C9               	decf	doOperation@tiresToDrop& (0+255),f,b
  3635  000B96  A0D8               	btfss	status,0,c
  3636  000B98  07CA               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;main.c: 684:      if (tiresToDrop == 0){
  3640  000B9A  51C9               	movf	doOperation@tiresToDrop& (0+255),w,b
  3641  000B9C  11CA               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3642  000B9E  A4D8               	btfss	status,2,c
  3643  000BA0  D002               	goto	l7985
  3644  000BA2                     u9180:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;main.c: 685:       currentOperationState = moveForward;
  3648  000BA2  0E00               	movlw	0
  3649  000BA4  D004               	goto	L8
  3650  000BA6                     l7985:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;main.c: 688:       sendArduinoTireDropRequest();
  3654  000BA6  EC13  F01A         	call	_sendArduinoTireDropRequest	;wreg free
  3655  000BAA  D049               	goto	l8013
  3656  000BAC                     l7989:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;main.c: 699:     currentOperationState = complete;
  3660  000BAC  0E05               	movlw	5
  3661  000BAE                     L8:
  3662  000BAE  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3663                           
  3664                           ;main.c: 700:     break;
  3665  000BB0  D046               	goto	l8013
  3666  000BB2                     l7991:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;main.c: 703:                 for (int i = 0; i < 33; i++){
  3670  000BB2  0E00               	movlw	0
  3671  000BB4  6FD0               	movwf	(doOperation@i+1)& (0+255),b
  3672  000BB6  0E00               	movlw	0
  3673  000BB8  6FCF               	movwf	doOperation@i& (0+255),b
  3674  000BBA                     l7993:
  3675                           
  3676                           ; BSR set to: 0
  3677  000BBA  BFD0               	btfsc	(doOperation@i+1)& (0+255),7,b
  3678  000BBC  D006               	goto	l7997
  3679  000BBE  51D0               	movf	(doOperation@i+1)& (0+255),w,b
  3680  000BC0  E114               	bnz	l8003
  3681  000BC2  0E21               	movlw	33
  3682  000BC4  5DCF               	subwf	doOperation@i& (0+255),w,b
  3683  000BC6  B0D8               	btfsc	status,0,c
  3684  000BC8  D010               	goto	l8003
  3685  000BCA                     l7997:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 704:                     logs[0][i] = 3;
  3689  000BCA  90D8               	bcf	status,0,c
  3690  000BCC  35CF               	rlcf	doOperation@i& (0+255),w,b
  3691  000BCE  6ED9               	movwf	fsr2l,c
  3692  000BD0  35D0               	rlcf	(doOperation@i+1)& (0+255),w,b
  3693  000BD2  6EDA               	movwf	fsr2h,c
  3694  000BD4  0E30               	movlw	low _logs
  3695  000BD6  26D9               	addwf	fsr2l,f,c
  3696  000BD8  0E01               	movlw	high _logs
  3697  000BDA  22DA               	addwfc	fsr2h,f,c
  3698  000BDC  0E03               	movlw	3
  3699  000BDE  6EDE               	movwf	postinc2,c
  3700  000BE0  0E00               	movlw	0
  3701  000BE2  6EDD               	movwf	postdec2,c
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 705:                 }
  3705  000BE4  4BCF               	infsnz	doOperation@i& (0+255),f,b
  3706  000BE6  2BD0               	incf	(doOperation@i+1)& (0+255),f,b
  3707  000BE8  D7E8               	goto	l7993
  3708  000BEA                     l8003:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;main.c: 706:     setMotorSpeeds(0, 1, 1, 0);
  3712  000BEA  0E00               	movlw	0
  3713  000BEC  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3714  000BEE  0E00               	movlw	0
  3715  000BF0  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3716  000BF2  0E01               	movlw	1
  3717  000BF4  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3718  000BF6  0E01               	movlw	1
  3719  000BF8  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3720  000BFA  0E00               	movlw	0
  3721  000BFC  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3722  000BFE  0E00               	movlw	0
  3723  000C00  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3724  000C02  ECB7  F015         	call	_setMotorSpeeds	;wreg free
  3725                           
  3726                           ;main.c: 707:                 LATAbits.LATA4 = 0;
  3727  000C06  9889               	bcf	3977,4,c	;volatile
  3728  000C08  0012               	return	
  3729  000C0A                     l8011:
  3730                           
  3731                           ; BSR set to: 0
  3732  000C0A  51D1               	movf	doOperation@currentOperationState& (0+255),w,b
  3733  000C0C  6FA0               	movwf	??_doOperation& (0+255),b
  3734  000C0E  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  3735                           
  3736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3737                           ; Switch size 1, requested type "simple"
  3738                           ; Number of cases is 1, Range of values is 0 to 0
  3739                           ; switch strategies available:
  3740                           ; Name         Instructions Cycles
  3741                           ; simple_byte            4     3 (average)
  3742                           ;	Chosen strategy is simple_byte
  3743  000C10  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3744  000C12  0A00               	xorlw	0	; case 0
  3745  000C14  A4D8               	btfss	status,2,c
  3746  000C16  D013               	goto	l8013
  3747                           
  3748                           ; BSR set to: 0
  3749                           ; Switch size 1, requested type "simple"
  3750                           ; Number of cases is 6, Range of values is 0 to 5
  3751                           ; switch strategies available:
  3752                           ; Name         Instructions Cycles
  3753                           ; simple_byte           19    10 (average)
  3754                           ;	Chosen strategy is simple_byte
  3755  000C18  51A0               	movf	??_doOperation& (0+255),w,b
  3756  000C1A  0A00               	xorlw	0	; case 0
  3757  000C1C  B4D8               	btfsc	status,2,c
  3758  000C1E  D6D4               	goto	l7927
  3759  000C20  0A01               	xorlw	1	; case 1
  3760  000C22  B4D8               	btfsc	status,2,c
  3761  000C24  D73F               	goto	l7949
  3762  000C26  0A03               	xorlw	3	; case 2
  3763  000C28  B4D8               	btfsc	status,2,c
  3764  000C2A  D7AD               	goto	l7975
  3765  000C2C  0A01               	xorlw	1	; case 3
  3766  000C2E  B4D8               	btfsc	status,2,c
  3767  000C30  D7B8               	goto	u9180
  3768  000C32  0A07               	xorlw	7	; case 4
  3769  000C34  B4D8               	btfsc	status,2,c
  3770  000C36  D7BA               	goto	l7989
  3771  000C38  0A01               	xorlw	1	; case 5
  3772  000C3A  B4D8               	btfsc	status,2,c
  3773  000C3C  D7BA               	goto	l7991
  3774  000C3E                     l8013:
  3775                           
  3776                           ;main.c: 725:   if (millisecondsMeasured >= timeInOperation){
  3777  000C3E  0100               	movlb	0	; () banked
  3778  000C40  51CD               	movf	doOperation@timeInOperation& (0+255),w,b
  3779  000C42  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3780  000C44  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3781  000C46  0A80               	xorlw	128
  3782  000C48  6FA0               	movwf	??_doOperation& (0+255),b
  3783  000C4A  51CE               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3784  000C4C  0A80               	xorlw	128
  3785  000C4E  59A0               	subwfb	??_doOperation& (0+255),w,b
  3786  000C50  A0D8               	btfss	status,0,c
  3787  000C52  D01A               	goto	l8033
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;main.c: 726:    currentOperationState = complete;
  3791  000C54  0E05               	movlw	5
  3792  000C56  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3793  000C58  D017               	goto	l8033
  3794  000C5A                     l8017:
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;main.c: 736:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  3798  000C5A  51D3               	movf	doOperation@topLaserState& (0+255),w,b
  3799  000C5C  19CB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3800  000C5E  A4D8               	btfss	status,2,c
  3801  000C60  D004               	goto	u9220
  3802                           
  3803                           ; BSR set to: 0
  3804  000C62  51D2               	movf	doOperation@bottomLaserState& (0+255),w,b
  3805  000C64  19CC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  3806  000C66  B4D8               	btfsc	status,2,c
  3807  000C68  D690               	goto	l7913
  3808  000C6A                     u9220:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;main.c: 737:                     if (topLaserStatePrev != topLaserState){
  3812  000C6A  51D3               	movf	doOperation@topLaserState& (0+255),w,b
  3813  000C6C  19CB               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3814  000C6E  B4D8               	btfsc	status,2,c
  3815  000C70  D002               	goto	l8025
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;main.c: 738:                         badCount++;
  3819  000C72  4BB8               	infsnz	doOperation@badCount& (0+255),f,b
  3820  000C74  2BB9               	incf	(doOperation@badCount+1)& (0+255),f,b
  3821  000C76                     l8025:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;main.c: 740:                     if (bottomLaserStatePrev != bottomLaserState){
  3825  000C76  51D2               	movf	doOperation@bottomLaserState& (0+255),w,b
  3826  000C78  19CC               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  3827  000C7A  B4D8               	btfsc	status,2,c
  3828  000C7C  D002               	goto	l8029
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;main.c: 741:                         badCountBot++;
  3832  000C7E  4BBA               	infsnz	doOperation@badCountBot& (0+255),f,b
  3833  000C80  2BBB               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  3834  000C82                     l8029:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;main.c: 743:                     currentOperationState = poleFinding;
  3838  000C82  0E01               	movlw	1
  3839  000C84  6FD1               	movwf	doOperation@currentOperationState& (0+255),b
  3840  000C86  D681               	goto	l7913
  3841  000C88                     l8033:
  3842                           
  3843                           ; BSR set to: 0
  3844  000C88  51D1               	movf	doOperation@currentOperationState& (0+255),w,b
  3845  000C8A  6FA0               	movwf	??_doOperation& (0+255),b
  3846  000C8C  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  3847                           
  3848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3849                           ; Switch size 1, requested type "simple"
  3850                           ; Number of cases is 1, Range of values is 0 to 0
  3851                           ; switch strategies available:
  3852                           ; Name         Instructions Cycles
  3853                           ; simple_byte            4     3 (average)
  3854                           ;	Chosen strategy is simple_byte
  3855  000C8E  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3856  000C90  0A00               	xorlw	0	; case 0
  3857  000C92  A4D8               	btfss	status,2,c
  3858  000C94  D67A               	goto	l7913
  3859                           
  3860                           ; BSR set to: 0
  3861                           ; Switch size 1, requested type "simple"
  3862                           ; Number of cases is 6, Range of values is 0 to 5
  3863                           ; switch strategies available:
  3864                           ; Name         Instructions Cycles
  3865                           ; simple_byte           19    10 (average)
  3866                           ;	Chosen strategy is simple_byte
  3867  000C96  51A0               	movf	??_doOperation& (0+255),w,b
  3868  000C98  0A00               	xorlw	0	; case 0
  3869  000C9A  B4D8               	btfsc	status,2,c
  3870  000C9C  D7DE               	goto	l8017
  3871  000C9E  0A01               	xorlw	1	; case 1
  3872  000CA0  B4D8               	btfsc	status,2,c
  3873  000CA2  D673               	goto	l7913
  3874  000CA4  0A03               	xorlw	3	; case 2
  3875  000CA6  B4D8               	btfsc	status,2,c
  3876  000CA8  D670               	goto	l7913
  3877  000CAA  0A01               	xorlw	1	; case 3
  3878  000CAC  B4D8               	btfsc	status,2,c
  3879  000CAE  D66D               	goto	l7913
  3880  000CB0  0A07               	xorlw	7	; case 4
  3881  000CB2  B4D8               	btfsc	status,2,c
  3882  000CB4  D66A               	goto	l7913
  3883  000CB6  0A01               	xorlw	1	; case 5
  3884  000CB8  D668               	goto	l7913
  3885  000CBA                     __end_of_doOperation:
  3886                           	opt callstack 0
  3887                           
  3888 ;; *************** function _tirePositioning *****************
  3889 ;; Defined at:
  3890 ;;		line 348 in file "main.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  maxOperation    2   27[COMRAM] int 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  bottomBreakb    2   44[COMRAM] int 
  3895 ;;  topBreakbeam    2   42[COMRAM] int 
  3896 ;;  distanceReco    2   40[COMRAM] int 
  3897 ;;  distanceReco    2   38[COMRAM] int 
  3898 ;;  bottomPrevio    2   36[COMRAM] int 
  3899 ;;  topPreviousS    2   34[COMRAM] int 
  3900 ;;  startDistanc    2   32[COMRAM] int 
  3901 ;;  startDistanc    2   30[COMRAM] int 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2   27[COMRAM] int 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:       19 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    3
  3918 ;; This function calls:
  3919 ;;		_abs
  3920 ;; This function is called by:
  3921 ;;		_doOperation
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text8
  3926  00285E                     __ptext8:
  3927                           	opt callstack 0
  3928  00285E                     _tirePositioning:
  3929                           	opt callstack 26
  3930                           
  3931                           ;main.c: 349:     int topBreakbeam;;main.c: 350:     int bottomBreakbeam;;main.c: 351:  
      +                             int distanceRecordedTop;;main.c: 352:     int startDistanceTop;;main.c: 353:     int 
      +                          distanceRecordedBottom;;main.c: 354:     int startDistanceBottom;;main.c: 355:     int t
      +                          opPreviousState = 1;
  3932                           
  3933                           ;incstack = 0
  3934  00285E  0E00               	movlw	0
  3935  002860  6E24               	movwf	tirePositioning@topPreviousState+1,c
  3936  002862  0E01               	movlw	1
  3937  002864  6E23               	movwf	tirePositioning@topPreviousState,c
  3938                           
  3939                           ;main.c: 356:     int bottomPreviousState = 1;
  3940  002866  0E00               	movlw	0
  3941  002868  6E26               	movwf	tirePositioning@bottomPreviousState+1,c
  3942  00286A  0E01               	movlw	1
  3943  00286C  6E25               	movwf	tirePositioning@bottomPreviousState,c
  3944                           
  3945                           ;main.c: 358:     while(millisecondsMeasured < maxOperationTime){
  3946  00286E  D04E               	goto	l7607
  3947  002870                     l7583:
  3948                           
  3949                           ;main.c: 359:         topBreakbeam = PORTBbits.RB4;
  3950  002870  A881               	btfss	3969,4,c	;volatile
  3951  002872  D003               	goto	u8780
  3952  002874  6A1E               	clrf	??_tirePositioning& (0+255),c
  3953  002876  2A1E               	incf	??_tirePositioning& (0+255),f,c
  3954  002878  D001               	goto	u8788
  3955  00287A                     u8780:
  3956  00287A  6A1E               	clrf	??_tirePositioning& (0+255),c
  3957  00287C                     u8788:
  3958  00287C  501E               	movf	??_tirePositioning,w,c
  3959  00287E  6E2B               	movwf	tirePositioning@topBreakbeam,c
  3960  002880  6A2C               	clrf	tirePositioning@topBreakbeam+1,c
  3961                           
  3962                           ;main.c: 360:         bottomBreakbeam = PORTBbits.RB5;
  3963  002882  AA81               	btfss	3969,5,c	;volatile
  3964  002884  D003               	goto	u8790
  3965  002886  6A1E               	clrf	??_tirePositioning& (0+255),c
  3966  002888  2A1E               	incf	??_tirePositioning& (0+255),f,c
  3967  00288A  D001               	goto	u8798
  3968  00288C                     u8790:
  3969  00288C  6A1E               	clrf	??_tirePositioning& (0+255),c
  3970  00288E                     u8798:
  3971  00288E  501E               	movf	??_tirePositioning,w,c
  3972  002890  6E2D               	movwf	tirePositioning@bottomBreakbeam,c
  3973  002892  6A2E               	clrf	tirePositioning@bottomBreakbeam+1,c
  3974                           
  3975                           ;main.c: 361:         if (topBreakbeam == 0 && topPreviousState == 1){
  3976  002894  502B               	movf	tirePositioning@topBreakbeam,w,c
  3977  002896  102C               	iorwf	tirePositioning@topBreakbeam+1,w,c
  3978  002898  A4D8               	btfss	status,2,c
  3979  00289A  D008               	goto	l7591
  3980  00289C  0423               	decf	tirePositioning@topPreviousState,w,c
  3981  00289E  1024               	iorwf	tirePositioning@topPreviousState+1,w,c
  3982  0028A0  A4D8               	btfss	status,2,c
  3983  0028A2  D004               	goto	l7591
  3984                           
  3985                           ;main.c: 362:             startDistanceTop = motorADistance;
  3986  0028A4  C077  F01F         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  3987  0028A8  C078  F020         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  3988  0028AC                     l7591:
  3989                           
  3990                           ;main.c: 364:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  3991  0028AC  502D               	movf	tirePositioning@bottomBreakbeam,w,c
  3992  0028AE  102E               	iorwf	tirePositioning@bottomBreakbeam+1,w,c
  3993  0028B0  A4D8               	btfss	status,2,c
  3994  0028B2  D008               	goto	l7597
  3995  0028B4  0425               	decf	tirePositioning@bottomPreviousState,w,c
  3996  0028B6  1026               	iorwf	tirePositioning@bottomPreviousState+1,w,c
  3997  0028B8  A4D8               	btfss	status,2,c
  3998  0028BA  D004               	goto	l7597
  3999                           
  4000                           ;main.c: 365:             startDistanceBottom = motorADistance;
  4001  0028BC  C077  F021         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4002  0028C0  C078  F022         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4003  0028C4                     l7597:
  4004                           
  4005                           ;main.c: 367:         if(!topBreakbeam){
  4006  0028C4  502B               	movf	tirePositioning@topBreakbeam,w,c
  4007  0028C6  102C               	iorwf	tirePositioning@topBreakbeam+1,w,c
  4008  0028C8  A4D8               	btfss	status,2,c
  4009  0028CA  D006               	goto	l255
  4010                           
  4011                           ;main.c: 368:             distanceRecordedTop = motorADistance - startDistanceTop;
  4012  0028CC  501F               	movf	tirePositioning@startDistanceTop,w,c
  4013  0028CE  5C77               	subwf	_motorADistance,w,c	;volatile
  4014  0028D0  6E27               	movwf	tirePositioning@distanceRecordedTop,c
  4015  0028D2  5020               	movf	tirePositioning@startDistanceTop+1,w,c
  4016  0028D4  5878               	subwfb	_motorADistance+1,w,c	;volatile
  4017  0028D6  6E28               	movwf	tirePositioning@distanceRecordedTop+1,c
  4018  0028D8                     l255:
  4019                           
  4020                           ;main.c: 370:         if(!bottomBreakbeam){
  4021  0028D8  502D               	movf	tirePositioning@bottomBreakbeam,w,c
  4022  0028DA  102E               	iorwf	tirePositioning@bottomBreakbeam+1,w,c
  4023  0028DC  A4D8               	btfss	status,2,c
  4024  0028DE  D006               	goto	l256
  4025                           
  4026                           ;main.c: 371:             distanceRecordedBottom = motorADistance - startDistanceBottom;
  4027  0028E0  5021               	movf	tirePositioning@startDistanceBottom,w,c
  4028  0028E2  5C77               	subwf	_motorADistance,w,c	;volatile
  4029  0028E4  6E29               	movwf	tirePositioning@distanceRecordedBottom,c
  4030  0028E6  5022               	movf	tirePositioning@startDistanceBottom+1,w,c
  4031  0028E8  5878               	subwfb	_motorADistance+1,w,c	;volatile
  4032  0028EA  6E2A               	movwf	tirePositioning@distanceRecordedBottom+1,c
  4033  0028EC                     l256:
  4034                           
  4035                           ;main.c: 373:         if(topBreakbeam && bottomBreakbeam){
  4036  0028EC  502B               	movf	tirePositioning@topBreakbeam,w,c
  4037  0028EE  102C               	iorwf	tirePositioning@topBreakbeam+1,w,c
  4038  0028F0  B4D8               	btfsc	status,2,c
  4039  0028F2  D004               	goto	l257
  4040  0028F4  502D               	movf	tirePositioning@bottomBreakbeam,w,c
  4041  0028F6  102E               	iorwf	tirePositioning@bottomBreakbeam+1,w,c
  4042  0028F8  A4D8               	btfss	status,2,c
  4043  0028FA  D012               	goto	u8880
  4044  0028FC                     l257:
  4045                           
  4046                           ;main.c: 376:         topPreviousState = topBreakbeam;
  4047  0028FC  C02B  F023         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4048  002900  C02C  F024         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4049                           
  4050                           ;main.c: 377:         bottomPreviousState = bottomBreakbeam;
  4051  002904  C02D  F025         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4052  002908  C02E  F026         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4053  00290C                     l7607:
  4054                           
  4055                           ;main.c: 358:     while(millisecondsMeasured < maxOperationTime){
  4056  00290C  501C               	movf	tirePositioning@maxOperationTime,w,c
  4057  00290E  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4058  002910  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  4059  002912  0A80               	xorlw	128
  4060  002914  6E1E               	movwf	??_tirePositioning& (0+255),c
  4061  002916  501D               	movf	tirePositioning@maxOperationTime+1,w,c
  4062  002918  0A80               	xorlw	128
  4063  00291A  581E               	subwfb	??_tirePositioning& (0+255),w,c
  4064  00291C  A0D8               	btfss	status,0,c
  4065  00291E  D7A8               	goto	l7583
  4066  002920                     u8880:
  4067                           
  4068                           ;main.c: 379:     if (abs(distanceRecordedTop - distanceRecordedBottom) > 150){
  4069  002920  5029               	movf	tirePositioning@distanceRecordedBottom,w,c
  4070  002922  5C27               	subwf	tirePositioning@distanceRecordedTop,w,c
  4071  002924  6E18               	movwf	abs@a,c
  4072  002926  502A               	movf	tirePositioning@distanceRecordedBottom+1,w,c
  4073  002928  5828               	subwfb	tirePositioning@distanceRecordedTop+1,w,c
  4074  00292A  6E19               	movwf	abs@a+1,c
  4075  00292C  EC3A  F019         	call	_abs	;wreg free
  4076                           
  4077                           ;main.c: 380:         return abs(distanceRecordedBottom - distanceRecordedTop);
  4078  002930  5027               	movf	tirePositioning@distanceRecordedTop,w,c
  4079  002932  5C29               	subwf	tirePositioning@distanceRecordedBottom,w,c
  4080  002934  6E18               	movwf	abs@a,c
  4081  002936  5028               	movf	tirePositioning@distanceRecordedTop+1,w,c
  4082  002938  582A               	subwfb	tirePositioning@distanceRecordedBottom+1,w,c
  4083  00293A  6E19               	movwf	abs@a+1,c
  4084  00293C  EC3A  F019         	call	_abs	;wreg free
  4085  002940  C018  F01C         	movff	?_abs,?_tirePositioning
  4086  002944  C019  F01D         	movff	?_abs+1,?_tirePositioning+1
  4087  002948  0012               	return		;funcret
  4088  00294A                     __end_of_tirePositioning:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _sendArduinoTireDropRequest *****************
  4092 ;; Defined at:
  4093 ;;		line 390 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  data            1    0        unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:        1 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    4
  4114 ;; This function calls:
  4115 ;;		_I2C_Master_Start
  4116 ;;		_I2C_Master_Stop
  4117 ;;		_I2C_Master_Write
  4118 ;; This function is called by:
  4119 ;;		_doOperation
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text9
  4124  003426                     __ptext9:
  4125                           	opt callstack 0
  4126  003426                     _sendArduinoTireDropRequest:
  4127                           	opt callstack 25
  4128                           
  4129                           ;main.c: 397:     I2C_Master_Start();
  4130                           
  4131                           ;incstack = 0
  4132  003426  EC75  F01A         	call	_I2C_Master_Start	;wreg free
  4133                           
  4134                           ;main.c: 398:     I2C_Master_Write(0b00010000);
  4135  00342A  0E00               	movlw	0
  4136  00342C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4137  00342E  0E10               	movlw	16
  4138  003430  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4139  003432  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  4140                           
  4141                           ;main.c: 399:     I2C_Master_Write(data);
  4142  003436  0E00               	movlw	0
  4143  003438  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4144  00343A  0E31               	movlw	49
  4145  00343C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4146  00343E  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  4147                           
  4148                           ;main.c: 400:     I2C_Master_Stop();
  4149  003442  EC71  F01A         	call	_I2C_Master_Stop	;wreg free
  4150  003446  0012               	return		;funcret
  4151  003448                     __end_of_sendArduinoTireDropRequest:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _requestIsTireDropDone *****************
  4155 ;; Defined at:
  4156 ;;		line 449 in file "main.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  data            1    8[COMRAM] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      _Bool 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:        1 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    4
  4177 ;; This function calls:
  4178 ;;		_I2C_Master_Read
  4179 ;;		_I2C_Master_Start
  4180 ;;		_I2C_Master_Stop
  4181 ;;		_I2C_Master_Write
  4182 ;; This function is called by:
  4183 ;;		_doOperation
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text10
  4188  003336                     __ptext10:
  4189                           	opt callstack 0
  4190  003336                     _requestIsTireDropDone:
  4191                           	opt callstack 25
  4192                           
  4193                           ;main.c: 450:     I2C_Master_Start();
  4194                           
  4195                           ;incstack = 0
  4196  003336  EC75  F01A         	call	_I2C_Master_Start	;wreg free
  4197                           
  4198                           ;main.c: 451:     I2C_Master_Write(0b00010001);
  4199  00333A  0E00               	movlw	0
  4200  00333C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4201  00333E  0E11               	movlw	17
  4202  003340  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4203  003342  EC68  F01A         	call	_I2C_Master_Write	;wreg free
  4204                           
  4205                           ;main.c: 452:     unsigned char data = I2C_Master_Read(1);
  4206  003346  0E01               	movlw	1
  4207  003348  EC01  F01A         	call	_I2C_Master_Read
  4208  00334C  6E09               	movwf	requestIsTireDropDone@data,c
  4209                           
  4210                           ;main.c: 453:     I2C_Master_Stop();
  4211  00334E  EC71  F01A         	call	_I2C_Master_Stop	;wreg free
  4212                           
  4213                           ;main.c: 454:     if(data == '1'){
  4214  003352  0E31               	movlw	49
  4215  003354  1809               	xorwf	requestIsTireDropDone@data,w,c
  4216  003356  A4D8               	btfss	status,2,c
  4217  003358  D002               	goto	l7641
  4218                           
  4219                           ;main.c: 455:         return 1;
  4220  00335A  0E01               	movlw	1
  4221  00335C  0012               	return	
  4222  00335E                     l7641:
  4223                           
  4224                           ;main.c: 457:     return 0;
  4225  00335E  0E00               	movlw	0
  4226  003360  0012               	return		;funcret
  4227  003362                     __end_of_requestIsTireDropDone:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _I2C_Master_Write *****************
  4231 ;; Defined at:
  4232 ;;		line 70 in file "I2C.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;Total ram usage:        2 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    3
  4253 ;; This function calls:
  4254 ;;		_I2C_Master_Wait
  4255 ;; This function is called by:
  4256 ;;		_sendArduinoTireDropRequest
  4257 ;;		_requestIsTireDropDone
  4258 ;;		_doOperation
  4259 ;;		_main
  4260 ;;		_rtc_set_time
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text11
  4265  0034D0                     __ptext11:
  4266                           	opt callstack 0
  4267  0034D0                     _I2C_Master_Write:
  4268                           	opt callstack 25
  4269                           
  4270                           ;I2C.c: 71:     I2C_Master_Wait();
  4271                           
  4272                           ;incstack = 0
  4273  0034D0  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4274                           
  4275                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  4276  0034D4  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  4277  0034D8  0012               	return		;funcret
  4278  0034DA                     __end_of_I2C_Master_Write:
  4279                           	opt callstack 0
  4280                           
  4281 ;; *************** function _I2C_Master_Stop *****************
  4282 ;; Defined at:
  4283 ;;		line 65 in file "I2C.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    3
  4304 ;; This function calls:
  4305 ;;		_I2C_Master_Wait
  4306 ;; This function is called by:
  4307 ;;		_sendArduinoTireDropRequest
  4308 ;;		_requestIsTireDropDone
  4309 ;;		_doOperation
  4310 ;;		_main
  4311 ;;		_rtc_set_time
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text12
  4316  0034E2                     __ptext12:
  4317                           	opt callstack 0
  4318  0034E2                     _I2C_Master_Stop:
  4319                           	opt callstack 25
  4320                           
  4321                           ;I2C.c: 66:     I2C_Master_Wait();
  4322                           
  4323                           ;incstack = 0
  4324  0034E2  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4325                           
  4326                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  4327  0034E6  84C5               	bsf	4037,2,c	;volatile
  4328  0034E8  0012               	return		;funcret
  4329  0034EA                     __end_of_I2C_Master_Stop:
  4330                           	opt callstack 0
  4331                           
  4332 ;; *************** function _I2C_Master_Start *****************
  4333 ;; Defined at:
  4334 ;;		line 55 in file "I2C.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    3
  4355 ;; This function calls:
  4356 ;;		_I2C_Master_Wait
  4357 ;; This function is called by:
  4358 ;;		_sendArduinoTireDropRequest
  4359 ;;		_requestIsTireDropDone
  4360 ;;		_doOperation
  4361 ;;		_main
  4362 ;;		_rtc_set_time
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text13
  4367  0034EA                     __ptext13:
  4368                           	opt callstack 0
  4369  0034EA                     _I2C_Master_Start:
  4370                           	opt callstack 25
  4371                           
  4372                           ;I2C.c: 56:     I2C_Master_Wait();
  4373                           
  4374                           ;incstack = 0
  4375  0034EA  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4376                           
  4377                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  4378  0034EE  80C5               	bsf	4037,0,c	;volatile
  4379  0034F0  0012               	return		;funcret
  4380  0034F2                     __end_of_I2C_Master_Start:
  4381                           	opt callstack 0
  4382                           
  4383 ;; *************** function _I2C_Master_Read *****************
  4384 ;; Defined at:
  4385 ;;		line 77 in file "I2C.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  ackBit          1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  ackBit          1    6[COMRAM] unsigned char 
  4390 ;;  receivedByte    1    7[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      unsigned char 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        2 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    3
  4407 ;; This function calls:
  4408 ;;		_I2C_Master_Wait
  4409 ;; This function is called by:
  4410 ;;		_requestIsTireDropDone
  4411 ;;		_main
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text14
  4416  003402                     __ptext14:
  4417                           	opt callstack 0
  4418  003402                     _I2C_Master_Read:
  4419                           	opt callstack 25
  4420                           
  4421                           ;incstack = 0
  4422                           ;I2C_Master_Read@ackBit stored from wreg
  4423  003402  6E07               	movwf	I2C_Master_Read@ackBit,c
  4424                           
  4425                           ;I2C.c: 78:     I2C_Master_Wait();
  4426  003404  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4427                           
  4428                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  4429  003408  86C5               	bsf	4037,3,c	;volatile
  4430                           
  4431                           ;I2C.c: 81:     I2C_Master_Wait();
  4432  00340A  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4433                           
  4434                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  4435  00340E  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  4436                           
  4437                           ;I2C.c: 86:     I2C_Master_Wait();
  4438  003412  EC4A  F01A         	call	_I2C_Master_Wait	;wreg free
  4439                           
  4440                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  4441  003416  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  4442  003418  D002               	bra	u8735
  4443  00341A  9AC5               	bcf	4037,5,c	;volatile
  4444  00341C  D001               	bra	u8736
  4445  00341E                     u8735:
  4446  00341E  8AC5               	bsf	4037,5,c	;volatile
  4447  003420                     u8736:
  4448                           
  4449                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  4450  003420  88C5               	bsf	4037,4,c	;volatile
  4451                           
  4452                           ;I2C.c: 90:     return receivedByte;
  4453  003422  5008               	movf	I2C_Master_Read@receivedByte,w,c
  4454  003424  0012               	return		;funcret
  4455  003426                     __end_of_I2C_Master_Read:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function _I2C_Master_Wait *****************
  4459 ;; Defined at:
  4460 ;;		line 21 in file "I2C.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:        1 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    2
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_I2C_Master_Start
  4485 ;;		_I2C_Master_Stop
  4486 ;;		_I2C_Master_Write
  4487 ;;		_I2C_Master_Read
  4488 ;;		_I2C_Master_RepeatedStart
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text15
  4493  003494                     __ptext15:
  4494                           	opt callstack 0
  4495  003494                     _I2C_Master_Wait:
  4496                           	opt callstack 25
  4497                           
  4498                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  4499                           
  4500                           ;I2C.c: 28:     }
  4501                           
  4502                           ;incstack = 0
  4503  003494  B4C7               	btfsc	4039,2,c	;volatile
  4504  003496  D7FE               	goto	_I2C_Master_Wait
  4505  003498  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  4506  00349C  0E1F               	movlw	31
  4507  00349E  1606               	andwf	??_I2C_Master_Wait,f,c
  4508  0034A0  B4D8               	btfsc	status,2,c
  4509  0034A2  0012               	return	
  4510  0034A4  D7F7               	goto	_I2C_Master_Wait
  4511  0034A6                     __end_of_I2C_Master_Wait:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function _init_motor_PWM *****************
  4515 ;; Defined at:
  4516 ;;		line 253 in file "main.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    2
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_doOperation
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text16
  4545  00338C                     __ptext16:
  4546                           	opt callstack 0
  4547  00338C                     _init_motor_PWM:
  4548                           	opt callstack 27
  4549                           
  4550                           ;main.c: 261:     TRISCbits.TRISC2 = 1;
  4551                           
  4552                           ;incstack = 0
  4553  00338C  8494               	bsf	3988,2,c	;volatile
  4554                           
  4555                           ;main.c: 262:     TRISCbits.TRISC1 = 1;
  4556  00338E  8294               	bsf	3988,1,c	;volatile
  4557                           
  4558                           ;main.c: 265:     const unsigned long FREQUENCY = 1000;;main.c: 266:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 267:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  4559  003390  0E9B               	movlw	155
  4560  003392  6ECB               	movwf	4043,c	;volatile
  4561                           
  4562                           ;main.c: 270:     P1M1 = 0;
  4563  003394  9EBD               	bcf	4029,7,c	;volatile
  4564                           
  4565                           ;main.c: 271:     P1M0 = 0;
  4566  003396  9CBD               	bcf	4029,6,c	;volatile
  4567                           
  4568                           ;main.c: 272:     CCP1M3 = 1;
  4569  003398  86BD               	bsf	4029,3,c	;volatile
  4570                           
  4571                           ;main.c: 273:     CCP1M2 = 1;
  4572  00339A  84BD               	bsf	4029,2,c	;volatile
  4573                           
  4574                           ;main.c: 274:     CCP1M1 = 0;
  4575  00339C  92BD               	bcf	4029,1,c	;volatile
  4576                           
  4577                           ;main.c: 275:     CCP1M0 = 0;
  4578  00339E  90BD               	bcf	4029,0,c	;volatile
  4579                           
  4580                           ;main.c: 277:     CCP2M3 = 1;
  4581  0033A0  86BA               	bsf	4026,3,c	;volatile
  4582                           
  4583                           ;main.c: 278:     CCP2M2 = 1;
  4584  0033A2  84BA               	bsf	4026,2,c	;volatile
  4585                           
  4586                           ;main.c: 279:     CCP2M1 = 0;
  4587  0033A4  92BA               	bcf	4026,1,c	;volatile
  4588                           
  4589                           ;main.c: 280:     CCP2M0 = 0;
  4590  0033A6  90BA               	bcf	4026,0,c	;volatile
  4591                           
  4592                           ;main.c: 283:     T2CKPS0 = 1;
  4593  0033A8  80CA               	bsf	4042,0,c	;volatile
  4594                           
  4595                           ;main.c: 284:     T2CKPS1 = 1;
  4596  0033AA  82CA               	bsf	4042,1,c	;volatile
  4597                           
  4598                           ;main.c: 287:     TMR2ON = 1;
  4599  0033AC  84CA               	bsf	4042,2,c	;volatile
  4600                           
  4601                           ;main.c: 290:     TRISCbits.TRISC2 = 0;
  4602  0033AE  9494               	bcf	3988,2,c	;volatile
  4603                           
  4604                           ;main.c: 291:     TRISCbits.TRISC1 = 0;
  4605  0033B0  9294               	bcf	3988,1,c	;volatile
  4606  0033B2  0012               	return		;funcret
  4607  0033B4                     __end_of_init_motor_PWM:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _errorCorrectedMove *****************
  4611 ;; Defined at:
  4612 ;;		line 506 in file "main.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  goalSpeed       2    8[BANK0 ] int 
  4615 ;;  turnRatio       4   10[BANK0 ] float 
  4616 ;;  motorAStartD    2   14[BANK0 ] int 
  4617 ;;  motorBStartD    2   16[BANK0 ] int 
  4618 ;;  correctionCo    4   18[BANK0 ] float 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  BSpeed          2   30[BANK0 ] int 
  4621 ;;  ASpeed          2   28[BANK0 ] int 
  4622 ;;  error           2   26[BANK0 ] int 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4632 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;Total ram usage:       24 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    5
  4639 ;; This function calls:
  4640 ;;		___fladd
  4641 ;;		___fldiv
  4642 ;;		___flmul
  4643 ;;		___flsub
  4644 ;;		___fltol
  4645 ;;		___xxtofl
  4646 ;;		_setMotorSpeeds
  4647 ;; This function is called by:
  4648 ;;		_doOperation
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text17
  4653  00194E                     __ptext17:
  4654                           	opt callstack 0
  4655  00194E                     _errorCorrectedMove:
  4656                           	opt callstack 24
  4657                           
  4658                           ;main.c: 507:     int error = (int)((motorADistance - motorAStartDistance)-(motorBDistan
      +                          ce - motorBStartDistance)/turnRatio);
  4659                           
  4660                           ;incstack = 0
  4661  00194E  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  4662  001952  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  4663  001956  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  4664  00195A  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  4665  00195E  0100               	movlb	0	; () banked
  4666  001960  5190               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  4667  001962  5DE2               	subwf	_motorBDistance& (0+255),w,b	;volatile
  4668  001964  6F96               	movwf	??_errorCorrectedMove& (0+255),b
  4669  001966  5191               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  4670  001968  59E3               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  4671  00196A  6F97               	movwf	(??_errorCorrectedMove+1)& (0+255),b
  4672  00196C  C096  F006         	movff	??_errorCorrectedMove,___xxtofl@val
  4673  001970  C097  F007         	movff	??_errorCorrectedMove+1,___xxtofl@val+1
  4674  001974  0E00               	movlw	0
  4675  001976  BE07               	btfsc	___xxtofl@val+1,7,c
  4676  001978  0EFF               	movlw	-1
  4677  00197A  6E08               	movwf	___xxtofl@val+2,c
  4678  00197C  6E09               	movwf	___xxtofl@val+3,c
  4679  00197E  0E01               	movlw	1
  4680  001980  EC5D  F012         	call	___xxtofl
  4681  001984  C006  F02D         	movff	?___xxtofl,___fldiv@b
  4682  001988  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  4683  00198C  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  4684  001990  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  4685  001994  EC63  F00B         	call	___fldiv	;wreg free
  4686  001998  C02D  F04A         	movff	?___fldiv,___flsub@a
  4687  00199C  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  4688  0019A0  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  4689  0019A4  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  4690  0019A8  0100               	movlb	0	; () banked
  4691  0019AA  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  4692  0019AC  5C77               	subwf	_motorADistance,w,c	;volatile
  4693  0019AE  6F98               	movwf	(??_errorCorrectedMove+2)& (0+255),b
  4694  0019B0  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  4695  0019B2  5878               	subwfb	_motorADistance+1,w,c	;volatile
  4696  0019B4  6F99               	movwf	(??_errorCorrectedMove+3)& (0+255),b
  4697  0019B6  C098  F006         	movff	??_errorCorrectedMove+2,___xxtofl@val
  4698  0019BA  C099  F007         	movff	??_errorCorrectedMove+3,___xxtofl@val+1
  4699  0019BE  0E00               	movlw	0
  4700  0019C0  BE07               	btfsc	___xxtofl@val+1,7,c
  4701  0019C2  0EFF               	movlw	-1
  4702  0019C4  6E08               	movwf	___xxtofl@val+2,c
  4703  0019C6  6E09               	movwf	___xxtofl@val+3,c
  4704  0019C8  0E01               	movlw	1
  4705  0019CA  EC5D  F012         	call	___xxtofl
  4706  0019CE  C006  F046         	movff	?___xxtofl,___flsub@b
  4707  0019D2  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  4708  0019D6  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  4709  0019DA  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  4710  0019DE  EC1F  F018         	call	___flsub	;wreg free
  4711  0019E2  C046  F04E         	movff	?___flsub,___fltol@f1
  4712  0019E6  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  4713  0019EA  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  4714  0019EE  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  4715  0019F2  EC0D  F015         	call	___fltol	;wreg free
  4716  0019F6  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  4717  0019FA  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  4718                           
  4719                           ;main.c: 508:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  4720  0019FE  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  4721  001A02  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  4722  001A06  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  4723  001A0A  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  4724  001A0E  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  4725  001A12  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  4726  001A16  0E00               	movlw	0
  4727  001A18  BE07               	btfsc	___xxtofl@val+1,7,c
  4728  001A1A  0EFF               	movlw	-1
  4729  001A1C  6E08               	movwf	___xxtofl@val+2,c
  4730  001A1E  6E09               	movwf	___xxtofl@val+3,c
  4731  001A20  0E01               	movlw	1
  4732  001A22  EC5D  F012         	call	___xxtofl
  4733  001A26  C006  F014         	movff	?___xxtofl,___flmul@b
  4734  001A2A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4735  001A2E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4736  001A32  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4737  001A36  EC34  F008         	call	___flmul	;wreg free
  4738  001A3A  C014  F04A         	movff	?___flmul,___flsub@a
  4739  001A3E  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  4740  001A42  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  4741  001A46  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  4742  001A4A  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  4743  001A4E  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  4744  001A52  0E00               	movlw	0
  4745  001A54  BE07               	btfsc	___xxtofl@val+1,7,c
  4746  001A56  0EFF               	movlw	-1
  4747  001A58  6E08               	movwf	___xxtofl@val+2,c
  4748  001A5A  6E09               	movwf	___xxtofl@val+3,c
  4749  001A5C  0E01               	movlw	1
  4750  001A5E  EC5D  F012         	call	___xxtofl
  4751  001A62  C006  F046         	movff	?___xxtofl,___flsub@b
  4752  001A66  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  4753  001A6A  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  4754  001A6E  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  4755  001A72  EC1F  F018         	call	___flsub	;wreg free
  4756  001A76  C046  F04E         	movff	?___flsub,___fltol@f1
  4757  001A7A  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  4758  001A7E  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  4759  001A82  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  4760  001A86  EC0D  F015         	call	___fltol	;wreg free
  4761  001A8A  C04E  F09C         	movff	?___fltol,errorCorrectedMove@ASpeed
  4762  001A8E  C04F  F09D         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  4763                           
  4764                           ;main.c: 509:     int BSpeed = (int)((goalSpeed*turnRatio + error*correctionConstant));
  4765  001A92  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  4766  001A96  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  4767  001A9A  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  4768  001A9E  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  4769  001AA2  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  4770  001AA6  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  4771  001AAA  0E00               	movlw	0
  4772  001AAC  BE07               	btfsc	___xxtofl@val+1,7,c
  4773  001AAE  0EFF               	movlw	-1
  4774  001AB0  6E08               	movwf	___xxtofl@val+2,c
  4775  001AB2  6E09               	movwf	___xxtofl@val+3,c
  4776  001AB4  0E01               	movlw	1
  4777  001AB6  EC5D  F012         	call	___xxtofl
  4778  001ABA  C006  F014         	movff	?___xxtofl,___flmul@b
  4779  001ABE  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4780  001AC2  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4781  001AC6  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4782  001ACA  EC34  F008         	call	___flmul	;wreg free
  4783  001ACE  C014  F031         	movff	?___flmul,___fladd@a
  4784  001AD2  C015  F032         	movff	?___flmul+1,___fladd@a+1
  4785  001AD6  C016  F033         	movff	?___flmul+2,___fladd@a+2
  4786  001ADA  C017  F034         	movff	?___flmul+3,___fladd@a+3
  4787  001ADE  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  4788  001AE2  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  4789  001AE6  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  4790  001AEA  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  4791  001AEE  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  4792  001AF2  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  4793  001AF6  0E00               	movlw	0
  4794  001AF8  BE07               	btfsc	___xxtofl@val+1,7,c
  4795  001AFA  0EFF               	movlw	-1
  4796  001AFC  6E08               	movwf	___xxtofl@val+2,c
  4797  001AFE  6E09               	movwf	___xxtofl@val+3,c
  4798  001B00  0E01               	movlw	1
  4799  001B02  EC5D  F012         	call	___xxtofl
  4800  001B06  C006  F014         	movff	?___xxtofl,___flmul@b
  4801  001B0A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4802  001B0E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4803  001B12  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4804  001B16  EC34  F008         	call	___flmul	;wreg free
  4805  001B1A  C014  F02D         	movff	?___flmul,___fladd@b
  4806  001B1E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  4807  001B22  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  4808  001B26  C017  F030         	movff	?___flmul+3,___fladd@b+3
  4809  001B2A  ECDD  F009         	call	___fladd	;wreg free
  4810  001B2E  C02D  F04E         	movff	?___fladd,___fltol@f1
  4811  001B32  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  4812  001B36  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  4813  001B3A  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  4814  001B3E  EC0D  F015         	call	___fltol	;wreg free
  4815  001B42  C04E  F09E         	movff	?___fltol,errorCorrectedMove@BSpeed
  4816  001B46  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  4817                           
  4818                           ;main.c: 511:     if (ASpeed > 100){
  4819  001B4A  0100               	movlb	0	; () banked
  4820  001B4C  BF9D               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  4821  001B4E  D00A               	goto	l7655
  4822  001B50  519D               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  4823  001B52  E104               	bnz	u8900
  4824  001B54  0E65               	movlw	101
  4825  001B56  5D9C               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  4826  001B58  A0D8               	btfss	status,0,c
  4827  001B5A  D004               	goto	l7655
  4828  001B5C                     u8900:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;main.c: 512:         ASpeed = 100;
  4832  001B5C  0E00               	movlw	0
  4833  001B5E  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  4834  001B60  0E64               	movlw	100
  4835  001B62  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  4836  001B64                     l7655:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;main.c: 514:     if (ASpeed < 0){
  4840  001B64  AF9D               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  4841  001B66  D004               	goto	l7659
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;main.c: 515:         ASpeed = 0;
  4845  001B68  0E00               	movlw	0
  4846  001B6A  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  4847  001B6C  0E00               	movlw	0
  4848  001B6E  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  4849  001B70                     l7659:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;main.c: 517:     if (BSpeed > 100){
  4853  001B70  BF9F               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  4854  001B72  D00A               	goto	l7663
  4855  001B74  519F               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  4856  001B76  E104               	bnz	u8920
  4857  001B78  0E65               	movlw	101
  4858  001B7A  5D9E               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  4859  001B7C  A0D8               	btfss	status,0,c
  4860  001B7E  D004               	goto	l7663
  4861  001B80                     u8920:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;main.c: 518:         BSpeed = 100;
  4865  001B80  0E00               	movlw	0
  4866  001B82  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  4867  001B84  0E64               	movlw	100
  4868  001B86  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  4869  001B88                     l7663:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;main.c: 520:     if (BSpeed < 0){
  4873  001B88  AF9F               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  4874  001B8A  D004               	goto	l7667
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;main.c: 521:         BSpeed = 0;
  4878  001B8C  0E00               	movlw	0
  4879  001B8E  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  4880  001B90  0E00               	movlw	0
  4881  001B92  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  4882  001B94                     l7667:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;main.c: 524:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  4886  001B94  C09C  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  4887  001B98  C09D  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  4888  001B9C  0E01               	movlw	1
  4889  001B9E  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4890  001BA0  0E01               	movlw	1
  4891  001BA2  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4892  001BA4  C09E  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  4893  001BA8  C09F  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  4894  001BAC  ECB7  F015         	call	_setMotorSpeeds	;wreg free
  4895  001BB0  0012               	return		;funcret
  4896  001BB2                     __end_of_errorCorrectedMove:
  4897                           	opt callstack 0
  4898                           
  4899 ;; *************** function _setMotorSpeeds *****************
  4900 ;; Defined at:
  4901 ;;		line 326 in file "main.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  motorASpeed     2  107[COMRAM] int 
  4904 ;;  Aforward        1  109[COMRAM] _Bool 
  4905 ;;  Bforward        1  110[COMRAM] _Bool 
  4906 ;;  motorBSpeed     2  111[COMRAM] int 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:       14 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    4
  4925 ;; This function calls:
  4926 ;;		___xxtofl
  4927 ;;		_set_pwm_duty_cycle
  4928 ;; This function is called by:
  4929 ;;		_errorCorrectedMove
  4930 ;;		_doOperation
  4931 ;;		_PIDCorrectedMove
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text18
  4936  002B6E                     __ptext18:
  4937                           	opt callstack 0
  4938  002B6E                     _setMotorSpeeds:
  4939                           	opt callstack 25
  4940                           
  4941                           ;main.c: 327:     if (Aforward){
  4942                           
  4943                           ;incstack = 0
  4944  002B6E  506E               	movf	setMotorSpeeds@Aforward,w,c
  4945  002B70  B4D8               	btfsc	status,2,c
  4946  002B72  D003               	goto	l244
  4947                           
  4948                           ;main.c: 328:         LATAbits.LATA0 = 1;
  4949  002B74  8089               	bsf	3977,0,c	;volatile
  4950                           
  4951                           ;main.c: 329:         LATAbits.LATA1 = 0;
  4952  002B76  9289               	bcf	3977,1,c	;volatile
  4953                           
  4954                           ;main.c: 330:     } else {
  4955  002B78  D002               	goto	l7441
  4956  002B7A                     l244:
  4957                           
  4958                           ;main.c: 331:         LATAbits.LATA0 = 0;
  4959  002B7A  9089               	bcf	3977,0,c	;volatile
  4960                           
  4961                           ;main.c: 332:         LATAbits.LATA1 = 1;
  4962  002B7C  8289               	bsf	3977,1,c	;volatile
  4963  002B7E                     l7441:
  4964                           
  4965                           ;main.c: 334:     if (Bforward){
  4966  002B7E  506F               	movf	setMotorSpeeds@Bforward,w,c
  4967  002B80  B4D8               	btfsc	status,2,c
  4968  002B82  D003               	goto	l246
  4969                           
  4970                           ;main.c: 335:         LATAbits.LATA2 = 1;
  4971  002B84  8489               	bsf	3977,2,c	;volatile
  4972                           
  4973                           ;main.c: 336:         LATAbits.LATA3 = 0;
  4974  002B86  9689               	bcf	3977,3,c	;volatile
  4975                           
  4976                           ;main.c: 337:     } else {
  4977  002B88  D002               	goto	l7445
  4978  002B8A                     l246:
  4979                           
  4980                           ;main.c: 338:         LATAbits.LATA2 = 0;
  4981  002B8A  9489               	bcf	3977,2,c	;volatile
  4982                           
  4983                           ;main.c: 339:         LATAbits.LATA3 = 1;
  4984  002B8C  8689               	bsf	3977,3,c	;volatile
  4985  002B8E                     l7445:
  4986                           
  4987                           ;main.c: 342:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  4988  002B8E  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  4989  002B92  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  4990  002B96  0E00               	movlw	0
  4991  002B98  BE07               	btfsc	___xxtofl@val+1,7,c
  4992  002B9A  0EFF               	movlw	-1
  4993  002B9C  6E08               	movwf	___xxtofl@val+2,c
  4994  002B9E  6E09               	movwf	___xxtofl@val+3,c
  4995  002BA0  0E01               	movlw	1
  4996  002BA2  EC5D  F012         	call	___xxtofl
  4997  002BA6  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2188
  4998  002BAA  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2188+1
  4999  002BAE  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2188+2
  5000  002BB2  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2188+3
  5001                           
  5002                           ;main.c: 342:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5003  002BB6  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  5004  002BBA  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  5005  002BBE  0E00               	movlw	0
  5006  002BC0  BE07               	btfsc	___xxtofl@val+1,7,c
  5007  002BC2  0EFF               	movlw	-1
  5008  002BC4  6E08               	movwf	___xxtofl@val+2,c
  5009  002BC6  6E09               	movwf	___xxtofl@val+3,c
  5010  002BC8  0E01               	movlw	1
  5011  002BCA  EC5D  F012         	call	___xxtofl
  5012  002BCE  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2189
  5013  002BD2  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2189+1
  5014  002BD6  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2189+2
  5015  002BDA  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2189+3
  5016                           
  5017                           ;main.c: 342:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  5018  002BDE  C080  F058         	movff	_setMotorSpeeds$2188,set_pwm_duty_cycle@dutyA
  5019  002BE2  C081  F059         	movff	_setMotorSpeeds$2188+1,set_pwm_duty_cycle@dutyA+1
  5020  002BE6  C082  F05A         	movff	_setMotorSpeeds$2188+2,set_pwm_duty_cycle@dutyA+2
  5021  002BEA  C083  F05B         	movff	_setMotorSpeeds$2188+3,set_pwm_duty_cycle@dutyA+3
  5022  002BEE  C084  F05C         	movff	_setMotorSpeeds$2189,set_pwm_duty_cycle@dutyB
  5023  002BF2  C085  F05D         	movff	_setMotorSpeeds$2189+1,set_pwm_duty_cycle@dutyB+1
  5024  002BF6  C086  F05E         	movff	_setMotorSpeeds$2189+2,set_pwm_duty_cycle@dutyB+2
  5025  002BFA  C087  F05F         	movff	_setMotorSpeeds$2189+3,set_pwm_duty_cycle@dutyB+3
  5026  002BFE  EC16  F010         	call	_set_pwm_duty_cycle	;wreg free
  5027  002C02  0012               	return		;funcret
  5028  002C04                     __end_of_setMotorSpeeds:
  5029                           	opt callstack 0
  5030                           
  5031 ;; *************** function _set_pwm_duty_cycle *****************
  5032 ;; Defined at:
  5033 ;;		line 296 in file "main.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  dutyA           4   87[COMRAM] float 
  5036 ;;  dutyB           4   91[COMRAM] float 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  duty_valB       2  101[COMRAM] unsigned short 
  5039 ;;  duty_valA       2   99[COMRAM] unsigned short 
  5040 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:       20 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    3
  5057 ;; This function calls:
  5058 ;;		___fldiv
  5059 ;;		___flge
  5060 ;;		___flmul
  5061 ;;		___fltol
  5062 ;;		___xxtofl
  5063 ;; This function is called by:
  5064 ;;		_setMotorSpeeds
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text19
  5069  00202C                     __ptext19:
  5070                           	opt callstack 0
  5071  00202C                     _set_pwm_duty_cycle:
  5072                           	opt callstack 25
  5073                           
  5074                           ;main.c: 297:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  5075                           
  5076                           ;incstack = 0
  5077  00202C  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  5078  00202E  0012               	return	
  5079  002030  0E00               	movlw	0
  5080  002032  6E06               	movwf	___flge@ff1,c
  5081  002034  0E00               	movlw	0
  5082  002036  6E07               	movwf	___flge@ff1+1,c
  5083  002038  0EC8               	movlw	200
  5084  00203A  6E08               	movwf	___flge@ff1+2,c
  5085  00203C  0E42               	movlw	66
  5086  00203E  6E09               	movwf	___flge@ff1+3,c
  5087  002040  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  5088  002044  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  5089  002048  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  5090  00204C  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  5091  002050  ECA5  F014         	call	___flge	;wreg free
  5092  002054  A0D8               	btfss	status,0,c
  5093  002056  0012               	return	
  5094  002058  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  5095  00205A  0012               	return	
  5096  00205C  0E00               	movlw	0
  5097  00205E  6E06               	movwf	___flge@ff1,c
  5098  002060  0E00               	movlw	0
  5099  002062  6E07               	movwf	___flge@ff1+1,c
  5100  002064  0EC8               	movlw	200
  5101  002066  6E08               	movwf	___flge@ff1+2,c
  5102  002068  0E42               	movlw	66
  5103  00206A  6E09               	movwf	___flge@ff1+3,c
  5104  00206C  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  5105  002070  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  5106  002074  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  5107  002078  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  5108  00207C  ECA5  F014         	call	___flge	;wreg free
  5109  002080  A0D8               	btfss	status,0,c
  5110  002082  0012               	return	
  5111                           
  5112                           ;main.c: 302:         unsigned short max_duty_val = PR2 + 1;
  5113  002084  0E01               	movlw	1
  5114  002086  24CB               	addwf	4043,w,c	;volatile
  5115  002088  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  5116  00208A  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  5117  00208C  0E00               	movlw	0
  5118  00208E  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  5119                           
  5120                           ;main.c: 308:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5121  002090  0E00               	movlw	0
  5122  002092  6E31               	movwf	___fldiv@a,c
  5123  002094  0E00               	movlw	0
  5124  002096  6E32               	movwf	___fldiv@a+1,c
  5125  002098  0EC8               	movlw	200
  5126  00209A  6E33               	movwf	___fldiv@a+2,c
  5127  00209C  0E42               	movlw	66
  5128  00209E  6E34               	movwf	___fldiv@a+3,c
  5129  0020A0  0E00               	movlw	0
  5130  0020A2  6E18               	movwf	___flmul@a,c
  5131  0020A4  0E00               	movlw	0
  5132  0020A6  6E19               	movwf	___flmul@a+1,c
  5133  0020A8  0E80               	movlw	128
  5134  0020AA  6E1A               	movwf	___flmul@a+2,c
  5135  0020AC  0E40               	movlw	64
  5136  0020AE  6E1B               	movwf	___flmul@a+3,c
  5137  0020B0  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  5138  0020B4  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  5139  0020B8  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  5140  0020BC  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  5141  0020C0  EC34  F008         	call	___flmul	;wreg free
  5142  0020C4  C014  F02D         	movff	?___flmul,___fldiv@b
  5143  0020C8  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5144  0020CC  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5145  0020D0  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5146  0020D4  EC63  F00B         	call	___fldiv	;wreg free
  5147  0020D8  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2187
  5148  0020DC  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2187+1
  5149  0020E0  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2187+2
  5150  0020E4  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2187+3
  5151                           
  5152                           ;main.c: 308:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  5153  0020E8  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  5154  0020EC  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  5155  0020F0  6A08               	clrf	___xxtofl@val+2,c
  5156  0020F2  6A09               	clrf	___xxtofl@val+3,c
  5157  0020F4  0E00               	movlw	0
  5158  0020F6  EC5D  F012         	call	___xxtofl
  5159  0020FA  C006  F018         	movff	?___xxtofl,___flmul@a
  5160  0020FE  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  5161  002102  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  5162  002106  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  5163  00210A  C068  F014         	movff	_set_pwm_duty_cycle$2187,___flmul@b
  5164  00210E  C069  F015         	movff	_set_pwm_duty_cycle$2187+1,___flmul@b+1
  5165  002112  C06A  F016         	movff	_set_pwm_duty_cycle$2187+2,___flmul@b+2
  5166  002116  C06B  F017         	movff	_set_pwm_duty_cycle$2187+3,___flmul@b+3
  5167  00211A  EC34  F008         	call	___flmul	;wreg free
  5168  00211E  C014  F04E         	movff	?___flmul,___fltol@f1
  5169  002122  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  5170  002126  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  5171  00212A  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  5172  00212E  EC0D  F015         	call	___fltol	;wreg free
  5173  002132  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  5174  002136  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  5175                           
  5176                           ;main.c: 309:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  5177  00213A  0E00               	movlw	0
  5178  00213C  6E31               	movwf	___fldiv@a,c
  5179  00213E  0E00               	movlw	0
  5180  002140  6E32               	movwf	___fldiv@a+1,c
  5181  002142  0EC8               	movlw	200
  5182  002144  6E33               	movwf	___fldiv@a+2,c
  5183  002146  0E42               	movlw	66
  5184  002148  6E34               	movwf	___fldiv@a+3,c
  5185  00214A  0E00               	movlw	0
  5186  00214C  6E18               	movwf	___flmul@a,c
  5187  00214E  0E00               	movlw	0
  5188  002150  6E19               	movwf	___flmul@a+1,c
  5189  002152  0E80               	movlw	128
  5190  002154  6E1A               	movwf	___flmul@a+2,c
  5191  002156  0E40               	movlw	64
  5192  002158  6E1B               	movwf	___flmul@a+3,c
  5193  00215A  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  5194  00215E  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  5195  002162  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  5196  002166  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  5197  00216A  EC34  F008         	call	___flmul	;wreg free
  5198  00216E  C014  F02D         	movff	?___flmul,___fldiv@b
  5199  002172  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5200  002176  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5201  00217A  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5202  00217E  EC63  F00B         	call	___fldiv	;wreg free
  5203  002182  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2187
  5204  002186  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2187+1
  5205  00218A  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2187+2
  5206  00218E  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2187+3
  5207                           
  5208                           ;main.c: 309:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  5209  002192  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  5210  002196  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  5211  00219A  6A08               	clrf	___xxtofl@val+2,c
  5212  00219C  6A09               	clrf	___xxtofl@val+3,c
  5213  00219E  0E00               	movlw	0
  5214  0021A0  EC5D  F012         	call	___xxtofl
  5215  0021A4  C006  F018         	movff	?___xxtofl,___flmul@a
  5216  0021A8  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  5217  0021AC  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  5218  0021B0  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  5219  0021B4  C068  F014         	movff	_set_pwm_duty_cycle$2187,___flmul@b
  5220  0021B8  C069  F015         	movff	_set_pwm_duty_cycle$2187+1,___flmul@b+1
  5221  0021BC  C06A  F016         	movff	_set_pwm_duty_cycle$2187+2,___flmul@b+2
  5222  0021C0  C06B  F017         	movff	_set_pwm_duty_cycle$2187+3,___flmul@b+3
  5223  0021C4  EC34  F008         	call	___flmul	;wreg free
  5224  0021C8  C014  F04E         	movff	?___flmul,___fltol@f1
  5225  0021CC  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  5226  0021D0  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  5227  0021D4  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  5228  0021D8  EC0D  F015         	call	___fltol	;wreg free
  5229  0021DC  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  5230  0021E0  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  5231                           
  5232                           ;main.c: 313:         CCP1X = duty_valA & 2;
  5233  0021E4  9ABD               	bcf	4029,5,c	;volatile
  5234                           
  5235                           ;main.c: 314:         CCP1Y = duty_valA & 1;
  5236  0021E6  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  5237  0021E8  D002               	goto	u8110
  5238  0021EA  88BD               	bsf	4029,4,c	;volatile
  5239  0021EC  D001               	goto	u8125
  5240  0021EE                     u8110:
  5241  0021EE  98BD               	bcf	4029,4,c	;volatile
  5242  0021F0                     u8125:
  5243                           
  5244                           ;main.c: 315:         CCPR1L = duty_valA >> 2;
  5245  0021F0  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  5246  0021F4  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  5247  0021F8  90D8               	bcf	status,0,c
  5248  0021FA  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5249  0021FC  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5250  0021FE  90D8               	bcf	status,0,c
  5251  002200  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5252  002202  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5253  002204  5060               	movf	??_set_pwm_duty_cycle,w,c
  5254  002206  6EBE               	movwf	4030,c	;volatile
  5255                           
  5256                           ;main.c: 319:         CCP2X = duty_valB & 2;
  5257  002208  9ABA               	bcf	4026,5,c	;volatile
  5258                           
  5259                           ;main.c: 320:         CCP2Y = duty_valB & 1;
  5260  00220A  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  5261  00220C  D002               	goto	u8130
  5262  00220E  88BA               	bsf	4026,4,c	;volatile
  5263  002210  D001               	goto	u8145
  5264  002212                     u8130:
  5265  002212  98BA               	bcf	4026,4,c	;volatile
  5266  002214                     u8145:
  5267                           
  5268                           ;main.c: 321:         CCPR2L = duty_valB >> 2;
  5269  002214  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  5270  002218  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  5271  00221C  90D8               	bcf	status,0,c
  5272  00221E  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5273  002220  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5274  002222  90D8               	bcf	status,0,c
  5275  002224  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  5276  002226  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  5277  002228  5060               	movf	??_set_pwm_duty_cycle,w,c
  5278  00222A  6EBB               	movwf	4027,c	;volatile
  5279  00222C  0012               	return		;funcret
  5280  00222E                     __end_of_set_pwm_duty_cycle:
  5281                           	opt callstack 0
  5282                           
  5283 ;; *************** function ___xxtofl *****************
  5284 ;; Defined at:
  5285 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  sign            1    wreg     unsigned char 
  5288 ;;  val             4    5[COMRAM] long 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  sign            1   13[COMRAM] unsigned char 
  5291 ;;  arg             4   15[COMRAM] unsigned long 
  5292 ;;  exp             1   14[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4    5[COMRAM] unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:       14 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    2
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_set_pwm_duty_cycle
  5313 ;;		_setMotorSpeeds
  5314 ;;		_errorCorrectedMove
  5315 ;;		_PIDCorrectedMove
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text20
  5320  0024BA                     __ptext20:
  5321                           	opt callstack 0
  5322  0024BA                     ___xxtofl:
  5323                           	opt callstack 25
  5324                           
  5325                           ;incstack = 0
  5326                           ;___xxtofl@sign stored from wreg
  5327  0024BA  6E0E               	movwf	___xxtofl@sign,c
  5328  0024BC  500E               	movf	___xxtofl@sign,w,c
  5329  0024BE  A4D8               	btfss	status,2,c
  5330  0024C0  AE09               	btfss	___xxtofl@val+3,7,c
  5331  0024C2  D01A               	goto	l1319
  5332  0024C4  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5333  0024C8  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5334  0024CC  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5335  0024D0  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5336  0024D4  1E0A               	comf	??___xxtofl,f,c
  5337  0024D6  1E0B               	comf	??___xxtofl+1,f,c
  5338  0024D8  1E0C               	comf	??___xxtofl+2,f,c
  5339  0024DA  1E0D               	comf	??___xxtofl+3,f,c
  5340  0024DC  2A0A               	incf	??___xxtofl,f,c
  5341  0024DE  0E00               	movlw	0
  5342  0024E0  220B               	addwfc	??___xxtofl+1,f,c
  5343  0024E2  220C               	addwfc	??___xxtofl+2,f,c
  5344  0024E4  220D               	addwfc	??___xxtofl+3,f,c
  5345  0024E6  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5346  0024EA  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5347  0024EE  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5348  0024F2  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5349  0024F6  D008               	goto	l7033
  5350  0024F8                     l1319:
  5351  0024F8  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5352  0024FC  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5353  002500  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5354  002504  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5355  002508                     l7033:
  5356  002508  5006               	movf	___xxtofl@val,w,c
  5357  00250A  1007               	iorwf	___xxtofl@val+1,w,c
  5358  00250C  1008               	iorwf	___xxtofl@val+2,w,c
  5359  00250E  1009               	iorwf	___xxtofl@val+3,w,c
  5360  002510  A4D8               	btfss	status,2,c
  5361  002512  D009               	goto	l7039
  5362  002514  0E00               	movlw	0
  5363  002516  6E06               	movwf	?___xxtofl,c
  5364  002518  0E00               	movlw	0
  5365  00251A  6E07               	movwf	?___xxtofl+1,c
  5366  00251C  0E00               	movlw	0
  5367  00251E  6E08               	movwf	?___xxtofl+2,c
  5368  002520  0E00               	movlw	0
  5369  002522  6E09               	movwf	?___xxtofl+3,c
  5370  002524  0012               	return	
  5371  002526                     l7039:
  5372  002526  0E96               	movlw	150
  5373  002528  6E0F               	movwf	___xxtofl@exp,c
  5374  00252A  D006               	goto	l7043
  5375  00252C                     l7041:
  5376  00252C  2A0F               	incf	___xxtofl@exp,f,c
  5377  00252E  90D8               	bcf	status,0,c
  5378  002530  3213               	rrcf	___xxtofl@arg+3,f,c
  5379  002532  3212               	rrcf	___xxtofl@arg+2,f,c
  5380  002534  3211               	rrcf	___xxtofl@arg+1,f,c
  5381  002536  3210               	rrcf	___xxtofl@arg,f,c
  5382  002538                     l7043:
  5383  002538  0E00               	movlw	0
  5384  00253A  1410               	andwf	___xxtofl@arg,w,c
  5385  00253C  6E0A               	movwf	??___xxtofl& (0+255),c
  5386  00253E  0E00               	movlw	0
  5387  002540  1411               	andwf	___xxtofl@arg+1,w,c
  5388  002542  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  5389  002544  0E00               	movlw	0
  5390  002546  1412               	andwf	___xxtofl@arg+2,w,c
  5391  002548  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  5392  00254A  0EFE               	movlw	254
  5393  00254C  1413               	andwf	___xxtofl@arg+3,w,c
  5394  00254E  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  5395  002550  500A               	movf	??___xxtofl,w,c
  5396  002552  100B               	iorwf	??___xxtofl+1,w,c
  5397  002554  100C               	iorwf	??___xxtofl+2,w,c
  5398  002556  100D               	iorwf	??___xxtofl+3,w,c
  5399  002558  B4D8               	btfsc	status,2,c
  5400  00255A  D00D               	goto	l1326
  5401  00255C  D7E7               	goto	l7041
  5402  00255E                     l7045:
  5403  00255E  2A0F               	incf	___xxtofl@exp,f,c
  5404  002560  0E01               	movlw	1
  5405  002562  2610               	addwf	___xxtofl@arg,f,c
  5406  002564  0E00               	movlw	0
  5407  002566  2211               	addwfc	___xxtofl@arg+1,f,c
  5408  002568  2212               	addwfc	___xxtofl@arg+2,f,c
  5409  00256A  2213               	addwfc	___xxtofl@arg+3,f,c
  5410  00256C  90D8               	bcf	status,0,c
  5411  00256E  3213               	rrcf	___xxtofl@arg+3,f,c
  5412  002570  3212               	rrcf	___xxtofl@arg+2,f,c
  5413  002572  3211               	rrcf	___xxtofl@arg+1,f,c
  5414  002574  3210               	rrcf	___xxtofl@arg,f,c
  5415  002576                     l1326:
  5416  002576  0E00               	movlw	0
  5417  002578  1410               	andwf	___xxtofl@arg,w,c
  5418  00257A  6E0A               	movwf	??___xxtofl& (0+255),c
  5419  00257C  0E00               	movlw	0
  5420  00257E  1411               	andwf	___xxtofl@arg+1,w,c
  5421  002580  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  5422  002582  0E00               	movlw	0
  5423  002584  1412               	andwf	___xxtofl@arg+2,w,c
  5424  002586  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  5425  002588  0EFF               	movlw	255
  5426  00258A  1413               	andwf	___xxtofl@arg+3,w,c
  5427  00258C  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  5428  00258E  500A               	movf	??___xxtofl,w,c
  5429  002590  100B               	iorwf	??___xxtofl+1,w,c
  5430  002592  100C               	iorwf	??___xxtofl+2,w,c
  5431  002594  100D               	iorwf	??___xxtofl+3,w,c
  5432  002596  B4D8               	btfsc	status,2,c
  5433  002598  D007               	goto	l7053
  5434  00259A  D7E1               	goto	l7045
  5435  00259C                     l7051:
  5436  00259C  060F               	decf	___xxtofl@exp,f,c
  5437  00259E  90D8               	bcf	status,0,c
  5438  0025A0  3610               	rlcf	___xxtofl@arg,f,c
  5439  0025A2  3611               	rlcf	___xxtofl@arg+1,f,c
  5440  0025A4  3612               	rlcf	___xxtofl@arg+2,f,c
  5441  0025A6  3613               	rlcf	___xxtofl@arg+3,f,c
  5442  0025A8                     l7053:
  5443  0025A8  BE12               	btfsc	___xxtofl@arg+2,7,c
  5444  0025AA  D003               	goto	u8030
  5445  0025AC  0E02               	movlw	2
  5446  0025AE  600F               	cpfslt	___xxtofl@exp,c
  5447  0025B0  D7F5               	goto	l7051
  5448  0025B2                     u8030:
  5449  0025B2  A00F               	btfss	___xxtofl@exp,0,c
  5450  0025B4  9E12               	bcf	___xxtofl@arg+2,7,c
  5451  0025B6  90D8               	bcf	status,0,c
  5452  0025B8  320F               	rrcf	___xxtofl@exp,f,c
  5453  0025BA  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5454  0025BE  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  5455  0025C0  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  5456  0025C2  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  5457  0025C4  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5458  0025C8  6A0C               	clrf	??___xxtofl+2,c
  5459  0025CA  6A0B               	clrf	??___xxtofl+1,c
  5460  0025CC  6A0A               	clrf	??___xxtofl,c
  5461  0025CE  500A               	movf	??___xxtofl,w,c
  5462  0025D0  1210               	iorwf	___xxtofl@arg,f,c
  5463  0025D2  500B               	movf	??___xxtofl+1,w,c
  5464  0025D4  1211               	iorwf	___xxtofl@arg+1,f,c
  5465  0025D6  500C               	movf	??___xxtofl+2,w,c
  5466  0025D8  1212               	iorwf	___xxtofl@arg+2,f,c
  5467  0025DA  500D               	movf	??___xxtofl+3,w,c
  5468  0025DC  1213               	iorwf	___xxtofl@arg+3,f,c
  5469  0025DE  500E               	movf	___xxtofl@sign,w,c
  5470  0025E0  A4D8               	btfss	status,2,c
  5471  0025E2  AE09               	btfss	___xxtofl@val+3,7,c
  5472  0025E4  D001               	goto	l7069
  5473  0025E6  8E13               	bsf	___xxtofl@arg+3,7,c
  5474  0025E8                     l7069:
  5475  0025E8  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5476  0025EC  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5477  0025F0  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5478  0025F4  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5479  0025F8  0012               	return		;funcret
  5480  0025FA                     __end_of___xxtofl:
  5481                           	opt callstack 0
  5482                           
  5483 ;; *************** function ___fltol *****************
  5484 ;; Defined at:
  5485 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  f1              4   77[COMRAM] unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  exp1            1   86[COMRAM] unsigned char 
  5490 ;;  sign1           1   85[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  4   77[COMRAM] long 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;Total ram usage:       10 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    2
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_set_pwm_duty_cycle
  5511 ;;		_errorCorrectedMove
  5512 ;;		_PIDCorrectedMove
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text21
  5517  002A1A                     __ptext21:
  5518                           	opt callstack 0
  5519  002A1A                     ___fltol:
  5520                           	opt callstack 25
  5521                           
  5522                           ;incstack = 0
  5523  002A1A  3450               	rlcf	___fltol@f1+2,w,c
  5524  002A1C  3451               	rlcf	___fltol@f1+3,w,c
  5525  002A1E  6E57               	movwf	___fltol@exp1,c
  5526  002A20  5057               	movf	___fltol@exp1,w,c
  5527  002A22  A4D8               	btfss	status,2,c
  5528  002A24  D009               	goto	l6989
  5529  002A26                     u7900:
  5530  002A26  0E00               	movlw	0
  5531  002A28  6E4E               	movwf	?___fltol,c
  5532  002A2A  0E00               	movlw	0
  5533  002A2C  6E4F               	movwf	?___fltol+1,c
  5534  002A2E  0E00               	movlw	0
  5535  002A30  6E50               	movwf	?___fltol+2,c
  5536  002A32  0E00               	movlw	0
  5537  002A34  6E51               	movwf	?___fltol+3,c
  5538  002A36  0012               	return	
  5539  002A38                     l6989:
  5540  002A38  C04E  F052         	movff	___fltol@f1,??___fltol
  5541  002A3C  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  5542  002A40  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  5543  002A44  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  5544  002A48  0E20               	movlw	32
  5545  002A4A  D005               	goto	u7910
  5546  002A4C                     u7915:
  5547  002A4C  90D8               	bcf	status,0,c
  5548  002A4E  3255               	rrcf	??___fltol+3,f,c
  5549  002A50  3254               	rrcf	??___fltol+2,f,c
  5550  002A52  3253               	rrcf	??___fltol+1,f,c
  5551  002A54  3252               	rrcf	??___fltol,f,c
  5552  002A56                     u7910:
  5553  002A56  2EE8               	decfsz	wreg,f,c
  5554  002A58  D7F9               	goto	u7915
  5555  002A5A  5052               	movf	??___fltol,w,c
  5556  002A5C  6E56               	movwf	___fltol@sign1,c
  5557  002A5E  8E50               	bsf	___fltol@f1+2,7,c
  5558  002A60  0EFF               	movlw	255
  5559  002A62  164E               	andwf	___fltol@f1,f,c
  5560  002A64  0EFF               	movlw	255
  5561  002A66  164F               	andwf	___fltol@f1+1,f,c
  5562  002A68  0EFF               	movlw	255
  5563  002A6A  1650               	andwf	___fltol@f1+2,f,c
  5564  002A6C  0E00               	movlw	0
  5565  002A6E  1651               	andwf	___fltol@f1+3,f,c
  5566  002A70  0E96               	movlw	150
  5567  002A72  5E57               	subwf	___fltol@exp1,f,c
  5568  002A74  AE57               	btfss	___fltol@exp1,7,c
  5569  002A76  D00D               	goto	l7009
  5570  002A78  5057               	movf	___fltol@exp1,w,c
  5571  002A7A  0A80               	xorlw	128
  5572  002A7C  0F97               	addlw	151
  5573  002A7E  A0D8               	btfss	status,0,c
  5574  002A80  D7D2               	goto	u7900
  5575  002A82                     l7005:
  5576  002A82  90D8               	bcf	status,0,c
  5577  002A84  3251               	rrcf	___fltol@f1+3,f,c
  5578  002A86  3250               	rrcf	___fltol@f1+2,f,c
  5579  002A88  324F               	rrcf	___fltol@f1+1,f,c
  5580  002A8A  324E               	rrcf	___fltol@f1,f,c
  5581  002A8C  3E57               	incfsz	___fltol@exp1,f,c
  5582  002A8E  D7F9               	goto	l7005
  5583  002A90  D00D               	goto	u7950
  5584  002A92                     l7009:
  5585  002A92  0E1F               	movlw	31
  5586  002A94  6457               	cpfsgt	___fltol@exp1,c
  5587  002A96  D007               	goto	l7017
  5588  002A98  D7C6               	goto	u7900
  5589  002A9A                     l7015:
  5590  002A9A  90D8               	bcf	status,0,c
  5591  002A9C  364E               	rlcf	___fltol@f1,f,c
  5592  002A9E  364F               	rlcf	___fltol@f1+1,f,c
  5593  002AA0  3650               	rlcf	___fltol@f1+2,f,c
  5594  002AA2  3651               	rlcf	___fltol@f1+3,f,c
  5595  002AA4  0657               	decf	___fltol@exp1,f,c
  5596  002AA6                     l7017:
  5597  002AA6  5057               	movf	___fltol@exp1,w,c
  5598  002AA8  A4D8               	btfss	status,2,c
  5599  002AAA  D7F7               	goto	l7015
  5600  002AAC                     u7950:
  5601  002AAC  5056               	movf	___fltol@sign1,w,c
  5602  002AAE  B4D8               	btfsc	status,2,c
  5603  002AB0  D008               	goto	l7023
  5604  002AB2  1E51               	comf	___fltol@f1+3,f,c
  5605  002AB4  1E50               	comf	___fltol@f1+2,f,c
  5606  002AB6  1E4F               	comf	___fltol@f1+1,f,c
  5607  002AB8  6C4E               	negf	___fltol@f1,c
  5608  002ABA  0E00               	movlw	0
  5609  002ABC  224F               	addwfc	___fltol@f1+1,f,c
  5610  002ABE  2250               	addwfc	___fltol@f1+2,f,c
  5611  002AC0  2251               	addwfc	___fltol@f1+3,f,c
  5612  002AC2                     l7023:
  5613  002AC2  C04E  F04E         	movff	___fltol@f1,?___fltol
  5614  002AC6  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  5615  002ACA  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  5616  002ACE  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  5617  002AD2  0012               	return		;funcret
  5618  002AD4                     __end_of___fltol:
  5619                           	opt callstack 0
  5620                           
  5621 ;; *************** function ___flmul *****************
  5622 ;; Defined at:
  5623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  b               4   19[COMRAM] long 
  5626 ;;  a               4   23[COMRAM] long 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  prod            4   38[COMRAM] struct .
  5629 ;;  grs             4   33[COMRAM] unsigned long 
  5630 ;;  temp            2   42[COMRAM] struct .
  5631 ;;  bexp            1   37[COMRAM] unsigned char 
  5632 ;;  aexp            1   32[COMRAM] unsigned char 
  5633 ;;  sign            1   31[COMRAM] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  4   19[COMRAM] unsigned char 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, prodl, prodh
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;Total ram usage:       25 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    2
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_set_pwm_duty_cycle
  5654 ;;		_errorCorrectedMove
  5655 ;;		_PIDCorrectedMove
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text22
  5660  001068                     __ptext22:
  5661                           	opt callstack 0
  5662  001068                     ___flmul:
  5663                           	opt callstack 25
  5664                           
  5665                           ;incstack = 0
  5666  001068  5017               	movf	___flmul@b+3,w,c
  5667  00106A  0B80               	andlw	128
  5668  00106C  6E20               	movwf	___flmul@sign,c
  5669  00106E  5017               	movf	___flmul@b+3,w,c
  5670  001070  2417               	addwf	___flmul@b+3,w,c
  5671  001072  6E26               	movwf	___flmul@bexp,c
  5672  001074  BE16               	btfsc	___flmul@b+2,7,c
  5673  001076  8026               	bsf	___flmul@bexp,0,c
  5674  001078  5026               	movf	___flmul@bexp,w,c
  5675  00107A  B4D8               	btfsc	status,2,c
  5676  00107C  D00D               	goto	l6845
  5677  00107E  2826               	incf	___flmul@bexp,w,c
  5678  001080  A4D8               	btfss	status,2,c
  5679  001082  D008               	goto	l6843
  5680  001084  0E00               	movlw	0
  5681  001086  6E14               	movwf	___flmul@b,c
  5682  001088  0E00               	movlw	0
  5683  00108A  6E15               	movwf	___flmul@b+1,c
  5684  00108C  0E00               	movlw	0
  5685  00108E  6E16               	movwf	___flmul@b+2,c
  5686  001090  0E00               	movlw	0
  5687  001092  6E17               	movwf	___flmul@b+3,c
  5688  001094                     l6843:
  5689  001094  8E16               	bsf	___flmul@b+2,7,c
  5690  001096  D008               	goto	l6847
  5691  001098                     l6845:
  5692  001098  0E00               	movlw	0
  5693  00109A  6E14               	movwf	___flmul@b,c
  5694  00109C  0E00               	movlw	0
  5695  00109E  6E15               	movwf	___flmul@b+1,c
  5696  0010A0  0E00               	movlw	0
  5697  0010A2  6E16               	movwf	___flmul@b+2,c
  5698  0010A4  0E00               	movlw	0
  5699  0010A6  6E17               	movwf	___flmul@b+3,c
  5700  0010A8                     l6847:
  5701  0010A8  501B               	movf	___flmul@a+3,w,c
  5702  0010AA  0B80               	andlw	128
  5703  0010AC  1A20               	xorwf	___flmul@sign,f,c
  5704  0010AE  501B               	movf	___flmul@a+3,w,c
  5705  0010B0  241B               	addwf	___flmul@a+3,w,c
  5706  0010B2  6E21               	movwf	___flmul@aexp,c
  5707  0010B4  BE1A               	btfsc	___flmul@a+2,7,c
  5708  0010B6  8021               	bsf	___flmul@aexp,0,c
  5709  0010B8  5021               	movf	___flmul@aexp,w,c
  5710  0010BA  B4D8               	btfsc	status,2,c
  5711  0010BC  D00D               	goto	l6863
  5712  0010BE  2821               	incf	___flmul@aexp,w,c
  5713  0010C0  A4D8               	btfss	status,2,c
  5714  0010C2  D008               	goto	l6861
  5715  0010C4  0E00               	movlw	0
  5716  0010C6  6E18               	movwf	___flmul@a,c
  5717  0010C8  0E00               	movlw	0
  5718  0010CA  6E19               	movwf	___flmul@a+1,c
  5719  0010CC  0E00               	movlw	0
  5720  0010CE  6E1A               	movwf	___flmul@a+2,c
  5721  0010D0  0E00               	movlw	0
  5722  0010D2  6E1B               	movwf	___flmul@a+3,c
  5723  0010D4                     l6861:
  5724  0010D4  8E1A               	bsf	___flmul@a+2,7,c
  5725  0010D6  D008               	goto	l1278
  5726  0010D8                     l6863:
  5727  0010D8  0E00               	movlw	0
  5728  0010DA  6E18               	movwf	___flmul@a,c
  5729  0010DC  0E00               	movlw	0
  5730  0010DE  6E19               	movwf	___flmul@a+1,c
  5731  0010E0  0E00               	movlw	0
  5732  0010E2  6E1A               	movwf	___flmul@a+2,c
  5733  0010E4  0E00               	movlw	0
  5734  0010E6  6E1B               	movwf	___flmul@a+3,c
  5735  0010E8                     l1278:
  5736  0010E8  5021               	movf	___flmul@aexp,w,c
  5737  0010EA  B4D8               	btfsc	status,2,c
  5738  0010EC  D003               	goto	u7730
  5739  0010EE  5026               	movf	___flmul@bexp,w,c
  5740  0010F0  A4D8               	btfss	status,2,c
  5741  0010F2  D009               	goto	l6871
  5742  0010F4                     u7730:
  5743  0010F4  0E00               	movlw	0
  5744  0010F6  6E14               	movwf	?___flmul,c
  5745  0010F8  0E00               	movlw	0
  5746  0010FA  6E15               	movwf	?___flmul+1,c
  5747  0010FC  0E00               	movlw	0
  5748  0010FE  6E16               	movwf	?___flmul+2,c
  5749  001100  0E00               	movlw	0
  5750  001102  6E17               	movwf	?___flmul+3,c
  5751  001104  0012               	return	
  5752  001106                     l6871:
  5753  001106  501A               	movf	___flmul@a+2,w,c
  5754  001108  0214               	mulwf	___flmul@b,c
  5755  00110A  CFF3 F02B          	movff	prodl,___flmul@temp
  5756  00110E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5757  001112  502B               	movf	___flmul@temp,w,c
  5758  001114  6E22               	movwf	___flmul@grs,c
  5759  001116  6A23               	clrf	___flmul@grs+1,c
  5760  001118  6A24               	clrf	___flmul@grs+2,c
  5761  00111A  6A25               	clrf	___flmul@grs+3,c
  5762  00111C  502C               	movf	___flmul@temp+1,w,c
  5763  00111E  6E27               	movwf	___flmul@prod,c
  5764  001120  6A28               	clrf	___flmul@prod+1,c
  5765  001122  6A29               	clrf	___flmul@prod+2,c
  5766  001124  6A2A               	clrf	___flmul@prod+3,c
  5767  001126  5019               	movf	___flmul@a+1,w,c
  5768  001128  0215               	mulwf	___flmul@b+1,c
  5769  00112A  CFF3 F02B          	movff	prodl,___flmul@temp
  5770  00112E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5771  001132  502B               	movf	___flmul@temp,w,c
  5772  001134  2622               	addwf	___flmul@grs,f,c
  5773  001136  0E00               	movlw	0
  5774  001138  2223               	addwfc	___flmul@grs+1,f,c
  5775  00113A  2224               	addwfc	___flmul@grs+2,f,c
  5776  00113C  2225               	addwfc	___flmul@grs+3,f,c
  5777  00113E  502C               	movf	___flmul@temp+1,w,c
  5778  001140  2627               	addwf	___flmul@prod,f,c
  5779  001142  0E00               	movlw	0
  5780  001144  2228               	addwfc	___flmul@prod+1,f,c
  5781  001146  2229               	addwfc	___flmul@prod+2,f,c
  5782  001148  222A               	addwfc	___flmul@prod+3,f,c
  5783  00114A  5018               	movf	___flmul@a,w,c
  5784  00114C  0216               	mulwf	___flmul@b+2,c
  5785  00114E  CFF3 F02B          	movff	prodl,___flmul@temp
  5786  001152  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5787  001156  502B               	movf	___flmul@temp,w,c
  5788  001158  2622               	addwf	___flmul@grs,f,c
  5789  00115A  0E00               	movlw	0
  5790  00115C  2223               	addwfc	___flmul@grs+1,f,c
  5791  00115E  2224               	addwfc	___flmul@grs+2,f,c
  5792  001160  2225               	addwfc	___flmul@grs+3,f,c
  5793  001162  502C               	movf	___flmul@temp+1,w,c
  5794  001164  2627               	addwf	___flmul@prod,f,c
  5795  001166  0E00               	movlw	0
  5796  001168  2228               	addwfc	___flmul@prod+1,f,c
  5797  00116A  2229               	addwfc	___flmul@prod+2,f,c
  5798  00116C  222A               	addwfc	___flmul@prod+3,f,c
  5799  00116E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5800  001172  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5801  001176  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5802  00117A  6A22               	clrf	___flmul@grs,c
  5803  00117C  5018               	movf	___flmul@a,w,c
  5804  00117E  0215               	mulwf	___flmul@b+1,c
  5805  001180  CFF3 F02B          	movff	prodl,___flmul@temp
  5806  001184  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5807  001188  502B               	movf	___flmul@temp,w,c
  5808  00118A  2622               	addwf	___flmul@grs,f,c
  5809  00118C  502C               	movf	___flmul@temp+1,w,c
  5810  00118E  2223               	addwfc	___flmul@grs+1,f,c
  5811  001190  0E00               	movlw	0
  5812  001192  2224               	addwfc	___flmul@grs+2,f,c
  5813  001194  0E00               	movlw	0
  5814  001196  2225               	addwfc	___flmul@grs+3,f,c
  5815  001198  5019               	movf	___flmul@a+1,w,c
  5816  00119A  0214               	mulwf	___flmul@b,c
  5817  00119C  CFF3 F02B          	movff	prodl,___flmul@temp
  5818  0011A0  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5819  0011A4  502B               	movf	___flmul@temp,w,c
  5820  0011A6  2622               	addwf	___flmul@grs,f,c
  5821  0011A8  502C               	movf	___flmul@temp+1,w,c
  5822  0011AA  2223               	addwfc	___flmul@grs+1,f,c
  5823  0011AC  0E00               	movlw	0
  5824  0011AE  2224               	addwfc	___flmul@grs+2,f,c
  5825  0011B0  0E00               	movlw	0
  5826  0011B2  2225               	addwfc	___flmul@grs+3,f,c
  5827  0011B4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5828  0011B8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5829  0011BC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5830  0011C0  6A22               	clrf	___flmul@grs,c
  5831  0011C2  5018               	movf	___flmul@a,w,c
  5832  0011C4  0214               	mulwf	___flmul@b,c
  5833  0011C6  CFF3 F02B          	movff	prodl,___flmul@temp
  5834  0011CA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5835  0011CE  502B               	movf	___flmul@temp,w,c
  5836  0011D0  2622               	addwf	___flmul@grs,f,c
  5837  0011D2  502C               	movf	___flmul@temp+1,w,c
  5838  0011D4  2223               	addwfc	___flmul@grs+1,f,c
  5839  0011D6  0E00               	movlw	0
  5840  0011D8  2224               	addwfc	___flmul@grs+2,f,c
  5841  0011DA  0E00               	movlw	0
  5842  0011DC  2225               	addwfc	___flmul@grs+3,f,c
  5843  0011DE  501A               	movf	___flmul@a+2,w,c
  5844  0011E0  0215               	mulwf	___flmul@b+1,c
  5845  0011E2  CFF3 F02B          	movff	prodl,___flmul@temp
  5846  0011E6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5847  0011EA  502B               	movf	___flmul@temp,w,c
  5848  0011EC  2627               	addwf	___flmul@prod,f,c
  5849  0011EE  502C               	movf	___flmul@temp+1,w,c
  5850  0011F0  2228               	addwfc	___flmul@prod+1,f,c
  5851  0011F2  0E00               	movlw	0
  5852  0011F4  2229               	addwfc	___flmul@prod+2,f,c
  5853  0011F6  0E00               	movlw	0
  5854  0011F8  222A               	addwfc	___flmul@prod+3,f,c
  5855  0011FA  5019               	movf	___flmul@a+1,w,c
  5856  0011FC  0216               	mulwf	___flmul@b+2,c
  5857  0011FE  CFF3 F02B          	movff	prodl,___flmul@temp
  5858  001202  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5859  001206  502B               	movf	___flmul@temp,w,c
  5860  001208  2627               	addwf	___flmul@prod,f,c
  5861  00120A  502C               	movf	___flmul@temp+1,w,c
  5862  00120C  2228               	addwfc	___flmul@prod+1,f,c
  5863  00120E  0E00               	movlw	0
  5864  001210  2229               	addwfc	___flmul@prod+2,f,c
  5865  001212  0E00               	movlw	0
  5866  001214  222A               	addwfc	___flmul@prod+3,f,c
  5867  001216  501A               	movf	___flmul@a+2,w,c
  5868  001218  0216               	mulwf	___flmul@b+2,c
  5869  00121A  CFF3 F02B          	movff	prodl,___flmul@temp
  5870  00121E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5871  001222  502B               	movf	___flmul@temp,w,c
  5872  001224  6E1C               	movwf	??___flmul& (0+255),c
  5873  001226  502C               	movf	___flmul@temp+1,w,c
  5874  001228  6E1D               	movwf	(??___flmul+1)& (0+255),c
  5875  00122A  6A1E               	clrf	(??___flmul+2)& (0+255),c
  5876  00122C  6A1F               	clrf	(??___flmul+3)& (0+255),c
  5877  00122E  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  5878  001232  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  5879  001236  C01C  F01D         	movff	??___flmul,??___flmul+1
  5880  00123A  6A1C               	clrf	??___flmul,c
  5881  00123C  501C               	movf	??___flmul,w,c
  5882  00123E  2627               	addwf	___flmul@prod,f,c
  5883  001240  501D               	movf	??___flmul+1,w,c
  5884  001242  2228               	addwfc	___flmul@prod+1,f,c
  5885  001244  501E               	movf	??___flmul+2,w,c
  5886  001246  2229               	addwfc	___flmul@prod+2,f,c
  5887  001248  501F               	movf	??___flmul+3,w,c
  5888  00124A  222A               	addwfc	___flmul@prod+3,f,c
  5889  00124C  C022  F01C         	movff	___flmul@grs,??___flmul
  5890  001250  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  5891  001254  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  5892  001258  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  5893  00125C  0E19               	movlw	25
  5894  00125E  D005               	goto	u7740
  5895  001260                     u7745:
  5896  001260  90D8               	bcf	status,0,c
  5897  001262  321F               	rrcf	??___flmul+3,f,c
  5898  001264  321E               	rrcf	??___flmul+2,f,c
  5899  001266  321D               	rrcf	??___flmul+1,f,c
  5900  001268  321C               	rrcf	??___flmul,f,c
  5901  00126A                     u7740:
  5902  00126A  2EE8               	decfsz	wreg,f,c
  5903  00126C  D7F9               	goto	u7745
  5904  00126E  501C               	movf	??___flmul,w,c
  5905  001270  2627               	addwf	___flmul@prod,f,c
  5906  001272  501D               	movf	??___flmul+1,w,c
  5907  001274  2228               	addwfc	___flmul@prod+1,f,c
  5908  001276  501E               	movf	??___flmul+2,w,c
  5909  001278  2229               	addwfc	___flmul@prod+2,f,c
  5910  00127A  501F               	movf	??___flmul+3,w,c
  5911  00127C  222A               	addwfc	___flmul@prod+3,f,c
  5912  00127E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  5913  001282  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  5914  001286  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  5915  00128A  6A22               	clrf	___flmul@grs,c
  5916  00128C  5021               	movf	___flmul@aexp,w,c
  5917  00128E  C026  F01C         	movff	___flmul@bexp,??___flmul
  5918  001292  6A1D               	clrf	(??___flmul+1)& (0+255),c
  5919  001294  261C               	addwf	??___flmul,f,c
  5920  001296  0E00               	movlw	0
  5921  001298  221D               	addwfc	??___flmul+1,f,c
  5922  00129A  0E82               	movlw	130
  5923  00129C  241C               	addwf	??___flmul,w,c
  5924  00129E  6E2B               	movwf	___flmul@temp,c
  5925  0012A0  0EFF               	movlw	255
  5926  0012A2  201D               	addwfc	??___flmul+1,w,c
  5927  0012A4  6E2C               	movwf	___flmul@temp+1,c
  5928  0012A6  D00F               	goto	l6919
  5929  0012A8                     l6913:
  5930  0012A8  90D8               	bcf	status,0,c
  5931  0012AA  3627               	rlcf	___flmul@prod,f,c
  5932  0012AC  3628               	rlcf	___flmul@prod+1,f,c
  5933  0012AE  3629               	rlcf	___flmul@prod+2,f,c
  5934  0012B0  362A               	rlcf	___flmul@prod+3,f,c
  5935  0012B2  BE25               	btfsc	___flmul@grs+3,7,c
  5936  0012B4  8027               	bsf	___flmul@prod,0,c
  5937  0012B6  90D8               	bcf	status,0,c
  5938  0012B8  3622               	rlcf	___flmul@grs,f,c
  5939  0012BA  3623               	rlcf	___flmul@grs+1,f,c
  5940  0012BC  3624               	rlcf	___flmul@grs+2,f,c
  5941  0012BE  3625               	rlcf	___flmul@grs+3,f,c
  5942  0012C0  062B               	decf	___flmul@temp,f,c
  5943  0012C2  A0D8               	btfss	status,0,c
  5944  0012C4  062C               	decf	___flmul@temp+1,f,c
  5945  0012C6                     l6919:
  5946  0012C6  AE29               	btfss	___flmul@prod+2,7,c
  5947  0012C8  D7EF               	goto	l6913
  5948  0012CA  0E00               	movlw	0
  5949  0012CC  6E21               	movwf	___flmul@aexp,c
  5950  0012CE  AE25               	btfss	___flmul@grs+3,7,c
  5951  0012D0  D017               	goto	l1287
  5952  0012D2  0EFF               	movlw	255
  5953  0012D4  1422               	andwf	___flmul@grs,w,c
  5954  0012D6  6E1C               	movwf	??___flmul& (0+255),c
  5955  0012D8  0EFF               	movlw	255
  5956  0012DA  1423               	andwf	___flmul@grs+1,w,c
  5957  0012DC  6E1D               	movwf	(??___flmul+1)& (0+255),c
  5958  0012DE  0EFF               	movlw	255
  5959  0012E0  1424               	andwf	___flmul@grs+2,w,c
  5960  0012E2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  5961  0012E4  0E7F               	movlw	127
  5962  0012E6  1425               	andwf	___flmul@grs+3,w,c
  5963  0012E8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  5964  0012EA  501C               	movf	??___flmul,w,c
  5965  0012EC  101D               	iorwf	??___flmul+1,w,c
  5966  0012EE  101E               	iorwf	??___flmul+2,w,c
  5967  0012F0  101F               	iorwf	??___flmul+3,w,c
  5968  0012F2  B4D8               	btfsc	status,2,c
  5969  0012F4  D003               	goto	l1288
  5970  0012F6                     u7780:
  5971  0012F6  0E01               	movlw	1
  5972  0012F8  6E21               	movwf	___flmul@aexp,c
  5973  0012FA  D002               	goto	l1287
  5974  0012FC                     l1288:
  5975  0012FC  B027               	btfsc	___flmul@prod,0,c
  5976  0012FE  D7FB               	goto	u7780
  5977  001300                     l1287:
  5978  001300  5021               	movf	___flmul@aexp,w,c
  5979  001302  B4D8               	btfsc	status,2,c
  5980  001304  D01F               	goto	l6939
  5981  001306  0E01               	movlw	1
  5982  001308  2627               	addwf	___flmul@prod,f,c
  5983  00130A  0E00               	movlw	0
  5984  00130C  2228               	addwfc	___flmul@prod+1,f,c
  5985  00130E  2229               	addwfc	___flmul@prod+2,f,c
  5986  001310  222A               	addwfc	___flmul@prod+3,f,c
  5987  001312  A02A               	btfss	___flmul@prod+3,0,c
  5988  001314  D017               	goto	l6939
  5989  001316  C027  F01C         	movff	___flmul@prod,??___flmul
  5990  00131A  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  5991  00131E  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  5992  001322  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  5993  001326  341F               	rlcf	??___flmul+3,w,c
  5994  001328  321F               	rrcf	??___flmul+3,f,c
  5995  00132A  321E               	rrcf	??___flmul+2,f,c
  5996  00132C  321D               	rrcf	??___flmul+1,f,c
  5997  00132E  321C               	rrcf	??___flmul,f,c
  5998  001330  C01C  F027         	movff	??___flmul,___flmul@prod
  5999  001334  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6000  001338  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6001  00133C  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6002  001340  4A2B               	infsnz	___flmul@temp,f,c
  6003  001342  2A2C               	incf	___flmul@temp+1,f,c
  6004  001344                     l6939:
  6005  001344  BE2C               	btfsc	___flmul@temp+1,7,c
  6006  001346  D00D               	goto	l6943
  6007  001348  502C               	movf	___flmul@temp+1,w,c
  6008  00134A  E103               	bnz	u7820
  6009  00134C  282B               	incf	___flmul@temp,w,c
  6010  00134E  A0D8               	btfss	status,0,c
  6011  001350  D008               	goto	l6943
  6012  001352                     u7820:
  6013  001352  0E00               	movlw	0
  6014  001354  6E27               	movwf	___flmul@prod,c
  6015  001356  0E00               	movlw	0
  6016  001358  6E28               	movwf	___flmul@prod+1,c
  6017  00135A  0E80               	movlw	128
  6018  00135C  6E29               	movwf	___flmul@prod+2,c
  6019  00135E  0E7F               	movlw	127
  6020  001360  D020               	goto	L9
  6021  001362                     l6943:
  6022  001362  BE2C               	btfsc	___flmul@temp+1,7,c
  6023  001364  D005               	goto	u7830
  6024  001366  502C               	movf	___flmul@temp+1,w,c
  6025  001368  E10E               	bnz	l1295
  6026  00136A  042B               	decf	___flmul@temp,w,c
  6027  00136C  B0D8               	btfsc	status,0,c
  6028  00136E  D00B               	goto	l1295
  6029  001370                     u7830:
  6030  001370  0E00               	movlw	0
  6031  001372  6E27               	movwf	___flmul@prod,c
  6032  001374  0E00               	movlw	0
  6033  001376  6E28               	movwf	___flmul@prod+1,c
  6034  001378  0E00               	movlw	0
  6035  00137A  6E29               	movwf	___flmul@prod+2,c
  6036  00137C  0E00               	movlw	0
  6037  00137E  6E2A               	movwf	___flmul@prod+3,c
  6038  001380  0E00               	movlw	0
  6039  001382  6E20               	movwf	___flmul@sign,c
  6040  001384  D00F               	goto	l6955
  6041  001386                     l1295:
  6042  001386  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6043  00138A  0EFF               	movlw	255
  6044  00138C  1627               	andwf	___flmul@prod,f,c
  6045  00138E  0EFF               	movlw	255
  6046  001390  1628               	andwf	___flmul@prod+1,f,c
  6047  001392  0E7F               	movlw	127
  6048  001394  1629               	andwf	___flmul@prod+2,f,c
  6049  001396  0E00               	movlw	0
  6050  001398  162A               	andwf	___flmul@prod+3,f,c
  6051  00139A  B026               	btfsc	___flmul@bexp,0,c
  6052  00139C  8E29               	bsf	___flmul@prod+2,7,c
  6053  00139E  90D8               	bcf	status,0,c
  6054  0013A0  3026               	rrcf	___flmul@bexp,w,c
  6055  0013A2                     L9:
  6056  0013A2  6E2A               	movwf	___flmul@prod+3,c
  6057  0013A4                     l6955:
  6058  0013A4  5020               	movf	___flmul@sign,w,c
  6059  0013A6  122A               	iorwf	___flmul@prod+3,f,c
  6060  0013A8  C027  F014         	movff	___flmul@prod,?___flmul
  6061  0013AC  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6062  0013B0  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6063  0013B4  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6064  0013B8  0012               	return		;funcret
  6065  0013BA                     __end_of___flmul:
  6066                           	opt callstack 0
  6067                           
  6068 ;; *************** function ___flge *****************
  6069 ;; Defined at:
  6070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  ff1             4    5[COMRAM] unsigned char 
  6073 ;;  ff2             4    9[COMRAM] unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;		None               void
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:       12 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    2
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_set_pwm_duty_cycle
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text23
  6100  00294A                     __ptext23:
  6101                           	opt callstack 0
  6102  00294A                     ___flge:
  6103                           	opt callstack 25
  6104                           
  6105                           ;incstack = 0
  6106  00294A  0E00               	movlw	0
  6107  00294C  1406               	andwf	___flge@ff1,w,c
  6108  00294E  6E0E               	movwf	??___flge& (0+255),c
  6109  002950  0E00               	movlw	0
  6110  002952  1407               	andwf	___flge@ff1+1,w,c
  6111  002954  6E0F               	movwf	(??___flge+1)& (0+255),c
  6112  002956  0E80               	movlw	128
  6113  002958  1408               	andwf	___flge@ff1+2,w,c
  6114  00295A  6E10               	movwf	(??___flge+2)& (0+255),c
  6115  00295C  0E7F               	movlw	127
  6116  00295E  1409               	andwf	___flge@ff1+3,w,c
  6117  002960  6E11               	movwf	(??___flge+3)& (0+255),c
  6118  002962  500E               	movf	??___flge,w,c
  6119  002964  100F               	iorwf	??___flge+1,w,c
  6120  002966  1010               	iorwf	??___flge+2,w,c
  6121  002968  1011               	iorwf	??___flge+3,w,c
  6122  00296A  A4D8               	btfss	status,2,c
  6123  00296C  D008               	goto	l6965
  6124  00296E  0E00               	movlw	0
  6125  002970  6E06               	movwf	___flge@ff1,c
  6126  002972  0E00               	movlw	0
  6127  002974  6E07               	movwf	___flge@ff1+1,c
  6128  002976  0E00               	movlw	0
  6129  002978  6E08               	movwf	___flge@ff1+2,c
  6130  00297A  0E00               	movlw	0
  6131  00297C  6E09               	movwf	___flge@ff1+3,c
  6132  00297E                     l6965:
  6133  00297E  0E00               	movlw	0
  6134  002980  140A               	andwf	___flge@ff2,w,c
  6135  002982  6E0E               	movwf	??___flge& (0+255),c
  6136  002984  0E00               	movlw	0
  6137  002986  140B               	andwf	___flge@ff2+1,w,c
  6138  002988  6E0F               	movwf	(??___flge+1)& (0+255),c
  6139  00298A  0E80               	movlw	128
  6140  00298C  140C               	andwf	___flge@ff2+2,w,c
  6141  00298E  6E10               	movwf	(??___flge+2)& (0+255),c
  6142  002990  0E7F               	movlw	127
  6143  002992  140D               	andwf	___flge@ff2+3,w,c
  6144  002994  6E11               	movwf	(??___flge+3)& (0+255),c
  6145  002996  500E               	movf	??___flge,w,c
  6146  002998  100F               	iorwf	??___flge+1,w,c
  6147  00299A  1010               	iorwf	??___flge+2,w,c
  6148  00299C  1011               	iorwf	??___flge+3,w,c
  6149  00299E  A4D8               	btfss	status,2,c
  6150  0029A0  D008               	goto	l6969
  6151  0029A2  0E00               	movlw	0
  6152  0029A4  6E0A               	movwf	___flge@ff2,c
  6153  0029A6  0E00               	movlw	0
  6154  0029A8  6E0B               	movwf	___flge@ff2+1,c
  6155  0029AA  0E00               	movlw	0
  6156  0029AC  6E0C               	movwf	___flge@ff2+2,c
  6157  0029AE  0E00               	movlw	0
  6158  0029B0  6E0D               	movwf	___flge@ff2+3,c
  6159  0029B2                     l6969:
  6160  0029B2  AE09               	btfss	___flge@ff1+3,7,c
  6161  0029B4  D009               	goto	l6973
  6162  0029B6  6C06               	negf	___flge@ff1,c
  6163  0029B8  1E07               	comf	___flge@ff1+1,f,c
  6164  0029BA  B0D8               	btfsc	status,0,c
  6165  0029BC  2A07               	incf	___flge@ff1+1,f,c
  6166  0029BE  1E08               	comf	___flge@ff1+2,f,c
  6167  0029C0  B0D8               	btfsc	status,0,c
  6168  0029C2  2A08               	incf	___flge@ff1+2,f,c
  6169  0029C4  0E80               	movlw	128
  6170  0029C6  5609               	subfwb	___flge@ff1+3,f,c
  6171  0029C8                     l6973:
  6172  0029C8  AE0D               	btfss	___flge@ff2+3,7,c
  6173  0029CA  D009               	goto	l929
  6174  0029CC  6C0A               	negf	___flge@ff2,c
  6175  0029CE  1E0B               	comf	___flge@ff2+1,f,c
  6176  0029D0  B0D8               	btfsc	status,0,c
  6177  0029D2  2A0B               	incf	___flge@ff2+1,f,c
  6178  0029D4  1E0C               	comf	___flge@ff2+2,f,c
  6179  0029D6  B0D8               	btfsc	status,0,c
  6180  0029D8  2A0C               	incf	___flge@ff2+2,f,c
  6181  0029DA  0E80               	movlw	128
  6182  0029DC  560D               	subfwb	___flge@ff2+3,f,c
  6183  0029DE                     l929:
  6184  0029DE  0E00               	movlw	0
  6185  0029E0  1A06               	xorwf	___flge@ff1,f,c
  6186  0029E2  0E00               	movlw	0
  6187  0029E4  1A07               	xorwf	___flge@ff1+1,f,c
  6188  0029E6  0E00               	movlw	0
  6189  0029E8  1A08               	xorwf	___flge@ff1+2,f,c
  6190  0029EA  0E80               	movlw	128
  6191  0029EC  1A09               	xorwf	___flge@ff1+3,f,c
  6192  0029EE  0E00               	movlw	0
  6193  0029F0  1A0A               	xorwf	___flge@ff2,f,c
  6194  0029F2  0E00               	movlw	0
  6195  0029F4  1A0B               	xorwf	___flge@ff2+1,f,c
  6196  0029F6  0E00               	movlw	0
  6197  0029F8  1A0C               	xorwf	___flge@ff2+2,f,c
  6198  0029FA  0E80               	movlw	128
  6199  0029FC  1A0D               	xorwf	___flge@ff2+3,f,c
  6200  0029FE  500A               	movf	___flge@ff2,w,c
  6201  002A00  5C06               	subwf	___flge@ff1,w,c
  6202  002A02  500B               	movf	___flge@ff2+1,w,c
  6203  002A04  5807               	subwfb	___flge@ff1+1,w,c
  6204  002A06  500C               	movf	___flge@ff2+2,w,c
  6205  002A08  5808               	subwfb	___flge@ff1+2,w,c
  6206  002A0A  500D               	movf	___flge@ff2+3,w,c
  6207  002A0C  5809               	subwfb	___flge@ff1+3,w,c
  6208  002A0E  B0D8               	btfsc	status,0,c
  6209  002A10  D002               	goto	l6979
  6210  002A12  90D8               	bcf	status,0,c
  6211  002A14  0012               	return	
  6212  002A16                     l6979:
  6213  002A16  80D8               	bsf	status,0,c
  6214  002A18  0012               	return		;funcret
  6215  002A1A                     __end_of___flge:
  6216                           	opt callstack 0
  6217                           
  6218 ;; *************** function ___fldiv *****************
  6219 ;; Defined at:
  6220 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  b               4   44[COMRAM] unsigned char 
  6223 ;;  a               4   48[COMRAM] unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  grs             4   63[COMRAM] unsigned long 
  6226 ;;  rem             4   56[COMRAM] unsigned long 
  6227 ;;  new_exp         2   61[COMRAM] short 
  6228 ;;  aexp            1   68[COMRAM] unsigned char 
  6229 ;;  bexp            1   67[COMRAM] unsigned char 
  6230 ;;  sign            1   60[COMRAM] unsigned char 
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  4   44[COMRAM] unsigned char 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:       25 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    2
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_set_pwm_duty_cycle
  6251 ;;		_errorCorrectedMove
  6252 ;;		_PIDCorrectedMove
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text24
  6257  0016C6                     __ptext24:
  6258                           	opt callstack 0
  6259  0016C6                     ___fldiv:
  6260                           	opt callstack 25
  6261                           
  6262                           ;incstack = 0
  6263  0016C6  5030               	movf	___fldiv@b+3,w,c
  6264  0016C8  0B80               	andlw	128
  6265  0016CA  6E3D               	movwf	___fldiv@sign,c
  6266  0016CC  5030               	movf	___fldiv@b+3,w,c
  6267  0016CE  2430               	addwf	___fldiv@b+3,w,c
  6268  0016D0  6E44               	movwf	___fldiv@bexp,c
  6269  0016D2  BE2F               	btfsc	___fldiv@b+2,7,c
  6270  0016D4  8044               	bsf	___fldiv@bexp,0,c
  6271  0016D6  5044               	movf	___fldiv@bexp,w,c
  6272  0016D8  B4D8               	btfsc	status,2,c
  6273  0016DA  D00D               	goto	l6709
  6274  0016DC  2844               	incf	___fldiv@bexp,w,c
  6275  0016DE  A4D8               	btfss	status,2,c
  6276  0016E0  D008               	goto	l6705
  6277  0016E2  0E00               	movlw	0
  6278  0016E4  6E2D               	movwf	___fldiv@b,c
  6279  0016E6  0E00               	movlw	0
  6280  0016E8  6E2E               	movwf	___fldiv@b+1,c
  6281  0016EA  0E00               	movlw	0
  6282  0016EC  6E2F               	movwf	___fldiv@b+2,c
  6283  0016EE  0E00               	movlw	0
  6284  0016F0  6E30               	movwf	___fldiv@b+3,c
  6285  0016F2                     l6705:
  6286  0016F2  8E2F               	bsf	___fldiv@b+2,7,c
  6287  0016F4  D006               	goto	L10
  6288  0016F6                     l6709:
  6289  0016F6  0E00               	movlw	0
  6290  0016F8  6E2D               	movwf	___fldiv@b,c
  6291  0016FA  0E00               	movlw	0
  6292  0016FC  6E2E               	movwf	___fldiv@b+1,c
  6293  0016FE  0E00               	movlw	0
  6294  001700  6E2F               	movwf	___fldiv@b+2,c
  6295  001702                     L10:
  6296  001702  0E00               	movlw	0
  6297  001704  6E30               	movwf	___fldiv@b+3,c
  6298  001706  5034               	movf	___fldiv@a+3,w,c
  6299  001708  0B80               	andlw	128
  6300  00170A  1A3D               	xorwf	___fldiv@sign,f,c
  6301  00170C  5034               	movf	___fldiv@a+3,w,c
  6302  00170E  2434               	addwf	___fldiv@a+3,w,c
  6303  001710  6E45               	movwf	___fldiv@aexp,c
  6304  001712  BE33               	btfsc	___fldiv@a+2,7,c
  6305  001714  8045               	bsf	___fldiv@aexp,0,c
  6306  001716  5045               	movf	___fldiv@aexp,w,c
  6307  001718  B4D8               	btfsc	status,2,c
  6308  00171A  D00D               	goto	l6729
  6309  00171C  2845               	incf	___fldiv@aexp,w,c
  6310  00171E  A4D8               	btfss	status,2,c
  6311  001720  D008               	goto	l6725
  6312  001722  0E00               	movlw	0
  6313  001724  6E31               	movwf	___fldiv@a,c
  6314  001726  0E00               	movlw	0
  6315  001728  6E32               	movwf	___fldiv@a+1,c
  6316  00172A  0E00               	movlw	0
  6317  00172C  6E33               	movwf	___fldiv@a+2,c
  6318  00172E  0E00               	movlw	0
  6319  001730  6E34               	movwf	___fldiv@a+3,c
  6320  001732                     l6725:
  6321  001732  8E33               	bsf	___fldiv@a+2,7,c
  6322  001734  D006               	goto	L11
  6323  001736                     l6729:
  6324  001736  0E00               	movlw	0
  6325  001738  6E31               	movwf	___fldiv@a,c
  6326  00173A  0E00               	movlw	0
  6327  00173C  6E32               	movwf	___fldiv@a+1,c
  6328  00173E  0E00               	movlw	0
  6329  001740  6E33               	movwf	___fldiv@a+2,c
  6330  001742                     L11:
  6331  001742  0E00               	movlw	0
  6332  001744  6E34               	movwf	___fldiv@a+3,c
  6333  001746  5031               	movf	___fldiv@a,w,c
  6334  001748  1032               	iorwf	___fldiv@a+1,w,c
  6335  00174A  1033               	iorwf	___fldiv@a+2,w,c
  6336  00174C  1034               	iorwf	___fldiv@a+3,w,c
  6337  00174E  A4D8               	btfss	status,2,c
  6338  001750  D017               	goto	l6743
  6339  001752  0E00               	movlw	0
  6340  001754  6E2D               	movwf	___fldiv@b,c
  6341  001756  0E00               	movlw	0
  6342  001758  6E2E               	movwf	___fldiv@b+1,c
  6343  00175A  0E00               	movlw	0
  6344  00175C  6E2F               	movwf	___fldiv@b+2,c
  6345  00175E  0E00               	movlw	0
  6346  001760  6E30               	movwf	___fldiv@b+3,c
  6347  001762  0E80               	movlw	128
  6348  001764  122F               	iorwf	___fldiv@b+2,f,c
  6349  001766  0E7F               	movlw	127
  6350  001768  1230               	iorwf	___fldiv@b+3,f,c
  6351  00176A                     l6737:
  6352  00176A  503D               	movf	___fldiv@sign,w,c
  6353  00176C  1230               	iorwf	___fldiv@b+3,f,c
  6354  00176E  C02D  F02D         	movff	___fldiv@b,?___fldiv
  6355  001772  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  6356  001776  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  6357  00177A  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  6358  00177E  0012               	return	
  6359  001780                     l6743:
  6360  001780  5044               	movf	___fldiv@bexp,w,c
  6361  001782  A4D8               	btfss	status,2,c
  6362  001784  D009               	goto	l6751
  6363  001786  0E00               	movlw	0
  6364  001788  6E2D               	movwf	?___fldiv,c
  6365  00178A  0E00               	movlw	0
  6366  00178C  6E2E               	movwf	?___fldiv+1,c
  6367  00178E  0E00               	movlw	0
  6368  001790  6E2F               	movwf	?___fldiv+2,c
  6369  001792  0E00               	movlw	0
  6370  001794  6E30               	movwf	?___fldiv+3,c
  6371  001796  0012               	return	
  6372  001798                     l6751:
  6373  001798  5045               	movf	___fldiv@aexp,w,c
  6374  00179A  C044  F035         	movff	___fldiv@bexp,??___fldiv
  6375  00179E  6A36               	clrf	(??___fldiv+1)& (0+255),c
  6376  0017A0  5E35               	subwf	??___fldiv,f,c
  6377  0017A2  0E00               	movlw	0
  6378  0017A4  5A36               	subwfb	??___fldiv+1,f,c
  6379  0017A6  0E7F               	movlw	127
  6380  0017A8  2435               	addwf	??___fldiv,w,c
  6381  0017AA  6E3E               	movwf	___fldiv@new_exp,c
  6382  0017AC  0E00               	movlw	0
  6383  0017AE  2036               	addwfc	??___fldiv+1,w,c
  6384  0017B0  6E3F               	movwf	___fldiv@new_exp+1,c
  6385  0017B2  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  6386  0017B6  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  6387  0017BA  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  6388  0017BE  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  6389  0017C2  0E00               	movlw	0
  6390  0017C4  6E2D               	movwf	___fldiv@b,c
  6391  0017C6  0E00               	movlw	0
  6392  0017C8  6E2E               	movwf	___fldiv@b+1,c
  6393  0017CA  0E00               	movlw	0
  6394  0017CC  6E2F               	movwf	___fldiv@b+2,c
  6395  0017CE  0E00               	movlw	0
  6396  0017D0  6E30               	movwf	___fldiv@b+3,c
  6397  0017D2  0E00               	movlw	0
  6398  0017D4  6E40               	movwf	___fldiv@grs,c
  6399  0017D6  0E00               	movlw	0
  6400  0017D8  6E41               	movwf	___fldiv@grs+1,c
  6401  0017DA  0E00               	movlw	0
  6402  0017DC  6E42               	movwf	___fldiv@grs+2,c
  6403  0017DE  0E00               	movlw	0
  6404  0017E0  6E43               	movwf	___fldiv@grs+3,c
  6405  0017E2  0E00               	movlw	0
  6406  0017E4  6E45               	movwf	___fldiv@aexp,c
  6407  0017E6  D028               	goto	l1248
  6408  0017E8                     l6761:
  6409  0017E8  5045               	movf	___fldiv@aexp,w,c
  6410  0017EA  B4D8               	btfsc	status,2,c
  6411  0017EC  D011               	goto	l6769
  6412  0017EE  90D8               	bcf	status,0,c
  6413  0017F0  3639               	rlcf	___fldiv@rem,f,c
  6414  0017F2  363A               	rlcf	___fldiv@rem+1,f,c
  6415  0017F4  363B               	rlcf	___fldiv@rem+2,f,c
  6416  0017F6  363C               	rlcf	___fldiv@rem+3,f,c
  6417  0017F8  90D8               	bcf	status,0,c
  6418  0017FA  362D               	rlcf	___fldiv@b,f,c
  6419  0017FC  362E               	rlcf	___fldiv@b+1,f,c
  6420  0017FE  362F               	rlcf	___fldiv@b+2,f,c
  6421  001800  3630               	rlcf	___fldiv@b+3,f,c
  6422  001802  BE43               	btfsc	___fldiv@grs+3,7,c
  6423  001804  802D               	bsf	___fldiv@b,0,c
  6424  001806  90D8               	bcf	status,0,c
  6425  001808  3640               	rlcf	___fldiv@grs,f,c
  6426  00180A  3641               	rlcf	___fldiv@grs+1,f,c
  6427  00180C  3642               	rlcf	___fldiv@grs+2,f,c
  6428  00180E  3643               	rlcf	___fldiv@grs+3,f,c
  6429  001810                     l6769:
  6430  001810  5031               	movf	___fldiv@a,w,c
  6431  001812  5C39               	subwf	___fldiv@rem,w,c
  6432  001814  5032               	movf	___fldiv@a+1,w,c
  6433  001816  583A               	subwfb	___fldiv@rem+1,w,c
  6434  001818  5033               	movf	___fldiv@a+2,w,c
  6435  00181A  583B               	subwfb	___fldiv@rem+2,w,c
  6436  00181C  5034               	movf	___fldiv@a+3,w,c
  6437  00181E  583C               	subwfb	___fldiv@rem+3,w,c
  6438  001820  A0D8               	btfss	status,0,c
  6439  001822  D009               	goto	l6775
  6440  001824  8C43               	bsf	___fldiv@grs+3,6,c
  6441  001826  5031               	movf	___fldiv@a,w,c
  6442  001828  5E39               	subwf	___fldiv@rem,f,c
  6443  00182A  5032               	movf	___fldiv@a+1,w,c
  6444  00182C  5A3A               	subwfb	___fldiv@rem+1,f,c
  6445  00182E  5033               	movf	___fldiv@a+2,w,c
  6446  001830  5A3B               	subwfb	___fldiv@rem+2,f,c
  6447  001832  5034               	movf	___fldiv@a+3,w,c
  6448  001834  5A3C               	subwfb	___fldiv@rem+3,f,c
  6449  001836                     l6775:
  6450  001836  2A45               	incf	___fldiv@aexp,f,c
  6451  001838                     l1248:
  6452  001838  0E19               	movlw	25
  6453  00183A  6445               	cpfsgt	___fldiv@aexp,c
  6454  00183C  D7D5               	goto	l6761
  6455  00183E  5039               	movf	___fldiv@rem,w,c
  6456  001840  103A               	iorwf	___fldiv@rem+1,w,c
  6457  001842  103B               	iorwf	___fldiv@rem+2,w,c
  6458  001844  103C               	iorwf	___fldiv@rem+3,w,c
  6459  001846  B4D8               	btfsc	status,2,c
  6460  001848  D011               	goto	l6787
  6461  00184A  8040               	bsf	___fldiv@grs,0,c
  6462  00184C  D00F               	goto	l6787
  6463  00184E                     l6781:
  6464  00184E  90D8               	bcf	status,0,c
  6465  001850  362D               	rlcf	___fldiv@b,f,c
  6466  001852  362E               	rlcf	___fldiv@b+1,f,c
  6467  001854  362F               	rlcf	___fldiv@b+2,f,c
  6468  001856  3630               	rlcf	___fldiv@b+3,f,c
  6469  001858  BE43               	btfsc	___fldiv@grs+3,7,c
  6470  00185A  802D               	bsf	___fldiv@b,0,c
  6471  00185C  90D8               	bcf	status,0,c
  6472  00185E  3640               	rlcf	___fldiv@grs,f,c
  6473  001860  3641               	rlcf	___fldiv@grs+1,f,c
  6474  001862  3642               	rlcf	___fldiv@grs+2,f,c
  6475  001864  3643               	rlcf	___fldiv@grs+3,f,c
  6476  001866  063E               	decf	___fldiv@new_exp,f,c
  6477  001868  A0D8               	btfss	status,0,c
  6478  00186A  063F               	decf	___fldiv@new_exp+1,f,c
  6479  00186C                     l6787:
  6480  00186C  AE2F               	btfss	___fldiv@b+2,7,c
  6481  00186E  D7EF               	goto	l6781
  6482  001870  0E00               	movlw	0
  6483  001872  6E45               	movwf	___fldiv@aexp,c
  6484  001874  AE43               	btfss	___fldiv@grs+3,7,c
  6485  001876  D017               	goto	l1259
  6486  001878  0EFF               	movlw	255
  6487  00187A  1440               	andwf	___fldiv@grs,w,c
  6488  00187C  6E35               	movwf	??___fldiv& (0+255),c
  6489  00187E  0EFF               	movlw	255
  6490  001880  1441               	andwf	___fldiv@grs+1,w,c
  6491  001882  6E36               	movwf	(??___fldiv+1)& (0+255),c
  6492  001884  0EFF               	movlw	255
  6493  001886  1442               	andwf	___fldiv@grs+2,w,c
  6494  001888  6E37               	movwf	(??___fldiv+2)& (0+255),c
  6495  00188A  0E7F               	movlw	127
  6496  00188C  1443               	andwf	___fldiv@grs+3,w,c
  6497  00188E  6E38               	movwf	(??___fldiv+3)& (0+255),c
  6498  001890  5035               	movf	??___fldiv,w,c
  6499  001892  1036               	iorwf	??___fldiv+1,w,c
  6500  001894  1037               	iorwf	??___fldiv+2,w,c
  6501  001896  1038               	iorwf	??___fldiv+3,w,c
  6502  001898  B4D8               	btfsc	status,2,c
  6503  00189A  D003               	goto	l1260
  6504  00189C                     u7590:
  6505  00189C  0E01               	movlw	1
  6506  00189E  6E45               	movwf	___fldiv@aexp,c
  6507  0018A0  D002               	goto	l1259
  6508  0018A2                     l1260:
  6509  0018A2  B02D               	btfsc	___fldiv@b,0,c
  6510  0018A4  D7FB               	goto	u7590
  6511  0018A6                     l1259:
  6512  0018A6  5045               	movf	___fldiv@aexp,w,c
  6513  0018A8  B4D8               	btfsc	status,2,c
  6514  0018AA  D01F               	goto	l6807
  6515  0018AC  0E01               	movlw	1
  6516  0018AE  262D               	addwf	___fldiv@b,f,c
  6517  0018B0  0E00               	movlw	0
  6518  0018B2  222E               	addwfc	___fldiv@b+1,f,c
  6519  0018B4  222F               	addwfc	___fldiv@b+2,f,c
  6520  0018B6  2230               	addwfc	___fldiv@b+3,f,c
  6521  0018B8  A030               	btfss	___fldiv@b+3,0,c
  6522  0018BA  D017               	goto	l6807
  6523  0018BC  C02D  F035         	movff	___fldiv@b,??___fldiv
  6524  0018C0  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  6525  0018C4  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  6526  0018C8  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  6527  0018CC  3438               	rlcf	??___fldiv+3,w,c
  6528  0018CE  3238               	rrcf	??___fldiv+3,f,c
  6529  0018D0  3237               	rrcf	??___fldiv+2,f,c
  6530  0018D2  3236               	rrcf	??___fldiv+1,f,c
  6531  0018D4  3235               	rrcf	??___fldiv,f,c
  6532  0018D6  C035  F02D         	movff	??___fldiv,___fldiv@b
  6533  0018DA  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  6534  0018DE  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  6535  0018E2  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  6536  0018E6  4A3E               	infsnz	___fldiv@new_exp,f,c
  6537  0018E8  2A3F               	incf	___fldiv@new_exp+1,f,c
  6538  0018EA                     l6807:
  6539  0018EA  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  6540  0018EC  D010               	goto	l6811
  6541  0018EE  503F               	movf	___fldiv@new_exp+1,w,c
  6542  0018F0  E103               	bnz	u7630
  6543  0018F2  283E               	incf	___fldiv@new_exp,w,c
  6544  0018F4  A0D8               	btfss	status,0,c
  6545  0018F6  D00B               	goto	l6811
  6546  0018F8                     u7630:
  6547  0018F8  0E00               	movlw	0
  6548  0018FA  6E3F               	movwf	___fldiv@new_exp+1,c
  6549  0018FC  683E               	setf	___fldiv@new_exp,c
  6550  0018FE  0E00               	movlw	0
  6551  001900  6E2D               	movwf	___fldiv@b,c
  6552  001902  0E00               	movlw	0
  6553  001904  6E2E               	movwf	___fldiv@b+1,c
  6554  001906  0E00               	movlw	0
  6555  001908  6E2F               	movwf	___fldiv@b+2,c
  6556  00190A  0E00               	movlw	0
  6557  00190C  6E30               	movwf	___fldiv@b+3,c
  6558  00190E                     l6811:
  6559  00190E  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  6560  001910  D005               	goto	u7640
  6561  001912  503F               	movf	___fldiv@new_exp+1,w,c
  6562  001914  E111               	bnz	l6815
  6563  001916  043E               	decf	___fldiv@new_exp,w,c
  6564  001918  B0D8               	btfsc	status,0,c
  6565  00191A  D00E               	goto	l6815
  6566  00191C                     u7640:
  6567  00191C  0E00               	movlw	0
  6568  00191E  6E3F               	movwf	___fldiv@new_exp+1,c
  6569  001920  0E00               	movlw	0
  6570  001922  6E3E               	movwf	___fldiv@new_exp,c
  6571  001924  0E00               	movlw	0
  6572  001926  6E2D               	movwf	___fldiv@b,c
  6573  001928  0E00               	movlw	0
  6574  00192A  6E2E               	movwf	___fldiv@b+1,c
  6575  00192C  0E00               	movlw	0
  6576  00192E  6E2F               	movwf	___fldiv@b+2,c
  6577  001930  0E00               	movlw	0
  6578  001932  6E30               	movwf	___fldiv@b+3,c
  6579  001934  0E00               	movlw	0
  6580  001936  6E3D               	movwf	___fldiv@sign,c
  6581  001938                     l6815:
  6582  001938  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  6583  00193C  A044               	btfss	___fldiv@bexp,0,c
  6584  00193E  D002               	goto	l6821
  6585  001940  8E2F               	bsf	___fldiv@b+2,7,c
  6586  001942  D001               	goto	l6823
  6587  001944                     l6821:
  6588  001944  9E2F               	bcf	___fldiv@b+2,7,c
  6589  001946                     l6823:
  6590  001946  90D8               	bcf	status,0,c
  6591  001948  3044               	rrcf	___fldiv@bexp,w,c
  6592  00194A  6E30               	movwf	___fldiv@b+3,c
  6593  00194C  D70E               	goto	l6737
  6594  00194E                     __end_of___fldiv:
  6595                           	opt callstack 0
  6596                           
  6597 ;; *************** function ___flsub *****************
  6598 ;; Defined at:
  6599 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  b               4   69[COMRAM] unsigned char 
  6602 ;;  a               4   73[COMRAM] unsigned char 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  4   69[COMRAM] unsigned char 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6614 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;Total ram usage:        8 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    3
  6621 ;; This function calls:
  6622 ;;		___fladd
  6623 ;; This function is called by:
  6624 ;;		_errorCorrectedMove
  6625 ;;		_PIDCorrectedMove
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text25
  6630  00303E                     __ptext25:
  6631                           	opt callstack 0
  6632  00303E                     ___flsub:
  6633                           	opt callstack 25
  6634                           
  6635                           ;incstack = 0
  6636  00303E  0E00               	movlw	0
  6637  003040  1A4A               	xorwf	___flsub@a,f,c
  6638  003042  0E00               	movlw	0
  6639  003044  1A4B               	xorwf	___flsub@a+1,f,c
  6640  003046  0E00               	movlw	0
  6641  003048  1A4C               	xorwf	___flsub@a+2,f,c
  6642  00304A  0E80               	movlw	128
  6643  00304C  1A4D               	xorwf	___flsub@a+3,f,c
  6644  00304E  C046  F02D         	movff	___flsub@b,___fladd@b
  6645  003052  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  6646  003056  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  6647  00305A  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  6648  00305E  C04A  F031         	movff	___flsub@a,___fladd@a
  6649  003062  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  6650  003066  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  6651  00306A  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  6652  00306E  ECDD  F009         	call	___fladd	;wreg free
  6653  003072  C02D  F046         	movff	?___fladd,?___flsub
  6654  003076  C02E  F047         	movff	?___fladd+1,?___flsub+1
  6655  00307A  C02F  F048         	movff	?___fladd+2,?___flsub+2
  6656  00307E  C030  F049         	movff	?___fladd+3,?___flsub+3
  6657  003082  0012               	return		;funcret
  6658  003084                     __end_of___flsub:
  6659                           	opt callstack 0
  6660                           
  6661 ;; *************** function ___fladd *****************
  6662 ;; Defined at:
  6663 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  b               4   44[COMRAM] unsigned char 
  6666 ;;  a               4   48[COMRAM] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  grs             1   59[COMRAM] unsigned char 
  6669 ;;  bexp            1   58[COMRAM] unsigned char 
  6670 ;;  aexp            1   57[COMRAM] unsigned char 
  6671 ;;  signs           1   56[COMRAM] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  4   44[COMRAM] unsigned char 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;Total ram usage:       16 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_errorCorrectedMove
  6692 ;;		___flsub
  6693 ;;		_PIDCorrectedMove
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text26
  6698  0013BA                     __ptext26:
  6699                           	opt callstack 0
  6700  0013BA                     ___fladd:
  6701                           	opt callstack 25
  6702                           
  6703                           ;incstack = 0
  6704  0013BA  5030               	movf	___fladd@b+3,w,c
  6705  0013BC  0B80               	andlw	128
  6706  0013BE  6E39               	movwf	___fladd@signs,c
  6707  0013C0  5030               	movf	___fladd@b+3,w,c
  6708  0013C2  2430               	addwf	___fladd@b+3,w,c
  6709  0013C4  6E3B               	movwf	___fladd@bexp,c
  6710  0013C6  BE2F               	btfsc	___fladd@b+2,7,c
  6711  0013C8  803B               	bsf	___fladd@bexp,0,c
  6712  0013CA  503B               	movf	___fladd@bexp,w,c
  6713  0013CC  B4D8               	btfsc	status,2,c
  6714  0013CE  D00D               	goto	l7247
  6715  0013D0  283B               	incf	___fladd@bexp,w,c
  6716  0013D2  A4D8               	btfss	status,2,c
  6717  0013D4  D008               	goto	l7243
  6718  0013D6  0E00               	movlw	0
  6719  0013D8  6E2D               	movwf	___fladd@b,c
  6720  0013DA  0E00               	movlw	0
  6721  0013DC  6E2E               	movwf	___fladd@b+1,c
  6722  0013DE  0E00               	movlw	0
  6723  0013E0  6E2F               	movwf	___fladd@b+2,c
  6724  0013E2  0E00               	movlw	0
  6725  0013E4  6E30               	movwf	___fladd@b+3,c
  6726  0013E6                     l7243:
  6727  0013E6  8E2F               	bsf	___fladd@b+2,7,c
  6728  0013E8  D006               	goto	L12
  6729  0013EA                     l7247:
  6730  0013EA  0E00               	movlw	0
  6731  0013EC  6E2D               	movwf	___fladd@b,c
  6732  0013EE  0E00               	movlw	0
  6733  0013F0  6E2E               	movwf	___fladd@b+1,c
  6734  0013F2  0E00               	movlw	0
  6735  0013F4  6E2F               	movwf	___fladd@b+2,c
  6736  0013F6                     L12:
  6737  0013F6  0E00               	movlw	0
  6738  0013F8  6E30               	movwf	___fladd@b+3,c
  6739  0013FA  5034               	movf	___fladd@a+3,w,c
  6740  0013FC  0B80               	andlw	128
  6741  0013FE  6E3A               	movwf	___fladd@aexp,c
  6742  001400  5039               	movf	___fladd@signs,w,c
  6743  001402  183A               	xorwf	___fladd@aexp,w,c
  6744  001404  A4D8               	btfss	status,2,c
  6745  001406  8C39               	bsf	___fladd@signs,6,c
  6746  001408  5034               	movf	___fladd@a+3,w,c
  6747  00140A  2434               	addwf	___fladd@a+3,w,c
  6748  00140C  6E3A               	movwf	___fladd@aexp,c
  6749  00140E  BE33               	btfsc	___fladd@a+2,7,c
  6750  001410  803A               	bsf	___fladd@aexp,0,c
  6751  001412  503A               	movf	___fladd@aexp,w,c
  6752  001414  B4D8               	btfsc	status,2,c
  6753  001416  D00D               	goto	l7271
  6754  001418  283A               	incf	___fladd@aexp,w,c
  6755  00141A  A4D8               	btfss	status,2,c
  6756  00141C  D008               	goto	l7267
  6757  00141E  0E00               	movlw	0
  6758  001420  6E31               	movwf	___fladd@a,c
  6759  001422  0E00               	movlw	0
  6760  001424  6E32               	movwf	___fladd@a+1,c
  6761  001426  0E00               	movlw	0
  6762  001428  6E33               	movwf	___fladd@a+2,c
  6763  00142A  0E00               	movlw	0
  6764  00142C  6E34               	movwf	___fladd@a+3,c
  6765  00142E                     l7267:
  6766  00142E  8E33               	bsf	___fladd@a+2,7,c
  6767  001430  D006               	goto	L13
  6768  001432                     l7271:
  6769  001432  0E00               	movlw	0
  6770  001434  6E31               	movwf	___fladd@a,c
  6771  001436  0E00               	movlw	0
  6772  001438  6E32               	movwf	___fladd@a+1,c
  6773  00143A  0E00               	movlw	0
  6774  00143C  6E33               	movwf	___fladd@a+2,c
  6775  00143E                     L13:
  6776  00143E  0E00               	movlw	0
  6777  001440  6E34               	movwf	___fladd@a+3,c
  6778  001442  503B               	movf	___fladd@bexp,w,c
  6779  001444  5C3A               	subwf	___fladd@aexp,w,c
  6780  001446  B0D8               	btfsc	status,0,c
  6781  001448  D022               	goto	l7309
  6782  00144A  AC39               	btfss	___fladd@signs,6,c
  6783  00144C  D002               	goto	l7279
  6784  00144E  0E80               	movlw	128
  6785  001450  1A39               	xorwf	___fladd@signs,f,c
  6786  001452                     l7279:
  6787  001452  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  6788  001456  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  6789  00145A  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  6790  00145E  C02D  F03C         	movff	___fladd@b,___fladd@grs
  6791  001462  C031  F02D         	movff	___fladd@a,___fladd@b
  6792  001466  C03C  F031         	movff	___fladd@grs,___fladd@a
  6793  00146A  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  6794  00146E  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  6795  001472  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  6796  001476  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  6797  00147A  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  6798  00147E  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  6799  001482  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  6800  001486  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  6801  00148A  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  6802  00148E                     l7309:
  6803  00148E  0E00               	movlw	0
  6804  001490  6E3C               	movwf	___fladd@grs,c
  6805  001492  503B               	movf	___fladd@bexp,w,c
  6806  001494  C03A  F035         	movff	___fladd@aexp,??___fladd
  6807  001498  6A36               	clrf	(??___fladd+1)& (0+255),c
  6808  00149A  5E35               	subwf	??___fladd,f,c
  6809  00149C  0E00               	movlw	0
  6810  00149E  5A36               	subwfb	??___fladd+1,f,c
  6811  0014A0  BE36               	btfsc	??___fladd+1,7,c
  6812  0014A2  D02C               	goto	l1193
  6813  0014A4  5036               	movf	??___fladd+1,w,c
  6814  0014A6  E104               	bnz	u8410
  6815  0014A8  0E1A               	movlw	26
  6816  0014AA  5C35               	subwf	??___fladd,w,c
  6817  0014AC  A0D8               	btfss	status,0,c
  6818  0014AE  D026               	goto	l1193
  6819  0014B0                     u8410:
  6820  0014B0  502D               	movf	___fladd@b,w,c
  6821  0014B2  102E               	iorwf	___fladd@b+1,w,c
  6822  0014B4  102F               	iorwf	___fladd@b+2,w,c
  6823  0014B6  1030               	iorwf	___fladd@b+3,w,c
  6824  0014B8  B4D8               	btfsc	status,2,c
  6825  0014BA  D002               	goto	u8420
  6826  0014BC  0E01               	movlw	1
  6827  0014BE  D001               	goto	u8430
  6828  0014C0                     u8420:
  6829  0014C0  0E00               	movlw	0
  6830  0014C2                     u8430:
  6831  0014C2  6E3C               	movwf	___fladd@grs,c
  6832  0014C4  0E00               	movlw	0
  6833  0014C6  6E2D               	movwf	___fladd@b,c
  6834  0014C8  0E00               	movlw	0
  6835  0014CA  6E2E               	movwf	___fladd@b+1,c
  6836  0014CC  0E00               	movlw	0
  6837  0014CE  6E2F               	movwf	___fladd@b+2,c
  6838  0014D0  0E00               	movlw	0
  6839  0014D2  6E30               	movwf	___fladd@b+3,c
  6840  0014D4  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  6841  0014D8  D015               	goto	u8460
  6842  0014DA                     l1194:
  6843  0014DA  A03C               	btfss	___fladd@grs,0,c
  6844  0014DC  D005               	goto	l7321
  6845  0014DE  90D8               	bcf	status,0,c
  6846  0014E0  303C               	rrcf	___fladd@grs,w,c
  6847  0014E2  0901               	iorlw	1
  6848  0014E4  6E3C               	movwf	___fladd@grs,c
  6849  0014E6  D002               	goto	l7323
  6850  0014E8                     l7321:
  6851  0014E8  90D8               	bcf	status,0,c
  6852  0014EA  323C               	rrcf	___fladd@grs,f,c
  6853  0014EC                     l7323:
  6854  0014EC  B02D               	btfsc	___fladd@b,0,c
  6855  0014EE  8E3C               	bsf	___fladd@grs,7,c
  6856  0014F0  3430               	rlcf	___fladd@b+3,w,c
  6857  0014F2  3230               	rrcf	___fladd@b+3,f,c
  6858  0014F4  322F               	rrcf	___fladd@b+2,f,c
  6859  0014F6  322E               	rrcf	___fladd@b+1,f,c
  6860  0014F8  322D               	rrcf	___fladd@b,f,c
  6861  0014FA  2A3B               	incf	___fladd@bexp,f,c
  6862  0014FC                     l1193:
  6863  0014FC  503A               	movf	___fladd@aexp,w,c
  6864  0014FE  5C3B               	subwf	___fladd@bexp,w,c
  6865  001500  A0D8               	btfss	status,0,c
  6866  001502  D7EB               	goto	l1194
  6867  001504                     u8460:
  6868  001504  BC39               	btfsc	___fladd@signs,6,c
  6869  001506  D028               	goto	l7355
  6870  001508  503B               	movf	___fladd@bexp,w,c
  6871  00150A  A4D8               	btfss	status,2,c
  6872  00150C  D009               	goto	l7337
  6873  00150E  0E00               	movlw	0
  6874  001510  6E2D               	movwf	?___fladd,c
  6875  001512  0E00               	movlw	0
  6876  001514  6E2E               	movwf	?___fladd+1,c
  6877  001516  0E00               	movlw	0
  6878  001518  6E2F               	movwf	?___fladd+2,c
  6879  00151A  0E00               	movlw	0
  6880  00151C  6E30               	movwf	?___fladd+3,c
  6881  00151E  0012               	return	
  6882  001520                     l7337:
  6883  001520  5031               	movf	___fladd@a,w,c
  6884  001522  262D               	addwf	___fladd@b,f,c
  6885  001524  5032               	movf	___fladd@a+1,w,c
  6886  001526  222E               	addwfc	___fladd@b+1,f,c
  6887  001528  5033               	movf	___fladd@a+2,w,c
  6888  00152A  222F               	addwfc	___fladd@b+2,f,c
  6889  00152C  5034               	movf	___fladd@a+3,w,c
  6890  00152E  2230               	addwfc	___fladd@b+3,f,c
  6891  001530  A030               	btfss	___fladd@b+3,0,c
  6892  001532  D071               	goto	u8590
  6893  001534  A03C               	btfss	___fladd@grs,0,c
  6894  001536  D005               	goto	l7345
  6895  001538  90D8               	bcf	status,0,c
  6896  00153A  303C               	rrcf	___fladd@grs,w,c
  6897  00153C  0901               	iorlw	1
  6898  00153E  6E3C               	movwf	___fladd@grs,c
  6899  001540  D002               	goto	l7347
  6900  001542                     l7345:
  6901  001542  90D8               	bcf	status,0,c
  6902  001544  323C               	rrcf	___fladd@grs,f,c
  6903  001546                     l7347:
  6904  001546  B02D               	btfsc	___fladd@b,0,c
  6905  001548  8E3C               	bsf	___fladd@grs,7,c
  6906  00154A  3430               	rlcf	___fladd@b+3,w,c
  6907  00154C  3230               	rrcf	___fladd@b+3,f,c
  6908  00154E  322F               	rrcf	___fladd@b+2,f,c
  6909  001550  322E               	rrcf	___fladd@b+1,f,c
  6910  001552  322D               	rrcf	___fladd@b,f,c
  6911  001554  2A3B               	incf	___fladd@bexp,f,c
  6912  001556  D05F               	goto	u8590
  6913  001558                     l7355:
  6914  001558  5031               	movf	___fladd@a,w,c
  6915  00155A  5C2D               	subwf	___fladd@b,w,c
  6916  00155C  5032               	movf	___fladd@a+1,w,c
  6917  00155E  582E               	subwfb	___fladd@b+1,w,c
  6918  001560  5033               	movf	___fladd@a+2,w,c
  6919  001562  582F               	subwfb	___fladd@b+2,w,c
  6920  001564  5030               	movf	___fladd@b+3,w,c
  6921  001566  0A80               	xorlw	128
  6922  001568  6E35               	movwf	??___fladd& (0+255),c
  6923  00156A  5034               	movf	___fladd@a+3,w,c
  6924  00156C  0A80               	xorlw	128
  6925  00156E  5835               	subwfb	??___fladd& (0+255),w,c
  6926  001570  B0D8               	btfsc	status,0,c
  6927  001572  D025               	goto	l7365
  6928  001574  502D               	movf	___fladd@b,w,c
  6929  001576  5C31               	subwf	___fladd@a,w,c
  6930  001578  6E35               	movwf	??___fladd& (0+255),c
  6931  00157A  502E               	movf	___fladd@b+1,w,c
  6932  00157C  5832               	subwfb	___fladd@a+1,w,c
  6933  00157E  6E36               	movwf	(??___fladd+1)& (0+255),c
  6934  001580  502F               	movf	___fladd@b+2,w,c
  6935  001582  5833               	subwfb	___fladd@a+2,w,c
  6936  001584  6E37               	movwf	(??___fladd+2)& (0+255),c
  6937  001586  5030               	movf	___fladd@b+3,w,c
  6938  001588  5834               	subwfb	___fladd@a+3,w,c
  6939  00158A  6E38               	movwf	(??___fladd+3)& (0+255),c
  6940  00158C  0EFF               	movlw	255
  6941  00158E  2435               	addwf	??___fladd,w,c
  6942  001590  6E2D               	movwf	___fladd@b,c
  6943  001592  0EFF               	movlw	255
  6944  001594  2036               	addwfc	??___fladd+1,w,c
  6945  001596  6E2E               	movwf	___fladd@b+1,c
  6946  001598  0EFF               	movlw	255
  6947  00159A  2037               	addwfc	??___fladd+2,w,c
  6948  00159C  6E2F               	movwf	___fladd@b+2,c
  6949  00159E  0EFF               	movlw	255
  6950  0015A0  2038               	addwfc	??___fladd+3,w,c
  6951  0015A2  6E30               	movwf	___fladd@b+3,c
  6952  0015A4  0E80               	movlw	128
  6953  0015A6  1A39               	xorwf	___fladd@signs,f,c
  6954  0015A8  6C3C               	negf	___fladd@grs,c
  6955  0015AA  503C               	movf	___fladd@grs,w,c
  6956  0015AC  A4D8               	btfss	status,2,c
  6957  0015AE  D00F               	goto	l1209
  6958  0015B0  0E01               	movlw	1
  6959  0015B2  262D               	addwf	___fladd@b,f,c
  6960  0015B4  0E00               	movlw	0
  6961  0015B6  222E               	addwfc	___fladd@b+1,f,c
  6962  0015B8  222F               	addwfc	___fladd@b+2,f,c
  6963  0015BA  2230               	addwfc	___fladd@b+3,f,c
  6964  0015BC  D008               	goto	l1209
  6965  0015BE                     l7365:
  6966  0015BE  5031               	movf	___fladd@a,w,c
  6967  0015C0  5E2D               	subwf	___fladd@b,f,c
  6968  0015C2  5032               	movf	___fladd@a+1,w,c
  6969  0015C4  5A2E               	subwfb	___fladd@b+1,f,c
  6970  0015C6  5033               	movf	___fladd@a+2,w,c
  6971  0015C8  5A2F               	subwfb	___fladd@b+2,f,c
  6972  0015CA  5034               	movf	___fladd@a+3,w,c
  6973  0015CC  5A30               	subwfb	___fladd@b+3,f,c
  6974  0015CE                     l1209:
  6975  0015CE  502D               	movf	___fladd@b,w,c
  6976  0015D0  102E               	iorwf	___fladd@b+1,w,c
  6977  0015D2  102F               	iorwf	___fladd@b+2,w,c
  6978  0015D4  1030               	iorwf	___fladd@b+3,w,c
  6979  0015D6  A4D8               	btfss	status,2,c
  6980  0015D8  D01C               	goto	l7389
  6981  0015DA  503C               	movf	___fladd@grs,w,c
  6982  0015DC  A4D8               	btfss	status,2,c
  6983  0015DE  D019               	goto	l7389
  6984  0015E0  0E00               	movlw	0
  6985  0015E2  6E2D               	movwf	?___fladd,c
  6986  0015E4  0E00               	movlw	0
  6987  0015E6  6E2E               	movwf	?___fladd+1,c
  6988  0015E8  0E00               	movlw	0
  6989  0015EA  6E2F               	movwf	?___fladd+2,c
  6990  0015EC  0E00               	movlw	0
  6991  0015EE  6E30               	movwf	?___fladd+3,c
  6992  0015F0  0012               	return	
  6993  0015F2                     l7373:
  6994  0015F2  90D8               	bcf	status,0,c
  6995  0015F4  362D               	rlcf	___fladd@b,f,c
  6996  0015F6  362E               	rlcf	___fladd@b+1,f,c
  6997  0015F8  362F               	rlcf	___fladd@b+2,f,c
  6998  0015FA  3630               	rlcf	___fladd@b+3,f,c
  6999  0015FC  BE3C               	btfsc	___fladd@grs,7,c
  7000  0015FE  802D               	bsf	___fladd@b,0,c
  7001  001600  A03C               	btfss	___fladd@grs,0,c
  7002  001602  D002               	goto	l7383
  7003  001604  80D8               	bsf	status,0,c
  7004  001606  D001               	goto	L14
  7005  001608                     l7383:
  7006  001608  90D8               	bcf	status,0,c
  7007  00160A                     L14:
  7008  00160A  363C               	rlcf	___fladd@grs,f,c
  7009  00160C  503B               	movf	___fladd@bexp,w,c
  7010  00160E  A4D8               	btfss	status,2,c
  7011  001610  063B               	decf	___fladd@bexp,f,c
  7012  001612                     l7389:
  7013  001612  AE2F               	btfss	___fladd@b+2,7,c
  7014  001614  D7EE               	goto	l7373
  7015  001616                     u8590:
  7016  001616  0E00               	movlw	0
  7017  001618  6E3A               	movwf	___fladd@aexp,c
  7018  00161A  AE3C               	btfss	___fladd@grs,7,c
  7019  00161C  D00B               	goto	l1218
  7020  00161E  C03C  F035         	movff	___fladd@grs,??___fladd
  7021  001622  0E7F               	movlw	127
  7022  001624  1635               	andwf	??___fladd,f,c
  7023  001626  B4D8               	btfsc	status,2,c
  7024  001628  D003               	goto	l1219
  7025  00162A                     u8610:
  7026  00162A  0E01               	movlw	1
  7027  00162C  6E3A               	movwf	___fladd@aexp,c
  7028  00162E  D002               	goto	l1218
  7029  001630                     l1219:
  7030  001630  B02D               	btfsc	___fladd@b,0,c
  7031  001632  D7FB               	goto	u8610
  7032  001634                     l1218:
  7033  001634  503A               	movf	___fladd@aexp,w,c
  7034  001636  B4D8               	btfsc	status,2,c
  7035  001638  D020               	goto	l7409
  7036  00163A  0E01               	movlw	1
  7037  00163C  262D               	addwf	___fladd@b,f,c
  7038  00163E  0E00               	movlw	0
  7039  001640  222E               	addwfc	___fladd@b+1,f,c
  7040  001642  222F               	addwfc	___fladd@b+2,f,c
  7041  001644  2230               	addwfc	___fladd@b+3,f,c
  7042  001646  A030               	btfss	___fladd@b+3,0,c
  7043  001648  D018               	goto	l7409
  7044  00164A  C02D  F035         	movff	___fladd@b,??___fladd
  7045  00164E  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  7046  001652  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  7047  001656  C030  F038         	movff	___fladd@b+3,??___fladd+3
  7048  00165A  3438               	rlcf	??___fladd+3,w,c
  7049  00165C  3238               	rrcf	??___fladd+3,f,c
  7050  00165E  3237               	rrcf	??___fladd+2,f,c
  7051  001660  3236               	rrcf	??___fladd+1,f,c
  7052  001662  3235               	rrcf	??___fladd,f,c
  7053  001664  C035  F02D         	movff	??___fladd,___fladd@b
  7054  001668  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  7055  00166C  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  7056  001670  C038  F030         	movff	??___fladd+3,___fladd@b+3
  7057  001674  283B               	incf	___fladd@bexp,w,c
  7058  001676  A4D8               	btfss	status,2,c
  7059  001678  2A3B               	incf	___fladd@bexp,f,c
  7060  00167A                     l7409:
  7061  00167A  283B               	incf	___fladd@bexp,w,c
  7062  00167C  B4D8               	btfsc	status,2,c
  7063  00167E  D003               	goto	u8670
  7064  001680  503B               	movf	___fladd@bexp,w,c
  7065  001682  A4D8               	btfss	status,2,c
  7066  001684  D00D               	goto	l7417
  7067  001686                     u8670:
  7068  001686  0E00               	movlw	0
  7069  001688  6E2D               	movwf	___fladd@b,c
  7070  00168A  0E00               	movlw	0
  7071  00168C  6E2E               	movwf	___fladd@b+1,c
  7072  00168E  0E00               	movlw	0
  7073  001690  6E2F               	movwf	___fladd@b+2,c
  7074  001692  0E00               	movlw	0
  7075  001694  6E30               	movwf	___fladd@b+3,c
  7076  001696  503B               	movf	___fladd@bexp,w,c
  7077  001698  A4D8               	btfss	status,2,c
  7078  00169A  D002               	goto	l7417
  7079  00169C  0E00               	movlw	0
  7080  00169E  6E39               	movwf	___fladd@signs,c
  7081  0016A0                     l7417:
  7082  0016A0  A03B               	btfss	___fladd@bexp,0,c
  7083  0016A2  D002               	goto	l7421
  7084  0016A4  8E2F               	bsf	___fladd@b+2,7,c
  7085  0016A6  D001               	goto	l7423
  7086  0016A8                     l7421:
  7087  0016A8  9E2F               	bcf	___fladd@b+2,7,c
  7088  0016AA                     l7423:
  7089  0016AA  90D8               	bcf	status,0,c
  7090  0016AC  303B               	rrcf	___fladd@bexp,w,c
  7091  0016AE  6E30               	movwf	___fladd@b+3,c
  7092  0016B0  BE39               	btfsc	___fladd@signs,7,c
  7093  0016B2  8E30               	bsf	___fladd@b+3,7,c
  7094  0016B4  C02D  F02D         	movff	___fladd@b,?___fladd
  7095  0016B8  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  7096  0016BC  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  7097  0016C0  C030  F030         	movff	___fladd@b+3,?___fladd+3
  7098  0016C4  0012               	return		;funcret
  7099  0016C6                     __end_of___fladd:
  7100                           	opt callstack 0
  7101                           
  7102 ;; *************** function ___awmod *****************
  7103 ;; Defined at:
  7104 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  dividend        2    5[COMRAM] int 
  7107 ;;  divisor         2    7[COMRAM] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  sign            1   10[COMRAM] unsigned char 
  7110 ;;  counter         1    9[COMRAM] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2    5[COMRAM] int 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;Total ram usage:        6 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    2
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_doOperation
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text27
  7135  002CFA                     __ptext27:
  7136                           	opt callstack 0
  7137  002CFA                     ___awmod:
  7138                           	opt callstack 27
  7139                           
  7140                           ;incstack = 0
  7141  002CFA  0E00               	movlw	0
  7142  002CFC  6E0B               	movwf	___awmod@sign,c
  7143  002CFE  AE07               	btfss	___awmod@dividend+1,7,c
  7144  002D00  D006               	goto	l7709
  7145  002D02  6C06               	negf	___awmod@dividend,c
  7146  002D04  1E07               	comf	___awmod@dividend+1,f,c
  7147  002D06  B0D8               	btfsc	status,0,c
  7148  002D08  2A07               	incf	___awmod@dividend+1,f,c
  7149  002D0A  0E01               	movlw	1
  7150  002D0C  6E0B               	movwf	___awmod@sign,c
  7151  002D0E                     l7709:
  7152  002D0E  AE09               	btfss	___awmod@divisor+1,7,c
  7153  002D10  D004               	goto	l7713
  7154  002D12  6C08               	negf	___awmod@divisor,c
  7155  002D14  1E09               	comf	___awmod@divisor+1,f,c
  7156  002D16  B0D8               	btfsc	status,0,c
  7157  002D18  2A09               	incf	___awmod@divisor+1,f,c
  7158  002D1A                     l7713:
  7159  002D1A  5008               	movf	___awmod@divisor,w,c
  7160  002D1C  1009               	iorwf	___awmod@divisor+1,w,c
  7161  002D1E  B4D8               	btfsc	status,2,c
  7162  002D20  D018               	goto	l7729
  7163  002D22  0E01               	movlw	1
  7164  002D24  6E0A               	movwf	___awmod@counter,c
  7165  002D26  D004               	goto	l7719
  7166  002D28                     l7717:
  7167  002D28  90D8               	bcf	status,0,c
  7168  002D2A  3608               	rlcf	___awmod@divisor,f,c
  7169  002D2C  3609               	rlcf	___awmod@divisor+1,f,c
  7170  002D2E  2A0A               	incf	___awmod@counter,f,c
  7171  002D30                     l7719:
  7172  002D30  AE09               	btfss	___awmod@divisor+1,7,c
  7173  002D32  D7FA               	goto	l7717
  7174  002D34                     u8980:
  7175  002D34  5008               	movf	___awmod@divisor,w,c
  7176  002D36  5C06               	subwf	___awmod@dividend,w,c
  7177  002D38  5009               	movf	___awmod@divisor+1,w,c
  7178  002D3A  5807               	subwfb	___awmod@dividend+1,w,c
  7179  002D3C  A0D8               	btfss	status,0,c
  7180  002D3E  D004               	goto	l7725
  7181  002D40  5008               	movf	___awmod@divisor,w,c
  7182  002D42  5E06               	subwf	___awmod@dividend,f,c
  7183  002D44  5009               	movf	___awmod@divisor+1,w,c
  7184  002D46  5A07               	subwfb	___awmod@dividend+1,f,c
  7185  002D48                     l7725:
  7186  002D48  90D8               	bcf	status,0,c
  7187  002D4A  3209               	rrcf	___awmod@divisor+1,f,c
  7188  002D4C  3208               	rrcf	___awmod@divisor,f,c
  7189  002D4E  2E0A               	decfsz	___awmod@counter,f,c
  7190  002D50  D7F1               	goto	u8980
  7191  002D52                     l7729:
  7192  002D52  500B               	movf	___awmod@sign,w,c
  7193  002D54  B4D8               	btfsc	status,2,c
  7194  002D56  D004               	goto	l7733
  7195  002D58  6C06               	negf	___awmod@dividend,c
  7196  002D5A  1E07               	comf	___awmod@dividend+1,f,c
  7197  002D5C  B0D8               	btfsc	status,0,c
  7198  002D5E  2A07               	incf	___awmod@dividend+1,f,c
  7199  002D60                     l7733:
  7200  002D60  C006  F006         	movff	___awmod@dividend,?___awmod
  7201  002D64  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  7202  002D68  0012               	return		;funcret
  7203  002D6A                     __end_of___awmod:
  7204                           	opt callstack 0
  7205                           
  7206 ;; *************** function _TIMER_INIT *****************
  7207 ;; Defined at:
  7208 ;;		line 207 in file "main.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    2
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_doOperation
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text28
  7237  003448                     __ptext28:
  7238                           	opt callstack 0
  7239  003448                     _TIMER_INIT:
  7240                           	opt callstack 27
  7241                           
  7242                           ;main.c: 208:     T0CONbits.TMR0ON = 0;
  7243                           
  7244                           ;incstack = 0
  7245  003448  9ED5               	bcf	4053,7,c	;volatile
  7246                           
  7247                           ;main.c: 209:     T0CONbits.T08BIT = 0;
  7248  00344A  9CD5               	bcf	4053,6,c	;volatile
  7249                           
  7250                           ;main.c: 210:     T0CONbits.T0CS = 0;
  7251  00344C  9AD5               	bcf	4053,5,c	;volatile
  7252                           
  7253                           ;main.c: 211:     T0CONbits.PSA = 0;
  7254  00344E  96D5               	bcf	4053,3,c	;volatile
  7255                           
  7256                           ;main.c: 212:     T0CONbits.T0PS = 0b000;
  7257  003450  0EF8               	movlw	-8
  7258  003452  16D5               	andwf	4053,f,c	;volatile
  7259                           
  7260                           ;main.c: 213:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  7261  003454  0EFB               	movlw	251
  7262  003456  6ED7               	movwf	4055,c	;volatile
  7263                           
  7264                           ;main.c: 214:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  7265  003458  0E1E               	movlw	30
  7266  00345A  6ED6               	movwf	4054,c	;volatile
  7267                           
  7268                           ;main.c: 215:     T0CONbits.TMR0ON = 1;
  7269  00345C  8ED5               	bsf	4053,7,c	;volatile
  7270                           
  7271                           ;main.c: 216:     INTCONbits.TMR0IE = 1;
  7272  00345E  8AF2               	bsf	4082,5,c	;volatile
  7273                           
  7274                           ;main.c: 218:     INTCONbits.GIE = 1;
  7275  003460  8EF2               	bsf	4082,7,c	;volatile
  7276                           
  7277                           ;main.c: 219:     INTCONbits.PEIE = 1;
  7278  003462  8CF2               	bsf	4082,6,c	;volatile
  7279  003464  0012               	return		;funcret
  7280  003466                     __end_of_TIMER_INIT:
  7281                           	opt callstack 0
  7282                           
  7283 ;; *************** function _doDisplayLog *****************
  7284 ;; Defined at:
  7285 ;;		line 40 in file "main.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  logNumber       2   14[BANK0 ] int 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;  keyValue        1   22[BANK0 ] unsigned char 
  7290 ;;  keypress        1   20[BANK0 ] unsigned char 
  7291 ;;  currentPole     2   23[BANK0 ] int 
  7292 ;;  currentDispl    1   21[BANK0 ] enum E3250
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;Total ram usage:       13 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:   13
  7309 ;; This function calls:
  7310 ;;		___wmul
  7311 ;;		_lcdInst
  7312 ;;		_printf
  7313 ;; This function is called by:
  7314 ;;		_main
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text29
  7319  000CBA                     __ptext29:
  7320                           	opt callstack 0
  7321  000CBA                     _doDisplayLog:
  7322                           	opt callstack 17
  7323                           
  7324                           ;main.c: 41:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  7325                           
  7326                           ;incstack = 0
  7327  000CBA  0E80               	movlw	128
  7328  000CBC  EC62  F01A         	call	_lcdInst
  7329  000CC0  0E07               	movlw	7
  7330  000CC2  0100               	movlb	0	; () banked
  7331  000CC4  6F90               	movwf	??_doDisplayLog& (0+255),b
  7332  000CC6  0E7D               	movlw	125
  7333  000CC8                     u9637:
  7334  000CC8  2EE8               	decfsz	wreg,f,c
  7335  000CCA  D7FE               	bra	u9637
  7336  000CCC  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7337  000CCE  D7FC               	bra	u9637
  7338                           
  7339                           ;main.c: 46:     int currentPole = 1;
  7340  000CD0  0E00               	movlw	0
  7341  000CD2  0100               	movlb	0	; () banked
  7342  000CD4  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  7343  000CD6  0E01               	movlw	1
  7344  000CD8  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;main.c: 48:     enum displayStates currentDisplayState = opTime;
  7348  000CDA  0E00               	movlw	0
  7349  000CDC  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  7350  000CDE  D134               	goto	l7793
  7351  000CE0                     l7745:
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;main.c: 53:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  7355  000CE0  0E80               	movlw	128
  7356  000CE2  EC62  F01A         	call	_lcdInst
  7357  000CE6  0E07               	movlw	7
  7358  000CE8  0100               	movlb	0	; () banked
  7359  000CEA  6F90               	movwf	??_doDisplayLog& (0+255),b
  7360  000CEC  0E7D               	movlw	125
  7361  000CEE                     u9647:
  7362  000CEE  2EE8               	decfsz	wreg,f,c
  7363  000CF0  D7FE               	bra	u9647
  7364  000CF2  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7365  000CF4  D7FC               	bra	u9647
  7366                           
  7367                           ;main.c: 54:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  7368  000CF6  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7369  000CFA  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7370  000CFE  0E00               	movlw	0
  7371  000D00  6E09               	movwf	___wmul@multiplicand+1,c
  7372  000D02  0E42               	movlw	66
  7373  000D04  6E08               	movwf	___wmul@multiplicand,c
  7374  000D06  ECEE  F019         	call	___wmul	;wreg free
  7375  000D0A  0E30               	movlw	low _logs
  7376  000D0C  2406               	addwf	?___wmul,w,c
  7377  000D0E  6ED9               	movwf	fsr2l,c
  7378  000D10  0E01               	movlw	high _logs
  7379  000D12  2007               	addwfc	?___wmul+1,w,c
  7380  000D14  6EDA               	movwf	fsr2h,c
  7381  000D16  CFDE F099          	movff	postinc2,_doDisplayLog$2186
  7382  000D1A  CFDD F09A          	movff	postdec2,_doDisplayLog$2186+1
  7383                           
  7384                           ;main.c: 54:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  7385  000D1E  0E14               	movlw	low STR_1
  7386  000D20  0100               	movlb	0	; () banked
  7387  000D22  6F80               	movwf	printf@fmt& (0+255),b
  7388  000D24  0EFD               	movlw	high STR_1
  7389  000D26  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7390  000D28  0EC8               	movlw	low STR_2
  7391  000D2A  6F82               	movwf	(?_printf+2)& (0+255),b
  7392  000D2C  0EFC               	movlw	high STR_2
  7393  000D2E  6F83               	movwf	(?_printf+3)& (0+255),b
  7394  000D30  C099  F084         	movff	_doDisplayLog$2186,?_printf+4
  7395  000D34  C09A  F085         	movff	_doDisplayLog$2186+1,?_printf+5
  7396  000D38  0E19               	movlw	low (STR_1+5)
  7397  000D3A  6F86               	movwf	(?_printf+6)& (0+255),b
  7398  000D3C  0EFD               	movlw	high (STR_1+5)
  7399  000D3E  6F87               	movwf	(?_printf+7)& (0+255),b
  7400  000D40  ECDA  F019         	call	_printf	;wreg free
  7401  000D44  0EC0               	movlw	192
  7402  000D46  EC62  F01A         	call	_lcdInst
  7403                           
  7404                           ;main.c: 56:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  7405  000D4A  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7406  000D4E  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7407  000D52  0E00               	movlw	0
  7408  000D54  6E09               	movwf	___wmul@multiplicand+1,c
  7409  000D56  0E42               	movlw	66
  7410  000D58  6E08               	movwf	___wmul@multiplicand,c
  7411  000D5A  ECEE  F019         	call	___wmul	;wreg free
  7412  000D5E  0E32               	movlw	low (_logs+2)
  7413  000D60  2406               	addwf	?___wmul,w,c
  7414  000D62  6ED9               	movwf	fsr2l,c
  7415  000D64  0E01               	movlw	high (_logs+2)
  7416  000D66  2007               	addwfc	?___wmul+1,w,c
  7417  000D68  6EDA               	movwf	fsr2h,c
  7418  000D6A  CFDE F099          	movff	postinc2,_doDisplayLog$2186
  7419  000D6E  CFDD F09A          	movff	postdec2,_doDisplayLog$2186+1
  7420                           
  7421                           ;main.c: 56:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  7422  000D72  0E0F               	movlw	low (STR_10+4)
  7423  000D74  0100               	movlb	0	; () banked
  7424  000D76  6F80               	movwf	printf@fmt& (0+255),b
  7425  000D78  0EFD               	movlw	high (STR_10+4)
  7426  000D7A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7427  000D7C  0E00               	movlw	low STR_5
  7428  000D7E  6F82               	movwf	(?_printf+2)& (0+255),b
  7429  000D80  0EFC               	movlw	high STR_5
  7430  000D82  6F83               	movwf	(?_printf+3)& (0+255),b
  7431  000D84  C099  F084         	movff	_doDisplayLog$2186,?_printf+4
  7432  000D88  C09A  F085         	movff	_doDisplayLog$2186+1,?_printf+5
  7433  000D8C  ECDA  F019         	call	_printf	;wreg free
  7434  000D90  0E90               	movlw	144
  7435  000D92  EC62  F01A         	call	_lcdInst
  7436                           
  7437                           ;main.c: 58:                 printf("%s","(1) POLE INFO");
  7438  000D96  0E18               	movlw	low (STR_1+4)
  7439  000D98  0100               	movlb	0	; () banked
  7440  000D9A  6F80               	movwf	printf@fmt& (0+255),b
  7441  000D9C  0EFD               	movlw	high (STR_1+4)
  7442  000D9E  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7443  000DA0  0E49               	movlw	low STR_7
  7444  000DA2  6F82               	movwf	(?_printf+2)& (0+255),b
  7445  000DA4  0EFC               	movlw	high STR_7
  7446  000DA6  6F83               	movwf	(?_printf+3)& (0+255),b
  7447  000DA8  ECDA  F019         	call	_printf	;wreg free
  7448  000DAC  0ED0               	movlw	208
  7449  000DAE  EC62  F01A         	call	_lcdInst
  7450                           
  7451                           ;main.c: 60:                 printf("%s","(2) SAVE & EXIT");
  7452  000DB2  0E18               	movlw	low (STR_1+4)
  7453  000DB4  0100               	movlb	0	; () banked
  7454  000DB6  6F80               	movwf	printf@fmt& (0+255),b
  7455  000DB8  0EFD               	movlw	high (STR_1+4)
  7456  000DBA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7457  000DBC  0EE0               	movlw	low STR_9
  7458  000DBE  6F82               	movwf	(?_printf+2)& (0+255),b
  7459  000DC0  0EFB               	movlw	high STR_9
  7460  000DC2  6F83               	movwf	(?_printf+3)& (0+255),b
  7461  000DC4  ECDA  F019         	call	_printf	;wreg free
  7462                           
  7463                           ;main.c: 61:                 break;
  7464  000DC8  D0CE               	goto	l7795
  7465  000DCA                     l7767:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;main.c: 63:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  7469  000DCA  0E80               	movlw	128
  7470  000DCC  EC62  F01A         	call	_lcdInst
  7471  000DD0  0E07               	movlw	7
  7472  000DD2  0100               	movlb	0	; () banked
  7473  000DD4  6F90               	movwf	??_doDisplayLog& (0+255),b
  7474  000DD6  0E7D               	movlw	125
  7475  000DD8                     u9657:
  7476  000DD8  2EE8               	decfsz	wreg,f,c
  7477  000DDA  D7FE               	bra	u9657
  7478  000DDC  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7479  000DDE  D7FC               	bra	u9657
  7480                           
  7481                           ;main.c: 64:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  7482  000DE0  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7483  000DE4  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7484  000DE8  0E00               	movlw	0
  7485  000DEA  6E09               	movwf	___wmul@multiplicand+1,c
  7486  000DEC  0E42               	movlw	66
  7487  000DEE  6E08               	movwf	___wmul@multiplicand,c
  7488  000DF0  ECEE  F019         	call	___wmul	;wreg free
  7489  000DF4  0E34               	movlw	low (_logs+4)
  7490  000DF6  2406               	addwf	?___wmul,w,c
  7491  000DF8  6ED9               	movwf	fsr2l,c
  7492  000DFA  0E01               	movlw	high (_logs+4)
  7493  000DFC  2007               	addwfc	?___wmul+1,w,c
  7494  000DFE  6EDA               	movwf	fsr2h,c
  7495  000E00  CFDE F099          	movff	postinc2,_doDisplayLog$2186
  7496  000E04  CFDD F09A          	movff	postdec2,_doDisplayLog$2186+1
  7497                           
  7498                           ;main.c: 64:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  7499  000E08  0E0B               	movlw	low STR_10
  7500  000E0A  0100               	movlb	0	; () banked
  7501  000E0C  6F80               	movwf	printf@fmt& (0+255),b
  7502  000E0E  0EFD               	movlw	high STR_10
  7503  000E10  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7504  000E12  0E1B               	movlw	low STR_11
  7505  000E14  6F82               	movwf	(?_printf+2)& (0+255),b
  7506  000E16  0EFD               	movlw	high STR_11
  7507  000E18  6F83               	movwf	(?_printf+3)& (0+255),b
  7508  000E1A  C097  F084         	movff	doDisplayLog@currentPole,?_printf+4
  7509  000E1E  C098  F085         	movff	doDisplayLog@currentPole+1,?_printf+5
  7510  000E22  0E2D               	movlw	low STR_12
  7511  000E24  6F86               	movwf	(?_printf+6)& (0+255),b
  7512  000E26  0EFD               	movlw	high STR_12
  7513  000E28  6F87               	movwf	(?_printf+7)& (0+255),b
  7514  000E2A  C099  F088         	movff	_doDisplayLog$2186,?_printf+8
  7515  000E2E  C09A  F089         	movff	_doDisplayLog$2186+1,?_printf+9
  7516  000E32  ECDA  F019         	call	_printf	;wreg free
  7517  000E36  0EC0               	movlw	192
  7518  000E38  EC62  F01A         	call	_lcdInst
  7519                           
  7520                           ;main.c: 66:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  7521  000E3C  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  7522  000E40  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  7523  000E44  90D8               	bcf	status,0,c
  7524  000E46  0100               	movlb	0	; () banked
  7525  000E48  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  7526  000E4A  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  7527  000E4C  90D8               	bcf	status,0,c
  7528  000E4E  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  7529  000E50  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  7530  000E52  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7531  000E56  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7532  000E5A  0E00               	movlw	0
  7533  000E5C  6E09               	movwf	___wmul@multiplicand+1,c
  7534  000E5E  0E42               	movlw	66
  7535  000E60  6E08               	movwf	___wmul@multiplicand,c
  7536  000E62  ECEE  F019         	call	___wmul	;wreg free
  7537  000E66  0E30               	movlw	low _logs
  7538  000E68  0100               	movlb	0	; () banked
  7539  000E6A  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  7540  000E6C  0E01               	movlw	high _logs
  7541  000E6E  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  7542  000E70  0E02               	movlw	2
  7543  000E72  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  7544  000E74  0E00               	movlw	0
  7545  000E76  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  7546  000E78  5006               	movf	?___wmul,w,c
  7547  000E7A  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  7548  000E7C  5007               	movf	?___wmul+1,w,c
  7549  000E7E  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  7550  000E80  5190               	movf	??_doDisplayLog& (0+255),w,b
  7551  000E82  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  7552  000E84  6ED9               	movwf	fsr2l,c
  7553  000E86  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  7554  000E88  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  7555  000E8A  6EDA               	movwf	fsr2h,c
  7556  000E8C  CFDE F099          	movff	postinc2,_doDisplayLog$2186
  7557  000E90  CFDD F09A          	movff	postdec2,_doDisplayLog$2186+1
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;main.c: 66:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  7561  000E94  0E0F               	movlw	low (STR_10+4)
  7562  000E96  6F80               	movwf	printf@fmt& (0+255),b
  7563  000E98  0EFD               	movlw	high (STR_10+4)
  7564  000E9A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7565  000E9C  0E2D               	movlw	low STR_14
  7566  000E9E  6F82               	movwf	(?_printf+2)& (0+255),b
  7567  000EA0  0EFC               	movlw	high STR_14
  7568  000EA2  6F83               	movwf	(?_printf+3)& (0+255),b
  7569  000EA4  C099  F084         	movff	_doDisplayLog$2186,?_printf+4
  7570  000EA8  C09A  F085         	movff	_doDisplayLog$2186+1,?_printf+5
  7571  000EAC  ECDA  F019         	call	_printf	;wreg free
  7572  000EB0  0E90               	movlw	144
  7573  000EB2  EC62  F01A         	call	_lcdInst
  7574                           
  7575                           ;main.c: 68:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  7576  000EB6  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  7577  000EBA  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  7578  000EBE  90D8               	bcf	status,0,c
  7579  000EC0  0100               	movlb	0	; () banked
  7580  000EC2  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  7581  000EC4  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  7582  000EC6  90D8               	bcf	status,0,c
  7583  000EC8  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  7584  000ECA  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  7585  000ECC  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7586  000ED0  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7587  000ED4  0E00               	movlw	0
  7588  000ED6  6E09               	movwf	___wmul@multiplicand+1,c
  7589  000ED8  0E42               	movlw	66
  7590  000EDA  6E08               	movwf	___wmul@multiplicand,c
  7591  000EDC  ECEE  F019         	call	___wmul	;wreg free
  7592  000EE0  0E30               	movlw	low _logs
  7593  000EE2  0100               	movlb	0	; () banked
  7594  000EE4  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  7595  000EE6  0E01               	movlw	high _logs
  7596  000EE8  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  7597  000EEA  0E04               	movlw	4
  7598  000EEC  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  7599  000EEE  0E00               	movlw	0
  7600  000EF0  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  7601  000EF2  5006               	movf	?___wmul,w,c
  7602  000EF4  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  7603  000EF6  5007               	movf	?___wmul+1,w,c
  7604  000EF8  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  7605  000EFA  5190               	movf	??_doDisplayLog& (0+255),w,b
  7606  000EFC  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  7607  000EFE  6ED9               	movwf	fsr2l,c
  7608  000F00  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  7609  000F02  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  7610  000F04  6EDA               	movwf	fsr2h,c
  7611  000F06  CFDE F099          	movff	postinc2,_doDisplayLog$2186
  7612  000F0A  CFDD F09A          	movff	postdec2,_doDisplayLog$2186+1
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;main.c: 68:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  7616  000F0E  0E0F               	movlw	low (STR_10+4)
  7617  000F10  6F80               	movwf	printf@fmt& (0+255),b
  7618  000F12  0EFD               	movlw	high (STR_10+4)
  7619  000F14  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7620  000F16  0EC0               	movlw	low STR_16
  7621  000F18  6F82               	movwf	(?_printf+2)& (0+255),b
  7622  000F1A  0EFB               	movlw	high STR_16
  7623  000F1C  6F83               	movwf	(?_printf+3)& (0+255),b
  7624  000F1E  C099  F084         	movff	_doDisplayLog$2186,?_printf+4
  7625  000F22  C09A  F085         	movff	_doDisplayLog$2186+1,?_printf+5
  7626  000F26  ECDA  F019         	call	_printf	;wreg free
  7627  000F2A  0ED0               	movlw	208
  7628  000F2C  EC62  F01A         	call	_lcdInst
  7629                           
  7630                           ;main.c: 70:                 printf("%s","1<- 2-> 3MENU");
  7631  000F30  0E18               	movlw	low (STR_1+4)
  7632  000F32  0100               	movlb	0	; () banked
  7633  000F34  6F80               	movwf	printf@fmt& (0+255),b
  7634  000F36  0EFD               	movlw	high (STR_1+4)
  7635  000F38  6F81               	movwf	(printf@fmt+1)& (0+255),b
  7636  000F3A  0E65               	movlw	low STR_18
  7637  000F3C  6F82               	movwf	(?_printf+2)& (0+255),b
  7638  000F3E  0EFC               	movlw	high STR_18
  7639  000F40  6F83               	movwf	(?_printf+3)& (0+255),b
  7640  000F42  ECDA  F019         	call	_printf	;wreg free
  7641                           
  7642                           ;main.c: 71:                 break;
  7643  000F46  D00F               	goto	l7795
  7644  000F48                     l7793:
  7645  000F48  0100               	movlb	0	; () banked
  7646  000F4A  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  7647  000F4C  6F90               	movwf	??_doDisplayLog& (0+255),b
  7648  000F4E  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  7649                           
  7650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7651                           ; Switch size 1, requested type "simple"
  7652                           ; Number of cases is 1, Range of values is 0 to 0
  7653                           ; switch strategies available:
  7654                           ; Name         Instructions Cycles
  7655                           ; simple_byte            4     3 (average)
  7656                           ;	Chosen strategy is simple_byte
  7657  000F50  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  7658  000F52  0A00               	xorlw	0	; case 0
  7659  000F54  A4D8               	btfss	status,2,c
  7660  000F56  D007               	goto	l7795
  7661                           
  7662                           ; BSR set to: 0
  7663                           ; Switch size 1, requested type "simple"
  7664                           ; Number of cases is 2, Range of values is 0 to 1
  7665                           ; switch strategies available:
  7666                           ; Name         Instructions Cycles
  7667                           ; simple_byte            7     4 (average)
  7668                           ;	Chosen strategy is simple_byte
  7669  000F58  5190               	movf	??_doDisplayLog& (0+255),w,b
  7670  000F5A  0A00               	xorlw	0	; case 0
  7671  000F5C  B4D8               	btfsc	status,2,c
  7672  000F5E  D6C0               	goto	l7745
  7673  000F60  0A01               	xorlw	1	; case 1
  7674  000F62  B4D8               	btfsc	status,2,c
  7675  000F64  D732               	goto	l7767
  7676  000F66                     l7795:
  7677                           
  7678                           ;main.c: 74:         if(keyPressed){
  7679  000F66  0100               	movlb	0	; () banked
  7680  000F68  51E8               	movf	_keyPressed& (0+255),w,b	;volatile
  7681  000F6A  B4D8               	btfsc	status,2,c
  7682  000F6C  D073               	goto	l7835
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;main.c: 77:             keyPressed = 0;
  7686  000F6E  0E00               	movlw	0
  7687  000F70  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;main.c: 80:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7691  000F72  3881               	swapf	3969,w,c	;volatile
  7692  000F74  0B0F               	andlw	15
  7693  000F76  0B0F               	andlw	15
  7694  000F78  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;main.c: 81:             char keyValue = keys[keypress];
  7698  000F7A  0E9D               	movlw	low _keys
  7699  000F7C  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  7700  000F7E  6EF6               	movwf	tblptrl,c
  7701  000F80  6AF7               	clrf	tblptrh,c
  7702  000F82  0EFB               	movlw	high _keys
  7703  000F84  22F7               	addwfc	tblptrh,f,c
  7704  000F86                     	if	0	;There are less than 3 active tblptr bytes
  7705  000F86                     	endif
  7706  000F86  0008               	tblrd		*
  7707  000F88  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;main.c: 82:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  7711  000F8C  0E01               	movlw	1
  7712  000F8E  EC62  F01A         	call	_lcdInst
  7713  000F92  0E11               	movlw	17
  7714  000F94  0100               	movlb	0	; () banked
  7715  000F96  6F90               	movwf	??_doDisplayLog& (0+255),b
  7716  000F98  0E3A               	movlw	58
  7717  000F9A                     u9667:
  7718  000F9A  2EE8               	decfsz	wreg,f,c
  7719  000F9C  D7FE               	bra	u9667
  7720  000F9E  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7721  000FA0  D7FC               	bra	u9667
  7722  000FA2  F000               	nop	
  7723                           
  7724                           ;main.c: 83:             switch (currentDisplayState){
  7725  000FA4  D048               	goto	l7833
  7726  000FA6                     l7807:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;main.c: 85:                     if (keyValue == '1'){
  7730  000FA6  0E31               	movlw	49
  7731  000FA8  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  7732  000FAA  A4D8               	btfss	status,2,c
  7733  000FAC  D003               	goto	l7811
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;main.c: 86:                         currentDisplayState = pole;
  7737  000FAE  0E01               	movlw	1
  7738  000FB0  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  7739                           
  7740                           ;main.c: 87:                     } else if (keyValue == '2'){
  7741  000FB2  D050               	goto	l7835
  7742  000FB4                     l7811:
  7743                           
  7744                           ; BSR set to: 0
  7745  000FB4  0E32               	movlw	50
  7746  000FB6  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  7747  000FB8  B4D8               	btfsc	status,2,c
  7748  000FBA  0012               	return	
  7749  000FBC  D04B               	goto	l7835
  7750  000FBE                     l7815:
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;main.c: 92:                     if (keyValue == '3'){
  7754  000FBE  0E33               	movlw	51
  7755  000FC0  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  7756  000FC2  A4D8               	btfss	status,2,c
  7757  000FC4  D007               	goto	l7819
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;main.c: 93:                         currentDisplayState = opTime;
  7761  000FC6  0E00               	movlw	0
  7762  000FC8  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  7763                           
  7764                           ;main.c: 94:                         currentPole = 1;
  7765  000FCA  0E00               	movlw	0
  7766  000FCC  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  7767  000FCE  0E01               	movlw	1
  7768  000FD0  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  7769                           
  7770                           ;main.c: 96:                     } else if (keyValue == '2'){
  7771  000FD2  D040               	goto	l7835
  7772  000FD4                     l7819:
  7773                           
  7774                           ; BSR set to: 0
  7775  000FD4  0E32               	movlw	50
  7776  000FD6  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  7777  000FD8  A4D8               	btfss	status,2,c
  7778  000FDA  D01E               	goto	l7825
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;main.c: 97:                         if(currentPole < logs[logNumber][2]){
  7782  000FDC  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  7783  000FE0  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  7784  000FE4  0E00               	movlw	0
  7785  000FE6  6E09               	movwf	___wmul@multiplicand+1,c
  7786  000FE8  0E42               	movlw	66
  7787  000FEA  6E08               	movwf	___wmul@multiplicand,c
  7788  000FEC  ECEE  F019         	call	___wmul	;wreg free
  7789  000FF0  0E34               	movlw	low (_logs+4)
  7790  000FF2  2406               	addwf	?___wmul,w,c
  7791  000FF4  6ED9               	movwf	fsr2l,c
  7792  000FF6  0E01               	movlw	high (_logs+4)
  7793  000FF8  2007               	addwfc	?___wmul+1,w,c
  7794  000FFA  6EDA               	movwf	fsr2h,c
  7795  000FFC  50DE               	movf	postinc2,w,c
  7796  000FFE  0100               	movlb	0	; () banked
  7797  001000  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  7798  001002  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  7799  001004  0A80               	xorlw	128
  7800  001006  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  7801  001008  50DE               	movf	postinc2,w,c
  7802  00100A  0A80               	xorlw	128
  7803  00100C  5992               	subwfb	(??_doDisplayLog+2)& (0+255),w,b
  7804  00100E  B0D8               	btfsc	status,0,c
  7805  001010  D021               	goto	l7835
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;main.c: 98:                             currentPole++;
  7809  001012  4B97               	infsnz	doDisplayLog@currentPole& (0+255),f,b
  7810  001014  2B98               	incf	(doDisplayLog@currentPole+1)& (0+255),f,b
  7811  001016  D01E               	goto	l7835
  7812  001018                     l7825:
  7813                           
  7814                           ; BSR set to: 0
  7815  001018  0E31               	movlw	49
  7816  00101A  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  7817  00101C  B4D8               	btfsc	status,2,c
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;main.c: 101:                         if (currentPole > 1){
  7821  00101E  BF98               	btfsc	(doDisplayLog@currentPole+1)& (0+255),7,b
  7822  001020  D019               	goto	l7835
  7823  001022  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  7824  001024  E104               	bnz	u9080
  7825  001026  0E02               	movlw	2
  7826  001028  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  7827  00102A  A0D8               	btfss	status,0,c
  7828  00102C  D013               	goto	l7835
  7829  00102E                     u9080:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;main.c: 102:                             currentPole--;
  7833  00102E  0797               	decf	doDisplayLog@currentPole& (0+255),f,b
  7834  001030  A0D8               	btfss	status,0,c
  7835  001032  0798               	decf	(doDisplayLog@currentPole+1)& (0+255),f,b
  7836  001034  D00F               	goto	l7835
  7837  001036                     l7833:
  7838  001036  0100               	movlb	0	; () banked
  7839  001038  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  7840  00103A  6F90               	movwf	??_doDisplayLog& (0+255),b
  7841  00103C  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  7842                           
  7843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7844                           ; Switch size 1, requested type "simple"
  7845                           ; Number of cases is 1, Range of values is 0 to 0
  7846                           ; switch strategies available:
  7847                           ; Name         Instructions Cycles
  7848                           ; simple_byte            4     3 (average)
  7849                           ;	Chosen strategy is simple_byte
  7850  00103E  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  7851  001040  0A00               	xorlw	0	; case 0
  7852  001042  A4D8               	btfss	status,2,c
  7853  001044  D007               	goto	l7835
  7854                           
  7855                           ; BSR set to: 0
  7856                           ; Switch size 1, requested type "simple"
  7857                           ; Number of cases is 2, Range of values is 0 to 1
  7858                           ; switch strategies available:
  7859                           ; Name         Instructions Cycles
  7860                           ; simple_byte            7     4 (average)
  7861                           ;	Chosen strategy is simple_byte
  7862  001046  5190               	movf	??_doDisplayLog& (0+255),w,b
  7863  001048  0A00               	xorlw	0	; case 0
  7864  00104A  B4D8               	btfsc	status,2,c
  7865  00104C  D7AC               	goto	l7807
  7866  00104E  0A01               	xorlw	1	; case 1
  7867  001050  B4D8               	btfsc	status,2,c
  7868  001052  D7B5               	goto	l7815
  7869  001054                     l7835:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;main.c: 110:     _delay((unsigned long)((1)*(10000000/4000.0)));
  7873  001054  0E04               	movlw	4
  7874  001056  0100               	movlb	0	; () banked
  7875  001058  6F90               	movwf	??_doDisplayLog& (0+255),b
  7876  00105A  0E3D               	movlw	61
  7877  00105C                     u9677:
  7878  00105C  2EE8               	decfsz	wreg,f,c
  7879  00105E  D7FE               	bra	u9677
  7880  001060  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  7881  001062  D7FC               	bra	u9677
  7882  001064  D000               	nop2	
  7883  001066  D770               	goto	l7793
  7884  001068                     __end_of_doDisplayLog:
  7885                           	opt callstack 0
  7886                           
  7887 ;; *************** function _printf *****************
  7888 ;; Defined at:
  7889 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  7892 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  7893 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  7894 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  7895 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  7896 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(3), 
  7897 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  7898 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  7899 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  7900 ;;		 -> STR_1(7), 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  ap              2   12[BANK0 ] PTR void [1]
  7903 ;;		 -> ?_printf(2), 
  7904 ;;  ret             2    0        int 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  2    0[BANK0 ] int 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:       14 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:   12
  7921 ;; This function calls:
  7922 ;;		_vfprintf
  7923 ;; This function is called by:
  7924 ;;		_doDisplayLog
  7925 ;;		_doOperation
  7926 ;;		_main
  7927 ;;		_mainEEPROM
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text30
  7932  0033B4                     __ptext30:
  7933                           	opt callstack 0
  7934  0033B4                     _printf:
  7935                           	opt callstack 18
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;incstack = 0
  7939  0033B4  0E82               	movlw	low (?_printf+2)
  7940  0033B6  0100               	movlb	0	; () banked
  7941  0033B8  6F8C               	movwf	printf@ap& (0+255),b
  7942  0033BA  0E00               	movlw	high (?_printf+2)
  7943  0033BC  6F8D               	movwf	(printf@ap+1)& (0+255),b
  7944                           
  7945                           ; BSR set to: 0
  7946  0033BE  0E00               	movlw	0
  7947  0033C0  6E6D               	movwf	vfprintf@fp,c
  7948  0033C2  0E00               	movlw	0
  7949  0033C4  6E6E               	movwf	vfprintf@fp+1,c
  7950  0033C6  C080  F06F         	movff	printf@fmt,vfprintf@fmt
  7951  0033CA  C081  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  7952  0033CE  0E8C               	movlw	low printf@ap
  7953  0033D0  6E71               	movwf	vfprintf@ap,c
  7954  0033D2  0E00               	movlw	high printf@ap
  7955  0033D4  6E72               	movwf	vfprintf@ap+1,c
  7956  0033D6  EC81  F017         	call	_vfprintf	;wreg free
  7957  0033DA  0012               	return		;funcret
  7958  0033DC                     __end_of_printf:
  7959                           	opt callstack 0
  7960                           
  7961 ;; *************** function _vfprintf *****************
  7962 ;; Defined at:
  7963 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  7966 ;;		 -> NULL(0), 
  7967 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  7968 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  7969 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  7970 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  7971 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  7972 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(3), 
  7973 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  7974 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  7975 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  7976 ;;		 -> STR_1(7), 
  7977 ;;  ap              2  112[COMRAM] PTR PTR void 
  7978 ;;		 -> printf@ap(2), 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  7981 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  7982 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  7983 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  7984 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  7985 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(3), 
  7986 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  7987 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  7988 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  7989 ;;		 -> STR_1(7), 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  2  108[COMRAM] int 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7999 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;Total ram usage:        8 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:   11
  8006 ;; This function calls:
  8007 ;;		_vfpfcnvrt
  8008 ;; This function is called by:
  8009 ;;		_printf
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text31
  8014  002F02                     __ptext31:
  8015                           	opt callstack 0
  8016  002F02                     _vfprintf:
  8017                           	opt callstack 18
  8018                           
  8019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8020                           
  8021                           ;incstack = 0
  8022  002F02  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  8023  002F06  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8024                           
  8025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8026  002F0A  0E00               	movlw	0
  8027  002F0C  0100               	movlb	0	; () banked
  8028  002F0E  6FDB               	movwf	(_nout+1)& (0+255),b
  8029  002F10  0E00               	movlw	0
  8030  002F12  6FDA               	movwf	_nout& (0+255),b
  8031                           
  8032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8033  002F14  D013               	goto	l7483
  8034  002F16                     l7481:
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8038  002F16  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  8039  002F1A  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8040  002F1E  0E73               	movlw	low vfprintf@cfmt
  8041  002F20  6E4E               	movwf	vfpfcnvrt@fmt,c
  8042  002F22  0E00               	movlw	high vfprintf@cfmt
  8043  002F24  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  8044  002F26  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  8045  002F2A  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8046  002F2E  EC09  F000         	call	_vfpfcnvrt	;wreg free
  8047  002F32  504C               	movf	?_vfpfcnvrt,w,c
  8048  002F34  0100               	movlb	0	; () banked
  8049  002F36  27DA               	addwf	_nout& (0+255),f,b
  8050  002F38  504D               	movf	?_vfpfcnvrt+1,w,c
  8051  002F3A  23DB               	addwfc	(_nout+1)& (0+255),f,b
  8052  002F3C                     l7483:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8056  002F3C  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  8057  002F40  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8058  002F44                     	if	0	;tblptru may be non-zero
  8059  002F44                     	endif
  8060  002F44                     	if	0	;tblptru may be non-zero
  8061  002F44                     	endif
  8062  002F44  0008               	tblrd		*
  8063  002F46  50F5               	movf	tablat,w,c
  8064  002F48  0900               	iorlw	0
  8065  002F4A  A4D8               	btfss	status,2,c
  8066  002F4C  D7E4               	goto	l7481
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8070  002F4E  C0DA  F06D         	movff	_nout,?_vfprintf
  8071  002F52  C0DB  F06E         	movff	_nout+1,?_vfprintf+1
  8072                           
  8073                           ; BSR set to: 0
  8074  002F56  0012               	return		;funcret
  8075  002F58                     __end_of_vfprintf:
  8076                           	opt callstack 0
  8077                           
  8078 ;; *************** function _vfpfcnvrt *****************
  8079 ;; Defined at:
  8080 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  8083 ;;		 -> NULL(0), 
  8084 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  8085 ;;		 -> vfprintf@cfmt(2), 
  8086 ;;  ap              2   79[COMRAM] PTR PTR void 
  8087 ;;		 -> printf@ap(2), 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  llu             8   93[COMRAM] unsigned long long 
  8090 ;;  ll              8   85[COMRAM] long long 
  8091 ;;  f               4    0        long long 
  8092 ;;  vp              3    0        PTR void 
  8093 ;;  ct              3    0        unsigned char [3]
  8094 ;;  done            2  103[COMRAM] int 
  8095 ;;  cp              2  101[COMRAM] PTR unsigned char 
  8096 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  8097 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  8098 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  8099 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  8100 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  8101 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  8102 ;;  i               2    0        int 
  8103 ;;  c               1  107[COMRAM] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  2   75[COMRAM] int 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8113 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;Total ram usage:       33 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:   10
  8120 ;; This function calls:
  8121 ;;		_atoi
  8122 ;;		_ctoa
  8123 ;;		_dtoa
  8124 ;;		_fputc
  8125 ;;		_isdigit
  8126 ;;		_stoa
  8127 ;;		_xtoa
  8128 ;; This function is called by:
  8129 ;;		_vfprintf
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text32
  8134  000012                     __ptext32:
  8135                           	opt callstack 0
  8136  000012                     _vfpfcnvrt:
  8137                           	opt callstack 18
  8138                           
  8139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;incstack = 0
  8143  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8144  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8145  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  8146  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  8147  000022                     	if	0	;tblptru may be non-zero
  8148  000022                     	endif
  8149  000022                     	if	0	;tblptru may be non-zero
  8150  000022                     	endif
  8151  000022  0008               	tblrd		*
  8152  000024  50F5               	movf	tablat,w,c
  8153  000026  0A25               	xorlw	37
  8154  000028  A4D8               	btfss	status,2,c
  8155  00002A  D21B               	goto	l7217
  8156                           
  8157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8158  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8159  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8160  000034  2ADE               	incf	postinc2,f,c
  8161  000036  0E00               	movlw	0
  8162  000038  22DD               	addwfc	postdec2,f,c
  8163                           
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8165  00003A  0E00               	movlw	0
  8166  00003C  0100               	movlb	0	; () banked
  8167  00003E  6FDD               	movwf	(_width+1)& (0+255),b
  8168  000040  0E00               	movlw	0
  8169  000042  6FDC               	movwf	_width& (0+255),b
  8170  000044  C0DC  F0E0         	movff	_width,_flags
  8171  000048  C0DD  F0E1         	movff	_width+1,_flags+1
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8175  00004C  69DE               	setf	_prec& (0+255),b
  8176  00004E  69DF               	setf	(_prec+1)& (0+255),b
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8180  000050  0E00               	movlw	0
  8181  000052  6E69               	movwf	vfpfcnvrt@done+1,c
  8182  000054  0E00               	movlw	0
  8183  000056  D019               	goto	L15
  8184  000058                     l7113:
  8185                           
  8186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8187  000058  0100               	movlb	0	; () banked
  8188  00005A  81E0               	bsf	_flags& (0+255),0,b
  8189  00005C                     l7115:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8193  00005C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8194  000060  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8195  000064  2ADE               	incf	postinc2,f,c
  8196  000066  0E00               	movlw	0
  8197  000068  22DD               	addwfc	postdec2,f,c
  8198                           
  8199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8200  00006A  D032               	goto	l7139
  8201  00006C                     l7117:
  8202                           
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8204  00006C  0100               	movlb	0	; () banked
  8205  00006E  83E0               	bsf	_flags& (0+255),1,b
  8206  000070  D7F5               	goto	l7115
  8207  000072                     l7121:
  8208                           
  8209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8210  000072  0100               	movlb	0	; () banked
  8211  000074  85E0               	bsf	_flags& (0+255),2,b
  8212  000076  D7F2               	goto	l7115
  8213  000078                     l7125:
  8214                           
  8215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8216  000078  0100               	movlb	0	; () banked
  8217  00007A  87E0               	bsf	_flags& (0+255),3,b
  8218  00007C  D7EF               	goto	l7115
  8219  00007E                     l7129:
  8220                           
  8221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8222  00007E  0100               	movlb	0	; () banked
  8223  000080  89E0               	bsf	_flags& (0+255),4,b
  8224  000082  D7EC               	goto	l7115
  8225  000084                     l7133:
  8226                           
  8227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8228  000084  0E00               	movlw	0
  8229  000086  6E69               	movwf	vfpfcnvrt@done+1,c
  8230  000088  0E01               	movlw	1
  8231  00008A                     L15:
  8232  00008A  6E68               	movwf	vfpfcnvrt@done,c
  8233                           
  8234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8235  00008C  D021               	goto	l7139
  8236  00008E                     l7137:
  8237  00008E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8238  000092  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8239  000096  CFDE FFF6          	movff	postinc2,tblptrl
  8240  00009A  CFDD FFF7          	movff	postdec2,tblptrh
  8241  00009E                     	if	0	;tblptru may be non-zero
  8242  00009E                     	endif
  8243  00009E                     	if	0	;tblptru may be non-zero
  8244  00009E                     	endif
  8245  00009E  0008               	tblrd		*
  8246  0000A0  50F5               	movf	tablat,w,c
  8247  0000A2  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  8248  0000A4  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  8249                           
  8250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8251                           ; Switch size 1, requested type "simple"
  8252                           ; Number of cases is 1, Range of values is 0 to 0
  8253                           ; switch strategies available:
  8254                           ; Name         Instructions Cycles
  8255                           ; simple_byte            4     3 (average)
  8256                           ;	Chosen strategy is simple_byte
  8257  0000A6  5053               	movf	??_vfpfcnvrt+1,w,c
  8258  0000A8  0A00               	xorlw	0	; case 0
  8259  0000AA  A4D8               	btfss	status,2,c
  8260  0000AC  D7EB               	goto	l7133
  8261                           
  8262                           ; Switch size 1, requested type "simple"
  8263                           ; Number of cases is 5, Range of values is 32 to 48
  8264                           ; switch strategies available:
  8265                           ; Name         Instructions Cycles
  8266                           ; simple_byte           16     9 (average)
  8267                           ;	Chosen strategy is simple_byte
  8268  0000AE  5052               	movf	??_vfpfcnvrt,w,c
  8269  0000B0  0A20               	xorlw	32	; case 32
  8270  0000B2  B4D8               	btfsc	status,2,c
  8271  0000B4  D7E1               	goto	l7125
  8272  0000B6  0A03               	xorlw	3	; case 35
  8273  0000B8  B4D8               	btfsc	status,2,c
  8274  0000BA  D7E1               	goto	l7129
  8275  0000BC  0A08               	xorlw	8	; case 43
  8276  0000BE  B4D8               	btfsc	status,2,c
  8277  0000C0  D7D8               	goto	l7121
  8278  0000C2  0A06               	xorlw	6	; case 45
  8279  0000C4  B4D8               	btfsc	status,2,c
  8280  0000C6  D7C8               	goto	l7113
  8281  0000C8  0A1D               	xorlw	29	; case 48
  8282  0000CA  B4D8               	btfsc	status,2,c
  8283  0000CC  D7CF               	goto	l7117
  8284  0000CE  D7DA               	goto	l7133
  8285  0000D0                     l7139:
  8286                           
  8287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8288  0000D0  5068               	movf	vfpfcnvrt@done,w,c
  8289  0000D2  1069               	iorwf	vfpfcnvrt@done+1,w,c
  8290  0000D4  B4D8               	btfsc	status,2,c
  8291  0000D6  D7DB               	goto	l7137
  8292                           
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8294  0000D8  0100               	movlb	0	; () banked
  8295  0000DA  B1E0               	btfsc	_flags& (0+255),0,b
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8299  0000DC  93E0               	bcf	_flags& (0+255),1,b
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8303  0000DE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8304  0000E2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8305  0000E6  CFDE FFF6          	movff	postinc2,tblptrl
  8306  0000EA  CFDD FFF7          	movff	postdec2,tblptrh
  8307  0000EE                     	if	0	;tblptru may be non-zero
  8308  0000EE                     	endif
  8309  0000EE                     	if	0	;tblptru may be non-zero
  8310  0000EE                     	endif
  8311  0000EE  0008               	tblrd		*
  8312  0000F0  50F5               	movf	tablat,w,c
  8313  0000F2  0A2A               	xorlw	42
  8314  0000F4  A4D8               	btfss	status,2,c
  8315  0000F6  D023               	goto	l7151
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8319  0000F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8320  0000FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8321  000100  2ADE               	incf	postinc2,f,c
  8322  000102  0E00               	movlw	0
  8323  000104  22DD               	addwfc	postdec2,f,c
  8324                           
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8326  000106  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8327  00010A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8328  00010E  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8329  000112  0E02               	movlw	2
  8330  000114  26DE               	addwf	postinc2,f,c
  8331  000116  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8332  00011A  0E00               	movlw	0
  8333  00011C  22DD               	addwfc	postdec2,f,c
  8334  00011E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8335  000122  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8336  000126  CFDE F0DC          	movff	postinc2,_width
  8337  00012A  CFDD F0DD          	movff	postdec2,_width+1
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8341  00012E  AFDD               	btfss	(_width+1)& (0+255),7,b
  8342  000130  D03F               	goto	u8240
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8346  000132  81E0               	bsf	_flags& (0+255),0,b
  8347                           
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8349  000134  6DDC               	negf	_width& (0+255),b
  8350  000136  1FDD               	comf	(_width+1)& (0+255),f,b
  8351  000138  B0D8               	btfsc	status,0,c
  8352  00013A  2BDD               	incf	(_width+1)& (0+255),f,b
  8353  00013C  D039               	goto	u8240
  8354  00013E                     l7151:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8358  00013E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8359  000142  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8360  000146  CFDE F00D          	movff	postinc2,atoi@s
  8361  00014A  CFDD F00E          	movff	postdec2,atoi@s+1
  8362  00014E  ECFD  F012         	call	_atoi	;wreg free
  8363  000152  C00D  F0DC         	movff	?_atoi,_width
  8364  000156  C00E  F0DD         	movff	?_atoi+1,_width+1
  8365                           
  8366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8367  00015A  D007               	goto	l7155
  8368  00015C                     l7153:
  8369                           
  8370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8371  00015C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8372  000160  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8373  000164  2ADE               	incf	postinc2,f,c
  8374  000166  0E00               	movlw	0
  8375  000168  22DD               	addwfc	postdec2,f,c
  8376  00016A                     l7155:
  8377  00016A  0ED0               	movlw	208
  8378  00016C  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  8379  00016E  0EFF               	movlw	255
  8380  000170  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  8381  000172  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8382  000176  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8383  00017A  CFDE FFF6          	movff	postinc2,tblptrl
  8384  00017E  CFDD FFF7          	movff	postdec2,tblptrh
  8385  000182                     	if	0	;tblptru may be non-zero
  8386  000182                     	endif
  8387  000182                     	if	0	;tblptru may be non-zero
  8388  000182                     	endif
  8389  000182  0008               	tblrd		*
  8390  000184  50F5               	movf	tablat,w,c
  8391  000186  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  8392  000188  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  8393  00018A  5052               	movf	??_vfpfcnvrt,w,c
  8394  00018C  2654               	addwf	??_vfpfcnvrt+2,f,c
  8395  00018E  5053               	movf	??_vfpfcnvrt+1,w,c
  8396  000190  2255               	addwfc	??_vfpfcnvrt+3,f,c
  8397  000192  5055               	movf	??_vfpfcnvrt+3,w,c
  8398  000194  E106               	bnz	u8220
  8399  000196  0E0A               	movlw	10
  8400  000198  5C54               	subwf	??_vfpfcnvrt+2,w,c
  8401  00019A  B0D8               	btfsc	status,0,c
  8402  00019C  D002               	goto	u8220
  8403  00019E  0E01               	movlw	1
  8404  0001A0  D001               	goto	u8230
  8405  0001A2                     u8220:
  8406  0001A2  0E00               	movlw	0
  8407  0001A4                     u8230:
  8408  0001A4  6E6A               	movwf	_vfpfcnvrt$1341,c
  8409  0001A6  6A6B               	clrf	_vfpfcnvrt$1341+1,c
  8410  0001A8  506A               	movf	_vfpfcnvrt$1341,w,c
  8411  0001AA  106B               	iorwf	_vfpfcnvrt$1341+1,w,c
  8412  0001AC  A4D8               	btfss	status,2,c
  8413  0001AE  D7D6               	goto	l7153
  8414  0001B0                     u8240:
  8415                           
  8416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8417  0001B0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8418  0001B4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8419  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  8420  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  8421  0001C0                     	if	0	;tblptru may be non-zero
  8422  0001C0                     	endif
  8423  0001C0                     	if	0	;tblptru may be non-zero
  8424  0001C0                     	endif
  8425  0001C0  0008               	tblrd		*
  8426  0001C2  50F5               	movf	tablat,w,c
  8427  0001C4  0A63               	xorlw	99
  8428  0001C6  A4D8               	btfss	status,2,c
  8429  0001C8  D026               	goto	l7169
  8430                           
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8432  0001CA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8433  0001CE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8434  0001D2  2ADE               	incf	postinc2,f,c
  8435  0001D4  0E00               	movlw	0
  8436  0001D6  22DD               	addwfc	postdec2,f,c
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8439  0001D8  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8440  0001DC  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8441  0001E0  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8442  0001E4  0E02               	movlw	2
  8443  0001E6  26DE               	addwf	postinc2,f,c
  8444  0001E8  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8445  0001EC  0E00               	movlw	0
  8446  0001EE  22DD               	addwfc	postdec2,f,c
  8447  0001F0  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8448  0001F4  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8449  0001F8  50DF               	movf	indf2,w,c
  8450  0001FA  6E6C               	movwf	vfpfcnvrt@c,c
  8451                           
  8452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8453  0001FC  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  8454  000200  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8455  000204  C06C  F027         	movff	vfpfcnvrt@c,ctoa@c
  8456  000208  ECAC  F017         	call	_ctoa	;wreg free
  8457  00020C  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  8458  000210  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8459  000214  0012               	return	
  8460  000216                     l7169:
  8461                           
  8462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8463  000216  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8464  00021A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8465  00021E  CFDE FFF6          	movff	postinc2,tblptrl
  8466  000222  CFDD FFF7          	movff	postdec2,tblptrh
  8467  000226                     	if	0	;tblptru may be non-zero
  8468  000226                     	endif
  8469  000226                     	if	0	;tblptru may be non-zero
  8470  000226                     	endif
  8471  000226  0008               	tblrd		*
  8472  000228  50F5               	movf	tablat,w,c
  8473  00022A  0A64               	xorlw	100
  8474  00022C  B4D8               	btfsc	status,2,c
  8475  00022E  D00D               	goto	u8270
  8476  000230  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8477  000234  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8478  000238  CFDE FFF6          	movff	postinc2,tblptrl
  8479  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  8480  000240                     	if	0	;tblptru may be non-zero
  8481  000240                     	endif
  8482  000240                     	if	0	;tblptru may be non-zero
  8483  000240                     	endif
  8484  000240  0008               	tblrd		*
  8485  000242  50F5               	movf	tablat,w,c
  8486  000244  0A69               	xorlw	105
  8487  000246  A4D8               	btfss	status,2,c
  8488  000248  D03F               	goto	l7179
  8489  00024A                     u8270:
  8490                           
  8491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8492  00024A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8493  00024E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8494  000252  2ADE               	incf	postinc2,f,c
  8495  000254  0E00               	movlw	0
  8496  000256  22DD               	addwfc	postdec2,f,c
  8497                           
  8498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8499  000258  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8500  00025C  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8501  000260  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8502  000264  0E02               	movlw	2
  8503  000266  26DE               	addwf	postinc2,f,c
  8504  000268  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8505  00026C  0E00               	movlw	0
  8506  00026E  22DD               	addwfc	postdec2,f,c
  8507  000270  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8508  000274  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8509  000278  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  8510  00027C  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  8511  000280  0E00               	movlw	0
  8512  000282  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  8513  000284  0EFF               	movlw	-1
  8514  000286  6E58               	movwf	vfpfcnvrt@ll+2,c
  8515  000288  6E59               	movwf	vfpfcnvrt@ll+3,c
  8516  00028A  6E5A               	movwf	vfpfcnvrt@ll+4,c
  8517  00028C  6E5B               	movwf	vfpfcnvrt@ll+5,c
  8518  00028E  6E5C               	movwf	vfpfcnvrt@ll+6,c
  8519  000290  6E5D               	movwf	vfpfcnvrt@ll+7,c
  8520                           
  8521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8522  000292  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  8523  000296  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8524  00029A  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  8525  00029E  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8526  0002A2  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8527  0002A6  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8528  0002AA  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8529  0002AE  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8530  0002B2  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8531  0002B6  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8532  0002BA  ECD9  F00D         	call	_dtoa	;wreg free
  8533  0002BE  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  8534  0002C2  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8535  0002C6  0012               	return	
  8536  0002C8                     l7179:
  8537                           
  8538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  8539  0002C8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8540  0002CC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8541  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  8542  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  8543  0002D8                     	if	0	;tblptru may be non-zero
  8544  0002D8                     	endif
  8545  0002D8                     	if	0	;tblptru may be non-zero
  8546  0002D8                     	endif
  8547  0002D8  0008               	tblrd		*
  8548  0002DA  50F5               	movf	tablat,w,c
  8549  0002DC  0A73               	xorlw	115
  8550  0002DE  A4D8               	btfss	status,2,c
  8551  0002E0  D02A               	goto	l7187
  8552                           
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  8554  0002E2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8555  0002E6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8556  0002EA  2ADE               	incf	postinc2,f,c
  8557  0002EC  0E00               	movlw	0
  8558  0002EE  22DD               	addwfc	postdec2,f,c
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8561  0002F0  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8562  0002F4  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8563  0002F8  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8564  0002FC  0E02               	movlw	2
  8565  0002FE  26DE               	addwf	postinc2,f,c
  8566  000300  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8567  000304  0E00               	movlw	0
  8568  000306  22DD               	addwfc	postdec2,f,c
  8569  000308  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8570  00030C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8571  000310  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  8572  000314  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  8575  000318  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  8576  00031C  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8577  000320  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  8578  000324  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  8579  000328  ECBB  F011         	call	_stoa	;wreg free
  8580  00032C  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  8581  000330  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  8582  000334  0012               	return	
  8583  000336                     l7187:
  8584                           
  8585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8586  000336  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8587  00033A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8588  00033E  CFDE FFF6          	movff	postinc2,tblptrl
  8589  000342  CFDD FFF7          	movff	postdec2,tblptrh
  8590  000346                     	if	0	;tblptru may be non-zero
  8591  000346                     	endif
  8592  000346                     	if	0	;tblptru may be non-zero
  8593  000346                     	endif
  8594  000346  0008               	tblrd		*
  8595  000348  50F5               	movf	tablat,w,c
  8596  00034A  0A78               	xorlw	120
  8597  00034C  B4D8               	btfsc	status,2,c
  8598  00034E  D00D               	goto	u8300
  8599  000350  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8600  000354  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8601  000358  CFDE FFF6          	movff	postinc2,tblptrl
  8602  00035C  CFDD FFF7          	movff	postdec2,tblptrh
  8603  000360                     	if	0	;tblptru may be non-zero
  8604  000360                     	endif
  8605  000360                     	if	0	;tblptru may be non-zero
  8606  000360                     	endif
  8607  000360  0008               	tblrd		*
  8608  000362  50F5               	movf	tablat,w,c
  8609  000364  0A58               	xorlw	88
  8610  000366  A4D8               	btfss	status,2,c
  8611  000368  D04D               	goto	l7201
  8612  00036A                     u8300:
  8613                           
  8614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8615  00036A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8616  00036E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8617  000372  CFDE FFF6          	movff	postinc2,tblptrl
  8618  000376  CFDD FFF7          	movff	postdec2,tblptrh
  8619  00037A                     	if	0	;tblptru may be non-zero
  8620  00037A                     	endif
  8621  00037A                     	if	0	;tblptru may be non-zero
  8622  00037A                     	endif
  8623  00037A  0008               	tblrd		*
  8624  00037C  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  8625                           
  8626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8627  000380  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8628  000384  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8629  000388  2ADE               	incf	postinc2,f,c
  8630  00038A  0E00               	movlw	0
  8631  00038C  22DD               	addwfc	postdec2,f,c
  8632                           
  8633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8634  00038E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8635  000392  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8636  000396  CFDF F052          	movff	indf2,??_vfpfcnvrt
  8637  00039A  0E02               	movlw	2
  8638  00039C  26DE               	addwf	postinc2,f,c
  8639  00039E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  8640  0003A2  0E00               	movlw	0
  8641  0003A4  22DD               	addwfc	postdec2,f,c
  8642  0003A6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8643  0003AA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8644  0003AE  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  8645  0003B2  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  8646  0003B6  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8647  0003BA  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8648  0003BE  6A60               	clrf	vfpfcnvrt@llu+2,c
  8649  0003C0  6A61               	clrf	vfpfcnvrt@llu+3,c
  8650  0003C2  6A62               	clrf	vfpfcnvrt@llu+4,c
  8651  0003C4  6A63               	clrf	vfpfcnvrt@llu+5,c
  8652  0003C6  6A64               	clrf	vfpfcnvrt@llu+6,c
  8653  0003C8  6A65               	clrf	vfpfcnvrt@llu+7,c
  8654                           
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8656  0003CA  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  8657  0003CE  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8658  0003D2  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  8659  0003D6  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8660  0003DA  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8661  0003DE  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8662  0003E2  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8663  0003E6  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8664  0003EA  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8665  0003EE  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8666  0003F2  C06C  F02F         	movff	vfpfcnvrt@c,xtoa@x
  8667  0003F6  ECFD  F00E         	call	_xtoa	;wreg free
  8668  0003FA  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  8669  0003FE  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8670  000402  0012               	return	
  8671  000404                     l7201:
  8672                           
  8673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8674  000404  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8675  000408  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8676  00040C  CFDE FFF6          	movff	postinc2,tblptrl
  8677  000410  CFDD FFF7          	movff	postdec2,tblptrh
  8678  000414                     	if	0	;tblptru may be non-zero
  8679  000414                     	endif
  8680  000414                     	if	0	;tblptru may be non-zero
  8681  000414                     	endif
  8682  000414  0008               	tblrd		*
  8683  000416  50F5               	movf	tablat,w,c
  8684  000418  0A25               	xorlw	37
  8685  00041A  A4D8               	btfss	status,2,c
  8686  00041C  D016               	goto	l7211
  8687                           
  8688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8689  00041E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8690  000422  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8691  000426  2ADE               	incf	postinc2,f,c
  8692  000428  0E00               	movlw	0
  8693  00042A  22DD               	addwfc	postdec2,f,c
  8694                           
  8695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8696  00042C  0E00               	movlw	0
  8697  00042E  6E0B               	movwf	fputc@c+1,c
  8698  000430  0E25               	movlw	37
  8699  000432  6E0A               	movwf	fputc@c,c
  8700  000434  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  8701  000438  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8702  00043C  ECB5  F016         	call	_fputc	;wreg free
  8703  000440                     l7207:
  8704                           
  8705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8706  000440  0E00               	movlw	0
  8707  000442  6E4D               	movwf	?_vfpfcnvrt+1,c
  8708  000444  0E01               	movlw	1
  8709  000446  6E4C               	movwf	?_vfpfcnvrt,c
  8710  000448  0012               	return	
  8711  00044A                     l7211:
  8712                           
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8714  00044A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8715  00044E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8716  000452  2ADE               	incf	postinc2,f,c
  8717  000454  0E00               	movlw	0
  8718  000456  22DD               	addwfc	postdec2,f,c
  8719                           
  8720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8721  000458  0E00               	movlw	0
  8722  00045A  6E4D               	movwf	?_vfpfcnvrt+1,c
  8723  00045C  0E00               	movlw	0
  8724  00045E  6E4C               	movwf	?_vfpfcnvrt,c
  8725  000460  0012               	return	
  8726  000462                     l7217:
  8727                           
  8728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8729  000462  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8730  000466  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8731  00046A  CFDE FFF6          	movff	postinc2,tblptrl
  8732  00046E  CFDD FFF7          	movff	postdec2,tblptrh
  8733  000472                     	if	0	;tblptru may be non-zero
  8734  000472                     	endif
  8735  000472                     	if	0	;tblptru may be non-zero
  8736  000472                     	endif
  8737  000472  0008               	tblrd		*
  8738  000474  50F5               	movf	tablat,w,c
  8739  000476  6E0A               	movwf	fputc@c,c
  8740  000478  6A0B               	clrf	fputc@c+1,c
  8741  00047A  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  8742  00047E  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8743  000482  ECB5  F016         	call	_fputc	;wreg free
  8744                           
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8746  000486  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8747  00048A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8748  00048E  2ADE               	incf	postinc2,f,c
  8749  000490  0E00               	movlw	0
  8750  000492  22DD               	addwfc	postdec2,f,c
  8751  000494  D7D5               	goto	l7207
  8752  000496                     __end_of_vfpfcnvrt:
  8753                           	opt callstack 0
  8754                           
  8755 ;; *************** function _xtoa *****************
  8756 ;; Defined at:
  8757 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  8760 ;;		 -> NULL(0), 
  8761 ;;  d               8   38[COMRAM] unsigned long long 
  8762 ;;  x               1   46[COMRAM] unsigned char 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  n               8   63[COMRAM] unsigned long long 
  8765 ;;  c               2   73[COMRAM] int 
  8766 ;;  i               2   71[COMRAM] int 
  8767 ;;  w               2   61[COMRAM] int 
  8768 ;;  p               2   59[COMRAM] int 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  2   36[COMRAM] int 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:       39 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    9
  8785 ;; This function calls:
  8786 ;;		_isalpha
  8787 ;;		_isupper
  8788 ;;		_pad
  8789 ;;		_toupper
  8790 ;; This function is called by:
  8791 ;;		_vfpfcnvrt
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text33
  8796  001DFA                     __ptext33:
  8797                           	opt callstack 0
  8798  001DFA                     _xtoa:
  8799                           	opt callstack 18
  8800                           
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8802                           
  8803                           ;incstack = 0
  8804  001DFA  0100               	movlb	0	; () banked
  8805  001DFC  AFDF               	btfss	(_prec+1)& (0+255),7,b
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8809  001DFE  93E0               	bcf	_flags& (0+255),1,b
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8813  001E00  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  8814  001E02  D005               	goto	u7200
  8815  001E04  51DF               	movf	(_prec+1)& (0+255),w,b
  8816  001E06  E108               	bnz	l595
  8817  001E08  05DE               	decf	_prec& (0+255),w,b
  8818  001E0A  B0D8               	btfsc	status,0,c
  8819  001E0C  D005               	goto	l595
  8820  001E0E                     u7200:
  8821                           
  8822                           ; BSR set to: 0
  8823  001E0E  0E00               	movlw	0
  8824  001E10  6E3D               	movwf	xtoa@p+1,c
  8825  001E12  0E01               	movlw	1
  8826  001E14  6E3C               	movwf	xtoa@p,c
  8827  001E16  D004               	goto	l597
  8828  001E18                     l595:
  8829                           
  8830                           ; BSR set to: 0
  8831  001E18  C0DE  F03C         	movff	_prec,xtoa@p
  8832  001E1C  C0DF  F03D         	movff	_prec+1,xtoa@p+1
  8833  001E20                     l597:
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8837  001E20  C0DC  F03E         	movff	_width,xtoa@w
  8838  001E24  C0DD  F03F         	movff	_width+1,xtoa@w+1
  8839                           
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8841  001E28  A9E0               	btfss	_flags& (0+255),4,b
  8842  001E2A  D004               	goto	l6595
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8846  001E2C  0EFE               	movlw	254
  8847  001E2E  263E               	addwf	xtoa@w,f,c
  8848  001E30  0EFF               	movlw	255
  8849  001E32  223F               	addwfc	xtoa@w+1,f,c
  8850  001E34                     l6595:
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8854  001E34  C027  F040         	movff	xtoa@d,xtoa@n
  8855  001E38  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  8856  001E3C  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  8857  001E40  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  8858  001E44  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  8859  001E48  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  8860  001E4C  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  8861  001E50  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8865  001E54  0E00               	movlw	0
  8866  001E56  6E49               	movwf	xtoa@i+1,c
  8867  001E58  0E1F               	movlw	31
  8868  001E5A  6E48               	movwf	xtoa@i,c
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8872  001E5C  0E00               	movlw	0
  8873  001E5E  0101               	movlb	1	; () banked
  8874  001E60  6F1F               	movwf	(_dbuf+31)& (0+255),b
  8875                           
  8876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8877  001E62  D093               	goto	l6631
  8878  001E64                     l6601:
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8881  001E64  0648               	decf	xtoa@i,f,c
  8882  001E66  A0D8               	btfss	status,0,c
  8883  001E68  0649               	decf	xtoa@i+1,f,c
  8884                           
  8885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8886  001E6A  0E0F               	movlw	15
  8887  001E6C  1440               	andwf	xtoa@n,w,c
  8888  001E6E  6E4A               	movwf	xtoa@c,c
  8889  001E70  6A4B               	clrf	xtoa@c+1,c
  8890                           
  8891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8892  001E72  BE4B               	btfsc	xtoa@c+1,7,c
  8893  001E74  D008               	goto	l6609
  8894  001E76  504B               	movf	xtoa@c+1,w,c
  8895  001E78  E104               	bnz	u7220
  8896  001E7A  0E0A               	movlw	10
  8897  001E7C  5C4A               	subwf	xtoa@c,w,c
  8898  001E7E  A0D8               	btfss	status,0,c
  8899  001E80  D002               	goto	l6609
  8900  001E82                     u7220:
  8901  001E82  0E57               	movlw	87
  8902  001E84  D001               	goto	L16
  8903  001E86                     l6609:
  8904  001E86  0E30               	movlw	48
  8905  001E88                     L16:
  8906  001E88  244A               	addwf	xtoa@c,w,c
  8907  001E8A  6E4A               	movwf	xtoa@c,c
  8908  001E8C  0E00               	movlw	0
  8909  001E8E  204B               	addwfc	xtoa@c+1,w,c
  8910  001E90  6E4B               	movwf	xtoa@c+1,c
  8911                           
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8913  001E92  0EBF               	movlw	191
  8914  001E94  6E30               	movwf	??_xtoa& (0+255),c
  8915  001E96  0EFF               	movlw	255
  8916  001E98  6E31               	movwf	(??_xtoa+1)& (0+255),c
  8917  001E9A  502F               	movf	xtoa@x,w,c
  8918  001E9C  6E32               	movwf	(??_xtoa+2)& (0+255),c
  8919  001E9E  6A33               	clrf	(??_xtoa+3)& (0+255),c
  8920  001EA0  5030               	movf	??_xtoa,w,c
  8921  001EA2  2632               	addwf	??_xtoa+2,f,c
  8922  001EA4  5031               	movf	??_xtoa+1,w,c
  8923  001EA6  2233               	addwfc	??_xtoa+3,f,c
  8924  001EA8  5033               	movf	??_xtoa+3,w,c
  8925  001EAA  E106               	bnz	u7230
  8926  001EAC  0E1A               	movlw	26
  8927  001EAE  5C32               	subwf	??_xtoa+2,w,c
  8928  001EB0  B0D8               	btfsc	status,0,c
  8929  001EB2  D002               	goto	u7230
  8930  001EB4  0E01               	movlw	1
  8931  001EB6  D001               	goto	u7240
  8932  001EB8                     u7230:
  8933  001EB8  0E00               	movlw	0
  8934  001EBA                     u7240:
  8935  001EBA  6E38               	movwf	_xtoa$1326,c
  8936  001EBC  6A39               	clrf	_xtoa$1326+1,c
  8937  001EBE  5038               	movf	_xtoa$1326,w,c
  8938  001EC0  1039               	iorwf	_xtoa$1326+1,w,c
  8939  001EC2  B4D8               	btfsc	status,2,c
  8940  001EC4  D027               	goto	l6623
  8941  001EC6  0E9F               	movlw	159
  8942  001EC8  6E30               	movwf	??_xtoa& (0+255),c
  8943  001ECA  0EFF               	movlw	255
  8944  001ECC  6E31               	movwf	(??_xtoa+1)& (0+255),c
  8945  001ECE  0E20               	movlw	32
  8946  001ED0  104A               	iorwf	xtoa@c,w,c
  8947  001ED2  6E32               	movwf	(??_xtoa+2)& (0+255),c
  8948  001ED4  0E00               	movlw	0
  8949  001ED6  104B               	iorwf	xtoa@c+1,w,c
  8950  001ED8  6E33               	movwf	(??_xtoa+3)& (0+255),c
  8951  001EDA  5030               	movf	??_xtoa,w,c
  8952  001EDC  2632               	addwf	??_xtoa+2,f,c
  8953  001EDE  5031               	movf	??_xtoa+1,w,c
  8954  001EE0  2233               	addwfc	??_xtoa+3,f,c
  8955  001EE2  5033               	movf	??_xtoa+3,w,c
  8956  001EE4  E106               	bnz	u7260
  8957  001EE6  0E1A               	movlw	26
  8958  001EE8  5C32               	subwf	??_xtoa+2,w,c
  8959  001EEA  B0D8               	btfsc	status,0,c
  8960  001EEC  D002               	goto	u7260
  8961  001EEE  0E01               	movlw	1
  8962  001EF0  D001               	goto	u7270
  8963  001EF2                     u7260:
  8964  001EF2  0E00               	movlw	0
  8965  001EF4                     u7270:
  8966  001EF4  6E3A               	movwf	_xtoa$1327,c
  8967  001EF6  6A3B               	clrf	_xtoa$1327+1,c
  8968  001EF8  503A               	movf	_xtoa$1327,w,c
  8969  001EFA  103B               	iorwf	_xtoa$1327+1,w,c
  8970  001EFC  B4D8               	btfsc	status,2,c
  8971  001EFE  D00A               	goto	l6623
  8972                           
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8974  001F00  C04A  F00C         	movff	xtoa@c,toupper@c
  8975  001F04  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
  8976  001F08  ECFA  F017         	call	_toupper	;wreg free
  8977  001F0C  C00C  F04A         	movff	?_toupper,xtoa@c
  8978  001F10  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
  8979  001F14                     l6623:
  8980                           
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8982  001F14  0E00               	movlw	low _dbuf
  8983  001F16  2448               	addwf	xtoa@i,w,c
  8984  001F18  6ED9               	movwf	fsr2l,c
  8985  001F1A  0E01               	movlw	high _dbuf
  8986  001F1C  2049               	addwfc	xtoa@i+1,w,c
  8987  001F1E  6EDA               	movwf	fsr2h,c
  8988  001F20  C04A  FFDF         	movff	xtoa@c,indf2
  8989                           
  8990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8991  001F24  063C               	decf	xtoa@p,f,c
  8992  001F26  A0D8               	btfss	status,0,c
  8993  001F28  063D               	decf	xtoa@p+1,f,c
  8994                           
  8995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8996  001F2A  063E               	decf	xtoa@w,f,c
  8997  001F2C  A0D8               	btfss	status,0,c
  8998  001F2E  063F               	decf	xtoa@w+1,f,c
  8999                           
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9001  001F30  C040  F030         	movff	xtoa@n,??_xtoa
  9002  001F34  C041  F031         	movff	xtoa@n+1,??_xtoa+1
  9003  001F38  C042  F032         	movff	xtoa@n+2,??_xtoa+2
  9004  001F3C  C043  F033         	movff	xtoa@n+3,??_xtoa+3
  9005  001F40  C044  F034         	movff	xtoa@n+4,??_xtoa+4
  9006  001F44  C045  F035         	movff	xtoa@n+5,??_xtoa+5
  9007  001F48  C046  F036         	movff	xtoa@n+6,??_xtoa+6
  9008  001F4C  C047  F037         	movff	xtoa@n+7,??_xtoa+7
  9009  001F50  0E05               	movlw	5
  9010  001F52  D009               	goto	u7290
  9011  001F54                     u7295:
  9012  001F54  90D8               	bcf	status,0,c
  9013  001F56  3237               	rrcf	??_xtoa+7,f,c
  9014  001F58  3236               	rrcf	??_xtoa+6,f,c
  9015  001F5A  3235               	rrcf	??_xtoa+5,f,c
  9016  001F5C  3234               	rrcf	??_xtoa+4,f,c
  9017  001F5E  3233               	rrcf	??_xtoa+3,f,c
  9018  001F60  3232               	rrcf	??_xtoa+2,f,c
  9019  001F62  3231               	rrcf	??_xtoa+1,f,c
  9020  001F64  3230               	rrcf	??_xtoa,f,c
  9021  001F66                     u7290:
  9022  001F66  2EE8               	decfsz	wreg,f,c
  9023  001F68  D7F5               	goto	u7295
  9024  001F6A  C030  F040         	movff	??_xtoa,xtoa@n
  9025  001F6E  C031  F041         	movff	??_xtoa+1,xtoa@n+1
  9026  001F72  C032  F042         	movff	??_xtoa+2,xtoa@n+2
  9027  001F76  C033  F043         	movff	??_xtoa+3,xtoa@n+3
  9028  001F7A  C034  F044         	movff	??_xtoa+4,xtoa@n+4
  9029  001F7E  C035  F045         	movff	??_xtoa+5,xtoa@n+5
  9030  001F82  C036  F046         	movff	??_xtoa+6,xtoa@n+6
  9031  001F86  C037  F047         	movff	??_xtoa+7,xtoa@n+7
  9032  001F8A                     l6631:
  9033                           
  9034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9035  001F8A  BE49               	btfsc	xtoa@i+1,7,c
  9036  001F8C  D021               	goto	u7340
  9037  001F8E  5049               	movf	xtoa@i+1,w,c
  9038  001F90  E104               	bnz	u7300
  9039  001F92  0E02               	movlw	2
  9040  001F94  5C48               	subwf	xtoa@i,w,c
  9041  001F96  A0D8               	btfss	status,0,c
  9042  001F98  D01B               	goto	u7340
  9043  001F9A                     u7300:
  9044  001F9A  5040               	movf	xtoa@n,w,c
  9045  001F9C  1041               	iorwf	xtoa@n+1,w,c
  9046  001F9E  1042               	iorwf	xtoa@n+2,w,c
  9047  001FA0  1043               	iorwf	xtoa@n+3,w,c
  9048  001FA2  1044               	iorwf	xtoa@n+4,w,c
  9049  001FA4  1045               	iorwf	xtoa@n+5,w,c
  9050  001FA6  1046               	iorwf	xtoa@n+6,w,c
  9051  001FA8  1047               	iorwf	xtoa@n+7,w,c
  9052  001FAA  A4D8               	btfss	status,2,c
  9053  001FAC  D75B               	goto	l6601
  9054  001FAE  BE3D               	btfsc	xtoa@p+1,7,c
  9055  001FB0  D005               	goto	u7320
  9056  001FB2  503D               	movf	xtoa@p+1,w,c
  9057  001FB4  E102               	bnz	u7321
  9058  001FB6  043C               	decf	xtoa@p,w,c
  9059  001FB8  B0D8               	btfsc	status,0,c
  9060  001FBA                     u7321:
  9061  001FBA  D754               	goto	l6601
  9062  001FBC                     u7320:
  9063  001FBC  BE3F               	btfsc	xtoa@w+1,7,c
  9064  001FBE  D008               	goto	u7340
  9065  001FC0  503F               	movf	xtoa@w+1,w,c
  9066  001FC2  E103               	bnz	u7330
  9067  001FC4  043E               	decf	xtoa@w,w,c
  9068  001FC6  A0D8               	btfss	status,0,c
  9069  001FC8  D003               	goto	u7340
  9070  001FCA                     u7330:
  9071  001FCA  0100               	movlb	0	; () banked
  9072  001FCC  B3E0               	btfsc	_flags& (0+255),1,b
  9073  001FCE  D74A               	goto	l6601
  9074  001FD0                     u7340:
  9075                           
  9076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9077  001FD0  0100               	movlb	0	; () banked
  9078  001FD2  A9E0               	btfss	_flags& (0+255),4,b
  9079  001FD4  D016               	goto	l6647
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9083  001FD6  0648               	decf	xtoa@i,f,c
  9084  001FD8  A0D8               	btfss	status,0,c
  9085  001FDA  0649               	decf	xtoa@i+1,f,c
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9089  001FDC  0E00               	movlw	low _dbuf
  9090  001FDE  2448               	addwf	xtoa@i,w,c
  9091  001FE0  6ED9               	movwf	fsr2l,c
  9092  001FE2  0E01               	movlw	high _dbuf
  9093  001FE4  2049               	addwfc	xtoa@i+1,w,c
  9094  001FE6  6EDA               	movwf	fsr2h,c
  9095  001FE8  C02F  FFDF         	movff	xtoa@x,indf2
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9099  001FEC  0648               	decf	xtoa@i,f,c
  9100  001FEE  A0D8               	btfss	status,0,c
  9101  001FF0  0649               	decf	xtoa@i+1,f,c
  9102                           
  9103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9104  001FF2  0E00               	movlw	low _dbuf
  9105  001FF4  2448               	addwf	xtoa@i,w,c
  9106  001FF6  6ED9               	movwf	fsr2l,c
  9107  001FF8  0E01               	movlw	high _dbuf
  9108  001FFA  2049               	addwfc	xtoa@i+1,w,c
  9109  001FFC  6EDA               	movwf	fsr2h,c
  9110  001FFE  0E30               	movlw	48
  9111  002000  6EDF               	movwf	indf2,c
  9112  002002                     l6647:
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9116  002002  C025  F01A         	movff	xtoa@fp,pad@fp
  9117  002006  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
  9118  00200A  0E00               	movlw	low _dbuf
  9119  00200C  2448               	addwf	xtoa@i,w,c
  9120  00200E  6E1C               	movwf	pad@buf,c
  9121  002010  0E01               	movlw	high _dbuf
  9122  002012  2049               	addwfc	xtoa@i+1,w,c
  9123  002014  6E1D               	movwf	pad@buf+1,c
  9124  002016  C03E  F01E         	movff	xtoa@w,pad@p
  9125  00201A  C03F  F01F         	movff	xtoa@w+1,pad@p+1
  9126  00201E  EC6A  F015         	call	_pad	;wreg free
  9127  002022  C01A  F025         	movff	?_pad,?_xtoa
  9128  002026  C01B  F026         	movff	?_pad+1,?_xtoa+1
  9129  00202A  0012               	return		;funcret
  9130  00202C                     __end_of_xtoa:
  9131                           	opt callstack 0
  9132                           
  9133 ;; *************** function _toupper *****************
  9134 ;; Defined at:
  9135 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  c               2   11[COMRAM] int 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  2   11[COMRAM] int 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;Total ram usage:        8 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    3
  9156 ;; This function calls:
  9157 ;;		_islower
  9158 ;; This function is called by:
  9159 ;;		_xtoa
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text34
  9164  002FF4                     __ptext34:
  9165                           	opt callstack 0
  9166  002FF4                     _toupper:
  9167                           	opt callstack 23
  9168                           
  9169                           ;incstack = 0
  9170  002FF4  0E9F               	movlw	159
  9171  002FF6  6E0E               	movwf	??_toupper& (0+255),c
  9172  002FF8  0EFF               	movlw	255
  9173  002FFA  6E0F               	movwf	(??_toupper+1)& (0+255),c
  9174  002FFC  C00C  F010         	movff	toupper@c,??_toupper+2
  9175  003000  C00D  F011         	movff	toupper@c+1,??_toupper+3
  9176  003004  500E               	movf	??_toupper,w,c
  9177  003006  2610               	addwf	??_toupper+2,f,c
  9178  003008  500F               	movf	??_toupper+1,w,c
  9179  00300A  2211               	addwfc	??_toupper+3,f,c
  9180  00300C  5011               	movf	??_toupper+3,w,c
  9181  00300E  E106               	bnz	u6730
  9182  003010  0E1A               	movlw	26
  9183  003012  5C10               	subwf	??_toupper+2,w,c
  9184  003014  B0D8               	btfsc	status,0,c
  9185  003016  D002               	goto	u6730
  9186  003018  0E01               	movlw	1
  9187  00301A  D001               	goto	u6740
  9188  00301C                     u6730:
  9189  00301C  0E00               	movlw	0
  9190  00301E                     u6740:
  9191  00301E  6E12               	movwf	_toupper$1892,c
  9192  003020  6A13               	clrf	_toupper$1892+1,c
  9193  003022  5012               	movf	_toupper$1892,w,c
  9194  003024  1013               	iorwf	_toupper$1892+1,w,c
  9195  003026  B4D8               	btfsc	status,2,c
  9196  003028  D005               	goto	l1437
  9197  00302A  0E5F               	movlw	95
  9198  00302C  140C               	andwf	toupper@c,w,c
  9199  00302E  6E0C               	movwf	?_toupper,c
  9200  003030  6A0D               	clrf	?_toupper+1,c
  9201  003032  0012               	return	
  9202  003034                     l1437:
  9203  003034  C00C  F00C         	movff	toupper@c,?_toupper
  9204  003038  C00D  F00D         	movff	toupper@c+1,?_toupper+1
  9205  00303C  0012               	return		;funcret
  9206  00303E                     __end_of_toupper:
  9207                           	opt callstack 0
  9208                           
  9209 ;; *************** function _islower *****************
  9210 ;; Defined at:
  9211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  c               2    5[COMRAM] int 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  2    5[COMRAM] int 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2, status,0
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;Total ram usage:        6 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    2
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_toupper
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text35
  9240  0032A6                     __ptext35:
  9241                           	opt callstack 0
  9242  0032A6                     _islower:
  9243                           	opt callstack 23
  9244                           
  9245                           ;incstack = 0
  9246  0032A6  0E9F               	movlw	159
  9247  0032A8  6E08               	movwf	??_islower& (0+255),c
  9248  0032AA  0EFF               	movlw	255
  9249  0032AC  6E09               	movwf	(??_islower+1)& (0+255),c
  9250  0032AE  C006  F00A         	movff	islower@c,??_islower+2
  9251  0032B2  C007  F00B         	movff	islower@c+1,??_islower+3
  9252  0032B6  5008               	movf	??_islower,w,c
  9253  0032B8  260A               	addwf	??_islower+2,f,c
  9254  0032BA  5009               	movf	??_islower+1,w,c
  9255  0032BC  220B               	addwfc	??_islower+3,f,c
  9256  0032BE  500B               	movf	??_islower+3,w,c
  9257  0032C0  E106               	bnz	u6620
  9258  0032C2  0E1A               	movlw	26
  9259  0032C4  5C0A               	subwf	??_islower+2,w,c
  9260  0032C6  B0D8               	btfsc	status,0,c
  9261  0032C8  D002               	goto	u6620
  9262  0032CA  0E01               	movlw	1
  9263  0032CC  D001               	goto	u6630
  9264  0032CE                     u6620:
  9265  0032CE  0E00               	movlw	0
  9266  0032D0                     u6630:
  9267  0032D0  6E06               	movwf	?_islower,c
  9268  0032D2  6A07               	clrf	?_islower+1,c
  9269  0032D4  0012               	return		;funcret
  9270  0032D6                     __end_of_islower:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function _isupper *****************
  9274 ;; Defined at:
  9275 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  c               2    5[COMRAM] int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  2    5[COMRAM] int 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;Total ram usage:        6 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    2
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_xtoa
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text36
  9304  0032D6                     __ptext36:
  9305                           	opt callstack 0
  9306  0032D6                     _isupper:
  9307                           	opt callstack 24
  9308                           
  9309                           ;incstack = 0
  9310  0032D6  0EBF               	movlw	191
  9311  0032D8  6E08               	movwf	??_isupper& (0+255),c
  9312  0032DA  0EFF               	movlw	255
  9313  0032DC  6E09               	movwf	(??_isupper+1)& (0+255),c
  9314  0032DE  C006  F00A         	movff	isupper@c,??_isupper+2
  9315  0032E2  C007  F00B         	movff	isupper@c+1,??_isupper+3
  9316  0032E6  5008               	movf	??_isupper,w,c
  9317  0032E8  260A               	addwf	??_isupper+2,f,c
  9318  0032EA  5009               	movf	??_isupper+1,w,c
  9319  0032EC  220B               	addwfc	??_isupper+3,f,c
  9320  0032EE  500B               	movf	??_isupper+3,w,c
  9321  0032F0  E106               	bnz	u6690
  9322  0032F2  0E1A               	movlw	26
  9323  0032F4  5C0A               	subwf	??_isupper+2,w,c
  9324  0032F6  B0D8               	btfsc	status,0,c
  9325  0032F8  D002               	goto	u6690
  9326  0032FA  0E01               	movlw	1
  9327  0032FC  D001               	goto	u6700
  9328  0032FE                     u6690:
  9329  0032FE  0E00               	movlw	0
  9330  003300                     u6700:
  9331  003300  6E06               	movwf	?_isupper,c
  9332  003302  6A07               	clrf	?_isupper+1,c
  9333  003304  0012               	return		;funcret
  9334  003306                     __end_of_isupper:
  9335                           	opt callstack 0
  9336                           
  9337 ;; *************** function _isalpha *****************
  9338 ;; Defined at:
  9339 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  c               2    5[COMRAM] int 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;		None
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  2    5[COMRAM] int 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;Total ram usage:        6 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    2
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_xtoa
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text37
  9368  003240                     __ptext37:
  9369                           	opt callstack 0
  9370  003240                     _isalpha:
  9371                           	opt callstack 24
  9372                           
  9373                           ;incstack = 0
  9374  003240  0E9F               	movlw	159
  9375  003242  6E08               	movwf	??_isalpha& (0+255),c
  9376  003244  0EFF               	movlw	255
  9377  003246  6E09               	movwf	(??_isalpha+1)& (0+255),c
  9378  003248  0E20               	movlw	32
  9379  00324A  1006               	iorwf	isalpha@c,w,c
  9380  00324C  6E0A               	movwf	(??_isalpha+2)& (0+255),c
  9381  00324E  0E00               	movlw	0
  9382  003250  1007               	iorwf	isalpha@c+1,w,c
  9383  003252  6E0B               	movwf	(??_isalpha+3)& (0+255),c
  9384  003254  5008               	movf	??_isalpha,w,c
  9385  003256  260A               	addwf	??_isalpha+2,f,c
  9386  003258  5009               	movf	??_isalpha+1,w,c
  9387  00325A  220B               	addwfc	??_isalpha+3,f,c
  9388  00325C  500B               	movf	??_isalpha+3,w,c
  9389  00325E  E106               	bnz	u6710
  9390  003260  0E1A               	movlw	26
  9391  003262  5C0A               	subwf	??_isalpha+2,w,c
  9392  003264  B0D8               	btfsc	status,0,c
  9393  003266  D002               	goto	u6710
  9394  003268  0E01               	movlw	1
  9395  00326A  D001               	goto	u6720
  9396  00326C                     u6710:
  9397  00326C  0E00               	movlw	0
  9398  00326E                     u6720:
  9399  00326E  6E06               	movwf	?_isalpha,c
  9400  003270  6A07               	clrf	?_isalpha+1,c
  9401  003272  0012               	return		;funcret
  9402  003274                     __end_of_isalpha:
  9403                           	opt callstack 0
  9404                           
  9405 ;; *************** function _stoa *****************
  9406 ;; Defined at:
  9407 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  9410 ;;		 -> NULL(0), 
  9411 ;;  s               2   20[COMRAM] PTR unsigned char 
  9412 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  9413 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  9414 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  9415 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  9416 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9417 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  nuls            7   23[COMRAM] unsigned char [7]
  9420 ;;  l               2   38[COMRAM] int 
  9421 ;;  p               2   36[COMRAM] int 
  9422 ;;  cp              2   34[COMRAM] PTR unsigned char 
  9423 ;;		 -> ?_printf(2), stoa@nuls(7), STR_51(16), STR_49(14), 
  9424 ;;		 -> STR_47(11), STR_45(9), STR_43(16), STR_41(13), 
  9425 ;;		 -> STR_39(13), STR_37(9), STR_35(13), STR_33(14), 
  9426 ;;		 -> STR_31(10), STR_27(9), STR_18(14), STR_16(16), 
  9427 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
  9428 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
  9429 ;;  w               2   32[COMRAM] int 
  9430 ;;  i               2   30[COMRAM] int 
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  2   18[COMRAM] int 
  9433 ;; Registers used:
  9434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;Total ram usage:       22 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:    7
  9447 ;; This function calls:
  9448 ;;		_fputc
  9449 ;;		_strlen
  9450 ;; This function is called by:
  9451 ;;		_vfpfcnvrt
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text38
  9456  002376                     __ptext38:
  9457                           	opt callstack 0
  9458  002376                     _stoa:
  9459                           	opt callstack 20
  9460                           
  9461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9462                           
  9463                           ;incstack = 0
  9464  002376  EE20  F0E9         	lfsr	2,stoa@F1144
  9465  00237A  EE10  F018         	lfsr	1,stoa@nuls
  9466  00237E  0E06               	movlw	6
  9467  002380                     u7091:
  9468  002380  CFDB FFE3          	movff	plusw2,plusw1
  9469  002384  06E8               	decf	wreg,f,c
  9470  002386  E2FC               	bc	u7091
  9471                           
  9472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9473  002388  C015  F023         	movff	stoa@s,stoa@cp
  9474  00238C  C016  F024         	movff	stoa@s+1,stoa@cp+1
  9475                           
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9477  002390  5023               	movf	stoa@cp,w,c
  9478  002392  1024               	iorwf	stoa@cp+1,w,c
  9479  002394  A4D8               	btfss	status,2,c
  9480  002396  D004               	goto	l6551
  9481                           
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9483  002398  0E18               	movlw	low stoa@nuls
  9484  00239A  6E23               	movwf	stoa@cp,c
  9485  00239C  0E00               	movlw	high stoa@nuls
  9486  00239E  6E24               	movwf	stoa@cp+1,c
  9487  0023A0                     l6551:
  9488                           
  9489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9490  0023A0  C023  F006         	movff	stoa@cp,strlen@s
  9491  0023A4  C024  F007         	movff	stoa@cp+1,strlen@s+1
  9492  0023A8  EC42  F018         	call	_strlen	;wreg free
  9493  0023AC  C006  F027         	movff	?_strlen,stoa@l
  9494  0023B0  C007  F028         	movff	?_strlen+1,stoa@l+1
  9495                           
  9496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9497  0023B4  C0DE  F025         	movff	_prec,stoa@p
  9498  0023B8  C0DF  F026         	movff	_prec+1,stoa@p+1
  9499                           
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9501  0023BC  BE26               	btfsc	stoa@p+1,7,c
  9502  0023BE  D00E               	goto	l576
  9503  0023C0  5027               	movf	stoa@l,w,c
  9504  0023C2  5C25               	subwf	stoa@p,w,c
  9505  0023C4  5026               	movf	stoa@p+1,w,c
  9506  0023C6  0A80               	xorlw	128
  9507  0023C8  6E17               	movwf	??_stoa& (0+255),c
  9508  0023CA  5028               	movf	stoa@l+1,w,c
  9509  0023CC  0A80               	xorlw	128
  9510  0023CE  5817               	subwfb	??_stoa& (0+255),w,c
  9511  0023D0  B0D8               	btfsc	status,0,c
  9512  0023D2  D004               	goto	l576
  9513  0023D4  C025  F027         	movff	stoa@p,stoa@l
  9514  0023D8  C026  F028         	movff	stoa@p+1,stoa@l+1
  9515  0023DC                     l576:
  9516                           
  9517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9518  0023DC  C027  F025         	movff	stoa@l,stoa@p
  9519  0023E0  C028  F026         	movff	stoa@l+1,stoa@p+1
  9520                           
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9522  0023E4  C0DC  F021         	movff	_width,stoa@w
  9523  0023E8  C0DD  F022         	movff	_width+1,stoa@w+1
  9524                           
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9526  0023EC  0100               	movlb	0	; () banked
  9527  0023EE  A1E0               	btfss	_flags& (0+255),0,b
  9528  0023F0  D00D               	goto	l6565
  9529  0023F2  D016               	goto	u7140
  9530  0023F4                     l6561:
  9531                           
  9532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9533  0023F4  0E00               	movlw	0
  9534  0023F6  6E0B               	movwf	fputc@c+1,c
  9535  0023F8  0E20               	movlw	32
  9536  0023FA  6E0A               	movwf	fputc@c,c
  9537  0023FC  C013  F00C         	movff	stoa@fp,fputc@fp
  9538  002400  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  9539  002404  ECB5  F016         	call	_fputc	;wreg free
  9540                           
  9541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9542  002408  4A27               	infsnz	stoa@l,f,c
  9543  00240A  2A28               	incf	stoa@l+1,f,c
  9544  00240C                     l6565:
  9545                           
  9546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9547  00240C  5021               	movf	stoa@w,w,c
  9548  00240E  5C27               	subwf	stoa@l,w,c
  9549  002410  5028               	movf	stoa@l+1,w,c
  9550  002412  0A80               	xorlw	128
  9551  002414  6E17               	movwf	??_stoa& (0+255),c
  9552  002416  5022               	movf	stoa@w+1,w,c
  9553  002418  0A80               	xorlw	128
  9554  00241A  5817               	subwfb	??_stoa& (0+255),w,c
  9555  00241C  A0D8               	btfss	status,0,c
  9556  00241E  D7EA               	goto	l6561
  9557  002420                     u7140:
  9558                           
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9560  002420  0E00               	movlw	0
  9561  002422  6E20               	movwf	stoa@i+1,c
  9562  002424  0E00               	movlw	0
  9563  002426  6E1F               	movwf	stoa@i,c
  9564                           
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9566  002428  D01F               	goto	l6575
  9567  00242A                     l6569:
  9568                           
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9570  00242A  C023  FFF6         	movff	stoa@cp,tblptrl
  9571  00242E  C024  FFF7         	movff	stoa@cp+1,tblptrh
  9572  002432  0E00               	movlw	low (__mediumconst shr (0+16))
  9573  002434  6EF8               	movwf	tblptru,c
  9574  002436  0E0F               	movlw	(high __ramtop+-1)
  9575  002438  64F7               	cpfsgt	tblptrh,c
  9576  00243A  D003               	bra	u7157
  9577  00243C  0008               	tblrd		*
  9578  00243E  50F5               	movf	tablat,w,c
  9579  002440  D005               	bra	u7150
  9580  002442                     u7157:
  9581  002442  CFF6 FFE1          	movff	tblptrl,fsr1l
  9582  002446  CFF7 FFE2          	movff	tblptrh,fsr1h
  9583  00244A  50E7               	movf	indf1,w,c
  9584  00244C                     u7150:
  9585  00244C  6E17               	movwf	??_stoa& (0+255),c
  9586  00244E  5017               	movf	??_stoa,w,c
  9587  002450  6E0A               	movwf	fputc@c,c
  9588  002452  6A0B               	clrf	fputc@c+1,c
  9589  002454  C013  F00C         	movff	stoa@fp,fputc@fp
  9590  002458  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  9591  00245C  ECB5  F016         	call	_fputc	;wreg free
  9592                           
  9593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9594  002460  4A23               	infsnz	stoa@cp,f,c
  9595  002462  2A24               	incf	stoa@cp+1,f,c
  9596                           
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9598  002464  4A1F               	infsnz	stoa@i,f,c
  9599  002466  2A20               	incf	stoa@i+1,f,c
  9600  002468                     l6575:
  9601                           
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9603  002468  5025               	movf	stoa@p,w,c
  9604  00246A  5C1F               	subwf	stoa@i,w,c
  9605  00246C  5020               	movf	stoa@i+1,w,c
  9606  00246E  0A80               	xorlw	128
  9607  002470  6E17               	movwf	??_stoa& (0+255),c
  9608  002472  5026               	movf	stoa@p+1,w,c
  9609  002474  0A80               	xorlw	128
  9610  002476  5817               	subwfb	??_stoa& (0+255),w,c
  9611  002478  A0D8               	btfss	status,0,c
  9612  00247A  D7D7               	goto	l6569
  9613                           
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9615  00247C  0100               	movlb	0	; () banked
  9616  00247E  B1E0               	btfsc	_flags& (0+255),0,b
  9617  002480  D00D               	goto	l6583
  9618  002482  D016               	goto	u7180
  9619  002484                     l6579:
  9620                           
  9621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9622  002484  0E00               	movlw	0
  9623  002486  6E0B               	movwf	fputc@c+1,c
  9624  002488  0E20               	movlw	32
  9625  00248A  6E0A               	movwf	fputc@c,c
  9626  00248C  C013  F00C         	movff	stoa@fp,fputc@fp
  9627  002490  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  9628  002494  ECB5  F016         	call	_fputc	;wreg free
  9629                           
  9630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9631  002498  4A27               	infsnz	stoa@l,f,c
  9632  00249A  2A28               	incf	stoa@l+1,f,c
  9633  00249C                     l6583:
  9634                           
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9636  00249C  5021               	movf	stoa@w,w,c
  9637  00249E  5C27               	subwf	stoa@l,w,c
  9638  0024A0  5028               	movf	stoa@l+1,w,c
  9639  0024A2  0A80               	xorlw	128
  9640  0024A4  6E17               	movwf	??_stoa& (0+255),c
  9641  0024A6  5022               	movf	stoa@w+1,w,c
  9642  0024A8  0A80               	xorlw	128
  9643  0024AA  5817               	subwfb	??_stoa& (0+255),w,c
  9644  0024AC  A0D8               	btfss	status,0,c
  9645  0024AE  D7EA               	goto	l6579
  9646  0024B0                     u7180:
  9647                           
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9649                           
  9650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  9651  0024B0  C027  F013         	movff	stoa@l,?_stoa
  9652  0024B4  C028  F014         	movff	stoa@l+1,?_stoa+1
  9653  0024B8  0012               	return		;funcret
  9654  0024BA                     __end_of_stoa:
  9655                           	opt callstack 0
  9656                           
  9657 ;; *************** function _dtoa *****************
  9658 ;; Defined at:
  9659 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  9662 ;;		 -> NULL(0), 
  9663 ;;  d               8   38[COMRAM] long long 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  n               8   62[COMRAM] long long 
  9666 ;;  i               2   70[COMRAM] int 
  9667 ;;  s               2   60[COMRAM] int 
  9668 ;;  w               2   58[COMRAM] int 
  9669 ;;  p               2   56[COMRAM] int 
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  2   36[COMRAM] int 
  9672 ;; Registers used:
  9673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9679 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;Total ram usage:       36 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; Hardware stack levels required when called:    9
  9686 ;; This function calls:
  9687 ;;		___aodiv
  9688 ;;		___aomod
  9689 ;;		_abs
  9690 ;;		_pad
  9691 ;; This function is called by:
  9692 ;;		_vfpfcnvrt
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text39
  9697  001BB2                     __ptext39:
  9698                           	opt callstack 0
  9699  001BB2                     _dtoa:
  9700                           	opt callstack 18
  9701                           
  9702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9703                           
  9704                           ;incstack = 0
  9705  001BB2  C027  F03F         	movff	dtoa@d,dtoa@n
  9706  001BB6  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  9707  001BBA  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  9708  001BBE  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  9709  001BC2  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  9710  001BC6  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  9711  001BCA  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  9712  001BCE  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  9713                           
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9715  001BD2  AE46               	btfss	dtoa@n+7,7,c
  9716  001BD4  D002               	goto	u6940
  9717  001BD6  0E01               	movlw	1
  9718  001BD8  D001               	goto	u6950
  9719  001BDA                     u6940:
  9720  001BDA  0E00               	movlw	0
  9721  001BDC                     u6950:
  9722  001BDC  6E3D               	movwf	dtoa@s,c
  9723  001BDE  6A3E               	clrf	dtoa@s+1,c
  9724                           
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9726  001BE0  503D               	movf	dtoa@s,w,c
  9727  001BE2  103E               	iorwf	dtoa@s+1,w,c
  9728  001BE4  B4D8               	btfsc	status,2,c
  9729  001BE6  D010               	goto	l6487
  9730                           
  9731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9732  001BE8  1E46               	comf	dtoa@n+7,f,c
  9733  001BEA  1E45               	comf	dtoa@n+6,f,c
  9734  001BEC  1E44               	comf	dtoa@n+5,f,c
  9735  001BEE  1E43               	comf	dtoa@n+4,f,c
  9736  001BF0  1E42               	comf	dtoa@n+3,f,c
  9737  001BF2  1E41               	comf	dtoa@n+2,f,c
  9738  001BF4  1E40               	comf	dtoa@n+1,f,c
  9739  001BF6  6C3F               	negf	dtoa@n,c
  9740  001BF8  0E00               	movlw	0
  9741  001BFA  2240               	addwfc	dtoa@n+1,f,c
  9742  001BFC  2241               	addwfc	dtoa@n+2,f,c
  9743  001BFE  2242               	addwfc	dtoa@n+3,f,c
  9744  001C00  2243               	addwfc	dtoa@n+4,f,c
  9745  001C02  2244               	addwfc	dtoa@n+5,f,c
  9746  001C04  2245               	addwfc	dtoa@n+6,f,c
  9747  001C06  2246               	addwfc	dtoa@n+7,f,c
  9748  001C08                     l6487:
  9749                           
  9750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9751  001C08  0100               	movlb	0	; () banked
  9752  001C0A  AFDF               	btfss	(_prec+1)& (0+255),7,b
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9756  001C0C  93E0               	bcf	_flags& (0+255),1,b
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9760  001C0E  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  9761  001C10  D005               	goto	u6980
  9762  001C12  51DF               	movf	(_prec+1)& (0+255),w,b
  9763  001C14  E108               	bnz	l547
  9764  001C16  05DE               	decf	_prec& (0+255),w,b
  9765  001C18  B0D8               	btfsc	status,0,c
  9766  001C1A  D005               	goto	l547
  9767  001C1C                     u6980:
  9768                           
  9769                           ; BSR set to: 0
  9770  001C1C  0E00               	movlw	0
  9771  001C1E  6E3A               	movwf	dtoa@p+1,c
  9772  001C20  0E01               	movlw	1
  9773  001C22  6E39               	movwf	dtoa@p,c
  9774  001C24  D004               	goto	l549
  9775  001C26                     l547:
  9776                           
  9777                           ; BSR set to: 0
  9778  001C26  C0DE  F039         	movff	_prec,dtoa@p
  9779  001C2A  C0DF  F03A         	movff	_prec+1,dtoa@p+1
  9780  001C2E                     l549:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9784  001C2E  C0DC  F03B         	movff	_width,dtoa@w
  9785  001C32  C0DD  F03C         	movff	_width+1,dtoa@w+1
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9789  001C36  503D               	movf	dtoa@s,w,c
  9790  001C38  103E               	iorwf	dtoa@s+1,w,c
  9791  001C3A  A4D8               	btfss	status,2,c
  9792  001C3C  D002               	goto	u7000
  9793                           
  9794                           ; BSR set to: 0
  9795  001C3E  A5E0               	btfss	_flags& (0+255),2,b
  9796  001C40  D003               	goto	l6501
  9797  001C42                     u7000:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9801  001C42  063B               	decf	dtoa@w,f,c
  9802  001C44  A0D8               	btfss	status,0,c
  9803  001C46  063C               	decf	dtoa@w+1,f,c
  9804  001C48                     l6501:
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9808  001C48  0E00               	movlw	0
  9809  001C4A  6E48               	movwf	dtoa@i+1,c
  9810  001C4C  0E1F               	movlw	31
  9811  001C4E  6E47               	movwf	dtoa@i,c
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9815  001C50  0E00               	movlw	0
  9816  001C52  0101               	movlb	1	; () banked
  9817  001C54  6F1F               	movwf	(_dbuf+31)& (0+255),b
  9818                           
  9819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9820  001C56  D07C               	goto	l6515
  9821  001C58                     l6505:
  9822                           
  9823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9824  001C58  0647               	decf	dtoa@i,f,c
  9825  001C5A  A0D8               	btfss	status,0,c
  9826  001C5C  0648               	decf	dtoa@i+1,f,c
  9827                           
  9828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9829  001C5E  0E00               	movlw	low _dbuf
  9830  001C60  2447               	addwf	dtoa@i,w,c
  9831  001C62  6ED9               	movwf	fsr2l,c
  9832  001C64  0E01               	movlw	high _dbuf
  9833  001C66  2048               	addwfc	dtoa@i+1,w,c
  9834  001C68  6EDA               	movwf	fsr2h,c
  9835  001C6A  C03F  F006         	movff	dtoa@n,___aomod@dividend
  9836  001C6E  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
  9837  001C72  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
  9838  001C76  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
  9839  001C7A  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  9840  001C7E  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  9841  001C82  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  9842  001C86  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  9843  001C8A  0E0A               	movlw	10
  9844  001C8C  6E0E               	movwf	___aomod@divisor,c
  9845  001C8E  0E00               	movlw	0
  9846  001C90  6E0F               	movwf	___aomod@divisor+1,c
  9847  001C92  0E00               	movlw	0
  9848  001C94  6E10               	movwf	___aomod@divisor+2,c
  9849  001C96  0E00               	movlw	0
  9850  001C98  6E11               	movwf	___aomod@divisor+3,c
  9851  001C9A  0E00               	movlw	0
  9852  001C9C  6E12               	movwf	___aomod@divisor+4,c
  9853  001C9E  0E00               	movlw	0
  9854  001CA0  6E13               	movwf	___aomod@divisor+5,c
  9855  001CA2  0E00               	movlw	0
  9856  001CA4  6E14               	movwf	___aomod@divisor+6,c
  9857  001CA6  0E00               	movlw	0
  9858  001CA8  6E15               	movwf	___aomod@divisor+7,c
  9859  001CAA  EC9D  F013         	call	___aomod	;wreg free
  9860  001CAE  C006  F02F         	movff	?___aomod,??_dtoa
  9861  001CB2  C007  F030         	movff	?___aomod+1,??_dtoa+1
  9862  001CB6  C008  F031         	movff	?___aomod+2,??_dtoa+2
  9863  001CBA  C009  F032         	movff	?___aomod+3,??_dtoa+3
  9864  001CBE  C00A  F033         	movff	?___aomod+4,??_dtoa+4
  9865  001CC2  C00B  F034         	movff	?___aomod+5,??_dtoa+5
  9866  001CC6  C00C  F035         	movff	?___aomod+6,??_dtoa+6
  9867  001CCA  C00D  F036         	movff	?___aomod+7,??_dtoa+7
  9868  001CCE  C02F  F018         	movff	??_dtoa,abs@a
  9869  001CD2  C031  F019         	movff	??_dtoa+2,abs@a+1
  9870  001CD6  EC3A  F019         	call	_abs	;wreg free
  9871  001CDA  5018               	movf	?_abs,w,c
  9872  001CDC  0F30               	addlw	48
  9873  001CDE  6EDF               	movwf	indf2,c
  9874                           
  9875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9876  001CE0  0639               	decf	dtoa@p,f,c
  9877  001CE2  A0D8               	btfss	status,0,c
  9878  001CE4  063A               	decf	dtoa@p+1,f,c
  9879                           
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9881  001CE6  063B               	decf	dtoa@w,f,c
  9882  001CE8  A0D8               	btfss	status,0,c
  9883  001CEA  063C               	decf	dtoa@w+1,f,c
  9884                           
  9885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9886  001CEC  C03F  F006         	movff	dtoa@n,___aodiv@dividend
  9887  001CF0  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  9888  001CF4  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  9889  001CF8  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  9890  001CFC  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  9891  001D00  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  9892  001D04  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  9893  001D08  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  9894  001D0C  0E0A               	movlw	10
  9895  001D0E  6E0E               	movwf	___aodiv@divisor,c
  9896  001D10  0E00               	movlw	0
  9897  001D12  6E0F               	movwf	___aodiv@divisor+1,c
  9898  001D14  0E00               	movlw	0
  9899  001D16  6E10               	movwf	___aodiv@divisor+2,c
  9900  001D18  0E00               	movlw	0
  9901  001D1A  6E11               	movwf	___aodiv@divisor+3,c
  9902  001D1C  0E00               	movlw	0
  9903  001D1E  6E12               	movwf	___aodiv@divisor+4,c
  9904  001D20  0E00               	movlw	0
  9905  001D22  6E13               	movwf	___aodiv@divisor+5,c
  9906  001D24  0E00               	movlw	0
  9907  001D26  6E14               	movwf	___aodiv@divisor+6,c
  9908  001D28  0E00               	movlw	0
  9909  001D2A  6E15               	movwf	___aodiv@divisor+7,c
  9910  001D2C  EC17  F011         	call	___aodiv	;wreg free
  9911  001D30  C006  F03F         	movff	?___aodiv,dtoa@n
  9912  001D34  C007  F040         	movff	?___aodiv+1,dtoa@n+1
  9913  001D38  C008  F041         	movff	?___aodiv+2,dtoa@n+2
  9914  001D3C  C009  F042         	movff	?___aodiv+3,dtoa@n+3
  9915  001D40  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
  9916  001D44  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
  9917  001D48  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
  9918  001D4C  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
  9919  001D50                     l6515:
  9920                           
  9921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9922  001D50  BE48               	btfsc	dtoa@i+1,7,c
  9923  001D52  D020               	goto	u7050
  9924  001D54  5048               	movf	dtoa@i+1,w,c
  9925  001D56  E103               	bnz	u7010
  9926  001D58  0447               	decf	dtoa@i,w,c
  9927  001D5A  A0D8               	btfss	status,0,c
  9928  001D5C  D01B               	goto	u7050
  9929  001D5E                     u7010:
  9930  001D5E  503F               	movf	dtoa@n,w,c
  9931  001D60  1040               	iorwf	dtoa@n+1,w,c
  9932  001D62  1041               	iorwf	dtoa@n+2,w,c
  9933  001D64  1042               	iorwf	dtoa@n+3,w,c
  9934  001D66  1043               	iorwf	dtoa@n+4,w,c
  9935  001D68  1044               	iorwf	dtoa@n+5,w,c
  9936  001D6A  1045               	iorwf	dtoa@n+6,w,c
  9937  001D6C  1046               	iorwf	dtoa@n+7,w,c
  9938  001D6E  A4D8               	btfss	status,2,c
  9939  001D70  D773               	goto	l6505
  9940  001D72  BE3A               	btfsc	dtoa@p+1,7,c
  9941  001D74  D005               	goto	u7030
  9942  001D76  503A               	movf	dtoa@p+1,w,c
  9943  001D78  E102               	bnz	u7031
  9944  001D7A  0439               	decf	dtoa@p,w,c
  9945  001D7C  B0D8               	btfsc	status,0,c
  9946  001D7E                     u7031:
  9947  001D7E  D76C               	goto	l6505
  9948  001D80                     u7030:
  9949  001D80  BE3C               	btfsc	dtoa@w+1,7,c
  9950  001D82  D008               	goto	u7050
  9951  001D84  503C               	movf	dtoa@w+1,w,c
  9952  001D86  E103               	bnz	u7040
  9953  001D88  043B               	decf	dtoa@w,w,c
  9954  001D8A  A0D8               	btfss	status,0,c
  9955  001D8C  D003               	goto	u7050
  9956  001D8E                     u7040:
  9957  001D8E  0100               	movlb	0	; () banked
  9958  001D90  B3E0               	btfsc	_flags& (0+255),1,b
  9959  001D92  D762               	goto	l6505
  9960  001D94                     u7050:
  9961                           
  9962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9963  001D94  503D               	movf	dtoa@s,w,c
  9964  001D96  103E               	iorwf	dtoa@s+1,w,c
  9965  001D98  A4D8               	btfss	status,2,c
  9966  001D9A  D003               	goto	u7070
  9967  001D9C  0100               	movlb	0	; () banked
  9968  001D9E  A5E0               	btfss	_flags& (0+255),2,b
  9969  001DA0  D017               	goto	l6539
  9970  001DA2                     u7070:
  9971                           
  9972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9973  001DA2  0647               	decf	dtoa@i,f,c
  9974  001DA4  A0D8               	btfss	status,0,c
  9975  001DA6  0648               	decf	dtoa@i+1,f,c
  9976                           
  9977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9978  001DA8  503D               	movf	dtoa@s,w,c
  9979  001DAA  103E               	iorwf	dtoa@s+1,w,c
  9980  001DAC  A4D8               	btfss	status,2,c
  9981  001DAE  D004               	goto	l6535
  9982  001DB0  0E00               	movlw	0
  9983  001DB2  6E38               	movwf	_dtoa$1305+1,c
  9984  001DB4  0E2B               	movlw	43
  9985  001DB6  D003               	goto	L17
  9986  001DB8                     l6535:
  9987  001DB8  0E00               	movlw	0
  9988  001DBA  6E38               	movwf	_dtoa$1305+1,c
  9989  001DBC  0E2D               	movlw	45
  9990  001DBE                     L17:
  9991  001DBE  6E37               	movwf	_dtoa$1305,c
  9992  001DC0  0E00               	movlw	low _dbuf
  9993  001DC2  2447               	addwf	dtoa@i,w,c
  9994  001DC4  6ED9               	movwf	fsr2l,c
  9995  001DC6  0E01               	movlw	high _dbuf
  9996  001DC8  2048               	addwfc	dtoa@i+1,w,c
  9997  001DCA  6EDA               	movwf	fsr2h,c
  9998  001DCC  C037  FFDF         	movff	_dtoa$1305,indf2
  9999  001DD0                     l6539:
 10000                           
 10001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10002  001DD0  C025  F01A         	movff	dtoa@fp,pad@fp
 10003  001DD4  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 10004  001DD8  0E00               	movlw	low _dbuf
 10005  001DDA  2447               	addwf	dtoa@i,w,c
 10006  001DDC  6E1C               	movwf	pad@buf,c
 10007  001DDE  0E01               	movlw	high _dbuf
 10008  001DE0  2048               	addwfc	dtoa@i+1,w,c
 10009  001DE2  6E1D               	movwf	pad@buf+1,c
 10010  001DE4  C03B  F01E         	movff	dtoa@w,pad@p
 10011  001DE8  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 10012  001DEC  EC6A  F015         	call	_pad	;wreg free
 10013  001DF0  C01A  F025         	movff	?_pad,?_dtoa
 10014  001DF4  C01B  F026         	movff	?_pad+1,?_dtoa+1
 10015  001DF8  0012               	return		;funcret
 10016  001DFA                     __end_of_dtoa:
 10017                           	opt callstack 0
 10018                           
 10019 ;; *************** function _abs *****************
 10020 ;; Defined at:
 10021 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  a               2   23[COMRAM] int 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  2   23[COMRAM] int 
 10028 ;; Registers used:
 10029 ;;		wreg, status,2, status,0
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;Total ram usage:        4 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    2
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_tirePositioning
 10046 ;;		_dtoa
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text40
 10051  003274                     __ptext40:
 10052                           	opt callstack 0
 10053  003274                     _abs:
 10054                           	opt callstack 24
 10055                           
 10056                           ;incstack = 0
 10057  003274  BE19               	btfsc	abs@a+1,7,c
 10058  003276  D005               	goto	u6640
 10059  003278  5019               	movf	abs@a+1,w,c
 10060  00327A  E110               	bnz	l1339
 10061  00327C  0418               	decf	abs@a,w,c
 10062  00327E  B0D8               	btfsc	status,0,c
 10063  003280  D00D               	goto	l1339
 10064  003282                     u6640:
 10065  003282  C018  F01A         	movff	abs@a,??_abs
 10066  003286  C019  F01B         	movff	abs@a+1,??_abs+1
 10067  00328A  1E1A               	comf	??_abs,f,c
 10068  00328C  1E1B               	comf	??_abs+1,f,c
 10069  00328E  4A1A               	infsnz	??_abs,f,c
 10070  003290  2A1B               	incf	??_abs+1,f,c
 10071  003292  C01A  F018         	movff	??_abs,?_abs
 10072  003296  C01B  F019         	movff	??_abs+1,?_abs+1
 10073  00329A  0012               	return	
 10074  00329C                     l1339:
 10075  00329C  C018  F018         	movff	abs@a,?_abs
 10076  0032A0  C019  F019         	movff	abs@a+1,?_abs+1
 10077  0032A4  0012               	return		;funcret
 10078  0032A6                     __end_of_abs:
 10079                           	opt callstack 0
 10080                           
 10081 ;; *************** function ___aomod *****************
 10082 ;; Defined at:
 10083 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  dividend        8    5[COMRAM] long long 
 10086 ;;  divisor         8   13[COMRAM] long long 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  sign            1   22[COMRAM] unsigned char 
 10089 ;;  counter         1   21[COMRAM] unsigned char 
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  8    5[COMRAM] long long 
 10092 ;; Registers used:
 10093 ;;		wreg, status,2, status,0
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10099 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10102 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10103 ;;Total ram usage:       18 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    2
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_dtoa
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           	psect	text41
 10114  00273A                     __ptext41:
 10115                           	opt callstack 0
 10116  00273A                     ___aomod:
 10117                           	opt callstack 24
 10118                           
 10119                           ;incstack = 0
 10120  00273A  0E00               	movlw	0
 10121  00273C  6E17               	movwf	___aomod@sign,c
 10122  00273E  AE0D               	btfss	___aomod@dividend+7,7,c
 10123  002740  D012               	goto	l6427
 10124  002742  1E0D               	comf	___aomod@dividend+7,f,c
 10125  002744  1E0C               	comf	___aomod@dividend+6,f,c
 10126  002746  1E0B               	comf	___aomod@dividend+5,f,c
 10127  002748  1E0A               	comf	___aomod@dividend+4,f,c
 10128  00274A  1E09               	comf	___aomod@dividend+3,f,c
 10129  00274C  1E08               	comf	___aomod@dividend+2,f,c
 10130  00274E  1E07               	comf	___aomod@dividend+1,f,c
 10131  002750  6C06               	negf	___aomod@dividend,c
 10132  002752  0E00               	movlw	0
 10133  002754  2207               	addwfc	___aomod@dividend+1,f,c
 10134  002756  2208               	addwfc	___aomod@dividend+2,f,c
 10135  002758  2209               	addwfc	___aomod@dividend+3,f,c
 10136  00275A  220A               	addwfc	___aomod@dividend+4,f,c
 10137  00275C  220B               	addwfc	___aomod@dividend+5,f,c
 10138  00275E  220C               	addwfc	___aomod@dividend+6,f,c
 10139  002760  220D               	addwfc	___aomod@dividend+7,f,c
 10140  002762  0E01               	movlw	1
 10141  002764  6E17               	movwf	___aomod@sign,c
 10142  002766                     l6427:
 10143  002766  AE15               	btfss	___aomod@divisor+7,7,c
 10144  002768  D010               	goto	l6431
 10145  00276A  1E15               	comf	___aomod@divisor+7,f,c
 10146  00276C  1E14               	comf	___aomod@divisor+6,f,c
 10147  00276E  1E13               	comf	___aomod@divisor+5,f,c
 10148  002770  1E12               	comf	___aomod@divisor+4,f,c
 10149  002772  1E11               	comf	___aomod@divisor+3,f,c
 10150  002774  1E10               	comf	___aomod@divisor+2,f,c
 10151  002776  1E0F               	comf	___aomod@divisor+1,f,c
 10152  002778  6C0E               	negf	___aomod@divisor,c
 10153  00277A  0E00               	movlw	0
 10154  00277C  220F               	addwfc	___aomod@divisor+1,f,c
 10155  00277E  2210               	addwfc	___aomod@divisor+2,f,c
 10156  002780  2211               	addwfc	___aomod@divisor+3,f,c
 10157  002782  2212               	addwfc	___aomod@divisor+4,f,c
 10158  002784  2213               	addwfc	___aomod@divisor+5,f,c
 10159  002786  2214               	addwfc	___aomod@divisor+6,f,c
 10160  002788  2215               	addwfc	___aomod@divisor+7,f,c
 10161  00278A                     l6431:
 10162  00278A  500E               	movf	___aomod@divisor,w,c
 10163  00278C  100F               	iorwf	___aomod@divisor+1,w,c
 10164  00278E  1010               	iorwf	___aomod@divisor+2,w,c
 10165  002790  1011               	iorwf	___aomod@divisor+3,w,c
 10166  002792  1012               	iorwf	___aomod@divisor+4,w,c
 10167  002794  1013               	iorwf	___aomod@divisor+5,w,c
 10168  002796  1014               	iorwf	___aomod@divisor+6,w,c
 10169  002798  1015               	iorwf	___aomod@divisor+7,w,c
 10170  00279A  B4D8               	btfsc	status,2,c
 10171  00279C  D03C               	goto	l6447
 10172  00279E  0E01               	movlw	1
 10173  0027A0  6E16               	movwf	___aomod@counter,c
 10174  0027A2  D00A               	goto	l6437
 10175  0027A4                     l6435:
 10176  0027A4  90D8               	bcf	status,0,c
 10177  0027A6  360E               	rlcf	___aomod@divisor,f,c
 10178  0027A8  360F               	rlcf	___aomod@divisor+1,f,c
 10179  0027AA  3610               	rlcf	___aomod@divisor+2,f,c
 10180  0027AC  3611               	rlcf	___aomod@divisor+3,f,c
 10181  0027AE  3612               	rlcf	___aomod@divisor+4,f,c
 10182  0027B0  3613               	rlcf	___aomod@divisor+5,f,c
 10183  0027B2  3614               	rlcf	___aomod@divisor+6,f,c
 10184  0027B4  3615               	rlcf	___aomod@divisor+7,f,c
 10185  0027B6  2A16               	incf	___aomod@counter,f,c
 10186  0027B8                     l6437:
 10187  0027B8  AE15               	btfss	___aomod@divisor+7,7,c
 10188  0027BA  D7F4               	goto	l6435
 10189  0027BC                     u6880:
 10190  0027BC  500E               	movf	___aomod@divisor,w,c
 10191  0027BE  5C06               	subwf	___aomod@dividend,w,c
 10192  0027C0  500F               	movf	___aomod@divisor+1,w,c
 10193  0027C2  5807               	subwfb	___aomod@dividend+1,w,c
 10194  0027C4  5010               	movf	___aomod@divisor+2,w,c
 10195  0027C6  5808               	subwfb	___aomod@dividend+2,w,c
 10196  0027C8  5011               	movf	___aomod@divisor+3,w,c
 10197  0027CA  5809               	subwfb	___aomod@dividend+3,w,c
 10198  0027CC  5012               	movf	___aomod@divisor+4,w,c
 10199  0027CE  580A               	subwfb	___aomod@dividend+4,w,c
 10200  0027D0  5013               	movf	___aomod@divisor+5,w,c
 10201  0027D2  580B               	subwfb	___aomod@dividend+5,w,c
 10202  0027D4  5014               	movf	___aomod@divisor+6,w,c
 10203  0027D6  580C               	subwfb	___aomod@dividend+6,w,c
 10204  0027D8  5015               	movf	___aomod@divisor+7,w,c
 10205  0027DA  580D               	subwfb	___aomod@dividend+7,w,c
 10206  0027DC  A0D8               	btfss	status,0,c
 10207  0027DE  D010               	goto	l6443
 10208  0027E0  500E               	movf	___aomod@divisor,w,c
 10209  0027E2  5E06               	subwf	___aomod@dividend,f,c
 10210  0027E4  500F               	movf	___aomod@divisor+1,w,c
 10211  0027E6  5A07               	subwfb	___aomod@dividend+1,f,c
 10212  0027E8  5010               	movf	___aomod@divisor+2,w,c
 10213  0027EA  5A08               	subwfb	___aomod@dividend+2,f,c
 10214  0027EC  5011               	movf	___aomod@divisor+3,w,c
 10215  0027EE  5A09               	subwfb	___aomod@dividend+3,f,c
 10216  0027F0  5012               	movf	___aomod@divisor+4,w,c
 10217  0027F2  5A0A               	subwfb	___aomod@dividend+4,f,c
 10218  0027F4  5013               	movf	___aomod@divisor+5,w,c
 10219  0027F6  5A0B               	subwfb	___aomod@dividend+5,f,c
 10220  0027F8  5014               	movf	___aomod@divisor+6,w,c
 10221  0027FA  5A0C               	subwfb	___aomod@dividend+6,f,c
 10222  0027FC  5015               	movf	___aomod@divisor+7,w,c
 10223  0027FE  5A0D               	subwfb	___aomod@dividend+7,f,c
 10224  002800                     l6443:
 10225  002800  90D8               	bcf	status,0,c
 10226  002802  3215               	rrcf	___aomod@divisor+7,f,c
 10227  002804  3214               	rrcf	___aomod@divisor+6,f,c
 10228  002806  3213               	rrcf	___aomod@divisor+5,f,c
 10229  002808  3212               	rrcf	___aomod@divisor+4,f,c
 10230  00280A  3211               	rrcf	___aomod@divisor+3,f,c
 10231  00280C  3210               	rrcf	___aomod@divisor+2,f,c
 10232  00280E  320F               	rrcf	___aomod@divisor+1,f,c
 10233  002810  320E               	rrcf	___aomod@divisor,f,c
 10234  002812  2E16               	decfsz	___aomod@counter,f,c
 10235  002814  D7D3               	goto	u6880
 10236  002816                     l6447:
 10237  002816  5017               	movf	___aomod@sign,w,c
 10238  002818  B4D8               	btfsc	status,2,c
 10239  00281A  D010               	goto	l6451
 10240  00281C  1E0D               	comf	___aomod@dividend+7,f,c
 10241  00281E  1E0C               	comf	___aomod@dividend+6,f,c
 10242  002820  1E0B               	comf	___aomod@dividend+5,f,c
 10243  002822  1E0A               	comf	___aomod@dividend+4,f,c
 10244  002824  1E09               	comf	___aomod@dividend+3,f,c
 10245  002826  1E08               	comf	___aomod@dividend+2,f,c
 10246  002828  1E07               	comf	___aomod@dividend+1,f,c
 10247  00282A  6C06               	negf	___aomod@dividend,c
 10248  00282C  0E00               	movlw	0
 10249  00282E  2207               	addwfc	___aomod@dividend+1,f,c
 10250  002830  2208               	addwfc	___aomod@dividend+2,f,c
 10251  002832  2209               	addwfc	___aomod@dividend+3,f,c
 10252  002834  220A               	addwfc	___aomod@dividend+4,f,c
 10253  002836  220B               	addwfc	___aomod@dividend+5,f,c
 10254  002838  220C               	addwfc	___aomod@dividend+6,f,c
 10255  00283A  220D               	addwfc	___aomod@dividend+7,f,c
 10256  00283C                     l6451:
 10257  00283C  C006  F006         	movff	___aomod@dividend,?___aomod
 10258  002840  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 10259  002844  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 10260  002848  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 10261  00284C  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 10262  002850  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 10263  002854  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 10264  002858  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 10265  00285C  0012               	return		;funcret
 10266  00285E                     __end_of___aomod:
 10267                           	opt callstack 0
 10268                           
 10269 ;; *************** function ___aodiv *****************
 10270 ;; Defined at:
 10271 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  dividend        8    5[COMRAM] long long 
 10274 ;;  divisor         8   13[COMRAM] long long 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  quotient        8   23[COMRAM] long long 
 10277 ;;  sign            1   22[COMRAM] unsigned char 
 10278 ;;  counter         1   21[COMRAM] unsigned char 
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  8    5[COMRAM] long long 
 10281 ;; Registers used:
 10282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10288 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;Total ram usage:       26 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    2
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_dtoa
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text42
 10303  00222E                     __ptext42:
 10304                           	opt callstack 0
 10305  00222E                     ___aodiv:
 10306                           	opt callstack 24
 10307                           
 10308                           ;incstack = 0
 10309  00222E  0E00               	movlw	0
 10310  002230  6E17               	movwf	___aodiv@sign,c
 10311  002232  AE15               	btfss	___aodiv@divisor+7,7,c
 10312  002234  D012               	goto	l6383
 10313  002236  1E15               	comf	___aodiv@divisor+7,f,c
 10314  002238  1E14               	comf	___aodiv@divisor+6,f,c
 10315  00223A  1E13               	comf	___aodiv@divisor+5,f,c
 10316  00223C  1E12               	comf	___aodiv@divisor+4,f,c
 10317  00223E  1E11               	comf	___aodiv@divisor+3,f,c
 10318  002240  1E10               	comf	___aodiv@divisor+2,f,c
 10319  002242  1E0F               	comf	___aodiv@divisor+1,f,c
 10320  002244  6C0E               	negf	___aodiv@divisor,c
 10321  002246  0E00               	movlw	0
 10322  002248  220F               	addwfc	___aodiv@divisor+1,f,c
 10323  00224A  2210               	addwfc	___aodiv@divisor+2,f,c
 10324  00224C  2211               	addwfc	___aodiv@divisor+3,f,c
 10325  00224E  2212               	addwfc	___aodiv@divisor+4,f,c
 10326  002250  2213               	addwfc	___aodiv@divisor+5,f,c
 10327  002252  2214               	addwfc	___aodiv@divisor+6,f,c
 10328  002254  2215               	addwfc	___aodiv@divisor+7,f,c
 10329  002256  0E01               	movlw	1
 10330  002258  6E17               	movwf	___aodiv@sign,c
 10331  00225A                     l6383:
 10332  00225A  AE0D               	btfss	___aodiv@dividend+7,7,c
 10333  00225C  D012               	goto	l6389
 10334  00225E  1E0D               	comf	___aodiv@dividend+7,f,c
 10335  002260  1E0C               	comf	___aodiv@dividend+6,f,c
 10336  002262  1E0B               	comf	___aodiv@dividend+5,f,c
 10337  002264  1E0A               	comf	___aodiv@dividend+4,f,c
 10338  002266  1E09               	comf	___aodiv@dividend+3,f,c
 10339  002268  1E08               	comf	___aodiv@dividend+2,f,c
 10340  00226A  1E07               	comf	___aodiv@dividend+1,f,c
 10341  00226C  6C06               	negf	___aodiv@dividend,c
 10342  00226E  0E00               	movlw	0
 10343  002270  2207               	addwfc	___aodiv@dividend+1,f,c
 10344  002272  2208               	addwfc	___aodiv@dividend+2,f,c
 10345  002274  2209               	addwfc	___aodiv@dividend+3,f,c
 10346  002276  220A               	addwfc	___aodiv@dividend+4,f,c
 10347  002278  220B               	addwfc	___aodiv@dividend+5,f,c
 10348  00227A  220C               	addwfc	___aodiv@dividend+6,f,c
 10349  00227C  220D               	addwfc	___aodiv@dividend+7,f,c
 10350  00227E  0E01               	movlw	1
 10351  002280  1A17               	xorwf	___aodiv@sign,f,c
 10352  002282                     l6389:
 10353  002282  EE20  F018         	lfsr	2,___aodiv@quotient
 10354  002286  0E07               	movlw	7
 10355  002288                     u6801:
 10356  002288  6ADE               	clrf	postinc2,c
 10357  00228A  06E8               	decf	wreg,f,c
 10358  00228C  E2FD               	bc	u6801
 10359  00228E  500E               	movf	___aodiv@divisor,w,c
 10360  002290  100F               	iorwf	___aodiv@divisor+1,w,c
 10361  002292  1010               	iorwf	___aodiv@divisor+2,w,c
 10362  002294  1011               	iorwf	___aodiv@divisor+3,w,c
 10363  002296  1012               	iorwf	___aodiv@divisor+4,w,c
 10364  002298  1013               	iorwf	___aodiv@divisor+5,w,c
 10365  00229A  1014               	iorwf	___aodiv@divisor+6,w,c
 10366  00229C  1015               	iorwf	___aodiv@divisor+7,w,c
 10367  00229E  B4D8               	btfsc	status,2,c
 10368  0022A0  D046               	goto	l6411
 10369  0022A2  0E01               	movlw	1
 10370  0022A4  6E16               	movwf	___aodiv@counter,c
 10371  0022A6  D00A               	goto	l6397
 10372  0022A8                     l6395:
 10373  0022A8  90D8               	bcf	status,0,c
 10374  0022AA  360E               	rlcf	___aodiv@divisor,f,c
 10375  0022AC  360F               	rlcf	___aodiv@divisor+1,f,c
 10376  0022AE  3610               	rlcf	___aodiv@divisor+2,f,c
 10377  0022B0  3611               	rlcf	___aodiv@divisor+3,f,c
 10378  0022B2  3612               	rlcf	___aodiv@divisor+4,f,c
 10379  0022B4  3613               	rlcf	___aodiv@divisor+5,f,c
 10380  0022B6  3614               	rlcf	___aodiv@divisor+6,f,c
 10381  0022B8  3615               	rlcf	___aodiv@divisor+7,f,c
 10382  0022BA  2A16               	incf	___aodiv@counter,f,c
 10383  0022BC                     l6397:
 10384  0022BC  AE15               	btfss	___aodiv@divisor+7,7,c
 10385  0022BE  D7F4               	goto	l6395
 10386  0022C0                     u6820:
 10387  0022C0  90D8               	bcf	status,0,c
 10388  0022C2  3618               	rlcf	___aodiv@quotient,f,c
 10389  0022C4  3619               	rlcf	___aodiv@quotient+1,f,c
 10390  0022C6  361A               	rlcf	___aodiv@quotient+2,f,c
 10391  0022C8  361B               	rlcf	___aodiv@quotient+3,f,c
 10392  0022CA  361C               	rlcf	___aodiv@quotient+4,f,c
 10393  0022CC  361D               	rlcf	___aodiv@quotient+5,f,c
 10394  0022CE  361E               	rlcf	___aodiv@quotient+6,f,c
 10395  0022D0  361F               	rlcf	___aodiv@quotient+7,f,c
 10396  0022D2  500E               	movf	___aodiv@divisor,w,c
 10397  0022D4  5C06               	subwf	___aodiv@dividend,w,c
 10398  0022D6  500F               	movf	___aodiv@divisor+1,w,c
 10399  0022D8  5807               	subwfb	___aodiv@dividend+1,w,c
 10400  0022DA  5010               	movf	___aodiv@divisor+2,w,c
 10401  0022DC  5808               	subwfb	___aodiv@dividend+2,w,c
 10402  0022DE  5011               	movf	___aodiv@divisor+3,w,c
 10403  0022E0  5809               	subwfb	___aodiv@dividend+3,w,c
 10404  0022E2  5012               	movf	___aodiv@divisor+4,w,c
 10405  0022E4  580A               	subwfb	___aodiv@dividend+4,w,c
 10406  0022E6  5013               	movf	___aodiv@divisor+5,w,c
 10407  0022E8  580B               	subwfb	___aodiv@dividend+5,w,c
 10408  0022EA  5014               	movf	___aodiv@divisor+6,w,c
 10409  0022EC  580C               	subwfb	___aodiv@dividend+6,w,c
 10410  0022EE  5015               	movf	___aodiv@divisor+7,w,c
 10411  0022F0  580D               	subwfb	___aodiv@dividend+7,w,c
 10412  0022F2  A0D8               	btfss	status,0,c
 10413  0022F4  D011               	goto	l6407
 10414  0022F6  500E               	movf	___aodiv@divisor,w,c
 10415  0022F8  5E06               	subwf	___aodiv@dividend,f,c
 10416  0022FA  500F               	movf	___aodiv@divisor+1,w,c
 10417  0022FC  5A07               	subwfb	___aodiv@dividend+1,f,c
 10418  0022FE  5010               	movf	___aodiv@divisor+2,w,c
 10419  002300  5A08               	subwfb	___aodiv@dividend+2,f,c
 10420  002302  5011               	movf	___aodiv@divisor+3,w,c
 10421  002304  5A09               	subwfb	___aodiv@dividend+3,f,c
 10422  002306  5012               	movf	___aodiv@divisor+4,w,c
 10423  002308  5A0A               	subwfb	___aodiv@dividend+4,f,c
 10424  00230A  5013               	movf	___aodiv@divisor+5,w,c
 10425  00230C  5A0B               	subwfb	___aodiv@dividend+5,f,c
 10426  00230E  5014               	movf	___aodiv@divisor+6,w,c
 10427  002310  5A0C               	subwfb	___aodiv@dividend+6,f,c
 10428  002312  5015               	movf	___aodiv@divisor+7,w,c
 10429  002314  5A0D               	subwfb	___aodiv@dividend+7,f,c
 10430  002316  8018               	bsf	___aodiv@quotient,0,c
 10431  002318                     l6407:
 10432  002318  90D8               	bcf	status,0,c
 10433  00231A  3215               	rrcf	___aodiv@divisor+7,f,c
 10434  00231C  3214               	rrcf	___aodiv@divisor+6,f,c
 10435  00231E  3213               	rrcf	___aodiv@divisor+5,f,c
 10436  002320  3212               	rrcf	___aodiv@divisor+4,f,c
 10437  002322  3211               	rrcf	___aodiv@divisor+3,f,c
 10438  002324  3210               	rrcf	___aodiv@divisor+2,f,c
 10439  002326  320F               	rrcf	___aodiv@divisor+1,f,c
 10440  002328  320E               	rrcf	___aodiv@divisor,f,c
 10441  00232A  2E16               	decfsz	___aodiv@counter,f,c
 10442  00232C  D7C9               	goto	u6820
 10443  00232E                     l6411:
 10444  00232E  5017               	movf	___aodiv@sign,w,c
 10445  002330  B4D8               	btfsc	status,2,c
 10446  002332  D010               	goto	l6415
 10447  002334  1E1F               	comf	___aodiv@quotient+7,f,c
 10448  002336  1E1E               	comf	___aodiv@quotient+6,f,c
 10449  002338  1E1D               	comf	___aodiv@quotient+5,f,c
 10450  00233A  1E1C               	comf	___aodiv@quotient+4,f,c
 10451  00233C  1E1B               	comf	___aodiv@quotient+3,f,c
 10452  00233E  1E1A               	comf	___aodiv@quotient+2,f,c
 10453  002340  1E19               	comf	___aodiv@quotient+1,f,c
 10454  002342  6C18               	negf	___aodiv@quotient,c
 10455  002344  0E00               	movlw	0
 10456  002346  2219               	addwfc	___aodiv@quotient+1,f,c
 10457  002348  221A               	addwfc	___aodiv@quotient+2,f,c
 10458  00234A  221B               	addwfc	___aodiv@quotient+3,f,c
 10459  00234C  221C               	addwfc	___aodiv@quotient+4,f,c
 10460  00234E  221D               	addwfc	___aodiv@quotient+5,f,c
 10461  002350  221E               	addwfc	___aodiv@quotient+6,f,c
 10462  002352  221F               	addwfc	___aodiv@quotient+7,f,c
 10463  002354                     l6415:
 10464  002354  C018  F006         	movff	___aodiv@quotient,?___aodiv
 10465  002358  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 10466  00235C  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 10467  002360  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 10468  002364  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 10469  002368  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 10470  00236C  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 10471  002370  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 10472  002374  0012               	return		;funcret
 10473  002376                     __end_of___aodiv:
 10474                           	opt callstack 0
 10475                           
 10476 ;; *************** function _ctoa *****************
 10477 ;; Defined at:
 10478 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10481 ;;		 -> NULL(0), 
 10482 ;;  c               1   38[COMRAM] unsigned char 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;  w               2   39[COMRAM] int 
 10485 ;;  l               2    0        int 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  2   36[COMRAM] int 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10495 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;Total ram usage:        5 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    9
 10502 ;; This function calls:
 10503 ;;		_pad
 10504 ;; This function is called by:
 10505 ;;		_vfpfcnvrt
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text43
 10510  002F58                     __ptext43:
 10511                           	opt callstack 0
 10512  002F58                     _ctoa:
 10513                           	opt callstack 18
 10514                           
 10515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10516                           
 10517                           ;incstack = 0
 10518  002F58  0100               	movlb	0	; () banked
 10519  002F5A  51DC               	movf	_width& (0+255),w,b
 10520  002F5C  11DD               	iorwf	(_width+1)& (0+255),w,b
 10521  002F5E  A4D8               	btfss	status,2,c
 10522  002F60  D005               	goto	l6471
 10523                           
 10524                           ; BSR set to: 0
 10525  002F62  C0DC  F028         	movff	_width,ctoa@w
 10526  002F66  C0DD  F029         	movff	_width+1,ctoa@w+1
 10527  002F6A  D006               	goto	l6473
 10528  002F6C                     l6471:
 10529                           
 10530                           ; BSR set to: 0
 10531  002F6C  0EFF               	movlw	255
 10532  002F6E  25DC               	addwf	_width& (0+255),w,b
 10533  002F70  6E28               	movwf	ctoa@w,c
 10534  002F72  0EFF               	movlw	255
 10535  002F74  21DD               	addwfc	(_width+1)& (0+255),w,b
 10536  002F76  6E29               	movwf	ctoa@w+1,c
 10537  002F78                     l6473:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10541  002F78  C027  F100         	movff	ctoa@c,_dbuf
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10545  002F7C  0E00               	movlw	0
 10546  002F7E  0101               	movlb	1	; () banked
 10547  002F80  6F01               	movwf	(_dbuf+1)& (0+255),b
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10551  002F82  C025  F01A         	movff	ctoa@fp,pad@fp
 10552  002F86  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 10553  002F8A  0E00               	movlw	low _dbuf
 10554  002F8C  6E1C               	movwf	pad@buf,c
 10555  002F8E  0E01               	movlw	high _dbuf
 10556  002F90  6E1D               	movwf	pad@buf+1,c
 10557  002F92  C028  F01E         	movff	ctoa@w,pad@p
 10558  002F96  C029  F01F         	movff	ctoa@w+1,pad@p+1
 10559  002F9A  EC6A  F015         	call	_pad	;wreg free
 10560  002F9E  C01A  F025         	movff	?_pad,?_ctoa
 10561  002FA2  C01B  F026         	movff	?_pad+1,?_ctoa+1
 10562  002FA6  0012               	return		;funcret
 10563  002FA8                     __end_of_ctoa:
 10564                           	opt callstack 0
 10565                           
 10566 ;; *************** function _pad *****************
 10567 ;; Defined at:
 10568 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 10571 ;;		 -> NULL(0), 
 10572 ;;  buf             2   27[COMRAM] PTR unsigned char 
 10573 ;;		 -> dbuf(32), 
 10574 ;;  p               2   29[COMRAM] int 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  w               2   34[COMRAM] int 
 10577 ;;  i               2   32[COMRAM] int 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  2   25[COMRAM] int 
 10580 ;; Registers used:
 10581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:       11 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:    8
 10594 ;; This function calls:
 10595 ;;		_fputc
 10596 ;;		_fputs
 10597 ;;		_strlen
 10598 ;; This function is called by:
 10599 ;;		_ctoa
 10600 ;;		_dtoa
 10601 ;;		_xtoa
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text44
 10606  002AD4                     __ptext44:
 10607                           	opt callstack 0
 10608  002AD4                     _pad:
 10609                           	opt callstack 18
 10610                           
 10611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10612                           
 10613                           ;incstack = 0
 10614  002AD4  0100               	movlb	0	; () banked
 10615  002AD6  A1E0               	btfss	_flags& (0+255),0,b
 10616  002AD8  D00A               	goto	l6329
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10620  002ADA  C01C  F013         	movff	pad@buf,fputs@s
 10621  002ADE  C01D  F014         	movff	pad@buf+1,fputs@s+1
 10622  002AE2  C01A  F015         	movff	pad@fp,fputs@fp
 10623  002AE6  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 10624  002AEA  EC04  F019         	call	_fputs	;wreg free
 10625  002AEE                     l6329:
 10626                           
 10627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10628  002AEE  BE1F               	btfsc	pad@p+1,7,c
 10629  002AF0  D005               	goto	l6333
 10630  002AF2  C01E  F023         	movff	pad@p,pad@w
 10631  002AF6  C01F  F024         	movff	pad@p+1,pad@w+1
 10632  002AFA  D004               	goto	l529
 10633  002AFC                     l6333:
 10634  002AFC  0E00               	movlw	0
 10635  002AFE  6E24               	movwf	pad@w+1,c
 10636  002B00  0E00               	movlw	0
 10637  002B02  6E23               	movwf	pad@w,c
 10638  002B04                     l529:
 10639                           
 10640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10641  002B04  0E00               	movlw	0
 10642  002B06  6E22               	movwf	pad@i+1,c
 10643  002B08  0E00               	movlw	0
 10644  002B0A  6E21               	movwf	pad@i,c
 10645                           
 10646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10647  002B0C  D00C               	goto	l6339
 10648  002B0E                     l6335:
 10649                           
 10650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10651  002B0E  0E00               	movlw	0
 10652  002B10  6E0B               	movwf	fputc@c+1,c
 10653  002B12  0E20               	movlw	32
 10654  002B14  6E0A               	movwf	fputc@c,c
 10655  002B16  C01A  F00C         	movff	pad@fp,fputc@fp
 10656  002B1A  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 10657  002B1E  ECB5  F016         	call	_fputc	;wreg free
 10658                           
 10659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10660  002B22  4A21               	infsnz	pad@i,f,c
 10661  002B24  2A22               	incf	pad@i+1,f,c
 10662  002B26                     l6339:
 10663                           
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10665  002B26  5023               	movf	pad@w,w,c
 10666  002B28  5C21               	subwf	pad@i,w,c
 10667  002B2A  5022               	movf	pad@i+1,w,c
 10668  002B2C  0A80               	xorlw	128
 10669  002B2E  6E20               	movwf	??_pad& (0+255),c
 10670  002B30  5024               	movf	pad@w+1,w,c
 10671  002B32  0A80               	xorlw	128
 10672  002B34  5820               	subwfb	??_pad& (0+255),w,c
 10673  002B36  A0D8               	btfss	status,0,c
 10674  002B38  D7EA               	goto	l6335
 10675                           
 10676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10677  002B3A  0100               	movlb	0	; () banked
 10678  002B3C  B1E0               	btfsc	_flags& (0+255),0,b
 10679  002B3E  D00A               	goto	l6343
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10683  002B40  C01C  F013         	movff	pad@buf,fputs@s
 10684  002B44  C01D  F014         	movff	pad@buf+1,fputs@s+1
 10685  002B48  C01A  F015         	movff	pad@fp,fputs@fp
 10686  002B4C  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 10687  002B50  EC04  F019         	call	_fputs	;wreg free
 10688  002B54                     l6343:
 10689                           
 10690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10691  002B54  C01C  F006         	movff	pad@buf,strlen@s
 10692  002B58  C01D  F007         	movff	pad@buf+1,strlen@s+1
 10693  002B5C  EC42  F018         	call	_strlen	;wreg free
 10694  002B60  5023               	movf	pad@w,w,c
 10695  002B62  2406               	addwf	?_strlen,w,c
 10696  002B64  6E1A               	movwf	?_pad,c
 10697  002B66  5024               	movf	pad@w+1,w,c
 10698  002B68  2007               	addwfc	?_strlen+1,w,c
 10699  002B6A  6E1B               	movwf	?_pad+1,c
 10700  002B6C  0012               	return		;funcret
 10701  002B6E                     __end_of_pad:
 10702                           	opt callstack 0
 10703                           
 10704 ;; *************** function _strlen *****************
 10705 ;; Defined at:
 10706 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  s               2    5[COMRAM] PTR const unsigned char 
 10709 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 10710 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 10711 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 10712 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 10713 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 10714 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 10715 ;;		 -> STR_2(10), 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;  a               2    7[COMRAM] PTR const unsigned char 
 10718 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 10719 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 10720 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 10721 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 10722 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 10723 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 10724 ;;		 -> STR_2(10), 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  2    5[COMRAM] unsigned int 
 10727 ;; Registers used:
 10728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;Total ram usage:        4 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    2
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_pad
 10745 ;;		_stoa
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text45
 10750  003084                     __ptext45:
 10751                           	opt callstack 0
 10752  003084                     _strlen:
 10753                           	opt callstack 23
 10754                           
 10755                           ;incstack = 0
 10756  003084  C006  F008         	movff	strlen@s,strlen@a
 10757  003088  C007  F009         	movff	strlen@s+1,strlen@a+1
 10758  00308C  D002               	goto	l6311
 10759  00308E                     l6309:
 10760  00308E  4A06               	infsnz	strlen@s,f,c
 10761  003090  2A07               	incf	strlen@s+1,f,c
 10762  003092                     l6311:
 10763  003092  C006  FFF6         	movff	strlen@s,tblptrl
 10764  003096  C007  FFF7         	movff	strlen@s+1,tblptrh
 10765  00309A  0E00               	movlw	low (__mediumconst shr (0+16))
 10766  00309C  6EF8               	movwf	tblptru,c
 10767  00309E  0E0F               	movlw	(high __ramtop+-1)
 10768  0030A0  64F7               	cpfsgt	tblptrh,c
 10769  0030A2  D003               	bra	u6607
 10770  0030A4  0008               	tblrd		*
 10771  0030A6  50F5               	movf	tablat,w,c
 10772  0030A8  D005               	bra	u6600
 10773  0030AA                     u6607:
 10774  0030AA  CFF6 FFE1          	movff	tblptrl,fsr1l
 10775  0030AE  CFF7 FFE2          	movff	tblptrh,fsr1h
 10776  0030B2  50E7               	movf	indf1,w,c
 10777  0030B4                     u6600:
 10778  0030B4  0900               	iorlw	0
 10779  0030B6  A4D8               	btfss	status,2,c
 10780  0030B8  D7EA               	goto	l6309
 10781  0030BA  5008               	movf	strlen@a,w,c
 10782  0030BC  5C06               	subwf	strlen@s,w,c
 10783  0030BE  6E06               	movwf	?_strlen,c
 10784  0030C0  5009               	movf	strlen@a+1,w,c
 10785  0030C2  5807               	subwfb	strlen@s+1,w,c
 10786  0030C4  6E07               	movwf	?_strlen+1,c
 10787  0030C6  0012               	return		;funcret
 10788  0030C8                     __end_of_strlen:
 10789                           	opt callstack 0
 10790                           
 10791 ;; *************** function _fputs *****************
 10792 ;; Defined at:
 10793 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;  s               2   18[COMRAM] PTR const unsigned char 
 10796 ;;		 -> dbuf(32), 
 10797 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 10798 ;;		 -> NULL(0), 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  i               2   23[COMRAM] int 
 10801 ;;  c               1   22[COMRAM] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  2   18[COMRAM] int 
 10804 ;; Registers used:
 10805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;Total ram usage:        7 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; Hardware stack levels required when called:    7
 10818 ;; This function calls:
 10819 ;;		_fputc
 10820 ;; This function is called by:
 10821 ;;		_pad
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text46
 10826  003208                     __ptext46:
 10827                           	opt callstack 0
 10828  003208                     _fputs:
 10829                           	opt callstack 18
 10830                           
 10831                           ;incstack = 0
 10832  003208  0E00               	movlw	0
 10833  00320A  6E19               	movwf	fputs@i+1,c
 10834  00320C  0E00               	movlw	0
 10835  00320E  6E18               	movwf	fputs@i,c
 10836  003210  D00B               	goto	l6305
 10837  003212                     l6301:
 10838  003212  C017  F00A         	movff	fputs@c,fputc@c
 10839  003216  6A0B               	clrf	fputc@c+1,c
 10840  003218  C015  F00C         	movff	fputs@fp,fputc@fp
 10841  00321C  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 10842  003220  ECB5  F016         	call	_fputc	;wreg free
 10843  003224  4A18               	infsnz	fputs@i,f,c
 10844  003226  2A19               	incf	fputs@i+1,f,c
 10845  003228                     l6305:
 10846  003228  5018               	movf	fputs@i,w,c
 10847  00322A  2413               	addwf	fputs@s,w,c
 10848  00322C  6ED9               	movwf	fsr2l,c
 10849  00322E  5019               	movf	fputs@i+1,w,c
 10850  003230  2014               	addwfc	fputs@s+1,w,c
 10851  003232  6EDA               	movwf	fsr2h,c
 10852  003234  50DF               	movf	indf2,w,c
 10853  003236  6E17               	movwf	fputs@c,c
 10854  003238  5017               	movf	fputs@c,w,c
 10855  00323A  B4D8               	btfsc	status,2,c
 10856  00323C  0012               	return	
 10857  00323E  D7E9               	goto	l6301
 10858  003240                     __end_of_fputs:
 10859                           	opt callstack 0
 10860                           
 10861 ;; *************** function _fputc *****************
 10862 ;; Defined at:
 10863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;  c               2    9[COMRAM] int 
 10866 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10867 ;;		 -> NULL(0), 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  2    9[COMRAM] int 
 10872 ;; Registers used:
 10873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;Total ram usage:        9 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    6
 10886 ;; This function calls:
 10887 ;;		_putch
 10888 ;; This function is called by:
 10889 ;;		_pad
 10890 ;;		_stoa
 10891 ;;		_vfpfcnvrt
 10892 ;;		_fputs
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text47
 10897  002D6A                     __ptext47:
 10898                           	opt callstack 0
 10899  002D6A                     _fputc:
 10900                           	opt callstack 18
 10901                           
 10902                           ;incstack = 0
 10903  002D6A  500C               	movf	fputc@fp,w,c
 10904  002D6C  100D               	iorwf	fputc@fp+1,w,c
 10905  002D6E  B4D8               	btfsc	status,2,c
 10906  002D70  D004               	goto	u6560
 10907  002D72  500C               	movf	fputc@fp,w,c
 10908  002D74  100D               	iorwf	fputc@fp+1,w,c
 10909  002D76  A4D8               	btfss	status,2,c
 10910  002D78  D004               	goto	l6291
 10911  002D7A                     u6560:
 10912  002D7A  500A               	movf	fputc@c,w,c
 10913  002D7C  EC5C  F01A         	call	_putch
 10914  002D80  0012               	return	
 10915  002D82                     l6291:
 10916  002D82  EE20 F004          	lfsr	2,4
 10917  002D86  500C               	movf	fputc@fp,w,c
 10918  002D88  26D9               	addwf	fsr2l,f,c
 10919  002D8A  500D               	movf	fputc@fp+1,w,c
 10920  002D8C  22DA               	addwfc	fsr2h,f,c
 10921  002D8E  50DE               	movf	postinc2,w,c
 10922  002D90  10DE               	iorwf	postinc2,w,c
 10923  002D92  B4D8               	btfsc	status,2,c
 10924  002D94  D016               	goto	u6580
 10925  002D96  EE20 F004          	lfsr	2,4
 10926  002D9A  500C               	movf	fputc@fp,w,c
 10927  002D9C  26D9               	addwf	fsr2l,f,c
 10928  002D9E  500D               	movf	fputc@fp+1,w,c
 10929  002DA0  22DA               	addwfc	fsr2h,f,c
 10930  002DA2  EE10 F002          	lfsr	1,2
 10931  002DA6  500C               	movf	fputc@fp,w,c
 10932  002DA8  26E1               	addwf	fsr1l,f,c
 10933  002DAA  500D               	movf	fputc@fp+1,w,c
 10934  002DAC  22E2               	addwfc	fsr1h,f,c
 10935  002DAE  50DE               	movf	postinc2,w,c
 10936  002DB0  5CE6               	subwf	postinc1,w,c
 10937  002DB2  50E6               	movf	postinc1,w,c
 10938  002DB4  0A80               	xorlw	128
 10939  002DB6  6E12               	movwf	(??_fputc+4)& (0+255),c
 10940  002DB8  50DE               	movf	postinc2,w,c
 10941  002DBA  0A80               	xorlw	128
 10942  002DBC  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 10943  002DBE  B0D8               	btfsc	status,0,c
 10944  002DC0  0012               	return	
 10945  002DC2                     u6580:
 10946  002DC2  EE20 F002          	lfsr	2,2
 10947  002DC6  500C               	movf	fputc@fp,w,c
 10948  002DC8  26D9               	addwf	fsr2l,f,c
 10949  002DCA  500D               	movf	fputc@fp+1,w,c
 10950  002DCC  22DA               	addwfc	fsr2h,f,c
 10951  002DCE  2ADE               	incf	postinc2,f,c
 10952  002DD0  0E00               	movlw	0
 10953  002DD2  22DD               	addwfc	postdec2,f,c
 10954  002DD4  0012               	return		;funcret
 10955  002DD6                     __end_of_fputc:
 10956                           	opt callstack 0
 10957                           
 10958 ;; *************** function _putch *****************
 10959 ;; Defined at:
 10960 ;;		line 102 in file "lcd.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  data            1    wreg     unsigned char 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  data            1    8[COMRAM] unsigned char 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;Total ram usage:        1 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    5
 10981 ;; This function calls:
 10982 ;;		_send_byte
 10983 ;; This function is called by:
 10984 ;;		_fputc
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text48
 10989  0034B8                     __ptext48:
 10990                           	opt callstack 0
 10991  0034B8                     _putch:
 10992                           	opt callstack 18
 10993                           
 10994                           ;incstack = 0
 10995                           ;putch@data stored from wreg
 10996  0034B8  6E09               	movwf	putch@data,c
 10997                           
 10998                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10999  0034BA  848C               	bsf	3980,2,c	;volatile
 11000                           
 11001                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11002  0034BC  5009               	movf	putch@data,w,c
 11003  0034BE  EC53  F01A         	call	_send_byte
 11004  0034C2  0012               	return		;funcret
 11005  0034C4                     __end_of_putch:
 11006                           	opt callstack 0
 11007                           
 11008 ;; *************** function _atoi *****************
 11009 ;; Defined at:
 11010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  s               2   12[COMRAM] PTR const unsigned char 
 11013 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
 11014 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
 11015 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
 11016 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
 11017 ;;		 -> STR_28(15), STR_26(3), STR_25(10), STR_24(3), 
 11018 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
 11019 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
 11020 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
 11021 ;;		 -> STR_1(7), 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  n               2   25[COMRAM] int 
 11024 ;;  neg             2   18[COMRAM] int 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  2   12[COMRAM] int 
 11027 ;; Registers used:
 11028 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11035 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;Total ram usage:       15 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    3
 11041 ;; This function calls:
 11042 ;;		___wmul
 11043 ;;		_isdigit
 11044 ;;		_isspace
 11045 ;; This function is called by:
 11046 ;;		_vfpfcnvrt
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text49
 11051  0025FA                     __ptext49:
 11052                           	opt callstack 0
 11053  0025FA                     _atoi:
 11054                           	opt callstack 24
 11055                           
 11056                           ;incstack = 0
 11057  0025FA  0E00               	movlw	0
 11058  0025FC  6E1B               	movwf	atoi@n+1,c
 11059  0025FE  0E00               	movlw	0
 11060  002600  6E1A               	movwf	atoi@n,c
 11061  002602  0E00               	movlw	0
 11062  002604  6E14               	movwf	atoi@neg+1,c
 11063  002606  0E00               	movlw	0
 11064  002608  6E13               	movwf	atoi@neg,c
 11065  00260A  D002               	goto	l6655
 11066  00260C                     l6653:
 11067  00260C  4A0D               	infsnz	atoi@s,f,c
 11068  00260E  2A0E               	incf	atoi@s+1,f,c
 11069  002610                     l6655:
 11070  002610  0E01               	movlw	1
 11071  002612  6E19               	movwf	_atoi$1802,c
 11072  002614  C00D  FFF6         	movff	atoi@s,tblptrl
 11073  002618  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11074  00261C                     	if	0	;tblptru may be non-zero
 11075  00261C                     	endif
 11076  00261C                     	if	0	;tblptru may be non-zero
 11077  00261C                     	endif
 11078  00261C  0008               	tblrd		*
 11079  00261E  50F5               	movf	tablat,w,c
 11080  002620  0A20               	xorlw	32
 11081  002622  B4D8               	btfsc	status,2,c
 11082  002624  D018               	goto	l6663
 11083  002626  0EF7               	movlw	247
 11084  002628  6E0F               	movwf	??_atoi& (0+255),c
 11085  00262A  0EFF               	movlw	255
 11086  00262C  6E10               	movwf	(??_atoi+1)& (0+255),c
 11087  00262E  C00D  FFF6         	movff	atoi@s,tblptrl
 11088  002632  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11089  002636                     	if	0	;tblptru may be non-zero
 11090  002636                     	endif
 11091  002636                     	if	0	;tblptru may be non-zero
 11092  002636                     	endif
 11093  002636  0008               	tblrd		*
 11094  002638  50F5               	movf	tablat,w,c
 11095  00263A  6E11               	movwf	(??_atoi+2)& (0+255),c
 11096  00263C  6A12               	clrf	(??_atoi+3)& (0+255),c
 11097  00263E  500F               	movf	??_atoi,w,c
 11098  002640  2611               	addwf	??_atoi+2,f,c
 11099  002642  5010               	movf	??_atoi+1,w,c
 11100  002644  2212               	addwfc	??_atoi+3,f,c
 11101  002646  5012               	movf	??_atoi+3,w,c
 11102  002648  E104               	bnz	u7370
 11103  00264A  0E05               	movlw	5
 11104  00264C  5C11               	subwf	??_atoi+2,w,c
 11105  00264E  A0D8               	btfss	status,0,c
 11106  002650  D002               	goto	l6663
 11107  002652                     u7370:
 11108  002652  0E00               	movlw	0
 11109  002654  6E19               	movwf	_atoi$1802,c
 11110  002656                     l6663:
 11111  002656  C019  F015         	movff	_atoi$1802,_atoi$1801
 11112  00265A  6A16               	clrf	_atoi$1801+1,c
 11113  00265C  5015               	movf	_atoi$1801,w,c
 11114  00265E  1016               	iorwf	_atoi$1801+1,w,c
 11115  002660  B4D8               	btfsc	status,2,c
 11116  002662  D008               	goto	l6673
 11117  002664  D7D3               	goto	l6653
 11118  002666                     l6669:
 11119  002666  0E00               	movlw	0
 11120  002668  6E14               	movwf	atoi@neg+1,c
 11121  00266A  0E01               	movlw	1
 11122  00266C  6E13               	movwf	atoi@neg,c
 11123  00266E                     l6671:
 11124  00266E  4A0D               	infsnz	atoi@s,f,c
 11125  002670  2A0E               	incf	atoi@s+1,f,c
 11126  002672  D02E               	goto	l6679
 11127  002674                     l6673:
 11128  002674  C00D  FFF6         	movff	atoi@s,tblptrl
 11129  002678  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11130  00267C                     	if	0	;tblptru may be non-zero
 11131  00267C                     	endif
 11132  00267C                     	if	0	;tblptru may be non-zero
 11133  00267C                     	endif
 11134  00267C  0008               	tblrd		*
 11135  00267E  50F5               	movf	tablat,w,c
 11136  002680  6E0F               	movwf	??_atoi& (0+255),c
 11137  002682  6A10               	clrf	(??_atoi+1)& (0+255),c
 11138                           
 11139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11140                           ; Switch size 1, requested type "simple"
 11141                           ; Number of cases is 1, Range of values is 0 to 0
 11142                           ; switch strategies available:
 11143                           ; Name         Instructions Cycles
 11144                           ; simple_byte            4     3 (average)
 11145                           ;	Chosen strategy is simple_byte
 11146  002684  5010               	movf	??_atoi+1,w,c
 11147  002686  0A00               	xorlw	0	; case 0
 11148  002688  A4D8               	btfss	status,2,c
 11149  00268A  D022               	goto	l6679
 11150                           
 11151                           ; Switch size 1, requested type "simple"
 11152                           ; Number of cases is 2, Range of values is 43 to 45
 11153                           ; switch strategies available:
 11154                           ; Name         Instructions Cycles
 11155                           ; simple_byte            7     4 (average)
 11156                           ;	Chosen strategy is simple_byte
 11157  00268C  500F               	movf	??_atoi,w,c
 11158  00268E  0A2B               	xorlw	43	; case 43
 11159  002690  B4D8               	btfsc	status,2,c
 11160  002692  D7ED               	goto	l6671
 11161  002694  0A06               	xorlw	6	; case 45
 11162  002696  B4D8               	btfsc	status,2,c
 11163  002698  D7E6               	goto	l6669
 11164  00269A  D01A               	goto	l6679
 11165  00269C                     l6675:
 11166  00269C  C01A  F006         	movff	atoi@n,___wmul@multiplier
 11167  0026A0  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 11168  0026A4  0E00               	movlw	0
 11169  0026A6  6E09               	movwf	___wmul@multiplicand+1,c
 11170  0026A8  0E0A               	movlw	10
 11171  0026AA  6E08               	movwf	___wmul@multiplicand,c
 11172  0026AC  ECEE  F019         	call	___wmul	;wreg free
 11173  0026B0  C00D  FFF6         	movff	atoi@s,tblptrl
 11174  0026B4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11175  0026B8                     	if	0	;tblptru may be non-zero
 11176  0026B8                     	endif
 11177  0026B8                     	if	0	;tblptru may be non-zero
 11178  0026B8                     	endif
 11179  0026B8  0008               	tblrd		*
 11180  0026BA  50F5               	movf	tablat,w,c
 11181  0026BC  5E06               	subwf	?___wmul,f,c
 11182  0026BE  0E00               	movlw	0
 11183  0026C0  5A07               	subwfb	?___wmul+1,f,c
 11184  0026C2  0E30               	movlw	48
 11185  0026C4  2406               	addwf	?___wmul,w,c
 11186  0026C6  6E1A               	movwf	atoi@n,c
 11187  0026C8  0E00               	movlw	0
 11188  0026CA  2007               	addwfc	?___wmul+1,w,c
 11189  0026CC  6E1B               	movwf	atoi@n+1,c
 11190  0026CE  D7CF               	goto	l6671
 11191  0026D0                     l6679:
 11192  0026D0  0ED0               	movlw	208
 11193  0026D2  6E0F               	movwf	??_atoi& (0+255),c
 11194  0026D4  0EFF               	movlw	255
 11195  0026D6  6E10               	movwf	(??_atoi+1)& (0+255),c
 11196  0026D8  C00D  FFF6         	movff	atoi@s,tblptrl
 11197  0026DC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 11198  0026E0                     	if	0	;tblptru may be non-zero
 11199  0026E0                     	endif
 11200  0026E0                     	if	0	;tblptru may be non-zero
 11201  0026E0                     	endif
 11202  0026E0  0008               	tblrd		*
 11203  0026E2  50F5               	movf	tablat,w,c
 11204  0026E4  6E11               	movwf	(??_atoi+2)& (0+255),c
 11205  0026E6  6A12               	clrf	(??_atoi+3)& (0+255),c
 11206  0026E8  500F               	movf	??_atoi,w,c
 11207  0026EA  2611               	addwf	??_atoi+2,f,c
 11208  0026EC  5010               	movf	??_atoi+1,w,c
 11209  0026EE  2212               	addwfc	??_atoi+3,f,c
 11210  0026F0  5012               	movf	??_atoi+3,w,c
 11211  0026F2  E106               	bnz	u7390
 11212  0026F4  0E0A               	movlw	10
 11213  0026F6  5C11               	subwf	??_atoi+2,w,c
 11214  0026F8  B0D8               	btfsc	status,0,c
 11215  0026FA  D002               	goto	u7390
 11216  0026FC  0E01               	movlw	1
 11217  0026FE  D001               	goto	u7400
 11218  002700                     u7390:
 11219  002700  0E00               	movlw	0
 11220  002702                     u7400:
 11221  002702  6E17               	movwf	_atoi$1803,c
 11222  002704  6A18               	clrf	_atoi$1803+1,c
 11223  002706  5017               	movf	_atoi$1803,w,c
 11224  002708  1018               	iorwf	_atoi$1803+1,w,c
 11225  00270A  A4D8               	btfss	status,2,c
 11226  00270C  D7C7               	goto	l6675
 11227  00270E  5013               	movf	atoi@neg,w,c
 11228  002710  1014               	iorwf	atoi@neg+1,w,c
 11229  002712  A4D8               	btfss	status,2,c
 11230  002714  D00D               	goto	l1370
 11231  002716  C01A  F00F         	movff	atoi@n,??_atoi
 11232  00271A  C01B  F010         	movff	atoi@n+1,??_atoi+1
 11233  00271E  1E0F               	comf	??_atoi,f,c
 11234  002720  1E10               	comf	??_atoi+1,f,c
 11235  002722  4A0F               	infsnz	??_atoi,f,c
 11236  002724  2A10               	incf	??_atoi+1,f,c
 11237  002726  C00F  F00D         	movff	??_atoi,?_atoi
 11238  00272A  C010  F00E         	movff	??_atoi+1,?_atoi+1
 11239  00272E  0012               	return	
 11240  002730                     l1370:
 11241  002730  C01A  F00D         	movff	atoi@n,?_atoi
 11242  002734  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 11243  002738  0012               	return		;funcret
 11244  00273A                     __end_of_atoi:
 11245                           	opt callstack 0
 11246                           
 11247 ;; *************** function _isspace *****************
 11248 ;; Defined at:
 11249 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  c               2    5[COMRAM] int 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  2    5[COMRAM] int 
 11256 ;; Registers used:
 11257 ;;		wreg, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;Total ram usage:        7 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    2
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_atoi
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text50
 11278  00318C                     __ptext50:
 11279                           	opt callstack 0
 11280  00318C                     _isspace:
 11281                           	opt callstack 24
 11282                           
 11283                           ;incstack = 0
 11284  00318C  0E01               	movlw	1
 11285  00318E  6E0C               	movwf	_isspace$1828,c
 11286  003190  0E20               	movlw	32
 11287  003192  1806               	xorwf	isspace@c,w,c
 11288  003194  1007               	iorwf	isspace@c+1,w,c
 11289  003196  B4D8               	btfsc	status,2,c
 11290  003198  D014               	goto	l6463
 11291  00319A  0EF7               	movlw	247
 11292  00319C  6E08               	movwf	??_isspace& (0+255),c
 11293  00319E  0EFF               	movlw	255
 11294  0031A0  6E09               	movwf	(??_isspace+1)& (0+255),c
 11295  0031A2  C006  F00A         	movff	isspace@c,??_isspace+2
 11296  0031A6  C007  F00B         	movff	isspace@c+1,??_isspace+3
 11297  0031AA  5008               	movf	??_isspace,w,c
 11298  0031AC  260A               	addwf	??_isspace+2,f,c
 11299  0031AE  5009               	movf	??_isspace+1,w,c
 11300  0031B0  220B               	addwfc	??_isspace+3,f,c
 11301  0031B2  500B               	movf	??_isspace+3,w,c
 11302  0031B4  E104               	bnz	u6920
 11303  0031B6  0E05               	movlw	5
 11304  0031B8  5C0A               	subwf	??_isspace+2,w,c
 11305  0031BA  A0D8               	btfss	status,0,c
 11306  0031BC  D002               	goto	l6463
 11307  0031BE                     u6920:
 11308  0031BE  0E00               	movlw	0
 11309  0031C0  6E0C               	movwf	_isspace$1828,c
 11310  0031C2                     l6463:
 11311  0031C2  C00C  F006         	movff	_isspace$1828,?_isspace
 11312  0031C6  6A07               	clrf	?_isspace+1,c
 11313  0031C8  0012               	return		;funcret
 11314  0031CA                     __end_of_isspace:
 11315                           	opt callstack 0
 11316                           
 11317 ;; *************** function _isdigit *****************
 11318 ;; Defined at:
 11319 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  c               2    5[COMRAM] int 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  2    5[COMRAM] int 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;Total ram usage:        6 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    2
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_vfpfcnvrt
 11344 ;;		_atoi
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text51
 11349  003306                     __ptext51:
 11350                           	opt callstack 0
 11351  003306                     _isdigit:
 11352                           	opt callstack 25
 11353                           
 11354                           ;incstack = 0
 11355  003306  0ED0               	movlw	208
 11356  003308  6E08               	movwf	??_isdigit& (0+255),c
 11357  00330A  0EFF               	movlw	255
 11358  00330C  6E09               	movwf	(??_isdigit+1)& (0+255),c
 11359  00330E  C006  F00A         	movff	isdigit@c,??_isdigit+2
 11360  003312  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 11361  003316  5008               	movf	??_isdigit,w,c
 11362  003318  260A               	addwf	??_isdigit+2,f,c
 11363  00331A  5009               	movf	??_isdigit+1,w,c
 11364  00331C  220B               	addwfc	??_isdigit+3,f,c
 11365  00331E  500B               	movf	??_isdigit+3,w,c
 11366  003320  E106               	bnz	u6760
 11367  003322  0E0A               	movlw	10
 11368  003324  5C0A               	subwf	??_isdigit+2,w,c
 11369  003326  B0D8               	btfsc	status,0,c
 11370  003328  D002               	goto	u6760
 11371  00332A  0E01               	movlw	1
 11372  00332C  D001               	goto	u6770
 11373  00332E                     u6760:
 11374  00332E  0E00               	movlw	0
 11375  003330                     u6770:
 11376  003330  6E06               	movwf	?_isdigit,c
 11377  003332  6A07               	clrf	?_isdigit+1,c
 11378  003334  0012               	return		;funcret
 11379  003336                     __end_of_isdigit:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function ___wmul *****************
 11383 ;; Defined at:
 11384 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  multiplier      2    5[COMRAM] unsigned int 
 11387 ;;  multiplicand    2    7[COMRAM] unsigned int 
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;  product         2    9[COMRAM] unsigned int 
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  2    5[COMRAM] unsigned int 
 11392 ;; Registers used:
 11393 ;;		wreg, status,2, status,0, prodl, prodh
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11403 ;;Total ram usage:        6 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    2
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_doDisplayLog
 11410 ;;		_atoi
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	text52
 11415  0033DC                     __ptext52:
 11416                           	opt callstack 0
 11417  0033DC                     ___wmul:
 11418                           	opt callstack 24
 11419                           
 11420                           ;incstack = 0
 11421  0033DC  5006               	movf	___wmul@multiplier,w,c
 11422  0033DE  0208               	mulwf	___wmul@multiplicand,c
 11423  0033E0  CFF3 F00A          	movff	prodl,___wmul@product
 11424  0033E4  CFF4 F00B          	movff	prodh,___wmul@product+1
 11425  0033E8  5006               	movf	___wmul@multiplier,w,c
 11426  0033EA  0209               	mulwf	___wmul@multiplicand+1,c
 11427  0033EC  50F3               	movf	prodl,w,c
 11428  0033EE  260B               	addwf	___wmul@product+1,f,c
 11429  0033F0  5007               	movf	___wmul@multiplier+1,w,c
 11430  0033F2  0208               	mulwf	___wmul@multiplicand,c
 11431  0033F4  50F3               	movf	prodl,w,c
 11432  0033F6  260B               	addwf	___wmul@product+1,f,c
 11433  0033F8  C00A  F006         	movff	___wmul@product,?___wmul
 11434  0033FC  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 11435  003400  0012               	return		;funcret
 11436  003402                     __end_of___wmul:
 11437                           	opt callstack 0
 11438                           
 11439 ;; *************** function _lcdInst *****************
 11440 ;; Defined at:
 11441 ;;		line 64 in file "lcd.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  data            1    wreg     unsigned char 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  data            1    8[COMRAM] unsigned char 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  1    wreg      void 
 11448 ;; Registers used:
 11449 ;;		wreg, status,2, status,0, cstack
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/0
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;Total ram usage:        1 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; Hardware stack levels required when called:    5
 11462 ;; This function calls:
 11463 ;;		_send_byte
 11464 ;; This function is called by:
 11465 ;;		_doDisplayLog
 11466 ;;		_doOperation
 11467 ;;		_main
 11468 ;;		_initLCD
 11469 ;;		_mainEEPROM
 11470 ;;		_lcd_shift_cursor
 11471 ;;		_lcd_shift_display
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text53
 11476  0034C4                     __ptext53:
 11477                           	opt callstack 0
 11478  0034C4                     _lcdInst:
 11479                           	opt callstack 23
 11480                           
 11481                           ;incstack = 0
 11482                           ;lcdInst@data stored from wreg
 11483  0034C4  6E09               	movwf	lcdInst@data,c
 11484                           
 11485                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11486  0034C6  948C               	bcf	3980,2,c	;volatile
 11487                           
 11488                           ;lcd.c: 66:     send_byte(data);
 11489  0034C8  5009               	movf	lcdInst@data,w,c
 11490  0034CA  EC53  F01A         	call	_send_byte
 11491  0034CE  0012               	return		;funcret
 11492  0034D0                     __end_of_lcdInst:
 11493                           	opt callstack 0
 11494                           
 11495 ;; *************** function _send_byte *****************
 11496 ;; Defined at:
 11497 ;;		line 55 in file "lcd.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  data            1    wreg     unsigned char 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  data            1    7[COMRAM] unsigned char 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  1    wreg      void 
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0, cstack
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;Total ram usage:        1 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    4
 11518 ;; This function calls:
 11519 ;;		_send_nibble
 11520 ;; This function is called by:
 11521 ;;		_lcdInst
 11522 ;;		_initLCD
 11523 ;;		_putch
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text54
 11528  0034A6                     __ptext54:
 11529                           	opt callstack 0
 11530  0034A6                     _send_byte:
 11531                           	opt callstack 24
 11532                           
 11533                           ;incstack = 0
 11534                           ;send_byte@data stored from wreg
 11535  0034A6  6E08               	movwf	send_byte@data,c
 11536                           
 11537                           ;lcd.c: 57:     send_nibble(data >> 4);
 11538  0034A8  3808               	swapf	send_byte@data,w,c
 11539  0034AA  0B0F               	andlw	15
 11540  0034AC  EC3F  F01A         	call	_send_nibble
 11541                           
 11542                           ;lcd.c: 60:     send_nibble(data);
 11543  0034B0  5008               	movf	send_byte@data,w,c
 11544  0034B2  EC3F  F01A         	call	_send_nibble
 11545  0034B6  0012               	return		;funcret
 11546  0034B8                     __end_of_send_byte:
 11547                           	opt callstack 0
 11548                           
 11549 ;; *************** function _send_nibble *****************
 11550 ;; Defined at:
 11551 ;;		line 44 in file "lcd.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;  data            1    wreg     unsigned char 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  data            1    6[COMRAM] unsigned char 
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  1    wreg      void 
 11558 ;; Registers used:
 11559 ;;		wreg, status,2, status,0, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11569 ;;Total ram usage:        1 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:    3
 11572 ;; This function calls:
 11573 ;;		_pulse_e
 11574 ;; This function is called by:
 11575 ;;		_send_byte
 11576 ;;		_initLCD
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text55
 11581  00347E                     __ptext55:
 11582                           	opt callstack 0
 11583  00347E                     _send_nibble:
 11584                           	opt callstack 25
 11585                           
 11586                           ;incstack = 0
 11587                           ;send_nibble@data stored from wreg
 11588  00347E  6E07               	movwf	send_nibble@data,c
 11589                           
 11590                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11591  003480  508C               	movf	3980,w,c	;volatile
 11592  003482  0B0F               	andlw	15
 11593  003484  6E8C               	movwf	3980,c	;volatile
 11594                           
 11595                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11596  003486  3807               	swapf	send_nibble@data,w,c
 11597  003488  0BF0               	andlw	240
 11598  00348A  108C               	iorwf	3980,w,c	;volatile
 11599  00348C  6E8C               	movwf	3980,c	;volatile
 11600                           
 11601                           ;lcd.c: 48:     pulse_e();
 11602  00348E  ECB1  F019         	call	_pulse_e	;wreg free
 11603  003492  0012               	return		;funcret
 11604  003494                     __end_of_send_nibble:
 11605                           	opt callstack 0
 11606                           
 11607 ;; *************** function _pulse_e *****************
 11608 ;; Defined at:
 11609 ;;		line 28 in file "lcd.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  interruptSta    1    5[COMRAM] unsigned char 
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11627 ;;Total ram usage:        1 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:    2
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		_send_nibble
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text56
 11638  003362                     __ptext56:
 11639                           	opt callstack 0
 11640  003362                     _pulse_e:
 11641                           	opt callstack 25
 11642                           
 11643                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11644                           
 11645                           ;incstack = 0
 11646  003362  0E00               	movlw	0
 11647  003364  BEF2               	btfsc	4082,7,c	;volatile
 11648  003366  0E01               	movlw	1
 11649  003368  6E06               	movwf	pulse_e@interruptState,c
 11650                           
 11651                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11652  00336A  9EF2               	bcf	4082,7,c	;volatile
 11653                           
 11654                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11655  00336C  868C               	bsf	3980,3,c	;volatile
 11656                           
 11657                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11658  00336E  0E14               	movlw	20
 11659  003370                     u9687:
 11660  003370  2EE8               	decfsz	wreg,f,c
 11661  003372  D7FE               	bra	u9687
 11662  003374  D000               	nop2	
 11663                           
 11664                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11665  003376  968C               	bcf	3980,3,c	;volatile
 11666                           
 11667                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11668  003378  0E53               	movlw	83
 11669  00337A                     u9697:
 11670  00337A  2EE8               	decfsz	wreg,f,c
 11671  00337C  D7FE               	bra	u9697
 11672  00337E  F000               	nop	
 11673                           
 11674                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11675  003380  B006               	btfsc	pulse_e@interruptState,0,c
 11676  003382  D002               	bra	u6545
 11677  003384  9EF2               	bcf	4082,7,c	;volatile
 11678  003386  D001               	bra	u6546
 11679  003388                     u6545:
 11680  003388  8EF2               	bsf	4082,7,c	;volatile
 11681  00338A                     u6546:
 11682  00338A  0012               	return		;funcret
 11683  00338C                     __end_of_pulse_e:
 11684                           	opt callstack 0
 11685                           
 11686 ;; *************** function ___llmod *****************
 11687 ;; Defined at:
 11688 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  dividend        4    5[COMRAM] unsigned long 
 11691 ;;  divisor         4    9[COMRAM] unsigned long 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  counter         1   13[COMRAM] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  4    5[COMRAM] unsigned long 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11703 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;Total ram usage:        9 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    2
 11710 ;; This function calls:
 11711 ;;		Nothing
 11712 ;; This function is called by:
 11713 ;;		_main
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text57
 11718  002E40                     __ptext57:
 11719                           	opt callstack 0
 11720  002E40                     ___llmod:
 11721                           	opt callstack 28
 11722                           
 11723                           ;incstack = 0
 11724  002E40  500A               	movf	___llmod@divisor,w,c
 11725  002E42  100B               	iorwf	___llmod@divisor+1,w,c
 11726  002E44  100C               	iorwf	___llmod@divisor+2,w,c
 11727  002E46  100D               	iorwf	___llmod@divisor+3,w,c
 11728  002E48  B4D8               	btfsc	status,2,c
 11729  002E4A  D024               	goto	l1084
 11730  002E4C  0E01               	movlw	1
 11731  002E4E  6E0E               	movwf	___llmod@counter,c
 11732  002E50  D006               	goto	l8095
 11733  002E52                     l8093:
 11734  002E52  90D8               	bcf	status,0,c
 11735  002E54  360A               	rlcf	___llmod@divisor,f,c
 11736  002E56  360B               	rlcf	___llmod@divisor+1,f,c
 11737  002E58  360C               	rlcf	___llmod@divisor+2,f,c
 11738  002E5A  360D               	rlcf	___llmod@divisor+3,f,c
 11739  002E5C  2A0E               	incf	___llmod@counter,f,c
 11740  002E5E                     l8095:
 11741  002E5E  AE0D               	btfss	___llmod@divisor+3,7,c
 11742  002E60  D7F8               	goto	l8093
 11743  002E62                     u9270:
 11744  002E62  500A               	movf	___llmod@divisor,w,c
 11745  002E64  5C06               	subwf	___llmod@dividend,w,c
 11746  002E66  500B               	movf	___llmod@divisor+1,w,c
 11747  002E68  5807               	subwfb	___llmod@dividend+1,w,c
 11748  002E6A  500C               	movf	___llmod@divisor+2,w,c
 11749  002E6C  5808               	subwfb	___llmod@dividend+2,w,c
 11750  002E6E  500D               	movf	___llmod@divisor+3,w,c
 11751  002E70  5809               	subwfb	___llmod@dividend+3,w,c
 11752  002E72  A0D8               	btfss	status,0,c
 11753  002E74  D008               	goto	l8101
 11754  002E76  500A               	movf	___llmod@divisor,w,c
 11755  002E78  5E06               	subwf	___llmod@dividend,f,c
 11756  002E7A  500B               	movf	___llmod@divisor+1,w,c
 11757  002E7C  5A07               	subwfb	___llmod@dividend+1,f,c
 11758  002E7E  500C               	movf	___llmod@divisor+2,w,c
 11759  002E80  5A08               	subwfb	___llmod@dividend+2,f,c
 11760  002E82  500D               	movf	___llmod@divisor+3,w,c
 11761  002E84  5A09               	subwfb	___llmod@dividend+3,f,c
 11762  002E86                     l8101:
 11763  002E86  90D8               	bcf	status,0,c
 11764  002E88  320D               	rrcf	___llmod@divisor+3,f,c
 11765  002E8A  320C               	rrcf	___llmod@divisor+2,f,c
 11766  002E8C  320B               	rrcf	___llmod@divisor+1,f,c
 11767  002E8E  320A               	rrcf	___llmod@divisor,f,c
 11768  002E90  2E0E               	decfsz	___llmod@counter,f,c
 11769  002E92  D7E7               	goto	u9270
 11770  002E94                     l1084:
 11771  002E94  C006  F006         	movff	___llmod@dividend,?___llmod
 11772  002E98  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 11773  002E9C  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 11774  002EA0  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 11775  002EA4  0012               	return		;funcret
 11776  002EA6                     __end_of___llmod:
 11777                           	opt callstack 0
 11778                           
 11779 ;; *************** function _interruptHandler *****************
 11780 ;; Defined at:
 11781 ;;		line 1068 in file "main.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;		None
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2, status,0, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        0 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    1
 11802 ;; This function calls:
 11803 ;;		_updateMotorAEncoder
 11804 ;;		_updateMotorBEncoder
 11805 ;; This function is called by:
 11806 ;;		Interrupt level 2
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	intcode
 11811  000008                     __pintcode:
 11812                           	opt callstack 0
 11813  000008                     _interruptHandler:
 11814                           	opt callstack 17
 11815                           
 11816                           ;incstack = 0
 11817  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11818  00000A  EDE5  F018         	call	int_func,f	;refresh shadow registers
 11819                           
 11820                           	psect	intcode_body
 11821  0031CA                     __pintcode_body:
 11822                           	opt callstack 17
 11823  0031CA                     int_func:
 11824                           	opt callstack 17
 11825  0031CA  0006               	pop		; remove dummy address from shadow register refresh
 11826                           
 11827                           ;main.c: 1070:     if(INT1IF){
 11828  0031CC  A0F0               	btfss	4080,0,c	;volatile
 11829  0031CE  D005               	goto	i2l394
 11830                           
 11831                           ;main.c: 1073:         keyPressed = 1;
 11832  0031D0  0E01               	movlw	1
 11833  0031D2  0100               	movlb	0	; () banked
 11834  0031D4  6FE8               	movwf	_keyPressed& (0+255),b	;volatile
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;main.c: 1074:         INT1IF = 0;
 11838  0031D6  90F0               	bcf	4080,0,c	;volatile
 11839                           
 11840                           ;main.c: 1075:     } else if (TMR0IF) {
 11841  0031D8  D015               	goto	i2l397
 11842  0031DA                     i2l394:
 11843  0031DA  A4F2               	btfss	4082,2,c	;volatile
 11844  0031DC  D008               	goto	i2l396
 11845                           
 11846                           ;main.c: 1076:     INTCONbits.TMR0IF = 0;
 11847  0031DE  94F2               	bcf	4082,2,c	;volatile
 11848                           
 11849                           ;main.c: 1077:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 11850  0031E0  0EFB               	movlw	251
 11851  0031E2  6ED7               	movwf	4055,c	;volatile
 11852                           
 11853                           ;main.c: 1078:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 11854  0031E4  0E1E               	movlw	30
 11855  0031E6  6ED6               	movwf	4054,c	;volatile
 11856                           
 11857                           ;main.c: 1079:     millisecondsMeasured++;
 11858  0031E8  4A75               	infsnz	_millisecondsMeasured,f,c	;volatile
 11859  0031EA  2A76               	incf	_millisecondsMeasured+1,f,c	;volatile
 11860                           
 11861                           ;main.c: 1080:    } else if (INT2IF){
 11862  0031EC  D00B               	goto	i2l397
 11863  0031EE                     i2l396:
 11864  0031EE  A2F0               	btfss	4080,1,c	;volatile
 11865  0031F0  D004               	goto	i2l398
 11866                           
 11867                           ;main.c: 1081:        INT2IF = 0;
 11868  0031F2  92F0               	bcf	4080,1,c	;volatile
 11869                           
 11870                           ;main.c: 1082:        updateMotorBEncoder();
 11871  0031F4  EC64  F018         	call	_updateMotorBEncoder	;wreg free
 11872                           
 11873                           ;main.c: 1083:    } else if (INT0IF){
 11874  0031F8  D005               	goto	i2l397
 11875  0031FA                     i2l398:
 11876  0031FA  A2F2               	btfss	4082,1,c	;volatile
 11877  0031FC  D003               	goto	i2l397
 11878                           
 11879                           ;main.c: 1084:        INT0IF = 0;
 11880  0031FE  92F2               	bcf	4082,1,c	;volatile
 11881                           
 11882                           ;main.c: 1085:        updateMotorAEncoder();
 11883  003200  ECA6  F018         	call	_updateMotorAEncoder	;wreg free
 11884  003204                     i2l397:
 11885  003204  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11886  003206  0011               	retfie		f
 11887  003208                     __end_of_interruptHandler:
 11888                           	opt callstack 0
 11889                           
 11890 ;; *************** function _updateMotorBEncoder *****************
 11891 ;; Defined at:
 11892 ;;		line 138 in file "main.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;		None
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  directionPin    2    3[COMRAM] int 
 11897 ;;  interruptPin    2    1[COMRAM] int 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg, status,2, status,0
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;Total ram usage:        5 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_interruptHandler
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text59
 11921  0030C8                     __ptext59:
 11922                           	opt callstack 0
 11923  0030C8                     _updateMotorBEncoder:
 11924                           	opt callstack 17
 11925                           
 11926                           ;main.c: 139:   int interruptPinState = PORTBbits.RB2;
 11927                           
 11928                           ;incstack = 0
 11929  0030C8  A481               	btfss	3969,2,c	;volatile
 11930  0030CA  D003               	goto	i2u583_40
 11931  0030CC  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 11932  0030CE  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 11933  0030D0  D001               	goto	i2u583_48
 11934  0030D2                     i2u583_40:
 11935  0030D2  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 11936  0030D4                     i2u583_48:
 11937  0030D4  5001               	movf	??_updateMotorBEncoder,w,c
 11938  0030D6  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 11939  0030D8  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 11940                           
 11941                           ;main.c: 140:   int directionPin = PORTCbits.RC0;
 11942  0030DA  A082               	btfss	3970,0,c	;volatile
 11943  0030DC  D003               	goto	i2u584_40
 11944  0030DE  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 11945  0030E0  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 11946  0030E2  D001               	goto	i2u584_48
 11947  0030E4                     i2u584_40:
 11948  0030E4  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 11949  0030E6                     i2u584_48:
 11950  0030E6  5001               	movf	??_updateMotorBEncoder,w,c
 11951  0030E8  6E04               	movwf	updateMotorBEncoder@directionPin,c
 11952  0030EA  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 11953                           
 11954                           ;main.c: 141:   if(directionPin == interruptPinState){
 11955  0030EC  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 11956  0030EE  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 11957  0030F0  E108               	bnz	i2l5457
 11958  0030F2  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 11959  0030F4  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 11960  0030F6  A4D8               	btfss	status,2,c
 11961  0030F8  D004               	goto	i2l5457
 11962                           
 11963                           ;main.c: 142:     motorBDistance++;
 11964  0030FA  0100               	movlb	0	; () banked
 11965  0030FC  4BE2               	infsnz	_motorBDistance& (0+255),f,b	;volatile
 11966  0030FE  2BE3               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
 11967                           
 11968                           ;main.c: 143:   } else {
 11969  003100  0012               	return	
 11970  003102                     i2l5457:
 11971                           
 11972                           ;main.c: 144:     motorBDistance--;
 11973  003102  0100               	movlb	0	; () banked
 11974  003104  07E2               	decf	_motorBDistance& (0+255),f,b	;volatile
 11975  003106  A0D8               	btfss	status,0,c
 11976  003108  07E3               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
 11977                           
 11978                           ; BSR set to: 0
 11979  00310A  0012               	return		;funcret
 11980  00310C                     __end_of_updateMotorBEncoder:
 11981                           	opt callstack 0
 11982                           
 11983 ;; *************** function _updateMotorAEncoder *****************
 11984 ;; Defined at:
 11985 ;;		line 169 in file "main.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;		None
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  directionPin    2    3[COMRAM] int 
 11990 ;;  interruptPin    2    1[COMRAM] int 
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      void 
 11993 ;; Registers used:
 11994 ;;		wreg, status,2, status,0
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;Total ram usage:        5 bytes
 12005 ;; Hardware stack levels used:    1
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_interruptHandler
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text60
 12014  00314C                     __ptext60:
 12015                           	opt callstack 0
 12016  00314C                     _updateMotorAEncoder:
 12017                           	opt callstack 17
 12018                           
 12019                           ;main.c: 170:   int interruptPinState = PORTBbits.RB0;
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;incstack = 0
 12023  00314C  A081               	btfss	3969,0,c	;volatile
 12024  00314E  D003               	goto	i2u586_40
 12025  003150  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12026  003152  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12027  003154  D001               	goto	i2u586_48
 12028  003156                     i2u586_40:
 12029  003156  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12030  003158                     i2u586_48:
 12031  003158  5001               	movf	??_updateMotorAEncoder,w,c
 12032  00315A  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 12033  00315C  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 12034                           
 12035                           ;main.c: 171:   int directionPin = PORTEbits.RE1;
 12036  00315E  A284               	btfss	3972,1,c	;volatile
 12037  003160  D003               	goto	i2u587_40
 12038  003162  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12039  003164  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 12040  003166  D001               	goto	i2u587_48
 12041  003168                     i2u587_40:
 12042  003168  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 12043  00316A                     i2u587_48:
 12044  00316A  5001               	movf	??_updateMotorAEncoder,w,c
 12045  00316C  6E04               	movwf	updateMotorAEncoder@directionPin,c
 12046  00316E  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 12047                           
 12048                           ;main.c: 172:   if(directionPin == interruptPinState){
 12049  003170  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 12050  003172  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 12051  003174  E108               	bnz	i2l5465
 12052  003176  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 12053  003178  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 12054  00317A  A4D8               	btfss	status,2,c
 12055  00317C  D004               	goto	i2l5465
 12056                           
 12057                           ;main.c: 173:     motorADistance--;
 12058  00317E  0677               	decf	_motorADistance,f,c	;volatile
 12059  003180  A0D8               	btfss	status,0,c
 12060  003182  0678               	decf	_motorADistance+1,f,c	;volatile
 12061                           
 12062                           ;main.c: 174:   } else {
 12063  003184  0012               	return	
 12064  003186                     i2l5465:
 12065                           
 12066                           ;main.c: 175:     motorADistance++;
 12067  003186  4A77               	infsnz	_motorADistance,f,c	;volatile
 12068  003188  2A78               	incf	_motorADistance+1,f,c	;volatile
 12069  00318A  0012               	return		;funcret
 12070  00318C                     __end_of_updateMotorAEncoder:
 12071                           	opt callstack 0
 12072                           
 12073                           	psect	rparam
 12074  0000                     
 12075                           	psect	temp
 12076  00007A                     btemp:
 12077                           	opt callstack 0
 12078  00007A                     	ds	1
 12079  0000                     int$flags	set	btemp
 12080  0000                     wtemp8	set	btemp+1
 12081  0000                     ttemp5	set	btemp+1
 12082  0000                     ttemp6	set	btemp+4
 12083  0000                     ttemp7	set	btemp+8
 12084                           tosu	equ	0xFFF
 12085                           tosh	equ	0xFFE
 12086                           tosl	equ	0xFFD
 12087                           stkptr	equ	0xFFC
 12088                           pclatu	equ	0xFFB
 12089                           pclath	equ	0xFFA
 12090                           pcl	equ	0xFF9
 12091                           tblptru	equ	0xFF8
 12092                           tblptrh	equ	0xFF7
 12093                           tblptrl	equ	0xFF6
 12094                           tablat	equ	0xFF5
 12095                           prodh	equ	0xFF4
 12096                           prodl	equ	0xFF3
 12097                           indf0	equ	0xFEF
 12098                           postinc0	equ	0xFEE
 12099                           postdec0	equ	0xFED
 12100                           preinc0	equ	0xFEC
 12101                           plusw0	equ	0xFEB
 12102                           fsr0h	equ	0xFEA
 12103                           fsr0l	equ	0xFE9
 12104                           wreg	equ	0xFE8
 12105                           indf1	equ	0xFE7
 12106                           postinc1	equ	0xFE6
 12107                           postdec1	equ	0xFE5
 12108                           preinc1	equ	0xFE4
 12109                           plusw1	equ	0xFE3
 12110                           fsr1h	equ	0xFE2
 12111                           fsr1l	equ	0xFE1
 12112                           bsr	equ	0xFE0
 12113                           indf2	equ	0xFDF
 12114                           postinc2	equ	0xFDE
 12115                           postdec2	equ	0xFDD
 12116                           preinc2	equ	0xFDC
 12117                           plusw2	equ	0xFDB
 12118                           fsr2h	equ	0xFDA
 12119                           fsr2l	equ	0xFD9
 12120                           status	equ	0xFD8


Data Sizes:
    Strings     367
    Constant    35
    Data        9
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128     86     113
    BANK1           256     16      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[3]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1841_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[3]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[3]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[10]), STR_24(CODE[3]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_51(CODE[16]), STR_49(CODE[14]), 
		 -> STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), 
		 -> STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), 
		 -> STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _tirePositioning->_abs
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  163070
                                             84 BANK0      2     2      0
                                              0 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     892
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0     130
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         56    56      0   89483
                                             32 BANK0     52    52      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                             _printf
              _requestIsTireDropDone
         _sendArduinoTireDropRequest
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     19    17      2    1162
                                             27 COMRAM    19    17      2
                                _abs
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0     965
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1030
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     931
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _errorCorrectedMove                                  24    10     14   34767
                                              8 BANK0     24    10     14
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (2) _setMotorSpeeds                                      14     8      6   15172
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (3) _set_pwm_duty_cycle                                  20    12      8   11174
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2006
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1057
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    4313
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2543
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4727
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3982
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   36480
                                             14 BANK0     13    11      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33654
                                              0 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30579
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   30016
                                             75 COMRAM    33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7287
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7793
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     453
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5536
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5257
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2895
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1792
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       _abs
         ___aomod (ARG)
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0     14A      38        8.6%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     10      30       8       18.8%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     56      71       5       88.3%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A       6        0.0%
DATA                 0      0     264       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 24 14:34:44 2019

                          ___fldiv@aexp 0045                            ___fldiv@bexp 0044  
                          ___fldiv@sign 003D                             __CFG_CPD$ON 000000  
                   ___wmul@multiplicand 0008                             __CFG_BORV$3 000000  
        doOperation@motorBStartDistance 00BE                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                             __CFG_OSC$HS 000000  
                                   l244 2B7A                                     l246 2B8A  
                                   l255 28D8                                     l256 28EC  
                                   l257 28FC                                     l371 0894  
                                   l529 2B04                                     l547 1C26  
                                   l549 1C2E                                     l576 23DC  
                                   l595 1E18                                     l691 2C74  
                                   l597 1E20                                     l929 29DE  
                          __CFG_CPB$OFF 000000                                     _PR2 000FCB  
                                   _PSA 007EAB                                     _abs 3274  
                                   _pad 2AD4                            ___awmod@sign 000B  
                      ??_init_motor_PWM 0006                                     wreg 000FE8  
                          ___flmul@aexp 0021                            ___flmul@bexp 0026  
                          ___flmul@sign 0020                            ___flmul@temp 002B  
                          ___flmul@prod 0027                       _doDisplayLog$2186 0099  
            __end_of_errorCorrectedMove 1BB2                            __CFG_LVP$OFF 000000  
                          ___fltol@exp1 0057                            __CFG_WDT$OFF 000000  
                                  ?_abs 0018                                    l1209 15CE  
                                  l1218 1634                                    l1219 1630  
                                  l1084 2E94                                    l1260 18A2  
                                  l1326 2576                                    l1319 24F8  
                                  l1248 1838                                    l1193 14FC  
                                  l1370 2730                                    l1194 14DA  
                                  l1339 329C                                    l1259 18A6  
                                  l1437 3034                                    l1278 10E8  
                                  l1295 1386                                    l1287 1300  
                                  l1288 12FC                                    l6301 3212  
                                  l7005 2A82                                    ?_pad 001A  
                                  l6311 3092                                    l7023 2AC2  
                                  l7015 2A9A                                    l6305 3228  
                                  l7201 0404                                    l7121 0072  
                                  l7113 0058                                    l7017 2AA6  
                                  l7009 2A92                                    l7041 252C  
                                  l7033 2508                                    l6411 232E  
                                  l7211 044A                                    l7115 005C  
                                  l7051 259C                                    l7043 2538  
                                  l8003 0BEA                                    l8011 0C0A  
                                  l8101 2E86                                    l6309 308E  
                                  l6333 2AFC                                    l6501 1C48  
                                  l7133 0084                                    l7125 0078  
                                  l7117 006C                                    l7053 25A8  
                                  l7045 255E                                    l8013 0C3E  
                                  l6343 2B54                                    l6335 2B0E  
                                  l6415 2354                                    l6407 2318  
                                  l6431 278A                                    l7207 0440  
                                  l7151 013E                                    l7039 2526  
                                  l6329 2AEE                                    l6505 1C58  
                                  l6601 1E64                                    l7153 015C  
                                  l7137 008E                                    l7129 007E  
                                  l7217 0462                                    l7321 14E8  
                                  l8025 0C76                                    l8017 0C5A  
                                  l8033 0C88                                    l8201 05F4  
                                  l6291 2D82                                    l6339 2B26  
                                  l6451 283C                                    l6443 2800  
                                  l6435 27A4                                    l6427 2766  
                                  l6515 1D50                                    l7155 016A  
                                  l7139 00D0                                    l7323 14EC  
                                  l7243 13E6                                    l6437 27B8  
                                  l7421 16A8                                    l7309 148E  
                                  l7069 25E8                                    l8029 0C82  
                                  l6463 31C2                                    l6471 2F6C  
                                  l6383 225A                                    l6447 2816  
                                  l6535 1DB8                                    l6551 23A0  
                                  l6623 1F14                                    l6631 1F8A  
                                  l7423 16AA                                    l7271 1432  
                                  l7247 13EA                                    l7503 2C66  
                                  l8311 0858                                    l8303 0840  
                                  l6473 2F78                                    l6561 23F4  
                                  l6609 1E86                                    l7169 0216  
                                  l7417 16A0                                    l7409 167A  
                                  l7345 1542                                    l7337 1520  
                                  l6705 16F2                                    l7441 2B7E  
                                  l6395 22A8                                    l6539 1DD0  
                                  l7187 0336                                    l7179 02C8  
                                  l7347 1546                                    l7355 1558  
                                  l7267 142E                                    l6811 190E  
                                  l8083 2FB0                                    l8307 084C  
                                  l8219 065C                                    l8163 04B4  
                                  l8093 2E52                                    l6653 260C  
                                  l6397 22BC                                    l6389 2282  
                                  l6565 240C                                    l7373 15F2  
                                  l7365 15BE                                    l6821 1944  
                                  l6725 1732                                    l6709 16F6  
                                  l7445 2B8E                                    l8253 074A  
                                  l8181 0548                                    l8173 051A  
                                  l8095 2E5E                                    l6671 266E  
                                  l6663 2656                                    l6655 2610  
                                  l6487 1C08                                    l6583 249C  
                                  l6575 2468                                    l6647 2002  
                                  l7383 1608                                    l7279 1452  
                                  l6823 1946                                    l6815 1938  
                                  l6807 18EA                                    l6751 1798  
                                  l6743 1780                                    l7607 290C  
                                  l8319 0866                                    l8239 06E4  
                                  l8271 07BA                                    l6673 2674  
                                  l6569 242A                                    l7481 2F16  
                                  l7713 2D1A                                    l6761 17E8  
                                  l6737 176A                                    l6729 1736  
                                  l6913 12A8                                    l7641 335E  
                                  l6675 269C                                    l6579 2484  
                                  l6595 1E34                                    l7483 2F3C  
                                  l7811 0FB4                                    l6843 1094  
                                  l7491 2C26                                    l8291 0816  
                                  l8283 07FC                                    l8259 075C  
                                  l6669 2666                                    l7733 2D60  
                                  l7725 2D48                                    l7717 2D28  
                                  l7709 2D0E                                    l7389 1612  
                                  l6781 184E                                    l6861 10D4  
                                  l6845 1098                                    l7493 2C32  
                                  l8269 0788                                    l6679 26D0  
                                  l7815 0FBE                                    l7807 0FA6  
                                  l7719 2D30                                    l6775 1836  
                                  l6943 1362                                    l6919 12C6  
                                  l6871 1106                                    l6863 10D8  
                                  l6847 10A8                                    l7663 1B88  
                                  l7655 1B64                                    l7591 28AC  
                                  l7583 2870                                    l8295 0824  
                                  l8287 080A                                    l7825 1018  
                                  l7833 1036                                    l7745 0CE0  
                                  l7729 2D52                                    l6769 1810  
                                  l7913 098A                                    l7905 093E  
                                  l7819 0FD4                                    l7835 1054  
                                  l6787 186C                                    l6955 13A4  
                                  l6939 1344                                    l7667 1B94  
                                  l7659 1B70                                    l8299 0832  
                                  l6973 29C8                                    l6965 297E  
                                  l7597 28C4                                    l7767 0DCA  
                                  l7927 09C8                                    l7793 0F48  
                                  l6969 29B2                                    l7961 0B16  
                                  l7795 0F66                                    l6979 2A16  
                                  l7947 0A64                                    l6989 2A38  
                                  l7949 0AA4                                    _P1M0 007DEE  
                                  l7991 0BB2                                    l7975 0B86  
                                  _P1M1 007DEF                                    l7993 0BBA  
                                  l7985 0BA6                                    l7997 0BCA  
                                  l7989 0BAC                                    STR_1 FD14  
                                  STR_2 FCC8                                    STR_3 FD19  
                                  STR_4 FD0F                                    STR_5 FC00  
                                  STR_6 FD18                                    STR_7 FC49  
                                  STR_8 FD18                                    STR_9 FBE0  
                                  _LATB 000F8A                                    _LATD 000F8C  
                                  u7000 1C42                                    u7010 1D5E  
                                  u7030 1D80                                    u7031 1D7E  
                                  u7040 1D8E                                    u7200 1E0E  
                                  u7050 1D94                                    u7140 2420  
                                  u7300 1F9A                                    u7220 1E82  
                                  u7070 1DA2                                    u7150 244C  
                                  u7230 1EB8                                    u8030 25B2  
                                  u8110 21EE                                    u7400 2702  
                                  u6600 30B4                                    u7320 1FBC  
                                  u7240 1EBA                                    u7321 1FBA  
                                  u7330 1FCA                                    u8130 2212  
                                  u7091 2380                                    u7180 24B0  
                                  u6700 3300                                    u6620 32CE  
                                  u7340 1FD0                                    u7260 1EF2  
                                  u8300 036A                                    u8220 01A2  
                                  u9100 0966                                    u7157 2442  
                                  u8125 21F0                                    u6710 326C  
                                  u6630 32D0                                    u7270 1EF4  
                                  u8230 01A4                                    u9110 0976  
                                  u6607 30AA                                    u6560 2D7A  
                                  u6640 3282                                    u6720 326E  
                                  u8240 01B0                                    u9120 099A  
                                  u6545 3388                                    u6801 2288  
                                  u8145 2214                                    u6546 338A  
                                  u7370 2652                                    u6730 301C  
                                  u7290 1F66                                    u8410 14B0  
                                  u9130 09AA                                    u9106 0968  
                                  u6580 2DC2                                    u6820 22C0  
                                  u6740 301E                                    u8420 14C0  
                                  u9220 0C6A                                    u9116 0978  
                                  u7390 2700                                    u8270 024A  
                                  u8430 14C2                                    u7630 18F8  
                                  u9126 099C                                    u7295 1F54  
                                  u6760 332E                                    u6920 31BE  
                                  u9080 102E                                    u7640 191C  
                                  u9136 09AC                                    u9400 0820  
                                  u6770 3330                                    u6690 32FE  
                                  u8610 162A                                    u7730 10F4  
                                  u9250 2FF2                                    u6940 1BDA  
                                  u8460 1504                                    u7820 1352  
                                  u7740 126A                                    u7900 2A26  
                                  u9180 0BA2                                    u9270 2E62  
                                  u6950 1BDC                                    u7590 189C  
                                  u7830 1370                                    u7910 2A56  
                                  u6880 27BC                                    u7745 1260  
                                  u7915 2A4C                                    u9507 064E  
                                  u6980 1C1C                                    u7780 12F6  
                                  u8900 1B5C                                    u9517 066A  
                                  u8670 1686                                    u8590 1616  
                                  u7950 2AAC                                    u8735 341E  
                                  u9607 09F2                                    u9527 06F2  
                                  u8920 1B80                                    u8736 3420  
                                  u8760 2C36                                    u9617 0AC6  
                                  u9537 0776                                    u9627 0B50  
                                  u9547 07F0                                    u8780 287A  
                                  u9637 0CC8                                    u9557 08AA  
                                  u8790 288C                                    u9647 0CEE  
                                  u9567 2DDC                                    u9487 0556  
                                  u8880 2920                                    u9657 0DD8  
                                  u8945 2ECE                                    u9577 2DF4  
                                  u9497 0602                                    u9667 0F9A  
                                  u9587 2E06                                    u8980 2D34  
                                  u8788 287C                                    u9677 105C  
                                  u9597 2E28                                    u8798 288E  
                                  u9687 3370                                    u9697 337A  
                                  abs@a 0018                                    _dbuf 0100  
                                  _atoi 25FA                                    _ctoa 2F58  
                                  _main 0496                                    _dtoa 1BB2  
              __end_of_interruptHandler 3208                                    _keys FB9D  
                                  _logs 0130                                    _prec 00DE  
                                  _nout 00DA                                    pad@i 0021  
                                  pad@p 001E                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 0023                                    fsr2l 000FD9  
                                  _stoa 2376                                    btemp 007A  
                                  _xtoa 1DFA                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                         __CFG_IESO$OFF 000000                 __size_of_setMotorSpeeds 0096  
                       ___fldiv@new_exp 003E                     __end_of_EncoderInit 347E  
                         __CFG_MCLRE$ON 000000      tirePositioning@bottomPreviousState 0025  
                          ___param_bank 000000                                   ??_abs 001A  
                                 ??_pad 0020                __size_of_tirePositioning 00EC  
                 I2C_Master_Read@ackBit 0007                        ?_I2C_Master_Init 0013  
                      ?_I2C_Master_Read 0001                        ?_I2C_Master_Wait 0001  
                      ?_I2C_Master_Stop 0001                          replaceOldLog@i 0006  
                         ___fltol@sign1 0056                             ?_TIMER_INIT 0001  
                       __end_of___aodiv 2376                                   ?_atoi 000D  
                                 ?_ctoa 0025                         __end_of___fladd 16C6  
                                 ?_main 0001                                   ?_dtoa 0025  
                       __end_of___aomod 285E                                   _CCP1X 007DED  
                       __end_of___fldiv 194E                                   _CCP1Y 007DEC  
                                 _CCP2X 007DD5                                   _CCP2Y 007DD4  
                                 _EEADR 000FA9                                   STR_10 FD0B  
                                 STR_11 FD1B                                   STR_20 FD24  
                                 STR_12 FD2D                                   STR_13 FD0F  
                                 STR_21 FD27                                   STR_30 FD18  
                                 STR_22 FD21                                   STR_14 FC2D  
                                 STR_15 FD0F                                   STR_31 FCDC  
                                 STR_23 FCD2                                   STR_24 FD24  
                                 STR_40 FD18                                   STR_32 FD18  
                                 STR_16 FBC0                                   STR_25 FCD2  
                                 STR_17 FD18                                   STR_41 FC80  
                                 STR_33 FC57                                   STR_50 FD18  
                                 STR_42 FD18                                   STR_34 FD18  
                                 STR_26 FD18                                   STR_18 FC65  
                                 STR_19 FD24                                   STR_27 FCF0  
                                 STR_35 FC8D                                   STR_43 FBF0  
                                 STR_51 FBD0                                   STR_44 FD18  
                                 STR_36 FD18                                   STR_52 FC9A  
                                 STR_28 FC0F                         __end_of___awmod 2D6A  
                                 STR_37 FD02                                   STR_45 FCF9  
                                 STR_53 FCE6                                   STR_29 FC1E  
                                 STR_46 FD18                                   STR_38 FD18  
                                 STR_54 FCB2                                   STR_55 FCBD  
                                 STR_47 FCA7                                   STR_39 FC73  
                                 STR_48 FD18                                   STR_49 FC3B  
                       __end_of___flmul 13BA                         __end_of___flsub 3084  
                       __end_of___fltol 2AD4                                   ?_stoa 0013  
                       __end_of___lldiv 2C86                                   ?_xtoa 0025  
                       __end_of___llmod 2EA6                                   _T0PS0 007EA8  
                                 _T0PS1 007EA9                                   _T0PS2 007EAA  
                          main@keyValue 012F                                   i2l394 31DA  
                                 i2l396 31EE                                   i2l397 3204  
                                 i2l398 31FA                            vfpfcnvrt@fmt 004E  
                                 _TMR0H 000FD7                            vfpfcnvrt@llu 005E  
                                 _TMR0L 000FD6                                   _PORTB 000F81  
                                 _TRISD 000F95                           __CFG_PWRT$OFF 000000  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                       __end_of_lcdInst 34D0                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                            main@keypress 012B  
                        __CFG_EBTR3$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
           set_pwm_duty_cycle@duty_valA 0064             set_pwm_duty_cycle@duty_valB 0066  
                       __end_of_initLCD 2E40                          __CFG_EBTRB$OFF 000000  
       tirePositioning@topPreviousState 0023                                   _flags 00E0  
__end_ofinit_motor_PWM@TIMER2_PRESCALER FBB9          init_motor_PWM@TIMER2_PRESCALER FBB8  
                                 _fputc 2D6A                         __end_of_isalpha 3274  
                                 _fputs 3208                         __end_of_isdigit 3336  
                                 atoi@n 001A                                   pad@fp 001A  
                                 atoi@s 000D                                   _width 00DC  
                                 ctoa@c 0027                                   _putch 34B8  
                                 ctoa@w 0028                                   main@i 012C  
                                 dtoa@d 0027                                   dtoa@i 0047  
                                 dtoa@n 003F                                   dtoa@p 0039  
                                 dtoa@s 003D                                   dtoa@w 003B  
                       __end_of_islower 32D6                         __end_of_isspace 31CA  
                       __end_of_isupper 3306                                   tablat 000FF5  
           __end_of_updateMotorAEncoder 318C                         send_nibble@data 0007  
                                 plusw1 000FE3                                   plusw2 000FDB  
                  __size_of_doOperation 0404             __end_of_updateMotorBEncoder 310C  
                                 stoa@i 001F                                   stoa@l 0027  
                                 stoa@p 0025                                   stoa@s 0015  
                                 stoa@w 0021                         __end_of_pulse_e 338C  
                                 ttemp5 007B                                   ttemp6 007E  
                                 ttemp7 0082                                   status 000FD8  
           I2C_Master_Read@receivedByte 0008               requestIsTireDropDone@data 0009  
                                 wtemp8 007B                                   xtoa@c 004A  
                                 xtoa@d 0027                                   xtoa@i 0048  
                                 xtoa@n 0040                                   xtoa@p 003C  
                                 xtoa@w 003E                                   xtoa@x 002F  
                       __end_of_toupper 303E                errorCorrectedMove@ASpeed 009C  
              errorCorrectedMove@BSpeed 009E                          __CFG_PBADEN$ON 000000  
                          _toupper$1892 0012                         __initialization 2C86  
                   main@currentLogState 012D                            __end_of_atoi 273A  
                          __end_of_ctoa 2FA8                            __end_of_main 08B6  
                          __end_of_dtoa 1DFA                            __end_of_keys FBAE  
                          __end_of_stoa 24BA                   __size_of_doDisplayLog 03AE  
                          __end_of_xtoa 202C                                  ??_atoi 000F  
                                ??_ctoa 0028                                  ??_main 00D4  
                                ??_dtoa 002F                                  ??_stoa 0017  
                                ??_xtoa 0030                           __activetblptr 000002  
               set_pwm_duty_cycle@dutyA 0058                 set_pwm_duty_cycle@dutyB 005C  
                     ?_I2C_Master_Start 0001                       ?_I2C_Master_Write 0007  
                 __end_of_replaceOldLog 2FF4                      ??_I2C_Master_Start 0007  
                  _millisecondsMeasured 0075                                  _ADCON1 000FC1  
                    ??_I2C_Master_Write 0009                                  _CCP1M0 007DE8  
                                _CCP1M1 007DE9                                  _CCP1M2 007DEA  
                                _CCP1M3 007DEB                                  _CCP2M0 007DD0  
                                _CCP2M1 007DD1                                  _CCP2M2 007DD2  
                                _CCP2M3 007DD3                            ?_send_nibble 0001  
                                ?_fputc 000A                        ___llmod@dividend 0006  
                                ?_fputs 0013                                  _EEDATA 000FA8  
                                _CCPR1L 000FBE                                  _CCPR2L 000FBB  
                                _EECON2 000FA7                                  _T08BIT 007EAE  
                doOperation@tiresOnPole 00C0                                  ?_putch 0001  
                doOperation@tiresToDrop 00C9                                  _INT0IE 007F94  
                                _INT0IF 007F91                                  _INT1IE 007F83  
                                _INT1IF 007F80                                  _INT2IE 007F84  
                                _INT2IF 007F81                                  i2l5465 3186  
                                i2l5457 3102                      _set_pwm_duty_cycle 202C  
                           _EncoderInit 3466                           vfpfcnvrt@done 0068  
                                _TMR0IE 007F95                                  _TMR0IF 007F92  
                                _TMR0ON 007EAF                                  _TMR2ON 007E52  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 25FA                            _doDisplayLog 0CBA  
                   __size_of_TIMER_INIT 001E                     ?_set_pwm_duty_cycle 0058  
                        __CFG_XINST$OFF 000000                   _encoderAInterruptLast 00E4  
                          vfprintf@cfmt 0073                                  ___flge 294A  
                             ??___aodiv 0016                               ??___fladd 0035  
                             ??___aomod 0016                                  ___wmul 33DC  
                             ??___fldiv 0035                          __CFG_STVREN$ON 000000  
                             ??___awmod 000A                               ??___flmul 001C  
                             ??___flsub 004E                               ??___fltol 0052  
                             ??___lldiv 000E                               ??___llmod 000E  
                      doOperation@F3355 00D6                                  clear_0 2CC0  
                                clear_1 2CD2                                  clear_2 2CDE  
                       ___awmod@divisor 0008                         ___awmod@counter 000A  
                             ??_lcdInst 0009                                  _printf 33B4  
                                pad@buf 001C                                  ctoa@fp 0025  
           ?_sendArduinoTireDropRequest 0001                                  dtoa@fp 0025  
       updateMotorBEncoder@directionPin 0004                                  _strlen 3084  
                             ??_initLCD 000A                                  fputc@c 000A  
                                fputs@c 0017                                  fputs@i 0018  
                          __pdataCOMRAM 0079                                  fputs@s 0013  
                             ??_isalpha 0008                               ??_isdigit 0008  
                 _requestIsTireDropDone 3336                    ??_set_pwm_duty_cycle 0060  
                     ??_tirePositioning 001E                               ??_islower 0008  
                          __mediumconst FB9C                               ??_isspace 0008  
      doOperation@currentOperationState 00D1                                  tblptrh 000FF7  
                             ??_isupper 0008                                  tblptrl 000FF6  
                                tblptru 000FF8                                  stoa@cp 0023  
                                stoa@fp 0013                        __end_of_vfprintf 2F58  
                             ??_pulse_e 0006                                  xtoa@fp 0025  
                             ??_toupper 000E                              ___flge@ff1 0006  
                            ___flge@ff2 000A                            ___xxtofl@arg 0010  
                 pulse_e@interruptState 0006                            ___xxtofl@exp 000F  
                          ___xxtofl@val 0006                              __accesstop 0080  
               __end_of__initialization 2CEC                     _setMotorSpeeds$2188 0080  
                   _setMotorSpeeds$2189 0084                           ___rparam_used 000001  
                        _setMotorSpeeds 2B6E                              ___fltol@f1 004E  
                  __end_of_happynewyear FBB5                          __pcstackCOMRAM 0001  
                          __pidataBANK0 34DA                           __end_of_fputc 2DD6  
                         __end_of_fputs 3240                           __end_of_putch 34C4  
                               ??_fputc 000E                                 ??_fputs 0017  
                               ??_putch 0009                              __pbssBANK0 00D6  
                            __pbssBANK1 0100                  __end_of_setMotorSpeeds 2C04  
                     ?_interruptHandler 0001                      _errorCorrectedMove 194E  
                    ??_interruptHandler 0006                   _encoderBInterruptLast 00E5  
                               ?___flge 0006                                 ?___wmul 0006  
    tirePositioning@distanceRecordedTop 0027                     ?_errorCorrectedMove 0088  
                    __size_of_send_byte 0012                            ??_TIMER_INIT 0006  
                               ?_printf 0080                                 ?_strlen 0006  
                               _T2CKPS0 007E50                                 _T2CKPS1 007E51  
           tirePositioning@topBreakbeam 002B                  ?_requestIsTireDropDone 0001  
                    __size_of_robotInit 0040                               ?___xxtofl 0006  
                    __size_of_vfpfcnvrt 0484                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                  ??_errorCorrectedMove 0096                    __size_of_send_nibble 0016  
                       ?_setMotorSpeeds 006C                      __end_of_TIMER_INIT 3466  
                               __Hparam 0000                              _keyPressed 00E8  
                               __Lparam 0000         tirePositioning@maxOperationTime 001C  
                       __size_of___flge 00D0                                 ___aodiv 222E  
                               ___fladd 13BA                                 ___aomod 273A  
                               ___fldiv 16C6                                 ___awmod 2CFA  
                               ___flmul 1068                                 ___flsub 303E  
                               ___fltol 2A1A                                 ___lldiv 2C04  
                       __size_of___wmul 0026                                 ___llmod 2E40  
                             ?_vfprintf 006D                                 __pcinit 2C86  
                               __ramtop 1000                                 _lcdInst 34C4  
                               __ptext0 0496                                 __ptext1 310C  
                               __ptext2 2DD6                                 __ptext3 2EA6  
                               __ptext4 2C04                                 __ptext5 3466  
                               __ptext6 2FA8                                 __ptext7 08B6  
                               __ptext8 285E                                 __ptext9 3426  
                       __size_of_printf 0028                               _T0CONbits 000FD5  
                       __size_of_strlen 0044                                 _initLCD 2DD6  
                        _motorADistance 0077                            __size_of_abs 0032  
                          __size_of_pad 009A                                 _isalpha 3240  
                               _isdigit 3306                              ??___xxtofl 000A  
                      ___awmod@dividend 0006                          _motorBDistance 00E2  
                               _islower 32A6                                 _isspace 318C  
                               _isupper 32D6                __size_of_I2C_Master_Init 005C  
              __size_of_I2C_Master_Read 0024                __size_of_I2C_Master_Wait 0012  
              __size_of_I2C_Master_Stop 0008                                 atoi@neg 0013  
                               _pulse_e 3362                           ??_doOperation 00A0  
                        __pintcode_body 31CA                                 _toupper 2FF4  
           _topBreakBeamTriggeredChange 00E7                    end_of_initialization 2CEC  
                 __end_of_LCD_SIZE_HORZ FBB8                       __end_of_send_byte 34B8  
                 __end_of_LCD_SIZE_VERT FBB7                            ?_EncoderInit 0001  
                 doOperation@isDoneDrop 00C4                                 fputc@fp 000C  
                         __Lmediumconst FB9C                                 int_func 31CA  
                               fputs@fp 0015                 __size_of_init_motor_PWM 0028  
                     __end_of_robotInit 314C               __size_of_I2C_Master_Start 0008  
             __size_of_I2C_Master_Write 000A                         ___lldiv@divisor 000A  
                       ___lldiv@counter 0012            __size_of_updateMotorAEncoder 0040  
                     __end_of_vfpfcnvrt 0496      tirePositioning@startDistanceBottom 0021  
          __size_of_updateMotorBEncoder 0044                    doDisplayLog@keyValue 0096  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                         _tirePositioning 285E  
                            ??_vfprintf 0073                    doDisplayLog@keypress 0094  
                               strlen@a 0008                                 strlen@s 0006  
                             _PORTBbits 000F81                               _PORTCbits 000F82  
                             _PORTEbits 000F84    updateMotorBEncoder@interruptPinState 0002  
                           ___fladd@grs 003C                           ___xxtofl@sign 000E  
                             _TRISAbits 000F92             doOperation@bottomLaserState 00D2  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISEbits 000F96      doOperation@millisecondsMeasuredOld 00C7  
                           ___fldiv@grs 0040                             ___fldiv@rem 0039  
                          _happynewyear FBAE                             ___flmul@grs 0022  
                         send_byte@data 0008                     __end_of_doOperation 0CBA  
                __size_of_replaceOldLog 004C                          __end_of___flge 2A1A  
                           vfpfcnvrt@ap 0050                             vfpfcnvrt@cp 0066  
                           vfpfcnvrt@fp 004C                             vfpfcnvrt@ll 0056  
                        __end_of___wmul 3402                           __pidataCOMRAM 34F2  
                        __end_of_printf 33DC                          __end_of_strlen 30C8  
                   start_initialization 2C86             __size_of_set_pwm_duty_cycle 0202  
             setMotorSpeeds@motorASpeed 006C               setMotorSpeeds@motorBSpeed 0070  
                           __end_of_abs 32A6                             __end_of_pad 2B6E  
               errorCorrectedMove@error 009A                       ??_I2C_Master_Init 0017  
                     ??_I2C_Master_Read 0007                       ??_I2C_Master_Wait 0006  
                     ??_I2C_Master_Stop 0007                         ___llmod@divisor 000A  
                       ___llmod@counter 000E                 __end_of_tirePositioning 294A  
                           vfprintf@fmt 006F                                ??___flge 000E  
                              ??___wmul 000A                   main@currentRobotState 012E  
              I2C_Master_Init@clockFreq 0013                             __pdataBANK0 00E9  
               ??_requestIsTireDropDone 0009                        __CFG_LPT1OSC$OFF 000000  
       tirePositioning@startDistanceTop 001F                         doOperation@send 00B7  
                              ??_printf 0075               __size_of_interruptHandler 3200  
                              ??_strlen 0008                               ___fladd@a 0031  
                             ___fladd@b 002D                               ___fldiv@a 0031  
                             ___fldiv@b 002D                             __pbssBIGRAM 0130  
                             ___flmul@a 0018                               ___flmul@b 0014  
                           __pbssCOMRAM 0075                               ___flsub@a 004A  
                             ___flsub@b 0046                           __pcstackBANK0 0080  
                         __pcstackBANK1 0120                        ___aodiv@dividend 0006  
                         _replaceOldLog 2FA8                        ??_setMotorSpeeds 0072  
                     __size_of___xxtofl 0140                             _doOperation 08B6  
                setMotorSpeeds@Aforward 006E                  setMotorSpeeds@Bforward 006F  
                        _init_motor_PWM 338C                               _atoi$1801 0015  
                             _atoi$1802 0019                               _atoi$1803 0017  
                  __size_of_EncoderInit 0018                        _I2C_Master_Start 34EA  
                      _I2C_Master_Write 34D0                doOperation@topLaserState 00D3  
                             _dtoa$1305 0037                       __CFG_CCP2MX$PORTC 000000  
                             __pintcode 0008                           __pmediumconst FB9C  
                              ?___aodiv 0006                                ?___fladd 002D  
                              ?___aomod 0006                                ?___fldiv 002D  
                      ___aodiv@quotient 0018                                ?___awmod 0006  
                              ?___flmul 0014                                ?___flsub 0046  
                              ?___fltol 004E                                ?___lldiv 0006  
 errorCorrectedMove@motorAStartDistance 008E                                ?___llmod 0006  
                              ?_lcdInst 0001                       __size_of_vfprintf 0056  
                              ?_initLCD 0001                  doOperation@badCountBot 00BA  
                              ?_isalpha 0006                                ?_isdigit 0006  
                              ?_islower 0006                                ?_isspace 0006  
                        ?_replaceOldLog 0001                                ?_isupper 0006  
                   _updateMotorAEncoder 314C                            doOperation@i 00CF  
                   _updateMotorBEncoder 30C8                           ??_send_nibble 0007  
                              ?_pulse_e 0001                          __size_of_fputc 006C  
                        __size_of_fputs 0038                                ?_toupper 000C  
                __end_of_init_motor_PWM 33B4            doOperation@topLaserStatePrev 00CB  
                        __size_of_putch 000C             __size_of_errorCorrectedMove 0264  
                        ___wmul@product 000A                                _LATAbits 000F89  
                         ?_doDisplayLog 008E                                _LATDbits 000F8C  
                      ?_tirePositioning 001C                               _send_byte 34A6  
           errorCorrectedMove@goalSpeed 0088                          _LCD_LINE1_ADDR FBB5  
                        _LCD_LINE2_ADDR FBBF                          _LCD_LINE3_ADDR FBBE  
                        _LCD_LINE4_ADDR FBBD              doOperation@timeInOperation 00CD  
               init_motor_PWM@FREQUENCY FBB9                    ?_updateMotorAEncoder 0001  
                              i2u583_40 30D2                                i2u584_40 30E4  
                              i2u583_48 30D4                                i2u584_48 30E6  
                              i2u586_40 3156                                i2u587_40 3168  
                              i2u586_48 3158                                i2u587_48 316A  
                  ?_updateMotorBEncoder 0001                        __CFG_WDTPS$32768 000000  
                             _robotInit 310C                               _vfpfcnvrt 0012  
                             _xtoa$1326 0038                               _xtoa$1327 003A  
                     ___wmul@multiplier 0006            ??_sendArduinoTireDropRequest 0009  
                          _isspace$1828 000C                              vfpfcnvrt@c 006C  
                             copy_data0 2C9A                 _set_pwm_duty_cycle$2187 0068  
                       ?_init_motor_PWM 0001                          ??_doDisplayLog 0090  
                  doOperation@timeStart 00C2                  __end_of_LCD_LINE1_ADDR FBB6  
                __end_of_LCD_LINE2_ADDR FBC0                  __end_of_LCD_LINE3_ADDR FBBF  
                __end_of_LCD_LINE4_ADDR FBBE                     __end_of_send_nibble 3494  
                            _EECON1bits 000FA6                              ?_send_byte 0001  
                              __Hrparam 0000                   ??_updateMotorAEncoder 0001  
                 ??_updateMotorBEncoder 0001                 doDisplayLog@currentPole 0097  
       doDisplayLog@currentDisplayState 0095                              vfprintf@ap 0071  
                              __Lrparam 0000                              vfprintf@fp 006D  
                    __CFG_BOREN$SBORDIS 000000     __size_of_sendArduinoTireDropRequest 0022  
                            ?_robotInit 0001    updateMotorAEncoder@interruptPinState 0002  
                      __size_of___aodiv 0148                        __size_of___fladd 030C  
 errorCorrectedMove@motorBStartDistance 0090                        __size_of___aomod 0124  
                      __size_of___fldiv 0288                        __size_of___awmod 0070  
                      __size_of___flmul 0352                        __size_of___flsub 0046  
                      __size_of___fltol 00BA                        __size_of___lldiv 0082  
                      __size_of___llmod 0066             errorCorrectedMove@turnRatio 008A  
                            ?_vfpfcnvrt 004C                         ___aodiv@divisor 000E  
                      _interruptHandler 0008                         ___aodiv@counter 0016  
                      __size_of_lcdInst 000C                         ??_replaceOldLog 0006  
                       _I2C_Master_Init 2EA6                         _I2C_Master_Read 3402  
                      __size_of_initLCD 006A                                ___xxtofl 24BA  
                       _I2C_Master_Wait 3494                         _I2C_Master_Stop 34E2  
                      __size_of_isalpha 0034                        __size_of_isdigit 0030  
                      __size_of_islower 0030                        __size_of_isspace 003E  
                   doOperation@badCount 00B8                                __ptext10 3336  
                              __ptext11 34D0                                __ptext20 24BA  
                              __ptext12 34E2                                __ptext21 2A1A  
                              __ptext13 34EA                                __ptext30 33B4  
                              __ptext22 1068                                __ptext14 3402  
                              __ptext31 2F02                                __ptext23 294A  
                              __ptext15 3494                                __ptext40 3274  
                              __ptext32 0012                                __ptext24 16C6  
                              __ptext16 338C                                __ptext41 273A  
                              __ptext33 1DFA                                __ptext25 303E  
                              __ptext17 194E                                __ptext50 318C  
                              __ptext42 222E                                __ptext34 2FF4  
                              __ptext26 13BA                                __ptext18 2B6E  
                              __ptext51 3306                                __ptext43 2F58  
                              __ptext35 32A6                                __ptext27 2CFA  
                              __ptext19 202C                                __ptext60 314C  
                              __ptext52 33DC                                __ptext44 2AD4  
                              __ptext36 32D6                                __ptext28 3448  
                              __ptext53 34C4                                __ptext45 3084  
                              __ptext37 3240                                __ptext29 0CBA  
                              __ptext54 34A6                                __ptext46 3208  
                              __ptext38 2376                                __ptext55 347E  
                              __ptext47 2D6A                                __ptext39 1BB2  
                              __ptext56 3362                                __ptext48 34B8  
                              __ptext57 2E40                                __ptext49 25FA  
                              __ptext59 30C8                        __size_of_isupper 0030  
                      __size_of_pulse_e 002A                         _motorADirection 00F0  
                      __size_of_toupper 004A                           __size_of_atoi 0140  
                         __size_of_ctoa 0050                           __size_of_main 0420  
                       _motorBDirection 0079                           __size_of_dtoa 0248  
                         __size_of_stoa 0144                           __size_of_xtoa 0232  
                             stoa@F1144 00E9          set_pwm_duty_cycle@max_duty_val 0062  
                              int$flags 007A                      doOperation@PIDData 00A3  
                              _vfprintf 2F02                               printf@fmt 0080  
        doOperation@motorAStartDistance 00BC                                main@tick 0127  
                              main@time 0120          __size_of_requestIsTireDropDone 002C  
         __end_of_requestIsTireDropDone 3362             I2C_Master_Write@byteToWrite 0007  
       updateMotorAEncoder@directionPin 0004                        ___aomod@dividend 0006  
            __end_of_set_pwm_duty_cycle 222E                               putch@data 0009  
                        _vfpfcnvrt$1341 006A                __end_of_I2C_Master_Start 34F2  
              __end_of_I2C_Master_Write 34DA                              _INTCONbits 000FF2  
 tirePositioning@distanceRecordedBottom 0029                                isalpha@c 0006  
                              isdigit@c 0006                             _send_nibble 347E  
                          ?_doOperation 0001          _bottomBreakBeamTriggeredChange 00E6  
                              intlevel2 0000                           _LCD_SIZE_HORZ FBB7  
                              islower@c 0006    errorCorrectedMove@correctionConstant 0092  
                         _LCD_SIZE_VERT FBB6                                isspace@c 0006  
                      ___lldiv@dividend 0006                             ??_send_byte 0008  
                              isupper@c 0006         doOperation@bottomLaserStatePrev 00CC  
                            _OSCCONbits 000FD3                      doOperation@counted 00C5  
                           ??_robotInit 001B                                printf@ap 008C  
               __end_of_I2C_Master_Init 2F02                         ___aomod@divisor 000E  
               __end_of_I2C_Master_Read 3426                 __end_of_I2C_Master_Wait 34A6  
               __end_of_I2C_Master_Stop 34EA                             ??_vfpfcnvrt 0052  
                           lcdInst@data 0009                                stoa@nuls 0018  
                       ___aomod@counter 0016                   doDisplayLog@logNumber 008E  
    __end_of_sendArduinoTireDropRequest 3448              _sendArduinoTireDropRequest 3426  
                            _TIMER_INIT 3448         __end_ofinit_motor_PWM@FREQUENCY FBBD  
                  __end_of_doDisplayLog 1068          tirePositioning@bottomBreakbeam 002D  
                      ___lldiv@quotient 000E                                toupper@c 000C  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0039                            ___aodiv@sign 0017  
                         ??_EncoderInit 0006                            ___fladd@aexp 003A  
                          ___fladd@bexp 003B                            ___aomod@sign 0017  
