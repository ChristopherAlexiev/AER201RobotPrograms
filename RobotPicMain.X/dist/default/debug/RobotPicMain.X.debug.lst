

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 29 22:12:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           ; Version 2.05
    91                           ; Generated 20/12/2018 GMT
    92                           ; 
    93                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F4620 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataCOMRAM
   126  003967                     __pidataCOMRAM:
   127                           	opt callstack 0
   128                           
   129                           ;initializer for _motorBDirection
   130  003967  01                 	db	1
   131                           
   132                           	psect	idataBANK0
   133  003968                     __pidataBANK0:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for _motorADirection
   137  003968  01                 	db	1
   138                           
   139                           	psect	idataBANK1
   140  003960                     __pidataBANK1:
   141                           	opt callstack 0
   142                           
   143                           ;initializer for stoa@F1144
   144  003960  28                 	db	40
   145  003961  6E                 	db	110
   146  003962  75                 	db	117
   147  003963  6C                 	db	108
   148  003964  6C                 	db	108
   149  003965  29                 	db	41
   150  003966  00                 	db	0
   151                           
   152                           	psect	mediumconst
   153  00FB84                     __pmediumconst:
   154                           	opt callstack 0
   155  00FB84  00                 	db	0
   156  00FB85                     _keys:
   157                           	opt callstack 0
   158  00FB85  31                 	db	49
   159  00FB86  32                 	db	50
   160  00FB87  33                 	db	51
   161  00FB88  41                 	db	65
   162  00FB89  34                 	db	52
   163  00FB8A  35                 	db	53
   164  00FB8B  36                 	db	54
   165  00FB8C  42                 	db	66
   166  00FB8D  37                 	db	55
   167  00FB8E  38                 	db	56
   168  00FB8F  39                 	db	57
   169  00FB90  43                 	db	67
   170  00FB91  2A                 	db	42
   171  00FB92  30                 	db	48
   172  00FB93  23                 	db	35
   173  00FB94  44                 	db	68
   174  00FB95  00                 	db	0
   175  00FB96                     __end_of_keys:
   176                           	opt callstack 0
   177  00FB96                     _happynewyear:
   178                           	opt callstack 0
   179  00FB96  00                 	db	0
   180  00FB97  37                 	db	55
   181  00FB98  0E                 	db	14
   182  00FB99  02                 	db	2
   183  00FB9A  13                 	db	19
   184  00FB9B  02                 	db	2
   185  00FB9C  13                 	db	19
   186  00FB9D                     __end_of_happynewyear:
   187                           	opt callstack 0
   188  00FB9D                     _LCD_LINE1_ADDR:
   189                           	opt callstack 0
   190  00FB9D  00                 	db	0
   191  00FB9E                     __end_of_LCD_LINE1_ADDR:
   192                           	opt callstack 0
   193  00FB9E                     _LCD_SIZE_VERT:
   194                           	opt callstack 0
   195  00FB9E  04                 	db	4
   196  00FB9F                     __end_of_LCD_SIZE_VERT:
   197                           	opt callstack 0
   198  00FB9F                     _LCD_SIZE_HORZ:
   199                           	opt callstack 0
   200  00FB9F  10                 	db	16
   201  00FBA0                     __end_of_LCD_SIZE_HORZ:
   202                           	opt callstack 0
   203  00FBA0  10                 	db	16
   204  00FBA1                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   205                           	opt callstack 0
   206  00FBA1  03E8               	dw	1000
   207  00FBA3  0000               	dw	0
   208  00FBA5                     __end_ofinit_motor_PWM@FREQUENCY:
   209                           	opt callstack 0
   210  00FBA5  50                 	db	80
   211  00FBA6                     __end_of_LCD_LINE4_ADDR:
   212                           	opt callstack 0
   213  00FBA6  10                 	db	16
   214  00FBA7                     __end_of_LCD_LINE3_ADDR:
   215                           	opt callstack 0
   216  00FBA7  40                 	db	64
   217  00FBA8                     __end_of_LCD_LINE2_ADDR:
   218                           	opt callstack 0
   219  0000                     _LATDbits	set	3980
   220  0000                     _LATB	set	3978
   221  0000                     _TRISD	set	3989
   222  0000                     _LATD	set	3980
   223  0000                     _TRISAbits	set	3986
   224  0000                     _LATAbits	set	3977
   225  0000                     _TRISBbits	set	3987
   226  0000                     _TRISEbits	set	3990
   227  0000                     _TRISCbits	set	3988
   228  0000                     _PORTCbits	set	3970
   229  0000                     _PORTEbits	set	3972
   230  0000                     _PORTBbits	set	3969
   231  0000                     _PORTB	set	3969
   232  0000                     _SSPBUF	set	4041
   233  0000                     _SSPCON2bits	set	4037
   234  0000                     _SSPCON1	set	4038
   235  0000                     _SSPADD	set	4040
   236  0000                     _SSPCON1bits	set	4038
   237  0000                     _SSPCON2	set	4037
   238  0000                     _SSPSTAT	set	4039
   239  0000                     _ADCON1	set	4033
   240  0000                     _EECON2	set	4007
   241  0000                     _EECON1bits	set	4006
   242  0000                     _EEADR	set	4009
   243  0000                     _EEDATA	set	4008
   244  0000                     _CCPR2L	set	4027
   245  0000                     _CCPR1L	set	4030
   246  0000                     _PR2	set	4043
   247  0000                     _OSCCONbits	set	4051
   248  0000                     _CCP2Y	set	32212
   249  0000                     _CCP2X	set	32213
   250  0000                     _CCP1Y	set	32236
   251  0000                     _CCP1X	set	32237
   252  0000                     _TMR2ON	set	32338
   253  0000                     _T2CKPS1	set	32337
   254  0000                     _T2CKPS0	set	32336
   255  0000                     _CCP2M0	set	32208
   256  0000                     _CCP2M1	set	32209
   257  0000                     _CCP2M2	set	32210
   258  0000                     _CCP2M3	set	32211
   259  0000                     _CCP1M0	set	32232
   260  0000                     _CCP1M1	set	32233
   261  0000                     _CCP1M2	set	32234
   262  0000                     _CCP1M3	set	32235
   263  0000                     _P1M0	set	32238
   264  0000                     _P1M1	set	32239
   265  0000                     _TMR0L	set	4054
   266  0000                     _TMR0H	set	4055
   267  0000                     _T0CONbits	set	4053
   268  0000                     _TMR0ON	set	32431
   269  0000                     _PSA	set	32427
   270  0000                     _T0PS0	set	32424
   271  0000                     _T0PS1	set	32425
   272  0000                     _T0PS2	set	32426
   273  0000                     _T08BIT	set	32430
   274  0000                     _INTCONbits	set	4082
   275  0000                     _INT0IF	set	32657
   276  0000                     _INT2IF	set	32641
   277  0000                     _TMR0IF	set	32658
   278  0000                     _INT1IF	set	32640
   279  0000                     _INT1IE	set	32643
   280  0000                     _TMR0IE	set	32661
   281  0000                     _INT0IE	set	32660
   282  0000                     _INT2IE	set	32644
   283  00FBA8                     STR_16:
   284                           
   285                           ; BSR set to: 0
   286  00FBA8  54                 	db	84	;'T'
   287  00FBA9  49                 	db	73	;'I'
   288  00FBAA  52                 	db	82	;'R'
   289  00FBAB  45                 	db	69	;'E'
   290  00FBAC  2E                 	db	46
   291  00FBAD  20                 	db	32
   292  00FBAE  4F                 	db	79	;'O'
   293  00FBAF  4E                 	db	78	;'N'
   294  00FBB0  20                 	db	32
   295  00FBB1  50                 	db	80	;'P'
   296  00FBB2  4F                 	db	79	;'O'
   297  00FBB3  4C                 	db	76	;'L'
   298  00FBB4  45                 	db	69	;'E'
   299  00FBB5  3A                 	db	58	;':'
   300  00FBB6  20                 	db	32
   301  00FBB7  00                 	db	0
   302  00FBB8                     STR_51:
   303                           
   304                           ; BSR set to: 0
   305  00FBB8  28                 	db	40
   306  00FBB9  31                 	db	49	;'1'
   307  00FBBA  29                 	db	41
   308  00FBBB  20                 	db	32
   309  00FBBC  28                 	db	40
   310  00FBBD  32                 	db	50	;'2'
   311  00FBBE  29                 	db	41
   312  00FBBF  20                 	db	32
   313  00FBC0  28                 	db	40
   314  00FBC1  33                 	db	51	;'3'
   315  00FBC2  29                 	db	41
   316  00FBC3  20                 	db	32
   317  00FBC4  28                 	db	40
   318  00FBC5  34                 	db	52	;'4'
   319  00FBC6  29                 	db	41
   320  00FBC7  00                 	db	0
   321  00FBC8                     STR_9:
   322                           
   323                           ; BSR set to: 0
   324  00FBC8  28                 	db	40
   325  00FBC9  32                 	db	50	;'2'
   326  00FBCA  29                 	db	41
   327  00FBCB  20                 	db	32
   328  00FBCC  53                 	db	83	;'S'
   329  00FBCD  41                 	db	65	;'A'
   330  00FBCE  56                 	db	86	;'V'
   331  00FBCF  45                 	db	69	;'E'
   332  00FBD0  20                 	db	32
   333  00FBD1  26                 	db	38
   334  00FBD2  20                 	db	32
   335  00FBD3  45                 	db	69	;'E'
   336  00FBD4  58                 	db	88	;'X'
   337  00FBD5  49                 	db	73	;'I'
   338  00FBD6  54                 	db	84	;'T'
   339  00FBD7  00                 	db	0
   340  00FBD8                     STR_43:
   341                           
   342                           ; BSR set to: 0
   343  00FBD8  28                 	db	40
   344  00FBD9  32                 	db	50	;'2'
   345  00FBDA  29                 	db	41
   346  00FBDB  20                 	db	32
   347  00FBDC  51                 	db	81	;'Q'
   348  00FBDD  55                 	db	85	;'U'
   349  00FBDE  49                 	db	73	;'I'
   350  00FBDF  54                 	db	84	;'T'
   351  00FBE0  20                 	db	32
   352  00FBE1  44                 	db	68	;'D'
   353  00FBE2  4F                 	db	79	;'O'
   354  00FBE3  20                 	db	32
   355  00FBE4  4E                 	db	78	;'N'
   356  00FBE5  4F                 	db	79	;'O'
   357  00FBE6  54                 	db	84	;'T'
   358  00FBE7  00                 	db	0
   359  00FBE8                     STR_5:
   360                           
   361                           ; BSR set to: 0
   362  00FBE8  54                 	db	84	;'T'
   363  00FBE9  49                 	db	73	;'I'
   364  00FBEA  52                 	db	82	;'R'
   365  00FBEB  2E                 	db	46
   366  00FBEC  20                 	db	32
   367  00FBED  53                 	db	83	;'S'
   368  00FBEE  55                 	db	85	;'U'
   369  00FBEF  50                 	db	80	;'P'
   370  00FBF0  50                 	db	80	;'P'
   371  00FBF1  4C                 	db	76	;'L'
   372  00FBF2  49                 	db	73	;'I'
   373  00FBF3  45                 	db	69	;'E'
   374  00FBF4  44                 	db	68	;'D'
   375  00FBF5  20                 	db	32
   376  00FBF6  00                 	db	0
   377  00FBF7                     STR_28:
   378                           
   379                           ; BSR set to: 0
   380  00FBF7  25                 	db	37
   381  00FBF8  30                 	db	48	;'0'
   382  00FBF9  32                 	db	50	;'2'
   383  00FBFA  78                 	db	120	;'x'
   384  00FBFB  2F                 	db	47
   385  00FBFC  25                 	db	37
   386  00FBFD  30                 	db	48	;'0'
   387  00FBFE  32                 	db	50	;'2'
   388  00FBFF  78                 	db	120	;'x'
   389  00FC00  2F                 	db	47
   390  00FC01  25                 	db	37
   391  00FC02  30                 	db	48	;'0'
   392  00FC03  32                 	db	50	;'2'
   393  00FC04  78                 	db	120	;'x'
   394  00FC05  00                 	db	0
   395  00FC06                     STR_29:
   396                           
   397                           ; BSR set to: 0
   398  00FC06  25                 	db	37
   399  00FC07  30                 	db	48	;'0'
   400  00FC08  32                 	db	50	;'2'
   401  00FC09  78                 	db	120	;'x'
   402  00FC0A  3A                 	db	58	;':'
   403  00FC0B  25                 	db	37
   404  00FC0C  30                 	db	48	;'0'
   405  00FC0D  32                 	db	50	;'2'
   406  00FC0E  78                 	db	120	;'x'
   407  00FC0F  3A                 	db	58	;':'
   408  00FC10  25                 	db	37
   409  00FC11  30                 	db	48	;'0'
   410  00FC12  32                 	db	50	;'2'
   411  00FC13  78                 	db	120	;'x'
   412  00FC14  00                 	db	0
   413  00FC15                     STR_14:
   414                           
   415                           ; BSR set to: 0
   416  00FC15  54                 	db	84	;'T'
   417  00FC16  49                 	db	73	;'I'
   418  00FC17  52                 	db	82	;'R'
   419  00FC18  2E                 	db	46
   420  00FC19  20                 	db	32
   421  00FC1A  44                 	db	68	;'D'
   422  00FC1B  45                 	db	69	;'E'
   423  00FC1C  50                 	db	80	;'P'
   424  00FC1D  4C                 	db	76	;'L'
   425  00FC1E  4F                 	db	79	;'O'
   426  00FC1F  59                 	db	89	;'Y'
   427  00FC20  3A                 	db	58	;':'
   428  00FC21  20                 	db	32
   429  00FC22  00                 	db	0
   430  00FC23                     STR_49:
   431                           
   432                           ; BSR set to: 0
   433  00FC23  28                 	db	40
   434  00FC24  31                 	db	49	;'1'
   435  00FC25  20                 	db	32
   436  00FC26  49                 	db	73	;'I'
   437  00FC27  53                 	db	83	;'S'
   438  00FC28  20                 	db	32
   439  00FC29  4F                 	db	79	;'O'
   440  00FC2A  4C                 	db	76	;'L'
   441  00FC2B  44                 	db	68	;'D'
   442  00FC2C  45                 	db	69	;'E'
   443  00FC2D  53                 	db	83	;'S'
   444  00FC2E  54                 	db	84	;'T'
   445  00FC2F  29                 	db	41
   446  00FC30  00                 	db	0
   447  00FC31                     STR_7:
   448                           
   449                           ; BSR set to: 0
   450  00FC31  28                 	db	40
   451  00FC32  31                 	db	49	;'1'
   452  00FC33  29                 	db	41
   453  00FC34  20                 	db	32
   454  00FC35  50                 	db	80	;'P'
   455  00FC36  4F                 	db	79	;'O'
   456  00FC37  4C                 	db	76	;'L'
   457  00FC38  45                 	db	69	;'E'
   458  00FC39  20                 	db	32
   459  00FC3A  49                 	db	73	;'I'
   460  00FC3B  4E                 	db	78	;'N'
   461  00FC3C  46                 	db	70	;'F'
   462  00FC3D  4F                 	db	79	;'O'
   463  00FC3E  00                 	db	0
   464  00FC3F                     STR_33:
   465                           
   466                           ; BSR set to: 0
   467  00FC3F  28                 	db	40
   468  00FC40  32                 	db	50	;'2'
   469  00FC41  29                 	db	41
   470  00FC42  20                 	db	32
   471  00FC43  56                 	db	86	;'V'
   472  00FC44  49                 	db	73	;'I'
   473  00FC45  45                 	db	69	;'E'
   474  00FC46  57                 	db	87	;'W'
   475  00FC47  20                 	db	32
   476  00FC48  4C                 	db	76	;'L'
   477  00FC49  4F                 	db	79	;'O'
   478  00FC4A  47                 	db	71	;'G'
   479  00FC4B  53                 	db	83	;'S'
   480  00FC4C  00                 	db	0
   481  00FC4D                     STR_18:
   482                           
   483                           ; BSR set to: 0
   484  00FC4D  31                 	db	49	;'1'
   485  00FC4E  3C                 	db	60	;'<'
   486  00FC4F  2D                 	db	45
   487  00FC50  20                 	db	32
   488  00FC51  32                 	db	50	;'2'
   489  00FC52  2D                 	db	45
   490  00FC53  3E                 	db	62	;'>'
   491  00FC54  20                 	db	32
   492  00FC55  33                 	db	51	;'3'
   493  00FC56  4D                 	db	77	;'M'
   494  00FC57  45                 	db	69	;'E'
   495  00FC58  4E                 	db	78	;'N'
   496  00FC59  55                 	db	85	;'U'
   497  00FC5A  00                 	db	0
   498  00FC5B                     STR_39:
   499                           
   500                           ; BSR set to: 0
   501  00FC5B  4F                 	db	79	;'O'
   502  00FC5C  50                 	db	80	;'P'
   503  00FC5D  2E                 	db	46
   504  00FC5E  20                 	db	32
   505  00FC5F  43                 	db	67	;'C'
   506  00FC60  4F                 	db	79	;'O'
   507  00FC61  4D                 	db	77	;'M'
   508  00FC62  50                 	db	80	;'P'
   509  00FC63  4C                 	db	76	;'L'
   510  00FC64  45                 	db	69	;'E'
   511  00FC65  54                 	db	84	;'T'
   512  00FC66  45                 	db	69	;'E'
   513  00FC67  00                 	db	0
   514  00FC68                     STR_41:
   515                           
   516                           ; BSR set to: 0
   517  00FC68  28                 	db	40
   518  00FC69  31                 	db	49	;'1'
   519  00FC6A  29                 	db	41
   520  00FC6B  20                 	db	32
   521  00FC6C  56                 	db	86	;'V'
   522  00FC6D  49                 	db	73	;'I'
   523  00FC6E  45                 	db	69	;'E'
   524  00FC6F  57                 	db	87	;'W'
   525  00FC70  20                 	db	32
   526  00FC71  4C                 	db	76	;'L'
   527  00FC72  4F                 	db	79	;'O'
   528  00FC73  47                 	db	71	;'G'
   529  00FC74  00                 	db	0
   530  00FC75                     STR_35:
   531                           
   532                           ; BSR set to: 0
   533  00FC75  4F                 	db	79	;'O'
   534  00FC76  50                 	db	80	;'P'
   535  00FC77  45                 	db	69	;'E'
   536  00FC78  52                 	db	82	;'R'
   537  00FC79  41                 	db	65	;'A'
   538  00FC7A  54                 	db	84	;'T'
   539  00FC7B  49                 	db	73	;'I'
   540  00FC7C  4F                 	db	79	;'O'
   541  00FC7D  4E                 	db	78	;'N'
   542  00FC7E  20                 	db	32
   543  00FC7F  49                 	db	73	;'I'
   544  00FC80  4E                 	db	78	;'N'
   545  00FC81  00                 	db	0
   546  00FC82                     STR_25:
   547                           
   548                           ; BSR set to: 0
   549  00FC82  4C                 	db	76	;'L'
   550  00FC83  65                 	db	101	;'e'
   551  00FC84  61                 	db	97	;'a'
   552  00FC85  76                 	db	118	;'v'
   553  00FC86  69                 	db	105	;'i'
   554  00FC87  6E                 	db	110	;'n'
   555  00FC88  67                 	db	103	;'g'
   556  00FC89  20                 	db	32
   557  00FC8A  50                 	db	80	;'P'
   558  00FC8B  6F                 	db	111	;'o'
   559  00FC8C  6C                 	db	108	;'l'
   560  00FC8D  65                 	db	101	;'e'
   561  00FC8E  00                 	db	0
   562  00FC8F                     
   563                           ; BSR set to: 0
   564  00FC8F  45                 	db	69	;'E'
   565  00FC90  45                 	db	69	;'E'
   566  00FC91  50                 	db	80	;'P'
   567  00FC92  52                 	db	82	;'R'
   568  00FC93  4F                 	db	79	;'O'
   569  00FC94  4D                 	db	77	;'M'
   570  00FC95  2D                 	db	45
   571  00FC96  44                 	db	68	;'D'
   572  00FC97  65                 	db	101	;'e'
   573  00FC98  6D                 	db	109	;'m'
   574  00FC99  6F                 	db	111	;'o'
   575  00FC9A  6E                 	db	110	;'n'
   576  00FC9B  00                 	db	0
   577  00FC9C                     STR_47:
   578                           
   579                           ; BSR set to: 0
   580  00FC9C  53                 	db	83	;'S'
   581  00FC9D  45                 	db	69	;'E'
   582  00FC9E  4C                 	db	76	;'L'
   583  00FC9F  45                 	db	69	;'E'
   584  00FCA0  43                 	db	67	;'C'
   585  00FCA1  54                 	db	84	;'T'
   586  00FCA2  20                 	db	32
   587  00FCA3  4C                 	db	76	;'L'
   588  00FCA4  4F                 	db	79	;'O'
   589  00FCA5  47                 	db	71	;'G'
   590  00FCA6  00                 	db	0
   591  00FCA7                     STR_24:
   592                           
   593                           ; BSR set to: 0
   594  00FCA7  25                 	db	37
   595  00FCA8  64                 	db	100	;'d'
   596  00FCA9  20                 	db	32
   597  00FCAA  6F                 	db	111	;'o'
   598  00FCAB  6E                 	db	110	;'n'
   599  00FCAC  20                 	db	32
   600  00FCAD  70                 	db	112	;'p'
   601  00FCAE  6F                 	db	111	;'o'
   602  00FCAF  6C                 	db	108	;'l'
   603  00FCB0  65                 	db	101	;'e'
   604  00FCB1  00                 	db	0
   605  00FCB2                     
   606                           ; BSR set to: 0
   607  00FCB2  77                 	db	119	;'w'
   608  00FCB3  72                 	db	114	;'r'
   609  00FCB4  6F                 	db	111	;'o'
   610  00FCB5  74                 	db	116	;'t'
   611  00FCB6  65                 	db	101	;'e'
   612  00FCB7  3A                 	db	58	;':'
   613  00FCB8  20                 	db	32
   614  00FCB9  25                 	db	37
   615  00FCBA  63                 	db	99	;'c'
   616  00FCBB  6E                 	db	110	;'n'
   617  00FCBC  00                 	db	0
   618  00FCBD                     
   619                           ; BSR set to: 0
   620  00FCBD  72                 	db	114	;'r'
   621  00FCBE  65                 	db	101	;'e'
   622  00FCBF  61                 	db	97	;'a'
   623  00FCC0  64                 	db	100	;'d'
   624  00FCC1  3A                 	db	58	;':'
   625  00FCC2  20                 	db	32
   626  00FCC3  25                 	db	37
   627  00FCC4  63                 	db	99	;'c'
   628  00FCC5  6E                 	db	110	;'n'
   629  00FCC6  6E                 	db	110	;'n'
   630  00FCC7  00                 	db	0
   631  00FCC8                     STR_2:
   632                           
   633                           ; BSR set to: 0
   634  00FCC8  4F                 	db	79	;'O'
   635  00FCC9  50                 	db	80	;'P'
   636  00FCCA  2E                 	db	46
   637  00FCCB  20                 	db	32
   638  00FCCC  54                 	db	84	;'T'
   639  00FCCD  49                 	db	73	;'I'
   640  00FCCE  4D                 	db	77	;'M'
   641  00FCCF  45                 	db	69	;'E'
   642  00FCD0  20                 	db	32
   643  00FCD1  00                 	db	0
   644  00FCD2                     STR_23:
   645                           
   646                           ; BSR set to: 0
   647  00FCD2  54                 	db	84	;'T'
   648  00FCD3  49                 	db	73	;'I'
   649  00FCD4  52                 	db	82	;'R'
   650  00FCD5  45                 	db	69	;'E'
   651  00FCD6  20                 	db	32
   652  00FCD7  44                 	db	68	;'D'
   653  00FCD8  52                 	db	82	;'R'
   654  00FCD9  4F                 	db	79	;'O'
   655  00FCDA  50                 	db	80	;'P'
   656  00FCDB  00                 	db	0
   657  00FCDC                     STR_31:
   658                           
   659                           ; BSR set to: 0
   660  00FCDC  28                 	db	40
   661  00FCDD  31                 	db	49	;'1'
   662  00FCDE  29                 	db	41
   663  00FCDF  20                 	db	32
   664  00FCE0  53                 	db	83	;'S'
   665  00FCE1  54                 	db	84	;'T'
   666  00FCE2  41                 	db	65	;'A'
   667  00FCE3  52                 	db	82	;'R'
   668  00FCE4  54                 	db	84	;'T'
   669  00FCE5  00                 	db	0
   670  00FCE6                     
   671                           ; BSR set to: 0
   672  00FCE6  72                 	db	114	;'r'
   673  00FCE7  65                 	db	101	;'e'
   674  00FCE8  61                 	db	97	;'a'
   675  00FCE9  64                 	db	100	;'d'
   676  00FCEA  3A                 	db	58	;':'
   677  00FCEB  20                 	db	32
   678  00FCEC  25                 	db	37
   679  00FCED  63                 	db	99	;'c'
   680  00FCEE  6E                 	db	110	;'n'
   681  00FCEF  00                 	db	0
   682  00FCF0                     STR_27:
   683                           
   684                           ; BSR set to: 0
   685  00FCF0  57                 	db	87	;'W'
   686  00FCF1  45                 	db	69	;'E'
   687  00FCF2  4C                 	db	76	;'L'
   688  00FCF3  43                 	db	67	;'C'
   689  00FCF4  4F                 	db	79	;'O'
   690  00FCF5  4D                 	db	77	;'M'
   691  00FCF6  45                 	db	69	;'E'
   692  00FCF7  20                 	db	32
   693  00FCF8  00                 	db	0
   694  00FCF9                     STR_45:
   695                           
   696                           ; BSR set to: 0
   697  00FCF9  53                 	db	83	;'S'
   698  00FCFA  41                 	db	65	;'A'
   699  00FCFB  56                 	db	86	;'V'
   700  00FCFC  45                 	db	69	;'E'
   701  00FCFD  20                 	db	32
   702  00FCFE  4C                 	db	76	;'L'
   703  00FCFF  4F                 	db	79	;'O'
   704  00FD00  47                 	db	71	;'G'
   705  00FD01  00                 	db	0
   706  00FD02                     STR_37:
   707                           
   708                           ; BSR set to: 0
   709  00FD02  50                 	db	80	;'P'
   710  00FD03  52                 	db	82	;'R'
   711  00FD04  4F                 	db	79	;'O'
   712  00FD05  47                 	db	71	;'G'
   713  00FD06  52                 	db	82	;'R'
   714  00FD07  45                 	db	69	;'E'
   715  00FD08  53                 	db	83	;'S'
   716  00FD09  53                 	db	83	;'S'
   717  00FD0A  00                 	db	0
   718  00FD0B                     STR_10:
   719                           
   720                           ; BSR set to: 0
   721  00FD0B  25                 	db	37
   722  00FD0C  73                 	db	115	;'s'
   723  00FD0D  25                 	db	37
   724  00FD0E  64                 	db	100	;'d'
   725  00FD0F  25                 	db	37
   726  00FD10  73                 	db	115	;'s'
   727  00FD11  25                 	db	37
   728  00FD12  64                 	db	100	;'d'
   729  00FD13  00                 	db	0
   730  00FD14                     STR_1:
   731                           
   732                           ; BSR set to: 0
   733  00FD14  25                 	db	37
   734  00FD15  73                 	db	115	;'s'
   735  00FD16  25                 	db	37
   736  00FD17  64                 	db	100	;'d'
   737  00FD18  25                 	db	37
   738  00FD19  73                 	db	115	;'s'
   739  00FD1A  00                 	db	0
   740  00FD1B                     STR_11:
   741                           
   742                           ; BSR set to: 0
   743  00FD1B  50                 	db	80	;'P'
   744  00FD1C  4F                 	db	79	;'O'
   745  00FD1D  4C                 	db	76	;'L'
   746  00FD1E  45                 	db	69	;'E'
   747  00FD1F  20                 	db	32
   748  00FD20  00                 	db	0
   749  00FD21                     STR_22:
   750                           
   751                           ; BSR set to: 0
   752  00FD21  41                 	db	65	;'A'
   753  00FD22  3A                 	db	58	;':'
   754  00FD23  20                 	db	32
   755  00FD24  25                 	db	37
   756  00FD25  64                 	db	100	;'d'
   757  00FD26  00                 	db	0
   758  00FD27                     STR_21:
   759                           
   760                           ; BSR set to: 0
   761  00FD27  42                 	db	66	;'B'
   762  00FD28  3A                 	db	58	;':'
   763  00FD29  20                 	db	32
   764  00FD2A  25                 	db	37
   765  00FD2B  64                 	db	100	;'d'
   766  00FD2C  00                 	db	0
   767  00FD2D                     STR_12:
   768                           
   769                           ; BSR set to: 0
   770  00FD2D  2F                 	db	47
   771  00FD2E  00                 	db	0
   772  0000                     
   773                           ; #config settings
   774  00FD2F  00                 	db	0	; dummy byte at the end
   775  0000                     
   776                           	psect	cinit
   777  002F30                     __pcinit:
   778                           	opt callstack 0
   779  002F30                     start_initialization:
   780                           	opt callstack 0
   781  002F30                     __initialization:
   782                           	opt callstack 0
   783                           
   784                           ; Initialize objects allocated to BANK1 (7 bytes)
   785                           ; load TBLPTR registers with __pidataBANK1
   786  002F30  0E60               	movlw	low __pidataBANK1
   787  002F32  6EF6               	movwf	tblptrl,c
   788  002F34  0E39               	movlw	high __pidataBANK1
   789  002F36  6EF7               	movwf	tblptrh,c
   790  002F38  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   791  002F3A  6EF8               	movwf	tblptru,c
   792  002F3C  EE01  F03A         	lfsr	0,__pdataBANK1
   793  002F40  EE10 F007          	lfsr	1,7
   794  002F44                     copy_data0:
   795  002F44  0009               	tblrd		*+
   796  002F46  CFF5 FFEE          	movff	tablat,postinc0
   797  002F4A  50E5               	movf	postdec1,w,c
   798  002F4C  50E1               	movf	fsr1l,w,c
   799  002F4E  E1FA               	bnz	copy_data0
   800                           
   801                           ; Initialize objects allocated to BANK0 (1 bytes)
   802                           ; load TBLPTR registers with __pidataBANK0
   803  002F50  0E68               	movlw	low __pidataBANK0
   804  002F52  6EF6               	movwf	tblptrl,c
   805  002F54  0E39               	movlw	high __pidataBANK0
   806  002F56  6EF7               	movwf	tblptrh,c
   807  002F58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   808  002F5A  6EF8               	movwf	tblptru,c
   809  002F5C  0009               	tblrd		*+	;fetch initializer
   810  002F5E  CFF5 F0F6          	movff	tablat,__pdataBANK0
   811                           
   812                           ; Initialize objects allocated to COMRAM (1 bytes)
   813                           ; load TBLPTR registers with __pidataCOMRAM
   814  002F62  0E67               	movlw	low __pidataCOMRAM
   815  002F64  6EF6               	movwf	tblptrl,c
   816  002F66  0E39               	movlw	high __pidataCOMRAM
   817  002F68  6EF7               	movwf	tblptrh,c
   818  002F6A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   819  002F6C  6EF8               	movwf	tblptru,c
   820  002F6E  0009               	tblrd		*+	;fetch initializer
   821  002F70  CFF5 F079          	movff	tablat,__pdataCOMRAM
   822                           
   823                           ; Clear objects allocated to BIGRAM (480 bytes)
   824  002F74  EE01  F041         	lfsr	0,__pbssBIGRAM
   825  002F78  EE11 F0E0          	lfsr	1,480
   826  002F7C                     clear_0:
   827  002F7C  6AEE               	clrf	postinc0,c
   828  002F7E  50E5               	movf	postdec1,w,c
   829  002F80  50E1               	movf	fsr1l,w,c
   830  002F82  E1FC               	bnz	clear_0
   831  002F84  50E2               	movf	fsr1h,w,c
   832  002F86  E1FA               	bnz	clear_0
   833                           
   834                           ; Clear objects allocated to BANK1 (42 bytes)
   835  002F88  EE01  F000         	lfsr	0,__pbssBANK1
   836  002F8C  0E2A               	movlw	42
   837  002F8E                     clear_1:
   838  002F8E  6AEE               	clrf	postinc0,c
   839  002F90  06E8               	decf	wreg,f,c
   840  002F92  E1FD               	bnz	clear_1
   841                           
   842                           ; Clear objects allocated to BANK0 (11 bytes)
   843  002F94  EE00  F0EB         	lfsr	0,__pbssBANK0
   844  002F98  0E0B               	movlw	11
   845  002F9A                     clear_2:
   846  002F9A  6AEE               	clrf	postinc0,c
   847  002F9C  06E8               	decf	wreg,f,c
   848  002F9E  E1FD               	bnz	clear_2
   849                           
   850                           ; Clear objects allocated to COMRAM (4 bytes)
   851  002FA0  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   852  002FA2  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   853  002FA4  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   854  002FA6  6A75               	clrf	__pbssCOMRAM& (0+255),c
   855  002FA8                     end_of_initialization:
   856                           	opt callstack 0
   857  002FA8                     __end_of__initialization:
   858                           	opt callstack 0
   859  002FA8  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   860  002FAA  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   861  002FAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   862  002FAE  6EF8               	movwf	tblptru,c
   863  002FB0  0100               	movlb	0
   864  002FB2  EFEF  F004         	goto	_main	;jump to C main() function
   865                           
   866                           	psect	bssCOMRAM
   867  000075                     __pbssCOMRAM:
   868                           	opt callstack 0
   869  000075                     _millisecondsMeasured:
   870                           	opt callstack 0
   871  000075                     	ds	4
   872                           
   873                           	psect	dataCOMRAM
   874  000079                     __pdataCOMRAM:
   875                           	opt callstack 0
   876  000079                     _motorBDirection:
   877                           	opt callstack 0
   878  000079                     	ds	1
   879                           
   880                           	psect	bssBANK0
   881  0000EB                     __pbssBANK0:
   882                           	opt callstack 0
   883  0000EB                     _width:
   884                           	opt callstack 0
   885  0000EB                     	ds	2
   886  0000ED                     _prec:
   887                           	opt callstack 0
   888  0000ED                     	ds	2
   889  0000EF                     _flags:
   890                           	opt callstack 0
   891  0000EF                     	ds	2
   892  0000F1                     _motorBDistance:
   893                           	opt callstack 0
   894  0000F1                     	ds	2
   895  0000F3                     _motorADistance:
   896                           	opt callstack 0
   897  0000F3                     	ds	2
   898  0000F5                     _keyPressed:
   899                           	opt callstack 0
   900  0000F5                     	ds	1
   901                           
   902                           	psect	dataBANK0
   903  0000F6                     __pdataBANK0:
   904                           	opt callstack 0
   905  0000F6                     _motorADirection:
   906                           	opt callstack 0
   907  0000F6                     	ds	1
   908                           
   909                           	psect	bssBANK1
   910  000100                     __pbssBANK1:
   911                           	opt callstack 0
   912  000100                     	ds	4
   913  000104                     _nout:
   914                           	opt callstack 0
   915  000104                     	ds	2
   916  000106                     _encoderAInterruptLast:
   917                           	opt callstack 0
   918  000106                     	ds	1
   919  000107                     _encoderBInterruptLast:
   920                           	opt callstack 0
   921  000107                     	ds	1
   922  000108                     _bottomBreakBeamTriggeredChange:
   923                           	opt callstack 0
   924  000108                     	ds	1
   925  000109                     _topBreakBeamTriggeredChange:
   926                           	opt callstack 0
   927  000109                     	ds	1
   928  00010A                     _dbuf:
   929                           	opt callstack 0
   930  00010A                     	ds	32
   931                           
   932                           	psect	dataBANK1
   933  00013A                     __pdataBANK1:
   934                           	opt callstack 0
   935  00013A                     stoa@F1144:
   936                           	opt callstack 0
   937  00013A                     	ds	7
   938                           
   939                           	psect	bssBIGRAM
   940  000141                     __pbssBIGRAM:
   941                           	opt callstack 0
   942  000141                     _logs:
   943                           	opt callstack 0
   944  000141                     	ds	480
   945                           
   946                           	psect	cstackBANK1
   947  00012A                     __pcstackBANK1:
   948                           	opt callstack 0
   949  00012A                     main@time:
   950                           	opt callstack 0
   951                           
   952                           ; 7 bytes @ 0x0
   953  00012A                     	ds	7
   954  000131                     main@tick:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x7
   958  000131                     	ds	4
   959  000135                     main@keypress:
   960                           	opt callstack 0
   961                           
   962                           ; 1 bytes @ 0xB
   963  000135                     	ds	1
   964  000136                     main@i:
   965                           	opt callstack 0
   966                           
   967                           ; 1 bytes @ 0xC
   968  000136                     	ds	1
   969  000137                     main@currentLogState:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0xD
   973  000137                     	ds	1
   974  000138                     main@currentRobotState:
   975                           	opt callstack 0
   976                           
   977                           ; 1 bytes @ 0xE
   978  000138                     	ds	1
   979  000139                     main@keyValue:
   980                           	opt callstack 0
   981                           
   982                           ; 1 bytes @ 0xF
   983  000139                     	ds	1
   984                           
   985                           	psect	cstackBANK0
   986  000080                     __pcstackBANK0:
   987                           	opt callstack 0
   988  000080                     ?_printf:
   989                           	opt callstack 0
   990  000080                     printf@fmt:
   991                           	opt callstack 0
   992  000080                     _setMotorSpeeds$2225:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0x0
   996  000080                     	ds	4
   997  000084                     _setMotorSpeeds$2226:
   998                           	opt callstack 0
   999                           
  1000                           ; 4 bytes @ 0x4
  1001  000084                     	ds	4
  1002  000088                     ?_tirePositioning:
  1003                           	opt callstack 0
  1004  000088                     errorCorrectedMove@goalSpeed:
  1005                           	opt callstack 0
  1006  000088                     tirePositioning@maxOperationTime:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x8
  1010  000088                     	ds	2
  1011  00008A                     errorCorrectedMove@turnRatio:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0xA
  1015  00008A                     	ds	2
  1016  00008C                     tirePositioning@startDistanceTop:
  1017                           	opt callstack 0
  1018  00008C                     printf@ap:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0xC
  1022  00008C                     	ds	2
  1023  00008E                     doDisplayLog@logNumber:
  1024                           	opt callstack 0
  1025  00008E                     tirePositioning@startDistanceBottom:
  1026                           	opt callstack 0
  1027  00008E                     errorCorrectedMove@motorAStartDistance:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xE
  1031  00008E                     	ds	2
  1032  000090                     ??_doDisplayLog:
  1033  000090                     tirePositioning@startDistance:
  1034                           	opt callstack 0
  1035  000090                     errorCorrectedMove@motorBStartDistance:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x10
  1039  000090                     	ds	2
  1040  000092                     tirePositioning@topPreviousState:
  1041                           	opt callstack 0
  1042  000092                     errorCorrectedMove@correctionConstant:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x12
  1046  000092                     	ds	2
  1047  000094                     doDisplayLog@keypress:
  1048                           	opt callstack 0
  1049  000094                     tirePositioning@bottomPreviousState:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x14
  1053  000094                     	ds	1
  1054  000095                     doDisplayLog@currentDisplayState:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x15
  1058  000095                     	ds	1
  1059  000096                     ??_errorCorrectedMove:
  1060  000096                     doDisplayLog@keyValue:
  1061                           	opt callstack 0
  1062  000096                     tirePositioning@distanceRecordedTop:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x16
  1066  000096                     	ds	1
  1067  000097                     doDisplayLog@currentPole:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x17
  1071  000097                     	ds	1
  1072  000098                     tirePositioning@distanceRecordedBottom:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x18
  1076  000098                     	ds	1
  1077  000099                     _doDisplayLog$2223:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x19
  1081  000099                     	ds	1
  1082  00009A                     tirePositioning@topBreakbeam:
  1083                           	opt callstack 0
  1084  00009A                     errorCorrectedMove@error:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x1A
  1088  00009A                     	ds	2
  1089  00009C                     tirePositioning@bottomBreakbeam:
  1090                           	opt callstack 0
  1091  00009C                     errorCorrectedMove@ASpeed:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x1C
  1095  00009C                     	ds	2
  1096  00009E                     errorCorrectedMove@BSpeed:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1E
  1100  00009E                     	ds	2
  1101  0000A0                     ??_doOperation:
  1102                           
  1103                           ; 1 bytes @ 0x20
  1104  0000A0                     	ds	4
  1105  0000A4                     doOperation@PIDData:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x24
  1109  0000A4                     	ds	18
  1110  0000B6                     doOperation@tiresOnPoleAfterOp:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x36
  1114  0000B6                     	ds	2
  1115  0000B8                     doOperation@send:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x38
  1119  0000B8                     	ds	1
  1120  0000B9                     doOperation@badCount:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x39
  1124  0000B9                     	ds	2
  1125  0000BB                     doOperation@badCountBot:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3B
  1129  0000BB                     	ds	2
  1130  0000BD                     doOperation@poleNumber:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x3D
  1134  0000BD                     	ds	2
  1135  0000BF                     doOperation@totalTiresSupplied:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x3F
  1139  0000BF                     	ds	2
  1140  0000C1                     doOperation@distanceFromLastPole:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x41
  1144  0000C1                     	ds	2
  1145  0000C3                     doOperation@timeStart:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x43
  1149  0000C3                     	ds	4
  1150  0000C7                     doOperation@goalSpeed:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x47
  1154  0000C7                     	ds	2
  1155  0000C9                     doOperation@starterDist:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x49
  1159  0000C9                     	ds	2
  1160  0000CB                     doOperation@millisecondsMeasuredOld:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x4B
  1164  0000CB                     	ds	4
  1165  0000CF                     doOperation@isDoneDrop:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x4F
  1169  0000CF                     	ds	1
  1170  0000D0                     doOperation@motorAStartDistance:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x50
  1174  0000D0                     	ds	2
  1175  0000D2                     doOperation@motorBStartDistance:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x52
  1179  0000D2                     	ds	2
  1180  0000D4                     doOperation@counted:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x54
  1184  0000D4                     	ds	2
  1185  0000D6                     doOperation@distanceToPole:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x56
  1189  0000D6                     	ds	2
  1190  0000D8                     doOperation@tiresToDrop:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x58
  1194  0000D8                     	ds	2
  1195  0000DA                     doOperation@tiresDeployedOnPole:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x5A
  1199  0000DA                     	ds	2
  1200  0000DC                     doOperation@tiresOnPole:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x5C
  1204  0000DC                     	ds	2
  1205  0000DE                     doOperation@topLaserStatePrev:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x5E
  1209  0000DE                     	ds	1
  1210  0000DF                     doOperation@bottomLaserStatePrev:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x5F
  1214  0000DF                     	ds	1
  1215  0000E0                     doOperation@i:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x60
  1219  0000E0                     	ds	2
  1220  0000E2                     doOperation@timeInOperation:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x62
  1224  0000E2                     	ds	4
  1225  0000E6                     doOperation@currentOperationState:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x66
  1229  0000E6                     	ds	1
  1230  0000E7                     doOperation@bottomLaserState:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x67
  1234  0000E7                     	ds	1
  1235  0000E8                     doOperation@topLaserState:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x68
  1239  0000E8                     	ds	1
  1240  0000E9                     ??_main:
  1241                           
  1242                           ; 1 bytes @ 0x69
  1243  0000E9                     	ds	2
  1244                           
  1245                           	psect	cstackCOMRAM
  1246  000001                     __pcstackCOMRAM:
  1247                           	opt callstack 0
  1248  000001                     ??_updateMotorBEncoder:
  1249  000001                     ??_updateMotorAEncoder:
  1250  000001                     
  1251                           ; 1 bytes @ 0x0
  1252  000001                     	ds	1
  1253  000002                     updateMotorBEncoder@interruptPinState:
  1254                           	opt callstack 0
  1255  000002                     updateMotorAEncoder@interruptPinState:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x1
  1259  000002                     	ds	2
  1260  000004                     updateMotorBEncoder@directionPin:
  1261                           	opt callstack 0
  1262  000004                     updateMotorAEncoder@directionPin:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x3
  1266  000004                     	ds	2
  1267  000006                     ??_I2C_Master_Wait:
  1268  000006                     ?_strlen:
  1269                           	opt callstack 0
  1270  000006                     ?_isupper:
  1271                           	opt callstack 0
  1272  000006                     ?_isalpha:
  1273                           	opt callstack 0
  1274  000006                     ?_isdigit:
  1275                           	opt callstack 0
  1276  000006                     ?_isspace:
  1277                           	opt callstack 0
  1278  000006                     ?_islower:
  1279                           	opt callstack 0
  1280  000006                     ?___wmul:
  1281                           	opt callstack 0
  1282  000006                     ?___awdiv:
  1283                           	opt callstack 0
  1284  000006                     ?___awmod:
  1285                           	opt callstack 0
  1286  000006                     ?___lldiv:
  1287                           	opt callstack 0
  1288  000006                     ?___llmod:
  1289                           	opt callstack 0
  1290  000006                     ?___xxtofl:
  1291                           	opt callstack 0
  1292  000006                     ?___aodiv:
  1293                           	opt callstack 0
  1294  000006                     ?___aomod:
  1295                           	opt callstack 0
  1296  000006                     pulse_e@interruptState:
  1297                           	opt callstack 0
  1298  000006                     opDelay@millis:
  1299                           	opt callstack 0
  1300  000006                     replaceOldLog@i:
  1301                           	opt callstack 0
  1302  000006                     ___wmul@multiplier:
  1303                           	opt callstack 0
  1304  000006                     ___awdiv@dividend:
  1305                           	opt callstack 0
  1306  000006                     ___awmod@dividend:
  1307                           	opt callstack 0
  1308  000006                     isalpha@c:
  1309                           	opt callstack 0
  1310  000006                     isdigit@c:
  1311                           	opt callstack 0
  1312  000006                     isspace@c:
  1313                           	opt callstack 0
  1314  000006                     isupper@c:
  1315                           	opt callstack 0
  1316  000006                     strlen@s:
  1317                           	opt callstack 0
  1318  000006                     islower@c:
  1319                           	opt callstack 0
  1320  000006                     ___lldiv@dividend:
  1321                           	opt callstack 0
  1322  000006                     ___flge@ff1:
  1323                           	opt callstack 0
  1324  000006                     ___llmod@dividend:
  1325                           	opt callstack 0
  1326  000006                     ___xxtofl@val:
  1327                           	opt callstack 0
  1328  000006                     ___aodiv@dividend:
  1329                           	opt callstack 0
  1330  000006                     ___aomod@dividend:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 8 bytes @ 0x5
  1334  000006                     	ds	1
  1335  000007                     send_nibble@data:
  1336                           	opt callstack 0
  1337  000007                     I2C_Master_Read@ackBit:
  1338                           	opt callstack 0
  1339  000007                     I2C_Master_Write@byteToWrite:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x6
  1343  000007                     	ds	1
  1344  000008                     ??_isupper:
  1345  000008                     ??_isalpha:
  1346  000008                     ??_isdigit:
  1347  000008                     ??_isspace:
  1348  000008                     ??_islower:
  1349  000008                     send_byte@data:
  1350                           	opt callstack 0
  1351  000008                     I2C_Master_Read@receivedByte:
  1352                           	opt callstack 0
  1353  000008                     ___wmul@multiplicand:
  1354                           	opt callstack 0
  1355  000008                     ___awdiv@divisor:
  1356                           	opt callstack 0
  1357  000008                     ___awmod@divisor:
  1358                           	opt callstack 0
  1359  000008                     strlen@a:
  1360                           	opt callstack 0
  1361  000008                     opDelay@maxOperationTime:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x7
  1365  000008                     	ds	1
  1366  000009                     requestIsTireDropDone@data:
  1367                           	opt callstack 0
  1368  000009                     lcdInst@data:
  1369                           	opt callstack 0
  1370  000009                     putch@data:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x8
  1374  000009                     	ds	1
  1375  00000A                     ??_initLCD:
  1376  00000A                     ??___xxtofl:
  1377  00000A                     ___awdiv@counter:
  1378                           	opt callstack 0
  1379  00000A                     ___awmod@counter:
  1380                           	opt callstack 0
  1381  00000A                     ___wmul@product:
  1382                           	opt callstack 0
  1383  00000A                     fputc@c:
  1384                           	opt callstack 0
  1385  00000A                     ___lldiv@divisor:
  1386                           	opt callstack 0
  1387  00000A                     ___flge@ff2:
  1388                           	opt callstack 0
  1389  00000A                     ___llmod@divisor:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x9
  1393  00000A                     	ds	1
  1394  00000B                     ___awdiv@sign:
  1395                           	opt callstack 0
  1396  00000B                     ___awmod@sign:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 1 bytes @ 0xA
  1400  00000B                     	ds	1
  1401  00000C                     ??_opDelay:
  1402  00000C                     ?_toupper:
  1403                           	opt callstack 0
  1404  00000C                     _isspace$1856:
  1405                           	opt callstack 0
  1406  00000C                     ___awdiv@quotient:
  1407                           	opt callstack 0
  1408  00000C                     fputc@fp:
  1409                           	opt callstack 0
  1410  00000C                     toupper@c:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 2 bytes @ 0xB
  1414  00000C                     	ds	1
  1415  00000D                     ?_atoi:
  1416                           	opt callstack 0
  1417  00000D                     atoi@s:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0xC
  1421  00000D                     	ds	1
  1422  00000E                     ??_fputc:
  1423  00000E                     ??_toupper:
  1424  00000E                     ??___flge:
  1425  00000E                     ___llmod@counter:
  1426                           	opt callstack 0
  1427  00000E                     ___xxtofl@sign:
  1428                           	opt callstack 0
  1429  00000E                     ___lldiv@quotient:
  1430                           	opt callstack 0
  1431  00000E                     ___aodiv@divisor:
  1432                           	opt callstack 0
  1433  00000E                     ___aomod@divisor:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 8 bytes @ 0xD
  1437  00000E                     	ds	1
  1438  00000F                     ??_atoi:
  1439  00000F                     ___xxtofl@exp:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 1 bytes @ 0xE
  1443  00000F                     	ds	1
  1444  000010                     ___xxtofl@arg:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 4 bytes @ 0xF
  1448  000010                     	ds	2
  1449  000012                     ___lldiv@counter:
  1450                           	opt callstack 0
  1451  000012                     _toupper$1920:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x11
  1455  000012                     	ds	1
  1456  000013                     ?_stoa:
  1457                           	opt callstack 0
  1458  000013                     stoa@fp:
  1459                           	opt callstack 0
  1460  000013                     atoi@neg:
  1461                           	opt callstack 0
  1462  000013                     fputs@s:
  1463                           	opt callstack 0
  1464  000013                     I2C_Master_Init@clockFreq:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 4 bytes @ 0x12
  1468  000013                     	ds	1
  1469  000014                     ?___flmul:
  1470                           	opt callstack 0
  1471  000014                     opDelay@startTime:
  1472                           	opt callstack 0
  1473  000014                     ___flmul@b:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x13
  1477  000014                     	ds	1
  1478  000015                     stoa@s:
  1479                           	opt callstack 0
  1480  000015                     _atoi$1829:
  1481                           	opt callstack 0
  1482  000015                     fputs@fp:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x14
  1486  000015                     	ds	1
  1487  000016                     ___aodiv@counter:
  1488                           	opt callstack 0
  1489  000016                     ___aomod@counter:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x15
  1493  000016                     	ds	1
  1494  000017                     ??_I2C_Master_Init:
  1495  000017                     ??_stoa:
  1496  000017                     ___aodiv@sign:
  1497                           	opt callstack 0
  1498  000017                     ___aomod@sign:
  1499                           	opt callstack 0
  1500  000017                     fputs@c:
  1501                           	opt callstack 0
  1502  000017                     _atoi$1831:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x16
  1506  000017                     	ds	1
  1507  000018                     ?_abs:
  1508                           	opt callstack 0
  1509  000018                     abs@a:
  1510                           	opt callstack 0
  1511  000018                     fputs@i:
  1512                           	opt callstack 0
  1513  000018                     ___flmul@a:
  1514                           	opt callstack 0
  1515  000018                     stoa@nuls:
  1516                           	opt callstack 0
  1517  000018                     ___aodiv@quotient:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 8 bytes @ 0x17
  1521  000018                     	ds	1
  1522  000019                     _atoi$1830:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 1 bytes @ 0x18
  1526  000019                     	ds	1
  1527  00001A                     ??_abs:
  1528  00001A                     ?_pad:
  1529                           	opt callstack 0
  1530  00001A                     pad@fp:
  1531                           	opt callstack 0
  1532  00001A                     atoi@n:
  1533                           	opt callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x19
  1536  00001A                     	ds	1
  1537  00001B                     
  1538                           ; 1 bytes @ 0x1A
  1539  00001B                     	ds	1
  1540  00001C                     ??___flmul:
  1541  00001C                     pad@buf:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x1B
  1545  00001C                     	ds	2
  1546  00001E                     pad@p:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x1D
  1550  00001E                     	ds	1
  1551  00001F                     stoa@i:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x1E
  1555  00001F                     	ds	1
  1556  000020                     ??_pad:
  1557  000020                     ___flmul@sign:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x1F
  1561  000020                     	ds	1
  1562  000021                     ___flmul@aexp:
  1563                           	opt callstack 0
  1564  000021                     pad@i:
  1565                           	opt callstack 0
  1566  000021                     stoa@w:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x20
  1570  000021                     	ds	1
  1571  000022                     ___flmul@grs:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 4 bytes @ 0x21
  1575  000022                     	ds	1
  1576  000023                     pad@w:
  1577                           	opt callstack 0
  1578  000023                     stoa@cp:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x22
  1582  000023                     	ds	2
  1583  000025                     ?_ctoa:
  1584                           	opt callstack 0
  1585  000025                     ?_dtoa:
  1586                           	opt callstack 0
  1587  000025                     ?_xtoa:
  1588                           	opt callstack 0
  1589  000025                     ctoa@fp:
  1590                           	opt callstack 0
  1591  000025                     dtoa@fp:
  1592                           	opt callstack 0
  1593  000025                     stoa@p:
  1594                           	opt callstack 0
  1595  000025                     xtoa@fp:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x24
  1599  000025                     	ds	1
  1600  000026                     ___flmul@bexp:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 1 bytes @ 0x25
  1604  000026                     	ds	1
  1605  000027                     ctoa@c:
  1606                           	opt callstack 0
  1607  000027                     stoa@l:
  1608                           	opt callstack 0
  1609  000027                     ___flmul@prod:
  1610                           	opt callstack 0
  1611  000027                     dtoa@d:
  1612                           	opt callstack 0
  1613  000027                     xtoa@d:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 8 bytes @ 0x26
  1617  000027                     	ds	1
  1618  000028                     ctoa@w:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x27
  1622  000028                     	ds	3
  1623  00002B                     ___flmul@temp:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x2A
  1627  00002B                     	ds	2
  1628  00002D                     ?___fladd:
  1629                           	opt callstack 0
  1630  00002D                     ?___fldiv:
  1631                           	opt callstack 0
  1632  00002D                     ___fladd@b:
  1633                           	opt callstack 0
  1634  00002D                     ___fldiv@b:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x2C
  1638  00002D                     	ds	2
  1639  00002F                     ??_dtoa:
  1640  00002F                     xtoa@x:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x2E
  1644  00002F                     	ds	1
  1645  000030                     ??_xtoa:
  1646                           
  1647                           ; 1 bytes @ 0x2F
  1648  000030                     	ds	1
  1649  000031                     ___fladd@a:
  1650                           	opt callstack 0
  1651  000031                     ___fldiv@a:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x30
  1655  000031                     	ds	4
  1656  000035                     ??___fladd:
  1657  000035                     ??___fldiv:
  1658                           
  1659                           ; 1 bytes @ 0x34
  1660  000035                     	ds	2
  1661  000037                     _dtoa$1333:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x36
  1665  000037                     	ds	1
  1666  000038                     _xtoa$1354:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x37
  1670  000038                     	ds	1
  1671  000039                     ___fladd@signs:
  1672                           	opt callstack 0
  1673  000039                     dtoa@p:
  1674                           	opt callstack 0
  1675  000039                     ___fldiv@rem:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 4 bytes @ 0x38
  1679  000039                     	ds	1
  1680  00003A                     ___fladd@aexp:
  1681                           	opt callstack 0
  1682  00003A                     _xtoa$1355:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x39
  1686  00003A                     	ds	1
  1687  00003B                     ___fladd@bexp:
  1688                           	opt callstack 0
  1689  00003B                     dtoa@w:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x3A
  1693  00003B                     	ds	1
  1694  00003C                     ___fladd@grs:
  1695                           	opt callstack 0
  1696  00003C                     xtoa@p:
  1697                           	opt callstack 0
  1698                           
  1699                           ; 2 bytes @ 0x3B
  1700  00003C                     	ds	1
  1701  00003D                     ___fldiv@sign:
  1702                           	opt callstack 0
  1703  00003D                     dtoa@s:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x3C
  1707  00003D                     	ds	1
  1708  00003E                     xtoa@w:
  1709                           	opt callstack 0
  1710  00003E                     ___fldiv@new_exp:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x3D
  1714  00003E                     	ds	1
  1715  00003F                     dtoa@n:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 8 bytes @ 0x3E
  1719  00003F                     	ds	1
  1720  000040                     ___fldiv@grs:
  1721                           	opt callstack 0
  1722  000040                     xtoa@n:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 8 bytes @ 0x3F
  1726  000040                     	ds	4
  1727  000044                     ___fldiv@bexp:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x43
  1731  000044                     	ds	1
  1732  000045                     ___fldiv@aexp:
  1733                           	opt callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x44
  1736  000045                     	ds	1
  1737  000046                     ?___flsub:
  1738                           	opt callstack 0
  1739  000046                     ___flsub@b:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 4 bytes @ 0x45
  1743  000046                     	ds	1
  1744  000047                     dtoa@i:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x46
  1748  000047                     	ds	1
  1749  000048                     xtoa@i:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 2 bytes @ 0x47
  1753  000048                     	ds	2
  1754  00004A                     xtoa@c:
  1755                           	opt callstack 0
  1756  00004A                     ___flsub@a:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 4 bytes @ 0x49
  1760  00004A                     	ds	2
  1761  00004C                     ?_vfpfcnvrt:
  1762                           	opt callstack 0
  1763  00004C                     vfpfcnvrt@fp:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x4B
  1767  00004C                     	ds	2
  1768  00004E                     ?___fltol:
  1769                           	opt callstack 0
  1770  00004E                     vfpfcnvrt@fmt:
  1771                           	opt callstack 0
  1772  00004E                     ___fltol@f1:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 4 bytes @ 0x4D
  1776  00004E                     	ds	2
  1777  000050                     vfpfcnvrt@ap:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x4F
  1781  000050                     	ds	2
  1782  000052                     ??_vfpfcnvrt:
  1783  000052                     ??___fltol:
  1784                           
  1785                           ; 1 bytes @ 0x51
  1786  000052                     	ds	4
  1787  000056                     ___fltol@sign1:
  1788                           	opt callstack 0
  1789  000056                     vfpfcnvrt@ll:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 8 bytes @ 0x55
  1793  000056                     	ds	1
  1794  000057                     ___fltol@exp1:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x56
  1798  000057                     	ds	1
  1799  000058                     set_pwm_duty_cycle@dutyA:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 4 bytes @ 0x57
  1803  000058                     	ds	4
  1804  00005C                     set_pwm_duty_cycle@dutyB:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x5B
  1808  00005C                     	ds	2
  1809  00005E                     vfpfcnvrt@llu:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 8 bytes @ 0x5D
  1813  00005E                     	ds	2
  1814  000060                     ??_set_pwm_duty_cycle:
  1815                           
  1816                           ; 1 bytes @ 0x5F
  1817  000060                     	ds	2
  1818  000062                     set_pwm_duty_cycle@max_duty_val:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x61
  1822  000062                     	ds	2
  1823  000064                     set_pwm_duty_cycle@duty_valA:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 2 bytes @ 0x63
  1827  000064                     	ds	2
  1828  000066                     set_pwm_duty_cycle@duty_valB:
  1829                           	opt callstack 0
  1830  000066                     vfpfcnvrt@cp:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x65
  1834  000066                     	ds	2
  1835  000068                     vfpfcnvrt@done:
  1836                           	opt callstack 0
  1837  000068                     _set_pwm_duty_cycle$2224:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 4 bytes @ 0x67
  1841  000068                     	ds	2
  1842  00006A                     _vfpfcnvrt$1369:
  1843                           	opt callstack 0
  1844                           
  1845                           ; 2 bytes @ 0x69
  1846  00006A                     	ds	2
  1847  00006C                     vfpfcnvrt@c:
  1848                           	opt callstack 0
  1849  00006C                     setMotorSpeeds@motorASpeed:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x6B
  1853  00006C                     	ds	1
  1854  00006D                     ?_vfprintf:
  1855                           	opt callstack 0
  1856  00006D                     vfprintf@fp:
  1857                           	opt callstack 0
  1858                           
  1859                           ; 2 bytes @ 0x6C
  1860  00006D                     	ds	1
  1861  00006E                     setMotorSpeeds@Aforward:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 1 bytes @ 0x6D
  1865  00006E                     	ds	1
  1866  00006F                     setMotorSpeeds@Bforward:
  1867                           	opt callstack 0
  1868  00006F                     vfprintf@fmt:
  1869                           	opt callstack 0
  1870                           
  1871                           ; 2 bytes @ 0x6E
  1872  00006F                     	ds	1
  1873  000070                     setMotorSpeeds@motorBSpeed:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x6F
  1877  000070                     	ds	1
  1878  000071                     vfprintf@ap:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x70
  1882  000071                     	ds	1
  1883  000072                     ??_tirePositioning:
  1884                           
  1885                           ; 1 bytes @ 0x71
  1886  000072                     	ds	1
  1887  000073                     vfprintf@cfmt:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x72
  1891  000073                     	ds	2
  1892  000075                     
  1893                           ; 1 bytes @ 0x74
  1894 ;;
  1895 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1896 ;;
  1897 ;; *************** function _main *****************
  1898 ;; Defined at:
  1899 ;;		line 1025 in file "main.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  i               1   12[BANK1 ] unsigned char 
  1904 ;;  keyValue        1   15[BANK1 ] unsigned char 
  1905 ;;  keypress        1   11[BANK1 ] unsigned char 
  1906 ;;  time            7    0[BANK1 ] unsigned char [7]
  1907 ;;  tick            4    7[BANK1 ] unsigned long 
  1908 ;;  currentRobot    1   14[BANK1 ] enum E3411
  1909 ;;  currentLogSt    1   13[BANK1 ] enum E3418
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:       18 bytes
  1924 ;; Hardware stack levels required when called:   14
  1925 ;; This function calls:
  1926 ;;		_I2C_Master_Read
  1927 ;;		_I2C_Master_Start
  1928 ;;		_I2C_Master_Stop
  1929 ;;		_I2C_Master_Write
  1930 ;;		___llmod
  1931 ;;		_doDisplayLog
  1932 ;;		_doOperation
  1933 ;;		_lcdInst
  1934 ;;		_printf
  1935 ;;		_replaceOldLog
  1936 ;;		_robotInit
  1937 ;; This function is called by:
  1938 ;;		Startup code after reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text0
  1943  0009DE                     __ptext0:
  1944                           	opt callstack 0
  1945  0009DE                     _main:
  1946                           	opt callstack 17
  1947                           
  1948                           ;main.c: 1026:     robotInit();
  1949                           
  1950                           ;incstack = 0
  1951  0009DE  ECDE  F01A         	call	_robotInit	;wreg free
  1952                           
  1953                           ;main.c: 1029:     unsigned char time[7];;main.c: 1036:     enum robotStates currentRobo
      +                          tState = standby;
  1954  0009E2  0E00               	movlw	0
  1955  0009E4  0101               	movlb	1	; () banked
  1956  0009E6  6F38               	movwf	main@currentRobotState& (0+255),b
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;main.c: 1038:     enum logStates currentLogState = one;
  1960  0009E8  0E01               	movlw	1
  1961  0009EA  6F37               	movwf	main@currentLogState& (0+255),b
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;main.c: 1040:     unsigned long tick = 0;
  1965  0009EC  0E00               	movlw	0
  1966  0009EE  6F31               	movwf	main@tick& (0+255),b
  1967  0009F0  0E00               	movlw	0
  1968  0009F2  6F32               	movwf	(main@tick+1)& (0+255),b
  1969  0009F4  0E00               	movlw	0
  1970  0009F6  6F33               	movwf	(main@tick+2)& (0+255),b
  1971  0009F8  0E00               	movlw	0
  1972  0009FA  6F34               	movwf	(main@tick+3)& (0+255),b
  1973  0009FC                     l8724:
  1974                           
  1975                           ;main.c: 1043:             if (tick%10==0){
  1976  0009FC  C131  F006         	movff	main@tick,___llmod@dividend
  1977  000A00  C132  F007         	movff	main@tick+1,___llmod@dividend+1
  1978  000A04  C133  F008         	movff	main@tick+2,___llmod@dividend+2
  1979  000A08  C134  F009         	movff	main@tick+3,___llmod@dividend+3
  1980  000A0C  0E0A               	movlw	10
  1981  000A0E  6E0A               	movwf	___llmod@divisor,c
  1982  000A10  0E00               	movlw	0
  1983  000A12  6E0B               	movwf	___llmod@divisor+1,c
  1984  000A14  0E00               	movlw	0
  1985  000A16  6E0C               	movwf	___llmod@divisor+2,c
  1986  000A18  0E00               	movlw	0
  1987  000A1A  6E0D               	movwf	___llmod@divisor+3,c
  1988  000A1C  EC01  F019         	call	___llmod	;wreg free
  1989  000A20  5006               	movf	?___llmod,w,c
  1990  000A22  1007               	iorwf	?___llmod+1,w,c
  1991  000A24  1008               	iorwf	?___llmod+2,w,c
  1992  000A26  1009               	iorwf	?___llmod+3,w,c
  1993  000A28  A4D8               	btfss	status,2,c
  1994  000A2A  D152               	goto	l8830
  1995                           
  1996                           ;main.c: 1045:                 I2C_Master_Start();
  1997  000A2C  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  1998                           
  1999                           ;main.c: 1046:                 I2C_Master_Write(0b11010000);
  2000  000A30  0E00               	movlw	0
  2001  000A32  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2002  000A34  0ED0               	movlw	208
  2003  000A36  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2004  000A38  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  2005                           
  2006                           ;main.c: 1047:                 I2C_Master_Write(0x00);
  2007  000A3C  0E00               	movlw	0
  2008  000A3E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2009  000A40  0E00               	movlw	0
  2010  000A42  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2011  000A44  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  2012                           
  2013                           ;main.c: 1048:                 I2C_Master_Stop();
  2014  000A48  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  2015                           
  2016                           ;main.c: 1051:                 I2C_Master_Start();
  2017  000A4C  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  2018                           
  2019                           ;main.c: 1052:                 I2C_Master_Write(0b11010001);
  2020  000A50  0E00               	movlw	0
  2021  000A52  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2022  000A54  0ED1               	movlw	209
  2023  000A56  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2024  000A58  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  2025                           
  2026                           ;main.c: 1053:                 for(unsigned char i = 0; i < 6; i++){
  2027  000A5C  0E00               	movlw	0
  2028  000A5E  0101               	movlb	1	; () banked
  2029  000A60  6F36               	movwf	main@i& (0+255),b
  2030  000A62                     l8734:
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;main.c: 1054:                     time[i] = I2C_Master_Read(0);
  2034  000A62  0E2A               	movlw	low main@time
  2035  000A64  2536               	addwf	main@i& (0+255),w,b
  2036  000A66  6ED9               	movwf	fsr2l,c
  2037  000A68  6ADA               	clrf	fsr2h,c
  2038  000A6A  0E01               	movlw	high main@time
  2039  000A6C  22DA               	addwfc	fsr2h,f,c
  2040  000A6E  0E00               	movlw	0
  2041  000A70  EC1A  F01C         	call	_I2C_Master_Read
  2042  000A74  6EDF               	movwf	indf2,c
  2043                           
  2044                           ;main.c: 1055:                 }
  2045  000A76  0101               	movlb	1	; () banked
  2046  000A78  2B36               	incf	main@i& (0+255),f,b
  2047                           
  2048                           ; BSR set to: 1
  2049  000A7A  0E05               	movlw	5
  2050  000A7C  6536               	cpfsgt	main@i& (0+255),b
  2051  000A7E  D7F1               	goto	l8734
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;main.c: 1056:                 time[6] = I2C_Master_Read(1);
  2055  000A80  0E01               	movlw	1
  2056  000A82  EC1A  F01C         	call	_I2C_Master_Read
  2057  000A86  0101               	movlb	1	; () banked
  2058  000A88  6F30               	movwf	(main@time+6)& (0+255),b
  2059                           
  2060                           ;main.c: 1057:                 I2C_Master_Stop();
  2061  000A8A  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  2062  000A8E  D120               	goto	l8830
  2063  000A90                     l8742:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;main.c: 1070:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2067  000A90  0E80               	movlw	128
  2068  000A92  EC9D  F01C         	call	_lcdInst
  2069  000A96  0E07               	movlw	7
  2070  000A98  0100               	movlb	0	; () banked
  2071  000A9A  6FE9               	movwf	??_main& (0+255),b
  2072  000A9C  0E7D               	movlw	125
  2073  000A9E                     u10117:
  2074  000A9E  2EE8               	decfsz	wreg,f,c
  2075  000AA0  D7FE               	bra	u10117
  2076  000AA2  2FE9               	decfsz	??_main& (0+255),f,b
  2077  000AA4  D7FC               	bra	u10117
  2078                           
  2079                           ;main.c: 1072:                 printf("%s", "WELCOME ");
  2080  000AA6  0E18               	movlw	low (STR_1+4)
  2081  000AA8  0100               	movlb	0	; () banked
  2082  000AAA  6F80               	movwf	printf@fmt& (0+255),b
  2083  000AAC  0EFD               	movlw	high (STR_1+4)
  2084  000AAE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2085  000AB0  0EF0               	movlw	low STR_27
  2086  000AB2  6F82               	movwf	(?_printf+2)& (0+255),b
  2087  000AB4  0EFC               	movlw	high STR_27
  2088  000AB6  6F83               	movwf	(?_printf+3)& (0+255),b
  2089  000AB8  ECF3  F01B         	call	_printf	;wreg free
  2090                           
  2091                           ;main.c: 1073:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2092  000ABC  0EF7               	movlw	low STR_28
  2093  000ABE  0100               	movlb	0	; () banked
  2094  000AC0  6F80               	movwf	printf@fmt& (0+255),b
  2095  000AC2  0EFB               	movlw	high STR_28
  2096  000AC4  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2097  000AC6  C130  F082         	movff	main@time+6,?_printf+2
  2098  000ACA  6B83               	clrf	(?_printf+3)& (0+255),b
  2099  000ACC  C12F  F084         	movff	main@time+5,?_printf+4
  2100  000AD0  6B85               	clrf	(?_printf+5)& (0+255),b
  2101  000AD2  C12E  F086         	movff	main@time+4,?_printf+6
  2102  000AD6  6B87               	clrf	(?_printf+7)& (0+255),b
  2103  000AD8  ECF3  F01B         	call	_printf	;wreg free
  2104  000ADC  0EC0               	movlw	192
  2105  000ADE  EC9D  F01C         	call	_lcdInst
  2106                           
  2107                           ;main.c: 1075:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2108  000AE2  0E06               	movlw	low STR_29
  2109  000AE4  0100               	movlb	0	; () banked
  2110  000AE6  6F80               	movwf	printf@fmt& (0+255),b
  2111  000AE8  0EFC               	movlw	high STR_29
  2112  000AEA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2113  000AEC  C12C  F082         	movff	main@time+2,?_printf+2
  2114  000AF0  6B83               	clrf	(?_printf+3)& (0+255),b
  2115  000AF2  C12B  F084         	movff	main@time+1,?_printf+4
  2116  000AF6  6B85               	clrf	(?_printf+5)& (0+255),b
  2117  000AF8  C12A  F086         	movff	main@time,?_printf+6
  2118  000AFC  6B87               	clrf	(?_printf+7)& (0+255),b
  2119  000AFE  ECF3  F01B         	call	_printf	;wreg free
  2120  000B02  0E90               	movlw	144
  2121  000B04  EC9D  F01C         	call	_lcdInst
  2122                           
  2123                           ;main.c: 1077:                 printf("%s","(1) START");
  2124  000B08  0E18               	movlw	low (STR_1+4)
  2125  000B0A  0100               	movlb	0	; () banked
  2126  000B0C  6F80               	movwf	printf@fmt& (0+255),b
  2127  000B0E  0EFD               	movlw	high (STR_1+4)
  2128  000B10  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2129  000B12  0EDC               	movlw	low STR_31
  2130  000B14  6F82               	movwf	(?_printf+2)& (0+255),b
  2131  000B16  0EFC               	movlw	high STR_31
  2132  000B18  6F83               	movwf	(?_printf+3)& (0+255),b
  2133  000B1A  ECF3  F01B         	call	_printf	;wreg free
  2134  000B1E  0ED0               	movlw	208
  2135  000B20  EC9D  F01C         	call	_lcdInst
  2136                           
  2137                           ;main.c: 1079:                 printf("%s","(2) VIEW LOGS");
  2138  000B24  0E18               	movlw	low (STR_1+4)
  2139  000B26  0100               	movlb	0	; () banked
  2140  000B28  6F80               	movwf	printf@fmt& (0+255),b
  2141  000B2A  0EFD               	movlw	high (STR_1+4)
  2142  000B2C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2143  000B2E  0E3F               	movlw	low STR_33
  2144  000B30  6F82               	movwf	(?_printf+2)& (0+255),b
  2145  000B32  0EFC               	movlw	high STR_33
  2146  000B34  6F83               	movwf	(?_printf+3)& (0+255),b
  2147  000B36  ECF3  F01B         	call	_printf	;wreg free
  2148                           
  2149                           ;main.c: 1080:                 break;
  2150  000B3A  D0E3               	goto	l8832
  2151  000B3C                     l8762:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;main.c: 1083:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2155  000B3C  0E80               	movlw	128
  2156  000B3E  EC9D  F01C         	call	_lcdInst
  2157  000B42  0E07               	movlw	7
  2158  000B44  0100               	movlb	0	; () banked
  2159  000B46  6FE9               	movwf	??_main& (0+255),b
  2160  000B48  0E7D               	movlw	125
  2161  000B4A                     u10127:
  2162  000B4A  2EE8               	decfsz	wreg,f,c
  2163  000B4C  D7FE               	bra	u10127
  2164  000B4E  2FE9               	decfsz	??_main& (0+255),f,b
  2165  000B50  D7FC               	bra	u10127
  2166                           
  2167                           ;main.c: 1084:                 printf("%s", "OPERATION IN");
  2168  000B52  0E18               	movlw	low (STR_1+4)
  2169  000B54  0100               	movlb	0	; () banked
  2170  000B56  6F80               	movwf	printf@fmt& (0+255),b
  2171  000B58  0EFD               	movlw	high (STR_1+4)
  2172  000B5A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2173  000B5C  0E75               	movlw	low STR_35
  2174  000B5E  6F82               	movwf	(?_printf+2)& (0+255),b
  2175  000B60  0EFC               	movlw	high STR_35
  2176  000B62  6F83               	movwf	(?_printf+3)& (0+255),b
  2177  000B64  ECF3  F01B         	call	_printf	;wreg free
  2178  000B68  0EC0               	movlw	192
  2179  000B6A  EC9D  F01C         	call	_lcdInst
  2180                           
  2181                           ;main.c: 1086:                 printf("%s","PROGRESS");
  2182  000B6E  0E18               	movlw	low (STR_1+4)
  2183  000B70  0100               	movlb	0	; () banked
  2184  000B72  6F80               	movwf	printf@fmt& (0+255),b
  2185  000B74  0EFD               	movlw	high (STR_1+4)
  2186  000B76  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2187  000B78  0E02               	movlw	low STR_37
  2188  000B7A  6F82               	movwf	(?_printf+2)& (0+255),b
  2189  000B7C  0EFD               	movlw	high STR_37
  2190  000B7E  6F83               	movwf	(?_printf+3)& (0+255),b
  2191  000B80  ECF3  F01B         	call	_printf	;wreg free
  2192                           
  2193                           ;main.c: 1087:                 doOperation();
  2194  000B84  EC09  F000         	call	_doOperation	;wreg free
  2195                           
  2196                           ;main.c: 1088:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2197  000B88  0E01               	movlw	1
  2198  000B8A  EC9D  F01C         	call	_lcdInst
  2199  000B8E  0E11               	movlw	17
  2200  000B90  0100               	movlb	0	; () banked
  2201  000B92  6FE9               	movwf	??_main& (0+255),b
  2202  000B94  0E3A               	movlw	58
  2203  000B96                     u10137:
  2204  000B96  2EE8               	decfsz	wreg,f,c
  2205  000B98  D7FE               	bra	u10137
  2206  000B9A  2FE9               	decfsz	??_main& (0+255),f,b
  2207  000B9C  D7FC               	bra	u10137
  2208  000B9E  F000               	nop	
  2209                           
  2210                           ;main.c: 1089:                 currentRobotState = operationComplete;
  2211  000BA0  0E02               	movlw	2
  2212  000BA2  D093               	goto	L1
  2213  000BA4                     l8780:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 1095:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2217  000BA4  0E80               	movlw	128
  2218  000BA6  EC9D  F01C         	call	_lcdInst
  2219  000BAA  0E07               	movlw	7
  2220  000BAC  0100               	movlb	0	; () banked
  2221  000BAE  6FE9               	movwf	??_main& (0+255),b
  2222  000BB0  0E7D               	movlw	125
  2223  000BB2                     u10147:
  2224  000BB2  2EE8               	decfsz	wreg,f,c
  2225  000BB4  D7FE               	bra	u10147
  2226  000BB6  2FE9               	decfsz	??_main& (0+255),f,b
  2227  000BB8  D7FC               	bra	u10147
  2228                           
  2229                           ;main.c: 1096:                 printf("%s", "OP. COMPLETE");
  2230  000BBA  0E18               	movlw	low (STR_1+4)
  2231  000BBC  0100               	movlb	0	; () banked
  2232  000BBE  6F80               	movwf	printf@fmt& (0+255),b
  2233  000BC0  0EFD               	movlw	high (STR_1+4)
  2234  000BC2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2235  000BC4  0E5B               	movlw	low STR_39
  2236  000BC6  6F82               	movwf	(?_printf+2)& (0+255),b
  2237  000BC8  0EFC               	movlw	high STR_39
  2238  000BCA  6F83               	movwf	(?_printf+3)& (0+255),b
  2239  000BCC  ECF3  F01B         	call	_printf	;wreg free
  2240  000BD0  0EC0               	movlw	192
  2241  000BD2  EC9D  F01C         	call	_lcdInst
  2242                           
  2243                           ;main.c: 1098:                 printf("%s","(1) VIEW LOG");
  2244  000BD6  0E18               	movlw	low (STR_1+4)
  2245  000BD8  0100               	movlb	0	; () banked
  2246  000BDA  6F80               	movwf	printf@fmt& (0+255),b
  2247  000BDC  0EFD               	movlw	high (STR_1+4)
  2248  000BDE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2249  000BE0  0E68               	movlw	low STR_41
  2250  000BE2  6F82               	movwf	(?_printf+2)& (0+255),b
  2251  000BE4  0EFC               	movlw	high STR_41
  2252  000BE6  6F83               	movwf	(?_printf+3)& (0+255),b
  2253  000BE8  ECF3  F01B         	call	_printf	;wreg free
  2254  000BEC  0E90               	movlw	144
  2255  000BEE  EC9D  F01C         	call	_lcdInst
  2256                           
  2257                           ;main.c: 1100:                 printf("%s","(2) QUIT DO NOT");
  2258  000BF2  0E18               	movlw	low (STR_1+4)
  2259  000BF4  0100               	movlb	0	; () banked
  2260  000BF6  6F80               	movwf	printf@fmt& (0+255),b
  2261  000BF8  0EFD               	movlw	high (STR_1+4)
  2262  000BFA  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2263  000BFC  0ED8               	movlw	low STR_43
  2264  000BFE  6F82               	movwf	(?_printf+2)& (0+255),b
  2265  000C00  0EFB               	movlw	high STR_43
  2266  000C02  6F83               	movwf	(?_printf+3)& (0+255),b
  2267  000C04  ECF3  F01B         	call	_printf	;wreg free
  2268  000C08  0ED0               	movlw	208
  2269  000C0A  EC9D  F01C         	call	_lcdInst
  2270                           
  2271                           ;main.c: 1102:                 printf("%s","SAVE LOG");
  2272  000C0E  0E18               	movlw	low (STR_1+4)
  2273  000C10  0100               	movlb	0	; () banked
  2274  000C12  6F80               	movwf	printf@fmt& (0+255),b
  2275  000C14  0EFD               	movlw	high (STR_1+4)
  2276  000C16  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2277  000C18  0EF9               	movlw	low STR_45
  2278  000C1A  6F82               	movwf	(?_printf+2)& (0+255),b
  2279  000C1C  0EFC               	movlw	high STR_45
  2280  000C1E  6F83               	movwf	(?_printf+3)& (0+255),b
  2281  000C20  ECF3  F01B         	call	_printf	;wreg free
  2282                           
  2283                           ;main.c: 1103:                 currentLogState = justRan;
  2284  000C24  0E00               	movlw	0
  2285  000C26  0101               	movlb	1	; () banked
  2286  000C28  6F37               	movwf	main@currentLogState& (0+255),b
  2287                           
  2288                           ;main.c: 1104:                 break;
  2289  000C2A  D06B               	goto	l8832
  2290  000C2C                     l8800:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;main.c: 1107:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2294  000C2C  0E80               	movlw	128
  2295  000C2E  EC9D  F01C         	call	_lcdInst
  2296  000C32  0E07               	movlw	7
  2297  000C34  0100               	movlb	0	; () banked
  2298  000C36  6FE9               	movwf	??_main& (0+255),b
  2299  000C38  0E7D               	movlw	125
  2300  000C3A                     u10157:
  2301  000C3A  2EE8               	decfsz	wreg,f,c
  2302  000C3C  D7FE               	bra	u10157
  2303  000C3E  2FE9               	decfsz	??_main& (0+255),f,b
  2304  000C40  D7FC               	bra	u10157
  2305                           
  2306                           ;main.c: 1108:                 printf("%s", "SELECT LOG");
  2307  000C42  0E18               	movlw	low (STR_1+4)
  2308  000C44  0100               	movlb	0	; () banked
  2309  000C46  6F80               	movwf	printf@fmt& (0+255),b
  2310  000C48  0EFD               	movlw	high (STR_1+4)
  2311  000C4A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2312  000C4C  0E9C               	movlw	low STR_47
  2313  000C4E  6F82               	movwf	(?_printf+2)& (0+255),b
  2314  000C50  0EFC               	movlw	high STR_47
  2315  000C52  6F83               	movwf	(?_printf+3)& (0+255),b
  2316  000C54  ECF3  F01B         	call	_printf	;wreg free
  2317  000C58  0EC0               	movlw	192
  2318  000C5A  EC9D  F01C         	call	_lcdInst
  2319                           
  2320                           ;main.c: 1110:                 printf("%s","(1 IS OLDEST)");
  2321  000C5E  0E18               	movlw	low (STR_1+4)
  2322  000C60  0100               	movlb	0	; () banked
  2323  000C62  6F80               	movwf	printf@fmt& (0+255),b
  2324  000C64  0EFD               	movlw	high (STR_1+4)
  2325  000C66  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2326  000C68  0E23               	movlw	low STR_49
  2327  000C6A  6F82               	movwf	(?_printf+2)& (0+255),b
  2328  000C6C  0EFC               	movlw	high STR_49
  2329  000C6E  6F83               	movwf	(?_printf+3)& (0+255),b
  2330  000C70  ECF3  F01B         	call	_printf	;wreg free
  2331  000C74  0E90               	movlw	144
  2332  000C76  EC9D  F01C         	call	_lcdInst
  2333                           
  2334                           ;main.c: 1112:                 printf("%s","(1) (2) (3) (4)");
  2335  000C7A  0E18               	movlw	low (STR_1+4)
  2336  000C7C  0100               	movlb	0	; () banked
  2337  000C7E  6F80               	movwf	printf@fmt& (0+255),b
  2338  000C80  0EFD               	movlw	high (STR_1+4)
  2339  000C82  6F81               	movwf	(printf@fmt+1)& (0+255),b
  2340  000C84  0EB8               	movlw	low STR_51
  2341  000C86  6F82               	movwf	(?_printf+2)& (0+255),b
  2342  000C88  0EFB               	movlw	high STR_51
  2343  000C8A  6F83               	movwf	(?_printf+3)& (0+255),b
  2344  000C8C  ECF3  F01B         	call	_printf	;wreg free
  2345                           
  2346                           ;main.c: 1113:                 break;
  2347  000C90  D038               	goto	l8832
  2348  000C92                     l8814:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 1115:                 if (currentLogState == justRan){
  2352  000C92  0101               	movlb	1	; () banked
  2353  000C94  5137               	movf	main@currentLogState& (0+255),w,b
  2354  000C96  A4D8               	btfss	status,2,c
  2355  000C98  D005               	goto	l8820
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;main.c: 1116:                     replaceOldLog();
  2359  000C9A  ECE7  F019         	call	_replaceOldLog	;wreg free
  2360                           
  2361                           ;main.c: 1117:                     currentLogState = four;
  2362  000C9E  0E04               	movlw	4
  2363  000CA0  0101               	movlb	1	; () banked
  2364  000CA2  6F37               	movwf	main@currentLogState& (0+255),b
  2365  000CA4                     l8820:
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;main.c: 1119:                 doDisplayLog(currentLogState);
  2369  000CA4  C137  F08E         	movff	main@currentLogState,doDisplayLog@logNumber
  2370  000CA8  0100               	movlb	0	; () banked
  2371  000CAA  6B8F               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2372  000CAC  ECFF  F006         	call	_doDisplayLog	;wreg free
  2373                           
  2374                           ;main.c: 1120:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2375  000CB0  0E01               	movlw	1
  2376  000CB2  EC9D  F01C         	call	_lcdInst
  2377  000CB6  0E11               	movlw	17
  2378  000CB8  0100               	movlb	0	; () banked
  2379  000CBA  6FE9               	movwf	??_main& (0+255),b
  2380  000CBC  0E3A               	movlw	58
  2381  000CBE                     u10167:
  2382  000CBE  2EE8               	decfsz	wreg,f,c
  2383  000CC0  D7FE               	bra	u10167
  2384  000CC2  2FE9               	decfsz	??_main& (0+255),f,b
  2385  000CC4  D7FC               	bra	u10167
  2386  000CC6  F000               	nop	
  2387                           
  2388                           ;main.c: 1121:                 currentRobotState = standby;
  2389  000CC8  0E00               	movlw	0
  2390  000CCA                     L1:
  2391  000CCA  0101               	movlb	1	; () banked
  2392  000CCC  6F38               	movwf	main@currentRobotState& (0+255),b
  2393                           
  2394                           ;main.c: 1122:                 break;
  2395  000CCE  D019               	goto	l8832
  2396  000CD0                     l8830:
  2397  000CD0  0101               	movlb	1	; () banked
  2398  000CD2  5138               	movf	main@currentRobotState& (0+255),w,b
  2399  000CD4  0100               	movlb	0	; () banked
  2400  000CD6  6FE9               	movwf	??_main& (0+255),b
  2401  000CD8  6BEA               	clrf	(??_main+1)& (0+255),b
  2402                           
  2403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2404                           ; Switch size 1, requested type "simple"
  2405                           ; Number of cases is 1, Range of values is 0 to 0
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte            4     3 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410  000CDA  51EA               	movf	(??_main+1)& (0+255),w,b
  2411  000CDC  0A00               	xorlw	0	; case 0
  2412  000CDE  A4D8               	btfss	status,2,c
  2413  000CE0  D010               	goto	l8832
  2414                           
  2415                           ; BSR set to: 0
  2416                           ; Switch size 1, requested type "simple"
  2417                           ; Number of cases is 5, Range of values is 0 to 4
  2418                           ; switch strategies available:
  2419                           ; Name         Instructions Cycles
  2420                           ; simple_byte           16     9 (average)
  2421                           ;	Chosen strategy is simple_byte
  2422  000CE2  51E9               	movf	??_main& (0+255),w,b
  2423  000CE4  0A00               	xorlw	0	; case 0
  2424  000CE6  B4D8               	btfsc	status,2,c
  2425  000CE8  D6D3               	goto	l8742
  2426  000CEA  0A01               	xorlw	1	; case 1
  2427  000CEC  B4D8               	btfsc	status,2,c
  2428  000CEE  D726               	goto	l8762
  2429  000CF0  0A03               	xorlw	3	; case 2
  2430  000CF2  B4D8               	btfsc	status,2,c
  2431  000CF4  D757               	goto	l8780
  2432  000CF6  0A01               	xorlw	1	; case 3
  2433  000CF8  B4D8               	btfsc	status,2,c
  2434  000CFA  D798               	goto	l8800
  2435  000CFC  0A07               	xorlw	7	; case 4
  2436  000CFE  B4D8               	btfsc	status,2,c
  2437  000D00  D7C8               	goto	l8814
  2438  000D02                     l8832:
  2439                           
  2440                           ;main.c: 1126:         if(keyPressed){
  2441  000D02  0100               	movlb	0	; () banked
  2442  000D04  51F5               	movf	_keyPressed& (0+255),w,b	;volatile
  2443  000D06  B4D8               	btfsc	status,2,c
  2444  000D08  D069               	goto	l416
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 1129:             keyPressed = 0;
  2448  000D0A  0E00               	movlw	0
  2449  000D0C  6FF5               	movwf	_keyPressed& (0+255),b	;volatile
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;main.c: 1132:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2453  000D0E  3881               	swapf	3969,w,c	;volatile
  2454  000D10  0B0F               	andlw	15
  2455  000D12  0B0F               	andlw	15
  2456  000D14  0101               	movlb	1	; () banked
  2457  000D16  6F35               	movwf	main@keypress& (0+255),b
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;main.c: 1133:             char keyValue = keys[keypress];
  2461  000D18  0E85               	movlw	low _keys
  2462  000D1A  2535               	addwf	main@keypress& (0+255),w,b
  2463  000D1C  6EF6               	movwf	tblptrl,c
  2464  000D1E  6AF7               	clrf	tblptrh,c
  2465  000D20  0EFB               	movlw	high _keys
  2466  000D22  22F7               	addwfc	tblptrh,f,c
  2467  000D24                     	if	0	;There are less than 3 active tblptr bytes
  2468  000D24                     	endif
  2469  000D24  0008               	tblrd		*
  2470  000D26  CFF5 F139          	movff	tablat,main@keyValue
  2471                           
  2472                           ; BSR set to: 1
  2473                           ;main.c: 1134:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2474  000D2A  0E01               	movlw	1
  2475  000D2C  EC9D  F01C         	call	_lcdInst
  2476  000D30  0E11               	movlw	17
  2477  000D32  0100               	movlb	0	; () banked
  2478  000D34  6FE9               	movwf	??_main& (0+255),b
  2479  000D36  0E3A               	movlw	58
  2480  000D38                     u10177:
  2481  000D38  2EE8               	decfsz	wreg,f,c
  2482  000D3A  D7FE               	bra	u10177
  2483  000D3C  2FE9               	decfsz	??_main& (0+255),f,b
  2484  000D3E  D7FC               	bra	u10177
  2485  000D40  F000               	nop	
  2486                           
  2487                           ;main.c: 1135:             switch (currentRobotState){
  2488  000D42  D035               	goto	l8880
  2489  000D44                     l8844:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;main.c: 1137:                     if (keyValue == '1'){
  2493  000D44  0E31               	movlw	49
  2494  000D46  0101               	movlb	1	; () banked
  2495  000D48  1939               	xorwf	main@keyValue& (0+255),w,b
  2496  000D4A  A4D8               	btfss	status,2,c
  2497  000D4C  D002               	goto	l8848
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 1138:                         currentRobotState = operation;
  2501  000D4E  0E01               	movlw	1
  2502  000D50  D012               	goto	L4
  2503  000D52                     l8848:
  2504                           
  2505                           ; BSR set to: 1
  2506  000D52  0E32               	movlw	50
  2507  000D54  1939               	xorwf	main@keyValue& (0+255),w,b
  2508  000D56  A4D8               	btfss	status,2,c
  2509  000D58  D041               	goto	l416
  2510                           
  2511                           ; BSR set to: 1
  2512                           ;main.c: 1140:                         currentRobotState = selectLog;
  2513  000D5A  0E03               	movlw	3
  2514  000D5C  D00C               	goto	L4
  2515  000D5E                     l8852:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;main.c: 1146:                     if (keyValue == '1'){
  2519  000D5E  0E31               	movlw	49
  2520  000D60  0101               	movlb	1	; () banked
  2521  000D62  1939               	xorwf	main@keyValue& (0+255),w,b
  2522  000D64  A4D8               	btfss	status,2,c
  2523  000D66  D002               	goto	l8856
  2524  000D68                     u10030:
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;main.c: 1147:                         currentRobotState = displayLog;
  2528  000D68  0E04               	movlw	4
  2529  000D6A  D005               	goto	L4
  2530  000D6C                     l8856:
  2531                           
  2532                           ; BSR set to: 1
  2533  000D6C  0E32               	movlw	50
  2534  000D6E  1939               	xorwf	main@keyValue& (0+255),w,b
  2535  000D70  A4D8               	btfss	status,2,c
  2536  000D72  D034               	goto	l416
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;main.c: 1149:                         currentRobotState = standby;
  2540  000D74  0E00               	movlw	0
  2541  000D76                     L4:
  2542  000D76  6F38               	movwf	main@currentRobotState& (0+255),b
  2543  000D78  D031               	goto	l416
  2544  000D7A                     l8860:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;main.c: 1153:                     if (keyValue == '1'){
  2548  000D7A  0E31               	movlw	49
  2549  000D7C  0101               	movlb	1	; () banked
  2550  000D7E  1939               	xorwf	main@keyValue& (0+255),w,b
  2551  000D80  A4D8               	btfss	status,2,c
  2552  000D82  D002               	goto	l8864
  2553                           
  2554                           ; BSR set to: 1
  2555                           ;main.c: 1154:                         currentLogState = one;
  2556  000D84  0E01               	movlw	1
  2557  000D86  D011               	goto	L7
  2558  000D88                     l8864:
  2559                           
  2560                           ; BSR set to: 1
  2561  000D88  0E32               	movlw	50
  2562  000D8A  1939               	xorwf	main@keyValue& (0+255),w,b
  2563  000D8C  A4D8               	btfss	status,2,c
  2564  000D8E  D002               	goto	l8868
  2565                           
  2566                           ; BSR set to: 1
  2567                           ;main.c: 1156:                         currentLogState = two;
  2568  000D90  0E02               	movlw	2
  2569  000D92  D00B               	goto	L7
  2570  000D94                     l8868:
  2571                           
  2572                           ; BSR set to: 1
  2573  000D94  0E33               	movlw	51
  2574  000D96  1939               	xorwf	main@keyValue& (0+255),w,b
  2575  000D98  A4D8               	btfss	status,2,c
  2576  000D9A  D002               	goto	l8872
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;main.c: 1158:                         currentLogState = three;
  2580  000D9C  0E03               	movlw	3
  2581  000D9E  D005               	goto	L7
  2582  000DA0                     l8872:
  2583                           
  2584                           ; BSR set to: 1
  2585  000DA0  0E34               	movlw	52
  2586  000DA2  1939               	xorwf	main@keyValue& (0+255),w,b
  2587  000DA4  A4D8               	btfss	status,2,c
  2588  000DA6  D01A               	goto	l416
  2589                           
  2590                           ; BSR set to: 1
  2591                           ;main.c: 1160:                         currentLogState = '4';
  2592  000DA8  0E34               	movlw	52
  2593  000DAA                     L7:
  2594  000DAA  6F37               	movwf	main@currentLogState& (0+255),b
  2595                           
  2596                           ;main.c: 1161:                     } else {
  2597  000DAC  D7DD               	goto	u10030
  2598  000DAE                     l8880:
  2599  000DAE  0101               	movlb	1	; () banked
  2600  000DB0  5138               	movf	main@currentRobotState& (0+255),w,b
  2601  000DB2  0100               	movlb	0	; () banked
  2602  000DB4  6FE9               	movwf	??_main& (0+255),b
  2603  000DB6  6BEA               	clrf	(??_main+1)& (0+255),b
  2604                           
  2605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  000DB8  51EA               	movf	(??_main+1)& (0+255),w,b
  2613  000DBA  0A00               	xorlw	0	; case 0
  2614  000DBC  A4D8               	btfss	status,2,c
  2615  000DBE  D00E               	goto	l416
  2616                           
  2617                           ; BSR set to: 0
  2618                           ; Switch size 1, requested type "simple"
  2619                           ; Number of cases is 5, Range of values is 0 to 4
  2620                           ; switch strategies available:
  2621                           ; Name         Instructions Cycles
  2622                           ; simple_byte           16     9 (average)
  2623                           ;	Chosen strategy is simple_byte
  2624  000DC0  51E9               	movf	??_main& (0+255),w,b
  2625  000DC2  0A00               	xorlw	0	; case 0
  2626  000DC4  B4D8               	btfsc	status,2,c
  2627  000DC6  D7BE               	goto	l8844
  2628  000DC8  0A01               	xorlw	1	; case 1
  2629  000DCA  B4D8               	btfsc	status,2,c
  2630  000DCC  D007               	goto	l416
  2631  000DCE  0A03               	xorlw	3	; case 2
  2632  000DD0  B4D8               	btfsc	status,2,c
  2633  000DD2  D7C5               	goto	l8852
  2634  000DD4  0A01               	xorlw	1	; case 3
  2635  000DD6  B4D8               	btfsc	status,2,c
  2636  000DD8  D7D0               	goto	l8860
  2637  000DDA  0A07               	xorlw	7	; case 4
  2638  000DDC                     l416:
  2639                           
  2640                           ;main.c: 1181:         tick++;
  2641                           
  2642                           ; BSR set to: 1
  2643  000DDC  0E01               	movlw	1
  2644  000DDE  0101               	movlb	1	; () banked
  2645  000DE0  2731               	addwf	main@tick& (0+255),f,b
  2646  000DE2  0E00               	movlw	0
  2647  000DE4  2332               	addwfc	(main@tick+1)& (0+255),f,b
  2648  000DE6  2333               	addwfc	(main@tick+2)& (0+255),f,b
  2649  000DE8  2334               	addwfc	(main@tick+3)& (0+255),f,b
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;main.c: 1182:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2653  000DEA  0E04               	movlw	4
  2654  000DEC  0100               	movlb	0	; () banked
  2655  000DEE  6FE9               	movwf	??_main& (0+255),b
  2656  000DF0  0E3D               	movlw	61
  2657  000DF2                     u10187:
  2658  000DF2  2EE8               	decfsz	wreg,f,c
  2659  000DF4  D7FE               	bra	u10187
  2660  000DF6  2FE9               	decfsz	??_main& (0+255),f,b
  2661  000DF8  D7FC               	bra	u10187
  2662  000DFA  D000               	nop2	
  2663  000DFC  D5FF               	goto	l8724
  2664  000DFE                     __end_of_main:
  2665                           	opt callstack 0
  2666                           
  2667 ;; *************** function _robotInit *****************
  2668 ;; Defined at:
  2669 ;;		line 972 in file "main.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    7
  2690 ;; This function calls:
  2691 ;;		_EncoderInit
  2692 ;;		_I2C_Master_Init
  2693 ;;		_initLCD
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;;		_mainEEPROM
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text1
  2701  0035BC                     __ptext1:
  2702                           	opt callstack 0
  2703  0035BC                     _robotInit:
  2704                           	opt callstack 23
  2705                           
  2706                           ;main.c: 974:     EncoderInit();
  2707                           
  2708                           ;incstack = 0
  2709  0035BC  EC6E  F01C         	call	_EncoderInit	;wreg free
  2710                           
  2711                           ;main.c: 978:     LATD = 0x00;
  2712  0035C0  0E00               	movlw	0
  2713  0035C2  6E8C               	movwf	3980,c	;volatile
  2714                           
  2715                           ;main.c: 979:     TRISD = 0x00;
  2716  0035C4  0E00               	movlw	0
  2717  0035C6  6E95               	movwf	3989,c	;volatile
  2718                           
  2719                           ;main.c: 982:     LATB = 0x00;
  2720  0035C8  0E00               	movlw	0
  2721  0035CA  6E8A               	movwf	3978,c	;volatile
  2722                           
  2723                           ;main.c: 983:     TRISBbits.TRISB1 = 1;
  2724  0035CC  8293               	bsf	3987,1,c	;volatile
  2725                           
  2726                           ;main.c: 984:     TRISBbits.TRISB4 = 1;
  2727  0035CE  8893               	bsf	3987,4,c	;volatile
  2728                           
  2729                           ;main.c: 985:     TRISBbits.TRISB5 = 1;
  2730  0035D0  8A93               	bsf	3987,5,c	;volatile
  2731                           
  2732                           ;main.c: 986:     TRISBbits.TRISB6 = 1;
  2733  0035D2  8C93               	bsf	3987,6,c	;volatile
  2734                           
  2735                           ;main.c: 987:     TRISBbits.TRISB7 = 1;
  2736  0035D4  8E93               	bsf	3987,7,c	;volatile
  2737                           
  2738                           ;main.c: 990:     TRISAbits.TRISA4 = 0;
  2739  0035D6  9892               	bcf	3986,4,c	;volatile
  2740                           
  2741                           ;main.c: 991:     LATAbits.LATA4 = 0;
  2742  0035D8  9889               	bcf	3977,4,c	;volatile
  2743                           
  2744                           ;main.c: 994:     I2C_Master_Init(100000);
  2745  0035DA  0EA0               	movlw	160
  2746  0035DC  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2747  0035DE  0E86               	movlw	134
  2748  0035E0  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2749  0035E2  0E01               	movlw	1
  2750  0035E4  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2751  0035E6  0E00               	movlw	0
  2752  0035E8  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2753  0035EA  EC66  F019         	call	_I2C_Master_Init	;wreg free
  2754                           
  2755                           ;main.c: 1001:     ADCON1 = 0b00001111;
  2756  0035EE  0E0F               	movlw	15
  2757  0035F0  6EC1               	movwf	4033,c	;volatile
  2758                           
  2759                           ;main.c: 1004:     INT1IE = 1;
  2760  0035F2  86F0               	bsf	4080,3,c	;volatile
  2761                           
  2762                           ;main.c: 1007:     initLCD();
  2763  0035F4  ECCC  F018         	call	_initLCD	;wreg free
  2764                           
  2765                           ;main.c: 1010:     (INTCONbits.GIE = 1);
  2766  0035F8  8EF2               	bsf	4082,7,c	;volatile
  2767  0035FA  0012               	return		;funcret
  2768  0035FC                     __end_of_robotInit:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _initLCD *****************
  2772 ;; Defined at:
  2773 ;;		line 69 in file "lcd.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    6
  2794 ;; This function calls:
  2795 ;;		_lcdInst
  2796 ;;		_send_byte
  2797 ;;		_send_nibble
  2798 ;; This function is called by:
  2799 ;;		_robotInit
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text2
  2804  003198                     __ptext2:
  2805                           	opt callstack 0
  2806  003198                     _initLCD:
  2807                           	opt callstack 23
  2808                           
  2809                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2810                           
  2811                           ;incstack = 0
  2812  003198  0E31               	movlw	49
  2813  00319A  6E0A               	movwf	??_initLCD& (0+255),c
  2814  00319C  0EB2               	movlw	178
  2815  00319E                     u10197:
  2816  00319E  2EE8               	decfsz	wreg,f,c
  2817  0031A0  D7FE               	bra	u10197
  2818  0031A2  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2819  0031A4  D7FC               	bra	u10197
  2820  0031A6  D000               	nop2	
  2821                           
  2822                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2823  0031A8  948C               	bcf	3980,2,c	;volatile
  2824                           
  2825                           ;lcd.c: 74:     send_nibble(0b0011);
  2826  0031AA  0E03               	movlw	3
  2827  0031AC  EC7A  F01C         	call	_send_nibble
  2828                           
  2829                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2830  0031B0  0E11               	movlw	17
  2831  0031B2  6E0A               	movwf	??_initLCD& (0+255),c
  2832  0031B4  0E3A               	movlw	58
  2833  0031B6                     u10207:
  2834  0031B6  2EE8               	decfsz	wreg,f,c
  2835  0031B8  D7FE               	bra	u10207
  2836  0031BA  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2837  0031BC  D7FC               	bra	u10207
  2838  0031BE  D000               	nop2	
  2839                           
  2840                           ;lcd.c: 76:     send_nibble(0b0011);
  2841  0031C0  0E03               	movlw	3
  2842  0031C2  EC7A  F01C         	call	_send_nibble
  2843                           
  2844                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2845  0031C6  0E7D               	movlw	125
  2846  0031C8                     u10217:
  2847  0031C8  2EE8               	decfsz	wreg,f,c
  2848  0031CA  D7FE               	bra	u10217
  2849                           
  2850                           ;lcd.c: 78:     send_byte(0b00110010);
  2851  0031CC  0E32               	movlw	50
  2852  0031CE  EC8E  F01C         	call	_send_byte
  2853                           
  2854                           ;lcd.c: 80:     send_byte(0b00101000);
  2855  0031D2  0E28               	movlw	40
  2856  0031D4  EC8E  F01C         	call	_send_byte
  2857                           
  2858                           ;lcd.c: 81:     send_byte(0b00001000);
  2859  0031D8  0E08               	movlw	8
  2860  0031DA  EC8E  F01C         	call	_send_byte
  2861                           
  2862                           ;lcd.c: 82:     send_byte(0b00000001);
  2863  0031DE  0E01               	movlw	1
  2864  0031E0  EC8E  F01C         	call	_send_byte
  2865                           
  2866                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2867  0031E4  0E11               	movlw	17
  2868  0031E6  6E0A               	movwf	??_initLCD& (0+255),c
  2869  0031E8  0E3A               	movlw	58
  2870  0031EA                     u10227:
  2871  0031EA  2EE8               	decfsz	wreg,f,c
  2872  0031EC  D7FE               	bra	u10227
  2873  0031EE  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2874  0031F0  D7FC               	bra	u10227
  2875  0031F2  D000               	nop2	
  2876                           
  2877                           ;lcd.c: 84:     send_byte(0b00000110);
  2878  0031F4  0E06               	movlw	6
  2879  0031F6  EC8E  F01C         	call	_send_byte
  2880                           
  2881                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2882  0031FA  0E0C               	movlw	12
  2883  0031FC  EC9D  F01C         	call	_lcdInst
  2884  003200  0012               	return		;funcret
  2885  003202                     __end_of_initLCD:
  2886                           	opt callstack 0
  2887                           
  2888 ;; *************** function _I2C_Master_Init *****************
  2889 ;; Defined at:
  2890 ;;		line 32 in file "I2C.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        8 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    3
  2911 ;; This function calls:
  2912 ;;		___lldiv
  2913 ;; This function is called by:
  2914 ;;		_robotInit
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text3
  2919  0032CC                     __ptext3:
  2920                           	opt callstack 0
  2921  0032CC                     _I2C_Master_Init:
  2922                           	opt callstack 26
  2923                           
  2924                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2925                           
  2926                           ;incstack = 0
  2927  0032CC  9AC6               	bcf	4038,5,c	;volatile
  2928                           
  2929                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2930  0032CE  8694               	bsf	3988,3,c	;volatile
  2931                           
  2932                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2933  0032D0  8894               	bsf	3988,4,c	;volatile
  2934                           
  2935                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2936  0032D2  0E80               	movlw	128
  2937  0032D4  6E06               	movwf	___lldiv@dividend,c
  2938  0032D6  0E96               	movlw	150
  2939  0032D8  6E07               	movwf	___lldiv@dividend+1,c
  2940  0032DA  0E98               	movlw	152
  2941  0032DC  6E08               	movwf	___lldiv@dividend+2,c
  2942  0032DE  0E00               	movlw	0
  2943  0032E0  6E09               	movwf	___lldiv@dividend+3,c
  2944  0032E2  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2945  0032E6  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2946  0032EA  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2947  0032EE  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2948  0032F2  0E02               	movlw	2
  2949  0032F4                     u9545:
  2950  0032F4  90D8               	bcf	status,0,c
  2951  0032F6  3617               	rlcf	??_I2C_Master_Init,f,c
  2952  0032F8  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2953  0032FA  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2954  0032FC  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2955  0032FE  2EE8               	decfsz	wreg,f,c
  2956  003300  D7F9               	goto	u9545
  2957  003302  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2958  003306  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2959  00330A  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2960  00330E  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2961  003312  EC1D  F018         	call	___lldiv	;wreg free
  2962  003316  0406               	decf	?___lldiv,w,c
  2963  003318  6EC8               	movwf	4040,c	;volatile
  2964                           
  2965                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2966  00331A  0E80               	movlw	128
  2967  00331C  6EC7               	movwf	4039,c	;volatile
  2968                           
  2969                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2970  00331E  0E28               	movlw	40
  2971  003320  6EC6               	movwf	4038,c	;volatile
  2972                           
  2973                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2974  003322  0E00               	movlw	0
  2975  003324  6EC5               	movwf	4037,c	;volatile
  2976  003326  0012               	return		;funcret
  2977  003328                     __end_of_I2C_Master_Init:
  2978                           	opt callstack 0
  2979                           
  2980 ;; *************** function ___lldiv *****************
  2981 ;; Defined at:
  2982 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  dividend        4    5[COMRAM] unsigned long 
  2985 ;;  divisor         4    9[COMRAM] unsigned long 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  quotient        4   13[COMRAM] unsigned long 
  2988 ;;  counter         1   17[COMRAM] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  4    5[COMRAM] unsigned long 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:       13 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    2
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_I2C_Master_Init
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text4
  3013  00303A                     __ptext4:
  3014                           	opt callstack 0
  3015  00303A                     ___lldiv:
  3016                           	opt callstack 26
  3017                           
  3018                           ;incstack = 0
  3019  00303A  0E00               	movlw	0
  3020  00303C  6E0E               	movwf	___lldiv@quotient,c
  3021  00303E  0E00               	movlw	0
  3022  003040  6E0F               	movwf	___lldiv@quotient+1,c
  3023  003042  0E00               	movlw	0
  3024  003044  6E10               	movwf	___lldiv@quotient+2,c
  3025  003046  0E00               	movlw	0
  3026  003048  6E11               	movwf	___lldiv@quotient+3,c
  3027  00304A  500A               	movf	___lldiv@divisor,w,c
  3028  00304C  100B               	iorwf	___lldiv@divisor+1,w,c
  3029  00304E  100C               	iorwf	___lldiv@divisor+2,w,c
  3030  003050  100D               	iorwf	___lldiv@divisor+3,w,c
  3031  003052  B4D8               	btfsc	status,2,c
  3032  003054  D02A               	goto	l736
  3033  003056  0E01               	movlw	1
  3034  003058  6E12               	movwf	___lldiv@counter,c
  3035  00305A  D006               	goto	l7888
  3036  00305C                     l7886:
  3037  00305C  90D8               	bcf	status,0,c
  3038  00305E  360A               	rlcf	___lldiv@divisor,f,c
  3039  003060  360B               	rlcf	___lldiv@divisor+1,f,c
  3040  003062  360C               	rlcf	___lldiv@divisor+2,f,c
  3041  003064  360D               	rlcf	___lldiv@divisor+3,f,c
  3042  003066  2A12               	incf	___lldiv@counter,f,c
  3043  003068                     l7888:
  3044  003068  AE0D               	btfss	___lldiv@divisor+3,7,c
  3045  00306A  D7F8               	goto	l7886
  3046  00306C                     u9200:
  3047  00306C  90D8               	bcf	status,0,c
  3048  00306E  360E               	rlcf	___lldiv@quotient,f,c
  3049  003070  360F               	rlcf	___lldiv@quotient+1,f,c
  3050  003072  3610               	rlcf	___lldiv@quotient+2,f,c
  3051  003074  3611               	rlcf	___lldiv@quotient+3,f,c
  3052  003076  500A               	movf	___lldiv@divisor,w,c
  3053  003078  5C06               	subwf	___lldiv@dividend,w,c
  3054  00307A  500B               	movf	___lldiv@divisor+1,w,c
  3055  00307C  5807               	subwfb	___lldiv@dividend+1,w,c
  3056  00307E  500C               	movf	___lldiv@divisor+2,w,c
  3057  003080  5808               	subwfb	___lldiv@dividend+2,w,c
  3058  003082  500D               	movf	___lldiv@divisor+3,w,c
  3059  003084  5809               	subwfb	___lldiv@dividend+3,w,c
  3060  003086  A0D8               	btfss	status,0,c
  3061  003088  D009               	goto	l7898
  3062  00308A  500A               	movf	___lldiv@divisor,w,c
  3063  00308C  5E06               	subwf	___lldiv@dividend,f,c
  3064  00308E  500B               	movf	___lldiv@divisor+1,w,c
  3065  003090  5A07               	subwfb	___lldiv@dividend+1,f,c
  3066  003092  500C               	movf	___lldiv@divisor+2,w,c
  3067  003094  5A08               	subwfb	___lldiv@dividend+2,f,c
  3068  003096  500D               	movf	___lldiv@divisor+3,w,c
  3069  003098  5A09               	subwfb	___lldiv@dividend+3,f,c
  3070  00309A  800E               	bsf	___lldiv@quotient,0,c
  3071  00309C                     l7898:
  3072  00309C  90D8               	bcf	status,0,c
  3073  00309E  320D               	rrcf	___lldiv@divisor+3,f,c
  3074  0030A0  320C               	rrcf	___lldiv@divisor+2,f,c
  3075  0030A2  320B               	rrcf	___lldiv@divisor+1,f,c
  3076  0030A4  320A               	rrcf	___lldiv@divisor,f,c
  3077  0030A6  2E12               	decfsz	___lldiv@counter,f,c
  3078  0030A8  D7E1               	goto	u9200
  3079  0030AA                     l736:
  3080  0030AA  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  3081  0030AE  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  3082  0030B2  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  3083  0030B6  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  3084  0030BA  0012               	return		;funcret
  3085  0030BC                     __end_of___lldiv:
  3086                           	opt callstack 0
  3087                           
  3088 ;; *************** function _EncoderInit *****************
  3089 ;; Defined at:
  3090 ;;		line 190 in file "main.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    2
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_robotInit
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text5
  3119  0038DC                     __ptext5:
  3120                           	opt callstack 0
  3121  0038DC                     _EncoderInit:
  3122                           	opt callstack 27
  3123                           
  3124                           ;main.c: 191:   motorBDirection = 1;
  3125                           
  3126                           ;incstack = 0
  3127  0038DC  0E01               	movlw	1
  3128  0038DE  6E79               	movwf	_motorBDirection,c	;volatile
  3129                           
  3130                           ;main.c: 192:   motorADirection = 1;
  3131  0038E0  0E01               	movlw	1
  3132  0038E2  0100               	movlb	0	; () banked
  3133  0038E4  6FF6               	movwf	_motorADirection& (0+255),b	;volatile
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;main.c: 195:   TRISCbits.TRISC0 = 1;
  3137  0038E6  8094               	bsf	3988,0,c	;volatile
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;main.c: 196:   TRISEbits.TRISE1 = 1;
  3141  0038E8  8296               	bsf	3990,1,c	;volatile
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;main.c: 197:   TRISBbits.TRISB2 = 1;
  3145  0038EA  8493               	bsf	3987,2,c	;volatile
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;main.c: 198:   TRISBbits.TRISB0 = 1;
  3149  0038EC  8093               	bsf	3987,0,c	;volatile
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;main.c: 201:   INT2IE = 1;
  3153  0038EE  88F0               	bsf	4080,4,c	;volatile
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;main.c: 203:   INT0IE = 1;
  3157  0038F0  88F2               	bsf	4082,4,c	;volatile
  3158                           
  3159                           ; BSR set to: 0
  3160  0038F2  0012               	return		;funcret
  3161  0038F4                     __end_of_EncoderInit:
  3162                           	opt callstack 0
  3163                           
  3164 ;; *************** function _replaceOldLog *****************
  3165 ;; Defined at:
  3166 ;;		line 1018 in file "main.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  i               2    5[COMRAM] int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        2 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text6
  3195  0033CE                     __ptext6:
  3196                           	opt callstack 0
  3197  0033CE                     _replaceOldLog:
  3198                           	opt callstack 28
  3199                           
  3200                           ;main.c: 1019:     for (int i = 0; i< 48; i++){
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;incstack = 0
  3204  0033CE  0E00               	movlw	0
  3205  0033D0  6E07               	movwf	replaceOldLog@i+1,c
  3206  0033D2  0E00               	movlw	0
  3207  0033D4  6E06               	movwf	replaceOldLog@i,c
  3208  0033D6                     l8634:
  3209                           
  3210                           ;main.c: 1020:         logs[4][i] = logs[0][i];
  3211  0033D6  90D8               	bcf	status,0,c
  3212  0033D8  3406               	rlcf	replaceOldLog@i,w,c
  3213  0033DA  6ED9               	movwf	fsr2l,c
  3214  0033DC  3407               	rlcf	replaceOldLog@i+1,w,c
  3215  0033DE  6EDA               	movwf	fsr2h,c
  3216  0033E0  0E41               	movlw	low _logs
  3217  0033E2  26D9               	addwf	fsr2l,f,c
  3218  0033E4  0E01               	movlw	high _logs
  3219  0033E6  22DA               	addwfc	fsr2h,f,c
  3220  0033E8  90D8               	bcf	status,0,c
  3221  0033EA  3406               	rlcf	replaceOldLog@i,w,c
  3222  0033EC  6EE1               	movwf	fsr1l,c
  3223  0033EE  3407               	rlcf	replaceOldLog@i+1,w,c
  3224  0033F0  6EE2               	movwf	fsr1h,c
  3225  0033F2  0EC1               	movlw	low (_logs+384)
  3226  0033F4  26E1               	addwf	fsr1l,f,c
  3227  0033F6  0E02               	movlw	high (_logs+384)
  3228  0033F8  22E2               	addwfc	fsr1h,f,c
  3229  0033FA  CFDE FFE6          	movff	postinc2,postinc1
  3230  0033FE  CFDD FFE5          	movff	postdec2,postdec1
  3231                           
  3232                           ;main.c: 1021:     }
  3233  003402  4A06               	infsnz	replaceOldLog@i,f,c
  3234  003404  2A07               	incf	replaceOldLog@i+1,f,c
  3235  003406  BE07               	btfsc	replaceOldLog@i+1,7,c
  3236  003408  D7E6               	goto	l8634
  3237  00340A  5007               	movf	replaceOldLog@i+1,w,c
  3238  00340C  E105               	bnz	u9860
  3239  00340E  0E30               	movlw	48
  3240  003410  5C06               	subwf	replaceOldLog@i,w,c
  3241  003412  B0D8               	btfsc	status,0,c
  3242  003414  0012               	return	
  3243  003416  D7DF               	goto	l8634
  3244  003418                     u9860:
  3245  003418  0012               	return		;funcret
  3246  00341A                     __end_of_replaceOldLog:
  3247                           	opt callstack 0
  3248                           
  3249 ;; *************** function _doOperation *****************
  3250 ;; Defined at:
  3251 ;;		line 612 in file "main.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  i               2   96[BANK0 ] int 
  3256 ;;  starterDist     2   73[BANK0 ] int 
  3257 ;;  timeInOperat    4   98[BANK0 ] unsigned long 
  3258 ;;  milliseconds    4   75[BANK0 ] unsigned long 
  3259 ;;  timeStart       4   67[BANK0 ] unsigned long 
  3260 ;;  PIDData         4   36[BANK0 ] int [2]
  3261 ;;  tiresOnPole     2   92[BANK0 ] int 
  3262 ;;  tiresDeploye    2   90[BANK0 ] int 
  3263 ;;  tiresToDrop     2   88[BANK0 ] int 
  3264 ;;  distanceToPo    2   86[BANK0 ] int 
  3265 ;;  counted         2   84[BANK0 ] int 
  3266 ;;  motorBStartD    2   82[BANK0 ] int 
  3267 ;;  motorAStartD    2   80[BANK0 ] int 
  3268 ;;  goalSpeed       2   71[BANK0 ] int 
  3269 ;;  distanceFrom    2   65[BANK0 ] int 
  3270 ;;  totalTiresSu    2   63[BANK0 ] int 
  3271 ;;  poleNumber      2   61[BANK0 ] int 
  3272 ;;  badCountBot     2   59[BANK0 ] int 
  3273 ;;  badCount        2   57[BANK0 ] int 
  3274 ;;  tiresOnPoleA    2   54[BANK0 ] int 
  3275 ;;  rightRangeFi    2    0        int 
  3276 ;;  leftRangeFin    2    0        int 
  3277 ;;  currentAngle    2    0        int 
  3278 ;;  error           2    0        int 
  3279 ;;  errorScaleFa    2    0        int 
  3280 ;;  motorBSpeed     2    0        int 
  3281 ;;  motorASpeed     2    0        int 
  3282 ;;  fourMetreEqu    2    0        int 
  3283 ;;  minimumSafeD    2    0        int 
  3284 ;;  topLaserStat    1  104[BANK0 ] _Bool 
  3285 ;;  bottomLaserS    1  103[BANK0 ] _Bool 
  3286 ;;  currentOpera    1  102[BANK0 ] enum E3355
  3287 ;;  bottomLaserS    1   95[BANK0 ] _Bool 
  3288 ;;  topLaserStat    1   94[BANK0 ] _Bool 
  3289 ;;  isDoneDrop      1   79[BANK0 ] _Bool 
  3290 ;;  send            1   56[BANK0 ] _Bool 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         0      73       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:       73 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   13
  3307 ;; This function calls:
  3308 ;;		_I2C_Master_Start
  3309 ;;		_I2C_Master_Stop
  3310 ;;		_I2C_Master_Write
  3311 ;;		_TIMER_INIT
  3312 ;;		___awmod
  3313 ;;		_abs
  3314 ;;		_errorCorrectedMove
  3315 ;;		_init_motor_PWM
  3316 ;;		_lcdInst
  3317 ;;		_opDelay
  3318 ;;		_printf
  3319 ;;		_requestIsTireDropDone
  3320 ;;		_sendArduinoAbortOperationMessage
  3321 ;;		_sendArduinoTireDropRequest
  3322 ;;		_sendArduinoTireOperationStartMessage
  3323 ;;		_setMotorSpeeds
  3324 ;;		_tirePositioning
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text7
  3331  000012                     __ptext7:
  3332                           	opt callstack 0
  3333  000012                     _doOperation:
  3334                           	opt callstack 17
  3335                           
  3336                           ;main.c: 618:     I2C_Master_Start();
  3337                           
  3338                           ;incstack = 0
  3339  000012  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  3340                           
  3341                           ;main.c: 619:     I2C_Master_Write(0b00010000);
  3342  000016  0E00               	movlw	0
  3343  000018  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3344  00001A  0E10               	movlw	16
  3345  00001C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3346  00001E  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  3347                           
  3348                           ;main.c: 620:     I2C_Master_Stop();
  3349  000022  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  3350                           
  3351                           ;main.c: 622:     sendArduinoTireOperationStartMessage();
  3352  000026  EC2C  F01C         	call	_sendArduinoTireOperationStartMessage	;wreg free
  3353                           
  3354                           ;main.c: 626:     TIMER_INIT();
  3355  00002A  EC5F  F01C         	call	_TIMER_INIT	;wreg free
  3356                           
  3357                           ;main.c: 627:     millisecondsMeasured = 0;
  3358  00002E  0E00               	movlw	0
  3359  000030  6E75               	movwf	_millisecondsMeasured,c	;volatile
  3360  000032  0E00               	movlw	0
  3361  000034  6E76               	movwf	_millisecondsMeasured+1,c	;volatile
  3362  000036  0E00               	movlw	0
  3363  000038  6E77               	movwf	_millisecondsMeasured+2,c	;volatile
  3364  00003A  0E00               	movlw	0
  3365  00003C  6E78               	movwf	_millisecondsMeasured+3,c	;volatile
  3366                           
  3367                           ;main.c: 629:  int goalSpeed = 20;
  3368  00003E  0E00               	movlw	0
  3369  000040  0100               	movlb	0	; () banked
  3370  000042  6FC8               	movwf	(doOperation@goalSpeed+1)& (0+255),b
  3371  000044  0E14               	movlw	20
  3372  000046  6FC7               	movwf	doOperation@goalSpeed& (0+255),b
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 636:  enum operationStates currentOperationState = moveForward;
  3376                           
  3377                           ; BSR set to: 0
  3378                           
  3379                           ; BSR set to: 0
  3380                           
  3381                           ; BSR set to: 0
  3382                           
  3383                           ; BSR set to: 0
  3384                           
  3385                           ; BSR set to: 0
  3386  000048  0E00               	movlw	0
  3387  00004A  6FE6               	movwf	doOperation@currentOperationState& (0+255),b
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;main.c: 639:  int tiresToDrop = 0;
  3391                           
  3392                           ; BSR set to: 0
  3393                           
  3394                           ; BSR set to: 0
  3395  00004C  0E00               	movlw	0
  3396  00004E  6FD9               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3397  000050  0E00               	movlw	0
  3398  000052  6FD8               	movwf	doOperation@tiresToDrop& (0+255),b
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;main.c: 640:     int minimumSafeDistanceToPole;;main.c: 641:     int fourMetreEquivalen
      +                          t;;main.c: 642:     unsigned long timeInOperation = 150000;
  3402  000054  0EF0               	movlw	240
  3403  000056  6FE2               	movwf	doOperation@timeInOperation& (0+255),b
  3404  000058  0E49               	movlw	73
  3405  00005A  6FE3               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3406  00005C  0E02               	movlw	2
  3407  00005E  6FE4               	movwf	(doOperation@timeInOperation+2)& (0+255),b
  3408  000060  0E00               	movlw	0
  3409  000062  6FE5               	movwf	(doOperation@timeInOperation+3)& (0+255),b
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;main.c: 643:     int motorAStartDistance = motorADistance;
  3413  000064  C0F3  F0D0         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3414  000068  C0F4  F0D1         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;main.c: 644:     int motorBStartDistance = motorBDistance;
  3418  00006C  C0F1  F0D2         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3419  000070  C0F2  F0D3         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;main.c: 646:     int PIDData[2] = {0,0};
  3423  000074  0E00               	movlw	0
  3424  000076  6FA4               	movwf	doOperation@PIDData& (0+255),b
  3425  000078  0E00               	movlw	0
  3426  00007A  6FA5               	movwf	(doOperation@PIDData+1)& (0+255),b
  3427  00007C  0E00               	movlw	0
  3428  00007E  6FA6               	movwf	(doOperation@PIDData+2)& (0+255),b
  3429  000080  0E00               	movlw	0
  3430  000082  6FA7               	movwf	(doOperation@PIDData+3)& (0+255),b
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;main.c: 647:     _Bool topLaserState;;main.c: 648:     _Bool topLaserStatePrev;;main.c:
      +                           649:     _Bool bottomLaserState;;main.c: 650:     _Bool bottomLaserStatePrev;;main.c: 6
      +                          51:     _Bool isDoneDrop;;main.c: 652:     init_motor_PWM();
  3434  000084  ECDF  F01B         	call	_init_motor_PWM	;wreg free
  3435                           
  3436                           ;main.c: 653:     int counted = 0;
  3437  000088  0E00               	movlw	0
  3438  00008A  0100               	movlb	0	; () banked
  3439  00008C  6FD5               	movwf	(doOperation@counted+1)& (0+255),b
  3440  00008E  0E00               	movlw	0
  3441  000090  6FD4               	movwf	doOperation@counted& (0+255),b
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;main.c: 654:     int badCount = 0;
  3445  000092  0E00               	movlw	0
  3446  000094  6FBA               	movwf	(doOperation@badCount+1)& (0+255),b
  3447  000096  0E00               	movlw	0
  3448  000098  6FB9               	movwf	doOperation@badCount& (0+255),b
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;main.c: 655:     int badCountBot = 0;
  3452  00009A  0E00               	movlw	0
  3453  00009C  6FBC               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3454  00009E  0E00               	movlw	0
  3455  0000A0  6FBB               	movwf	doOperation@badCountBot& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 658:     int poleNumber = 0;
  3459  0000A2  0E00               	movlw	0
  3460  0000A4  6FBE               	movwf	(doOperation@poleNumber+1)& (0+255),b
  3461  0000A6  0E00               	movlw	0
  3462  0000A8  6FBD               	movwf	doOperation@poleNumber& (0+255),b
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;main.c: 659:     int tiresDeployedOnPole = 0;
  3466  0000AA  0E00               	movlw	0
  3467  0000AC  6FDB               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3468  0000AE  0E00               	movlw	0
  3469  0000B0  6FDA               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 660:     int tiresOnPoleAfterOp = 0;
  3473  0000B2  0E00               	movlw	0
  3474  0000B4  6FB7               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  3475  0000B6  0E00               	movlw	0
  3476  0000B8  6FB6               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;main.c: 661:     int tiresOnPole = 0;
  3480  0000BA  0E00               	movlw	0
  3481  0000BC  6FDD               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3482  0000BE  0E00               	movlw	0
  3483  0000C0  6FDC               	movwf	doOperation@tiresOnPole& (0+255),b
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;main.c: 663:     int totalTiresSupplied = 0;
  3487  0000C2  0E00               	movlw	0
  3488  0000C4  6FC0               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  3489  0000C6  0E00               	movlw	0
  3490  0000C8  6FBF               	movwf	doOperation@totalTiresSupplied& (0+255),b
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;main.c: 665:     int distanceToPole = 0;
  3494  0000CA  0E00               	movlw	0
  3495  0000CC  6FD7               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  3496  0000CE  0E00               	movlw	0
  3497  0000D0  6FD6               	movwf	doOperation@distanceToPole& (0+255),b
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;main.c: 666:     int distanceFromLastPole = 0;
  3501  0000D2  0E00               	movlw	0
  3502  0000D4  6FC2               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3503  0000D6  0E00               	movlw	0
  3504  0000D8  6FC1               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;main.c: 673:     TRISAbits.TRISA0 = 0;
  3508  0000DA  9092               	bcf	3986,0,c	;volatile
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;main.c: 674:     TRISAbits.TRISA1 = 0;
  3512  0000DC  9292               	bcf	3986,1,c	;volatile
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;main.c: 675:     TRISAbits.TRISA2 = 0;
  3516  0000DE  9492               	bcf	3986,2,c	;volatile
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;main.c: 676:     TRISAbits.TRISA3 = 0;
  3520  0000E0  9692               	bcf	3986,3,c	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;main.c: 679:     TRISAbits.TRISA4 = 0;
  3524  0000E2  9892               	bcf	3986,4,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;main.c: 680:     LATAbits.LATA4 = 1;
  3528  0000E4  8889               	bsf	3977,4,c	;volatile
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;main.c: 681:     unsigned long timeStart = millisecondsMeasured;
  3532  0000E6  C075  F0C3         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3533  0000EA  C076  F0C4         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3534  0000EE  C077  F0C5         	movff	_millisecondsMeasured+2,doOperation@timeStart+2	;volatile
  3535  0000F2  C078  F0C6         	movff	_millisecondsMeasured+3,doOperation@timeStart+3	;volatile
  3536  0000F6                     l8428:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;main.c: 682:     while(millisecondsMeasured < timeStart + 100){
  3540  0000F6  0E64               	movlw	100
  3541  0000F8  25C3               	addwf	doOperation@timeStart& (0+255),w,b
  3542  0000FA  6FA0               	movwf	??_doOperation& (0+255),b
  3543  0000FC  0E00               	movlw	0
  3544  0000FE  21C4               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3545  000100  6FA1               	movwf	(??_doOperation+1)& (0+255),b
  3546  000102  0E00               	movlw	0
  3547  000104  21C5               	addwfc	(doOperation@timeStart+2)& (0+255),w,b
  3548  000106  6FA2               	movwf	(??_doOperation+2)& (0+255),b
  3549  000108  0E00               	movlw	0
  3550  00010A  21C6               	addwfc	(doOperation@timeStart+3)& (0+255),w,b
  3551  00010C  6FA3               	movwf	(??_doOperation+3)& (0+255),b
  3552  00010E  51A0               	movf	??_doOperation& (0+255),w,b
  3553  000110  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3554  000112  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  3555  000114  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  3556  000116  51A2               	movf	(??_doOperation+2)& (0+255),w,b
  3557  000118  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  3558  00011A  51A3               	movf	(??_doOperation+3)& (0+255),w,b
  3559  00011C  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  3560  00011E  A0D8               	btfss	status,0,c
  3561  000120  D7EA               	goto	l8428
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 686:     topLaserState = PORTBbits.RB4;
  3565  000122  A881               	btfss	3969,4,c	;volatile
  3566  000124  D002               	goto	u9700
  3567  000126  0E01               	movlw	1
  3568  000128  D001               	goto	u9706
  3569  00012A                     u9700:
  3570  00012A  0E00               	movlw	0
  3571  00012C                     u9706:
  3572  00012C  6FE8               	movwf	doOperation@topLaserState& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 687:     topLaserStatePrev = topLaserState;
  3576  00012E  C0E8  F0DE         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3577                           
  3578                           ;main.c: 688:     bottomLaserState = PORTBbits.RB5;
  3579  000132  AA81               	btfss	3969,5,c	;volatile
  3580  000134  D002               	goto	u9710
  3581  000136  0E01               	movlw	1
  3582  000138  D001               	goto	u9716
  3583  00013A                     u9710:
  3584  00013A  0E00               	movlw	0
  3585  00013C                     u9716:
  3586  00013C  6FE7               	movwf	doOperation@bottomLaserState& (0+255),b
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;main.c: 689:     bottomLaserStatePrev = bottomLaserState;
  3590  00013E  C0E7  F0DF         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3591                           
  3592                           ;main.c: 697:     _Bool send = 1;
  3593  000142  0E01               	movlw	1
  3594  000144  6FB8               	movwf	doOperation@send& (0+255),b
  3595                           
  3596                           ;main.c: 698:     unsigned long millisecondsMeasuredOld = 0;
  3597  000146  0E00               	movlw	0
  3598  000148  6FCB               	movwf	doOperation@millisecondsMeasuredOld& (0+255),b
  3599  00014A  0E00               	movlw	0
  3600  00014C  6FCC               	movwf	(doOperation@millisecondsMeasuredOld+1)& (0+255),b
  3601  00014E  0E00               	movlw	0
  3602  000150  6FCD               	movwf	(doOperation@millisecondsMeasuredOld+2)& (0+255),b
  3603  000152  0E00               	movlw	0
  3604  000154  6FCE               	movwf	(doOperation@millisecondsMeasuredOld+3)& (0+255),b
  3605  000156                     l8436:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;main.c: 703:         counted ++;
  3609  000156  4BD4               	infsnz	doOperation@counted& (0+255),f,b
  3610  000158  2BD5               	incf	(doOperation@counted+1)& (0+255),f,b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;main.c: 704:         topLaserStatePrev = topLaserState;
  3614  00015A  C0E8  F0DE         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;main.c: 705:         topLaserState = PORTBbits.RB4;
  3618  00015E  A881               	btfss	3969,4,c	;volatile
  3619  000160  D002               	goto	u9720
  3620  000162  0E01               	movlw	1
  3621  000164  D001               	goto	u9726
  3622  000166                     u9720:
  3623  000166  0E00               	movlw	0
  3624  000168                     u9726:
  3625  000168  6FE8               	movwf	doOperation@topLaserState& (0+255),b
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;main.c: 706:         bottomLaserStatePrev = bottomLaserState;
  3629  00016A  C0E7  F0DF         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;main.c: 707:         bottomLaserState = PORTBbits.RB5;
  3633  00016E  AA81               	btfss	3969,5,c	;volatile
  3634  000170  D002               	goto	u9730
  3635  000172  0E01               	movlw	1
  3636  000174  D001               	goto	u9736
  3637  000176                     u9730:
  3638  000176  0E00               	movlw	0
  3639  000178                     u9736:
  3640  000178  6FE7               	movwf	doOperation@bottomLaserState& (0+255),b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 708:    if (millisecondsMeasured > millisecondsMeasuredOld){
  3644  00017A  5075               	movf	_millisecondsMeasured,w,c	;volatile
  3645  00017C  5DCB               	subwf	doOperation@millisecondsMeasuredOld& (0+255),w,b
  3646  00017E  5076               	movf	_millisecondsMeasured+1,w,c	;volatile
  3647  000180  59CC               	subwfb	(doOperation@millisecondsMeasuredOld+1)& (0+255),w,b
  3648  000182  5077               	movf	_millisecondsMeasured+2,w,c	;volatile
  3649  000184  59CD               	subwfb	(doOperation@millisecondsMeasuredOld+2)& (0+255),w,b
  3650  000186  5078               	movf	_millisecondsMeasured+3,w,c	;volatile
  3651  000188  59CE               	subwfb	(doOperation@millisecondsMeasuredOld+3)& (0+255),w,b
  3652  00018A  B0D8               	btfsc	status,0,c
  3653  00018C  D188               	goto	l8562
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;main.c: 709:             millisecondsMeasuredOld++;
  3657  00018E  0E01               	movlw	1
  3658  000190  27CB               	addwf	doOperation@millisecondsMeasuredOld& (0+255),f,b
  3659  000192  0E00               	movlw	0
  3660  000194  23CC               	addwfc	(doOperation@millisecondsMeasuredOld+1)& (0+255),f,b
  3661  000196  23CD               	addwfc	(doOperation@millisecondsMeasuredOld+2)& (0+255),f,b
  3662  000198  23CE               	addwfc	(doOperation@millisecondsMeasuredOld+3)& (0+255),f,b
  3663  00019A  D181               	goto	l8562
  3664  00019C                     l8450:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;main.c: 715:                 if (counted%100 == 0){
  3668  00019C  C0D4  F006         	movff	doOperation@counted,___awmod@dividend
  3669  0001A0  C0D5  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  3670  0001A4  0E00               	movlw	0
  3671  0001A6  6E09               	movwf	___awmod@divisor+1,c
  3672  0001A8  0E64               	movlw	100
  3673  0001AA  6E08               	movwf	___awmod@divisor,c
  3674  0001AC  EC5E  F018         	call	___awmod	;wreg free
  3675  0001B0  5006               	movf	?___awmod,w,c
  3676  0001B2  1007               	iorwf	?___awmod+1,w,c
  3677  0001B4  A4D8               	btfss	status,2,c
  3678  0001B6  D044               	goto	l8470
  3679                           
  3680                           ;main.c: 716:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3681  0001B8  0E01               	movlw	1
  3682  0001BA  EC9D  F01C         	call	_lcdInst
  3683  0001BE  0E11               	movlw	17
  3684  0001C0  0100               	movlb	0	; () banked
  3685  0001C2  6FA0               	movwf	??_doOperation& (0+255),b
  3686  0001C4  0E3A               	movlw	58
  3687  0001C6                     u10237:
  3688  0001C6  2EE8               	decfsz	wreg,f,c
  3689  0001C8  D7FE               	bra	u10237
  3690  0001CA  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3691  0001CC  D7FC               	bra	u10237
  3692  0001CE  F000               	nop	
  3693                           
  3694                           ;main.c: 717:                 printf("%d", millisecondsMeasured);
  3695  0001D0  0E24               	movlw	low (STR_22+3)
  3696  0001D2  0100               	movlb	0	; () banked
  3697  0001D4  6F80               	movwf	printf@fmt& (0+255),b
  3698  0001D6  0EFD               	movlw	high (STR_22+3)
  3699  0001D8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3700  0001DA  C075  F082         	movff	_millisecondsMeasured,?_printf+2	;volatile
  3701  0001DE  C076  F083         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  3702  0001E2  C077  F084         	movff	_millisecondsMeasured+2,?_printf+4	;volatile
  3703  0001E6  C078  F085         	movff	_millisecondsMeasured+3,?_printf+5	;volatile
  3704  0001EA  ECF3  F01B         	call	_printf	;wreg free
  3705  0001EE  0E90               	movlw	144
  3706  0001F0  EC9D  F01C         	call	_lcdInst
  3707                           
  3708                           ;main.c: 719:                 printf("%d", topLaserState);
  3709  0001F4  0E24               	movlw	low (STR_22+3)
  3710  0001F6  0100               	movlb	0	; () banked
  3711  0001F8  6F80               	movwf	printf@fmt& (0+255),b
  3712  0001FA  0EFD               	movlw	high (STR_22+3)
  3713  0001FC  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3714  0001FE  C0E8  F082         	movff	doOperation@topLaserState,?_printf+2
  3715  000202  6B83               	clrf	(?_printf+3)& (0+255),b
  3716  000204  ECF3  F01B         	call	_printf	;wreg free
  3717  000208  0EC0               	movlw	192
  3718  00020A  EC9D  F01C         	call	_lcdInst
  3719                           
  3720                           ;main.c: 721:                 printf("B: %d", motorBDistance);
  3721  00020E  0E27               	movlw	low STR_21
  3722  000210  0100               	movlb	0	; () banked
  3723  000212  6F80               	movwf	printf@fmt& (0+255),b
  3724  000214  0EFD               	movlw	high STR_21
  3725  000216  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3726  000218  C0F1  F082         	movff	_motorBDistance,?_printf+2	;volatile
  3727  00021C  C0F2  F083         	movff	_motorBDistance+1,?_printf+3	;volatile
  3728  000220  ECF3  F01B         	call	_printf	;wreg free
  3729  000224  0ED0               	movlw	208
  3730  000226  EC9D  F01C         	call	_lcdInst
  3731                           
  3732                           ;main.c: 723:                 printf("A: %d", motorADistance);
  3733  00022A  0E21               	movlw	low STR_22
  3734  00022C  0100               	movlb	0	; () banked
  3735  00022E  6F80               	movwf	printf@fmt& (0+255),b
  3736  000230  0EFD               	movlw	high STR_22
  3737  000232  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3738  000234  C0F3  F082         	movff	_motorADistance,?_printf+2	;volatile
  3739  000238  C0F4  F083         	movff	_motorADistance+1,?_printf+3	;volatile
  3740  00023C  ECF3  F01B         	call	_printf	;wreg free
  3741  000240                     l8470:
  3742                           
  3743                           ;main.c: 742:                 errorCorrectedMove(goalSpeed, 1, motorAStartDistance, moto
      +                          rBStartDistance, 0.1);
  3744  000240  C0C7  F088         	movff	doOperation@goalSpeed,errorCorrectedMove@goalSpeed
  3745  000244  C0C8  F089         	movff	doOperation@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  3746  000248  0E00               	movlw	0
  3747  00024A  0100               	movlb	0	; () banked
  3748  00024C  6F8A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  3749  00024E  0E00               	movlw	0
  3750  000250  6F8B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  3751  000252  0E80               	movlw	128
  3752  000254  6F8C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  3753  000256  0E3F               	movlw	63
  3754  000258  6F8D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  3755  00025A  C0D0  F08E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  3756  00025E  C0D1  F08F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  3757  000262  C0D2  F090         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  3758  000266  C0D3  F091         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  3759  00026A  0ECD               	movlw	205
  3760  00026C  6F92               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  3761  00026E  0ECC               	movlw	204
  3762  000270  6F93               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  3763  000272  0ECC               	movlw	204
  3764  000274  6F94               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  3765  000276  0E3D               	movlw	61
  3766  000278  6F95               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  3767  00027A  ECB3  F00E         	call	_errorCorrectedMove	;wreg free
  3768                           
  3769                           ;main.c: 744:                 break;
  3770  00027E  D12C               	goto	l8564
  3771  000280                     l8472:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;main.c: 747:                 distanceFromLastPole = motorADistance - distanceToPole;
  3775  000280  51D6               	movf	doOperation@distanceToPole& (0+255),w,b
  3776  000282  5DF3               	subwf	_motorADistance& (0+255),w,b	;volatile
  3777  000284  6FC1               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3778  000286  51D7               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  3779  000288  59F4               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  3780  00028A  6FC2               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;main.c: 748:                 distanceToPole = motorADistance;
  3784  00028C  C0F3  F0D6         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  3785  000290  C0F4  F0D7         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;main.c: 750:                 poleNumber++;
  3789  000294  4BBD               	infsnz	doOperation@poleNumber& (0+255),f,b
  3790  000296  2BBE               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;main.c: 753:                 tiresOnPole = tirePositioning(timeInOperation);
  3794  000298  C0E2  F088         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  3795  00029C  C0E3  F089         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  3796  0002A0  C0E4  F08A         	movff	doOperation@timeInOperation+2,tirePositioning@maxOperationTime+2
  3797  0002A4  C0E5  F08B         	movff	doOperation@timeInOperation+3,tirePositioning@maxOperationTime+3
  3798  0002A8  EC05  F00C         	call	_tirePositioning	;wreg free
  3799  0002AC  C088  F0DC         	movff	?_tirePositioning,doOperation@tiresOnPole
  3800  0002B0  C089  F0DD         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  3801                           
  3802                           ;main.c: 754:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3803  0002B4  0E01               	movlw	1
  3804  0002B6  EC9D  F01C         	call	_lcdInst
  3805  0002BA  0E11               	movlw	17
  3806  0002BC  0100               	movlb	0	; () banked
  3807  0002BE  6FA0               	movwf	??_doOperation& (0+255),b
  3808  0002C0  0E3A               	movlw	58
  3809  0002C2                     u10247:
  3810  0002C2  2EE8               	decfsz	wreg,f,c
  3811  0002C4  D7FE               	bra	u10247
  3812  0002C6  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3813  0002C8  D7FC               	bra	u10247
  3814  0002CA  F000               	nop	
  3815                           
  3816                           ;main.c: 755:                 printf("TIRE DROP");
  3817  0002CC  0ED2               	movlw	low STR_23
  3818  0002CE  0100               	movlb	0	; () banked
  3819  0002D0  6F80               	movwf	printf@fmt& (0+255),b
  3820  0002D2  0EFC               	movlw	high STR_23
  3821  0002D4  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3822  0002D6  ECF3  F01B         	call	_printf	;wreg free
  3823  0002DA  0EC0               	movlw	192
  3824  0002DC  EC9D  F01C         	call	_lcdInst
  3825                           
  3826                           ;main.c: 757:                 printf("%d on pole", tiresOnPole);
  3827  0002E0  0EA7               	movlw	low STR_24
  3828  0002E2  0100               	movlb	0	; () banked
  3829  0002E4  6F80               	movwf	printf@fmt& (0+255),b
  3830  0002E6  0EFC               	movlw	high STR_24
  3831  0002E8  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3832  0002EA  C0DC  F082         	movff	doOperation@tiresOnPole,?_printf+2
  3833  0002EE  C0DD  F083         	movff	doOperation@tiresOnPole+1,?_printf+3
  3834  0002F2  ECF3  F01B         	call	_printf	;wreg free
  3835                           
  3836                           ;main.c: 759:                 setMotorSpeeds(0, 1, 1, 0);
  3837  0002F6  0E00               	movlw	0
  3838  0002F8  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3839  0002FA  0E00               	movlw	0
  3840  0002FC  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3841  0002FE  0E01               	movlw	1
  3842  000300  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3843  000302  0E01               	movlw	1
  3844  000304  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3845  000306  0E00               	movlw	0
  3846  000308  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3847  00030A  0E00               	movlw	0
  3848  00030C  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3849  00030E  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  3850                           
  3851                           ;main.c: 768:     sendArduinoTireDropRequest();
  3852  000312  EC3D  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  3853                           
  3854                           ;main.c: 771:                 tiresToDrop = 1;
  3855  000316  0E00               	movlw	0
  3856  000318  0100               	movlb	0	; () banked
  3857  00031A  6FD9               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3858  00031C  0E01               	movlw	1
  3859  00031E  6FD8               	movwf	doOperation@tiresToDrop& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;main.c: 772:                 currentOperationState = tireDrop;
  3863  000320  0E02               	movlw	2
  3864  000322  D08C               	goto	L9
  3865  000324                     l8496:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;main.c: 779:     isDoneDrop = requestIsTireDropDone();
  3869  000324  ECB4  F01B         	call	_requestIsTireDropDone	;wreg free
  3870  000328  0100               	movlb	0	; () banked
  3871  00032A  6FCF               	movwf	doOperation@isDoneDrop& (0+255),b
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;main.c: 781:     if (isDoneDrop){
  3875  00032C  51CF               	movf	doOperation@isDoneDrop& (0+255),w,b
  3876  00032E  B4D8               	btfsc	status,2,c
  3877  000330  D0D3               	goto	l8564
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;main.c: 782:      tiresToDrop -- ;
  3881  000332  07D8               	decf	doOperation@tiresToDrop& (0+255),f,b
  3882  000334  A0D8               	btfss	status,0,c
  3883  000336  07D9               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3884                           
  3885                           ;main.c: 783:                     tiresDeployedOnPole++;
  3886  000338  4BDA               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  3887  00033A  2BDB               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 784:      if (tiresToDrop == 0){
  3891  00033C  51D8               	movf	doOperation@tiresToDrop& (0+255),w,b
  3892  00033E  11D9               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3893  000340  A4D8               	btfss	status,2,c
  3894  000342  D00F               	goto	l8510
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;main.c: 785:       currentOperationState = leavePole;
  3898  000344  0E06               	movlw	6
  3899  000346  6FE6               	movwf	doOperation@currentOperationState& (0+255),b
  3900                           
  3901                           ;main.c: 787:                         tiresOnPole = 0;
  3902  000348  0E00               	movlw	0
  3903  00034A  6FDD               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3904  00034C  0E00               	movlw	0
  3905  00034E  6FDC               	movwf	doOperation@tiresOnPole& (0+255),b
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 788:                         totalTiresSupplied += tiresDeployedOnPole;
  3909  000350  51DA               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  3910  000352  27BF               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  3911  000354  51DB               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  3912  000356  23C0               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;main.c: 789:                         tiresDeployedOnPole = 0;
  3916  000358  0E00               	movlw	0
  3917  00035A  6FDB               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3918  00035C  0E00               	movlw	0
  3919  00035E  6FDA               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3920                           
  3921                           ;main.c: 790:      } else {
  3922  000360  D0BB               	goto	l8564
  3923  000362                     l8510:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 792:       sendArduinoTireDropRequest();
  3927  000362  EC3D  F01C         	call	_sendArduinoTireDropRequest	;wreg free
  3928  000366  D0B8               	goto	l8564
  3929  000368                     l8512:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;main.c: 801:                 currentOperationState = moveForward;
  3933  000368  0E00               	movlw	0
  3934  00036A  D068               	goto	L9
  3935  00036C                     l8514:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 805:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3939  00036C  0E01               	movlw	1
  3940  00036E  EC9D  F01C         	call	_lcdInst
  3941  000372  0E11               	movlw	17
  3942  000374  0100               	movlb	0	; () banked
  3943  000376  6FA0               	movwf	??_doOperation& (0+255),b
  3944  000378  0E3A               	movlw	58
  3945  00037A                     u10257:
  3946  00037A  2EE8               	decfsz	wreg,f,c
  3947  00037C  D7FE               	bra	u10257
  3948  00037E  2FA0               	decfsz	??_doOperation& (0+255),f,b
  3949  000380  D7FC               	bra	u10257
  3950  000382  F000               	nop	
  3951                           
  3952                           ;main.c: 806:                 printf("Leaving Pole");
  3953  000384  0E82               	movlw	low STR_25
  3954  000386  0100               	movlb	0	; () banked
  3955  000388  6F80               	movwf	printf@fmt& (0+255),b
  3956  00038A  0EFC               	movlw	high STR_25
  3957  00038C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  3958  00038E  ECF3  F01B         	call	_printf	;wreg free
  3959                           
  3960                           ;main.c: 807:                 int starterDist = motorADistance;
  3961  000392  C0F3  F0C9         	movff	_motorADistance,doOperation@starterDist	;volatile
  3962  000396  C0F4  F0CA         	movff	_motorADistance+1,doOperation@starterDist+1	;volatile
  3963                           
  3964                           ;main.c: 808:                 while(millisecondsMeasured < timeInOperation && abs(motorA
      +                          Distance - starterDist) < 3000){
  3965  00039A  D00E               	goto	l8524
  3966  00039C                     l8522:
  3967                           
  3968                           ;main.c: 809:                     setMotorSpeeds(30, 1, 1, 30);
  3969  00039C  0E00               	movlw	0
  3970  00039E  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  3971  0003A0  0E1E               	movlw	30
  3972  0003A2  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  3973  0003A4  0E01               	movlw	1
  3974  0003A6  6E6E               	movwf	setMotorSpeeds@Aforward,c
  3975  0003A8  0E01               	movlw	1
  3976  0003AA  6E6F               	movwf	setMotorSpeeds@Bforward,c
  3977  0003AC  0E00               	movlw	0
  3978  0003AE  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3979  0003B0  0E1E               	movlw	30
  3980  0003B2  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  3981  0003B4  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  3982  0003B8                     l8524:
  3983                           
  3984                           ;main.c: 808:                 while(millisecondsMeasured < timeInOperation && abs(motorA
      +                          Distance - starterDist) < 3000){
  3985  0003B8  0100               	movlb	0	; () banked
  3986  0003BA  51E2               	movf	doOperation@timeInOperation& (0+255),w,b
  3987  0003BC  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  3988  0003BE  51E3               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3989  0003C0  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  3990  0003C2  51E4               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  3991  0003C4  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  3992  0003C6  51E5               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  3993  0003C8  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  3994  0003CA  B0D8               	btfsc	status,0,c
  3995  0003CC  D010               	goto	u9790
  3996                           
  3997                           ; BSR set to: 0
  3998  0003CE  51C9               	movf	doOperation@starterDist& (0+255),w,b
  3999  0003D0  5DF3               	subwf	_motorADistance& (0+255),w,b	;volatile
  4000  0003D2  6E18               	movwf	abs@a,c
  4001  0003D4  51CA               	movf	(doOperation@starterDist+1)& (0+255),w,b
  4002  0003D6  59F4               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4003  0003D8  6E19               	movwf	abs@a+1,c
  4004  0003DA  EC53  F01B         	call	_abs	;wreg free
  4005  0003DE  BE19               	btfsc	?_abs+1,7,c
  4006  0003E0  D7DD               	goto	l8522
  4007  0003E2  0EB8               	movlw	184
  4008  0003E4  5C18               	subwf	?_abs,w,c
  4009  0003E6  0E0B               	movlw	11
  4010  0003E8  5819               	subwfb	?_abs+1,w,c
  4011  0003EA  A0D8               	btfss	status,0,c
  4012  0003EC  D7D7               	goto	l8522
  4013  0003EE                     u9790:
  4014                           
  4015                           ;main.c: 811:                 setMotorSpeeds(0, 1, 1, 0);
  4016  0003EE  0E00               	movlw	0
  4017  0003F0  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4018  0003F2  0E00               	movlw	0
  4019  0003F4  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4020  0003F6  0E01               	movlw	1
  4021  0003F8  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4022  0003FA  0E01               	movlw	1
  4023  0003FC  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4024  0003FE  0E00               	movlw	0
  4025  000400  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4026  000402  0E00               	movlw	0
  4027  000404  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4028  000406  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4029                           
  4030                           ;main.c: 812:                 opDelay(4000, timeInOperation);
  4031  00040A  0E0F               	movlw	15
  4032  00040C  6E07               	movwf	opDelay@millis+1,c
  4033  00040E  0EA0               	movlw	160
  4034  000410  6E06               	movwf	opDelay@millis,c
  4035  000412  C0E2  F008         	movff	doOperation@timeInOperation,opDelay@maxOperationTime
  4036  000416  C0E3  F009         	movff	doOperation@timeInOperation+1,opDelay@maxOperationTime+1
  4037  00041A  C0E4  F00A         	movff	doOperation@timeInOperation+2,opDelay@maxOperationTime+2
  4038  00041E  C0E5  F00B         	movff	doOperation@timeInOperation+3,opDelay@maxOperationTime+3
  4039  000422  EC34  F019         	call	_opDelay	;wreg free
  4040                           
  4041                           ;main.c: 814:                 motorAStartDistance = 0;
  4042  000426  0E00               	movlw	0
  4043  000428  0100               	movlb	0	; () banked
  4044  00042A  6FD1               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  4045  00042C  0E00               	movlw	0
  4046  00042E  6FD0               	movwf	doOperation@motorAStartDistance& (0+255),b
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 815:                 motorBStartDistance = 0;
  4050  000430  0E00               	movlw	0
  4051  000432  6FD3               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  4052  000434  0E00               	movlw	0
  4053  000436  6FD2               	movwf	doOperation@motorBStartDistance& (0+255),b
  4054  000438  D797               	goto	l8512
  4055  00043A                     l8538:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;main.c: 822:     currentOperationState = complete;
  4059  00043A  0E05               	movlw	5
  4060  00043C                     L9:
  4061  00043C  6FE6               	movwf	doOperation@currentOperationState& (0+255),b
  4062                           
  4063                           ;main.c: 823:     break;
  4064  00043E  D04C               	goto	l8564
  4065  000440                     l8540:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;main.c: 826:                 sendArduinoAbortOperationMessage();
  4069  000440  EC4E  F01C         	call	_sendArduinoAbortOperationMessage	;wreg free
  4070                           
  4071                           ;main.c: 827:                 for (int i = 0; i < 48; i++){
  4072  000444  0E00               	movlw	0
  4073  000446  0100               	movlb	0	; () banked
  4074  000448  6FE1               	movwf	(doOperation@i+1)& (0+255),b
  4075  00044A  0E00               	movlw	0
  4076  00044C  6FE0               	movwf	doOperation@i& (0+255),b
  4077  00044E                     l8544:
  4078                           
  4079                           ; BSR set to: 0
  4080  00044E  BFE1               	btfsc	(doOperation@i+1)& (0+255),7,b
  4081  000450  D006               	goto	l8548
  4082  000452  51E1               	movf	(doOperation@i+1)& (0+255),w,b
  4083  000454  E114               	bnz	l8554
  4084  000456  0E30               	movlw	48
  4085  000458  5DE0               	subwf	doOperation@i& (0+255),w,b
  4086  00045A  B0D8               	btfsc	status,0,c
  4087  00045C  D010               	goto	l8554
  4088  00045E                     l8548:
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;main.c: 828:                     logs[0][i] = 3;
  4092  00045E  90D8               	bcf	status,0,c
  4093  000460  35E0               	rlcf	doOperation@i& (0+255),w,b
  4094  000462  6ED9               	movwf	fsr2l,c
  4095  000464  35E1               	rlcf	(doOperation@i+1)& (0+255),w,b
  4096  000466  6EDA               	movwf	fsr2h,c
  4097  000468  0E41               	movlw	low _logs
  4098  00046A  26D9               	addwf	fsr2l,f,c
  4099  00046C  0E01               	movlw	high _logs
  4100  00046E  22DA               	addwfc	fsr2h,f,c
  4101  000470  0E03               	movlw	3
  4102  000472  6EDE               	movwf	postinc2,c
  4103  000474  0E00               	movlw	0
  4104  000476  6EDD               	movwf	postdec2,c
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 829:                 }
  4108  000478  4BE0               	infsnz	doOperation@i& (0+255),f,b
  4109  00047A  2BE1               	incf	(doOperation@i+1)& (0+255),f,b
  4110  00047C  D7E8               	goto	l8544
  4111  00047E                     l8554:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 830:     setMotorSpeeds(0, 1, 1, 0);
  4115  00047E  0E00               	movlw	0
  4116  000480  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4117  000482  0E00               	movlw	0
  4118  000484  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4119  000486  0E01               	movlw	1
  4120  000488  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4121  00048A  0E01               	movlw	1
  4122  00048C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4123  00048E  0E00               	movlw	0
  4124  000490  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4125  000492  0E00               	movlw	0
  4126  000494  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4127  000496  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4128                           
  4129                           ;main.c: 831:                 LATAbits.LATA4 = 0;
  4130  00049A  9889               	bcf	3977,4,c	;volatile
  4131  00049C  0012               	return	
  4132  00049E                     l8562:
  4133                           
  4134                           ; BSR set to: 0
  4135  00049E  51E6               	movf	doOperation@currentOperationState& (0+255),w,b
  4136  0004A0  6FA0               	movwf	??_doOperation& (0+255),b
  4137  0004A2  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  4138                           
  4139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4140                           ; Switch size 1, requested type "simple"
  4141                           ; Number of cases is 1, Range of values is 0 to 0
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte            4     3 (average)
  4145                           ;	Chosen strategy is simple_byte
  4146  0004A4  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  4147  0004A6  0A00               	xorlw	0	; case 0
  4148  0004A8  A4D8               	btfss	status,2,c
  4149  0004AA  D016               	goto	l8564
  4150                           
  4151                           ; BSR set to: 0
  4152                           ; Switch size 1, requested type "simple"
  4153                           ; Number of cases is 7, Range of values is 0 to 6
  4154                           ; switch strategies available:
  4155                           ; Name         Instructions Cycles
  4156                           ; simple_byte           22    12 (average)
  4157                           ;	Chosen strategy is simple_byte
  4158  0004AC  51A0               	movf	??_doOperation& (0+255),w,b
  4159  0004AE  0A00               	xorlw	0	; case 0
  4160  0004B0  B4D8               	btfsc	status,2,c
  4161  0004B2  D674               	goto	l8450
  4162  0004B4  0A01               	xorlw	1	; case 1
  4163  0004B6  B4D8               	btfsc	status,2,c
  4164  0004B8  D6E3               	goto	l8472
  4165  0004BA  0A03               	xorlw	3	; case 2
  4166  0004BC  B4D8               	btfsc	status,2,c
  4167  0004BE  D732               	goto	l8496
  4168  0004C0  0A01               	xorlw	1	; case 3
  4169  0004C2  B4D8               	btfsc	status,2,c
  4170  0004C4  D751               	goto	l8512
  4171  0004C6  0A07               	xorlw	7	; case 4
  4172  0004C8  B4D8               	btfsc	status,2,c
  4173  0004CA  D7B7               	goto	l8538
  4174  0004CC  0A01               	xorlw	1	; case 5
  4175  0004CE  B4D8               	btfsc	status,2,c
  4176  0004D0  D7B7               	goto	l8540
  4177  0004D2  0A03               	xorlw	3	; case 6
  4178  0004D4  B4D8               	btfsc	status,2,c
  4179  0004D6  D74A               	goto	l8514
  4180  0004D8                     l8564:
  4181                           
  4182                           ;main.c: 849:   if (millisecondsMeasured >= timeInOperation){
  4183  0004D8  0100               	movlb	0	; () banked
  4184  0004DA  51E2               	movf	doOperation@timeInOperation& (0+255),w,b
  4185  0004DC  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4186  0004DE  51E3               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  4187  0004E0  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4188  0004E2  51E4               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  4189  0004E4  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4190  0004E6  51E5               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  4191  0004E8  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4192  0004EA  A0D8               	btfss	status,0,c
  4193  0004EC  D01A               	goto	l8584
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 850:    currentOperationState = complete;
  4197  0004EE  0E05               	movlw	5
  4198  0004F0  6FE6               	movwf	doOperation@currentOperationState& (0+255),b
  4199  0004F2  D017               	goto	l8584
  4200  0004F4                     l8568:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 860:                 if (topLaserStatePrev != topLaserState || bottomLaserState
      +                          Prev != bottomLaserState){
  4204  0004F4  51E8               	movf	doOperation@topLaserState& (0+255),w,b
  4205  0004F6  19DE               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4206  0004F8  A4D8               	btfss	status,2,c
  4207  0004FA  D004               	goto	u9830
  4208                           
  4209                           ; BSR set to: 0
  4210  0004FC  51E7               	movf	doOperation@bottomLaserState& (0+255),w,b
  4211  0004FE  19DF               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4212  000500  B4D8               	btfsc	status,2,c
  4213  000502  D629               	goto	l8436
  4214  000504                     u9830:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 861:                     if (topLaserStatePrev != topLaserState){
  4218  000504  51E8               	movf	doOperation@topLaserState& (0+255),w,b
  4219  000506  19DE               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  4220  000508  B4D8               	btfsc	status,2,c
  4221  00050A  D002               	goto	l8576
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;main.c: 862:                         badCount++;
  4225  00050C  4BB9               	infsnz	doOperation@badCount& (0+255),f,b
  4226  00050E  2BBA               	incf	(doOperation@badCount+1)& (0+255),f,b
  4227  000510                     l8576:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;main.c: 864:                     if (bottomLaserStatePrev != bottomLaserState){
  4231  000510  51E7               	movf	doOperation@bottomLaserState& (0+255),w,b
  4232  000512  19DF               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  4233  000514  B4D8               	btfsc	status,2,c
  4234  000516  D002               	goto	l8580
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;main.c: 865:                         badCountBot++;
  4238  000518  4BBB               	infsnz	doOperation@badCountBot& (0+255),f,b
  4239  00051A  2BBC               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  4240  00051C                     l8580:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;main.c: 867:                     currentOperationState = poleFinding;
  4244  00051C  0E01               	movlw	1
  4245  00051E  6FE6               	movwf	doOperation@currentOperationState& (0+255),b
  4246  000520  D61A               	goto	l8436
  4247  000522                     l8584:
  4248                           
  4249                           ; BSR set to: 0
  4250  000522  51E6               	movf	doOperation@currentOperationState& (0+255),w,b
  4251  000524  6FA0               	movwf	??_doOperation& (0+255),b
  4252  000526  6BA1               	clrf	(??_doOperation+1)& (0+255),b
  4253                           
  4254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 1, Range of values is 0 to 0
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte            4     3 (average)
  4260                           ;	Chosen strategy is simple_byte
  4261  000528  51A1               	movf	(??_doOperation+1)& (0+255),w,b
  4262  00052A  0A00               	xorlw	0	; case 0
  4263  00052C  A4D8               	btfss	status,2,c
  4264  00052E  D613               	goto	l8436
  4265                           
  4266                           ; BSR set to: 0
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 7, Range of values is 0 to 6
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte           22    12 (average)
  4272                           ;	Chosen strategy is simple_byte
  4273  000530  51A0               	movf	??_doOperation& (0+255),w,b
  4274  000532  0A00               	xorlw	0	; case 0
  4275  000534  B4D8               	btfsc	status,2,c
  4276  000536  D7DE               	goto	l8568
  4277  000538  0A01               	xorlw	1	; case 1
  4278  00053A  B4D8               	btfsc	status,2,c
  4279  00053C  D60C               	goto	l8436
  4280  00053E  0A03               	xorlw	3	; case 2
  4281  000540  B4D8               	btfsc	status,2,c
  4282  000542  D609               	goto	l8436
  4283  000544  0A01               	xorlw	1	; case 3
  4284  000546  B4D8               	btfsc	status,2,c
  4285  000548  D606               	goto	l8436
  4286  00054A  0A07               	xorlw	7	; case 4
  4287  00054C  B4D8               	btfsc	status,2,c
  4288  00054E  D603               	goto	l8436
  4289  000550  0A01               	xorlw	1	; case 5
  4290  000552  B4D8               	btfsc	status,2,c
  4291  000554  D600               	goto	l8436
  4292  000556  0A03               	xorlw	3	; case 6
  4293  000558  D5FE               	goto	l8436
  4294  00055A                     __end_of_doOperation:
  4295                           	opt callstack 0
  4296                           
  4297 ;; *************** function _tirePositioning *****************
  4298 ;; Defined at:
  4299 ;;		line 360 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  maxOperation    4    8[BANK0 ] unsigned long 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  startDistanc    2   16[BANK0 ] int 
  4304 ;;  bottomBreakb    2   28[BANK0 ] int 
  4305 ;;  topBreakbeam    2   26[BANK0 ] int 
  4306 ;;  distanceReco    2   24[BANK0 ] int 
  4307 ;;  distanceReco    2   22[BANK0 ] int 
  4308 ;;  bottomPrevio    2   20[BANK0 ] int 
  4309 ;;  topPreviousS    2   18[BANK0 ] int 
  4310 ;;  startDistanc    2   14[BANK0 ] int 
  4311 ;;  startDistanc    2   12[BANK0 ] int 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2    8[BANK0 ] int 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4321 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;Total ram usage:       25 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    5
  4328 ;; This function calls:
  4329 ;;		___awdiv
  4330 ;;		_abs
  4331 ;;		_opDelay
  4332 ;;		_setMotorSpeeds
  4333 ;; This function is called by:
  4334 ;;		_doOperation
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text8
  4339  00180A                     __ptext8:
  4340                           	opt callstack 0
  4341  00180A                     _tirePositioning:
  4342                           	opt callstack 24
  4343                           
  4344                           ;main.c: 361:     int topBreakbeam;;main.c: 362:     int bottomBreakbeam;;main.c: 363:  
      +                             int distanceRecordedTop;;main.c: 364:     int startDistanceTop;;main.c: 365:     int 
      +                          distanceRecordedBottom;;main.c: 366:     int startDistanceBottom;;main.c: 367:     int t
      +                          opPreviousState = 1;
  4345                           
  4346                           ;incstack = 0
  4347  00180A  0E00               	movlw	0
  4348  00180C  0100               	movlb	0	; () banked
  4349  00180E  6F93               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  4350  001810  0E01               	movlw	1
  4351  001812  6F92               	movwf	tirePositioning@topPreviousState& (0+255),b
  4352                           
  4353                           ;main.c: 368:     int bottomPreviousState = 1;
  4354  001814  0E00               	movlw	0
  4355  001816  6F95               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  4356  001818  0E01               	movlw	1
  4357  00181A  6F94               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  4358                           
  4359                           ;main.c: 371:     while(millisecondsMeasured < maxOperationTime){
  4360  00181C  D05E               	goto	l8050
  4361  00181E                     l8022:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;main.c: 372:         topBreakbeam = PORTBbits.RB4;
  4365  00181E  A881               	btfss	3969,4,c	;volatile
  4366  001820  D003               	goto	u9280
  4367  001822  6A72               	clrf	??_tirePositioning& (0+255),c
  4368  001824  2A72               	incf	??_tirePositioning& (0+255),f,c
  4369  001826  D001               	goto	u9288
  4370  001828                     u9280:
  4371  001828  6A72               	clrf	??_tirePositioning& (0+255),c
  4372  00182A                     u9288:
  4373  00182A  5072               	movf	??_tirePositioning,w,c
  4374  00182C  0100               	movlb	0	; () banked
  4375  00182E  6F9A               	movwf	tirePositioning@topBreakbeam& (0+255),b
  4376  001830  6B9B               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  4377                           
  4378                           ;main.c: 373:         bottomBreakbeam = PORTBbits.RB5;
  4379  001832  AA81               	btfss	3969,5,c	;volatile
  4380  001834  D003               	goto	u9290
  4381  001836  6A72               	clrf	??_tirePositioning& (0+255),c
  4382  001838  2A72               	incf	??_tirePositioning& (0+255),f,c
  4383  00183A  D001               	goto	u9298
  4384  00183C                     u9290:
  4385  00183C  6A72               	clrf	??_tirePositioning& (0+255),c
  4386  00183E                     u9298:
  4387  00183E  5072               	movf	??_tirePositioning,w,c
  4388  001840  0100               	movlb	0	; () banked
  4389  001842  6F9C               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  4390  001844  6B9D               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;main.c: 374:         if (topBreakbeam == 0 && topPreviousState == 1){
  4394  001846  519A               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4395  001848  119B               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4396  00184A  A4D8               	btfss	status,2,c
  4397  00184C  D008               	goto	l8030
  4398                           
  4399                           ; BSR set to: 0
  4400  00184E  0592               	decf	tirePositioning@topPreviousState& (0+255),w,b
  4401  001850  1193               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  4402  001852  A4D8               	btfss	status,2,c
  4403  001854  D004               	goto	l8030
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;main.c: 375:             startDistanceTop = motorADistance;
  4407  001856  C0F3  F08C         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  4408  00185A  C0F4  F08D         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  4409  00185E                     l8030:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;main.c: 377:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  4413  00185E  519C               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4414  001860  119D               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4415  001862  A4D8               	btfss	status,2,c
  4416  001864  D008               	goto	l8036
  4417                           
  4418                           ; BSR set to: 0
  4419  001866  0594               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  4420  001868  1195               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  4421  00186A  A4D8               	btfss	status,2,c
  4422  00186C  D004               	goto	l8036
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;main.c: 378:             startDistanceBottom = motorADistance;
  4426  00186E  C0F3  F08E         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  4427  001872  C0F4  F08F         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  4428  001876                     l8036:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;main.c: 380:         if(!topBreakbeam){
  4432  001876  519A               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4433  001878  119B               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4434  00187A  A4D8               	btfss	status,2,c
  4435  00187C  D00C               	goto	l8040
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;main.c: 381:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  4439  00187E  518C               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  4440  001880  5DF3               	subwf	_motorADistance& (0+255),w,b	;volatile
  4441  001882  6E18               	movwf	abs@a,c
  4442  001884  518D               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  4443  001886  59F4               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4444  001888  6E19               	movwf	abs@a+1,c
  4445  00188A  EC53  F01B         	call	_abs	;wreg free
  4446  00188E  C018  F096         	movff	?_abs,tirePositioning@distanceRecordedTop
  4447  001892  C019  F097         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  4448  001896                     l8040:
  4449                           
  4450                           ;main.c: 383:         if(!bottomBreakbeam){
  4451  001896  0100               	movlb	0	; () banked
  4452  001898  519C               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4453  00189A  119D               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4454  00189C  A4D8               	btfss	status,2,c
  4455  00189E  D00C               	goto	l8044
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 384:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  4459  0018A0  518E               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  4460  0018A2  5DF3               	subwf	_motorADistance& (0+255),w,b	;volatile
  4461  0018A4  6E18               	movwf	abs@a,c
  4462  0018A6  518F               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  4463  0018A8  59F4               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4464  0018AA  6E19               	movwf	abs@a+1,c
  4465  0018AC  EC53  F01B         	call	_abs	;wreg free
  4466  0018B0  C018  F098         	movff	?_abs,tirePositioning@distanceRecordedBottom
  4467  0018B4  C019  F099         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  4468  0018B8                     l8044:
  4469                           
  4470                           ;main.c: 386:         if(topBreakbeam && bottomBreakbeam){
  4471  0018B8  0100               	movlb	0	; () banked
  4472  0018BA  519A               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  4473  0018BC  119B               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  4474  0018BE  B4D8               	btfsc	status,2,c
  4475  0018C0  D004               	goto	l265
  4476                           
  4477                           ; BSR set to: 0
  4478  0018C2  519C               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  4479  0018C4  119D               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  4480  0018C6  A4D8               	btfss	status,2,c
  4481  0018C8  D012               	goto	u9380
  4482  0018CA                     l265:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;main.c: 389:         topPreviousState = topBreakbeam;
  4486  0018CA  C09A  F092         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  4487  0018CE  C09B  F093         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  4488                           
  4489                           ;main.c: 390:         bottomPreviousState = bottomBreakbeam;
  4490  0018D2  C09C  F094         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  4491  0018D6  C09D  F095         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  4492  0018DA                     l8050:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;main.c: 371:     while(millisecondsMeasured < maxOperationTime){
  4496  0018DA  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4497  0018DC  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4498  0018DE  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4499  0018E0  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4500  0018E2  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4501  0018E4  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4502  0018E6  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4503  0018E8  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4504  0018EA  A0D8               	btfss	status,0,c
  4505  0018EC  D798               	goto	l8022
  4506  0018EE                     u9380:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;main.c: 393:     if (distanceRecordedTop < 170){
  4510  0018EE  BF97               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4511  0018F0  D006               	goto	u9390
  4512  0018F2  5197               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4513  0018F4  E14B               	bnz	l8066
  4514  0018F6  0EAA               	movlw	170
  4515  0018F8  5D96               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4516  0018FA  B0D8               	btfsc	status,0,c
  4517  0018FC  D047               	goto	l8066
  4518  0018FE                     u9390:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;main.c: 394:         setMotorSpeeds(0, 1, 1, 0);
  4522  0018FE  0E00               	movlw	0
  4523  001900  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4524  001902  0E00               	movlw	0
  4525  001904  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4526  001906  0E01               	movlw	1
  4527  001908  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4528  00190A  0E01               	movlw	1
  4529  00190C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4530  00190E  0E00               	movlw	0
  4531  001910  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4532  001912  0E00               	movlw	0
  4533  001914  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4534  001916  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4535                           
  4536                           ;main.c: 395:         opDelay(100, maxOperationTime);
  4537  00191A  0E00               	movlw	0
  4538  00191C  6E07               	movwf	opDelay@millis+1,c
  4539  00191E  0E64               	movlw	100
  4540  001920  6E06               	movwf	opDelay@millis,c
  4541  001922  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4542  001926  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4543  00192A  C08A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  4544  00192E  C08B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  4545  001932  EC34  F019         	call	_opDelay	;wreg free
  4546                           
  4547                           ;main.c: 396:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4548  001936  D00E               	goto	l8060
  4549  001938                     l8058:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;main.c: 397:             setMotorSpeeds(30, 0, 0, 30);
  4553  001938  0E00               	movlw	0
  4554  00193A  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4555  00193C  0E1E               	movlw	30
  4556  00193E  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4557  001940  0E00               	movlw	0
  4558  001942  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4559  001944  0E00               	movlw	0
  4560  001946  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4561  001948  0E00               	movlw	0
  4562  00194A  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4563  00194C  0E1E               	movlw	30
  4564  00194E  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4565  001950  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4566  001954                     l8060:
  4567                           
  4568                           ;main.c: 396:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4569  001954  0100               	movlb	0	; () banked
  4570  001956  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4571  001958  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4572  00195A  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4573  00195C  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4574  00195E  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4575  001960  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4576  001962  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4577  001964  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4578  001966  B0D8               	btfsc	status,0,c
  4579  001968  D002               	goto	u9410
  4580                           
  4581                           ; BSR set to: 0
  4582  00196A  B881               	btfsc	3969,4,c	;volatile
  4583  00196C  D7E5               	goto	l8058
  4584  00196E                     u9410:
  4585                           
  4586                           ;main.c: 399:         setMotorSpeeds(0, 1, 1, 0);
  4587  00196E  0E00               	movlw	0
  4588  001970  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4589  001972  0E00               	movlw	0
  4590  001974  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4591  001976  0E01               	movlw	1
  4592  001978  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4593  00197A  0E01               	movlw	1
  4594  00197C  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4595  00197E  0E00               	movlw	0
  4596  001980  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4597  001982  0E00               	movlw	0
  4598  001984  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4599  001986  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4600                           
  4601                           ;main.c: 400:     } else {
  4602  00198A  D077               	goto	l8084
  4603  00198C                     l8066:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 401:         setMotorSpeeds(0, 1, 1, 0);
  4607  00198C  0E00               	movlw	0
  4608  00198E  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4609  001990  0E00               	movlw	0
  4610  001992  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4611  001994  0E01               	movlw	1
  4612  001996  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4613  001998  0E01               	movlw	1
  4614  00199A  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4615  00199C  0E00               	movlw	0
  4616  00199E  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4617  0019A0  0E00               	movlw	0
  4618  0019A2  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4619  0019A4  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4620                           
  4621                           ;main.c: 402:         opDelay(100, maxOperationTime);
  4622  0019A8  0E00               	movlw	0
  4623  0019AA  6E07               	movwf	opDelay@millis+1,c
  4624  0019AC  0E64               	movlw	100
  4625  0019AE  6E06               	movwf	opDelay@millis,c
  4626  0019B0  C088  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  4627  0019B4  C089  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  4628  0019B8  C08A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  4629  0019BC  C08B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  4630  0019C0  EC34  F019         	call	_opDelay	;wreg free
  4631                           
  4632                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4633  0019C4  D00E               	goto	l8072
  4634  0019C6                     l8070:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;main.c: 404:             setMotorSpeeds(30, 0, 0, 30);
  4638  0019C6  0E00               	movlw	0
  4639  0019C8  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4640  0019CA  0E1E               	movlw	30
  4641  0019CC  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4642  0019CE  0E00               	movlw	0
  4643  0019D0  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4644  0019D2  0E00               	movlw	0
  4645  0019D4  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4646  0019D6  0E00               	movlw	0
  4647  0019D8  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4648  0019DA  0E1E               	movlw	30
  4649  0019DC  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4650  0019DE  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4651  0019E2                     l8072:
  4652                           
  4653                           ;main.c: 403:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  4654  0019E2  0100               	movlb	0	; () banked
  4655  0019E4  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4656  0019E6  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4657  0019E8  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4658  0019EA  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4659  0019EC  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4660  0019EE  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4661  0019F0  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4662  0019F2  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4663  0019F4  B0D8               	btfsc	status,0,c
  4664  0019F6  D002               	goto	u9430
  4665                           
  4666                           ; BSR set to: 0
  4667  0019F8  B881               	btfsc	3969,4,c	;volatile
  4668  0019FA  D7E5               	goto	l8070
  4669  0019FC                     u9430:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;main.c: 406:         int startDistance = motorADistance;
  4673  0019FC  C0F3  F090         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  4674  001A00  C0F4  F091         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  4675                           
  4676                           ;main.c: 407:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4677  001A04  D00E               	goto	l8078
  4678  001A06                     l8076:
  4679                           
  4680                           ;main.c: 408:             setMotorSpeeds(30, 0, 0, 30);
  4681  001A06  0E00               	movlw	0
  4682  001A08  6E6D               	movwf	setMotorSpeeds@motorASpeed+1,c
  4683  001A0A  0E1E               	movlw	30
  4684  001A0C  6E6C               	movwf	setMotorSpeeds@motorASpeed,c
  4685  001A0E  0E00               	movlw	0
  4686  001A10  6E6E               	movwf	setMotorSpeeds@Aforward,c
  4687  001A12  0E00               	movlw	0
  4688  001A14  6E6F               	movwf	setMotorSpeeds@Bforward,c
  4689  001A16  0E00               	movlw	0
  4690  001A18  6E71               	movwf	setMotorSpeeds@motorBSpeed+1,c
  4691  001A1A  0E1E               	movlw	30
  4692  001A1C  6E70               	movwf	setMotorSpeeds@motorBSpeed,c
  4693  001A1E  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  4694  001A22                     l8078:
  4695                           
  4696                           ;main.c: 407:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  4697  001A22  0100               	movlb	0	; () banked
  4698  001A24  5188               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  4699  001A26  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4700  001A28  5189               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  4701  001A2A  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4702  001A2C  518A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  4703  001A2E  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4704  001A30  518B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  4705  001A32  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4706  001A34  B0D8               	btfsc	status,0,c
  4707  001A36  D79B               	goto	u9410
  4708                           
  4709                           ; BSR set to: 0
  4710  001A38  51F3               	movf	_motorADistance& (0+255),w,b	;volatile
  4711  001A3A  5D90               	subwf	tirePositioning@startDistance& (0+255),w,b
  4712  001A3C  6E18               	movwf	abs@a,c
  4713  001A3E  51F4               	movf	(_motorADistance+1)& (0+255),w,b	;volatile
  4714  001A40  5991               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  4715  001A42  6E19               	movwf	abs@a+1,c
  4716  001A44  EC53  F01B         	call	_abs	;wreg free
  4717  001A48  C018  F072         	movff	?_abs,??_tirePositioning
  4718  001A4C  C019  F073         	movff	?_abs+1,??_tirePositioning+1
  4719  001A50  C098  F006         	movff	tirePositioning@distanceRecordedBottom,___awdiv@dividend
  4720  001A54  C099  F007         	movff	tirePositioning@distanceRecordedBottom+1,___awdiv@dividend+1
  4721  001A58  0E00               	movlw	0
  4722  001A5A  6E09               	movwf	___awdiv@divisor+1,c
  4723  001A5C  0E02               	movlw	2
  4724  001A5E  6E08               	movwf	___awdiv@divisor,c
  4725  001A60  ECDB  F017         	call	___awdiv	;wreg free
  4726  001A64  5006               	movf	?___awdiv,w,c
  4727  001A66  5C72               	subwf	??_tirePositioning,w,c
  4728  001A68  5073               	movf	??_tirePositioning+1,w,c
  4729  001A6A  0A80               	xorlw	128
  4730  001A6C  6E74               	movwf	(??_tirePositioning+2)& (0+255),c
  4731  001A6E  5007               	movf	?___awdiv+1,w,c
  4732  001A70  0A80               	xorlw	128
  4733  001A72  5874               	subwfb	(??_tirePositioning+2)& (0+255),w,c
  4734  001A74  B0D8               	btfsc	status,0,c
  4735  001A76  D77B               	goto	u9410
  4736  001A78  D7C6               	goto	l8076
  4737  001A7A                     l8084:
  4738                           
  4739                           ;main.c: 414:     if (distanceRecordedTop < 170 && distanceRecordedBottom < 170){
  4740  001A7A  0100               	movlb	0	; () banked
  4741  001A7C  BF97               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  4742  001A7E  D006               	goto	u9460
  4743  001A80  5197               	movf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4744  001A82  E111               	bnz	l8094
  4745  001A84  0EAA               	movlw	170
  4746  001A86  5D96               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4747  001A88  B0D8               	btfsc	status,0,c
  4748  001A8A  D00D               	goto	l8094
  4749  001A8C                     u9460:
  4750                           
  4751                           ; BSR set to: 0
  4752  001A8C  BF99               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  4753  001A8E  D006               	goto	u9470
  4754  001A90  5199               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4755  001A92  E109               	bnz	l8094
  4756  001A94  0EAA               	movlw	170
  4757  001A96  5D98               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4758  001A98  B0D8               	btfsc	status,0,c
  4759  001A9A  D005               	goto	l8094
  4760  001A9C                     u9470:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;main.c: 415:         return 0;
  4764  001A9C  0E00               	movlw	0
  4765  001A9E  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4766  001AA0  0E00               	movlw	0
  4767  001AA2  6F88               	movwf	?_tirePositioning& (0+255),b
  4768  001AA4  0012               	return	
  4769  001AA6                     l8094:
  4770                           
  4771                           ; BSR set to: 0
  4772  001AA6  5198               	movf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  4773  001AA8  5D96               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  4774  001AAA  6E18               	movwf	abs@a,c
  4775  001AAC  5199               	movf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  4776  001AAE  5997               	subwfb	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  4777  001AB0  6E19               	movwf	abs@a+1,c
  4778  001AB2  EC53  F01B         	call	_abs	;wreg free
  4779  001AB6  BE19               	btfsc	?_abs+1,7,c
  4780  001AB8  D00C               	goto	l8102
  4781  001ABA  5019               	movf	?_abs+1,w,c
  4782  001ABC  E104               	bnz	u9480
  4783  001ABE  0EB5               	movlw	181
  4784  001AC0  5C18               	subwf	?_abs,w,c
  4785  001AC2  A0D8               	btfss	status,0,c
  4786  001AC4  D006               	goto	l8102
  4787  001AC6                     u9480:
  4788                           
  4789                           ;main.c: 417:         return 1;
  4790  001AC6  0E00               	movlw	0
  4791  001AC8  0100               	movlb	0	; () banked
  4792  001ACA  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4793  001ACC  0E01               	movlw	1
  4794  001ACE  6F88               	movwf	?_tirePositioning& (0+255),b
  4795  001AD0  0012               	return	
  4796  001AD2                     l8102:
  4797                           
  4798                           ;main.c: 419:         return 2;
  4799  001AD2  0E00               	movlw	0
  4800  001AD4  0100               	movlb	0	; () banked
  4801  001AD6  6F89               	movwf	(?_tirePositioning+1)& (0+255),b
  4802  001AD8  0E02               	movlw	2
  4803  001ADA  6F88               	movwf	?_tirePositioning& (0+255),b
  4804                           
  4805                           ; BSR set to: 0
  4806  001ADC  0012               	return		;funcret
  4807  001ADE                     __end_of_tirePositioning:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _opDelay *****************
  4811 ;; Defined at:
  4812 ;;		line 120 in file "main.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  millis          2    5[COMRAM] int 
  4815 ;;  maxOperation    4    7[COMRAM] unsigned long 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  startTime       4   19[COMRAM] unsigned long 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;Total ram usage:       18 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_tirePositioning
  4838 ;;		_doOperation
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text9
  4843  003268                     __ptext9:
  4844                           	opt callstack 0
  4845  003268                     _opDelay:
  4846                           	opt callstack 26
  4847                           
  4848                           ;main.c: 121:     unsigned long startTime = millisecondsMeasured;
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;incstack = 0
  4852  003268  C075  F014         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  4853  00326C  C076  F015         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  4854  003270  C077  F016         	movff	_millisecondsMeasured+2,opDelay@startTime+2	;volatile
  4855  003274  C078  F017         	movff	_millisecondsMeasured+3,opDelay@startTime+3	;volatile
  4856  003278                     l7828:
  4857                           
  4858                           ;main.c: 122:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  4859  003278  5008               	movf	opDelay@maxOperationTime,w,c
  4860  00327A  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4861  00327C  5009               	movf	opDelay@maxOperationTime+1,w,c
  4862  00327E  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4863  003280  500A               	movf	opDelay@maxOperationTime+2,w,c
  4864  003282  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4865  003284  500B               	movf	opDelay@maxOperationTime+3,w,c
  4866  003286  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4867  003288  B0D8               	btfsc	status,0,c
  4868  00328A  0012               	return	
  4869  00328C  C006  F00C         	movff	opDelay@millis,??_opDelay
  4870  003290  C007  F00D         	movff	opDelay@millis+1,??_opDelay+1
  4871  003294  0E00               	movlw	0
  4872  003296  BE0D               	btfsc	(??_opDelay+1)& (0+255),7,c
  4873  003298  0EFF               	movlw	255
  4874  00329A  6E0E               	movwf	(??_opDelay+2)& (0+255),c
  4875  00329C  6E0F               	movwf	(??_opDelay+3)& (0+255),c
  4876  00329E  5014               	movf	opDelay@startTime,w,c
  4877  0032A0  5C75               	subwf	_millisecondsMeasured,w,c	;volatile
  4878  0032A2  6E10               	movwf	(??_opDelay+4)& (0+255),c
  4879  0032A4  5015               	movf	opDelay@startTime+1,w,c
  4880  0032A6  5876               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  4881  0032A8  6E11               	movwf	(??_opDelay+5)& (0+255),c
  4882  0032AA  5016               	movf	opDelay@startTime+2,w,c
  4883  0032AC  5877               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  4884  0032AE  6E12               	movwf	(??_opDelay+6)& (0+255),c
  4885  0032B0  5017               	movf	opDelay@startTime+3,w,c
  4886  0032B2  5878               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  4887  0032B4  6E13               	movwf	(??_opDelay+7)& (0+255),c
  4888  0032B6  500C               	movf	??_opDelay,w,c
  4889  0032B8  5C10               	subwf	??_opDelay+4,w,c
  4890  0032BA  500D               	movf	??_opDelay+1,w,c
  4891  0032BC  5811               	subwfb	??_opDelay+5,w,c
  4892  0032BE  500E               	movf	??_opDelay+2,w,c
  4893  0032C0  5812               	subwfb	??_opDelay+6,w,c
  4894  0032C2  500F               	movf	??_opDelay+3,w,c
  4895  0032C4  5813               	subwfb	??_opDelay+7,w,c
  4896  0032C6  B0D8               	btfsc	status,0,c
  4897  0032C8  0012               	return	
  4898  0032CA  D7D6               	goto	l7828
  4899  0032CC                     __end_of_opDelay:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function ___awdiv *****************
  4903 ;; Defined at:
  4904 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  dividend        2    5[COMRAM] int 
  4907 ;;  divisor         2    7[COMRAM] int 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  quotient        2   11[COMRAM] int 
  4910 ;;  sign            1   10[COMRAM] unsigned char 
  4911 ;;  counter         1    9[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  2    5[COMRAM] int 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;Total ram usage:        8 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    2
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_tirePositioning
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text10
  4936  002FB6                     __ptext10:
  4937                           	opt callstack 0
  4938  002FB6                     ___awdiv:
  4939                           	opt callstack 26
  4940                           
  4941                           ;incstack = 0
  4942  002FB6  0E00               	movlw	0
  4943  002FB8  6E0B               	movwf	___awdiv@sign,c
  4944  002FBA  AE09               	btfss	___awdiv@divisor+1,7,c
  4945  002FBC  D006               	goto	l7916
  4946  002FBE  6C08               	negf	___awdiv@divisor,c
  4947  002FC0  1E09               	comf	___awdiv@divisor+1,f,c
  4948  002FC2  B0D8               	btfsc	status,0,c
  4949  002FC4  2A09               	incf	___awdiv@divisor+1,f,c
  4950  002FC6  0E01               	movlw	1
  4951  002FC8  6E0B               	movwf	___awdiv@sign,c
  4952  002FCA                     l7916:
  4953  002FCA  AE07               	btfss	___awdiv@dividend+1,7,c
  4954  002FCC  D006               	goto	l7922
  4955  002FCE  6C06               	negf	___awdiv@dividend,c
  4956  002FD0  1E07               	comf	___awdiv@dividend+1,f,c
  4957  002FD2  B0D8               	btfsc	status,0,c
  4958  002FD4  2A07               	incf	___awdiv@dividend+1,f,c
  4959  002FD6  0E01               	movlw	1
  4960  002FD8  1A0B               	xorwf	___awdiv@sign,f,c
  4961  002FDA                     l7922:
  4962  002FDA  0E00               	movlw	0
  4963  002FDC  6E0D               	movwf	___awdiv@quotient+1,c
  4964  002FDE  0E00               	movlw	0
  4965  002FE0  6E0C               	movwf	___awdiv@quotient,c
  4966  002FE2  5008               	movf	___awdiv@divisor,w,c
  4967  002FE4  1009               	iorwf	___awdiv@divisor+1,w,c
  4968  002FE6  B4D8               	btfsc	status,2,c
  4969  002FE8  D01C               	goto	l7944
  4970  002FEA  0E01               	movlw	1
  4971  002FEC  6E0A               	movwf	___awdiv@counter,c
  4972  002FEE  D004               	goto	l7930
  4973  002FF0                     l7928:
  4974  002FF0  90D8               	bcf	status,0,c
  4975  002FF2  3608               	rlcf	___awdiv@divisor,f,c
  4976  002FF4  3609               	rlcf	___awdiv@divisor+1,f,c
  4977  002FF6  2A0A               	incf	___awdiv@counter,f,c
  4978  002FF8                     l7930:
  4979  002FF8  AE09               	btfss	___awdiv@divisor+1,7,c
  4980  002FFA  D7FA               	goto	l7928
  4981  002FFC                     u9250:
  4982  002FFC  90D8               	bcf	status,0,c
  4983  002FFE  360C               	rlcf	___awdiv@quotient,f,c
  4984  003000  360D               	rlcf	___awdiv@quotient+1,f,c
  4985  003002  5008               	movf	___awdiv@divisor,w,c
  4986  003004  5C06               	subwf	___awdiv@dividend,w,c
  4987  003006  5009               	movf	___awdiv@divisor+1,w,c
  4988  003008  5807               	subwfb	___awdiv@dividend+1,w,c
  4989  00300A  A0D8               	btfss	status,0,c
  4990  00300C  D005               	goto	l7940
  4991  00300E  5008               	movf	___awdiv@divisor,w,c
  4992  003010  5E06               	subwf	___awdiv@dividend,f,c
  4993  003012  5009               	movf	___awdiv@divisor+1,w,c
  4994  003014  5A07               	subwfb	___awdiv@dividend+1,f,c
  4995  003016  800C               	bsf	___awdiv@quotient,0,c
  4996  003018                     l7940:
  4997  003018  90D8               	bcf	status,0,c
  4998  00301A  3209               	rrcf	___awdiv@divisor+1,f,c
  4999  00301C  3208               	rrcf	___awdiv@divisor,f,c
  5000  00301E  2E0A               	decfsz	___awdiv@counter,f,c
  5001  003020  D7ED               	goto	u9250
  5002  003022                     l7944:
  5003  003022  500B               	movf	___awdiv@sign,w,c
  5004  003024  B4D8               	btfsc	status,2,c
  5005  003026  D004               	goto	l7948
  5006  003028  6C0C               	negf	___awdiv@quotient,c
  5007  00302A  1E0D               	comf	___awdiv@quotient+1,f,c
  5008  00302C  B0D8               	btfsc	status,0,c
  5009  00302E  2A0D               	incf	___awdiv@quotient+1,f,c
  5010  003030                     l7948:
  5011  003030  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5012  003034  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5013  003038  0012               	return		;funcret
  5014  00303A                     __end_of___awdiv:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  5018 ;; Defined at:
  5019 ;;		line 486 in file "main.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  data            1    0        unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;Total ram usage:        1 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    4
  5040 ;; This function calls:
  5041 ;;		_I2C_Master_Start
  5042 ;;		_I2C_Master_Stop
  5043 ;;		_I2C_Master_Write
  5044 ;; This function is called by:
  5045 ;;		_doOperation
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text11
  5050  003858                     __ptext11:
  5051                           	opt callstack 0
  5052  003858                     _sendArduinoTireOperationStartMessage:
  5053                           	opt callstack 25
  5054                           
  5055                           ;main.c: 493:     I2C_Master_Start();
  5056                           
  5057                           ;incstack = 0
  5058  003858  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  5059                           
  5060                           ;main.c: 494:     I2C_Master_Write(0b00010000);
  5061  00385C  0E00               	movlw	0
  5062  00385E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5063  003860  0E10               	movlw	16
  5064  003862  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5065  003864  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5066                           
  5067                           ;main.c: 495:     I2C_Master_Write(data);
  5068  003868  0E00               	movlw	0
  5069  00386A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5070  00386C  0E32               	movlw	50
  5071  00386E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5072  003870  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5073                           
  5074                           ;main.c: 496:     I2C_Master_Stop();
  5075  003874  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  5076  003878  0012               	return		;funcret
  5077  00387A                     __end_of_sendArduinoTireOperationStartMessage:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function _sendArduinoTireDropRequest *****************
  5081 ;; Defined at:
  5082 ;;		line 427 in file "main.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  data            1    0        unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;Total ram usage:        1 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    4
  5103 ;; This function calls:
  5104 ;;		_I2C_Master_Start
  5105 ;;		_I2C_Master_Stop
  5106 ;;		_I2C_Master_Write
  5107 ;; This function is called by:
  5108 ;;		_doOperation
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text12
  5113  00387A                     __ptext12:
  5114                           	opt callstack 0
  5115  00387A                     _sendArduinoTireDropRequest:
  5116                           	opt callstack 25
  5117                           
  5118                           ;main.c: 434:     I2C_Master_Start();
  5119                           
  5120                           ;incstack = 0
  5121  00387A  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  5122                           
  5123                           ;main.c: 435:     I2C_Master_Write(0b00010000);
  5124  00387E  0E00               	movlw	0
  5125  003880  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5126  003882  0E10               	movlw	16
  5127  003884  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5128  003886  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5129                           
  5130                           ;main.c: 436:     I2C_Master_Write(data);
  5131  00388A  0E00               	movlw	0
  5132  00388C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5133  00388E  0E31               	movlw	49
  5134  003890  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5135  003892  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5136                           
  5137                           ;main.c: 437:     I2C_Master_Stop();
  5138  003896  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  5139  00389A  0012               	return		;funcret
  5140  00389C                     __end_of_sendArduinoTireDropRequest:
  5141                           	opt callstack 0
  5142                           
  5143 ;; *************** function _sendArduinoAbortOperationMessage *****************
  5144 ;; Defined at:
  5145 ;;		line 500 in file "main.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  data            1    0        unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;Total ram usage:        1 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    4
  5166 ;; This function calls:
  5167 ;;		_I2C_Master_Start
  5168 ;;		_I2C_Master_Stop
  5169 ;;		_I2C_Master_Write
  5170 ;; This function is called by:
  5171 ;;		_doOperation
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text13
  5176  00389C                     __ptext13:
  5177                           	opt callstack 0
  5178  00389C                     _sendArduinoAbortOperationMessage:
  5179                           	opt callstack 25
  5180                           
  5181                           ;main.c: 507:     I2C_Master_Start();
  5182                           
  5183                           ;incstack = 0
  5184  00389C  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  5185                           
  5186                           ;main.c: 508:     I2C_Master_Write(0b00010000);
  5187  0038A0  0E00               	movlw	0
  5188  0038A2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5189  0038A4  0E10               	movlw	16
  5190  0038A6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5191  0038A8  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5192                           
  5193                           ;main.c: 509:     I2C_Master_Write(data);
  5194  0038AC  0E00               	movlw	0
  5195  0038AE  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5196  0038B0  0E33               	movlw	51
  5197  0038B2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5198  0038B4  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5199                           
  5200                           ;main.c: 510:     I2C_Master_Stop();
  5201  0038B8  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  5202  0038BC  0012               	return		;funcret
  5203  0038BE                     __end_of_sendArduinoAbortOperationMessage:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function _requestIsTireDropDone *****************
  5207 ;; Defined at:
  5208 ;;		line 515 in file "main.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  data            1    8[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      _Bool 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		_I2C_Master_Read
  5231 ;;		_I2C_Master_Start
  5232 ;;		_I2C_Master_Stop
  5233 ;;		_I2C_Master_Write
  5234 ;; This function is called by:
  5235 ;;		_doOperation
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text14
  5240  003768                     __ptext14:
  5241                           	opt callstack 0
  5242  003768                     _requestIsTireDropDone:
  5243                           	opt callstack 25
  5244                           
  5245                           ;main.c: 516:     I2C_Master_Start();
  5246                           
  5247                           ;incstack = 0
  5248  003768  ECAC  F01C         	call	_I2C_Master_Start	;wreg free
  5249                           
  5250                           ;main.c: 517:     I2C_Master_Write(0b00010001);
  5251  00376C  0E00               	movlw	0
  5252  00376E  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5253  003770  0E11               	movlw	17
  5254  003772  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5255  003774  ECA3  F01C         	call	_I2C_Master_Write	;wreg free
  5256                           
  5257                           ;main.c: 518:     unsigned char data = I2C_Master_Read(1);
  5258  003778  0E01               	movlw	1
  5259  00377A  EC1A  F01C         	call	_I2C_Master_Read
  5260  00377E  6E09               	movwf	requestIsTireDropDone@data,c
  5261                           
  5262                           ;main.c: 519:     I2C_Master_Stop();
  5263  003780  ECA8  F01C         	call	_I2C_Master_Stop	;wreg free
  5264                           
  5265                           ;main.c: 520:     if(data == '1'){
  5266  003784  0E31               	movlw	49
  5267  003786  1809               	xorwf	requestIsTireDropDone@data,w,c
  5268  003788  A4D8               	btfss	status,2,c
  5269  00378A  D002               	goto	l8150
  5270                           
  5271                           ;main.c: 521:         return 1;
  5272  00378C  0E01               	movlw	1
  5273  00378E  0012               	return	
  5274  003790                     l8150:
  5275                           
  5276                           ;main.c: 523:     return 0;
  5277  003790  0E00               	movlw	0
  5278  003792  0012               	return		;funcret
  5279  003794                     __end_of_requestIsTireDropDone:
  5280                           	opt callstack 0
  5281                           
  5282 ;; *************** function _I2C_Master_Write *****************
  5283 ;; Defined at:
  5284 ;;		line 70 in file "I2C.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    3
  5305 ;; This function calls:
  5306 ;;		_I2C_Master_Wait
  5307 ;; This function is called by:
  5308 ;;		_sendArduinoTireDropRequest
  5309 ;;		_sendArduinoTireOperationStartMessage
  5310 ;;		_sendArduinoAbortOperationMessage
  5311 ;;		_requestIsTireDropDone
  5312 ;;		_doOperation
  5313 ;;		_main
  5314 ;;		_rtc_set_time
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text15
  5319  003946                     __ptext15:
  5320                           	opt callstack 0
  5321  003946                     _I2C_Master_Write:
  5322                           	opt callstack 25
  5323                           
  5324                           ;I2C.c: 71:     I2C_Master_Wait();
  5325                           
  5326                           ;incstack = 0
  5327  003946  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5328                           
  5329                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5330  00394A  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5331  00394E  0012               	return		;funcret
  5332  003950                     __end_of_I2C_Master_Write:
  5333                           	opt callstack 0
  5334                           
  5335 ;; *************** function _I2C_Master_Stop *****************
  5336 ;; Defined at:
  5337 ;;		line 65 in file "I2C.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        0 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    3
  5358 ;; This function calls:
  5359 ;;		_I2C_Master_Wait
  5360 ;; This function is called by:
  5361 ;;		_sendArduinoTireDropRequest
  5362 ;;		_sendArduinoTireOperationStartMessage
  5363 ;;		_sendArduinoAbortOperationMessage
  5364 ;;		_requestIsTireDropDone
  5365 ;;		_doOperation
  5366 ;;		_main
  5367 ;;		_rtc_set_time
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text16
  5372  003950                     __ptext16:
  5373                           	opt callstack 0
  5374  003950                     _I2C_Master_Stop:
  5375                           	opt callstack 25
  5376                           
  5377                           ;I2C.c: 66:     I2C_Master_Wait();
  5378                           
  5379                           ;incstack = 0
  5380  003950  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5381                           
  5382                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5383  003954  84C5               	bsf	4037,2,c	;volatile
  5384  003956  0012               	return		;funcret
  5385  003958                     __end_of_I2C_Master_Stop:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function _I2C_Master_Start *****************
  5389 ;; Defined at:
  5390 ;;		line 55 in file "I2C.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0, cstack
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        0 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    3
  5411 ;; This function calls:
  5412 ;;		_I2C_Master_Wait
  5413 ;; This function is called by:
  5414 ;;		_sendArduinoTireDropRequest
  5415 ;;		_sendArduinoTireOperationStartMessage
  5416 ;;		_sendArduinoAbortOperationMessage
  5417 ;;		_requestIsTireDropDone
  5418 ;;		_doOperation
  5419 ;;		_main
  5420 ;;		_rtc_set_time
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text17
  5425  003958                     __ptext17:
  5426                           	opt callstack 0
  5427  003958                     _I2C_Master_Start:
  5428                           	opt callstack 25
  5429                           
  5430                           ;I2C.c: 56:     I2C_Master_Wait();
  5431                           
  5432                           ;incstack = 0
  5433  003958  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5434                           
  5435                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5436  00395C  80C5               	bsf	4037,0,c	;volatile
  5437  00395E  0012               	return		;funcret
  5438  003960                     __end_of_I2C_Master_Start:
  5439                           	opt callstack 0
  5440                           
  5441 ;; *************** function _I2C_Master_Read *****************
  5442 ;; Defined at:
  5443 ;;		line 77 in file "I2C.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  ackBit          1    wreg     unsigned char 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  ackBit          1    6[COMRAM] unsigned char 
  5448 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      unsigned char 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;Total ram usage:        2 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    3
  5465 ;; This function calls:
  5466 ;;		_I2C_Master_Wait
  5467 ;; This function is called by:
  5468 ;;		_requestIsTireDropDone
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text18
  5474  003834                     __ptext18:
  5475                           	opt callstack 0
  5476  003834                     _I2C_Master_Read:
  5477                           	opt callstack 25
  5478                           
  5479                           ;incstack = 0
  5480                           ;I2C_Master_Read@ackBit stored from wreg
  5481  003834  6E07               	movwf	I2C_Master_Read@ackBit,c
  5482                           
  5483                           ;I2C.c: 78:     I2C_Master_Wait();
  5484  003836  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5485                           
  5486                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5487  00383A  86C5               	bsf	4037,3,c	;volatile
  5488                           
  5489                           ;I2C.c: 81:     I2C_Master_Wait();
  5490  00383C  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5491                           
  5492                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5493  003840  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5494                           
  5495                           ;I2C.c: 86:     I2C_Master_Wait();
  5496  003844  EC85  F01C         	call	_I2C_Master_Wait	;wreg free
  5497                           
  5498                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5499  003848  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5500  00384A  D002               	bra	u9175
  5501  00384C  9AC5               	bcf	4037,5,c	;volatile
  5502  00384E  D001               	bra	u9176
  5503  003850                     u9175:
  5504  003850  8AC5               	bsf	4037,5,c	;volatile
  5505  003852                     u9176:
  5506                           
  5507                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5508  003852  88C5               	bsf	4037,4,c	;volatile
  5509                           
  5510                           ;I2C.c: 90:     return receivedByte;
  5511  003854  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5512  003856  0012               	return		;funcret
  5513  003858                     __end_of_I2C_Master_Read:
  5514                           	opt callstack 0
  5515                           
  5516 ;; *************** function _I2C_Master_Wait *****************
  5517 ;; Defined at:
  5518 ;;		line 21 in file "I2C.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;		None
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;		None
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      void 
  5525 ;; Registers used:
  5526 ;;		wreg, status,2, status,0
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;Total ram usage:        1 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; Hardware stack levels required when called:    2
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_I2C_Master_Start
  5543 ;;		_I2C_Master_Stop
  5544 ;;		_I2C_Master_Write
  5545 ;;		_I2C_Master_Read
  5546 ;;		_I2C_Master_RepeatedStart
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text19
  5551  00390A                     __ptext19:
  5552                           	opt callstack 0
  5553  00390A                     _I2C_Master_Wait:
  5554                           	opt callstack 25
  5555                           
  5556                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5557                           
  5558                           ;I2C.c: 28:     }
  5559                           
  5560                           ;incstack = 0
  5561  00390A  B4C7               	btfsc	4039,2,c	;volatile
  5562  00390C  D7FE               	goto	_I2C_Master_Wait
  5563  00390E  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5564  003912  0E1F               	movlw	31
  5565  003914  1606               	andwf	??_I2C_Master_Wait,f,c
  5566  003916  B4D8               	btfsc	status,2,c
  5567  003918  0012               	return	
  5568  00391A  D7F7               	goto	_I2C_Master_Wait
  5569  00391C                     __end_of_I2C_Master_Wait:
  5570                           	opt callstack 0
  5571                           
  5572 ;; *************** function _init_motor_PWM *****************
  5573 ;; Defined at:
  5574 ;;		line 265 in file "main.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;Total ram usage:        0 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:    2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_doOperation
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text20
  5603  0037BE                     __ptext20:
  5604                           	opt callstack 0
  5605  0037BE                     _init_motor_PWM:
  5606                           	opt callstack 27
  5607                           
  5608                           ;main.c: 273:     TRISCbits.TRISC2 = 1;
  5609                           
  5610                           ;incstack = 0
  5611  0037BE  8494               	bsf	3988,2,c	;volatile
  5612                           
  5613                           ;main.c: 274:     TRISCbits.TRISC1 = 1;
  5614  0037C0  8294               	bsf	3988,1,c	;volatile
  5615                           
  5616                           ;main.c: 277:     const unsigned long FREQUENCY = 1000;;main.c: 278:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 279:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  5617  0037C2  0E9B               	movlw	155
  5618  0037C4  6ECB               	movwf	4043,c	;volatile
  5619                           
  5620                           ;main.c: 282:     P1M1 = 0;
  5621  0037C6  9EBD               	bcf	4029,7,c	;volatile
  5622                           
  5623                           ;main.c: 283:     P1M0 = 0;
  5624  0037C8  9CBD               	bcf	4029,6,c	;volatile
  5625                           
  5626                           ;main.c: 284:     CCP1M3 = 1;
  5627  0037CA  86BD               	bsf	4029,3,c	;volatile
  5628                           
  5629                           ;main.c: 285:     CCP1M2 = 1;
  5630  0037CC  84BD               	bsf	4029,2,c	;volatile
  5631                           
  5632                           ;main.c: 286:     CCP1M1 = 0;
  5633  0037CE  92BD               	bcf	4029,1,c	;volatile
  5634                           
  5635                           ;main.c: 287:     CCP1M0 = 0;
  5636  0037D0  90BD               	bcf	4029,0,c	;volatile
  5637                           
  5638                           ;main.c: 289:     CCP2M3 = 1;
  5639  0037D2  86BA               	bsf	4026,3,c	;volatile
  5640                           
  5641                           ;main.c: 290:     CCP2M2 = 1;
  5642  0037D4  84BA               	bsf	4026,2,c	;volatile
  5643                           
  5644                           ;main.c: 291:     CCP2M1 = 0;
  5645  0037D6  92BA               	bcf	4026,1,c	;volatile
  5646                           
  5647                           ;main.c: 292:     CCP2M0 = 0;
  5648  0037D8  90BA               	bcf	4026,0,c	;volatile
  5649                           
  5650                           ;main.c: 295:     T2CKPS0 = 1;
  5651  0037DA  80CA               	bsf	4042,0,c	;volatile
  5652                           
  5653                           ;main.c: 296:     T2CKPS1 = 1;
  5654  0037DC  82CA               	bsf	4042,1,c	;volatile
  5655                           
  5656                           ;main.c: 299:     TMR2ON = 1;
  5657  0037DE  84CA               	bsf	4042,2,c	;volatile
  5658                           
  5659                           ;main.c: 302:     TRISCbits.TRISC2 = 0;
  5660  0037E0  9494               	bcf	3988,2,c	;volatile
  5661                           
  5662                           ;main.c: 303:     TRISCbits.TRISC1 = 0;
  5663  0037E2  9294               	bcf	3988,1,c	;volatile
  5664  0037E4  0012               	return		;funcret
  5665  0037E6                     __end_of_init_motor_PWM:
  5666                           	opt callstack 0
  5667                           
  5668 ;; *************** function _errorCorrectedMove *****************
  5669 ;; Defined at:
  5670 ;;		line 572 in file "main.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  goalSpeed       2    8[BANK0 ] int 
  5673 ;;  turnRatio       4   10[BANK0 ] float 
  5674 ;;  motorAStartD    2   14[BANK0 ] int 
  5675 ;;  motorBStartD    2   16[BANK0 ] int 
  5676 ;;  correctionCo    4   18[BANK0 ] float 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  BSpeed          2   30[BANK0 ] int 
  5679 ;;  ASpeed          2   28[BANK0 ] int 
  5680 ;;  error           2   26[BANK0 ] int 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5690 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;Total ram usage:       24 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    5
  5697 ;; This function calls:
  5698 ;;		___fladd
  5699 ;;		___fldiv
  5700 ;;		___flmul
  5701 ;;		___flsub
  5702 ;;		___fltol
  5703 ;;		___xxtofl
  5704 ;;		_setMotorSpeeds
  5705 ;; This function is called by:
  5706 ;;		_doOperation
  5707 ;;		_opErrorCorrectionDegrees
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text21
  5712  001D66                     __ptext21:
  5713                           	opt callstack 0
  5714  001D66                     _errorCorrectedMove:
  5715                           	opt callstack 24
  5716                           
  5717                           ;main.c: 573:     int error = (int)((motorADistance - motorAStartDistance)-(motorBDistan
      +                          ce - motorBStartDistance)/turnRatio);
  5718                           
  5719                           ;incstack = 0
  5720  001D66  C08A  F031         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  5721  001D6A  C08B  F032         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  5722  001D6E  C08C  F033         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  5723  001D72  C08D  F034         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  5724  001D76  0100               	movlb	0	; () banked
  5725  001D78  5190               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  5726  001D7A  5DF1               	subwf	_motorBDistance& (0+255),w,b	;volatile
  5727  001D7C  6F96               	movwf	??_errorCorrectedMove& (0+255),b
  5728  001D7E  5191               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  5729  001D80  59F2               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  5730  001D82  6F97               	movwf	(??_errorCorrectedMove+1)& (0+255),b
  5731  001D84  C096  F006         	movff	??_errorCorrectedMove,___xxtofl@val
  5732  001D88  C097  F007         	movff	??_errorCorrectedMove+1,___xxtofl@val+1
  5733  001D8C  0E00               	movlw	0
  5734  001D8E  BE07               	btfsc	___xxtofl@val+1,7,c
  5735  001D90  0EFF               	movlw	-1
  5736  001D92  6E08               	movwf	___xxtofl@val+2,c
  5737  001D94  6E09               	movwf	___xxtofl@val+3,c
  5738  001D96  0E01               	movlw	1
  5739  001D98  EC69  F014         	call	___xxtofl
  5740  001D9C  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5741  001DA0  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5742  001DA4  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5743  001DA8  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5744  001DAC  EC6F  F00D         	call	___fldiv	;wreg free
  5745  001DB0  C02D  F04A         	movff	?___fldiv,___flsub@a
  5746  001DB4  C02E  F04B         	movff	?___fldiv+1,___flsub@a+1
  5747  001DB8  C02F  F04C         	movff	?___fldiv+2,___flsub@a+2
  5748  001DBC  C030  F04D         	movff	?___fldiv+3,___flsub@a+3
  5749  001DC0  0100               	movlb	0	; () banked
  5750  001DC2  518E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  5751  001DC4  5DF3               	subwf	_motorADistance& (0+255),w,b	;volatile
  5752  001DC6  6F98               	movwf	(??_errorCorrectedMove+2)& (0+255),b
  5753  001DC8  518F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  5754  001DCA  59F4               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5755  001DCC  6F99               	movwf	(??_errorCorrectedMove+3)& (0+255),b
  5756  001DCE  C098  F006         	movff	??_errorCorrectedMove+2,___xxtofl@val
  5757  001DD2  C099  F007         	movff	??_errorCorrectedMove+3,___xxtofl@val+1
  5758  001DD6  0E00               	movlw	0
  5759  001DD8  BE07               	btfsc	___xxtofl@val+1,7,c
  5760  001DDA  0EFF               	movlw	-1
  5761  001DDC  6E08               	movwf	___xxtofl@val+2,c
  5762  001DDE  6E09               	movwf	___xxtofl@val+3,c
  5763  001DE0  0E01               	movlw	1
  5764  001DE2  EC69  F014         	call	___xxtofl
  5765  001DE6  C006  F046         	movff	?___xxtofl,___flsub@b
  5766  001DEA  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5767  001DEE  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5768  001DF2  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5769  001DF6  EC32  F01A         	call	___flsub	;wreg free
  5770  001DFA  C046  F04E         	movff	?___flsub,___fltol@f1
  5771  001DFE  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5772  001E02  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5773  001E06  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5774  001E0A  ECA3  F016         	call	___fltol	;wreg free
  5775  001E0E  C04E  F09A         	movff	?___fltol,errorCorrectedMove@error
  5776  001E12  C04F  F09B         	movff	?___fltol+1,errorCorrectedMove@error+1
  5777                           
  5778                           ;main.c: 574:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  5779  001E16  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5780  001E1A  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5781  001E1E  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5782  001E22  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5783  001E26  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5784  001E2A  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5785  001E2E  0E00               	movlw	0
  5786  001E30  BE07               	btfsc	___xxtofl@val+1,7,c
  5787  001E32  0EFF               	movlw	-1
  5788  001E34  6E08               	movwf	___xxtofl@val+2,c
  5789  001E36  6E09               	movwf	___xxtofl@val+3,c
  5790  001E38  0E01               	movlw	1
  5791  001E3A  EC69  F014         	call	___xxtofl
  5792  001E3E  C006  F014         	movff	?___xxtofl,___flmul@b
  5793  001E42  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5794  001E46  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5795  001E4A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5796  001E4E  ECD6  F008         	call	___flmul	;wreg free
  5797  001E52  C014  F04A         	movff	?___flmul,___flsub@a
  5798  001E56  C015  F04B         	movff	?___flmul+1,___flsub@a+1
  5799  001E5A  C016  F04C         	movff	?___flmul+2,___flsub@a+2
  5800  001E5E  C017  F04D         	movff	?___flmul+3,___flsub@a+3
  5801  001E62  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5802  001E66  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5803  001E6A  0E00               	movlw	0
  5804  001E6C  BE07               	btfsc	___xxtofl@val+1,7,c
  5805  001E6E  0EFF               	movlw	-1
  5806  001E70  6E08               	movwf	___xxtofl@val+2,c
  5807  001E72  6E09               	movwf	___xxtofl@val+3,c
  5808  001E74  0E01               	movlw	1
  5809  001E76  EC69  F014         	call	___xxtofl
  5810  001E7A  C006  F046         	movff	?___xxtofl,___flsub@b
  5811  001E7E  C007  F047         	movff	?___xxtofl+1,___flsub@b+1
  5812  001E82  C008  F048         	movff	?___xxtofl+2,___flsub@b+2
  5813  001E86  C009  F049         	movff	?___xxtofl+3,___flsub@b+3
  5814  001E8A  EC32  F01A         	call	___flsub	;wreg free
  5815  001E8E  C046  F04E         	movff	?___flsub,___fltol@f1
  5816  001E92  C047  F04F         	movff	?___flsub+1,___fltol@f1+1
  5817  001E96  C048  F050         	movff	?___flsub+2,___fltol@f1+2
  5818  001E9A  C049  F051         	movff	?___flsub+3,___fltol@f1+3
  5819  001E9E  ECA3  F016         	call	___fltol	;wreg free
  5820  001EA2  C04E  F09C         	movff	?___fltol,errorCorrectedMove@ASpeed
  5821  001EA6  C04F  F09D         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  5822                           
  5823                           ;main.c: 575:     int BSpeed = (int)((goalSpeed*turnRatio + error*correctionConstant));
  5824  001EAA  C092  F018         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  5825  001EAE  C093  F019         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  5826  001EB2  C094  F01A         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  5827  001EB6  C095  F01B         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  5828  001EBA  C09A  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  5829  001EBE  C09B  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  5830  001EC2  0E00               	movlw	0
  5831  001EC4  BE07               	btfsc	___xxtofl@val+1,7,c
  5832  001EC6  0EFF               	movlw	-1
  5833  001EC8  6E08               	movwf	___xxtofl@val+2,c
  5834  001ECA  6E09               	movwf	___xxtofl@val+3,c
  5835  001ECC  0E01               	movlw	1
  5836  001ECE  EC69  F014         	call	___xxtofl
  5837  001ED2  C006  F014         	movff	?___xxtofl,___flmul@b
  5838  001ED6  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5839  001EDA  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5840  001EDE  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5841  001EE2  ECD6  F008         	call	___flmul	;wreg free
  5842  001EE6  C014  F031         	movff	?___flmul,___fladd@a
  5843  001EEA  C015  F032         	movff	?___flmul+1,___fladd@a+1
  5844  001EEE  C016  F033         	movff	?___flmul+2,___fladd@a+2
  5845  001EF2  C017  F034         	movff	?___flmul+3,___fladd@a+3
  5846  001EF6  C08A  F018         	movff	errorCorrectedMove@turnRatio,___flmul@a
  5847  001EFA  C08B  F019         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  5848  001EFE  C08C  F01A         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  5849  001F02  C08D  F01B         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  5850  001F06  C088  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  5851  001F0A  C089  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  5852  001F0E  0E00               	movlw	0
  5853  001F10  BE07               	btfsc	___xxtofl@val+1,7,c
  5854  001F12  0EFF               	movlw	-1
  5855  001F14  6E08               	movwf	___xxtofl@val+2,c
  5856  001F16  6E09               	movwf	___xxtofl@val+3,c
  5857  001F18  0E01               	movlw	1
  5858  001F1A  EC69  F014         	call	___xxtofl
  5859  001F1E  C006  F014         	movff	?___xxtofl,___flmul@b
  5860  001F22  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5861  001F26  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5862  001F2A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5863  001F2E  ECD6  F008         	call	___flmul	;wreg free
  5864  001F32  C014  F02D         	movff	?___flmul,___fladd@b
  5865  001F36  C015  F02E         	movff	?___flmul+1,___fladd@b+1
  5866  001F3A  C016  F02F         	movff	?___flmul+2,___fladd@b+2
  5867  001F3E  C017  F030         	movff	?___flmul+3,___fladd@b+3
  5868  001F42  EC7F  F00A         	call	___fladd	;wreg free
  5869  001F46  C02D  F04E         	movff	?___fladd,___fltol@f1
  5870  001F4A  C02E  F04F         	movff	?___fladd+1,___fltol@f1+1
  5871  001F4E  C02F  F050         	movff	?___fladd+2,___fltol@f1+2
  5872  001F52  C030  F051         	movff	?___fladd+3,___fltol@f1+3
  5873  001F56  ECA3  F016         	call	___fltol	;wreg free
  5874  001F5A  C04E  F09E         	movff	?___fltol,errorCorrectedMove@BSpeed
  5875  001F5E  C04F  F09F         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  5876                           
  5877                           ;main.c: 577:     if (ASpeed > 100){
  5878  001F62  0100               	movlb	0	; () banked
  5879  001F64  BF9D               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5880  001F66  D00A               	goto	l8164
  5881  001F68  519D               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  5882  001F6A  E104               	bnz	u9500
  5883  001F6C  0E65               	movlw	101
  5884  001F6E  5D9C               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  5885  001F70  A0D8               	btfss	status,0,c
  5886  001F72  D004               	goto	l8164
  5887  001F74                     u9500:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;main.c: 578:         ASpeed = 100;
  5891  001F74  0E00               	movlw	0
  5892  001F76  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5893  001F78  0E64               	movlw	100
  5894  001F7A  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5895  001F7C                     l8164:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;main.c: 580:     if (ASpeed < 0){
  5899  001F7C  AF9D               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  5900  001F7E  D004               	goto	l8168
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;main.c: 581:         ASpeed = 0;
  5904  001F80  0E00               	movlw	0
  5905  001F82  6F9D               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  5906  001F84  0E00               	movlw	0
  5907  001F86  6F9C               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  5908  001F88                     l8168:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;main.c: 583:     if (BSpeed > 100){
  5912  001F88  BF9F               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5913  001F8A  D00A               	goto	l8172
  5914  001F8C  519F               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  5915  001F8E  E104               	bnz	u9520
  5916  001F90  0E65               	movlw	101
  5917  001F92  5D9E               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  5918  001F94  A0D8               	btfss	status,0,c
  5919  001F96  D004               	goto	l8172
  5920  001F98                     u9520:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;main.c: 584:         BSpeed = 100;
  5924  001F98  0E00               	movlw	0
  5925  001F9A  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5926  001F9C  0E64               	movlw	100
  5927  001F9E  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5928  001FA0                     l8172:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;main.c: 586:     if (BSpeed < 0){
  5932  001FA0  AF9F               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  5933  001FA2  D004               	goto	l8176
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;main.c: 587:         BSpeed = 0;
  5937  001FA4  0E00               	movlw	0
  5938  001FA6  6F9F               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  5939  001FA8  0E00               	movlw	0
  5940  001FAA  6F9E               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  5941  001FAC                     l8176:
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;main.c: 590:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  5945  001FAC  C09C  F06C         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  5946  001FB0  C09D  F06D         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  5947  001FB4  0E01               	movlw	1
  5948  001FB6  6E6E               	movwf	setMotorSpeeds@Aforward,c
  5949  001FB8  0E01               	movlw	1
  5950  001FBA  6E6F               	movwf	setMotorSpeeds@Bforward,c
  5951  001FBC  C09E  F070         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  5952  001FC0  C09F  F071         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  5953  001FC4  EC4D  F017         	call	_setMotorSpeeds	;wreg free
  5954  001FC8  0012               	return		;funcret
  5955  001FCA                     __end_of_errorCorrectedMove:
  5956                           	opt callstack 0
  5957                           
  5958 ;; *************** function _setMotorSpeeds *****************
  5959 ;; Defined at:
  5960 ;;		line 338 in file "main.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  motorASpeed     2  107[COMRAM] int 
  5963 ;;  Aforward        1  109[COMRAM] _Bool 
  5964 ;;  Bforward        1  110[COMRAM] _Bool 
  5965 ;;  motorBSpeed     2  111[COMRAM] int 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5977 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;Total ram usage:       14 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    4
  5984 ;; This function calls:
  5985 ;;		___xxtofl
  5986 ;;		_set_pwm_duty_cycle
  5987 ;; This function is called by:
  5988 ;;		_tirePositioning
  5989 ;;		_errorCorrectedMove
  5990 ;;		_doOperation
  5991 ;;		_PIDCorrectedMove
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text22
  5996  002E9A                     __ptext22:
  5997                           	opt callstack 0
  5998  002E9A                     _setMotorSpeeds:
  5999                           	opt callstack 24
  6000                           
  6001                           ;main.c: 339:     if (Aforward){
  6002                           
  6003                           ;incstack = 0
  6004  002E9A  506E               	movf	setMotorSpeeds@Aforward,w,c
  6005  002E9C  B4D8               	btfsc	status,2,c
  6006  002E9E  D003               	goto	l252
  6007                           
  6008                           ;main.c: 340:         LATAbits.LATA0 = 1;
  6009  002EA0  8089               	bsf	3977,0,c	;volatile
  6010                           
  6011                           ;main.c: 341:         LATAbits.LATA1 = 0;
  6012  002EA2  9289               	bcf	3977,1,c	;volatile
  6013                           
  6014                           ;main.c: 342:     } else {
  6015  002EA4  D002               	goto	l7836
  6016  002EA6                     l252:
  6017                           
  6018                           ;main.c: 343:         LATAbits.LATA0 = 0;
  6019  002EA6  9089               	bcf	3977,0,c	;volatile
  6020                           
  6021                           ;main.c: 344:         LATAbits.LATA1 = 1;
  6022  002EA8  8289               	bsf	3977,1,c	;volatile
  6023  002EAA                     l7836:
  6024                           
  6025                           ;main.c: 346:     if (Bforward){
  6026  002EAA  506F               	movf	setMotorSpeeds@Bforward,w,c
  6027  002EAC  B4D8               	btfsc	status,2,c
  6028  002EAE  D003               	goto	l254
  6029                           
  6030                           ;main.c: 347:         LATAbits.LATA2 = 1;
  6031  002EB0  8489               	bsf	3977,2,c	;volatile
  6032                           
  6033                           ;main.c: 348:         LATAbits.LATA3 = 0;
  6034  002EB2  9689               	bcf	3977,3,c	;volatile
  6035                           
  6036                           ;main.c: 349:     } else {
  6037  002EB4  D002               	goto	l7840
  6038  002EB6                     l254:
  6039                           
  6040                           ;main.c: 350:         LATAbits.LATA2 = 0;
  6041  002EB6  9489               	bcf	3977,2,c	;volatile
  6042                           
  6043                           ;main.c: 351:         LATAbits.LATA3 = 1;
  6044  002EB8  8689               	bsf	3977,3,c	;volatile
  6045  002EBA                     l7840:
  6046                           
  6047                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6048  002EBA  C06C  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  6049  002EBE  C06D  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  6050  002EC2  0E00               	movlw	0
  6051  002EC4  BE07               	btfsc	___xxtofl@val+1,7,c
  6052  002EC6  0EFF               	movlw	-1
  6053  002EC8  6E08               	movwf	___xxtofl@val+2,c
  6054  002ECA  6E09               	movwf	___xxtofl@val+3,c
  6055  002ECC  0E01               	movlw	1
  6056  002ECE  EC69  F014         	call	___xxtofl
  6057  002ED2  C006  F080         	movff	?___xxtofl,_setMotorSpeeds$2225
  6058  002ED6  C007  F081         	movff	?___xxtofl+1,_setMotorSpeeds$2225+1
  6059  002EDA  C008  F082         	movff	?___xxtofl+2,_setMotorSpeeds$2225+2
  6060  002EDE  C009  F083         	movff	?___xxtofl+3,_setMotorSpeeds$2225+3
  6061                           
  6062                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6063  002EE2  C070  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  6064  002EE6  C071  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  6065  002EEA  0E00               	movlw	0
  6066  002EEC  BE07               	btfsc	___xxtofl@val+1,7,c
  6067  002EEE  0EFF               	movlw	-1
  6068  002EF0  6E08               	movwf	___xxtofl@val+2,c
  6069  002EF2  6E09               	movwf	___xxtofl@val+3,c
  6070  002EF4  0E01               	movlw	1
  6071  002EF6  EC69  F014         	call	___xxtofl
  6072  002EFA  C006  F084         	movff	?___xxtofl,_setMotorSpeeds$2226
  6073  002EFE  C007  F085         	movff	?___xxtofl+1,_setMotorSpeeds$2226+1
  6074  002F02  C008  F086         	movff	?___xxtofl+2,_setMotorSpeeds$2226+2
  6075  002F06  C009  F087         	movff	?___xxtofl+3,_setMotorSpeeds$2226+3
  6076                           
  6077                           ;main.c: 354:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  6078  002F0A  C080  F058         	movff	_setMotorSpeeds$2225,set_pwm_duty_cycle@dutyA
  6079  002F0E  C081  F059         	movff	_setMotorSpeeds$2225+1,set_pwm_duty_cycle@dutyA+1
  6080  002F12  C082  F05A         	movff	_setMotorSpeeds$2225+2,set_pwm_duty_cycle@dutyA+2
  6081  002F16  C083  F05B         	movff	_setMotorSpeeds$2225+3,set_pwm_duty_cycle@dutyA+3
  6082  002F1A  C084  F05C         	movff	_setMotorSpeeds$2226,set_pwm_duty_cycle@dutyB
  6083  002F1E  C085  F05D         	movff	_setMotorSpeeds$2226+1,set_pwm_duty_cycle@dutyB+1
  6084  002F22  C086  F05E         	movff	_setMotorSpeeds$2226+2,set_pwm_duty_cycle@dutyB+2
  6085  002F26  C087  F05F         	movff	_setMotorSpeeds$2226+3,set_pwm_duty_cycle@dutyB+3
  6086  002F2A  EC22  F012         	call	_set_pwm_duty_cycle	;wreg free
  6087  002F2E  0012               	return		;funcret
  6088  002F30                     __end_of_setMotorSpeeds:
  6089                           	opt callstack 0
  6090                           
  6091 ;; *************** function _set_pwm_duty_cycle *****************
  6092 ;; Defined at:
  6093 ;;		line 308 in file "main.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  dutyA           4   87[COMRAM] float 
  6096 ;;  dutyB           4   91[COMRAM] float 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  duty_valB       2  101[COMRAM] unsigned short 
  6099 ;;  duty_valA       2   99[COMRAM] unsigned short 
  6100 ;;  max_duty_val    2   97[COMRAM] unsigned short 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:       20 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    3
  6117 ;; This function calls:
  6118 ;;		___fldiv
  6119 ;;		___flge
  6120 ;;		___flmul
  6121 ;;		___fltol
  6122 ;;		___xxtofl
  6123 ;; This function is called by:
  6124 ;;		_setMotorSpeeds
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text23
  6129  002444                     __ptext23:
  6130                           	opt callstack 0
  6131  002444                     _set_pwm_duty_cycle:
  6132                           	opt callstack 24
  6133                           
  6134                           ;main.c: 309:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  6135                           
  6136                           ;incstack = 0
  6137  002444  BE5B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  6138  002446  0012               	return	
  6139  002448  0E00               	movlw	0
  6140  00244A  6E06               	movwf	___flge@ff1,c
  6141  00244C  0E00               	movlw	0
  6142  00244E  6E07               	movwf	___flge@ff1+1,c
  6143  002450  0EC8               	movlw	200
  6144  002452  6E08               	movwf	___flge@ff1+2,c
  6145  002454  0E42               	movlw	66
  6146  002456  6E09               	movwf	___flge@ff1+3,c
  6147  002458  C058  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  6148  00245C  C059  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  6149  002460  C05A  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  6150  002464  C05B  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  6151  002468  EC3B  F016         	call	___flge	;wreg free
  6152  00246C  A0D8               	btfss	status,0,c
  6153  00246E  0012               	return	
  6154  002470  BE5F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  6155  002472  0012               	return	
  6156  002474  0E00               	movlw	0
  6157  002476  6E06               	movwf	___flge@ff1,c
  6158  002478  0E00               	movlw	0
  6159  00247A  6E07               	movwf	___flge@ff1+1,c
  6160  00247C  0EC8               	movlw	200
  6161  00247E  6E08               	movwf	___flge@ff1+2,c
  6162  002480  0E42               	movlw	66
  6163  002482  6E09               	movwf	___flge@ff1+3,c
  6164  002484  C05C  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  6165  002488  C05D  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  6166  00248C  C05E  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  6167  002490  C05F  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  6168  002494  EC3B  F016         	call	___flge	;wreg free
  6169  002498  A0D8               	btfss	status,0,c
  6170  00249A  0012               	return	
  6171                           
  6172                           ;main.c: 314:         unsigned short max_duty_val = PR2 + 1;
  6173  00249C  0E01               	movlw	1
  6174  00249E  24CB               	addwf	4043,w,c	;volatile
  6175  0024A0  6E62               	movwf	set_pwm_duty_cycle@max_duty_val,c
  6176  0024A2  6A63               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  6177  0024A4  0E00               	movlw	0
  6178  0024A6  2263               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  6179                           
  6180                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6181  0024A8  0E00               	movlw	0
  6182  0024AA  6E31               	movwf	___fldiv@a,c
  6183  0024AC  0E00               	movlw	0
  6184  0024AE  6E32               	movwf	___fldiv@a+1,c
  6185  0024B0  0EC8               	movlw	200
  6186  0024B2  6E33               	movwf	___fldiv@a+2,c
  6187  0024B4  0E42               	movlw	66
  6188  0024B6  6E34               	movwf	___fldiv@a+3,c
  6189  0024B8  0E00               	movlw	0
  6190  0024BA  6E18               	movwf	___flmul@a,c
  6191  0024BC  0E00               	movlw	0
  6192  0024BE  6E19               	movwf	___flmul@a+1,c
  6193  0024C0  0E80               	movlw	128
  6194  0024C2  6E1A               	movwf	___flmul@a+2,c
  6195  0024C4  0E40               	movlw	64
  6196  0024C6  6E1B               	movwf	___flmul@a+3,c
  6197  0024C8  C058  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  6198  0024CC  C059  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  6199  0024D0  C05A  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  6200  0024D4  C05B  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  6201  0024D8  ECD6  F008         	call	___flmul	;wreg free
  6202  0024DC  C014  F02D         	movff	?___flmul,___fldiv@b
  6203  0024E0  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6204  0024E4  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6205  0024E8  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6206  0024EC  EC6F  F00D         	call	___fldiv	;wreg free
  6207  0024F0  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2224
  6208  0024F4  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2224+1
  6209  0024F8  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2224+2
  6210  0024FC  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2224+3
  6211                           
  6212                           ;main.c: 320:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  6213  002500  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6214  002504  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6215  002508  6A08               	clrf	___xxtofl@val+2,c
  6216  00250A  6A09               	clrf	___xxtofl@val+3,c
  6217  00250C  0E00               	movlw	0
  6218  00250E  EC69  F014         	call	___xxtofl
  6219  002512  C006  F018         	movff	?___xxtofl,___flmul@a
  6220  002516  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6221  00251A  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6222  00251E  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6223  002522  C068  F014         	movff	_set_pwm_duty_cycle$2224,___flmul@b
  6224  002526  C069  F015         	movff	_set_pwm_duty_cycle$2224+1,___flmul@b+1
  6225  00252A  C06A  F016         	movff	_set_pwm_duty_cycle$2224+2,___flmul@b+2
  6226  00252E  C06B  F017         	movff	_set_pwm_duty_cycle$2224+3,___flmul@b+3
  6227  002532  ECD6  F008         	call	___flmul	;wreg free
  6228  002536  C014  F04E         	movff	?___flmul,___fltol@f1
  6229  00253A  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6230  00253E  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6231  002542  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6232  002546  ECA3  F016         	call	___fltol	;wreg free
  6233  00254A  C04E  F064         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  6234  00254E  C04F  F065         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  6235                           
  6236                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6237  002552  0E00               	movlw	0
  6238  002554  6E31               	movwf	___fldiv@a,c
  6239  002556  0E00               	movlw	0
  6240  002558  6E32               	movwf	___fldiv@a+1,c
  6241  00255A  0EC8               	movlw	200
  6242  00255C  6E33               	movwf	___fldiv@a+2,c
  6243  00255E  0E42               	movlw	66
  6244  002560  6E34               	movwf	___fldiv@a+3,c
  6245  002562  0E00               	movlw	0
  6246  002564  6E18               	movwf	___flmul@a,c
  6247  002566  0E00               	movlw	0
  6248  002568  6E19               	movwf	___flmul@a+1,c
  6249  00256A  0E80               	movlw	128
  6250  00256C  6E1A               	movwf	___flmul@a+2,c
  6251  00256E  0E40               	movlw	64
  6252  002570  6E1B               	movwf	___flmul@a+3,c
  6253  002572  C05C  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  6254  002576  C05D  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  6255  00257A  C05E  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  6256  00257E  C05F  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  6257  002582  ECD6  F008         	call	___flmul	;wreg free
  6258  002586  C014  F02D         	movff	?___flmul,___fldiv@b
  6259  00258A  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  6260  00258E  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  6261  002592  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  6262  002596  EC6F  F00D         	call	___fldiv	;wreg free
  6263  00259A  C02D  F068         	movff	?___fldiv,_set_pwm_duty_cycle$2224
  6264  00259E  C02E  F069         	movff	?___fldiv+1,_set_pwm_duty_cycle$2224+1
  6265  0025A2  C02F  F06A         	movff	?___fldiv+2,_set_pwm_duty_cycle$2224+2
  6266  0025A6  C030  F06B         	movff	?___fldiv+3,_set_pwm_duty_cycle$2224+3
  6267                           
  6268                           ;main.c: 321:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  6269  0025AA  C062  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  6270  0025AE  C063  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  6271  0025B2  6A08               	clrf	___xxtofl@val+2,c
  6272  0025B4  6A09               	clrf	___xxtofl@val+3,c
  6273  0025B6  0E00               	movlw	0
  6274  0025B8  EC69  F014         	call	___xxtofl
  6275  0025BC  C006  F018         	movff	?___xxtofl,___flmul@a
  6276  0025C0  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  6277  0025C4  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  6278  0025C8  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  6279  0025CC  C068  F014         	movff	_set_pwm_duty_cycle$2224,___flmul@b
  6280  0025D0  C069  F015         	movff	_set_pwm_duty_cycle$2224+1,___flmul@b+1
  6281  0025D4  C06A  F016         	movff	_set_pwm_duty_cycle$2224+2,___flmul@b+2
  6282  0025D8  C06B  F017         	movff	_set_pwm_duty_cycle$2224+3,___flmul@b+3
  6283  0025DC  ECD6  F008         	call	___flmul	;wreg free
  6284  0025E0  C014  F04E         	movff	?___flmul,___fltol@f1
  6285  0025E4  C015  F04F         	movff	?___flmul+1,___fltol@f1+1
  6286  0025E8  C016  F050         	movff	?___flmul+2,___fltol@f1+2
  6287  0025EC  C017  F051         	movff	?___flmul+3,___fltol@f1+3
  6288  0025F0  ECA3  F016         	call	___fltol	;wreg free
  6289  0025F4  C04E  F066         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  6290  0025F8  C04F  F067         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  6291                           
  6292                           ;main.c: 325:         CCP1X = duty_valA & 2;
  6293  0025FC  9ABD               	bcf	4029,5,c	;volatile
  6294                           
  6295                           ;main.c: 326:         CCP1Y = duty_valA & 1;
  6296  0025FE  A064               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  6297  002600  D002               	goto	u8530
  6298  002602  88BD               	bsf	4029,4,c	;volatile
  6299  002604  D001               	goto	u8545
  6300  002606                     u8530:
  6301  002606  98BD               	bcf	4029,4,c	;volatile
  6302  002608                     u8545:
  6303                           
  6304                           ;main.c: 327:         CCPR1L = duty_valA >> 2;
  6305  002608  C064  F060         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  6306  00260C  C065  F061         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  6307  002610  90D8               	bcf	status,0,c
  6308  002612  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6309  002614  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6310  002616  90D8               	bcf	status,0,c
  6311  002618  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6312  00261A  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6313  00261C  5060               	movf	??_set_pwm_duty_cycle,w,c
  6314  00261E  6EBE               	movwf	4030,c	;volatile
  6315                           
  6316                           ;main.c: 331:         CCP2X = duty_valB & 2;
  6317  002620  9ABA               	bcf	4026,5,c	;volatile
  6318                           
  6319                           ;main.c: 332:         CCP2Y = duty_valB & 1;
  6320  002622  A066               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  6321  002624  D002               	goto	u8550
  6322  002626  88BA               	bsf	4026,4,c	;volatile
  6323  002628  D001               	goto	u8565
  6324  00262A                     u8550:
  6325  00262A  98BA               	bcf	4026,4,c	;volatile
  6326  00262C                     u8565:
  6327                           
  6328                           ;main.c: 333:         CCPR2L = duty_valB >> 2;
  6329  00262C  C066  F060         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  6330  002630  C067  F061         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  6331  002634  90D8               	bcf	status,0,c
  6332  002636  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6333  002638  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6334  00263A  90D8               	bcf	status,0,c
  6335  00263C  3261               	rrcf	??_set_pwm_duty_cycle+1,f,c
  6336  00263E  3260               	rrcf	??_set_pwm_duty_cycle,f,c
  6337  002640  5060               	movf	??_set_pwm_duty_cycle,w,c
  6338  002642  6EBB               	movwf	4027,c	;volatile
  6339  002644  0012               	return		;funcret
  6340  002646                     __end_of_set_pwm_duty_cycle:
  6341                           	opt callstack 0
  6342                           
  6343 ;; *************** function ___xxtofl *****************
  6344 ;; Defined at:
  6345 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  sign            1    wreg     unsigned char 
  6348 ;;  val             4    5[COMRAM] long 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  sign            1   13[COMRAM] unsigned char 
  6351 ;;  arg             4   15[COMRAM] unsigned long 
  6352 ;;  exp             1   14[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  4    5[COMRAM] unsigned char 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;Total ram usage:       14 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_set_pwm_duty_cycle
  6373 ;;		_setMotorSpeeds
  6374 ;;		_errorCorrectedMove
  6375 ;;		_PIDCorrectedMove
  6376 ;;		_opErrorCorrectionDegrees
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text24
  6381  0028D2                     __ptext24:
  6382                           	opt callstack 0
  6383  0028D2                     ___xxtofl:
  6384                           	opt callstack 24
  6385                           
  6386                           ;incstack = 0
  6387                           ;___xxtofl@sign stored from wreg
  6388  0028D2  6E0E               	movwf	___xxtofl@sign,c
  6389  0028D4  500E               	movf	___xxtofl@sign,w,c
  6390  0028D6  A4D8               	btfss	status,2,c
  6391  0028D8  AE09               	btfss	___xxtofl@val+3,7,c
  6392  0028DA  D01A               	goto	l1364
  6393  0028DC  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6394  0028E0  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6395  0028E4  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6396  0028E8  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6397  0028EC  1E0A               	comf	??___xxtofl,f,c
  6398  0028EE  1E0B               	comf	??___xxtofl+1,f,c
  6399  0028F0  1E0C               	comf	??___xxtofl+2,f,c
  6400  0028F2  1E0D               	comf	??___xxtofl+3,f,c
  6401  0028F4  2A0A               	incf	??___xxtofl,f,c
  6402  0028F6  0E00               	movlw	0
  6403  0028F8  220B               	addwfc	??___xxtofl+1,f,c
  6404  0028FA  220C               	addwfc	??___xxtofl+2,f,c
  6405  0028FC  220D               	addwfc	??___xxtofl+3,f,c
  6406  0028FE  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6407  002902  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6408  002906  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6409  00290A  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6410  00290E  D008               	goto	l7422
  6411  002910                     l1364:
  6412  002910  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6413  002914  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6414  002918  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6415  00291C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6416  002920                     l7422:
  6417  002920  5006               	movf	___xxtofl@val,w,c
  6418  002922  1007               	iorwf	___xxtofl@val+1,w,c
  6419  002924  1008               	iorwf	___xxtofl@val+2,w,c
  6420  002926  1009               	iorwf	___xxtofl@val+3,w,c
  6421  002928  A4D8               	btfss	status,2,c
  6422  00292A  D009               	goto	l7428
  6423  00292C  0E00               	movlw	0
  6424  00292E  6E06               	movwf	?___xxtofl,c
  6425  002930  0E00               	movlw	0
  6426  002932  6E07               	movwf	?___xxtofl+1,c
  6427  002934  0E00               	movlw	0
  6428  002936  6E08               	movwf	?___xxtofl+2,c
  6429  002938  0E00               	movlw	0
  6430  00293A  6E09               	movwf	?___xxtofl+3,c
  6431  00293C  0012               	return	
  6432  00293E                     l7428:
  6433  00293E  0E96               	movlw	150
  6434  002940  6E0F               	movwf	___xxtofl@exp,c
  6435  002942  D006               	goto	l7432
  6436  002944                     l7430:
  6437  002944  2A0F               	incf	___xxtofl@exp,f,c
  6438  002946  90D8               	bcf	status,0,c
  6439  002948  3213               	rrcf	___xxtofl@arg+3,f,c
  6440  00294A  3212               	rrcf	___xxtofl@arg+2,f,c
  6441  00294C  3211               	rrcf	___xxtofl@arg+1,f,c
  6442  00294E  3210               	rrcf	___xxtofl@arg,f,c
  6443  002950                     l7432:
  6444  002950  0E00               	movlw	0
  6445  002952  1410               	andwf	___xxtofl@arg,w,c
  6446  002954  6E0A               	movwf	??___xxtofl& (0+255),c
  6447  002956  0E00               	movlw	0
  6448  002958  1411               	andwf	___xxtofl@arg+1,w,c
  6449  00295A  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6450  00295C  0E00               	movlw	0
  6451  00295E  1412               	andwf	___xxtofl@arg+2,w,c
  6452  002960  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6453  002962  0EFE               	movlw	254
  6454  002964  1413               	andwf	___xxtofl@arg+3,w,c
  6455  002966  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6456  002968  500A               	movf	??___xxtofl,w,c
  6457  00296A  100B               	iorwf	??___xxtofl+1,w,c
  6458  00296C  100C               	iorwf	??___xxtofl+2,w,c
  6459  00296E  100D               	iorwf	??___xxtofl+3,w,c
  6460  002970  B4D8               	btfsc	status,2,c
  6461  002972  D00D               	goto	l1371
  6462  002974  D7E7               	goto	l7430
  6463  002976                     l7434:
  6464  002976  2A0F               	incf	___xxtofl@exp,f,c
  6465  002978  0E01               	movlw	1
  6466  00297A  2610               	addwf	___xxtofl@arg,f,c
  6467  00297C  0E00               	movlw	0
  6468  00297E  2211               	addwfc	___xxtofl@arg+1,f,c
  6469  002980  2212               	addwfc	___xxtofl@arg+2,f,c
  6470  002982  2213               	addwfc	___xxtofl@arg+3,f,c
  6471  002984  90D8               	bcf	status,0,c
  6472  002986  3213               	rrcf	___xxtofl@arg+3,f,c
  6473  002988  3212               	rrcf	___xxtofl@arg+2,f,c
  6474  00298A  3211               	rrcf	___xxtofl@arg+1,f,c
  6475  00298C  3210               	rrcf	___xxtofl@arg,f,c
  6476  00298E                     l1371:
  6477  00298E  0E00               	movlw	0
  6478  002990  1410               	andwf	___xxtofl@arg,w,c
  6479  002992  6E0A               	movwf	??___xxtofl& (0+255),c
  6480  002994  0E00               	movlw	0
  6481  002996  1411               	andwf	___xxtofl@arg+1,w,c
  6482  002998  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6483  00299A  0E00               	movlw	0
  6484  00299C  1412               	andwf	___xxtofl@arg+2,w,c
  6485  00299E  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6486  0029A0  0EFF               	movlw	255
  6487  0029A2  1413               	andwf	___xxtofl@arg+3,w,c
  6488  0029A4  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6489  0029A6  500A               	movf	??___xxtofl,w,c
  6490  0029A8  100B               	iorwf	??___xxtofl+1,w,c
  6491  0029AA  100C               	iorwf	??___xxtofl+2,w,c
  6492  0029AC  100D               	iorwf	??___xxtofl+3,w,c
  6493  0029AE  B4D8               	btfsc	status,2,c
  6494  0029B0  D007               	goto	l7442
  6495  0029B2  D7E1               	goto	l7434
  6496  0029B4                     l7440:
  6497  0029B4  060F               	decf	___xxtofl@exp,f,c
  6498  0029B6  90D8               	bcf	status,0,c
  6499  0029B8  3610               	rlcf	___xxtofl@arg,f,c
  6500  0029BA  3611               	rlcf	___xxtofl@arg+1,f,c
  6501  0029BC  3612               	rlcf	___xxtofl@arg+2,f,c
  6502  0029BE  3613               	rlcf	___xxtofl@arg+3,f,c
  6503  0029C0                     l7442:
  6504  0029C0  BE12               	btfsc	___xxtofl@arg+2,7,c
  6505  0029C2  D003               	goto	u8450
  6506  0029C4  0E02               	movlw	2
  6507  0029C6  600F               	cpfslt	___xxtofl@exp,c
  6508  0029C8  D7F5               	goto	l7440
  6509  0029CA                     u8450:
  6510  0029CA  A00F               	btfss	___xxtofl@exp,0,c
  6511  0029CC  9E12               	bcf	___xxtofl@arg+2,7,c
  6512  0029CE  90D8               	bcf	status,0,c
  6513  0029D0  320F               	rrcf	___xxtofl@exp,f,c
  6514  0029D2  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6515  0029D6  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6516  0029D8  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6517  0029DA  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6518  0029DC  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6519  0029E0  6A0C               	clrf	??___xxtofl+2,c
  6520  0029E2  6A0B               	clrf	??___xxtofl+1,c
  6521  0029E4  6A0A               	clrf	??___xxtofl,c
  6522  0029E6  500A               	movf	??___xxtofl,w,c
  6523  0029E8  1210               	iorwf	___xxtofl@arg,f,c
  6524  0029EA  500B               	movf	??___xxtofl+1,w,c
  6525  0029EC  1211               	iorwf	___xxtofl@arg+1,f,c
  6526  0029EE  500C               	movf	??___xxtofl+2,w,c
  6527  0029F0  1212               	iorwf	___xxtofl@arg+2,f,c
  6528  0029F2  500D               	movf	??___xxtofl+3,w,c
  6529  0029F4  1213               	iorwf	___xxtofl@arg+3,f,c
  6530  0029F6  500E               	movf	___xxtofl@sign,w,c
  6531  0029F8  A4D8               	btfss	status,2,c
  6532  0029FA  AE09               	btfss	___xxtofl@val+3,7,c
  6533  0029FC  D001               	goto	l7458
  6534  0029FE  8E13               	bsf	___xxtofl@arg+3,7,c
  6535  002A00                     l7458:
  6536  002A00  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6537  002A04  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6538  002A08  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6539  002A0C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6540  002A10  0012               	return		;funcret
  6541  002A12                     __end_of___xxtofl:
  6542                           	opt callstack 0
  6543                           
  6544 ;; *************** function ___fltol *****************
  6545 ;; Defined at:
  6546 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  f1              4   77[COMRAM] unsigned char 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  exp1            1   86[COMRAM] unsigned char 
  6551 ;;  sign1           1   85[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  4   77[COMRAM] long 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;Total ram usage:       10 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    2
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_set_pwm_duty_cycle
  6572 ;;		_errorCorrectedMove
  6573 ;;		_PIDCorrectedMove
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text25
  6578  002D46                     __ptext25:
  6579                           	opt callstack 0
  6580  002D46                     ___fltol:
  6581                           	opt callstack 24
  6582                           
  6583                           ;incstack = 0
  6584  002D46  3450               	rlcf	___fltol@f1+2,w,c
  6585  002D48  3451               	rlcf	___fltol@f1+3,w,c
  6586  002D4A  6E57               	movwf	___fltol@exp1,c
  6587  002D4C  5057               	movf	___fltol@exp1,w,c
  6588  002D4E  A4D8               	btfss	status,2,c
  6589  002D50  D009               	goto	l7378
  6590  002D52                     u8320:
  6591  002D52  0E00               	movlw	0
  6592  002D54  6E4E               	movwf	?___fltol,c
  6593  002D56  0E00               	movlw	0
  6594  002D58  6E4F               	movwf	?___fltol+1,c
  6595  002D5A  0E00               	movlw	0
  6596  002D5C  6E50               	movwf	?___fltol+2,c
  6597  002D5E  0E00               	movlw	0
  6598  002D60  6E51               	movwf	?___fltol+3,c
  6599  002D62  0012               	return	
  6600  002D64                     l7378:
  6601  002D64  C04E  F052         	movff	___fltol@f1,??___fltol
  6602  002D68  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  6603  002D6C  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  6604  002D70  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  6605  002D74  0E20               	movlw	32
  6606  002D76  D005               	goto	u8330
  6607  002D78                     u8335:
  6608  002D78  90D8               	bcf	status,0,c
  6609  002D7A  3255               	rrcf	??___fltol+3,f,c
  6610  002D7C  3254               	rrcf	??___fltol+2,f,c
  6611  002D7E  3253               	rrcf	??___fltol+1,f,c
  6612  002D80  3252               	rrcf	??___fltol,f,c
  6613  002D82                     u8330:
  6614  002D82  2EE8               	decfsz	wreg,f,c
  6615  002D84  D7F9               	goto	u8335
  6616  002D86  5052               	movf	??___fltol,w,c
  6617  002D88  6E56               	movwf	___fltol@sign1,c
  6618  002D8A  8E50               	bsf	___fltol@f1+2,7,c
  6619  002D8C  0EFF               	movlw	255
  6620  002D8E  164E               	andwf	___fltol@f1,f,c
  6621  002D90  0EFF               	movlw	255
  6622  002D92  164F               	andwf	___fltol@f1+1,f,c
  6623  002D94  0EFF               	movlw	255
  6624  002D96  1650               	andwf	___fltol@f1+2,f,c
  6625  002D98  0E00               	movlw	0
  6626  002D9A  1651               	andwf	___fltol@f1+3,f,c
  6627  002D9C  0E96               	movlw	150
  6628  002D9E  5E57               	subwf	___fltol@exp1,f,c
  6629  002DA0  AE57               	btfss	___fltol@exp1,7,c
  6630  002DA2  D00D               	goto	l7398
  6631  002DA4  5057               	movf	___fltol@exp1,w,c
  6632  002DA6  0A80               	xorlw	128
  6633  002DA8  0F97               	addlw	151
  6634  002DAA  A0D8               	btfss	status,0,c
  6635  002DAC  D7D2               	goto	u8320
  6636  002DAE                     l7394:
  6637  002DAE  90D8               	bcf	status,0,c
  6638  002DB0  3251               	rrcf	___fltol@f1+3,f,c
  6639  002DB2  3250               	rrcf	___fltol@f1+2,f,c
  6640  002DB4  324F               	rrcf	___fltol@f1+1,f,c
  6641  002DB6  324E               	rrcf	___fltol@f1,f,c
  6642  002DB8  3E57               	incfsz	___fltol@exp1,f,c
  6643  002DBA  D7F9               	goto	l7394
  6644  002DBC  D00D               	goto	u8370
  6645  002DBE                     l7398:
  6646  002DBE  0E1F               	movlw	31
  6647  002DC0  6457               	cpfsgt	___fltol@exp1,c
  6648  002DC2  D007               	goto	l7406
  6649  002DC4  D7C6               	goto	u8320
  6650  002DC6                     l7404:
  6651  002DC6  90D8               	bcf	status,0,c
  6652  002DC8  364E               	rlcf	___fltol@f1,f,c
  6653  002DCA  364F               	rlcf	___fltol@f1+1,f,c
  6654  002DCC  3650               	rlcf	___fltol@f1+2,f,c
  6655  002DCE  3651               	rlcf	___fltol@f1+3,f,c
  6656  002DD0  0657               	decf	___fltol@exp1,f,c
  6657  002DD2                     l7406:
  6658  002DD2  5057               	movf	___fltol@exp1,w,c
  6659  002DD4  A4D8               	btfss	status,2,c
  6660  002DD6  D7F7               	goto	l7404
  6661  002DD8                     u8370:
  6662  002DD8  5056               	movf	___fltol@sign1,w,c
  6663  002DDA  B4D8               	btfsc	status,2,c
  6664  002DDC  D008               	goto	l7412
  6665  002DDE  1E51               	comf	___fltol@f1+3,f,c
  6666  002DE0  1E50               	comf	___fltol@f1+2,f,c
  6667  002DE2  1E4F               	comf	___fltol@f1+1,f,c
  6668  002DE4  6C4E               	negf	___fltol@f1,c
  6669  002DE6  0E00               	movlw	0
  6670  002DE8  224F               	addwfc	___fltol@f1+1,f,c
  6671  002DEA  2250               	addwfc	___fltol@f1+2,f,c
  6672  002DEC  2251               	addwfc	___fltol@f1+3,f,c
  6673  002DEE                     l7412:
  6674  002DEE  C04E  F04E         	movff	___fltol@f1,?___fltol
  6675  002DF2  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  6676  002DF6  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  6677  002DFA  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  6678  002DFE  0012               	return		;funcret
  6679  002E00                     __end_of___fltol:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function ___flmul *****************
  6683 ;; Defined at:
  6684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  b               4   19[COMRAM] long 
  6687 ;;  a               4   23[COMRAM] long 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  prod            4   38[COMRAM] struct .
  6690 ;;  grs             4   33[COMRAM] unsigned long 
  6691 ;;  temp            2   42[COMRAM] struct .
  6692 ;;  bexp            1   37[COMRAM] unsigned char 
  6693 ;;  aexp            1   32[COMRAM] unsigned char 
  6694 ;;  sign            1   31[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  4   19[COMRAM] unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, prodl, prodh
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:       25 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    2
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_set_pwm_duty_cycle
  6715 ;;		_errorCorrectedMove
  6716 ;;		_PIDCorrectedMove
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text26
  6721  0011AC                     __ptext26:
  6722                           	opt callstack 0
  6723  0011AC                     ___flmul:
  6724                           	opt callstack 24
  6725                           
  6726                           ;incstack = 0
  6727  0011AC  5017               	movf	___flmul@b+3,w,c
  6728  0011AE  0B80               	andlw	128
  6729  0011B0  6E20               	movwf	___flmul@sign,c
  6730  0011B2  5017               	movf	___flmul@b+3,w,c
  6731  0011B4  2417               	addwf	___flmul@b+3,w,c
  6732  0011B6  6E26               	movwf	___flmul@bexp,c
  6733  0011B8  BE16               	btfsc	___flmul@b+2,7,c
  6734  0011BA  8026               	bsf	___flmul@bexp,0,c
  6735  0011BC  5026               	movf	___flmul@bexp,w,c
  6736  0011BE  B4D8               	btfsc	status,2,c
  6737  0011C0  D00D               	goto	l7234
  6738  0011C2  2826               	incf	___flmul@bexp,w,c
  6739  0011C4  A4D8               	btfss	status,2,c
  6740  0011C6  D008               	goto	l7232
  6741  0011C8  0E00               	movlw	0
  6742  0011CA  6E14               	movwf	___flmul@b,c
  6743  0011CC  0E00               	movlw	0
  6744  0011CE  6E15               	movwf	___flmul@b+1,c
  6745  0011D0  0E00               	movlw	0
  6746  0011D2  6E16               	movwf	___flmul@b+2,c
  6747  0011D4  0E00               	movlw	0
  6748  0011D6  6E17               	movwf	___flmul@b+3,c
  6749  0011D8                     l7232:
  6750  0011D8  8E16               	bsf	___flmul@b+2,7,c
  6751  0011DA  D008               	goto	l7236
  6752  0011DC                     l7234:
  6753  0011DC  0E00               	movlw	0
  6754  0011DE  6E14               	movwf	___flmul@b,c
  6755  0011E0  0E00               	movlw	0
  6756  0011E2  6E15               	movwf	___flmul@b+1,c
  6757  0011E4  0E00               	movlw	0
  6758  0011E6  6E16               	movwf	___flmul@b+2,c
  6759  0011E8  0E00               	movlw	0
  6760  0011EA  6E17               	movwf	___flmul@b+3,c
  6761  0011EC                     l7236:
  6762  0011EC  501B               	movf	___flmul@a+3,w,c
  6763  0011EE  0B80               	andlw	128
  6764  0011F0  1A20               	xorwf	___flmul@sign,f,c
  6765  0011F2  501B               	movf	___flmul@a+3,w,c
  6766  0011F4  241B               	addwf	___flmul@a+3,w,c
  6767  0011F6  6E21               	movwf	___flmul@aexp,c
  6768  0011F8  BE1A               	btfsc	___flmul@a+2,7,c
  6769  0011FA  8021               	bsf	___flmul@aexp,0,c
  6770  0011FC  5021               	movf	___flmul@aexp,w,c
  6771  0011FE  B4D8               	btfsc	status,2,c
  6772  001200  D00D               	goto	l7252
  6773  001202  2821               	incf	___flmul@aexp,w,c
  6774  001204  A4D8               	btfss	status,2,c
  6775  001206  D008               	goto	l7250
  6776  001208  0E00               	movlw	0
  6777  00120A  6E18               	movwf	___flmul@a,c
  6778  00120C  0E00               	movlw	0
  6779  00120E  6E19               	movwf	___flmul@a+1,c
  6780  001210  0E00               	movlw	0
  6781  001212  6E1A               	movwf	___flmul@a+2,c
  6782  001214  0E00               	movlw	0
  6783  001216  6E1B               	movwf	___flmul@a+3,c
  6784  001218                     l7250:
  6785  001218  8E1A               	bsf	___flmul@a+2,7,c
  6786  00121A  D008               	goto	l1323
  6787  00121C                     l7252:
  6788  00121C  0E00               	movlw	0
  6789  00121E  6E18               	movwf	___flmul@a,c
  6790  001220  0E00               	movlw	0
  6791  001222  6E19               	movwf	___flmul@a+1,c
  6792  001224  0E00               	movlw	0
  6793  001226  6E1A               	movwf	___flmul@a+2,c
  6794  001228  0E00               	movlw	0
  6795  00122A  6E1B               	movwf	___flmul@a+3,c
  6796  00122C                     l1323:
  6797  00122C  5021               	movf	___flmul@aexp,w,c
  6798  00122E  B4D8               	btfsc	status,2,c
  6799  001230  D003               	goto	u8150
  6800  001232  5026               	movf	___flmul@bexp,w,c
  6801  001234  A4D8               	btfss	status,2,c
  6802  001236  D009               	goto	l7260
  6803  001238                     u8150:
  6804  001238  0E00               	movlw	0
  6805  00123A  6E14               	movwf	?___flmul,c
  6806  00123C  0E00               	movlw	0
  6807  00123E  6E15               	movwf	?___flmul+1,c
  6808  001240  0E00               	movlw	0
  6809  001242  6E16               	movwf	?___flmul+2,c
  6810  001244  0E00               	movlw	0
  6811  001246  6E17               	movwf	?___flmul+3,c
  6812  001248  0012               	return	
  6813  00124A                     l7260:
  6814  00124A  501A               	movf	___flmul@a+2,w,c
  6815  00124C  0214               	mulwf	___flmul@b,c
  6816  00124E  CFF3 F02B          	movff	prodl,___flmul@temp
  6817  001252  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6818  001256  502B               	movf	___flmul@temp,w,c
  6819  001258  6E22               	movwf	___flmul@grs,c
  6820  00125A  6A23               	clrf	___flmul@grs+1,c
  6821  00125C  6A24               	clrf	___flmul@grs+2,c
  6822  00125E  6A25               	clrf	___flmul@grs+3,c
  6823  001260  502C               	movf	___flmul@temp+1,w,c
  6824  001262  6E27               	movwf	___flmul@prod,c
  6825  001264  6A28               	clrf	___flmul@prod+1,c
  6826  001266  6A29               	clrf	___flmul@prod+2,c
  6827  001268  6A2A               	clrf	___flmul@prod+3,c
  6828  00126A  5019               	movf	___flmul@a+1,w,c
  6829  00126C  0215               	mulwf	___flmul@b+1,c
  6830  00126E  CFF3 F02B          	movff	prodl,___flmul@temp
  6831  001272  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6832  001276  502B               	movf	___flmul@temp,w,c
  6833  001278  2622               	addwf	___flmul@grs,f,c
  6834  00127A  0E00               	movlw	0
  6835  00127C  2223               	addwfc	___flmul@grs+1,f,c
  6836  00127E  2224               	addwfc	___flmul@grs+2,f,c
  6837  001280  2225               	addwfc	___flmul@grs+3,f,c
  6838  001282  502C               	movf	___flmul@temp+1,w,c
  6839  001284  2627               	addwf	___flmul@prod,f,c
  6840  001286  0E00               	movlw	0
  6841  001288  2228               	addwfc	___flmul@prod+1,f,c
  6842  00128A  2229               	addwfc	___flmul@prod+2,f,c
  6843  00128C  222A               	addwfc	___flmul@prod+3,f,c
  6844  00128E  5018               	movf	___flmul@a,w,c
  6845  001290  0216               	mulwf	___flmul@b+2,c
  6846  001292  CFF3 F02B          	movff	prodl,___flmul@temp
  6847  001296  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6848  00129A  502B               	movf	___flmul@temp,w,c
  6849  00129C  2622               	addwf	___flmul@grs,f,c
  6850  00129E  0E00               	movlw	0
  6851  0012A0  2223               	addwfc	___flmul@grs+1,f,c
  6852  0012A2  2224               	addwfc	___flmul@grs+2,f,c
  6853  0012A4  2225               	addwfc	___flmul@grs+3,f,c
  6854  0012A6  502C               	movf	___flmul@temp+1,w,c
  6855  0012A8  2627               	addwf	___flmul@prod,f,c
  6856  0012AA  0E00               	movlw	0
  6857  0012AC  2228               	addwfc	___flmul@prod+1,f,c
  6858  0012AE  2229               	addwfc	___flmul@prod+2,f,c
  6859  0012B0  222A               	addwfc	___flmul@prod+3,f,c
  6860  0012B2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6861  0012B6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6862  0012BA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6863  0012BE  6A22               	clrf	___flmul@grs,c
  6864  0012C0  5018               	movf	___flmul@a,w,c
  6865  0012C2  0215               	mulwf	___flmul@b+1,c
  6866  0012C4  CFF3 F02B          	movff	prodl,___flmul@temp
  6867  0012C8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6868  0012CC  502B               	movf	___flmul@temp,w,c
  6869  0012CE  2622               	addwf	___flmul@grs,f,c
  6870  0012D0  502C               	movf	___flmul@temp+1,w,c
  6871  0012D2  2223               	addwfc	___flmul@grs+1,f,c
  6872  0012D4  0E00               	movlw	0
  6873  0012D6  2224               	addwfc	___flmul@grs+2,f,c
  6874  0012D8  0E00               	movlw	0
  6875  0012DA  2225               	addwfc	___flmul@grs+3,f,c
  6876  0012DC  5019               	movf	___flmul@a+1,w,c
  6877  0012DE  0214               	mulwf	___flmul@b,c
  6878  0012E0  CFF3 F02B          	movff	prodl,___flmul@temp
  6879  0012E4  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6880  0012E8  502B               	movf	___flmul@temp,w,c
  6881  0012EA  2622               	addwf	___flmul@grs,f,c
  6882  0012EC  502C               	movf	___flmul@temp+1,w,c
  6883  0012EE  2223               	addwfc	___flmul@grs+1,f,c
  6884  0012F0  0E00               	movlw	0
  6885  0012F2  2224               	addwfc	___flmul@grs+2,f,c
  6886  0012F4  0E00               	movlw	0
  6887  0012F6  2225               	addwfc	___flmul@grs+3,f,c
  6888  0012F8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6889  0012FC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6890  001300  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6891  001304  6A22               	clrf	___flmul@grs,c
  6892  001306  5018               	movf	___flmul@a,w,c
  6893  001308  0214               	mulwf	___flmul@b,c
  6894  00130A  CFF3 F02B          	movff	prodl,___flmul@temp
  6895  00130E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6896  001312  502B               	movf	___flmul@temp,w,c
  6897  001314  2622               	addwf	___flmul@grs,f,c
  6898  001316  502C               	movf	___flmul@temp+1,w,c
  6899  001318  2223               	addwfc	___flmul@grs+1,f,c
  6900  00131A  0E00               	movlw	0
  6901  00131C  2224               	addwfc	___flmul@grs+2,f,c
  6902  00131E  0E00               	movlw	0
  6903  001320  2225               	addwfc	___flmul@grs+3,f,c
  6904  001322  501A               	movf	___flmul@a+2,w,c
  6905  001324  0215               	mulwf	___flmul@b+1,c
  6906  001326  CFF3 F02B          	movff	prodl,___flmul@temp
  6907  00132A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6908  00132E  502B               	movf	___flmul@temp,w,c
  6909  001330  2627               	addwf	___flmul@prod,f,c
  6910  001332  502C               	movf	___flmul@temp+1,w,c
  6911  001334  2228               	addwfc	___flmul@prod+1,f,c
  6912  001336  0E00               	movlw	0
  6913  001338  2229               	addwfc	___flmul@prod+2,f,c
  6914  00133A  0E00               	movlw	0
  6915  00133C  222A               	addwfc	___flmul@prod+3,f,c
  6916  00133E  5019               	movf	___flmul@a+1,w,c
  6917  001340  0216               	mulwf	___flmul@b+2,c
  6918  001342  CFF3 F02B          	movff	prodl,___flmul@temp
  6919  001346  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6920  00134A  502B               	movf	___flmul@temp,w,c
  6921  00134C  2627               	addwf	___flmul@prod,f,c
  6922  00134E  502C               	movf	___flmul@temp+1,w,c
  6923  001350  2228               	addwfc	___flmul@prod+1,f,c
  6924  001352  0E00               	movlw	0
  6925  001354  2229               	addwfc	___flmul@prod+2,f,c
  6926  001356  0E00               	movlw	0
  6927  001358  222A               	addwfc	___flmul@prod+3,f,c
  6928  00135A  501A               	movf	___flmul@a+2,w,c
  6929  00135C  0216               	mulwf	___flmul@b+2,c
  6930  00135E  CFF3 F02B          	movff	prodl,___flmul@temp
  6931  001362  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6932  001366  502B               	movf	___flmul@temp,w,c
  6933  001368  6E1C               	movwf	??___flmul& (0+255),c
  6934  00136A  502C               	movf	___flmul@temp+1,w,c
  6935  00136C  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6936  00136E  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6937  001370  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6938  001372  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6939  001376  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6940  00137A  C01C  F01D         	movff	??___flmul,??___flmul+1
  6941  00137E  6A1C               	clrf	??___flmul,c
  6942  001380  501C               	movf	??___flmul,w,c
  6943  001382  2627               	addwf	___flmul@prod,f,c
  6944  001384  501D               	movf	??___flmul+1,w,c
  6945  001386  2228               	addwfc	___flmul@prod+1,f,c
  6946  001388  501E               	movf	??___flmul+2,w,c
  6947  00138A  2229               	addwfc	___flmul@prod+2,f,c
  6948  00138C  501F               	movf	??___flmul+3,w,c
  6949  00138E  222A               	addwfc	___flmul@prod+3,f,c
  6950  001390  C022  F01C         	movff	___flmul@grs,??___flmul
  6951  001394  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6952  001398  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6953  00139C  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6954  0013A0  0E19               	movlw	25
  6955  0013A2  D005               	goto	u8160
  6956  0013A4                     u8165:
  6957  0013A4  90D8               	bcf	status,0,c
  6958  0013A6  321F               	rrcf	??___flmul+3,f,c
  6959  0013A8  321E               	rrcf	??___flmul+2,f,c
  6960  0013AA  321D               	rrcf	??___flmul+1,f,c
  6961  0013AC  321C               	rrcf	??___flmul,f,c
  6962  0013AE                     u8160:
  6963  0013AE  2EE8               	decfsz	wreg,f,c
  6964  0013B0  D7F9               	goto	u8165
  6965  0013B2  501C               	movf	??___flmul,w,c
  6966  0013B4  2627               	addwf	___flmul@prod,f,c
  6967  0013B6  501D               	movf	??___flmul+1,w,c
  6968  0013B8  2228               	addwfc	___flmul@prod+1,f,c
  6969  0013BA  501E               	movf	??___flmul+2,w,c
  6970  0013BC  2229               	addwfc	___flmul@prod+2,f,c
  6971  0013BE  501F               	movf	??___flmul+3,w,c
  6972  0013C0  222A               	addwfc	___flmul@prod+3,f,c
  6973  0013C2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6974  0013C6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6975  0013CA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6976  0013CE  6A22               	clrf	___flmul@grs,c
  6977  0013D0  5021               	movf	___flmul@aexp,w,c
  6978  0013D2  C026  F01C         	movff	___flmul@bexp,??___flmul
  6979  0013D6  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6980  0013D8  261C               	addwf	??___flmul,f,c
  6981  0013DA  0E00               	movlw	0
  6982  0013DC  221D               	addwfc	??___flmul+1,f,c
  6983  0013DE  0E82               	movlw	130
  6984  0013E0  241C               	addwf	??___flmul,w,c
  6985  0013E2  6E2B               	movwf	___flmul@temp,c
  6986  0013E4  0EFF               	movlw	255
  6987  0013E6  201D               	addwfc	??___flmul+1,w,c
  6988  0013E8  6E2C               	movwf	___flmul@temp+1,c
  6989  0013EA  D00F               	goto	l7308
  6990  0013EC                     l7302:
  6991  0013EC  90D8               	bcf	status,0,c
  6992  0013EE  3627               	rlcf	___flmul@prod,f,c
  6993  0013F0  3628               	rlcf	___flmul@prod+1,f,c
  6994  0013F2  3629               	rlcf	___flmul@prod+2,f,c
  6995  0013F4  362A               	rlcf	___flmul@prod+3,f,c
  6996  0013F6  BE25               	btfsc	___flmul@grs+3,7,c
  6997  0013F8  8027               	bsf	___flmul@prod,0,c
  6998  0013FA  90D8               	bcf	status,0,c
  6999  0013FC  3622               	rlcf	___flmul@grs,f,c
  7000  0013FE  3623               	rlcf	___flmul@grs+1,f,c
  7001  001400  3624               	rlcf	___flmul@grs+2,f,c
  7002  001402  3625               	rlcf	___flmul@grs+3,f,c
  7003  001404  062B               	decf	___flmul@temp,f,c
  7004  001406  A0D8               	btfss	status,0,c
  7005  001408  062C               	decf	___flmul@temp+1,f,c
  7006  00140A                     l7308:
  7007  00140A  AE29               	btfss	___flmul@prod+2,7,c
  7008  00140C  D7EF               	goto	l7302
  7009  00140E  0E00               	movlw	0
  7010  001410  6E21               	movwf	___flmul@aexp,c
  7011  001412  AE25               	btfss	___flmul@grs+3,7,c
  7012  001414  D017               	goto	l1332
  7013  001416  0EFF               	movlw	255
  7014  001418  1422               	andwf	___flmul@grs,w,c
  7015  00141A  6E1C               	movwf	??___flmul& (0+255),c
  7016  00141C  0EFF               	movlw	255
  7017  00141E  1423               	andwf	___flmul@grs+1,w,c
  7018  001420  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7019  001422  0EFF               	movlw	255
  7020  001424  1424               	andwf	___flmul@grs+2,w,c
  7021  001426  6E1E               	movwf	(??___flmul+2)& (0+255),c
  7022  001428  0E7F               	movlw	127
  7023  00142A  1425               	andwf	___flmul@grs+3,w,c
  7024  00142C  6E1F               	movwf	(??___flmul+3)& (0+255),c
  7025  00142E  501C               	movf	??___flmul,w,c
  7026  001430  101D               	iorwf	??___flmul+1,w,c
  7027  001432  101E               	iorwf	??___flmul+2,w,c
  7028  001434  101F               	iorwf	??___flmul+3,w,c
  7029  001436  B4D8               	btfsc	status,2,c
  7030  001438  D003               	goto	l1333
  7031  00143A                     u8200:
  7032  00143A  0E01               	movlw	1
  7033  00143C  6E21               	movwf	___flmul@aexp,c
  7034  00143E  D002               	goto	l1332
  7035  001440                     l1333:
  7036  001440  B027               	btfsc	___flmul@prod,0,c
  7037  001442  D7FB               	goto	u8200
  7038  001444                     l1332:
  7039  001444  5021               	movf	___flmul@aexp,w,c
  7040  001446  B4D8               	btfsc	status,2,c
  7041  001448  D01F               	goto	l7328
  7042  00144A  0E01               	movlw	1
  7043  00144C  2627               	addwf	___flmul@prod,f,c
  7044  00144E  0E00               	movlw	0
  7045  001450  2228               	addwfc	___flmul@prod+1,f,c
  7046  001452  2229               	addwfc	___flmul@prod+2,f,c
  7047  001454  222A               	addwfc	___flmul@prod+3,f,c
  7048  001456  A02A               	btfss	___flmul@prod+3,0,c
  7049  001458  D017               	goto	l7328
  7050  00145A  C027  F01C         	movff	___flmul@prod,??___flmul
  7051  00145E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  7052  001462  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  7053  001466  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  7054  00146A  341F               	rlcf	??___flmul+3,w,c
  7055  00146C  321F               	rrcf	??___flmul+3,f,c
  7056  00146E  321E               	rrcf	??___flmul+2,f,c
  7057  001470  321D               	rrcf	??___flmul+1,f,c
  7058  001472  321C               	rrcf	??___flmul,f,c
  7059  001474  C01C  F027         	movff	??___flmul,___flmul@prod
  7060  001478  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  7061  00147C  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  7062  001480  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  7063  001484  4A2B               	infsnz	___flmul@temp,f,c
  7064  001486  2A2C               	incf	___flmul@temp+1,f,c
  7065  001488                     l7328:
  7066  001488  BE2C               	btfsc	___flmul@temp+1,7,c
  7067  00148A  D00D               	goto	l7332
  7068  00148C  502C               	movf	___flmul@temp+1,w,c
  7069  00148E  E103               	bnz	u8240
  7070  001490  282B               	incf	___flmul@temp,w,c
  7071  001492  A0D8               	btfss	status,0,c
  7072  001494  D008               	goto	l7332
  7073  001496                     u8240:
  7074  001496  0E00               	movlw	0
  7075  001498  6E27               	movwf	___flmul@prod,c
  7076  00149A  0E00               	movlw	0
  7077  00149C  6E28               	movwf	___flmul@prod+1,c
  7078  00149E  0E80               	movlw	128
  7079  0014A0  6E29               	movwf	___flmul@prod+2,c
  7080  0014A2  0E7F               	movlw	127
  7081  0014A4  D020               	goto	L10
  7082  0014A6                     l7332:
  7083  0014A6  BE2C               	btfsc	___flmul@temp+1,7,c
  7084  0014A8  D005               	goto	u8250
  7085  0014AA  502C               	movf	___flmul@temp+1,w,c
  7086  0014AC  E10E               	bnz	l1340
  7087  0014AE  042B               	decf	___flmul@temp,w,c
  7088  0014B0  B0D8               	btfsc	status,0,c
  7089  0014B2  D00B               	goto	l1340
  7090  0014B4                     u8250:
  7091  0014B4  0E00               	movlw	0
  7092  0014B6  6E27               	movwf	___flmul@prod,c
  7093  0014B8  0E00               	movlw	0
  7094  0014BA  6E28               	movwf	___flmul@prod+1,c
  7095  0014BC  0E00               	movlw	0
  7096  0014BE  6E29               	movwf	___flmul@prod+2,c
  7097  0014C0  0E00               	movlw	0
  7098  0014C2  6E2A               	movwf	___flmul@prod+3,c
  7099  0014C4  0E00               	movlw	0
  7100  0014C6  6E20               	movwf	___flmul@sign,c
  7101  0014C8  D00F               	goto	l7344
  7102  0014CA                     l1340:
  7103  0014CA  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  7104  0014CE  0EFF               	movlw	255
  7105  0014D0  1627               	andwf	___flmul@prod,f,c
  7106  0014D2  0EFF               	movlw	255
  7107  0014D4  1628               	andwf	___flmul@prod+1,f,c
  7108  0014D6  0E7F               	movlw	127
  7109  0014D8  1629               	andwf	___flmul@prod+2,f,c
  7110  0014DA  0E00               	movlw	0
  7111  0014DC  162A               	andwf	___flmul@prod+3,f,c
  7112  0014DE  B026               	btfsc	___flmul@bexp,0,c
  7113  0014E0  8E29               	bsf	___flmul@prod+2,7,c
  7114  0014E2  90D8               	bcf	status,0,c
  7115  0014E4  3026               	rrcf	___flmul@bexp,w,c
  7116  0014E6                     L10:
  7117  0014E6  6E2A               	movwf	___flmul@prod+3,c
  7118  0014E8                     l7344:
  7119  0014E8  5020               	movf	___flmul@sign,w,c
  7120  0014EA  122A               	iorwf	___flmul@prod+3,f,c
  7121  0014EC  C027  F014         	movff	___flmul@prod,?___flmul
  7122  0014F0  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7123  0014F4  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7124  0014F8  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7125  0014FC  0012               	return		;funcret
  7126  0014FE                     __end_of___flmul:
  7127                           	opt callstack 0
  7128                           
  7129 ;; *************** function ___flge *****************
  7130 ;; Defined at:
  7131 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  ff1             4    5[COMRAM] unsigned char 
  7134 ;;  ff2             4    9[COMRAM] unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;		None               void
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7146 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;Total ram usage:       12 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    2
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_set_pwm_duty_cycle
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text27
  7161  002C76                     __ptext27:
  7162                           	opt callstack 0
  7163  002C76                     ___flge:
  7164                           	opt callstack 24
  7165                           
  7166                           ;incstack = 0
  7167  002C76  0E00               	movlw	0
  7168  002C78  1406               	andwf	___flge@ff1,w,c
  7169  002C7A  6E0E               	movwf	??___flge& (0+255),c
  7170  002C7C  0E00               	movlw	0
  7171  002C7E  1407               	andwf	___flge@ff1+1,w,c
  7172  002C80  6E0F               	movwf	(??___flge+1)& (0+255),c
  7173  002C82  0E80               	movlw	128
  7174  002C84  1408               	andwf	___flge@ff1+2,w,c
  7175  002C86  6E10               	movwf	(??___flge+2)& (0+255),c
  7176  002C88  0E7F               	movlw	127
  7177  002C8A  1409               	andwf	___flge@ff1+3,w,c
  7178  002C8C  6E11               	movwf	(??___flge+3)& (0+255),c
  7179  002C8E  500E               	movf	??___flge,w,c
  7180  002C90  100F               	iorwf	??___flge+1,w,c
  7181  002C92  1010               	iorwf	??___flge+2,w,c
  7182  002C94  1011               	iorwf	??___flge+3,w,c
  7183  002C96  A4D8               	btfss	status,2,c
  7184  002C98  D008               	goto	l7354
  7185  002C9A  0E00               	movlw	0
  7186  002C9C  6E06               	movwf	___flge@ff1,c
  7187  002C9E  0E00               	movlw	0
  7188  002CA0  6E07               	movwf	___flge@ff1+1,c
  7189  002CA2  0E00               	movlw	0
  7190  002CA4  6E08               	movwf	___flge@ff1+2,c
  7191  002CA6  0E00               	movlw	0
  7192  002CA8  6E09               	movwf	___flge@ff1+3,c
  7193  002CAA                     l7354:
  7194  002CAA  0E00               	movlw	0
  7195  002CAC  140A               	andwf	___flge@ff2,w,c
  7196  002CAE  6E0E               	movwf	??___flge& (0+255),c
  7197  002CB0  0E00               	movlw	0
  7198  002CB2  140B               	andwf	___flge@ff2+1,w,c
  7199  002CB4  6E0F               	movwf	(??___flge+1)& (0+255),c
  7200  002CB6  0E80               	movlw	128
  7201  002CB8  140C               	andwf	___flge@ff2+2,w,c
  7202  002CBA  6E10               	movwf	(??___flge+2)& (0+255),c
  7203  002CBC  0E7F               	movlw	127
  7204  002CBE  140D               	andwf	___flge@ff2+3,w,c
  7205  002CC0  6E11               	movwf	(??___flge+3)& (0+255),c
  7206  002CC2  500E               	movf	??___flge,w,c
  7207  002CC4  100F               	iorwf	??___flge+1,w,c
  7208  002CC6  1010               	iorwf	??___flge+2,w,c
  7209  002CC8  1011               	iorwf	??___flge+3,w,c
  7210  002CCA  A4D8               	btfss	status,2,c
  7211  002CCC  D008               	goto	l7358
  7212  002CCE  0E00               	movlw	0
  7213  002CD0  6E0A               	movwf	___flge@ff2,c
  7214  002CD2  0E00               	movlw	0
  7215  002CD4  6E0B               	movwf	___flge@ff2+1,c
  7216  002CD6  0E00               	movlw	0
  7217  002CD8  6E0C               	movwf	___flge@ff2+2,c
  7218  002CDA  0E00               	movlw	0
  7219  002CDC  6E0D               	movwf	___flge@ff2+3,c
  7220  002CDE                     l7358:
  7221  002CDE  AE09               	btfss	___flge@ff1+3,7,c
  7222  002CE0  D009               	goto	l7362
  7223  002CE2  6C06               	negf	___flge@ff1,c
  7224  002CE4  1E07               	comf	___flge@ff1+1,f,c
  7225  002CE6  B0D8               	btfsc	status,0,c
  7226  002CE8  2A07               	incf	___flge@ff1+1,f,c
  7227  002CEA  1E08               	comf	___flge@ff1+2,f,c
  7228  002CEC  B0D8               	btfsc	status,0,c
  7229  002CEE  2A08               	incf	___flge@ff1+2,f,c
  7230  002CF0  0E80               	movlw	128
  7231  002CF2  5609               	subfwb	___flge@ff1+3,f,c
  7232  002CF4                     l7362:
  7233  002CF4  AE0D               	btfss	___flge@ff2+3,7,c
  7234  002CF6  D009               	goto	l974
  7235  002CF8  6C0A               	negf	___flge@ff2,c
  7236  002CFA  1E0B               	comf	___flge@ff2+1,f,c
  7237  002CFC  B0D8               	btfsc	status,0,c
  7238  002CFE  2A0B               	incf	___flge@ff2+1,f,c
  7239  002D00  1E0C               	comf	___flge@ff2+2,f,c
  7240  002D02  B0D8               	btfsc	status,0,c
  7241  002D04  2A0C               	incf	___flge@ff2+2,f,c
  7242  002D06  0E80               	movlw	128
  7243  002D08  560D               	subfwb	___flge@ff2+3,f,c
  7244  002D0A                     l974:
  7245  002D0A  0E00               	movlw	0
  7246  002D0C  1A06               	xorwf	___flge@ff1,f,c
  7247  002D0E  0E00               	movlw	0
  7248  002D10  1A07               	xorwf	___flge@ff1+1,f,c
  7249  002D12  0E00               	movlw	0
  7250  002D14  1A08               	xorwf	___flge@ff1+2,f,c
  7251  002D16  0E80               	movlw	128
  7252  002D18  1A09               	xorwf	___flge@ff1+3,f,c
  7253  002D1A  0E00               	movlw	0
  7254  002D1C  1A0A               	xorwf	___flge@ff2,f,c
  7255  002D1E  0E00               	movlw	0
  7256  002D20  1A0B               	xorwf	___flge@ff2+1,f,c
  7257  002D22  0E00               	movlw	0
  7258  002D24  1A0C               	xorwf	___flge@ff2+2,f,c
  7259  002D26  0E80               	movlw	128
  7260  002D28  1A0D               	xorwf	___flge@ff2+3,f,c
  7261  002D2A  500A               	movf	___flge@ff2,w,c
  7262  002D2C  5C06               	subwf	___flge@ff1,w,c
  7263  002D2E  500B               	movf	___flge@ff2+1,w,c
  7264  002D30  5807               	subwfb	___flge@ff1+1,w,c
  7265  002D32  500C               	movf	___flge@ff2+2,w,c
  7266  002D34  5808               	subwfb	___flge@ff1+2,w,c
  7267  002D36  500D               	movf	___flge@ff2+3,w,c
  7268  002D38  5809               	subwfb	___flge@ff1+3,w,c
  7269  002D3A  B0D8               	btfsc	status,0,c
  7270  002D3C  D002               	goto	l7368
  7271  002D3E  90D8               	bcf	status,0,c
  7272  002D40  0012               	return	
  7273  002D42                     l7368:
  7274  002D42  80D8               	bsf	status,0,c
  7275  002D44  0012               	return		;funcret
  7276  002D46                     __end_of___flge:
  7277                           	opt callstack 0
  7278                           
  7279 ;; *************** function ___fldiv *****************
  7280 ;; Defined at:
  7281 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  b               4   44[COMRAM] unsigned char 
  7284 ;;  a               4   48[COMRAM] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  grs             4   63[COMRAM] unsigned long 
  7287 ;;  rem             4   56[COMRAM] unsigned long 
  7288 ;;  new_exp         2   61[COMRAM] short 
  7289 ;;  aexp            1   68[COMRAM] unsigned char 
  7290 ;;  bexp            1   67[COMRAM] unsigned char 
  7291 ;;  sign            1   60[COMRAM] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  4   44[COMRAM] unsigned char 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7301 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;Total ram usage:       25 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    2
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_set_pwm_duty_cycle
  7312 ;;		_errorCorrectedMove
  7313 ;;		_PIDCorrectedMove
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text28
  7318  001ADE                     __ptext28:
  7319                           	opt callstack 0
  7320  001ADE                     ___fldiv:
  7321                           	opt callstack 24
  7322                           
  7323                           ;incstack = 0
  7324  001ADE  5030               	movf	___fldiv@b+3,w,c
  7325  001AE0  0B80               	andlw	128
  7326  001AE2  6E3D               	movwf	___fldiv@sign,c
  7327  001AE4  5030               	movf	___fldiv@b+3,w,c
  7328  001AE6  2430               	addwf	___fldiv@b+3,w,c
  7329  001AE8  6E44               	movwf	___fldiv@bexp,c
  7330  001AEA  BE2F               	btfsc	___fldiv@b+2,7,c
  7331  001AEC  8044               	bsf	___fldiv@bexp,0,c
  7332  001AEE  5044               	movf	___fldiv@bexp,w,c
  7333  001AF0  B4D8               	btfsc	status,2,c
  7334  001AF2  D00D               	goto	l7098
  7335  001AF4  2844               	incf	___fldiv@bexp,w,c
  7336  001AF6  A4D8               	btfss	status,2,c
  7337  001AF8  D008               	goto	l7094
  7338  001AFA  0E00               	movlw	0
  7339  001AFC  6E2D               	movwf	___fldiv@b,c
  7340  001AFE  0E00               	movlw	0
  7341  001B00  6E2E               	movwf	___fldiv@b+1,c
  7342  001B02  0E00               	movlw	0
  7343  001B04  6E2F               	movwf	___fldiv@b+2,c
  7344  001B06  0E00               	movlw	0
  7345  001B08  6E30               	movwf	___fldiv@b+3,c
  7346  001B0A                     l7094:
  7347  001B0A  8E2F               	bsf	___fldiv@b+2,7,c
  7348  001B0C  D006               	goto	L11
  7349  001B0E                     l7098:
  7350  001B0E  0E00               	movlw	0
  7351  001B10  6E2D               	movwf	___fldiv@b,c
  7352  001B12  0E00               	movlw	0
  7353  001B14  6E2E               	movwf	___fldiv@b+1,c
  7354  001B16  0E00               	movlw	0
  7355  001B18  6E2F               	movwf	___fldiv@b+2,c
  7356  001B1A                     L11:
  7357  001B1A  0E00               	movlw	0
  7358  001B1C  6E30               	movwf	___fldiv@b+3,c
  7359  001B1E  5034               	movf	___fldiv@a+3,w,c
  7360  001B20  0B80               	andlw	128
  7361  001B22  1A3D               	xorwf	___fldiv@sign,f,c
  7362  001B24  5034               	movf	___fldiv@a+3,w,c
  7363  001B26  2434               	addwf	___fldiv@a+3,w,c
  7364  001B28  6E45               	movwf	___fldiv@aexp,c
  7365  001B2A  BE33               	btfsc	___fldiv@a+2,7,c
  7366  001B2C  8045               	bsf	___fldiv@aexp,0,c
  7367  001B2E  5045               	movf	___fldiv@aexp,w,c
  7368  001B30  B4D8               	btfsc	status,2,c
  7369  001B32  D00D               	goto	l7118
  7370  001B34  2845               	incf	___fldiv@aexp,w,c
  7371  001B36  A4D8               	btfss	status,2,c
  7372  001B38  D008               	goto	l7114
  7373  001B3A  0E00               	movlw	0
  7374  001B3C  6E31               	movwf	___fldiv@a,c
  7375  001B3E  0E00               	movlw	0
  7376  001B40  6E32               	movwf	___fldiv@a+1,c
  7377  001B42  0E00               	movlw	0
  7378  001B44  6E33               	movwf	___fldiv@a+2,c
  7379  001B46  0E00               	movlw	0
  7380  001B48  6E34               	movwf	___fldiv@a+3,c
  7381  001B4A                     l7114:
  7382  001B4A  8E33               	bsf	___fldiv@a+2,7,c
  7383  001B4C  D006               	goto	L12
  7384  001B4E                     l7118:
  7385  001B4E  0E00               	movlw	0
  7386  001B50  6E31               	movwf	___fldiv@a,c
  7387  001B52  0E00               	movlw	0
  7388  001B54  6E32               	movwf	___fldiv@a+1,c
  7389  001B56  0E00               	movlw	0
  7390  001B58  6E33               	movwf	___fldiv@a+2,c
  7391  001B5A                     L12:
  7392  001B5A  0E00               	movlw	0
  7393  001B5C  6E34               	movwf	___fldiv@a+3,c
  7394  001B5E  5031               	movf	___fldiv@a,w,c
  7395  001B60  1032               	iorwf	___fldiv@a+1,w,c
  7396  001B62  1033               	iorwf	___fldiv@a+2,w,c
  7397  001B64  1034               	iorwf	___fldiv@a+3,w,c
  7398  001B66  A4D8               	btfss	status,2,c
  7399  001B68  D017               	goto	l7132
  7400  001B6A  0E00               	movlw	0
  7401  001B6C  6E2D               	movwf	___fldiv@b,c
  7402  001B6E  0E00               	movlw	0
  7403  001B70  6E2E               	movwf	___fldiv@b+1,c
  7404  001B72  0E00               	movlw	0
  7405  001B74  6E2F               	movwf	___fldiv@b+2,c
  7406  001B76  0E00               	movlw	0
  7407  001B78  6E30               	movwf	___fldiv@b+3,c
  7408  001B7A  0E80               	movlw	128
  7409  001B7C  122F               	iorwf	___fldiv@b+2,f,c
  7410  001B7E  0E7F               	movlw	127
  7411  001B80  1230               	iorwf	___fldiv@b+3,f,c
  7412  001B82                     l7126:
  7413  001B82  503D               	movf	___fldiv@sign,w,c
  7414  001B84  1230               	iorwf	___fldiv@b+3,f,c
  7415  001B86  C02D  F02D         	movff	___fldiv@b,?___fldiv
  7416  001B8A  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  7417  001B8E  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  7418  001B92  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  7419  001B96  0012               	return	
  7420  001B98                     l7132:
  7421  001B98  5044               	movf	___fldiv@bexp,w,c
  7422  001B9A  A4D8               	btfss	status,2,c
  7423  001B9C  D009               	goto	l7140
  7424  001B9E  0E00               	movlw	0
  7425  001BA0  6E2D               	movwf	?___fldiv,c
  7426  001BA2  0E00               	movlw	0
  7427  001BA4  6E2E               	movwf	?___fldiv+1,c
  7428  001BA6  0E00               	movlw	0
  7429  001BA8  6E2F               	movwf	?___fldiv+2,c
  7430  001BAA  0E00               	movlw	0
  7431  001BAC  6E30               	movwf	?___fldiv+3,c
  7432  001BAE  0012               	return	
  7433  001BB0                     l7140:
  7434  001BB0  5045               	movf	___fldiv@aexp,w,c
  7435  001BB2  C044  F035         	movff	___fldiv@bexp,??___fldiv
  7436  001BB6  6A36               	clrf	(??___fldiv+1)& (0+255),c
  7437  001BB8  5E35               	subwf	??___fldiv,f,c
  7438  001BBA  0E00               	movlw	0
  7439  001BBC  5A36               	subwfb	??___fldiv+1,f,c
  7440  001BBE  0E7F               	movlw	127
  7441  001BC0  2435               	addwf	??___fldiv,w,c
  7442  001BC2  6E3E               	movwf	___fldiv@new_exp,c
  7443  001BC4  0E00               	movlw	0
  7444  001BC6  2036               	addwfc	??___fldiv+1,w,c
  7445  001BC8  6E3F               	movwf	___fldiv@new_exp+1,c
  7446  001BCA  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  7447  001BCE  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  7448  001BD2  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  7449  001BD6  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  7450  001BDA  0E00               	movlw	0
  7451  001BDC  6E2D               	movwf	___fldiv@b,c
  7452  001BDE  0E00               	movlw	0
  7453  001BE0  6E2E               	movwf	___fldiv@b+1,c
  7454  001BE2  0E00               	movlw	0
  7455  001BE4  6E2F               	movwf	___fldiv@b+2,c
  7456  001BE6  0E00               	movlw	0
  7457  001BE8  6E30               	movwf	___fldiv@b+3,c
  7458  001BEA  0E00               	movlw	0
  7459  001BEC  6E40               	movwf	___fldiv@grs,c
  7460  001BEE  0E00               	movlw	0
  7461  001BF0  6E41               	movwf	___fldiv@grs+1,c
  7462  001BF2  0E00               	movlw	0
  7463  001BF4  6E42               	movwf	___fldiv@grs+2,c
  7464  001BF6  0E00               	movlw	0
  7465  001BF8  6E43               	movwf	___fldiv@grs+3,c
  7466  001BFA  0E00               	movlw	0
  7467  001BFC  6E45               	movwf	___fldiv@aexp,c
  7468  001BFE  D028               	goto	l1293
  7469  001C00                     l7150:
  7470  001C00  5045               	movf	___fldiv@aexp,w,c
  7471  001C02  B4D8               	btfsc	status,2,c
  7472  001C04  D011               	goto	l7158
  7473  001C06  90D8               	bcf	status,0,c
  7474  001C08  3639               	rlcf	___fldiv@rem,f,c
  7475  001C0A  363A               	rlcf	___fldiv@rem+1,f,c
  7476  001C0C  363B               	rlcf	___fldiv@rem+2,f,c
  7477  001C0E  363C               	rlcf	___fldiv@rem+3,f,c
  7478  001C10  90D8               	bcf	status,0,c
  7479  001C12  362D               	rlcf	___fldiv@b,f,c
  7480  001C14  362E               	rlcf	___fldiv@b+1,f,c
  7481  001C16  362F               	rlcf	___fldiv@b+2,f,c
  7482  001C18  3630               	rlcf	___fldiv@b+3,f,c
  7483  001C1A  BE43               	btfsc	___fldiv@grs+3,7,c
  7484  001C1C  802D               	bsf	___fldiv@b,0,c
  7485  001C1E  90D8               	bcf	status,0,c
  7486  001C20  3640               	rlcf	___fldiv@grs,f,c
  7487  001C22  3641               	rlcf	___fldiv@grs+1,f,c
  7488  001C24  3642               	rlcf	___fldiv@grs+2,f,c
  7489  001C26  3643               	rlcf	___fldiv@grs+3,f,c
  7490  001C28                     l7158:
  7491  001C28  5031               	movf	___fldiv@a,w,c
  7492  001C2A  5C39               	subwf	___fldiv@rem,w,c
  7493  001C2C  5032               	movf	___fldiv@a+1,w,c
  7494  001C2E  583A               	subwfb	___fldiv@rem+1,w,c
  7495  001C30  5033               	movf	___fldiv@a+2,w,c
  7496  001C32  583B               	subwfb	___fldiv@rem+2,w,c
  7497  001C34  5034               	movf	___fldiv@a+3,w,c
  7498  001C36  583C               	subwfb	___fldiv@rem+3,w,c
  7499  001C38  A0D8               	btfss	status,0,c
  7500  001C3A  D009               	goto	l7164
  7501  001C3C  8C43               	bsf	___fldiv@grs+3,6,c
  7502  001C3E  5031               	movf	___fldiv@a,w,c
  7503  001C40  5E39               	subwf	___fldiv@rem,f,c
  7504  001C42  5032               	movf	___fldiv@a+1,w,c
  7505  001C44  5A3A               	subwfb	___fldiv@rem+1,f,c
  7506  001C46  5033               	movf	___fldiv@a+2,w,c
  7507  001C48  5A3B               	subwfb	___fldiv@rem+2,f,c
  7508  001C4A  5034               	movf	___fldiv@a+3,w,c
  7509  001C4C  5A3C               	subwfb	___fldiv@rem+3,f,c
  7510  001C4E                     l7164:
  7511  001C4E  2A45               	incf	___fldiv@aexp,f,c
  7512  001C50                     l1293:
  7513  001C50  0E19               	movlw	25
  7514  001C52  6445               	cpfsgt	___fldiv@aexp,c
  7515  001C54  D7D5               	goto	l7150
  7516  001C56  5039               	movf	___fldiv@rem,w,c
  7517  001C58  103A               	iorwf	___fldiv@rem+1,w,c
  7518  001C5A  103B               	iorwf	___fldiv@rem+2,w,c
  7519  001C5C  103C               	iorwf	___fldiv@rem+3,w,c
  7520  001C5E  B4D8               	btfsc	status,2,c
  7521  001C60  D011               	goto	l7176
  7522  001C62  8040               	bsf	___fldiv@grs,0,c
  7523  001C64  D00F               	goto	l7176
  7524  001C66                     l7170:
  7525  001C66  90D8               	bcf	status,0,c
  7526  001C68  362D               	rlcf	___fldiv@b,f,c
  7527  001C6A  362E               	rlcf	___fldiv@b+1,f,c
  7528  001C6C  362F               	rlcf	___fldiv@b+2,f,c
  7529  001C6E  3630               	rlcf	___fldiv@b+3,f,c
  7530  001C70  BE43               	btfsc	___fldiv@grs+3,7,c
  7531  001C72  802D               	bsf	___fldiv@b,0,c
  7532  001C74  90D8               	bcf	status,0,c
  7533  001C76  3640               	rlcf	___fldiv@grs,f,c
  7534  001C78  3641               	rlcf	___fldiv@grs+1,f,c
  7535  001C7A  3642               	rlcf	___fldiv@grs+2,f,c
  7536  001C7C  3643               	rlcf	___fldiv@grs+3,f,c
  7537  001C7E  063E               	decf	___fldiv@new_exp,f,c
  7538  001C80  A0D8               	btfss	status,0,c
  7539  001C82  063F               	decf	___fldiv@new_exp+1,f,c
  7540  001C84                     l7176:
  7541  001C84  AE2F               	btfss	___fldiv@b+2,7,c
  7542  001C86  D7EF               	goto	l7170
  7543  001C88  0E00               	movlw	0
  7544  001C8A  6E45               	movwf	___fldiv@aexp,c
  7545  001C8C  AE43               	btfss	___fldiv@grs+3,7,c
  7546  001C8E  D017               	goto	l1304
  7547  001C90  0EFF               	movlw	255
  7548  001C92  1440               	andwf	___fldiv@grs,w,c
  7549  001C94  6E35               	movwf	??___fldiv& (0+255),c
  7550  001C96  0EFF               	movlw	255
  7551  001C98  1441               	andwf	___fldiv@grs+1,w,c
  7552  001C9A  6E36               	movwf	(??___fldiv+1)& (0+255),c
  7553  001C9C  0EFF               	movlw	255
  7554  001C9E  1442               	andwf	___fldiv@grs+2,w,c
  7555  001CA0  6E37               	movwf	(??___fldiv+2)& (0+255),c
  7556  001CA2  0E7F               	movlw	127
  7557  001CA4  1443               	andwf	___fldiv@grs+3,w,c
  7558  001CA6  6E38               	movwf	(??___fldiv+3)& (0+255),c
  7559  001CA8  5035               	movf	??___fldiv,w,c
  7560  001CAA  1036               	iorwf	??___fldiv+1,w,c
  7561  001CAC  1037               	iorwf	??___fldiv+2,w,c
  7562  001CAE  1038               	iorwf	??___fldiv+3,w,c
  7563  001CB0  B4D8               	btfsc	status,2,c
  7564  001CB2  D003               	goto	l1305
  7565  001CB4                     u8010:
  7566  001CB4  0E01               	movlw	1
  7567  001CB6  6E45               	movwf	___fldiv@aexp,c
  7568  001CB8  D002               	goto	l1304
  7569  001CBA                     l1305:
  7570  001CBA  B02D               	btfsc	___fldiv@b,0,c
  7571  001CBC  D7FB               	goto	u8010
  7572  001CBE                     l1304:
  7573  001CBE  5045               	movf	___fldiv@aexp,w,c
  7574  001CC0  B4D8               	btfsc	status,2,c
  7575  001CC2  D01F               	goto	l7196
  7576  001CC4  0E01               	movlw	1
  7577  001CC6  262D               	addwf	___fldiv@b,f,c
  7578  001CC8  0E00               	movlw	0
  7579  001CCA  222E               	addwfc	___fldiv@b+1,f,c
  7580  001CCC  222F               	addwfc	___fldiv@b+2,f,c
  7581  001CCE  2230               	addwfc	___fldiv@b+3,f,c
  7582  001CD0  A030               	btfss	___fldiv@b+3,0,c
  7583  001CD2  D017               	goto	l7196
  7584  001CD4  C02D  F035         	movff	___fldiv@b,??___fldiv
  7585  001CD8  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7586  001CDC  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7587  001CE0  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7588  001CE4  3438               	rlcf	??___fldiv+3,w,c
  7589  001CE6  3238               	rrcf	??___fldiv+3,f,c
  7590  001CE8  3237               	rrcf	??___fldiv+2,f,c
  7591  001CEA  3236               	rrcf	??___fldiv+1,f,c
  7592  001CEC  3235               	rrcf	??___fldiv,f,c
  7593  001CEE  C035  F02D         	movff	??___fldiv,___fldiv@b
  7594  001CF2  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7595  001CF6  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7596  001CFA  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7597  001CFE  4A3E               	infsnz	___fldiv@new_exp,f,c
  7598  001D00  2A3F               	incf	___fldiv@new_exp+1,f,c
  7599  001D02                     l7196:
  7600  001D02  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7601  001D04  D010               	goto	l7200
  7602  001D06  503F               	movf	___fldiv@new_exp+1,w,c
  7603  001D08  E103               	bnz	u8050
  7604  001D0A  283E               	incf	___fldiv@new_exp,w,c
  7605  001D0C  A0D8               	btfss	status,0,c
  7606  001D0E  D00B               	goto	l7200
  7607  001D10                     u8050:
  7608  001D10  0E00               	movlw	0
  7609  001D12  6E3F               	movwf	___fldiv@new_exp+1,c
  7610  001D14  683E               	setf	___fldiv@new_exp,c
  7611  001D16  0E00               	movlw	0
  7612  001D18  6E2D               	movwf	___fldiv@b,c
  7613  001D1A  0E00               	movlw	0
  7614  001D1C  6E2E               	movwf	___fldiv@b+1,c
  7615  001D1E  0E00               	movlw	0
  7616  001D20  6E2F               	movwf	___fldiv@b+2,c
  7617  001D22  0E00               	movlw	0
  7618  001D24  6E30               	movwf	___fldiv@b+3,c
  7619  001D26                     l7200:
  7620  001D26  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  7621  001D28  D005               	goto	u8060
  7622  001D2A  503F               	movf	___fldiv@new_exp+1,w,c
  7623  001D2C  E111               	bnz	l7204
  7624  001D2E  043E               	decf	___fldiv@new_exp,w,c
  7625  001D30  B0D8               	btfsc	status,0,c
  7626  001D32  D00E               	goto	l7204
  7627  001D34                     u8060:
  7628  001D34  0E00               	movlw	0
  7629  001D36  6E3F               	movwf	___fldiv@new_exp+1,c
  7630  001D38  0E00               	movlw	0
  7631  001D3A  6E3E               	movwf	___fldiv@new_exp,c
  7632  001D3C  0E00               	movlw	0
  7633  001D3E  6E2D               	movwf	___fldiv@b,c
  7634  001D40  0E00               	movlw	0
  7635  001D42  6E2E               	movwf	___fldiv@b+1,c
  7636  001D44  0E00               	movlw	0
  7637  001D46  6E2F               	movwf	___fldiv@b+2,c
  7638  001D48  0E00               	movlw	0
  7639  001D4A  6E30               	movwf	___fldiv@b+3,c
  7640  001D4C  0E00               	movlw	0
  7641  001D4E  6E3D               	movwf	___fldiv@sign,c
  7642  001D50                     l7204:
  7643  001D50  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7644  001D54  A044               	btfss	___fldiv@bexp,0,c
  7645  001D56  D002               	goto	l7210
  7646  001D58  8E2F               	bsf	___fldiv@b+2,7,c
  7647  001D5A  D001               	goto	l7212
  7648  001D5C                     l7210:
  7649  001D5C  9E2F               	bcf	___fldiv@b+2,7,c
  7650  001D5E                     l7212:
  7651  001D5E  90D8               	bcf	status,0,c
  7652  001D60  3044               	rrcf	___fldiv@bexp,w,c
  7653  001D62  6E30               	movwf	___fldiv@b+3,c
  7654  001D64  D70E               	goto	l7126
  7655  001D66                     __end_of___fldiv:
  7656                           	opt callstack 0
  7657                           
  7658 ;; *************** function ___flsub *****************
  7659 ;; Defined at:
  7660 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  b               4   69[COMRAM] unsigned char 
  7663 ;;  a               4   73[COMRAM] unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  4   69[COMRAM] unsigned char 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7675 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;Total ram usage:        8 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    3
  7682 ;; This function calls:
  7683 ;;		___fladd
  7684 ;; This function is called by:
  7685 ;;		_errorCorrectedMove
  7686 ;;		_PIDCorrectedMove
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text29
  7691  003464                     __ptext29:
  7692                           	opt callstack 0
  7693  003464                     ___flsub:
  7694                           	opt callstack 25
  7695                           
  7696                           ;incstack = 0
  7697  003464  0E00               	movlw	0
  7698  003466  1A4A               	xorwf	___flsub@a,f,c
  7699  003468  0E00               	movlw	0
  7700  00346A  1A4B               	xorwf	___flsub@a+1,f,c
  7701  00346C  0E00               	movlw	0
  7702  00346E  1A4C               	xorwf	___flsub@a+2,f,c
  7703  003470  0E80               	movlw	128
  7704  003472  1A4D               	xorwf	___flsub@a+3,f,c
  7705  003474  C046  F02D         	movff	___flsub@b,___fladd@b
  7706  003478  C047  F02E         	movff	___flsub@b+1,___fladd@b+1
  7707  00347C  C048  F02F         	movff	___flsub@b+2,___fladd@b+2
  7708  003480  C049  F030         	movff	___flsub@b+3,___fladd@b+3
  7709  003484  C04A  F031         	movff	___flsub@a,___fladd@a
  7710  003488  C04B  F032         	movff	___flsub@a+1,___fladd@a+1
  7711  00348C  C04C  F033         	movff	___flsub@a+2,___fladd@a+2
  7712  003490  C04D  F034         	movff	___flsub@a+3,___fladd@a+3
  7713  003494  EC7F  F00A         	call	___fladd	;wreg free
  7714  003498  C02D  F046         	movff	?___fladd,?___flsub
  7715  00349C  C02E  F047         	movff	?___fladd+1,?___flsub+1
  7716  0034A0  C02F  F048         	movff	?___fladd+2,?___flsub+2
  7717  0034A4  C030  F049         	movff	?___fladd+3,?___flsub+3
  7718  0034A8  0012               	return		;funcret
  7719  0034AA                     __end_of___flsub:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function ___fladd *****************
  7723 ;; Defined at:
  7724 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  b               4   44[COMRAM] unsigned char 
  7727 ;;  a               4   48[COMRAM] unsigned char 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;  grs             1   59[COMRAM] unsigned char 
  7730 ;;  bexp            1   58[COMRAM] unsigned char 
  7731 ;;  aexp            1   57[COMRAM] unsigned char 
  7732 ;;  signs           1   56[COMRAM] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  4   44[COMRAM] unsigned char 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;Total ram usage:       16 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    2
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_errorCorrectedMove
  7753 ;;		___flsub
  7754 ;;		_PIDCorrectedMove
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text30
  7759  0014FE                     __ptext30:
  7760                           	opt callstack 0
  7761  0014FE                     ___fladd:
  7762                           	opt callstack 25
  7763                           
  7764                           ;incstack = 0
  7765  0014FE  5030               	movf	___fladd@b+3,w,c
  7766  001500  0B80               	andlw	128
  7767  001502  6E39               	movwf	___fladd@signs,c
  7768  001504  5030               	movf	___fladd@b+3,w,c
  7769  001506  2430               	addwf	___fladd@b+3,w,c
  7770  001508  6E3B               	movwf	___fladd@bexp,c
  7771  00150A  BE2F               	btfsc	___fladd@b+2,7,c
  7772  00150C  803B               	bsf	___fladd@bexp,0,c
  7773  00150E  503B               	movf	___fladd@bexp,w,c
  7774  001510  B4D8               	btfsc	status,2,c
  7775  001512  D00D               	goto	l7636
  7776  001514  283B               	incf	___fladd@bexp,w,c
  7777  001516  A4D8               	btfss	status,2,c
  7778  001518  D008               	goto	l7632
  7779  00151A  0E00               	movlw	0
  7780  00151C  6E2D               	movwf	___fladd@b,c
  7781  00151E  0E00               	movlw	0
  7782  001520  6E2E               	movwf	___fladd@b+1,c
  7783  001522  0E00               	movlw	0
  7784  001524  6E2F               	movwf	___fladd@b+2,c
  7785  001526  0E00               	movlw	0
  7786  001528  6E30               	movwf	___fladd@b+3,c
  7787  00152A                     l7632:
  7788  00152A  8E2F               	bsf	___fladd@b+2,7,c
  7789  00152C  D006               	goto	L13
  7790  00152E                     l7636:
  7791  00152E  0E00               	movlw	0
  7792  001530  6E2D               	movwf	___fladd@b,c
  7793  001532  0E00               	movlw	0
  7794  001534  6E2E               	movwf	___fladd@b+1,c
  7795  001536  0E00               	movlw	0
  7796  001538  6E2F               	movwf	___fladd@b+2,c
  7797  00153A                     L13:
  7798  00153A  0E00               	movlw	0
  7799  00153C  6E30               	movwf	___fladd@b+3,c
  7800  00153E  5034               	movf	___fladd@a+3,w,c
  7801  001540  0B80               	andlw	128
  7802  001542  6E3A               	movwf	___fladd@aexp,c
  7803  001544  5039               	movf	___fladd@signs,w,c
  7804  001546  183A               	xorwf	___fladd@aexp,w,c
  7805  001548  A4D8               	btfss	status,2,c
  7806  00154A  8C39               	bsf	___fladd@signs,6,c
  7807  00154C  5034               	movf	___fladd@a+3,w,c
  7808  00154E  2434               	addwf	___fladd@a+3,w,c
  7809  001550  6E3A               	movwf	___fladd@aexp,c
  7810  001552  BE33               	btfsc	___fladd@a+2,7,c
  7811  001554  803A               	bsf	___fladd@aexp,0,c
  7812  001556  503A               	movf	___fladd@aexp,w,c
  7813  001558  B4D8               	btfsc	status,2,c
  7814  00155A  D00D               	goto	l7660
  7815  00155C  283A               	incf	___fladd@aexp,w,c
  7816  00155E  A4D8               	btfss	status,2,c
  7817  001560  D008               	goto	l7656
  7818  001562  0E00               	movlw	0
  7819  001564  6E31               	movwf	___fladd@a,c
  7820  001566  0E00               	movlw	0
  7821  001568  6E32               	movwf	___fladd@a+1,c
  7822  00156A  0E00               	movlw	0
  7823  00156C  6E33               	movwf	___fladd@a+2,c
  7824  00156E  0E00               	movlw	0
  7825  001570  6E34               	movwf	___fladd@a+3,c
  7826  001572                     l7656:
  7827  001572  8E33               	bsf	___fladd@a+2,7,c
  7828  001574  D006               	goto	L14
  7829  001576                     l7660:
  7830  001576  0E00               	movlw	0
  7831  001578  6E31               	movwf	___fladd@a,c
  7832  00157A  0E00               	movlw	0
  7833  00157C  6E32               	movwf	___fladd@a+1,c
  7834  00157E  0E00               	movlw	0
  7835  001580  6E33               	movwf	___fladd@a+2,c
  7836  001582                     L14:
  7837  001582  0E00               	movlw	0
  7838  001584  6E34               	movwf	___fladd@a+3,c
  7839  001586  503B               	movf	___fladd@bexp,w,c
  7840  001588  5C3A               	subwf	___fladd@aexp,w,c
  7841  00158A  B0D8               	btfsc	status,0,c
  7842  00158C  D022               	goto	l7698
  7843  00158E  AC39               	btfss	___fladd@signs,6,c
  7844  001590  D002               	goto	l7668
  7845  001592  0E80               	movlw	128
  7846  001594  1A39               	xorwf	___fladd@signs,f,c
  7847  001596                     l7668:
  7848  001596  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  7849  00159A  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7850  00159E  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  7851  0015A2  C02D  F03C         	movff	___fladd@b,___fladd@grs
  7852  0015A6  C031  F02D         	movff	___fladd@a,___fladd@b
  7853  0015AA  C03C  F031         	movff	___fladd@grs,___fladd@a
  7854  0015AE  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  7855  0015B2  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  7856  0015B6  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  7857  0015BA  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  7858  0015BE  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  7859  0015C2  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  7860  0015C6  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  7861  0015CA  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  7862  0015CE  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  7863  0015D2                     l7698:
  7864  0015D2  0E00               	movlw	0
  7865  0015D4  6E3C               	movwf	___fladd@grs,c
  7866  0015D6  503B               	movf	___fladd@bexp,w,c
  7867  0015D8  C03A  F035         	movff	___fladd@aexp,??___fladd
  7868  0015DC  6A36               	clrf	(??___fladd+1)& (0+255),c
  7869  0015DE  5E35               	subwf	??___fladd,f,c
  7870  0015E0  0E00               	movlw	0
  7871  0015E2  5A36               	subwfb	??___fladd+1,f,c
  7872  0015E4  BE36               	btfsc	??___fladd+1,7,c
  7873  0015E6  D02C               	goto	l1238
  7874  0015E8  5036               	movf	??___fladd+1,w,c
  7875  0015EA  E104               	bnz	u8830
  7876  0015EC  0E1A               	movlw	26
  7877  0015EE  5C35               	subwf	??___fladd,w,c
  7878  0015F0  A0D8               	btfss	status,0,c
  7879  0015F2  D026               	goto	l1238
  7880  0015F4                     u8830:
  7881  0015F4  502D               	movf	___fladd@b,w,c
  7882  0015F6  102E               	iorwf	___fladd@b+1,w,c
  7883  0015F8  102F               	iorwf	___fladd@b+2,w,c
  7884  0015FA  1030               	iorwf	___fladd@b+3,w,c
  7885  0015FC  B4D8               	btfsc	status,2,c
  7886  0015FE  D002               	goto	u8840
  7887  001600  0E01               	movlw	1
  7888  001602  D001               	goto	u8850
  7889  001604                     u8840:
  7890  001604  0E00               	movlw	0
  7891  001606                     u8850:
  7892  001606  6E3C               	movwf	___fladd@grs,c
  7893  001608  0E00               	movlw	0
  7894  00160A  6E2D               	movwf	___fladd@b,c
  7895  00160C  0E00               	movlw	0
  7896  00160E  6E2E               	movwf	___fladd@b+1,c
  7897  001610  0E00               	movlw	0
  7898  001612  6E2F               	movwf	___fladd@b+2,c
  7899  001614  0E00               	movlw	0
  7900  001616  6E30               	movwf	___fladd@b+3,c
  7901  001618  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  7902  00161C  D015               	goto	u8880
  7903  00161E                     l1239:
  7904  00161E  A03C               	btfss	___fladd@grs,0,c
  7905  001620  D005               	goto	l7710
  7906  001622  90D8               	bcf	status,0,c
  7907  001624  303C               	rrcf	___fladd@grs,w,c
  7908  001626  0901               	iorlw	1
  7909  001628  6E3C               	movwf	___fladd@grs,c
  7910  00162A  D002               	goto	l7712
  7911  00162C                     l7710:
  7912  00162C  90D8               	bcf	status,0,c
  7913  00162E  323C               	rrcf	___fladd@grs,f,c
  7914  001630                     l7712:
  7915  001630  B02D               	btfsc	___fladd@b,0,c
  7916  001632  8E3C               	bsf	___fladd@grs,7,c
  7917  001634  3430               	rlcf	___fladd@b+3,w,c
  7918  001636  3230               	rrcf	___fladd@b+3,f,c
  7919  001638  322F               	rrcf	___fladd@b+2,f,c
  7920  00163A  322E               	rrcf	___fladd@b+1,f,c
  7921  00163C  322D               	rrcf	___fladd@b,f,c
  7922  00163E  2A3B               	incf	___fladd@bexp,f,c
  7923  001640                     l1238:
  7924  001640  503A               	movf	___fladd@aexp,w,c
  7925  001642  5C3B               	subwf	___fladd@bexp,w,c
  7926  001644  A0D8               	btfss	status,0,c
  7927  001646  D7EB               	goto	l1239
  7928  001648                     u8880:
  7929  001648  BC39               	btfsc	___fladd@signs,6,c
  7930  00164A  D028               	goto	l7744
  7931  00164C  503B               	movf	___fladd@bexp,w,c
  7932  00164E  A4D8               	btfss	status,2,c
  7933  001650  D009               	goto	l7726
  7934  001652  0E00               	movlw	0
  7935  001654  6E2D               	movwf	?___fladd,c
  7936  001656  0E00               	movlw	0
  7937  001658  6E2E               	movwf	?___fladd+1,c
  7938  00165A  0E00               	movlw	0
  7939  00165C  6E2F               	movwf	?___fladd+2,c
  7940  00165E  0E00               	movlw	0
  7941  001660  6E30               	movwf	?___fladd+3,c
  7942  001662  0012               	return	
  7943  001664                     l7726:
  7944  001664  5031               	movf	___fladd@a,w,c
  7945  001666  262D               	addwf	___fladd@b,f,c
  7946  001668  5032               	movf	___fladd@a+1,w,c
  7947  00166A  222E               	addwfc	___fladd@b+1,f,c
  7948  00166C  5033               	movf	___fladd@a+2,w,c
  7949  00166E  222F               	addwfc	___fladd@b+2,f,c
  7950  001670  5034               	movf	___fladd@a+3,w,c
  7951  001672  2230               	addwfc	___fladd@b+3,f,c
  7952  001674  A030               	btfss	___fladd@b+3,0,c
  7953  001676  D071               	goto	u9010
  7954  001678  A03C               	btfss	___fladd@grs,0,c
  7955  00167A  D005               	goto	l7734
  7956  00167C  90D8               	bcf	status,0,c
  7957  00167E  303C               	rrcf	___fladd@grs,w,c
  7958  001680  0901               	iorlw	1
  7959  001682  6E3C               	movwf	___fladd@grs,c
  7960  001684  D002               	goto	l7736
  7961  001686                     l7734:
  7962  001686  90D8               	bcf	status,0,c
  7963  001688  323C               	rrcf	___fladd@grs,f,c
  7964  00168A                     l7736:
  7965  00168A  B02D               	btfsc	___fladd@b,0,c
  7966  00168C  8E3C               	bsf	___fladd@grs,7,c
  7967  00168E  3430               	rlcf	___fladd@b+3,w,c
  7968  001690  3230               	rrcf	___fladd@b+3,f,c
  7969  001692  322F               	rrcf	___fladd@b+2,f,c
  7970  001694  322E               	rrcf	___fladd@b+1,f,c
  7971  001696  322D               	rrcf	___fladd@b,f,c
  7972  001698  2A3B               	incf	___fladd@bexp,f,c
  7973  00169A  D05F               	goto	u9010
  7974  00169C                     l7744:
  7975  00169C  5031               	movf	___fladd@a,w,c
  7976  00169E  5C2D               	subwf	___fladd@b,w,c
  7977  0016A0  5032               	movf	___fladd@a+1,w,c
  7978  0016A2  582E               	subwfb	___fladd@b+1,w,c
  7979  0016A4  5033               	movf	___fladd@a+2,w,c
  7980  0016A6  582F               	subwfb	___fladd@b+2,w,c
  7981  0016A8  5030               	movf	___fladd@b+3,w,c
  7982  0016AA  0A80               	xorlw	128
  7983  0016AC  6E35               	movwf	??___fladd& (0+255),c
  7984  0016AE  5034               	movf	___fladd@a+3,w,c
  7985  0016B0  0A80               	xorlw	128
  7986  0016B2  5835               	subwfb	??___fladd& (0+255),w,c
  7987  0016B4  B0D8               	btfsc	status,0,c
  7988  0016B6  D025               	goto	l7754
  7989  0016B8  502D               	movf	___fladd@b,w,c
  7990  0016BA  5C31               	subwf	___fladd@a,w,c
  7991  0016BC  6E35               	movwf	??___fladd& (0+255),c
  7992  0016BE  502E               	movf	___fladd@b+1,w,c
  7993  0016C0  5832               	subwfb	___fladd@a+1,w,c
  7994  0016C2  6E36               	movwf	(??___fladd+1)& (0+255),c
  7995  0016C4  502F               	movf	___fladd@b+2,w,c
  7996  0016C6  5833               	subwfb	___fladd@a+2,w,c
  7997  0016C8  6E37               	movwf	(??___fladd+2)& (0+255),c
  7998  0016CA  5030               	movf	___fladd@b+3,w,c
  7999  0016CC  5834               	subwfb	___fladd@a+3,w,c
  8000  0016CE  6E38               	movwf	(??___fladd+3)& (0+255),c
  8001  0016D0  0EFF               	movlw	255
  8002  0016D2  2435               	addwf	??___fladd,w,c
  8003  0016D4  6E2D               	movwf	___fladd@b,c
  8004  0016D6  0EFF               	movlw	255
  8005  0016D8  2036               	addwfc	??___fladd+1,w,c
  8006  0016DA  6E2E               	movwf	___fladd@b+1,c
  8007  0016DC  0EFF               	movlw	255
  8008  0016DE  2037               	addwfc	??___fladd+2,w,c
  8009  0016E0  6E2F               	movwf	___fladd@b+2,c
  8010  0016E2  0EFF               	movlw	255
  8011  0016E4  2038               	addwfc	??___fladd+3,w,c
  8012  0016E6  6E30               	movwf	___fladd@b+3,c
  8013  0016E8  0E80               	movlw	128
  8014  0016EA  1A39               	xorwf	___fladd@signs,f,c
  8015  0016EC  6C3C               	negf	___fladd@grs,c
  8016  0016EE  503C               	movf	___fladd@grs,w,c
  8017  0016F0  A4D8               	btfss	status,2,c
  8018  0016F2  D00F               	goto	l1254
  8019  0016F4  0E01               	movlw	1
  8020  0016F6  262D               	addwf	___fladd@b,f,c
  8021  0016F8  0E00               	movlw	0
  8022  0016FA  222E               	addwfc	___fladd@b+1,f,c
  8023  0016FC  222F               	addwfc	___fladd@b+2,f,c
  8024  0016FE  2230               	addwfc	___fladd@b+3,f,c
  8025  001700  D008               	goto	l1254
  8026  001702                     l7754:
  8027  001702  5031               	movf	___fladd@a,w,c
  8028  001704  5E2D               	subwf	___fladd@b,f,c
  8029  001706  5032               	movf	___fladd@a+1,w,c
  8030  001708  5A2E               	subwfb	___fladd@b+1,f,c
  8031  00170A  5033               	movf	___fladd@a+2,w,c
  8032  00170C  5A2F               	subwfb	___fladd@b+2,f,c
  8033  00170E  5034               	movf	___fladd@a+3,w,c
  8034  001710  5A30               	subwfb	___fladd@b+3,f,c
  8035  001712                     l1254:
  8036  001712  502D               	movf	___fladd@b,w,c
  8037  001714  102E               	iorwf	___fladd@b+1,w,c
  8038  001716  102F               	iorwf	___fladd@b+2,w,c
  8039  001718  1030               	iorwf	___fladd@b+3,w,c
  8040  00171A  A4D8               	btfss	status,2,c
  8041  00171C  D01C               	goto	l7778
  8042  00171E  503C               	movf	___fladd@grs,w,c
  8043  001720  A4D8               	btfss	status,2,c
  8044  001722  D019               	goto	l7778
  8045  001724  0E00               	movlw	0
  8046  001726  6E2D               	movwf	?___fladd,c
  8047  001728  0E00               	movlw	0
  8048  00172A  6E2E               	movwf	?___fladd+1,c
  8049  00172C  0E00               	movlw	0
  8050  00172E  6E2F               	movwf	?___fladd+2,c
  8051  001730  0E00               	movlw	0
  8052  001732  6E30               	movwf	?___fladd+3,c
  8053  001734  0012               	return	
  8054  001736                     l7762:
  8055  001736  90D8               	bcf	status,0,c
  8056  001738  362D               	rlcf	___fladd@b,f,c
  8057  00173A  362E               	rlcf	___fladd@b+1,f,c
  8058  00173C  362F               	rlcf	___fladd@b+2,f,c
  8059  00173E  3630               	rlcf	___fladd@b+3,f,c
  8060  001740  BE3C               	btfsc	___fladd@grs,7,c
  8061  001742  802D               	bsf	___fladd@b,0,c
  8062  001744  A03C               	btfss	___fladd@grs,0,c
  8063  001746  D002               	goto	l7772
  8064  001748  80D8               	bsf	status,0,c
  8065  00174A  D001               	goto	L15
  8066  00174C                     l7772:
  8067  00174C  90D8               	bcf	status,0,c
  8068  00174E                     L15:
  8069  00174E  363C               	rlcf	___fladd@grs,f,c
  8070  001750  503B               	movf	___fladd@bexp,w,c
  8071  001752  A4D8               	btfss	status,2,c
  8072  001754  063B               	decf	___fladd@bexp,f,c
  8073  001756                     l7778:
  8074  001756  AE2F               	btfss	___fladd@b+2,7,c
  8075  001758  D7EE               	goto	l7762
  8076  00175A                     u9010:
  8077  00175A  0E00               	movlw	0
  8078  00175C  6E3A               	movwf	___fladd@aexp,c
  8079  00175E  AE3C               	btfss	___fladd@grs,7,c
  8080  001760  D00B               	goto	l1263
  8081  001762  C03C  F035         	movff	___fladd@grs,??___fladd
  8082  001766  0E7F               	movlw	127
  8083  001768  1635               	andwf	??___fladd,f,c
  8084  00176A  B4D8               	btfsc	status,2,c
  8085  00176C  D003               	goto	l1264
  8086  00176E                     u9030:
  8087  00176E  0E01               	movlw	1
  8088  001770  6E3A               	movwf	___fladd@aexp,c
  8089  001772  D002               	goto	l1263
  8090  001774                     l1264:
  8091  001774  B02D               	btfsc	___fladd@b,0,c
  8092  001776  D7FB               	goto	u9030
  8093  001778                     l1263:
  8094  001778  503A               	movf	___fladd@aexp,w,c
  8095  00177A  B4D8               	btfsc	status,2,c
  8096  00177C  D020               	goto	l7798
  8097  00177E  0E01               	movlw	1
  8098  001780  262D               	addwf	___fladd@b,f,c
  8099  001782  0E00               	movlw	0
  8100  001784  222E               	addwfc	___fladd@b+1,f,c
  8101  001786  222F               	addwfc	___fladd@b+2,f,c
  8102  001788  2230               	addwfc	___fladd@b+3,f,c
  8103  00178A  A030               	btfss	___fladd@b+3,0,c
  8104  00178C  D018               	goto	l7798
  8105  00178E  C02D  F035         	movff	___fladd@b,??___fladd
  8106  001792  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  8107  001796  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  8108  00179A  C030  F038         	movff	___fladd@b+3,??___fladd+3
  8109  00179E  3438               	rlcf	??___fladd+3,w,c
  8110  0017A0  3238               	rrcf	??___fladd+3,f,c
  8111  0017A2  3237               	rrcf	??___fladd+2,f,c
  8112  0017A4  3236               	rrcf	??___fladd+1,f,c
  8113  0017A6  3235               	rrcf	??___fladd,f,c
  8114  0017A8  C035  F02D         	movff	??___fladd,___fladd@b
  8115  0017AC  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  8116  0017B0  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  8117  0017B4  C038  F030         	movff	??___fladd+3,___fladd@b+3
  8118  0017B8  283B               	incf	___fladd@bexp,w,c
  8119  0017BA  A4D8               	btfss	status,2,c
  8120  0017BC  2A3B               	incf	___fladd@bexp,f,c
  8121  0017BE                     l7798:
  8122  0017BE  283B               	incf	___fladd@bexp,w,c
  8123  0017C0  B4D8               	btfsc	status,2,c
  8124  0017C2  D003               	goto	u9090
  8125  0017C4  503B               	movf	___fladd@bexp,w,c
  8126  0017C6  A4D8               	btfss	status,2,c
  8127  0017C8  D00D               	goto	l7806
  8128  0017CA                     u9090:
  8129  0017CA  0E00               	movlw	0
  8130  0017CC  6E2D               	movwf	___fladd@b,c
  8131  0017CE  0E00               	movlw	0
  8132  0017D0  6E2E               	movwf	___fladd@b+1,c
  8133  0017D2  0E00               	movlw	0
  8134  0017D4  6E2F               	movwf	___fladd@b+2,c
  8135  0017D6  0E00               	movlw	0
  8136  0017D8  6E30               	movwf	___fladd@b+3,c
  8137  0017DA  503B               	movf	___fladd@bexp,w,c
  8138  0017DC  A4D8               	btfss	status,2,c
  8139  0017DE  D002               	goto	l7806
  8140  0017E0  0E00               	movlw	0
  8141  0017E2  6E39               	movwf	___fladd@signs,c
  8142  0017E4                     l7806:
  8143  0017E4  A03B               	btfss	___fladd@bexp,0,c
  8144  0017E6  D002               	goto	l7810
  8145  0017E8  8E2F               	bsf	___fladd@b+2,7,c
  8146  0017EA  D001               	goto	l7812
  8147  0017EC                     l7810:
  8148  0017EC  9E2F               	bcf	___fladd@b+2,7,c
  8149  0017EE                     l7812:
  8150  0017EE  90D8               	bcf	status,0,c
  8151  0017F0  303B               	rrcf	___fladd@bexp,w,c
  8152  0017F2  6E30               	movwf	___fladd@b+3,c
  8153  0017F4  BE39               	btfsc	___fladd@signs,7,c
  8154  0017F6  8E30               	bsf	___fladd@b+3,7,c
  8155  0017F8  C02D  F02D         	movff	___fladd@b,?___fladd
  8156  0017FC  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  8157  001800  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  8158  001804  C030  F030         	movff	___fladd@b+3,?___fladd+3
  8159  001808  0012               	return		;funcret
  8160  00180A                     __end_of___fladd:
  8161                           	opt callstack 0
  8162                           
  8163 ;; *************** function ___awmod *****************
  8164 ;; Defined at:
  8165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  dividend        2    5[COMRAM] int 
  8168 ;;  divisor         2    7[COMRAM] int 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  sign            1   10[COMRAM] unsigned char 
  8171 ;;  counter         1    9[COMRAM] unsigned char 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  2    5[COMRAM] int 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;Total ram usage:        6 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    2
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_doOperation
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text31
  8196  0030BC                     __ptext31:
  8197                           	opt callstack 0
  8198  0030BC                     ___awmod:
  8199                           	opt callstack 27
  8200                           
  8201                           ;incstack = 0
  8202  0030BC  0E00               	movlw	0
  8203  0030BE  6E0B               	movwf	___awmod@sign,c
  8204  0030C0  AE07               	btfss	___awmod@dividend+1,7,c
  8205  0030C2  D006               	goto	l8218
  8206  0030C4  6C06               	negf	___awmod@dividend,c
  8207  0030C6  1E07               	comf	___awmod@dividend+1,f,c
  8208  0030C8  B0D8               	btfsc	status,0,c
  8209  0030CA  2A07               	incf	___awmod@dividend+1,f,c
  8210  0030CC  0E01               	movlw	1
  8211  0030CE  6E0B               	movwf	___awmod@sign,c
  8212  0030D0                     l8218:
  8213  0030D0  AE09               	btfss	___awmod@divisor+1,7,c
  8214  0030D2  D004               	goto	l8222
  8215  0030D4  6C08               	negf	___awmod@divisor,c
  8216  0030D6  1E09               	comf	___awmod@divisor+1,f,c
  8217  0030D8  B0D8               	btfsc	status,0,c
  8218  0030DA  2A09               	incf	___awmod@divisor+1,f,c
  8219  0030DC                     l8222:
  8220  0030DC  5008               	movf	___awmod@divisor,w,c
  8221  0030DE  1009               	iorwf	___awmod@divisor+1,w,c
  8222  0030E0  B4D8               	btfsc	status,2,c
  8223  0030E2  D018               	goto	l8238
  8224  0030E4  0E01               	movlw	1
  8225  0030E6  6E0A               	movwf	___awmod@counter,c
  8226  0030E8  D004               	goto	l8228
  8227  0030EA                     l8226:
  8228  0030EA  90D8               	bcf	status,0,c
  8229  0030EC  3608               	rlcf	___awmod@divisor,f,c
  8230  0030EE  3609               	rlcf	___awmod@divisor+1,f,c
  8231  0030F0  2A0A               	incf	___awmod@counter,f,c
  8232  0030F2                     l8228:
  8233  0030F2  AE09               	btfss	___awmod@divisor+1,7,c
  8234  0030F4  D7FA               	goto	l8226
  8235  0030F6                     u9580:
  8236  0030F6  5008               	movf	___awmod@divisor,w,c
  8237  0030F8  5C06               	subwf	___awmod@dividend,w,c
  8238  0030FA  5009               	movf	___awmod@divisor+1,w,c
  8239  0030FC  5807               	subwfb	___awmod@dividend+1,w,c
  8240  0030FE  A0D8               	btfss	status,0,c
  8241  003100  D004               	goto	l8234
  8242  003102  5008               	movf	___awmod@divisor,w,c
  8243  003104  5E06               	subwf	___awmod@dividend,f,c
  8244  003106  5009               	movf	___awmod@divisor+1,w,c
  8245  003108  5A07               	subwfb	___awmod@dividend+1,f,c
  8246  00310A                     l8234:
  8247  00310A  90D8               	bcf	status,0,c
  8248  00310C  3209               	rrcf	___awmod@divisor+1,f,c
  8249  00310E  3208               	rrcf	___awmod@divisor,f,c
  8250  003110  2E0A               	decfsz	___awmod@counter,f,c
  8251  003112  D7F1               	goto	u9580
  8252  003114                     l8238:
  8253  003114  500B               	movf	___awmod@sign,w,c
  8254  003116  B4D8               	btfsc	status,2,c
  8255  003118  D004               	goto	l8242
  8256  00311A  6C06               	negf	___awmod@dividend,c
  8257  00311C  1E07               	comf	___awmod@dividend+1,f,c
  8258  00311E  B0D8               	btfsc	status,0,c
  8259  003120  2A07               	incf	___awmod@dividend+1,f,c
  8260  003122                     l8242:
  8261  003122  C006  F006         	movff	___awmod@dividend,?___awmod
  8262  003126  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  8263  00312A  0012               	return		;funcret
  8264  00312C                     __end_of___awmod:
  8265                           	opt callstack 0
  8266                           
  8267 ;; *************** function _TIMER_INIT *****************
  8268 ;; Defined at:
  8269 ;;		line 218 in file "main.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    2
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_doOperation
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text32
  8298  0038BE                     __ptext32:
  8299                           	opt callstack 0
  8300  0038BE                     _TIMER_INIT:
  8301                           	opt callstack 27
  8302                           
  8303                           ;main.c: 219:     T0CONbits.TMR0ON = 0;
  8304                           
  8305                           ;incstack = 0
  8306  0038BE  9ED5               	bcf	4053,7,c	;volatile
  8307                           
  8308                           ;main.c: 220:     T0CONbits.T08BIT = 0;
  8309  0038C0  9CD5               	bcf	4053,6,c	;volatile
  8310                           
  8311                           ;main.c: 221:     T0CONbits.T0CS = 0;
  8312  0038C2  9AD5               	bcf	4053,5,c	;volatile
  8313                           
  8314                           ;main.c: 222:     T0CONbits.PSA = 0;
  8315  0038C4  96D5               	bcf	4053,3,c	;volatile
  8316                           
  8317                           ;main.c: 223:     T0CONbits.T0PS = 0b000;
  8318  0038C6  0EF8               	movlw	-8
  8319  0038C8  16D5               	andwf	4053,f,c	;volatile
  8320                           
  8321                           ;main.c: 224:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  8322  0038CA  0EFB               	movlw	251
  8323  0038CC  6ED7               	movwf	4055,c	;volatile
  8324                           
  8325                           ;main.c: 225:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  8326  0038CE  0E1E               	movlw	30
  8327  0038D0  6ED6               	movwf	4054,c	;volatile
  8328                           
  8329                           ;main.c: 226:     T0CONbits.TMR0ON = 1;
  8330  0038D2  8ED5               	bsf	4053,7,c	;volatile
  8331                           
  8332                           ;main.c: 227:     INTCONbits.TMR0IE = 1;
  8333  0038D4  8AF2               	bsf	4082,5,c	;volatile
  8334                           
  8335                           ;main.c: 229:     INTCONbits.GIE = 1;
  8336  0038D6  8EF2               	bsf	4082,7,c	;volatile
  8337                           
  8338                           ;main.c: 230:     INTCONbits.PEIE = 1;
  8339  0038D8  8CF2               	bsf	4082,6,c	;volatile
  8340  0038DA  0012               	return		;funcret
  8341  0038DC                     __end_of_TIMER_INIT:
  8342                           	opt callstack 0
  8343                           
  8344 ;; *************** function _doDisplayLog *****************
  8345 ;; Defined at:
  8346 ;;		line 43 in file "main.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  logNumber       2   14[BANK0 ] int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  keyValue        1   22[BANK0 ] unsigned char 
  8351 ;;  keypress        1   20[BANK0 ] unsigned char 
  8352 ;;  currentPole     2   23[BANK0 ] int 
  8353 ;;  currentDispl    1   21[BANK0 ] enum E3250
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;Total ram usage:       13 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:   13
  8370 ;; This function calls:
  8371 ;;		___wmul
  8372 ;;		_lcdInst
  8373 ;;		_printf
  8374 ;; This function is called by:
  8375 ;;		_main
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text33
  8380  000DFE                     __ptext33:
  8381                           	opt callstack 0
  8382  000DFE                     _doDisplayLog:
  8383                           	opt callstack 17
  8384                           
  8385                           ;main.c: 44:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  8386                           
  8387                           ;incstack = 0
  8388  000DFE  0E80               	movlw	128
  8389  000E00  EC9D  F01C         	call	_lcdInst
  8390  000E04  0E07               	movlw	7
  8391  000E06  0100               	movlb	0	; () banked
  8392  000E08  6F90               	movwf	??_doDisplayLog& (0+255),b
  8393  000E0A  0E7D               	movlw	125
  8394  000E0C                     u10267:
  8395  000E0C  2EE8               	decfsz	wreg,f,c
  8396  000E0E  D7FE               	bra	u10267
  8397  000E10  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8398  000E12  D7FC               	bra	u10267
  8399                           
  8400                           ;main.c: 49:     int currentPole = 1;
  8401  000E14  0E00               	movlw	0
  8402  000E16  0100               	movlb	0	; () banked
  8403  000E18  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8404  000E1A  0E01               	movlw	1
  8405  000E1C  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;main.c: 51:     enum displayStates currentDisplayState = opTime;
  8409  000E1E  0E00               	movlw	0
  8410  000E20  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8411  000E22  D134               	goto	l8302
  8412  000E24                     l8254:
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;main.c: 56:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8416  000E24  0E80               	movlw	128
  8417  000E26  EC9D  F01C         	call	_lcdInst
  8418  000E2A  0E07               	movlw	7
  8419  000E2C  0100               	movlb	0	; () banked
  8420  000E2E  6F90               	movwf	??_doDisplayLog& (0+255),b
  8421  000E30  0E7D               	movlw	125
  8422  000E32                     u10277:
  8423  000E32  2EE8               	decfsz	wreg,f,c
  8424  000E34  D7FE               	bra	u10277
  8425  000E36  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8426  000E38  D7FC               	bra	u10277
  8427                           
  8428                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8429  000E3A  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8430  000E3E  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8431  000E42  0E00               	movlw	0
  8432  000E44  6E09               	movwf	___wmul@multiplicand+1,c
  8433  000E46  0E60               	movlw	96
  8434  000E48  6E08               	movwf	___wmul@multiplicand,c
  8435  000E4A  EC07  F01C         	call	___wmul	;wreg free
  8436  000E4E  0E41               	movlw	low _logs
  8437  000E50  2406               	addwf	?___wmul,w,c
  8438  000E52  6ED9               	movwf	fsr2l,c
  8439  000E54  0E01               	movlw	high _logs
  8440  000E56  2007               	addwfc	?___wmul+1,w,c
  8441  000E58  6EDA               	movwf	fsr2h,c
  8442  000E5A  CFDE F099          	movff	postinc2,_doDisplayLog$2223
  8443  000E5E  CFDD F09A          	movff	postdec2,_doDisplayLog$2223+1
  8444                           
  8445                           ;main.c: 57:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  8446  000E62  0E14               	movlw	low STR_1
  8447  000E64  0100               	movlb	0	; () banked
  8448  000E66  6F80               	movwf	printf@fmt& (0+255),b
  8449  000E68  0EFD               	movlw	high STR_1
  8450  000E6A  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8451  000E6C  0EC8               	movlw	low STR_2
  8452  000E6E  6F82               	movwf	(?_printf+2)& (0+255),b
  8453  000E70  0EFC               	movlw	high STR_2
  8454  000E72  6F83               	movwf	(?_printf+3)& (0+255),b
  8455  000E74  C099  F084         	movff	_doDisplayLog$2223,?_printf+4
  8456  000E78  C09A  F085         	movff	_doDisplayLog$2223+1,?_printf+5
  8457  000E7C  0E19               	movlw	low (STR_1+5)
  8458  000E7E  6F86               	movwf	(?_printf+6)& (0+255),b
  8459  000E80  0EFD               	movlw	high (STR_1+5)
  8460  000E82  6F87               	movwf	(?_printf+7)& (0+255),b
  8461  000E84  ECF3  F01B         	call	_printf	;wreg free
  8462  000E88  0EC0               	movlw	192
  8463  000E8A  EC9D  F01C         	call	_lcdInst
  8464                           
  8465                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8466  000E8E  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8467  000E92  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8468  000E96  0E00               	movlw	0
  8469  000E98  6E09               	movwf	___wmul@multiplicand+1,c
  8470  000E9A  0E60               	movlw	96
  8471  000E9C  6E08               	movwf	___wmul@multiplicand,c
  8472  000E9E  EC07  F01C         	call	___wmul	;wreg free
  8473  000EA2  0E43               	movlw	low (_logs+2)
  8474  000EA4  2406               	addwf	?___wmul,w,c
  8475  000EA6  6ED9               	movwf	fsr2l,c
  8476  000EA8  0E01               	movlw	high (_logs+2)
  8477  000EAA  2007               	addwfc	?___wmul+1,w,c
  8478  000EAC  6EDA               	movwf	fsr2h,c
  8479  000EAE  CFDE F099          	movff	postinc2,_doDisplayLog$2223
  8480  000EB2  CFDD F09A          	movff	postdec2,_doDisplayLog$2223+1
  8481                           
  8482                           ;main.c: 59:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  8483  000EB6  0E0F               	movlw	low (STR_10+4)
  8484  000EB8  0100               	movlb	0	; () banked
  8485  000EBA  6F80               	movwf	printf@fmt& (0+255),b
  8486  000EBC  0EFD               	movlw	high (STR_10+4)
  8487  000EBE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8488  000EC0  0EE8               	movlw	low STR_5
  8489  000EC2  6F82               	movwf	(?_printf+2)& (0+255),b
  8490  000EC4  0EFB               	movlw	high STR_5
  8491  000EC6  6F83               	movwf	(?_printf+3)& (0+255),b
  8492  000EC8  C099  F084         	movff	_doDisplayLog$2223,?_printf+4
  8493  000ECC  C09A  F085         	movff	_doDisplayLog$2223+1,?_printf+5
  8494  000ED0  ECF3  F01B         	call	_printf	;wreg free
  8495  000ED4  0E90               	movlw	144
  8496  000ED6  EC9D  F01C         	call	_lcdInst
  8497                           
  8498                           ;main.c: 61:                 printf("%s","(1) POLE INFO");
  8499  000EDA  0E18               	movlw	low (STR_1+4)
  8500  000EDC  0100               	movlb	0	; () banked
  8501  000EDE  6F80               	movwf	printf@fmt& (0+255),b
  8502  000EE0  0EFD               	movlw	high (STR_1+4)
  8503  000EE2  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8504  000EE4  0E31               	movlw	low STR_7
  8505  000EE6  6F82               	movwf	(?_printf+2)& (0+255),b
  8506  000EE8  0EFC               	movlw	high STR_7
  8507  000EEA  6F83               	movwf	(?_printf+3)& (0+255),b
  8508  000EEC  ECF3  F01B         	call	_printf	;wreg free
  8509  000EF0  0ED0               	movlw	208
  8510  000EF2  EC9D  F01C         	call	_lcdInst
  8511                           
  8512                           ;main.c: 63:                 printf("%s","(2) SAVE & EXIT");
  8513  000EF6  0E18               	movlw	low (STR_1+4)
  8514  000EF8  0100               	movlb	0	; () banked
  8515  000EFA  6F80               	movwf	printf@fmt& (0+255),b
  8516  000EFC  0EFD               	movlw	high (STR_1+4)
  8517  000EFE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8518  000F00  0EC8               	movlw	low STR_9
  8519  000F02  6F82               	movwf	(?_printf+2)& (0+255),b
  8520  000F04  0EFB               	movlw	high STR_9
  8521  000F06  6F83               	movwf	(?_printf+3)& (0+255),b
  8522  000F08  ECF3  F01B         	call	_printf	;wreg free
  8523                           
  8524                           ;main.c: 64:                 break;
  8525  000F0C  D0CE               	goto	l8304
  8526  000F0E                     l8276:
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;main.c: 66:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  8530  000F0E  0E80               	movlw	128
  8531  000F10  EC9D  F01C         	call	_lcdInst
  8532  000F14  0E07               	movlw	7
  8533  000F16  0100               	movlb	0	; () banked
  8534  000F18  6F90               	movwf	??_doDisplayLog& (0+255),b
  8535  000F1A  0E7D               	movlw	125
  8536  000F1C                     u10287:
  8537  000F1C  2EE8               	decfsz	wreg,f,c
  8538  000F1E  D7FE               	bra	u10287
  8539  000F20  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8540  000F22  D7FC               	bra	u10287
  8541                           
  8542                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8543  000F24  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8544  000F28  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8545  000F2C  0E00               	movlw	0
  8546  000F2E  6E09               	movwf	___wmul@multiplicand+1,c
  8547  000F30  0E60               	movlw	96
  8548  000F32  6E08               	movwf	___wmul@multiplicand,c
  8549  000F34  EC07  F01C         	call	___wmul	;wreg free
  8550  000F38  0E45               	movlw	low (_logs+4)
  8551  000F3A  2406               	addwf	?___wmul,w,c
  8552  000F3C  6ED9               	movwf	fsr2l,c
  8553  000F3E  0E01               	movlw	high (_logs+4)
  8554  000F40  2007               	addwfc	?___wmul+1,w,c
  8555  000F42  6EDA               	movwf	fsr2h,c
  8556  000F44  CFDE F099          	movff	postinc2,_doDisplayLog$2223
  8557  000F48  CFDD F09A          	movff	postdec2,_doDisplayLog$2223+1
  8558                           
  8559                           ;main.c: 67:                 printf("%s%d%s%d", "POLE ", currentPole,"/", logs[logNumber
      +                          ][2]);
  8560  000F4C  0E0B               	movlw	low STR_10
  8561  000F4E  0100               	movlb	0	; () banked
  8562  000F50  6F80               	movwf	printf@fmt& (0+255),b
  8563  000F52  0EFD               	movlw	high STR_10
  8564  000F54  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8565  000F56  0E1B               	movlw	low STR_11
  8566  000F58  6F82               	movwf	(?_printf+2)& (0+255),b
  8567  000F5A  0EFD               	movlw	high STR_11
  8568  000F5C  6F83               	movwf	(?_printf+3)& (0+255),b
  8569  000F5E  C097  F084         	movff	doDisplayLog@currentPole,?_printf+4
  8570  000F62  C098  F085         	movff	doDisplayLog@currentPole+1,?_printf+5
  8571  000F66  0E2D               	movlw	low STR_12
  8572  000F68  6F86               	movwf	(?_printf+6)& (0+255),b
  8573  000F6A  0EFD               	movlw	high STR_12
  8574  000F6C  6F87               	movwf	(?_printf+7)& (0+255),b
  8575  000F6E  C099  F088         	movff	_doDisplayLog$2223,?_printf+8
  8576  000F72  C09A  F089         	movff	_doDisplayLog$2223+1,?_printf+9
  8577  000F76  ECF3  F01B         	call	_printf	;wreg free
  8578  000F7A  0EC0               	movlw	192
  8579  000F7C  EC9D  F01C         	call	_lcdInst
  8580                           
  8581                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8582  000F80  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8583  000F84  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8584  000F88  90D8               	bcf	status,0,c
  8585  000F8A  0100               	movlb	0	; () banked
  8586  000F8C  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8587  000F8E  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8588  000F90  90D8               	bcf	status,0,c
  8589  000F92  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8590  000F94  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8591  000F96  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8592  000F9A  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8593  000F9E  0E00               	movlw	0
  8594  000FA0  6E09               	movwf	___wmul@multiplicand+1,c
  8595  000FA2  0E60               	movlw	96
  8596  000FA4  6E08               	movwf	___wmul@multiplicand,c
  8597  000FA6  EC07  F01C         	call	___wmul	;wreg free
  8598  000FAA  0E41               	movlw	low _logs
  8599  000FAC  0100               	movlb	0	; () banked
  8600  000FAE  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8601  000FB0  0E01               	movlw	high _logs
  8602  000FB2  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8603  000FB4  0E02               	movlw	2
  8604  000FB6  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8605  000FB8  0E00               	movlw	0
  8606  000FBA  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8607  000FBC  5006               	movf	?___wmul,w,c
  8608  000FBE  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8609  000FC0  5007               	movf	?___wmul+1,w,c
  8610  000FC2  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8611  000FC4  5190               	movf	??_doDisplayLog& (0+255),w,b
  8612  000FC6  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8613  000FC8  6ED9               	movwf	fsr2l,c
  8614  000FCA  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8615  000FCC  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8616  000FCE  6EDA               	movwf	fsr2h,c
  8617  000FD0  CFDE F099          	movff	postinc2,_doDisplayLog$2223
  8618  000FD4  CFDD F09A          	movff	postdec2,_doDisplayLog$2223+1
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;main.c: 69:                 printf("%s%d","TIR. DEPLOY: ", logs[logNumber][3+(currentPo
      +                          le-1)*2]);
  8622  000FD8  0E0F               	movlw	low (STR_10+4)
  8623  000FDA  6F80               	movwf	printf@fmt& (0+255),b
  8624  000FDC  0EFD               	movlw	high (STR_10+4)
  8625  000FDE  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8626  000FE0  0E15               	movlw	low STR_14
  8627  000FE2  6F82               	movwf	(?_printf+2)& (0+255),b
  8628  000FE4  0EFC               	movlw	high STR_14
  8629  000FE6  6F83               	movwf	(?_printf+3)& (0+255),b
  8630  000FE8  C099  F084         	movff	_doDisplayLog$2223,?_printf+4
  8631  000FEC  C09A  F085         	movff	_doDisplayLog$2223+1,?_printf+5
  8632  000FF0  ECF3  F01B         	call	_printf	;wreg free
  8633  000FF4  0E90               	movlw	144
  8634  000FF6  EC9D  F01C         	call	_lcdInst
  8635                           
  8636                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8637  000FFA  C097  F090         	movff	doDisplayLog@currentPole,??_doDisplayLog
  8638  000FFE  C098  F091         	movff	doDisplayLog@currentPole+1,??_doDisplayLog+1
  8639  001002  90D8               	bcf	status,0,c
  8640  001004  0100               	movlb	0	; () banked
  8641  001006  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8642  001008  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8643  00100A  90D8               	bcf	status,0,c
  8644  00100C  3790               	rlcf	??_doDisplayLog& (0+255),f,b
  8645  00100E  3791               	rlcf	(??_doDisplayLog+1)& (0+255),f,b
  8646  001010  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8647  001014  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8648  001018  0E00               	movlw	0
  8649  00101A  6E09               	movwf	___wmul@multiplicand+1,c
  8650  00101C  0E60               	movlw	96
  8651  00101E  6E08               	movwf	___wmul@multiplicand,c
  8652  001020  EC07  F01C         	call	___wmul	;wreg free
  8653  001024  0E41               	movlw	low _logs
  8654  001026  0100               	movlb	0	; () banked
  8655  001028  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8656  00102A  0E01               	movlw	high _logs
  8657  00102C  6F93               	movwf	(??_doDisplayLog+3)& (0+255),b
  8658  00102E  0E04               	movlw	4
  8659  001030  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8660  001032  0E00               	movlw	0
  8661  001034  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8662  001036  5006               	movf	?___wmul,w,c
  8663  001038  2792               	addwf	(??_doDisplayLog+2)& (0+255),f,b
  8664  00103A  5007               	movf	?___wmul+1,w,c
  8665  00103C  2393               	addwfc	(??_doDisplayLog+3)& (0+255),f,b
  8666  00103E  5190               	movf	??_doDisplayLog& (0+255),w,b
  8667  001040  2592               	addwf	(??_doDisplayLog+2)& (0+255),w,b
  8668  001042  6ED9               	movwf	fsr2l,c
  8669  001044  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8670  001046  2193               	addwfc	(??_doDisplayLog+3)& (0+255),w,b
  8671  001048  6EDA               	movwf	fsr2h,c
  8672  00104A  CFDE F099          	movff	postinc2,_doDisplayLog$2223
  8673  00104E  CFDD F09A          	movff	postdec2,_doDisplayLog$2223+1
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;main.c: 71:                 printf("%s%d","TIRE. ON POLE: ", logs[logNumber][4+(current
      +                          Pole-1)*2]);
  8677  001052  0E0F               	movlw	low (STR_10+4)
  8678  001054  6F80               	movwf	printf@fmt& (0+255),b
  8679  001056  0EFD               	movlw	high (STR_10+4)
  8680  001058  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8681  00105A  0EA8               	movlw	low STR_16
  8682  00105C  6F82               	movwf	(?_printf+2)& (0+255),b
  8683  00105E  0EFB               	movlw	high STR_16
  8684  001060  6F83               	movwf	(?_printf+3)& (0+255),b
  8685  001062  C099  F084         	movff	_doDisplayLog$2223,?_printf+4
  8686  001066  C09A  F085         	movff	_doDisplayLog$2223+1,?_printf+5
  8687  00106A  ECF3  F01B         	call	_printf	;wreg free
  8688  00106E  0ED0               	movlw	208
  8689  001070  EC9D  F01C         	call	_lcdInst
  8690                           
  8691                           ;main.c: 73:                 printf("%s","1<- 2-> 3MENU");
  8692  001074  0E18               	movlw	low (STR_1+4)
  8693  001076  0100               	movlb	0	; () banked
  8694  001078  6F80               	movwf	printf@fmt& (0+255),b
  8695  00107A  0EFD               	movlw	high (STR_1+4)
  8696  00107C  6F81               	movwf	(printf@fmt+1)& (0+255),b
  8697  00107E  0E4D               	movlw	low STR_18
  8698  001080  6F82               	movwf	(?_printf+2)& (0+255),b
  8699  001082  0EFC               	movlw	high STR_18
  8700  001084  6F83               	movwf	(?_printf+3)& (0+255),b
  8701  001086  ECF3  F01B         	call	_printf	;wreg free
  8702                           
  8703                           ;main.c: 74:                 break;
  8704  00108A  D00F               	goto	l8304
  8705  00108C                     l8302:
  8706  00108C  0100               	movlb	0	; () banked
  8707  00108E  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8708  001090  6F90               	movwf	??_doDisplayLog& (0+255),b
  8709  001092  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8710                           
  8711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8712                           ; Switch size 1, requested type "simple"
  8713                           ; Number of cases is 1, Range of values is 0 to 0
  8714                           ; switch strategies available:
  8715                           ; Name         Instructions Cycles
  8716                           ; simple_byte            4     3 (average)
  8717                           ;	Chosen strategy is simple_byte
  8718  001094  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8719  001096  0A00               	xorlw	0	; case 0
  8720  001098  A4D8               	btfss	status,2,c
  8721  00109A  D007               	goto	l8304
  8722                           
  8723                           ; BSR set to: 0
  8724                           ; Switch size 1, requested type "simple"
  8725                           ; Number of cases is 2, Range of values is 0 to 1
  8726                           ; switch strategies available:
  8727                           ; Name         Instructions Cycles
  8728                           ; simple_byte            7     4 (average)
  8729                           ;	Chosen strategy is simple_byte
  8730  00109C  5190               	movf	??_doDisplayLog& (0+255),w,b
  8731  00109E  0A00               	xorlw	0	; case 0
  8732  0010A0  B4D8               	btfsc	status,2,c
  8733  0010A2  D6C0               	goto	l8254
  8734  0010A4  0A01               	xorlw	1	; case 1
  8735  0010A6  B4D8               	btfsc	status,2,c
  8736  0010A8  D732               	goto	l8276
  8737  0010AA                     l8304:
  8738                           
  8739                           ;main.c: 77:         if(keyPressed){
  8740  0010AA  0100               	movlb	0	; () banked
  8741  0010AC  51F5               	movf	_keyPressed& (0+255),w,b	;volatile
  8742  0010AE  B4D8               	btfsc	status,2,c
  8743  0010B0  D073               	goto	l8344
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;main.c: 80:             keyPressed = 0;
  8747  0010B2  0E00               	movlw	0
  8748  0010B4  6FF5               	movwf	_keyPressed& (0+255),b	;volatile
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;main.c: 83:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  8752  0010B6  3881               	swapf	3969,w,c	;volatile
  8753  0010B8  0B0F               	andlw	15
  8754  0010BA  0B0F               	andlw	15
  8755  0010BC  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;main.c: 84:             char keyValue = keys[keypress];
  8759  0010BE  0E85               	movlw	low _keys
  8760  0010C0  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  8761  0010C2  6EF6               	movwf	tblptrl,c
  8762  0010C4  6AF7               	clrf	tblptrh,c
  8763  0010C6  0EFB               	movlw	high _keys
  8764  0010C8  22F7               	addwfc	tblptrh,f,c
  8765  0010CA                     	if	0	;There are less than 3 active tblptr bytes
  8766  0010CA                     	endif
  8767  0010CA  0008               	tblrd		*
  8768  0010CC  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;main.c: 85:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  8772  0010D0  0E01               	movlw	1
  8773  0010D2  EC9D  F01C         	call	_lcdInst
  8774  0010D6  0E11               	movlw	17
  8775  0010D8  0100               	movlb	0	; () banked
  8776  0010DA  6F90               	movwf	??_doDisplayLog& (0+255),b
  8777  0010DC  0E3A               	movlw	58
  8778  0010DE                     u10297:
  8779  0010DE  2EE8               	decfsz	wreg,f,c
  8780  0010E0  D7FE               	bra	u10297
  8781  0010E2  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8782  0010E4  D7FC               	bra	u10297
  8783  0010E6  F000               	nop	
  8784                           
  8785                           ;main.c: 86:             switch (currentDisplayState){
  8786  0010E8  D048               	goto	l8342
  8787  0010EA                     l8316:
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;main.c: 88:                     if (keyValue == '1'){
  8791  0010EA  0E31               	movlw	49
  8792  0010EC  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8793  0010EE  A4D8               	btfss	status,2,c
  8794  0010F0  D003               	goto	l8320
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;main.c: 89:                         currentDisplayState = pole;
  8798  0010F2  0E01               	movlw	1
  8799  0010F4  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8800                           
  8801                           ;main.c: 90:                     } else if (keyValue == '2'){
  8802  0010F6  D050               	goto	l8344
  8803  0010F8                     l8320:
  8804                           
  8805                           ; BSR set to: 0
  8806  0010F8  0E32               	movlw	50
  8807  0010FA  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8808  0010FC  B4D8               	btfsc	status,2,c
  8809  0010FE  0012               	return	
  8810  001100  D04B               	goto	l8344
  8811  001102                     l8324:
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;main.c: 95:                     if (keyValue == '3'){
  8815  001102  0E33               	movlw	51
  8816  001104  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8817  001106  A4D8               	btfss	status,2,c
  8818  001108  D007               	goto	l8328
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;main.c: 96:                         currentDisplayState = opTime;
  8822  00110A  0E00               	movlw	0
  8823  00110C  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  8824                           
  8825                           ;main.c: 97:                         currentPole = 1;
  8826  00110E  0E00               	movlw	0
  8827  001110  6F98               	movwf	(doDisplayLog@currentPole+1)& (0+255),b
  8828  001112  0E01               	movlw	1
  8829  001114  6F97               	movwf	doDisplayLog@currentPole& (0+255),b
  8830                           
  8831                           ;main.c: 99:                     } else if (keyValue == '2'){
  8832  001116  D040               	goto	l8344
  8833  001118                     l8328:
  8834                           
  8835                           ; BSR set to: 0
  8836  001118  0E32               	movlw	50
  8837  00111A  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8838  00111C  A4D8               	btfss	status,2,c
  8839  00111E  D01E               	goto	l8334
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;main.c: 100:                         if(currentPole < logs[logNumber][2]){
  8843  001120  C08E  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  8844  001124  C08F  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  8845  001128  0E00               	movlw	0
  8846  00112A  6E09               	movwf	___wmul@multiplicand+1,c
  8847  00112C  0E60               	movlw	96
  8848  00112E  6E08               	movwf	___wmul@multiplicand,c
  8849  001130  EC07  F01C         	call	___wmul	;wreg free
  8850  001134  0E45               	movlw	low (_logs+4)
  8851  001136  2406               	addwf	?___wmul,w,c
  8852  001138  6ED9               	movwf	fsr2l,c
  8853  00113A  0E01               	movlw	high (_logs+4)
  8854  00113C  2007               	addwfc	?___wmul+1,w,c
  8855  00113E  6EDA               	movwf	fsr2h,c
  8856  001140  50DE               	movf	postinc2,w,c
  8857  001142  0100               	movlb	0	; () banked
  8858  001144  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8859  001146  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8860  001148  0A80               	xorlw	128
  8861  00114A  6F92               	movwf	(??_doDisplayLog+2)& (0+255),b
  8862  00114C  50DE               	movf	postinc2,w,c
  8863  00114E  0A80               	xorlw	128
  8864  001150  5992               	subwfb	(??_doDisplayLog+2)& (0+255),w,b
  8865  001152  B0D8               	btfsc	status,0,c
  8866  001154  D021               	goto	l8344
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;main.c: 101:                             currentPole++;
  8870  001156  4B97               	infsnz	doDisplayLog@currentPole& (0+255),f,b
  8871  001158  2B98               	incf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8872  00115A  D01E               	goto	l8344
  8873  00115C                     l8334:
  8874                           
  8875                           ; BSR set to: 0
  8876  00115C  0E31               	movlw	49
  8877  00115E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  8878  001160  B4D8               	btfsc	status,2,c
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;main.c: 104:                         if (currentPole > 1){
  8882  001162  BF98               	btfsc	(doDisplayLog@currentPole+1)& (0+255),7,b
  8883  001164  D019               	goto	l8344
  8884  001166  5198               	movf	(doDisplayLog@currentPole+1)& (0+255),w,b
  8885  001168  E104               	bnz	u9680
  8886  00116A  0E02               	movlw	2
  8887  00116C  5D97               	subwf	doDisplayLog@currentPole& (0+255),w,b
  8888  00116E  A0D8               	btfss	status,0,c
  8889  001170  D013               	goto	l8344
  8890  001172                     u9680:
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;main.c: 105:                             currentPole--;
  8894  001172  0797               	decf	doDisplayLog@currentPole& (0+255),f,b
  8895  001174  A0D8               	btfss	status,0,c
  8896  001176  0798               	decf	(doDisplayLog@currentPole+1)& (0+255),f,b
  8897  001178  D00F               	goto	l8344
  8898  00117A                     l8342:
  8899  00117A  0100               	movlb	0	; () banked
  8900  00117C  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  8901  00117E  6F90               	movwf	??_doDisplayLog& (0+255),b
  8902  001180  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  8903                           
  8904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8905                           ; Switch size 1, requested type "simple"
  8906                           ; Number of cases is 1, Range of values is 0 to 0
  8907                           ; switch strategies available:
  8908                           ; Name         Instructions Cycles
  8909                           ; simple_byte            4     3 (average)
  8910                           ;	Chosen strategy is simple_byte
  8911  001182  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  8912  001184  0A00               	xorlw	0	; case 0
  8913  001186  A4D8               	btfss	status,2,c
  8914  001188  D007               	goto	l8344
  8915                           
  8916                           ; BSR set to: 0
  8917                           ; Switch size 1, requested type "simple"
  8918                           ; Number of cases is 2, Range of values is 0 to 1
  8919                           ; switch strategies available:
  8920                           ; Name         Instructions Cycles
  8921                           ; simple_byte            7     4 (average)
  8922                           ;	Chosen strategy is simple_byte
  8923  00118A  5190               	movf	??_doDisplayLog& (0+255),w,b
  8924  00118C  0A00               	xorlw	0	; case 0
  8925  00118E  B4D8               	btfsc	status,2,c
  8926  001190  D7AC               	goto	l8316
  8927  001192  0A01               	xorlw	1	; case 1
  8928  001194  B4D8               	btfsc	status,2,c
  8929  001196  D7B5               	goto	l8324
  8930  001198                     l8344:
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;main.c: 113:     _delay((unsigned long)((1)*(10000000/4000.0)));
  8934  001198  0E04               	movlw	4
  8935  00119A  0100               	movlb	0	; () banked
  8936  00119C  6F90               	movwf	??_doDisplayLog& (0+255),b
  8937  00119E  0E3D               	movlw	61
  8938  0011A0                     u10307:
  8939  0011A0  2EE8               	decfsz	wreg,f,c
  8940  0011A2  D7FE               	bra	u10307
  8941  0011A4  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  8942  0011A6  D7FC               	bra	u10307
  8943  0011A8  D000               	nop2	
  8944  0011AA  D770               	goto	l8302
  8945  0011AC                     __end_of_doDisplayLog:
  8946                           	opt callstack 0
  8947                           
  8948 ;; *************** function _printf *****************
  8949 ;; Defined at:
  8950 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  8953 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  8954 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  8955 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  8956 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  8957 ;;		 -> STR_28(15), STR_26(3), STR_25(13), STR_24(11), 
  8958 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  8959 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  8960 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  8961 ;;		 -> STR_1(7), 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  ap              2   12[BANK0 ] PTR void [1]
  8964 ;;		 -> ?_printf(2), 
  8965 ;;  ret             2    0        int 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  2    0[BANK0 ] int 
  8968 ;; Registers used:
  8969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8975 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;Total ram usage:       14 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:   12
  8982 ;; This function calls:
  8983 ;;		_vfprintf
  8984 ;; This function is called by:
  8985 ;;		_doDisplayLog
  8986 ;;		_doOperation
  8987 ;;		_main
  8988 ;;		_mainEEPROM
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           	psect	text34
  8993  0037E6                     __ptext34:
  8994                           	opt callstack 0
  8995  0037E6                     _printf:
  8996                           	opt callstack 18
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;incstack = 0
  9000  0037E6  0E82               	movlw	low (?_printf+2)
  9001  0037E8  0100               	movlb	0	; () banked
  9002  0037EA  6F8C               	movwf	printf@ap& (0+255),b
  9003  0037EC  0E00               	movlw	high (?_printf+2)
  9004  0037EE  6F8D               	movwf	(printf@ap+1)& (0+255),b
  9005                           
  9006                           ; BSR set to: 0
  9007  0037F0  0E00               	movlw	0
  9008  0037F2  6E6D               	movwf	vfprintf@fp,c
  9009  0037F4  0E00               	movlw	0
  9010  0037F6  6E6E               	movwf	vfprintf@fp+1,c
  9011  0037F8  C080  F06F         	movff	printf@fmt,vfprintf@fmt
  9012  0037FC  C081  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  9013  003800  0E8C               	movlw	low printf@ap
  9014  003802  6E71               	movwf	vfprintf@ap,c
  9015  003804  0E00               	movlw	high printf@ap
  9016  003806  6E72               	movwf	vfprintf@ap+1,c
  9017  003808  EC94  F019         	call	_vfprintf	;wreg free
  9018  00380C  0012               	return		;funcret
  9019  00380E                     __end_of_printf:
  9020                           	opt callstack 0
  9021                           
  9022 ;; *************** function _vfprintf *****************
  9023 ;; Defined at:
  9024 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  9027 ;;		 -> NULL(0), 
  9028 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  9029 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  9030 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  9031 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  9032 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  9033 ;;		 -> STR_28(15), STR_26(3), STR_25(13), STR_24(11), 
  9034 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  9035 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  9036 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  9037 ;;		 -> STR_1(7), 
  9038 ;;  ap              2  112[COMRAM] PTR PTR void 
  9039 ;;		 -> printf@ap(2), 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  9042 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
  9043 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
  9044 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  9045 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
  9046 ;;		 -> STR_28(15), STR_26(3), STR_25(13), STR_24(11), 
  9047 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
  9048 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
  9049 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
  9050 ;;		 -> STR_1(7), 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  2  108[COMRAM] int 
  9053 ;; Registers used:
  9054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9060 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;Total ram usage:        8 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:   11
  9067 ;; This function calls:
  9068 ;;		_vfpfcnvrt
  9069 ;; This function is called by:
  9070 ;;		_printf
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text35
  9075  003328                     __ptext35:
  9076                           	opt callstack 0
  9077  003328                     _vfprintf:
  9078                           	opt callstack 18
  9079                           
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9081                           
  9082                           ;incstack = 0
  9083  003328  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  9084  00332C  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9085                           
  9086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9087  003330  0E00               	movlw	0
  9088  003332  0101               	movlb	1	; () banked
  9089  003334  6F05               	movwf	(_nout+1)& (0+255),b
  9090  003336  0E00               	movlw	0
  9091  003338  6F04               	movwf	_nout& (0+255),b
  9092                           
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9094  00333A  D013               	goto	l7878
  9095  00333C                     l7876:
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9099  00333C  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9100  003340  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9101  003344  0E73               	movlw	low vfprintf@cfmt
  9102  003346  6E4E               	movwf	vfpfcnvrt@fmt,c
  9103  003348  0E00               	movlw	high vfprintf@cfmt
  9104  00334A  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  9105  00334C  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  9106  003350  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9107  003354  ECAD  F002         	call	_vfpfcnvrt	;wreg free
  9108  003358  504C               	movf	?_vfpfcnvrt,w,c
  9109  00335A  0101               	movlb	1	; () banked
  9110  00335C  2704               	addwf	_nout& (0+255),f,b
  9111  00335E  504D               	movf	?_vfpfcnvrt+1,w,c
  9112  003360  2305               	addwfc	(_nout+1)& (0+255),f,b
  9113  003362                     l7878:
  9114                           
  9115                           ; BSR set to: 1
  9116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9117  003362  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  9118  003366  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9119  00336A                     	if	0	;tblptru may be non-zero
  9120  00336A                     	endif
  9121  00336A                     	if	0	;tblptru may be non-zero
  9122  00336A                     	endif
  9123  00336A  0008               	tblrd		*
  9124  00336C  50F5               	movf	tablat,w,c
  9125  00336E  0900               	iorlw	0
  9126  003370  A4D8               	btfss	status,2,c
  9127  003372  D7E4               	goto	l7876
  9128                           
  9129                           ; BSR set to: 1
  9130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9131  003374  C104  F06D         	movff	_nout,?_vfprintf
  9132  003378  C105  F06E         	movff	_nout+1,?_vfprintf+1
  9133                           
  9134                           ; BSR set to: 1
  9135  00337C  0012               	return		;funcret
  9136  00337E                     __end_of_vfprintf:
  9137                           	opt callstack 0
  9138                           
  9139 ;; *************** function _vfpfcnvrt *****************
  9140 ;; Defined at:
  9141 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  9144 ;;		 -> NULL(0), 
  9145 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  9146 ;;		 -> vfprintf@cfmt(2), 
  9147 ;;  ap              2   79[COMRAM] PTR PTR void 
  9148 ;;		 -> printf@ap(2), 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  llu             8   93[COMRAM] unsigned long long 
  9151 ;;  ll              8   85[COMRAM] long long 
  9152 ;;  f               4    0        long long 
  9153 ;;  vp              3    0        PTR void 
  9154 ;;  ct              3    0        unsigned char [3]
  9155 ;;  done            2  103[COMRAM] int 
  9156 ;;  cp              2  101[COMRAM] PTR unsigned char 
  9157 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
  9158 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
  9159 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
  9160 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
  9161 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
  9162 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
  9163 ;;  i               2    0        int 
  9164 ;;  c               1  107[COMRAM] unsigned char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  2   75[COMRAM] int 
  9167 ;; Registers used:
  9168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;Total ram usage:       33 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:   10
  9181 ;; This function calls:
  9182 ;;		_atoi
  9183 ;;		_ctoa
  9184 ;;		_dtoa
  9185 ;;		_fputc
  9186 ;;		_isdigit
  9187 ;;		_stoa
  9188 ;;		_xtoa
  9189 ;; This function is called by:
  9190 ;;		_vfprintf
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text36
  9195  00055A                     __ptext36:
  9196                           	opt callstack 0
  9197  00055A                     _vfpfcnvrt:
  9198                           	opt callstack 18
  9199                           
  9200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;incstack = 0
  9204  00055A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9205  00055E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9206  000562  CFDE FFF6          	movff	postinc2,tblptrl
  9207  000566  CFDD FFF7          	movff	postdec2,tblptrh
  9208  00056A                     	if	0	;tblptru may be non-zero
  9209  00056A                     	endif
  9210  00056A                     	if	0	;tblptru may be non-zero
  9211  00056A                     	endif
  9212  00056A  0008               	tblrd		*
  9213  00056C  50F5               	movf	tablat,w,c
  9214  00056E  0A25               	xorlw	37
  9215  000570  A4D8               	btfss	status,2,c
  9216  000572  D21B               	goto	l7606
  9217                           
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9219  000574  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9220  000578  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9221  00057C  2ADE               	incf	postinc2,f,c
  9222  00057E  0E00               	movlw	0
  9223  000580  22DD               	addwfc	postdec2,f,c
  9224                           
  9225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9226  000582  0E00               	movlw	0
  9227  000584  0100               	movlb	0	; () banked
  9228  000586  6FEC               	movwf	(_width+1)& (0+255),b
  9229  000588  0E00               	movlw	0
  9230  00058A  6FEB               	movwf	_width& (0+255),b
  9231  00058C  C0EB  F0EF         	movff	_width,_flags
  9232  000590  C0EC  F0F0         	movff	_width+1,_flags+1
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9236  000594  69ED               	setf	_prec& (0+255),b
  9237  000596  69EE               	setf	(_prec+1)& (0+255),b
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9241  000598  0E00               	movlw	0
  9242  00059A  6E69               	movwf	vfpfcnvrt@done+1,c
  9243  00059C  0E00               	movlw	0
  9244  00059E  D019               	goto	L16
  9245  0005A0                     l7502:
  9246                           
  9247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9248  0005A0  0100               	movlb	0	; () banked
  9249  0005A2  81EF               	bsf	_flags& (0+255),0,b
  9250  0005A4                     l7504:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9254  0005A4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9255  0005A8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9256  0005AC  2ADE               	incf	postinc2,f,c
  9257  0005AE  0E00               	movlw	0
  9258  0005B0  22DD               	addwfc	postdec2,f,c
  9259                           
  9260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9261  0005B2  D032               	goto	l7528
  9262  0005B4                     l7506:
  9263                           
  9264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9265  0005B4  0100               	movlb	0	; () banked
  9266  0005B6  83EF               	bsf	_flags& (0+255),1,b
  9267  0005B8  D7F5               	goto	l7504
  9268  0005BA                     l7510:
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9271  0005BA  0100               	movlb	0	; () banked
  9272  0005BC  85EF               	bsf	_flags& (0+255),2,b
  9273  0005BE  D7F2               	goto	l7504
  9274  0005C0                     l7514:
  9275                           
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9277  0005C0  0100               	movlb	0	; () banked
  9278  0005C2  87EF               	bsf	_flags& (0+255),3,b
  9279  0005C4  D7EF               	goto	l7504
  9280  0005C6                     l7518:
  9281                           
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9283  0005C6  0100               	movlb	0	; () banked
  9284  0005C8  89EF               	bsf	_flags& (0+255),4,b
  9285  0005CA  D7EC               	goto	l7504
  9286  0005CC                     l7522:
  9287                           
  9288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9289  0005CC  0E00               	movlw	0
  9290  0005CE  6E69               	movwf	vfpfcnvrt@done+1,c
  9291  0005D0  0E01               	movlw	1
  9292  0005D2                     L16:
  9293  0005D2  6E68               	movwf	vfpfcnvrt@done,c
  9294                           
  9295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9296  0005D4  D021               	goto	l7528
  9297  0005D6                     l7526:
  9298  0005D6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9299  0005DA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9300  0005DE  CFDE FFF6          	movff	postinc2,tblptrl
  9301  0005E2  CFDD FFF7          	movff	postdec2,tblptrh
  9302  0005E6                     	if	0	;tblptru may be non-zero
  9303  0005E6                     	endif
  9304  0005E6                     	if	0	;tblptru may be non-zero
  9305  0005E6                     	endif
  9306  0005E6  0008               	tblrd		*
  9307  0005E8  50F5               	movf	tablat,w,c
  9308  0005EA  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9309  0005EC  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  9310                           
  9311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9312                           ; Switch size 1, requested type "simple"
  9313                           ; Number of cases is 1, Range of values is 0 to 0
  9314                           ; switch strategies available:
  9315                           ; Name         Instructions Cycles
  9316                           ; simple_byte            4     3 (average)
  9317                           ;	Chosen strategy is simple_byte
  9318  0005EE  5053               	movf	??_vfpfcnvrt+1,w,c
  9319  0005F0  0A00               	xorlw	0	; case 0
  9320  0005F2  A4D8               	btfss	status,2,c
  9321  0005F4  D7EB               	goto	l7522
  9322                           
  9323                           ; Switch size 1, requested type "simple"
  9324                           ; Number of cases is 5, Range of values is 32 to 48
  9325                           ; switch strategies available:
  9326                           ; Name         Instructions Cycles
  9327                           ; simple_byte           16     9 (average)
  9328                           ;	Chosen strategy is simple_byte
  9329  0005F6  5052               	movf	??_vfpfcnvrt,w,c
  9330  0005F8  0A20               	xorlw	32	; case 32
  9331  0005FA  B4D8               	btfsc	status,2,c
  9332  0005FC  D7E1               	goto	l7514
  9333  0005FE  0A03               	xorlw	3	; case 35
  9334  000600  B4D8               	btfsc	status,2,c
  9335  000602  D7E1               	goto	l7518
  9336  000604  0A08               	xorlw	8	; case 43
  9337  000606  B4D8               	btfsc	status,2,c
  9338  000608  D7D8               	goto	l7510
  9339  00060A  0A06               	xorlw	6	; case 45
  9340  00060C  B4D8               	btfsc	status,2,c
  9341  00060E  D7C8               	goto	l7502
  9342  000610  0A1D               	xorlw	29	; case 48
  9343  000612  B4D8               	btfsc	status,2,c
  9344  000614  D7CF               	goto	l7506
  9345  000616  D7DA               	goto	l7522
  9346  000618                     l7528:
  9347                           
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9349  000618  5068               	movf	vfpfcnvrt@done,w,c
  9350  00061A  1069               	iorwf	vfpfcnvrt@done+1,w,c
  9351  00061C  B4D8               	btfsc	status,2,c
  9352  00061E  D7DB               	goto	l7526
  9353                           
  9354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9355  000620  0100               	movlb	0	; () banked
  9356  000622  B1EF               	btfsc	_flags& (0+255),0,b
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9360  000624  93EF               	bcf	_flags& (0+255),1,b
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9364  000626  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9365  00062A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9366  00062E  CFDE FFF6          	movff	postinc2,tblptrl
  9367  000632  CFDD FFF7          	movff	postdec2,tblptrh
  9368  000636                     	if	0	;tblptru may be non-zero
  9369  000636                     	endif
  9370  000636                     	if	0	;tblptru may be non-zero
  9371  000636                     	endif
  9372  000636  0008               	tblrd		*
  9373  000638  50F5               	movf	tablat,w,c
  9374  00063A  0A2A               	xorlw	42
  9375  00063C  A4D8               	btfss	status,2,c
  9376  00063E  D023               	goto	l7540
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9380  000640  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9381  000644  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9382  000648  2ADE               	incf	postinc2,f,c
  9383  00064A  0E00               	movlw	0
  9384  00064C  22DD               	addwfc	postdec2,f,c
  9385                           
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9387  00064E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9388  000652  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9389  000656  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9390  00065A  0E02               	movlw	2
  9391  00065C  26DE               	addwf	postinc2,f,c
  9392  00065E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9393  000662  0E00               	movlw	0
  9394  000664  22DD               	addwfc	postdec2,f,c
  9395  000666  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9396  00066A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9397  00066E  CFDE F0EB          	movff	postinc2,_width
  9398  000672  CFDD F0EC          	movff	postdec2,_width+1
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9402  000676  AFEC               	btfss	(_width+1)& (0+255),7,b
  9403  000678  D03F               	goto	u8660
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9407  00067A  81EF               	bsf	_flags& (0+255),0,b
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9410  00067C  6DEB               	negf	_width& (0+255),b
  9411  00067E  1FEC               	comf	(_width+1)& (0+255),f,b
  9412  000680  B0D8               	btfsc	status,0,c
  9413  000682  2BEC               	incf	(_width+1)& (0+255),f,b
  9414  000684  D039               	goto	u8660
  9415  000686                     l7540:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9419  000686  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9420  00068A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9421  00068E  CFDE F00D          	movff	postinc2,atoi@s
  9422  000692  CFDD F00E          	movff	postdec2,atoi@s+1
  9423  000696  EC09  F015         	call	_atoi	;wreg free
  9424  00069A  C00D  F0EB         	movff	?_atoi,_width
  9425  00069E  C00E  F0EC         	movff	?_atoi+1,_width+1
  9426                           
  9427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9428  0006A2  D007               	goto	l7544
  9429  0006A4                     l7542:
  9430                           
  9431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9432  0006A4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9433  0006A8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9434  0006AC  2ADE               	incf	postinc2,f,c
  9435  0006AE  0E00               	movlw	0
  9436  0006B0  22DD               	addwfc	postdec2,f,c
  9437  0006B2                     l7544:
  9438  0006B2  0ED0               	movlw	208
  9439  0006B4  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  9440  0006B6  0EFF               	movlw	255
  9441  0006B8  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  9442  0006BA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9443  0006BE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9444  0006C2  CFDE FFF6          	movff	postinc2,tblptrl
  9445  0006C6  CFDD FFF7          	movff	postdec2,tblptrh
  9446  0006CA                     	if	0	;tblptru may be non-zero
  9447  0006CA                     	endif
  9448  0006CA                     	if	0	;tblptru may be non-zero
  9449  0006CA                     	endif
  9450  0006CA  0008               	tblrd		*
  9451  0006CC  50F5               	movf	tablat,w,c
  9452  0006CE  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  9453  0006D0  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  9454  0006D2  5052               	movf	??_vfpfcnvrt,w,c
  9455  0006D4  2654               	addwf	??_vfpfcnvrt+2,f,c
  9456  0006D6  5053               	movf	??_vfpfcnvrt+1,w,c
  9457  0006D8  2255               	addwfc	??_vfpfcnvrt+3,f,c
  9458  0006DA  5055               	movf	??_vfpfcnvrt+3,w,c
  9459  0006DC  E106               	bnz	u8640
  9460  0006DE  0E0A               	movlw	10
  9461  0006E0  5C54               	subwf	??_vfpfcnvrt+2,w,c
  9462  0006E2  B0D8               	btfsc	status,0,c
  9463  0006E4  D002               	goto	u8640
  9464  0006E6  0E01               	movlw	1
  9465  0006E8  D001               	goto	u8650
  9466  0006EA                     u8640:
  9467  0006EA  0E00               	movlw	0
  9468  0006EC                     u8650:
  9469  0006EC  6E6A               	movwf	_vfpfcnvrt$1369,c
  9470  0006EE  6A6B               	clrf	_vfpfcnvrt$1369+1,c
  9471  0006F0  506A               	movf	_vfpfcnvrt$1369,w,c
  9472  0006F2  106B               	iorwf	_vfpfcnvrt$1369+1,w,c
  9473  0006F4  A4D8               	btfss	status,2,c
  9474  0006F6  D7D6               	goto	l7542
  9475  0006F8                     u8660:
  9476                           
  9477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  9478  0006F8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9479  0006FC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9480  000700  CFDE FFF6          	movff	postinc2,tblptrl
  9481  000704  CFDD FFF7          	movff	postdec2,tblptrh
  9482  000708                     	if	0	;tblptru may be non-zero
  9483  000708                     	endif
  9484  000708                     	if	0	;tblptru may be non-zero
  9485  000708                     	endif
  9486  000708  0008               	tblrd		*
  9487  00070A  50F5               	movf	tablat,w,c
  9488  00070C  0A63               	xorlw	99
  9489  00070E  A4D8               	btfss	status,2,c
  9490  000710  D026               	goto	l7558
  9491                           
  9492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  9493  000712  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9494  000716  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9495  00071A  2ADE               	incf	postinc2,f,c
  9496  00071C  0E00               	movlw	0
  9497  00071E  22DD               	addwfc	postdec2,f,c
  9498                           
  9499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9500  000720  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9501  000724  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9502  000728  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9503  00072C  0E02               	movlw	2
  9504  00072E  26DE               	addwf	postinc2,f,c
  9505  000730  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9506  000734  0E00               	movlw	0
  9507  000736  22DD               	addwfc	postdec2,f,c
  9508  000738  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9509  00073C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9510  000740  50DF               	movf	indf2,w,c
  9511  000742  6E6C               	movwf	vfpfcnvrt@c,c
  9512                           
  9513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  9514  000744  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
  9515  000748  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  9516  00074C  C06C  F027         	movff	vfpfcnvrt@c,ctoa@c
  9517  000750  ECBF  F019         	call	_ctoa	;wreg free
  9518  000754  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
  9519  000758  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  9520  00075C  0012               	return	
  9521  00075E                     l7558:
  9522                           
  9523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9524  00075E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9525  000762  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9526  000766  CFDE FFF6          	movff	postinc2,tblptrl
  9527  00076A  CFDD FFF7          	movff	postdec2,tblptrh
  9528  00076E                     	if	0	;tblptru may be non-zero
  9529  00076E                     	endif
  9530  00076E                     	if	0	;tblptru may be non-zero
  9531  00076E                     	endif
  9532  00076E  0008               	tblrd		*
  9533  000770  50F5               	movf	tablat,w,c
  9534  000772  0A64               	xorlw	100
  9535  000774  B4D8               	btfsc	status,2,c
  9536  000776  D00D               	goto	u8690
  9537  000778  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9538  00077C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9539  000780  CFDE FFF6          	movff	postinc2,tblptrl
  9540  000784  CFDD FFF7          	movff	postdec2,tblptrh
  9541  000788                     	if	0	;tblptru may be non-zero
  9542  000788                     	endif
  9543  000788                     	if	0	;tblptru may be non-zero
  9544  000788                     	endif
  9545  000788  0008               	tblrd		*
  9546  00078A  50F5               	movf	tablat,w,c
  9547  00078C  0A69               	xorlw	105
  9548  00078E  A4D8               	btfss	status,2,c
  9549  000790  D03F               	goto	l7568
  9550  000792                     u8690:
  9551                           
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9553  000792  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9554  000796  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9555  00079A  2ADE               	incf	postinc2,f,c
  9556  00079C  0E00               	movlw	0
  9557  00079E  22DD               	addwfc	postdec2,f,c
  9558                           
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9560  0007A0  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9561  0007A4  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9562  0007A8  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9563  0007AC  0E02               	movlw	2
  9564  0007AE  26DE               	addwf	postinc2,f,c
  9565  0007B0  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9566  0007B4  0E00               	movlw	0
  9567  0007B6  22DD               	addwfc	postdec2,f,c
  9568  0007B8  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9569  0007BC  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9570  0007C0  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  9571  0007C4  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  9572  0007C8  0E00               	movlw	0
  9573  0007CA  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  9574  0007CC  0EFF               	movlw	-1
  9575  0007CE  6E58               	movwf	vfpfcnvrt@ll+2,c
  9576  0007D0  6E59               	movwf	vfpfcnvrt@ll+3,c
  9577  0007D2  6E5A               	movwf	vfpfcnvrt@ll+4,c
  9578  0007D4  6E5B               	movwf	vfpfcnvrt@ll+5,c
  9579  0007D6  6E5C               	movwf	vfpfcnvrt@ll+6,c
  9580  0007D8  6E5D               	movwf	vfpfcnvrt@ll+7,c
  9581                           
  9582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9583  0007DA  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  9584  0007DE  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9585  0007E2  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  9586  0007E6  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9587  0007EA  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9588  0007EE  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9589  0007F2  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9590  0007F6  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9591  0007FA  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9592  0007FE  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9593  000802  ECE5  F00F         	call	_dtoa	;wreg free
  9594  000806  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  9595  00080A  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9596  00080E  0012               	return	
  9597  000810                     l7568:
  9598                           
  9599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9600  000810  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9601  000814  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9602  000818  CFDE FFF6          	movff	postinc2,tblptrl
  9603  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  9604  000820                     	if	0	;tblptru may be non-zero
  9605  000820                     	endif
  9606  000820                     	if	0	;tblptru may be non-zero
  9607  000820                     	endif
  9608  000820  0008               	tblrd		*
  9609  000822  50F5               	movf	tablat,w,c
  9610  000824  0A73               	xorlw	115
  9611  000826  A4D8               	btfss	status,2,c
  9612  000828  D02A               	goto	l7576
  9613                           
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9615  00082A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9616  00082E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9617  000832  2ADE               	incf	postinc2,f,c
  9618  000834  0E00               	movlw	0
  9619  000836  22DD               	addwfc	postdec2,f,c
  9620                           
  9621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9622  000838  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9623  00083C  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9624  000840  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9625  000844  0E02               	movlw	2
  9626  000846  26DE               	addwf	postinc2,f,c
  9627  000848  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9628  00084C  0E00               	movlw	0
  9629  00084E  22DD               	addwfc	postdec2,f,c
  9630  000850  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9631  000854  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9632  000858  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  9633  00085C  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  9634                           
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9636  000860  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  9637  000864  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9638  000868  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  9639  00086C  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9640  000870  ECC7  F013         	call	_stoa	;wreg free
  9641  000874  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  9642  000878  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  9643  00087C  0012               	return	
  9644  00087E                     l7576:
  9645                           
  9646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9647  00087E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9648  000882  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9649  000886  CFDE FFF6          	movff	postinc2,tblptrl
  9650  00088A  CFDD FFF7          	movff	postdec2,tblptrh
  9651  00088E                     	if	0	;tblptru may be non-zero
  9652  00088E                     	endif
  9653  00088E                     	if	0	;tblptru may be non-zero
  9654  00088E                     	endif
  9655  00088E  0008               	tblrd		*
  9656  000890  50F5               	movf	tablat,w,c
  9657  000892  0A78               	xorlw	120
  9658  000894  B4D8               	btfsc	status,2,c
  9659  000896  D00D               	goto	u8720
  9660  000898  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9661  00089C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9662  0008A0  CFDE FFF6          	movff	postinc2,tblptrl
  9663  0008A4  CFDD FFF7          	movff	postdec2,tblptrh
  9664  0008A8                     	if	0	;tblptru may be non-zero
  9665  0008A8                     	endif
  9666  0008A8                     	if	0	;tblptru may be non-zero
  9667  0008A8                     	endif
  9668  0008A8  0008               	tblrd		*
  9669  0008AA  50F5               	movf	tablat,w,c
  9670  0008AC  0A58               	xorlw	88
  9671  0008AE  A4D8               	btfss	status,2,c
  9672  0008B0  D04D               	goto	l7590
  9673  0008B2                     u8720:
  9674                           
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9676  0008B2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9677  0008B6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9678  0008BA  CFDE FFF6          	movff	postinc2,tblptrl
  9679  0008BE  CFDD FFF7          	movff	postdec2,tblptrh
  9680  0008C2                     	if	0	;tblptru may be non-zero
  9681  0008C2                     	endif
  9682  0008C2                     	if	0	;tblptru may be non-zero
  9683  0008C2                     	endif
  9684  0008C2  0008               	tblrd		*
  9685  0008C4  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  9686                           
  9687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9688  0008C8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9689  0008CC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9690  0008D0  2ADE               	incf	postinc2,f,c
  9691  0008D2  0E00               	movlw	0
  9692  0008D4  22DD               	addwfc	postdec2,f,c
  9693                           
  9694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9695  0008D6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9696  0008DA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9697  0008DE  CFDF F052          	movff	indf2,??_vfpfcnvrt
  9698  0008E2  0E02               	movlw	2
  9699  0008E4  26DE               	addwf	postinc2,f,c
  9700  0008E6  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  9701  0008EA  0E00               	movlw	0
  9702  0008EC  22DD               	addwfc	postdec2,f,c
  9703  0008EE  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9704  0008F2  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9705  0008F6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  9706  0008FA  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  9707  0008FE  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9708  000902  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9709  000906  6A60               	clrf	vfpfcnvrt@llu+2,c
  9710  000908  6A61               	clrf	vfpfcnvrt@llu+3,c
  9711  00090A  6A62               	clrf	vfpfcnvrt@llu+4,c
  9712  00090C  6A63               	clrf	vfpfcnvrt@llu+5,c
  9713  00090E  6A64               	clrf	vfpfcnvrt@llu+6,c
  9714  000910  6A65               	clrf	vfpfcnvrt@llu+7,c
  9715                           
  9716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9717  000912  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  9718  000916  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9719  00091A  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  9720  00091E  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9721  000922  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9722  000926  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9723  00092A  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9724  00092E  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9725  000932  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9726  000936  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9727  00093A  C06C  F02F         	movff	vfpfcnvrt@c,xtoa@x
  9728  00093E  EC09  F011         	call	_xtoa	;wreg free
  9729  000942  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  9730  000946  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9731  00094A  0012               	return	
  9732  00094C                     l7590:
  9733                           
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9735  00094C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9736  000950  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9737  000954  CFDE FFF6          	movff	postinc2,tblptrl
  9738  000958  CFDD FFF7          	movff	postdec2,tblptrh
  9739  00095C                     	if	0	;tblptru may be non-zero
  9740  00095C                     	endif
  9741  00095C                     	if	0	;tblptru may be non-zero
  9742  00095C                     	endif
  9743  00095C  0008               	tblrd		*
  9744  00095E  50F5               	movf	tablat,w,c
  9745  000960  0A25               	xorlw	37
  9746  000962  A4D8               	btfss	status,2,c
  9747  000964  D016               	goto	l7600
  9748                           
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9750  000966  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9751  00096A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9752  00096E  2ADE               	incf	postinc2,f,c
  9753  000970  0E00               	movlw	0
  9754  000972  22DD               	addwfc	postdec2,f,c
  9755                           
  9756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9757  000974  0E00               	movlw	0
  9758  000976  6E0B               	movwf	fputc@c+1,c
  9759  000978  0E25               	movlw	37
  9760  00097A  6E0A               	movwf	fputc@c,c
  9761  00097C  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9762  000980  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9763  000984  EC96  F018         	call	_fputc	;wreg free
  9764  000988                     l7596:
  9765                           
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9767  000988  0E00               	movlw	0
  9768  00098A  6E4D               	movwf	?_vfpfcnvrt+1,c
  9769  00098C  0E01               	movlw	1
  9770  00098E  6E4C               	movwf	?_vfpfcnvrt,c
  9771  000990  0012               	return	
  9772  000992                     l7600:
  9773                           
  9774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9775  000992  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9776  000996  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9777  00099A  2ADE               	incf	postinc2,f,c
  9778  00099C  0E00               	movlw	0
  9779  00099E  22DD               	addwfc	postdec2,f,c
  9780                           
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9782  0009A0  0E00               	movlw	0
  9783  0009A2  6E4D               	movwf	?_vfpfcnvrt+1,c
  9784  0009A4  0E00               	movlw	0
  9785  0009A6  6E4C               	movwf	?_vfpfcnvrt,c
  9786  0009A8  0012               	return	
  9787  0009AA                     l7606:
  9788                           
  9789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9790  0009AA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9791  0009AE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9792  0009B2  CFDE FFF6          	movff	postinc2,tblptrl
  9793  0009B6  CFDD FFF7          	movff	postdec2,tblptrh
  9794  0009BA                     	if	0	;tblptru may be non-zero
  9795  0009BA                     	endif
  9796  0009BA                     	if	0	;tblptru may be non-zero
  9797  0009BA                     	endif
  9798  0009BA  0008               	tblrd		*
  9799  0009BC  50F5               	movf	tablat,w,c
  9800  0009BE  6E0A               	movwf	fputc@c,c
  9801  0009C0  6A0B               	clrf	fputc@c+1,c
  9802  0009C2  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  9803  0009C6  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9804  0009CA  EC96  F018         	call	_fputc	;wreg free
  9805                           
  9806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9807  0009CE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9808  0009D2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9809  0009D6  2ADE               	incf	postinc2,f,c
  9810  0009D8  0E00               	movlw	0
  9811  0009DA  22DD               	addwfc	postdec2,f,c
  9812  0009DC  D7D5               	goto	l7596
  9813  0009DE                     __end_of_vfpfcnvrt:
  9814                           	opt callstack 0
  9815                           
  9816 ;; *************** function _xtoa *****************
  9817 ;; Defined at:
  9818 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  9821 ;;		 -> NULL(0), 
  9822 ;;  d               8   38[COMRAM] unsigned long long 
  9823 ;;  x               1   46[COMRAM] unsigned char 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  n               8   63[COMRAM] unsigned long long 
  9826 ;;  c               2   73[COMRAM] int 
  9827 ;;  i               2   71[COMRAM] int 
  9828 ;;  w               2   61[COMRAM] int 
  9829 ;;  p               2   59[COMRAM] int 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  2   36[COMRAM] int 
  9832 ;; Registers used:
  9833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9839 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;Total ram usage:       39 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; Hardware stack levels required when called:    9
  9846 ;; This function calls:
  9847 ;;		_isalpha
  9848 ;;		_isupper
  9849 ;;		_pad
  9850 ;;		_toupper
  9851 ;; This function is called by:
  9852 ;;		_vfpfcnvrt
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text37
  9857  002212                     __ptext37:
  9858                           	opt callstack 0
  9859  002212                     _xtoa:
  9860                           	opt callstack 18
  9861                           
  9862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9863                           
  9864                           ;incstack = 0
  9865  002212  0100               	movlb	0	; () banked
  9866  002214  AFEE               	btfss	(_prec+1)& (0+255),7,b
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9870  002216  93EF               	bcf	_flags& (0+255),1,b
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9874  002218  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  9875  00221A  D005               	goto	u7620
  9876  00221C  51EE               	movf	(_prec+1)& (0+255),w,b
  9877  00221E  E108               	bnz	l640
  9878  002220  05ED               	decf	_prec& (0+255),w,b
  9879  002222  B0D8               	btfsc	status,0,c
  9880  002224  D005               	goto	l640
  9881  002226                     u7620:
  9882                           
  9883                           ; BSR set to: 0
  9884  002226  0E00               	movlw	0
  9885  002228  6E3D               	movwf	xtoa@p+1,c
  9886  00222A  0E01               	movlw	1
  9887  00222C  6E3C               	movwf	xtoa@p,c
  9888  00222E  D004               	goto	l642
  9889  002230                     l640:
  9890                           
  9891                           ; BSR set to: 0
  9892  002230  C0ED  F03C         	movff	_prec,xtoa@p
  9893  002234  C0EE  F03D         	movff	_prec+1,xtoa@p+1
  9894  002238                     l642:
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9898  002238  C0EB  F03E         	movff	_width,xtoa@w
  9899  00223C  C0EC  F03F         	movff	_width+1,xtoa@w+1
  9900                           
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9902  002240  A9EF               	btfss	_flags& (0+255),4,b
  9903  002242  D004               	goto	l6984
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9907  002244  0EFE               	movlw	254
  9908  002246  263E               	addwf	xtoa@w,f,c
  9909  002248  0EFF               	movlw	255
  9910  00224A  223F               	addwfc	xtoa@w+1,f,c
  9911  00224C                     l6984:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9915  00224C  C027  F040         	movff	xtoa@d,xtoa@n
  9916  002250  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  9917  002254  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  9918  002258  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  9919  00225C  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  9920  002260  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  9921  002264  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  9922  002268  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9926  00226C  0E00               	movlw	0
  9927  00226E  6E49               	movwf	xtoa@i+1,c
  9928  002270  0E1F               	movlw	31
  9929  002272  6E48               	movwf	xtoa@i,c
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9933  002274  0E00               	movlw	0
  9934  002276  0101               	movlb	1	; () banked
  9935  002278  6F29               	movwf	(_dbuf+31)& (0+255),b
  9936                           
  9937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9938  00227A  D093               	goto	l7020
  9939  00227C                     l6990:
  9940                           
  9941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9942  00227C  0648               	decf	xtoa@i,f,c
  9943  00227E  A0D8               	btfss	status,0,c
  9944  002280  0649               	decf	xtoa@i+1,f,c
  9945                           
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9947  002282  0E0F               	movlw	15
  9948  002284  1440               	andwf	xtoa@n,w,c
  9949  002286  6E4A               	movwf	xtoa@c,c
  9950  002288  6A4B               	clrf	xtoa@c+1,c
  9951                           
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9953  00228A  BE4B               	btfsc	xtoa@c+1,7,c
  9954  00228C  D008               	goto	l6998
  9955  00228E  504B               	movf	xtoa@c+1,w,c
  9956  002290  E104               	bnz	u7640
  9957  002292  0E0A               	movlw	10
  9958  002294  5C4A               	subwf	xtoa@c,w,c
  9959  002296  A0D8               	btfss	status,0,c
  9960  002298  D002               	goto	l6998
  9961  00229A                     u7640:
  9962  00229A  0E57               	movlw	87
  9963  00229C  D001               	goto	L17
  9964  00229E                     l6998:
  9965  00229E  0E30               	movlw	48
  9966  0022A0                     L17:
  9967  0022A0  244A               	addwf	xtoa@c,w,c
  9968  0022A2  6E4A               	movwf	xtoa@c,c
  9969  0022A4  0E00               	movlw	0
  9970  0022A6  204B               	addwfc	xtoa@c+1,w,c
  9971  0022A8  6E4B               	movwf	xtoa@c+1,c
  9972                           
  9973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9974  0022AA  0EBF               	movlw	191
  9975  0022AC  6E30               	movwf	??_xtoa& (0+255),c
  9976  0022AE  0EFF               	movlw	255
  9977  0022B0  6E31               	movwf	(??_xtoa+1)& (0+255),c
  9978  0022B2  502F               	movf	xtoa@x,w,c
  9979  0022B4  6E32               	movwf	(??_xtoa+2)& (0+255),c
  9980  0022B6  6A33               	clrf	(??_xtoa+3)& (0+255),c
  9981  0022B8  5030               	movf	??_xtoa,w,c
  9982  0022BA  2632               	addwf	??_xtoa+2,f,c
  9983  0022BC  5031               	movf	??_xtoa+1,w,c
  9984  0022BE  2233               	addwfc	??_xtoa+3,f,c
  9985  0022C0  5033               	movf	??_xtoa+3,w,c
  9986  0022C2  E106               	bnz	u7650
  9987  0022C4  0E1A               	movlw	26
  9988  0022C6  5C32               	subwf	??_xtoa+2,w,c
  9989  0022C8  B0D8               	btfsc	status,0,c
  9990  0022CA  D002               	goto	u7650
  9991  0022CC  0E01               	movlw	1
  9992  0022CE  D001               	goto	u7660
  9993  0022D0                     u7650:
  9994  0022D0  0E00               	movlw	0
  9995  0022D2                     u7660:
  9996  0022D2  6E38               	movwf	_xtoa$1354,c
  9997  0022D4  6A39               	clrf	_xtoa$1354+1,c
  9998  0022D6  5038               	movf	_xtoa$1354,w,c
  9999  0022D8  1039               	iorwf	_xtoa$1354+1,w,c
 10000  0022DA  B4D8               	btfsc	status,2,c
 10001  0022DC  D027               	goto	l7012
 10002  0022DE  0E9F               	movlw	159
 10003  0022E0  6E30               	movwf	??_xtoa& (0+255),c
 10004  0022E2  0EFF               	movlw	255
 10005  0022E4  6E31               	movwf	(??_xtoa+1)& (0+255),c
 10006  0022E6  0E20               	movlw	32
 10007  0022E8  104A               	iorwf	xtoa@c,w,c
 10008  0022EA  6E32               	movwf	(??_xtoa+2)& (0+255),c
 10009  0022EC  0E00               	movlw	0
 10010  0022EE  104B               	iorwf	xtoa@c+1,w,c
 10011  0022F0  6E33               	movwf	(??_xtoa+3)& (0+255),c
 10012  0022F2  5030               	movf	??_xtoa,w,c
 10013  0022F4  2632               	addwf	??_xtoa+2,f,c
 10014  0022F6  5031               	movf	??_xtoa+1,w,c
 10015  0022F8  2233               	addwfc	??_xtoa+3,f,c
 10016  0022FA  5033               	movf	??_xtoa+3,w,c
 10017  0022FC  E106               	bnz	u7680
 10018  0022FE  0E1A               	movlw	26
 10019  002300  5C32               	subwf	??_xtoa+2,w,c
 10020  002302  B0D8               	btfsc	status,0,c
 10021  002304  D002               	goto	u7680
 10022  002306  0E01               	movlw	1
 10023  002308  D001               	goto	u7690
 10024  00230A                     u7680:
 10025  00230A  0E00               	movlw	0
 10026  00230C                     u7690:
 10027  00230C  6E3A               	movwf	_xtoa$1355,c
 10028  00230E  6A3B               	clrf	_xtoa$1355+1,c
 10029  002310  503A               	movf	_xtoa$1355,w,c
 10030  002312  103B               	iorwf	_xtoa$1355+1,w,c
 10031  002314  B4D8               	btfsc	status,2,c
 10032  002316  D00A               	goto	l7012
 10033                           
 10034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10035  002318  C04A  F00C         	movff	xtoa@c,toupper@c
 10036  00231C  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
 10037  002320  EC0D  F01A         	call	_toupper	;wreg free
 10038  002324  C00C  F04A         	movff	?_toupper,xtoa@c
 10039  002328  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
 10040  00232C                     l7012:
 10041                           
 10042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10043  00232C  0E0A               	movlw	low _dbuf
 10044  00232E  2448               	addwf	xtoa@i,w,c
 10045  002330  6ED9               	movwf	fsr2l,c
 10046  002332  0E01               	movlw	high _dbuf
 10047  002334  2049               	addwfc	xtoa@i+1,w,c
 10048  002336  6EDA               	movwf	fsr2h,c
 10049  002338  C04A  FFDF         	movff	xtoa@c,indf2
 10050                           
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10052  00233C  063C               	decf	xtoa@p,f,c
 10053  00233E  A0D8               	btfss	status,0,c
 10054  002340  063D               	decf	xtoa@p+1,f,c
 10055                           
 10056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10057  002342  063E               	decf	xtoa@w,f,c
 10058  002344  A0D8               	btfss	status,0,c
 10059  002346  063F               	decf	xtoa@w+1,f,c
 10060                           
 10061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10062  002348  C040  F030         	movff	xtoa@n,??_xtoa
 10063  00234C  C041  F031         	movff	xtoa@n+1,??_xtoa+1
 10064  002350  C042  F032         	movff	xtoa@n+2,??_xtoa+2
 10065  002354  C043  F033         	movff	xtoa@n+3,??_xtoa+3
 10066  002358  C044  F034         	movff	xtoa@n+4,??_xtoa+4
 10067  00235C  C045  F035         	movff	xtoa@n+5,??_xtoa+5
 10068  002360  C046  F036         	movff	xtoa@n+6,??_xtoa+6
 10069  002364  C047  F037         	movff	xtoa@n+7,??_xtoa+7
 10070  002368  0E05               	movlw	5
 10071  00236A  D009               	goto	u7710
 10072  00236C                     u7715:
 10073  00236C  90D8               	bcf	status,0,c
 10074  00236E  3237               	rrcf	??_xtoa+7,f,c
 10075  002370  3236               	rrcf	??_xtoa+6,f,c
 10076  002372  3235               	rrcf	??_xtoa+5,f,c
 10077  002374  3234               	rrcf	??_xtoa+4,f,c
 10078  002376  3233               	rrcf	??_xtoa+3,f,c
 10079  002378  3232               	rrcf	??_xtoa+2,f,c
 10080  00237A  3231               	rrcf	??_xtoa+1,f,c
 10081  00237C  3230               	rrcf	??_xtoa,f,c
 10082  00237E                     u7710:
 10083  00237E  2EE8               	decfsz	wreg,f,c
 10084  002380  D7F5               	goto	u7715
 10085  002382  C030  F040         	movff	??_xtoa,xtoa@n
 10086  002386  C031  F041         	movff	??_xtoa+1,xtoa@n+1
 10087  00238A  C032  F042         	movff	??_xtoa+2,xtoa@n+2
 10088  00238E  C033  F043         	movff	??_xtoa+3,xtoa@n+3
 10089  002392  C034  F044         	movff	??_xtoa+4,xtoa@n+4
 10090  002396  C035  F045         	movff	??_xtoa+5,xtoa@n+5
 10091  00239A  C036  F046         	movff	??_xtoa+6,xtoa@n+6
 10092  00239E  C037  F047         	movff	??_xtoa+7,xtoa@n+7
 10093  0023A2                     l7020:
 10094                           
 10095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10096  0023A2  BE49               	btfsc	xtoa@i+1,7,c
 10097  0023A4  D021               	goto	u7760
 10098  0023A6  5049               	movf	xtoa@i+1,w,c
 10099  0023A8  E104               	bnz	u7720
 10100  0023AA  0E02               	movlw	2
 10101  0023AC  5C48               	subwf	xtoa@i,w,c
 10102  0023AE  A0D8               	btfss	status,0,c
 10103  0023B0  D01B               	goto	u7760
 10104  0023B2                     u7720:
 10105  0023B2  5040               	movf	xtoa@n,w,c
 10106  0023B4  1041               	iorwf	xtoa@n+1,w,c
 10107  0023B6  1042               	iorwf	xtoa@n+2,w,c
 10108  0023B8  1043               	iorwf	xtoa@n+3,w,c
 10109  0023BA  1044               	iorwf	xtoa@n+4,w,c
 10110  0023BC  1045               	iorwf	xtoa@n+5,w,c
 10111  0023BE  1046               	iorwf	xtoa@n+6,w,c
 10112  0023C0  1047               	iorwf	xtoa@n+7,w,c
 10113  0023C2  A4D8               	btfss	status,2,c
 10114  0023C4  D75B               	goto	l6990
 10115  0023C6  BE3D               	btfsc	xtoa@p+1,7,c
 10116  0023C8  D005               	goto	u7740
 10117  0023CA  503D               	movf	xtoa@p+1,w,c
 10118  0023CC  E102               	bnz	u7741
 10119  0023CE  043C               	decf	xtoa@p,w,c
 10120  0023D0  B0D8               	btfsc	status,0,c
 10121  0023D2                     u7741:
 10122  0023D2  D754               	goto	l6990
 10123  0023D4                     u7740:
 10124  0023D4  BE3F               	btfsc	xtoa@w+1,7,c
 10125  0023D6  D008               	goto	u7760
 10126  0023D8  503F               	movf	xtoa@w+1,w,c
 10127  0023DA  E103               	bnz	u7750
 10128  0023DC  043E               	decf	xtoa@w,w,c
 10129  0023DE  A0D8               	btfss	status,0,c
 10130  0023E0  D003               	goto	u7760
 10131  0023E2                     u7750:
 10132  0023E2  0100               	movlb	0	; () banked
 10133  0023E4  B3EF               	btfsc	_flags& (0+255),1,b
 10134  0023E6  D74A               	goto	l6990
 10135  0023E8                     u7760:
 10136                           
 10137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10138  0023E8  0100               	movlb	0	; () banked
 10139  0023EA  A9EF               	btfss	_flags& (0+255),4,b
 10140  0023EC  D016               	goto	l7036
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10144  0023EE  0648               	decf	xtoa@i,f,c
 10145  0023F0  A0D8               	btfss	status,0,c
 10146  0023F2  0649               	decf	xtoa@i+1,f,c
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10150  0023F4  0E0A               	movlw	low _dbuf
 10151  0023F6  2448               	addwf	xtoa@i,w,c
 10152  0023F8  6ED9               	movwf	fsr2l,c
 10153  0023FA  0E01               	movlw	high _dbuf
 10154  0023FC  2049               	addwfc	xtoa@i+1,w,c
 10155  0023FE  6EDA               	movwf	fsr2h,c
 10156  002400  C02F  FFDF         	movff	xtoa@x,indf2
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10160  002404  0648               	decf	xtoa@i,f,c
 10161  002406  A0D8               	btfss	status,0,c
 10162  002408  0649               	decf	xtoa@i+1,f,c
 10163                           
 10164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10165  00240A  0E0A               	movlw	low _dbuf
 10166  00240C  2448               	addwf	xtoa@i,w,c
 10167  00240E  6ED9               	movwf	fsr2l,c
 10168  002410  0E01               	movlw	high _dbuf
 10169  002412  2049               	addwfc	xtoa@i+1,w,c
 10170  002414  6EDA               	movwf	fsr2h,c
 10171  002416  0E30               	movlw	48
 10172  002418  6EDF               	movwf	indf2,c
 10173  00241A                     l7036:
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10177  00241A  C025  F01A         	movff	xtoa@fp,pad@fp
 10178  00241E  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 10179  002422  0E0A               	movlw	low _dbuf
 10180  002424  2448               	addwf	xtoa@i,w,c
 10181  002426  6E1C               	movwf	pad@buf,c
 10182  002428  0E01               	movlw	high _dbuf
 10183  00242A  2049               	addwfc	xtoa@i+1,w,c
 10184  00242C  6E1D               	movwf	pad@buf+1,c
 10185  00242E  C03E  F01E         	movff	xtoa@w,pad@p
 10186  002432  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 10187  002436  EC00  F017         	call	_pad	;wreg free
 10188  00243A  C01A  F025         	movff	?_pad,?_xtoa
 10189  00243E  C01B  F026         	movff	?_pad+1,?_xtoa+1
 10190  002442  0012               	return		;funcret
 10191  002444                     __end_of_xtoa:
 10192                           	opt callstack 0
 10193                           
 10194 ;; *************** function _toupper *****************
 10195 ;; Defined at:
 10196 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  c               2   11[COMRAM] int 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  2   11[COMRAM] int 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;Total ram usage:        8 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    3
 10217 ;; This function calls:
 10218 ;;		_islower
 10219 ;; This function is called by:
 10220 ;;		_xtoa
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text38
 10225  00341A                     __ptext38:
 10226                           	opt callstack 0
 10227  00341A                     _toupper:
 10228                           	opt callstack 23
 10229                           
 10230                           ;incstack = 0
 10231  00341A  0E9F               	movlw	159
 10232  00341C  6E0E               	movwf	??_toupper& (0+255),c
 10233  00341E  0EFF               	movlw	255
 10234  003420  6E0F               	movwf	(??_toupper+1)& (0+255),c
 10235  003422  C00C  F010         	movff	toupper@c,??_toupper+2
 10236  003426  C00D  F011         	movff	toupper@c+1,??_toupper+3
 10237  00342A  500E               	movf	??_toupper,w,c
 10238  00342C  2610               	addwf	??_toupper+2,f,c
 10239  00342E  500F               	movf	??_toupper+1,w,c
 10240  003430  2211               	addwfc	??_toupper+3,f,c
 10241  003432  5011               	movf	??_toupper+3,w,c
 10242  003434  E106               	bnz	u7150
 10243  003436  0E1A               	movlw	26
 10244  003438  5C10               	subwf	??_toupper+2,w,c
 10245  00343A  B0D8               	btfsc	status,0,c
 10246  00343C  D002               	goto	u7150
 10247  00343E  0E01               	movlw	1
 10248  003440  D001               	goto	u7160
 10249  003442                     u7150:
 10250  003442  0E00               	movlw	0
 10251  003444                     u7160:
 10252  003444  6E12               	movwf	_toupper$1920,c
 10253  003446  6A13               	clrf	_toupper$1920+1,c
 10254  003448  5012               	movf	_toupper$1920,w,c
 10255  00344A  1013               	iorwf	_toupper$1920+1,w,c
 10256  00344C  B4D8               	btfsc	status,2,c
 10257  00344E  D005               	goto	l1482
 10258  003450  0E5F               	movlw	95
 10259  003452  140C               	andwf	toupper@c,w,c
 10260  003454  6E0C               	movwf	?_toupper,c
 10261  003456  6A0D               	clrf	?_toupper+1,c
 10262  003458  0012               	return	
 10263  00345A                     l1482:
 10264  00345A  C00C  F00C         	movff	toupper@c,?_toupper
 10265  00345E  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 10266  003462  0012               	return		;funcret
 10267  003464                     __end_of_toupper:
 10268                           	opt callstack 0
 10269                           
 10270 ;; *************** function _islower *****************
 10271 ;; Defined at:
 10272 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  c               2    5[COMRAM] int 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  2    5[COMRAM] int 
 10279 ;; Registers used:
 10280 ;;		wreg, status,2, status,0
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;Total ram usage:        6 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    2
 10293 ;; This function calls:
 10294 ;;		Nothing
 10295 ;; This function is called by:
 10296 ;;		_toupper
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text39
 10301  0036D8                     __ptext39:
 10302                           	opt callstack 0
 10303  0036D8                     _islower:
 10304                           	opt callstack 23
 10305                           
 10306                           ;incstack = 0
 10307  0036D8  0E9F               	movlw	159
 10308  0036DA  6E08               	movwf	??_islower& (0+255),c
 10309  0036DC  0EFF               	movlw	255
 10310  0036DE  6E09               	movwf	(??_islower+1)& (0+255),c
 10311  0036E0  C006  F00A         	movff	islower@c,??_islower+2
 10312  0036E4  C007  F00B         	movff	islower@c+1,??_islower+3
 10313  0036E8  5008               	movf	??_islower,w,c
 10314  0036EA  260A               	addwf	??_islower+2,f,c
 10315  0036EC  5009               	movf	??_islower+1,w,c
 10316  0036EE  220B               	addwfc	??_islower+3,f,c
 10317  0036F0  500B               	movf	??_islower+3,w,c
 10318  0036F2  E106               	bnz	u7040
 10319  0036F4  0E1A               	movlw	26
 10320  0036F6  5C0A               	subwf	??_islower+2,w,c
 10321  0036F8  B0D8               	btfsc	status,0,c
 10322  0036FA  D002               	goto	u7040
 10323  0036FC  0E01               	movlw	1
 10324  0036FE  D001               	goto	u7050
 10325  003700                     u7040:
 10326  003700  0E00               	movlw	0
 10327  003702                     u7050:
 10328  003702  6E06               	movwf	?_islower,c
 10329  003704  6A07               	clrf	?_islower+1,c
 10330  003706  0012               	return		;funcret
 10331  003708                     __end_of_islower:
 10332                           	opt callstack 0
 10333                           
 10334 ;; *************** function _isupper *****************
 10335 ;; Defined at:
 10336 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  c               2    5[COMRAM] int 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;		None
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2    5[COMRAM] int 
 10343 ;; Registers used:
 10344 ;;		wreg, status,2, status,0
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10352 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;Total ram usage:        6 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    2
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_xtoa
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           	psect	text40
 10365  003708                     __ptext40:
 10366                           	opt callstack 0
 10367  003708                     _isupper:
 10368                           	opt callstack 24
 10369                           
 10370                           ;incstack = 0
 10371  003708  0EBF               	movlw	191
 10372  00370A  6E08               	movwf	??_isupper& (0+255),c
 10373  00370C  0EFF               	movlw	255
 10374  00370E  6E09               	movwf	(??_isupper+1)& (0+255),c
 10375  003710  C006  F00A         	movff	isupper@c,??_isupper+2
 10376  003714  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10377  003718  5008               	movf	??_isupper,w,c
 10378  00371A  260A               	addwf	??_isupper+2,f,c
 10379  00371C  5009               	movf	??_isupper+1,w,c
 10380  00371E  220B               	addwfc	??_isupper+3,f,c
 10381  003720  500B               	movf	??_isupper+3,w,c
 10382  003722  E106               	bnz	u7110
 10383  003724  0E1A               	movlw	26
 10384  003726  5C0A               	subwf	??_isupper+2,w,c
 10385  003728  B0D8               	btfsc	status,0,c
 10386  00372A  D002               	goto	u7110
 10387  00372C  0E01               	movlw	1
 10388  00372E  D001               	goto	u7120
 10389  003730                     u7110:
 10390  003730  0E00               	movlw	0
 10391  003732                     u7120:
 10392  003732  6E06               	movwf	?_isupper,c
 10393  003734  6A07               	clrf	?_isupper+1,c
 10394  003736  0012               	return		;funcret
 10395  003738                     __end_of_isupper:
 10396                           	opt callstack 0
 10397                           
 10398 ;; *************** function _isalpha *****************
 10399 ;; Defined at:
 10400 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  c               2    5[COMRAM] int 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  2    5[COMRAM] int 
 10407 ;; Registers used:
 10408 ;;		wreg, status,2, status,0
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;Total ram usage:        6 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:    2
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_xtoa
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text41
 10429  003672                     __ptext41:
 10430                           	opt callstack 0
 10431  003672                     _isalpha:
 10432                           	opt callstack 24
 10433                           
 10434                           ;incstack = 0
 10435  003672  0E9F               	movlw	159
 10436  003674  6E08               	movwf	??_isalpha& (0+255),c
 10437  003676  0EFF               	movlw	255
 10438  003678  6E09               	movwf	(??_isalpha+1)& (0+255),c
 10439  00367A  0E20               	movlw	32
 10440  00367C  1006               	iorwf	isalpha@c,w,c
 10441  00367E  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 10442  003680  0E00               	movlw	0
 10443  003682  1007               	iorwf	isalpha@c+1,w,c
 10444  003684  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 10445  003686  5008               	movf	??_isalpha,w,c
 10446  003688  260A               	addwf	??_isalpha+2,f,c
 10447  00368A  5009               	movf	??_isalpha+1,w,c
 10448  00368C  220B               	addwfc	??_isalpha+3,f,c
 10449  00368E  500B               	movf	??_isalpha+3,w,c
 10450  003690  E106               	bnz	u7130
 10451  003692  0E1A               	movlw	26
 10452  003694  5C0A               	subwf	??_isalpha+2,w,c
 10453  003696  B0D8               	btfsc	status,0,c
 10454  003698  D002               	goto	u7130
 10455  00369A  0E01               	movlw	1
 10456  00369C  D001               	goto	u7140
 10457  00369E                     u7130:
 10458  00369E  0E00               	movlw	0
 10459  0036A0                     u7140:
 10460  0036A0  6E06               	movwf	?_isalpha,c
 10461  0036A2  6A07               	clrf	?_isalpha+1,c
 10462  0036A4  0012               	return		;funcret
 10463  0036A6                     __end_of_isalpha:
 10464                           	opt callstack 0
 10465                           
 10466 ;; *************** function _stoa *****************
 10467 ;; Defined at:
 10468 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 10471 ;;		 -> NULL(0), 
 10472 ;;  s               2   20[COMRAM] PTR unsigned char 
 10473 ;;		 -> ?_printf(2), STR_51(16), STR_49(14), STR_47(11), 
 10474 ;;		 -> STR_45(9), STR_43(16), STR_41(13), STR_39(13), 
 10475 ;;		 -> STR_37(9), STR_35(13), STR_33(14), STR_31(10), 
 10476 ;;		 -> STR_27(9), STR_18(14), STR_16(16), STR_14(14), 
 10477 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 10478 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  nuls            7   23[COMRAM] unsigned char [7]
 10481 ;;  l               2   38[COMRAM] int 
 10482 ;;  p               2   36[COMRAM] int 
 10483 ;;  cp              2   34[COMRAM] PTR unsigned char 
 10484 ;;		 -> ?_printf(2), stoa@nuls(7), STR_51(16), STR_49(14), 
 10485 ;;		 -> STR_47(11), STR_45(9), STR_43(16), STR_41(13), 
 10486 ;;		 -> STR_39(13), STR_37(9), STR_35(13), STR_33(14), 
 10487 ;;		 -> STR_31(10), STR_27(9), STR_18(14), STR_16(16), 
 10488 ;;		 -> STR_14(14), STR_12(2), STR_11(6), STR_9(16), 
 10489 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 10490 ;;  w               2   32[COMRAM] int 
 10491 ;;  i               2   30[COMRAM] int 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  2   18[COMRAM] int 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;Total ram usage:       22 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    7
 10508 ;; This function calls:
 10509 ;;		_fputc
 10510 ;;		_strlen
 10511 ;; This function is called by:
 10512 ;;		_vfpfcnvrt
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text42
 10517  00278E                     __ptext42:
 10518                           	opt callstack 0
 10519  00278E                     _stoa:
 10520                           	opt callstack 20
 10521                           
 10522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10523                           
 10524                           ;incstack = 0
 10525  00278E  EE21  F03A         	lfsr	2,stoa@F1144
 10526  002792  EE10  F018         	lfsr	1,stoa@nuls
 10527  002796  0E06               	movlw	6
 10528  002798                     u7511:
 10529  002798  CFDB FFE3          	movff	plusw2,plusw1
 10530  00279C  06E8               	decf	wreg,f,c
 10531  00279E  E2FC               	bc	u7511
 10532                           
 10533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 10534  0027A0  C015  F023         	movff	stoa@s,stoa@cp
 10535  0027A4  C016  F024         	movff	stoa@s+1,stoa@cp+1
 10536                           
 10537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 10538  0027A8  5023               	movf	stoa@cp,w,c
 10539  0027AA  1024               	iorwf	stoa@cp+1,w,c
 10540  0027AC  A4D8               	btfss	status,2,c
 10541  0027AE  D004               	goto	l6940
 10542                           
 10543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 10544  0027B0  0E18               	movlw	low stoa@nuls
 10545  0027B2  6E23               	movwf	stoa@cp,c
 10546  0027B4  0E00               	movlw	high stoa@nuls
 10547  0027B6  6E24               	movwf	stoa@cp+1,c
 10548  0027B8                     l6940:
 10549                           
 10550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 10551  0027B8  C023  F006         	movff	stoa@cp,strlen@s
 10552  0027BC  C024  F007         	movff	stoa@cp+1,strlen@s+1
 10553  0027C0  EC78  F01A         	call	_strlen	;wreg free
 10554  0027C4  C006  F027         	movff	?_strlen,stoa@l
 10555  0027C8  C007  F028         	movff	?_strlen+1,stoa@l+1
 10556                           
 10557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 10558  0027CC  C0ED  F025         	movff	_prec,stoa@p
 10559  0027D0  C0EE  F026         	movff	_prec+1,stoa@p+1
 10560                           
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 10562  0027D4  BE26               	btfsc	stoa@p+1,7,c
 10563  0027D6  D00E               	goto	l621
 10564  0027D8  5027               	movf	stoa@l,w,c
 10565  0027DA  5C25               	subwf	stoa@p,w,c
 10566  0027DC  5026               	movf	stoa@p+1,w,c
 10567  0027DE  0A80               	xorlw	128
 10568  0027E0  6E17               	movwf	??_stoa& (0+255),c
 10569  0027E2  5028               	movf	stoa@l+1,w,c
 10570  0027E4  0A80               	xorlw	128
 10571  0027E6  5817               	subwfb	??_stoa& (0+255),w,c
 10572  0027E8  B0D8               	btfsc	status,0,c
 10573  0027EA  D004               	goto	l621
 10574  0027EC  C025  F027         	movff	stoa@p,stoa@l
 10575  0027F0  C026  F028         	movff	stoa@p+1,stoa@l+1
 10576  0027F4                     l621:
 10577                           
 10578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 10579  0027F4  C027  F025         	movff	stoa@l,stoa@p
 10580  0027F8  C028  F026         	movff	stoa@l+1,stoa@p+1
 10581                           
 10582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 10583  0027FC  C0EB  F021         	movff	_width,stoa@w
 10584  002800  C0EC  F022         	movff	_width+1,stoa@w+1
 10585                           
 10586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 10587  002804  0100               	movlb	0	; () banked
 10588  002806  A1EF               	btfss	_flags& (0+255),0,b
 10589  002808  D00D               	goto	l6954
 10590  00280A  D016               	goto	u7560
 10591  00280C                     l6950:
 10592                           
 10593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 10594  00280C  0E00               	movlw	0
 10595  00280E  6E0B               	movwf	fputc@c+1,c
 10596  002810  0E20               	movlw	32
 10597  002812  6E0A               	movwf	fputc@c,c
 10598  002814  C013  F00C         	movff	stoa@fp,fputc@fp
 10599  002818  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10600  00281C  EC96  F018         	call	_fputc	;wreg free
 10601                           
 10602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 10603  002820  4A27               	infsnz	stoa@l,f,c
 10604  002822  2A28               	incf	stoa@l+1,f,c
 10605  002824                     l6954:
 10606                           
 10607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 10608  002824  5021               	movf	stoa@w,w,c
 10609  002826  5C27               	subwf	stoa@l,w,c
 10610  002828  5028               	movf	stoa@l+1,w,c
 10611  00282A  0A80               	xorlw	128
 10612  00282C  6E17               	movwf	??_stoa& (0+255),c
 10613  00282E  5022               	movf	stoa@w+1,w,c
 10614  002830  0A80               	xorlw	128
 10615  002832  5817               	subwfb	??_stoa& (0+255),w,c
 10616  002834  A0D8               	btfss	status,0,c
 10617  002836  D7EA               	goto	l6950
 10618  002838                     u7560:
 10619                           
 10620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 10621  002838  0E00               	movlw	0
 10622  00283A  6E20               	movwf	stoa@i+1,c
 10623  00283C  0E00               	movlw	0
 10624  00283E  6E1F               	movwf	stoa@i,c
 10625                           
 10626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10627  002840  D01F               	goto	l6964
 10628  002842                     l6958:
 10629                           
 10630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 10631  002842  C023  FFF6         	movff	stoa@cp,tblptrl
 10632  002846  C024  FFF7         	movff	stoa@cp+1,tblptrh
 10633  00284A  0E00               	movlw	low (__mediumconst shr (0+16))
 10634  00284C  6EF8               	movwf	tblptru,c
 10635  00284E  0E0F               	movlw	(high __ramtop+-1)
 10636  002850  64F7               	cpfsgt	tblptrh,c
 10637  002852  D003               	bra	u7577
 10638  002854  0008               	tblrd		*
 10639  002856  50F5               	movf	tablat,w,c
 10640  002858  D005               	bra	u7570
 10641  00285A                     u7577:
 10642  00285A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10643  00285E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10644  002862  50E7               	movf	indf1,w,c
 10645  002864                     u7570:
 10646  002864  6E17               	movwf	??_stoa& (0+255),c
 10647  002866  5017               	movf	??_stoa,w,c
 10648  002868  6E0A               	movwf	fputc@c,c
 10649  00286A  6A0B               	clrf	fputc@c+1,c
 10650  00286C  C013  F00C         	movff	stoa@fp,fputc@fp
 10651  002870  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10652  002874  EC96  F018         	call	_fputc	;wreg free
 10653                           
 10654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 10655  002878  4A23               	infsnz	stoa@cp,f,c
 10656  00287A  2A24               	incf	stoa@cp+1,f,c
 10657                           
 10658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 10659  00287C  4A1F               	infsnz	stoa@i,f,c
 10660  00287E  2A20               	incf	stoa@i+1,f,c
 10661  002880                     l6964:
 10662                           
 10663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 10664  002880  5025               	movf	stoa@p,w,c
 10665  002882  5C1F               	subwf	stoa@i,w,c
 10666  002884  5020               	movf	stoa@i+1,w,c
 10667  002886  0A80               	xorlw	128
 10668  002888  6E17               	movwf	??_stoa& (0+255),c
 10669  00288A  5026               	movf	stoa@p+1,w,c
 10670  00288C  0A80               	xorlw	128
 10671  00288E  5817               	subwfb	??_stoa& (0+255),w,c
 10672  002890  A0D8               	btfss	status,0,c
 10673  002892  D7D7               	goto	l6958
 10674                           
 10675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 10676  002894  0100               	movlb	0	; () banked
 10677  002896  B1EF               	btfsc	_flags& (0+255),0,b
 10678  002898  D00D               	goto	l6972
 10679  00289A  D016               	goto	u7600
 10680  00289C                     l6968:
 10681                           
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 10683  00289C  0E00               	movlw	0
 10684  00289E  6E0B               	movwf	fputc@c+1,c
 10685  0028A0  0E20               	movlw	32
 10686  0028A2  6E0A               	movwf	fputc@c,c
 10687  0028A4  C013  F00C         	movff	stoa@fp,fputc@fp
 10688  0028A8  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 10689  0028AC  EC96  F018         	call	_fputc	;wreg free
 10690                           
 10691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 10692  0028B0  4A27               	infsnz	stoa@l,f,c
 10693  0028B2  2A28               	incf	stoa@l+1,f,c
 10694  0028B4                     l6972:
 10695                           
 10696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 10697  0028B4  5021               	movf	stoa@w,w,c
 10698  0028B6  5C27               	subwf	stoa@l,w,c
 10699  0028B8  5028               	movf	stoa@l+1,w,c
 10700  0028BA  0A80               	xorlw	128
 10701  0028BC  6E17               	movwf	??_stoa& (0+255),c
 10702  0028BE  5022               	movf	stoa@w+1,w,c
 10703  0028C0  0A80               	xorlw	128
 10704  0028C2  5817               	subwfb	??_stoa& (0+255),w,c
 10705  0028C4  A0D8               	btfss	status,0,c
 10706  0028C6  D7EA               	goto	l6968
 10707  0028C8                     u7600:
 10708                           
 10709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 10710                           
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 10712  0028C8  C027  F013         	movff	stoa@l,?_stoa
 10713  0028CC  C028  F014         	movff	stoa@l+1,?_stoa+1
 10714  0028D0  0012               	return		;funcret
 10715  0028D2                     __end_of_stoa:
 10716                           	opt callstack 0
 10717                           
 10718 ;; *************** function _dtoa *****************
 10719 ;; Defined at:
 10720 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 10723 ;;		 -> NULL(0), 
 10724 ;;  d               8   38[COMRAM] long long 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  n               8   62[COMRAM] long long 
 10727 ;;  i               2   70[COMRAM] int 
 10728 ;;  s               2   60[COMRAM] int 
 10729 ;;  w               2   58[COMRAM] int 
 10730 ;;  p               2   56[COMRAM] int 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  2   36[COMRAM] int 
 10733 ;; Registers used:
 10734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10740 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;Total ram usage:       36 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:    9
 10747 ;; This function calls:
 10748 ;;		___aodiv
 10749 ;;		___aomod
 10750 ;;		_abs
 10751 ;;		_pad
 10752 ;; This function is called by:
 10753 ;;		_vfpfcnvrt
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text43
 10758  001FCA                     __ptext43:
 10759                           	opt callstack 0
 10760  001FCA                     _dtoa:
 10761                           	opt callstack 18
 10762                           
 10763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10764                           
 10765                           ;incstack = 0
 10766  001FCA  C027  F03F         	movff	dtoa@d,dtoa@n
 10767  001FCE  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 10768  001FD2  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 10769  001FD6  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 10770  001FDA  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 10771  001FDE  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 10772  001FE2  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 10773  001FE6  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 10774                           
 10775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10776  001FEA  AE46               	btfss	dtoa@n+7,7,c
 10777  001FEC  D002               	goto	u7360
 10778  001FEE  0E01               	movlw	1
 10779  001FF0  D001               	goto	u7370
 10780  001FF2                     u7360:
 10781  001FF2  0E00               	movlw	0
 10782  001FF4                     u7370:
 10783  001FF4  6E3D               	movwf	dtoa@s,c
 10784  001FF6  6A3E               	clrf	dtoa@s+1,c
 10785                           
 10786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10787  001FF8  503D               	movf	dtoa@s,w,c
 10788  001FFA  103E               	iorwf	dtoa@s+1,w,c
 10789  001FFC  B4D8               	btfsc	status,2,c
 10790  001FFE  D010               	goto	l6876
 10791                           
 10792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10793  002000  1E46               	comf	dtoa@n+7,f,c
 10794  002002  1E45               	comf	dtoa@n+6,f,c
 10795  002004  1E44               	comf	dtoa@n+5,f,c
 10796  002006  1E43               	comf	dtoa@n+4,f,c
 10797  002008  1E42               	comf	dtoa@n+3,f,c
 10798  00200A  1E41               	comf	dtoa@n+2,f,c
 10799  00200C  1E40               	comf	dtoa@n+1,f,c
 10800  00200E  6C3F               	negf	dtoa@n,c
 10801  002010  0E00               	movlw	0
 10802  002012  2240               	addwfc	dtoa@n+1,f,c
 10803  002014  2241               	addwfc	dtoa@n+2,f,c
 10804  002016  2242               	addwfc	dtoa@n+3,f,c
 10805  002018  2243               	addwfc	dtoa@n+4,f,c
 10806  00201A  2244               	addwfc	dtoa@n+5,f,c
 10807  00201C  2245               	addwfc	dtoa@n+6,f,c
 10808  00201E  2246               	addwfc	dtoa@n+7,f,c
 10809  002020                     l6876:
 10810                           
 10811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10812  002020  0100               	movlb	0	; () banked
 10813  002022  AFEE               	btfss	(_prec+1)& (0+255),7,b
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10817  002024  93EF               	bcf	_flags& (0+255),1,b
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10821  002026  BFEE               	btfsc	(_prec+1)& (0+255),7,b
 10822  002028  D005               	goto	u7400
 10823  00202A  51EE               	movf	(_prec+1)& (0+255),w,b
 10824  00202C  E108               	bnz	l592
 10825  00202E  05ED               	decf	_prec& (0+255),w,b
 10826  002030  B0D8               	btfsc	status,0,c
 10827  002032  D005               	goto	l592
 10828  002034                     u7400:
 10829                           
 10830                           ; BSR set to: 0
 10831  002034  0E00               	movlw	0
 10832  002036  6E3A               	movwf	dtoa@p+1,c
 10833  002038  0E01               	movlw	1
 10834  00203A  6E39               	movwf	dtoa@p,c
 10835  00203C  D004               	goto	l594
 10836  00203E                     l592:
 10837                           
 10838                           ; BSR set to: 0
 10839  00203E  C0ED  F039         	movff	_prec,dtoa@p
 10840  002042  C0EE  F03A         	movff	_prec+1,dtoa@p+1
 10841  002046                     l594:
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10845  002046  C0EB  F03B         	movff	_width,dtoa@w
 10846  00204A  C0EC  F03C         	movff	_width+1,dtoa@w+1
 10847                           
 10848                           ; BSR set to: 0
 10849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10850  00204E  503D               	movf	dtoa@s,w,c
 10851  002050  103E               	iorwf	dtoa@s+1,w,c
 10852  002052  A4D8               	btfss	status,2,c
 10853  002054  D002               	goto	u7420
 10854                           
 10855                           ; BSR set to: 0
 10856  002056  A5EF               	btfss	_flags& (0+255),2,b
 10857  002058  D003               	goto	l6890
 10858  00205A                     u7420:
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10862  00205A  063B               	decf	dtoa@w,f,c
 10863  00205C  A0D8               	btfss	status,0,c
 10864  00205E  063C               	decf	dtoa@w+1,f,c
 10865  002060                     l6890:
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10869  002060  0E00               	movlw	0
 10870  002062  6E48               	movwf	dtoa@i+1,c
 10871  002064  0E1F               	movlw	31
 10872  002066  6E47               	movwf	dtoa@i,c
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10876  002068  0E00               	movlw	0
 10877  00206A  0101               	movlb	1	; () banked
 10878  00206C  6F29               	movwf	(_dbuf+31)& (0+255),b
 10879                           
 10880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10881  00206E  D07C               	goto	l6904
 10882  002070                     l6894:
 10883                           
 10884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10885  002070  0647               	decf	dtoa@i,f,c
 10886  002072  A0D8               	btfss	status,0,c
 10887  002074  0648               	decf	dtoa@i+1,f,c
 10888                           
 10889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10890  002076  0E0A               	movlw	low _dbuf
 10891  002078  2447               	addwf	dtoa@i,w,c
 10892  00207A  6ED9               	movwf	fsr2l,c
 10893  00207C  0E01               	movlw	high _dbuf
 10894  00207E  2048               	addwfc	dtoa@i+1,w,c
 10895  002080  6EDA               	movwf	fsr2h,c
 10896  002082  C03F  F006         	movff	dtoa@n,___aomod@dividend
 10897  002086  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 10898  00208A  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 10899  00208E  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 10900  002092  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 10901  002096  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 10902  00209A  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 10903  00209E  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 10904  0020A2  0E0A               	movlw	10
 10905  0020A4  6E0E               	movwf	___aomod@divisor,c
 10906  0020A6  0E00               	movlw	0
 10907  0020A8  6E0F               	movwf	___aomod@divisor+1,c
 10908  0020AA  0E00               	movlw	0
 10909  0020AC  6E10               	movwf	___aomod@divisor+2,c
 10910  0020AE  0E00               	movlw	0
 10911  0020B0  6E11               	movwf	___aomod@divisor+3,c
 10912  0020B2  0E00               	movlw	0
 10913  0020B4  6E12               	movwf	___aomod@divisor+4,c
 10914  0020B6  0E00               	movlw	0
 10915  0020B8  6E13               	movwf	___aomod@divisor+5,c
 10916  0020BA  0E00               	movlw	0
 10917  0020BC  6E14               	movwf	___aomod@divisor+6,c
 10918  0020BE  0E00               	movlw	0
 10919  0020C0  6E15               	movwf	___aomod@divisor+7,c
 10920  0020C2  ECA9  F015         	call	___aomod	;wreg free
 10921  0020C6  C006  F02F         	movff	?___aomod,??_dtoa
 10922  0020CA  C007  F030         	movff	?___aomod+1,??_dtoa+1
 10923  0020CE  C008  F031         	movff	?___aomod+2,??_dtoa+2
 10924  0020D2  C009  F032         	movff	?___aomod+3,??_dtoa+3
 10925  0020D6  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 10926  0020DA  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 10927  0020DE  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 10928  0020E2  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 10929  0020E6  C02F  F018         	movff	??_dtoa,abs@a
 10930  0020EA  C031  F019         	movff	??_dtoa+2,abs@a+1
 10931  0020EE  EC53  F01B         	call	_abs	;wreg free
 10932  0020F2  5018               	movf	?_abs,w,c
 10933  0020F4  0F30               	addlw	48
 10934  0020F6  6EDF               	movwf	indf2,c
 10935                           
 10936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10937  0020F8  0639               	decf	dtoa@p,f,c
 10938  0020FA  A0D8               	btfss	status,0,c
 10939  0020FC  063A               	decf	dtoa@p+1,f,c
 10940                           
 10941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10942  0020FE  063B               	decf	dtoa@w,f,c
 10943  002100  A0D8               	btfss	status,0,c
 10944  002102  063C               	decf	dtoa@w+1,f,c
 10945                           
 10946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10947  002104  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 10948  002108  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 10949  00210C  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 10950  002110  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 10951  002114  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 10952  002118  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 10953  00211C  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 10954  002120  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 10955  002124  0E0A               	movlw	10
 10956  002126  6E0E               	movwf	___aodiv@divisor,c
 10957  002128  0E00               	movlw	0
 10958  00212A  6E0F               	movwf	___aodiv@divisor+1,c
 10959  00212C  0E00               	movlw	0
 10960  00212E  6E10               	movwf	___aodiv@divisor+2,c
 10961  002130  0E00               	movlw	0
 10962  002132  6E11               	movwf	___aodiv@divisor+3,c
 10963  002134  0E00               	movlw	0
 10964  002136  6E12               	movwf	___aodiv@divisor+4,c
 10965  002138  0E00               	movlw	0
 10966  00213A  6E13               	movwf	___aodiv@divisor+5,c
 10967  00213C  0E00               	movlw	0
 10968  00213E  6E14               	movwf	___aodiv@divisor+6,c
 10969  002140  0E00               	movlw	0
 10970  002142  6E15               	movwf	___aodiv@divisor+7,c
 10971  002144  EC23  F013         	call	___aodiv	;wreg free
 10972  002148  C006  F03F         	movff	?___aodiv,dtoa@n
 10973  00214C  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 10974  002150  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 10975  002154  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 10976  002158  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 10977  00215C  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 10978  002160  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 10979  002164  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 10980  002168                     l6904:
 10981                           
 10982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10983  002168  BE48               	btfsc	dtoa@i+1,7,c
 10984  00216A  D020               	goto	u7470
 10985  00216C  5048               	movf	dtoa@i+1,w,c
 10986  00216E  E103               	bnz	u7430
 10987  002170  0447               	decf	dtoa@i,w,c
 10988  002172  A0D8               	btfss	status,0,c
 10989  002174  D01B               	goto	u7470
 10990  002176                     u7430:
 10991  002176  503F               	movf	dtoa@n,w,c
 10992  002178  1040               	iorwf	dtoa@n+1,w,c
 10993  00217A  1041               	iorwf	dtoa@n+2,w,c
 10994  00217C  1042               	iorwf	dtoa@n+3,w,c
 10995  00217E  1043               	iorwf	dtoa@n+4,w,c
 10996  002180  1044               	iorwf	dtoa@n+5,w,c
 10997  002182  1045               	iorwf	dtoa@n+6,w,c
 10998  002184  1046               	iorwf	dtoa@n+7,w,c
 10999  002186  A4D8               	btfss	status,2,c
 11000  002188  D773               	goto	l6894
 11001  00218A  BE3A               	btfsc	dtoa@p+1,7,c
 11002  00218C  D005               	goto	u7450
 11003  00218E  503A               	movf	dtoa@p+1,w,c
 11004  002190  E102               	bnz	u7451
 11005  002192  0439               	decf	dtoa@p,w,c
 11006  002194  B0D8               	btfsc	status,0,c
 11007  002196                     u7451:
 11008  002196  D76C               	goto	l6894
 11009  002198                     u7450:
 11010  002198  BE3C               	btfsc	dtoa@w+1,7,c
 11011  00219A  D008               	goto	u7470
 11012  00219C  503C               	movf	dtoa@w+1,w,c
 11013  00219E  E103               	bnz	u7460
 11014  0021A0  043B               	decf	dtoa@w,w,c
 11015  0021A2  A0D8               	btfss	status,0,c
 11016  0021A4  D003               	goto	u7470
 11017  0021A6                     u7460:
 11018  0021A6  0100               	movlb	0	; () banked
 11019  0021A8  B3EF               	btfsc	_flags& (0+255),1,b
 11020  0021AA  D762               	goto	l6894
 11021  0021AC                     u7470:
 11022                           
 11023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 11024  0021AC  503D               	movf	dtoa@s,w,c
 11025  0021AE  103E               	iorwf	dtoa@s+1,w,c
 11026  0021B0  A4D8               	btfss	status,2,c
 11027  0021B2  D003               	goto	u7490
 11028  0021B4  0100               	movlb	0	; () banked
 11029  0021B6  A5EF               	btfss	_flags& (0+255),2,b
 11030  0021B8  D017               	goto	l6928
 11031  0021BA                     u7490:
 11032                           
 11033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 11034  0021BA  0647               	decf	dtoa@i,f,c
 11035  0021BC  A0D8               	btfss	status,0,c
 11036  0021BE  0648               	decf	dtoa@i+1,f,c
 11037                           
 11038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 11039  0021C0  503D               	movf	dtoa@s,w,c
 11040  0021C2  103E               	iorwf	dtoa@s+1,w,c
 11041  0021C4  A4D8               	btfss	status,2,c
 11042  0021C6  D004               	goto	l6924
 11043  0021C8  0E00               	movlw	0
 11044  0021CA  6E38               	movwf	_dtoa$1333+1,c
 11045  0021CC  0E2B               	movlw	43
 11046  0021CE  D003               	goto	L18
 11047  0021D0                     l6924:
 11048  0021D0  0E00               	movlw	0
 11049  0021D2  6E38               	movwf	_dtoa$1333+1,c
 11050  0021D4  0E2D               	movlw	45
 11051  0021D6                     L18:
 11052  0021D6  6E37               	movwf	_dtoa$1333,c
 11053  0021D8  0E0A               	movlw	low _dbuf
 11054  0021DA  2447               	addwf	dtoa@i,w,c
 11055  0021DC  6ED9               	movwf	fsr2l,c
 11056  0021DE  0E01               	movlw	high _dbuf
 11057  0021E0  2048               	addwfc	dtoa@i+1,w,c
 11058  0021E2  6EDA               	movwf	fsr2h,c
 11059  0021E4  C037  FFDF         	movff	_dtoa$1333,indf2
 11060  0021E8                     l6928:
 11061                           
 11062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 11063  0021E8  C025  F01A         	movff	dtoa@fp,pad@fp
 11064  0021EC  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 11065  0021F0  0E0A               	movlw	low _dbuf
 11066  0021F2  2447               	addwf	dtoa@i,w,c
 11067  0021F4  6E1C               	movwf	pad@buf,c
 11068  0021F6  0E01               	movlw	high _dbuf
 11069  0021F8  2048               	addwfc	dtoa@i+1,w,c
 11070  0021FA  6E1D               	movwf	pad@buf+1,c
 11071  0021FC  C03B  F01E         	movff	dtoa@w,pad@p
 11072  002200  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 11073  002204  EC00  F017         	call	_pad	;wreg free
 11074  002208  C01A  F025         	movff	?_pad,?_dtoa
 11075  00220C  C01B  F026         	movff	?_pad+1,?_dtoa+1
 11076  002210  0012               	return		;funcret
 11077  002212                     __end_of_dtoa:
 11078                           	opt callstack 0
 11079                           
 11080 ;; *************** function _abs *****************
 11081 ;; Defined at:
 11082 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  a               2   23[COMRAM] int 
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;		None
 11087 ;; Return value:  Size  Location     Type
 11088 ;;                  2   23[COMRAM] int 
 11089 ;; Registers used:
 11090 ;;		wreg, status,2, status,0
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;Total ram usage:        4 bytes
 11101 ;; Hardware stack levels used:    1
 11102 ;; Hardware stack levels required when called:    2
 11103 ;; This function calls:
 11104 ;;		Nothing
 11105 ;; This function is called by:
 11106 ;;		_tirePositioning
 11107 ;;		_doOperation
 11108 ;;		_dtoa
 11109 ;;		_opErrorCorrectionDegrees
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text44
 11114  0036A6                     __ptext44:
 11115                           	opt callstack 0
 11116  0036A6                     _abs:
 11117                           	opt callstack 24
 11118                           
 11119                           ;incstack = 0
 11120  0036A6  BE19               	btfsc	abs@a+1,7,c
 11121  0036A8  D005               	goto	u7060
 11122  0036AA  5019               	movf	abs@a+1,w,c
 11123  0036AC  E110               	bnz	l1384
 11124  0036AE  0418               	decf	abs@a,w,c
 11125  0036B0  B0D8               	btfsc	status,0,c
 11126  0036B2  D00D               	goto	l1384
 11127  0036B4                     u7060:
 11128  0036B4  C018  F01A         	movff	abs@a,??_abs
 11129  0036B8  C019  F01B         	movff	abs@a+1,??_abs+1
 11130  0036BC  1E1A               	comf	??_abs,f,c
 11131  0036BE  1E1B               	comf	??_abs+1,f,c
 11132  0036C0  4A1A               	infsnz	??_abs,f,c
 11133  0036C2  2A1B               	incf	??_abs+1,f,c
 11134  0036C4  C01A  F018         	movff	??_abs,?_abs
 11135  0036C8  C01B  F019         	movff	??_abs+1,?_abs+1
 11136  0036CC  0012               	return	
 11137  0036CE                     l1384:
 11138  0036CE  C018  F018         	movff	abs@a,?_abs
 11139  0036D2  C019  F019         	movff	abs@a+1,?_abs+1
 11140  0036D6  0012               	return		;funcret
 11141  0036D8                     __end_of_abs:
 11142                           	opt callstack 0
 11143                           
 11144 ;; *************** function ___aomod *****************
 11145 ;; Defined at:
 11146 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  dividend        8    5[COMRAM] long long 
 11149 ;;  divisor         8   13[COMRAM] long long 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  sign            1   22[COMRAM] unsigned char 
 11152 ;;  counter         1   21[COMRAM] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  8    5[COMRAM] long long 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11162 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;Total ram usage:       18 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    2
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_dtoa
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text45
 11177  002B52                     __ptext45:
 11178                           	opt callstack 0
 11179  002B52                     ___aomod:
 11180                           	opt callstack 24
 11181                           
 11182                           ;incstack = 0
 11183  002B52  0E00               	movlw	0
 11184  002B54  6E17               	movwf	___aomod@sign,c
 11185  002B56  AE0D               	btfss	___aomod@dividend+7,7,c
 11186  002B58  D012               	goto	l6816
 11187  002B5A  1E0D               	comf	___aomod@dividend+7,f,c
 11188  002B5C  1E0C               	comf	___aomod@dividend+6,f,c
 11189  002B5E  1E0B               	comf	___aomod@dividend+5,f,c
 11190  002B60  1E0A               	comf	___aomod@dividend+4,f,c
 11191  002B62  1E09               	comf	___aomod@dividend+3,f,c
 11192  002B64  1E08               	comf	___aomod@dividend+2,f,c
 11193  002B66  1E07               	comf	___aomod@dividend+1,f,c
 11194  002B68  6C06               	negf	___aomod@dividend,c
 11195  002B6A  0E00               	movlw	0
 11196  002B6C  2207               	addwfc	___aomod@dividend+1,f,c
 11197  002B6E  2208               	addwfc	___aomod@dividend+2,f,c
 11198  002B70  2209               	addwfc	___aomod@dividend+3,f,c
 11199  002B72  220A               	addwfc	___aomod@dividend+4,f,c
 11200  002B74  220B               	addwfc	___aomod@dividend+5,f,c
 11201  002B76  220C               	addwfc	___aomod@dividend+6,f,c
 11202  002B78  220D               	addwfc	___aomod@dividend+7,f,c
 11203  002B7A  0E01               	movlw	1
 11204  002B7C  6E17               	movwf	___aomod@sign,c
 11205  002B7E                     l6816:
 11206  002B7E  AE15               	btfss	___aomod@divisor+7,7,c
 11207  002B80  D010               	goto	l6820
 11208  002B82  1E15               	comf	___aomod@divisor+7,f,c
 11209  002B84  1E14               	comf	___aomod@divisor+6,f,c
 11210  002B86  1E13               	comf	___aomod@divisor+5,f,c
 11211  002B88  1E12               	comf	___aomod@divisor+4,f,c
 11212  002B8A  1E11               	comf	___aomod@divisor+3,f,c
 11213  002B8C  1E10               	comf	___aomod@divisor+2,f,c
 11214  002B8E  1E0F               	comf	___aomod@divisor+1,f,c
 11215  002B90  6C0E               	negf	___aomod@divisor,c
 11216  002B92  0E00               	movlw	0
 11217  002B94  220F               	addwfc	___aomod@divisor+1,f,c
 11218  002B96  2210               	addwfc	___aomod@divisor+2,f,c
 11219  002B98  2211               	addwfc	___aomod@divisor+3,f,c
 11220  002B9A  2212               	addwfc	___aomod@divisor+4,f,c
 11221  002B9C  2213               	addwfc	___aomod@divisor+5,f,c
 11222  002B9E  2214               	addwfc	___aomod@divisor+6,f,c
 11223  002BA0  2215               	addwfc	___aomod@divisor+7,f,c
 11224  002BA2                     l6820:
 11225  002BA2  500E               	movf	___aomod@divisor,w,c
 11226  002BA4  100F               	iorwf	___aomod@divisor+1,w,c
 11227  002BA6  1010               	iorwf	___aomod@divisor+2,w,c
 11228  002BA8  1011               	iorwf	___aomod@divisor+3,w,c
 11229  002BAA  1012               	iorwf	___aomod@divisor+4,w,c
 11230  002BAC  1013               	iorwf	___aomod@divisor+5,w,c
 11231  002BAE  1014               	iorwf	___aomod@divisor+6,w,c
 11232  002BB0  1015               	iorwf	___aomod@divisor+7,w,c
 11233  002BB2  B4D8               	btfsc	status,2,c
 11234  002BB4  D03C               	goto	l6836
 11235  002BB6  0E01               	movlw	1
 11236  002BB8  6E16               	movwf	___aomod@counter,c
 11237  002BBA  D00A               	goto	l6826
 11238  002BBC                     l6824:
 11239  002BBC  90D8               	bcf	status,0,c
 11240  002BBE  360E               	rlcf	___aomod@divisor,f,c
 11241  002BC0  360F               	rlcf	___aomod@divisor+1,f,c
 11242  002BC2  3610               	rlcf	___aomod@divisor+2,f,c
 11243  002BC4  3611               	rlcf	___aomod@divisor+3,f,c
 11244  002BC6  3612               	rlcf	___aomod@divisor+4,f,c
 11245  002BC8  3613               	rlcf	___aomod@divisor+5,f,c
 11246  002BCA  3614               	rlcf	___aomod@divisor+6,f,c
 11247  002BCC  3615               	rlcf	___aomod@divisor+7,f,c
 11248  002BCE  2A16               	incf	___aomod@counter,f,c
 11249  002BD0                     l6826:
 11250  002BD0  AE15               	btfss	___aomod@divisor+7,7,c
 11251  002BD2  D7F4               	goto	l6824
 11252  002BD4                     u7300:
 11253  002BD4  500E               	movf	___aomod@divisor,w,c
 11254  002BD6  5C06               	subwf	___aomod@dividend,w,c
 11255  002BD8  500F               	movf	___aomod@divisor+1,w,c
 11256  002BDA  5807               	subwfb	___aomod@dividend+1,w,c
 11257  002BDC  5010               	movf	___aomod@divisor+2,w,c
 11258  002BDE  5808               	subwfb	___aomod@dividend+2,w,c
 11259  002BE0  5011               	movf	___aomod@divisor+3,w,c
 11260  002BE2  5809               	subwfb	___aomod@dividend+3,w,c
 11261  002BE4  5012               	movf	___aomod@divisor+4,w,c
 11262  002BE6  580A               	subwfb	___aomod@dividend+4,w,c
 11263  002BE8  5013               	movf	___aomod@divisor+5,w,c
 11264  002BEA  580B               	subwfb	___aomod@dividend+5,w,c
 11265  002BEC  5014               	movf	___aomod@divisor+6,w,c
 11266  002BEE  580C               	subwfb	___aomod@dividend+6,w,c
 11267  002BF0  5015               	movf	___aomod@divisor+7,w,c
 11268  002BF2  580D               	subwfb	___aomod@dividend+7,w,c
 11269  002BF4  A0D8               	btfss	status,0,c
 11270  002BF6  D010               	goto	l6832
 11271  002BF8  500E               	movf	___aomod@divisor,w,c
 11272  002BFA  5E06               	subwf	___aomod@dividend,f,c
 11273  002BFC  500F               	movf	___aomod@divisor+1,w,c
 11274  002BFE  5A07               	subwfb	___aomod@dividend+1,f,c
 11275  002C00  5010               	movf	___aomod@divisor+2,w,c
 11276  002C02  5A08               	subwfb	___aomod@dividend+2,f,c
 11277  002C04  5011               	movf	___aomod@divisor+3,w,c
 11278  002C06  5A09               	subwfb	___aomod@dividend+3,f,c
 11279  002C08  5012               	movf	___aomod@divisor+4,w,c
 11280  002C0A  5A0A               	subwfb	___aomod@dividend+4,f,c
 11281  002C0C  5013               	movf	___aomod@divisor+5,w,c
 11282  002C0E  5A0B               	subwfb	___aomod@dividend+5,f,c
 11283  002C10  5014               	movf	___aomod@divisor+6,w,c
 11284  002C12  5A0C               	subwfb	___aomod@dividend+6,f,c
 11285  002C14  5015               	movf	___aomod@divisor+7,w,c
 11286  002C16  5A0D               	subwfb	___aomod@dividend+7,f,c
 11287  002C18                     l6832:
 11288  002C18  90D8               	bcf	status,0,c
 11289  002C1A  3215               	rrcf	___aomod@divisor+7,f,c
 11290  002C1C  3214               	rrcf	___aomod@divisor+6,f,c
 11291  002C1E  3213               	rrcf	___aomod@divisor+5,f,c
 11292  002C20  3212               	rrcf	___aomod@divisor+4,f,c
 11293  002C22  3211               	rrcf	___aomod@divisor+3,f,c
 11294  002C24  3210               	rrcf	___aomod@divisor+2,f,c
 11295  002C26  320F               	rrcf	___aomod@divisor+1,f,c
 11296  002C28  320E               	rrcf	___aomod@divisor,f,c
 11297  002C2A  2E16               	decfsz	___aomod@counter,f,c
 11298  002C2C  D7D3               	goto	u7300
 11299  002C2E                     l6836:
 11300  002C2E  5017               	movf	___aomod@sign,w,c
 11301  002C30  B4D8               	btfsc	status,2,c
 11302  002C32  D010               	goto	l6840
 11303  002C34  1E0D               	comf	___aomod@dividend+7,f,c
 11304  002C36  1E0C               	comf	___aomod@dividend+6,f,c
 11305  002C38  1E0B               	comf	___aomod@dividend+5,f,c
 11306  002C3A  1E0A               	comf	___aomod@dividend+4,f,c
 11307  002C3C  1E09               	comf	___aomod@dividend+3,f,c
 11308  002C3E  1E08               	comf	___aomod@dividend+2,f,c
 11309  002C40  1E07               	comf	___aomod@dividend+1,f,c
 11310  002C42  6C06               	negf	___aomod@dividend,c
 11311  002C44  0E00               	movlw	0
 11312  002C46  2207               	addwfc	___aomod@dividend+1,f,c
 11313  002C48  2208               	addwfc	___aomod@dividend+2,f,c
 11314  002C4A  2209               	addwfc	___aomod@dividend+3,f,c
 11315  002C4C  220A               	addwfc	___aomod@dividend+4,f,c
 11316  002C4E  220B               	addwfc	___aomod@dividend+5,f,c
 11317  002C50  220C               	addwfc	___aomod@dividend+6,f,c
 11318  002C52  220D               	addwfc	___aomod@dividend+7,f,c
 11319  002C54                     l6840:
 11320  002C54  C006  F006         	movff	___aomod@dividend,?___aomod
 11321  002C58  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 11322  002C5C  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 11323  002C60  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 11324  002C64  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 11325  002C68  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 11326  002C6C  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 11327  002C70  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 11328  002C74  0012               	return		;funcret
 11329  002C76                     __end_of___aomod:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function ___aodiv *****************
 11333 ;; Defined at:
 11334 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  dividend        8    5[COMRAM] long long 
 11337 ;;  divisor         8   13[COMRAM] long long 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  quotient        8   23[COMRAM] long long 
 11340 ;;  sign            1   22[COMRAM] unsigned char 
 11341 ;;  counter         1   21[COMRAM] unsigned char 
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  8    5[COMRAM] long long 
 11344 ;; Registers used:
 11345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11351 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;Total ram usage:       26 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:    2
 11358 ;; This function calls:
 11359 ;;		Nothing
 11360 ;; This function is called by:
 11361 ;;		_dtoa
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text46
 11366  002646                     __ptext46:
 11367                           	opt callstack 0
 11368  002646                     ___aodiv:
 11369                           	opt callstack 24
 11370                           
 11371                           ;incstack = 0
 11372  002646  0E00               	movlw	0
 11373  002648  6E17               	movwf	___aodiv@sign,c
 11374  00264A  AE15               	btfss	___aodiv@divisor+7,7,c
 11375  00264C  D012               	goto	l6772
 11376  00264E  1E15               	comf	___aodiv@divisor+7,f,c
 11377  002650  1E14               	comf	___aodiv@divisor+6,f,c
 11378  002652  1E13               	comf	___aodiv@divisor+5,f,c
 11379  002654  1E12               	comf	___aodiv@divisor+4,f,c
 11380  002656  1E11               	comf	___aodiv@divisor+3,f,c
 11381  002658  1E10               	comf	___aodiv@divisor+2,f,c
 11382  00265A  1E0F               	comf	___aodiv@divisor+1,f,c
 11383  00265C  6C0E               	negf	___aodiv@divisor,c
 11384  00265E  0E00               	movlw	0
 11385  002660  220F               	addwfc	___aodiv@divisor+1,f,c
 11386  002662  2210               	addwfc	___aodiv@divisor+2,f,c
 11387  002664  2211               	addwfc	___aodiv@divisor+3,f,c
 11388  002666  2212               	addwfc	___aodiv@divisor+4,f,c
 11389  002668  2213               	addwfc	___aodiv@divisor+5,f,c
 11390  00266A  2214               	addwfc	___aodiv@divisor+6,f,c
 11391  00266C  2215               	addwfc	___aodiv@divisor+7,f,c
 11392  00266E  0E01               	movlw	1
 11393  002670  6E17               	movwf	___aodiv@sign,c
 11394  002672                     l6772:
 11395  002672  AE0D               	btfss	___aodiv@dividend+7,7,c
 11396  002674  D012               	goto	l6778
 11397  002676  1E0D               	comf	___aodiv@dividend+7,f,c
 11398  002678  1E0C               	comf	___aodiv@dividend+6,f,c
 11399  00267A  1E0B               	comf	___aodiv@dividend+5,f,c
 11400  00267C  1E0A               	comf	___aodiv@dividend+4,f,c
 11401  00267E  1E09               	comf	___aodiv@dividend+3,f,c
 11402  002680  1E08               	comf	___aodiv@dividend+2,f,c
 11403  002682  1E07               	comf	___aodiv@dividend+1,f,c
 11404  002684  6C06               	negf	___aodiv@dividend,c
 11405  002686  0E00               	movlw	0
 11406  002688  2207               	addwfc	___aodiv@dividend+1,f,c
 11407  00268A  2208               	addwfc	___aodiv@dividend+2,f,c
 11408  00268C  2209               	addwfc	___aodiv@dividend+3,f,c
 11409  00268E  220A               	addwfc	___aodiv@dividend+4,f,c
 11410  002690  220B               	addwfc	___aodiv@dividend+5,f,c
 11411  002692  220C               	addwfc	___aodiv@dividend+6,f,c
 11412  002694  220D               	addwfc	___aodiv@dividend+7,f,c
 11413  002696  0E01               	movlw	1
 11414  002698  1A17               	xorwf	___aodiv@sign,f,c
 11415  00269A                     l6778:
 11416  00269A  EE20  F018         	lfsr	2,___aodiv@quotient
 11417  00269E  0E07               	movlw	7
 11418  0026A0                     u7221:
 11419  0026A0  6ADE               	clrf	postinc2,c
 11420  0026A2  06E8               	decf	wreg,f,c
 11421  0026A4  E2FD               	bc	u7221
 11422  0026A6  500E               	movf	___aodiv@divisor,w,c
 11423  0026A8  100F               	iorwf	___aodiv@divisor+1,w,c
 11424  0026AA  1010               	iorwf	___aodiv@divisor+2,w,c
 11425  0026AC  1011               	iorwf	___aodiv@divisor+3,w,c
 11426  0026AE  1012               	iorwf	___aodiv@divisor+4,w,c
 11427  0026B0  1013               	iorwf	___aodiv@divisor+5,w,c
 11428  0026B2  1014               	iorwf	___aodiv@divisor+6,w,c
 11429  0026B4  1015               	iorwf	___aodiv@divisor+7,w,c
 11430  0026B6  B4D8               	btfsc	status,2,c
 11431  0026B8  D046               	goto	l6800
 11432  0026BA  0E01               	movlw	1
 11433  0026BC  6E16               	movwf	___aodiv@counter,c
 11434  0026BE  D00A               	goto	l6786
 11435  0026C0                     l6784:
 11436  0026C0  90D8               	bcf	status,0,c
 11437  0026C2  360E               	rlcf	___aodiv@divisor,f,c
 11438  0026C4  360F               	rlcf	___aodiv@divisor+1,f,c
 11439  0026C6  3610               	rlcf	___aodiv@divisor+2,f,c
 11440  0026C8  3611               	rlcf	___aodiv@divisor+3,f,c
 11441  0026CA  3612               	rlcf	___aodiv@divisor+4,f,c
 11442  0026CC  3613               	rlcf	___aodiv@divisor+5,f,c
 11443  0026CE  3614               	rlcf	___aodiv@divisor+6,f,c
 11444  0026D0  3615               	rlcf	___aodiv@divisor+7,f,c
 11445  0026D2  2A16               	incf	___aodiv@counter,f,c
 11446  0026D4                     l6786:
 11447  0026D4  AE15               	btfss	___aodiv@divisor+7,7,c
 11448  0026D6  D7F4               	goto	l6784
 11449  0026D8                     u7240:
 11450  0026D8  90D8               	bcf	status,0,c
 11451  0026DA  3618               	rlcf	___aodiv@quotient,f,c
 11452  0026DC  3619               	rlcf	___aodiv@quotient+1,f,c
 11453  0026DE  361A               	rlcf	___aodiv@quotient+2,f,c
 11454  0026E0  361B               	rlcf	___aodiv@quotient+3,f,c
 11455  0026E2  361C               	rlcf	___aodiv@quotient+4,f,c
 11456  0026E4  361D               	rlcf	___aodiv@quotient+5,f,c
 11457  0026E6  361E               	rlcf	___aodiv@quotient+6,f,c
 11458  0026E8  361F               	rlcf	___aodiv@quotient+7,f,c
 11459  0026EA  500E               	movf	___aodiv@divisor,w,c
 11460  0026EC  5C06               	subwf	___aodiv@dividend,w,c
 11461  0026EE  500F               	movf	___aodiv@divisor+1,w,c
 11462  0026F0  5807               	subwfb	___aodiv@dividend+1,w,c
 11463  0026F2  5010               	movf	___aodiv@divisor+2,w,c
 11464  0026F4  5808               	subwfb	___aodiv@dividend+2,w,c
 11465  0026F6  5011               	movf	___aodiv@divisor+3,w,c
 11466  0026F8  5809               	subwfb	___aodiv@dividend+3,w,c
 11467  0026FA  5012               	movf	___aodiv@divisor+4,w,c
 11468  0026FC  580A               	subwfb	___aodiv@dividend+4,w,c
 11469  0026FE  5013               	movf	___aodiv@divisor+5,w,c
 11470  002700  580B               	subwfb	___aodiv@dividend+5,w,c
 11471  002702  5014               	movf	___aodiv@divisor+6,w,c
 11472  002704  580C               	subwfb	___aodiv@dividend+6,w,c
 11473  002706  5015               	movf	___aodiv@divisor+7,w,c
 11474  002708  580D               	subwfb	___aodiv@dividend+7,w,c
 11475  00270A  A0D8               	btfss	status,0,c
 11476  00270C  D011               	goto	l6796
 11477  00270E  500E               	movf	___aodiv@divisor,w,c
 11478  002710  5E06               	subwf	___aodiv@dividend,f,c
 11479  002712  500F               	movf	___aodiv@divisor+1,w,c
 11480  002714  5A07               	subwfb	___aodiv@dividend+1,f,c
 11481  002716  5010               	movf	___aodiv@divisor+2,w,c
 11482  002718  5A08               	subwfb	___aodiv@dividend+2,f,c
 11483  00271A  5011               	movf	___aodiv@divisor+3,w,c
 11484  00271C  5A09               	subwfb	___aodiv@dividend+3,f,c
 11485  00271E  5012               	movf	___aodiv@divisor+4,w,c
 11486  002720  5A0A               	subwfb	___aodiv@dividend+4,f,c
 11487  002722  5013               	movf	___aodiv@divisor+5,w,c
 11488  002724  5A0B               	subwfb	___aodiv@dividend+5,f,c
 11489  002726  5014               	movf	___aodiv@divisor+6,w,c
 11490  002728  5A0C               	subwfb	___aodiv@dividend+6,f,c
 11491  00272A  5015               	movf	___aodiv@divisor+7,w,c
 11492  00272C  5A0D               	subwfb	___aodiv@dividend+7,f,c
 11493  00272E  8018               	bsf	___aodiv@quotient,0,c
 11494  002730                     l6796:
 11495  002730  90D8               	bcf	status,0,c
 11496  002732  3215               	rrcf	___aodiv@divisor+7,f,c
 11497  002734  3214               	rrcf	___aodiv@divisor+6,f,c
 11498  002736  3213               	rrcf	___aodiv@divisor+5,f,c
 11499  002738  3212               	rrcf	___aodiv@divisor+4,f,c
 11500  00273A  3211               	rrcf	___aodiv@divisor+3,f,c
 11501  00273C  3210               	rrcf	___aodiv@divisor+2,f,c
 11502  00273E  320F               	rrcf	___aodiv@divisor+1,f,c
 11503  002740  320E               	rrcf	___aodiv@divisor,f,c
 11504  002742  2E16               	decfsz	___aodiv@counter,f,c
 11505  002744  D7C9               	goto	u7240
 11506  002746                     l6800:
 11507  002746  5017               	movf	___aodiv@sign,w,c
 11508  002748  B4D8               	btfsc	status,2,c
 11509  00274A  D010               	goto	l6804
 11510  00274C  1E1F               	comf	___aodiv@quotient+7,f,c
 11511  00274E  1E1E               	comf	___aodiv@quotient+6,f,c
 11512  002750  1E1D               	comf	___aodiv@quotient+5,f,c
 11513  002752  1E1C               	comf	___aodiv@quotient+4,f,c
 11514  002754  1E1B               	comf	___aodiv@quotient+3,f,c
 11515  002756  1E1A               	comf	___aodiv@quotient+2,f,c
 11516  002758  1E19               	comf	___aodiv@quotient+1,f,c
 11517  00275A  6C18               	negf	___aodiv@quotient,c
 11518  00275C  0E00               	movlw	0
 11519  00275E  2219               	addwfc	___aodiv@quotient+1,f,c
 11520  002760  221A               	addwfc	___aodiv@quotient+2,f,c
 11521  002762  221B               	addwfc	___aodiv@quotient+3,f,c
 11522  002764  221C               	addwfc	___aodiv@quotient+4,f,c
 11523  002766  221D               	addwfc	___aodiv@quotient+5,f,c
 11524  002768  221E               	addwfc	___aodiv@quotient+6,f,c
 11525  00276A  221F               	addwfc	___aodiv@quotient+7,f,c
 11526  00276C                     l6804:
 11527  00276C  C018  F006         	movff	___aodiv@quotient,?___aodiv
 11528  002770  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 11529  002774  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 11530  002778  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 11531  00277C  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 11532  002780  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 11533  002784  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 11534  002788  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 11535  00278C  0012               	return		;funcret
 11536  00278E                     __end_of___aodiv:
 11537                           	opt callstack 0
 11538                           
 11539 ;; *************** function _ctoa *****************
 11540 ;; Defined at:
 11541 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11544 ;;		 -> NULL(0), 
 11545 ;;  c               1   38[COMRAM] unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  w               2   39[COMRAM] int 
 11548 ;;  l               2    0        int 
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  2   36[COMRAM] int 
 11551 ;; Registers used:
 11552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;Total ram usage:        5 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:    9
 11565 ;; This function calls:
 11566 ;;		_pad
 11567 ;; This function is called by:
 11568 ;;		_vfpfcnvrt
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text47
 11573  00337E                     __ptext47:
 11574                           	opt callstack 0
 11575  00337E                     _ctoa:
 11576                           	opt callstack 18
 11577                           
 11578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 11579                           
 11580                           ;incstack = 0
 11581  00337E  0100               	movlb	0	; () banked
 11582  003380  51EB               	movf	_width& (0+255),w,b
 11583  003382  11EC               	iorwf	(_width+1)& (0+255),w,b
 11584  003384  A4D8               	btfss	status,2,c
 11585  003386  D005               	goto	l6860
 11586                           
 11587                           ; BSR set to: 0
 11588  003388  C0EB  F028         	movff	_width,ctoa@w
 11589  00338C  C0EC  F029         	movff	_width+1,ctoa@w+1
 11590  003390  D006               	goto	l6862
 11591  003392                     l6860:
 11592                           
 11593                           ; BSR set to: 0
 11594  003392  0EFF               	movlw	255
 11595  003394  25EB               	addwf	_width& (0+255),w,b
 11596  003396  6E28               	movwf	ctoa@w,c
 11597  003398  0EFF               	movlw	255
 11598  00339A  21EC               	addwfc	(_width+1)& (0+255),w,b
 11599  00339C  6E29               	movwf	ctoa@w+1,c
 11600  00339E                     l6862:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 11604  00339E  C027  F10A         	movff	ctoa@c,_dbuf
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 11608  0033A2  0E00               	movlw	0
 11609  0033A4  0101               	movlb	1	; () banked
 11610  0033A6  6F0B               	movwf	(_dbuf+1)& (0+255),b
 11611                           
 11612                           ; BSR set to: 1
 11613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 11614  0033A8  C025  F01A         	movff	ctoa@fp,pad@fp
 11615  0033AC  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 11616  0033B0  0E0A               	movlw	low _dbuf
 11617  0033B2  6E1C               	movwf	pad@buf,c
 11618  0033B4  0E01               	movlw	high _dbuf
 11619  0033B6  6E1D               	movwf	pad@buf+1,c
 11620  0033B8  C028  F01E         	movff	ctoa@w,pad@p
 11621  0033BC  C029  F01F         	movff	ctoa@w+1,pad@p+1
 11622  0033C0  EC00  F017         	call	_pad	;wreg free
 11623  0033C4  C01A  F025         	movff	?_pad,?_ctoa
 11624  0033C8  C01B  F026         	movff	?_pad+1,?_ctoa+1
 11625  0033CC  0012               	return		;funcret
 11626  0033CE                     __end_of_ctoa:
 11627                           	opt callstack 0
 11628                           
 11629 ;; *************** function _pad *****************
 11630 ;; Defined at:
 11631 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11634 ;;		 -> NULL(0), 
 11635 ;;  buf             2   27[COMRAM] PTR unsigned char 
 11636 ;;		 -> dbuf(32), 
 11637 ;;  p               2   29[COMRAM] int 
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  w               2   34[COMRAM] int 
 11640 ;;  i               2   32[COMRAM] int 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  2   25[COMRAM] int 
 11643 ;; Registers used:
 11644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11650 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:       11 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    8
 11657 ;; This function calls:
 11658 ;;		_fputc
 11659 ;;		_fputs
 11660 ;;		_strlen
 11661 ;; This function is called by:
 11662 ;;		_ctoa
 11663 ;;		_dtoa
 11664 ;;		_xtoa
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text48
 11669  002E00                     __ptext48:
 11670                           	opt callstack 0
 11671  002E00                     _pad:
 11672                           	opt callstack 18
 11673                           
 11674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11675                           
 11676                           ;incstack = 0
 11677  002E00  0100               	movlb	0	; () banked
 11678  002E02  A1EF               	btfss	_flags& (0+255),0,b
 11679  002E04  D00A               	goto	l6718
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11683  002E06  C01C  F013         	movff	pad@buf,fputs@s
 11684  002E0A  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11685  002E0E  C01A  F015         	movff	pad@fp,fputs@fp
 11686  002E12  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11687  002E16  EC1D  F01B         	call	_fputs	;wreg free
 11688  002E1A                     l6718:
 11689                           
 11690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11691  002E1A  BE1F               	btfsc	pad@p+1,7,c
 11692  002E1C  D005               	goto	l6722
 11693  002E1E  C01E  F023         	movff	pad@p,pad@w
 11694  002E22  C01F  F024         	movff	pad@p+1,pad@w+1
 11695  002E26  D004               	goto	l574
 11696  002E28                     l6722:
 11697  002E28  0E00               	movlw	0
 11698  002E2A  6E24               	movwf	pad@w+1,c
 11699  002E2C  0E00               	movlw	0
 11700  002E2E  6E23               	movwf	pad@w,c
 11701  002E30                     l574:
 11702                           
 11703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11704  002E30  0E00               	movlw	0
 11705  002E32  6E22               	movwf	pad@i+1,c
 11706  002E34  0E00               	movlw	0
 11707  002E36  6E21               	movwf	pad@i,c
 11708                           
 11709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11710  002E38  D00C               	goto	l6728
 11711  002E3A                     l6724:
 11712                           
 11713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11714  002E3A  0E00               	movlw	0
 11715  002E3C  6E0B               	movwf	fputc@c+1,c
 11716  002E3E  0E20               	movlw	32
 11717  002E40  6E0A               	movwf	fputc@c,c
 11718  002E42  C01A  F00C         	movff	pad@fp,fputc@fp
 11719  002E46  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 11720  002E4A  EC96  F018         	call	_fputc	;wreg free
 11721                           
 11722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11723  002E4E  4A21               	infsnz	pad@i,f,c
 11724  002E50  2A22               	incf	pad@i+1,f,c
 11725  002E52                     l6728:
 11726                           
 11727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11728  002E52  5023               	movf	pad@w,w,c
 11729  002E54  5C21               	subwf	pad@i,w,c
 11730  002E56  5022               	movf	pad@i+1,w,c
 11731  002E58  0A80               	xorlw	128
 11732  002E5A  6E20               	movwf	??_pad& (0+255),c
 11733  002E5C  5024               	movf	pad@w+1,w,c
 11734  002E5E  0A80               	xorlw	128
 11735  002E60  5820               	subwfb	??_pad& (0+255),w,c
 11736  002E62  A0D8               	btfss	status,0,c
 11737  002E64  D7EA               	goto	l6724
 11738                           
 11739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11740  002E66  0100               	movlb	0	; () banked
 11741  002E68  B1EF               	btfsc	_flags& (0+255),0,b
 11742  002E6A  D00A               	goto	l6732
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11746  002E6C  C01C  F013         	movff	pad@buf,fputs@s
 11747  002E70  C01D  F014         	movff	pad@buf+1,fputs@s+1
 11748  002E74  C01A  F015         	movff	pad@fp,fputs@fp
 11749  002E78  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 11750  002E7C  EC1D  F01B         	call	_fputs	;wreg free
 11751  002E80                     l6732:
 11752                           
 11753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11754  002E80  C01C  F006         	movff	pad@buf,strlen@s
 11755  002E84  C01D  F007         	movff	pad@buf+1,strlen@s+1
 11756  002E88  EC78  F01A         	call	_strlen	;wreg free
 11757  002E8C  5023               	movf	pad@w,w,c
 11758  002E8E  2406               	addwf	?_strlen,w,c
 11759  002E90  6E1A               	movwf	?_pad,c
 11760  002E92  5024               	movf	pad@w+1,w,c
 11761  002E94  2007               	addwfc	?_strlen+1,w,c
 11762  002E96  6E1B               	movwf	?_pad+1,c
 11763  002E98  0012               	return		;funcret
 11764  002E9A                     __end_of_pad:
 11765                           	opt callstack 0
 11766                           
 11767 ;; *************** function _strlen *****************
 11768 ;; Defined at:
 11769 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;  s               2    5[COMRAM] PTR const unsigned char 
 11772 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 11773 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 11774 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 11775 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 11776 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11777 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11778 ;;		 -> STR_2(10), 
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;  a               2    7[COMRAM] PTR const unsigned char 
 11781 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_51(16), 
 11782 ;;		 -> STR_49(14), STR_47(11), STR_45(9), STR_43(16), 
 11783 ;;		 -> STR_41(13), STR_39(13), STR_37(9), STR_35(13), 
 11784 ;;		 -> STR_33(14), STR_31(10), STR_27(9), STR_18(14), 
 11785 ;;		 -> STR_16(16), STR_14(14), STR_12(2), STR_11(6), 
 11786 ;;		 -> STR_9(16), STR_7(14), STR_5(15), STR_3(2), 
 11787 ;;		 -> STR_2(10), 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  2    5[COMRAM] unsigned int 
 11790 ;; Registers used:
 11791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;Total ram usage:        4 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    2
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_pad
 11808 ;;		_stoa
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text49
 11813  0034F0                     __ptext49:
 11814                           	opt callstack 0
 11815  0034F0                     _strlen:
 11816                           	opt callstack 23
 11817                           
 11818                           ;incstack = 0
 11819  0034F0  C006  F008         	movff	strlen@s,strlen@a
 11820  0034F4  C007  F009         	movff	strlen@s+1,strlen@a+1
 11821  0034F8  D002               	goto	l6700
 11822  0034FA                     l6698:
 11823  0034FA  4A06               	infsnz	strlen@s,f,c
 11824  0034FC  2A07               	incf	strlen@s+1,f,c
 11825  0034FE                     l6700:
 11826  0034FE  C006  FFF6         	movff	strlen@s,tblptrl
 11827  003502  C007  FFF7         	movff	strlen@s+1,tblptrh
 11828  003506  0E00               	movlw	low (__mediumconst shr (0+16))
 11829  003508  6EF8               	movwf	tblptru,c
 11830  00350A  0E0F               	movlw	(high __ramtop+-1)
 11831  00350C  64F7               	cpfsgt	tblptrh,c
 11832  00350E  D003               	bra	u7027
 11833  003510  0008               	tblrd		*
 11834  003512  50F5               	movf	tablat,w,c
 11835  003514  D005               	bra	u7020
 11836  003516                     u7027:
 11837  003516  CFF6 FFE1          	movff	tblptrl,fsr1l
 11838  00351A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11839  00351E  50E7               	movf	indf1,w,c
 11840  003520                     u7020:
 11841  003520  0900               	iorlw	0
 11842  003522  A4D8               	btfss	status,2,c
 11843  003524  D7EA               	goto	l6698
 11844  003526  5008               	movf	strlen@a,w,c
 11845  003528  5C06               	subwf	strlen@s,w,c
 11846  00352A  6E06               	movwf	?_strlen,c
 11847  00352C  5009               	movf	strlen@a+1,w,c
 11848  00352E  5807               	subwfb	strlen@s+1,w,c
 11849  003530  6E07               	movwf	?_strlen+1,c
 11850  003532  0012               	return		;funcret
 11851  003534                     __end_of_strlen:
 11852                           	opt callstack 0
 11853                           
 11854 ;; *************** function _fputs *****************
 11855 ;; Defined at:
 11856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  s               2   18[COMRAM] PTR const unsigned char 
 11859 ;;		 -> dbuf(32), 
 11860 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 11861 ;;		 -> NULL(0), 
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;  i               2   23[COMRAM] int 
 11864 ;;  c               1   22[COMRAM] unsigned char 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  2   18[COMRAM] int 
 11867 ;; Registers used:
 11868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11875 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;Total ram usage:        7 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:    7
 11881 ;; This function calls:
 11882 ;;		_fputc
 11883 ;; This function is called by:
 11884 ;;		_pad
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           	psect	text50
 11889  00363A                     __ptext50:
 11890                           	opt callstack 0
 11891  00363A                     _fputs:
 11892                           	opt callstack 18
 11893                           
 11894                           ;incstack = 0
 11895  00363A  0E00               	movlw	0
 11896  00363C  6E19               	movwf	fputs@i+1,c
 11897  00363E  0E00               	movlw	0
 11898  003640  6E18               	movwf	fputs@i,c
 11899  003642  D00B               	goto	l6694
 11900  003644                     l6690:
 11901  003644  C017  F00A         	movff	fputs@c,fputc@c
 11902  003648  6A0B               	clrf	fputc@c+1,c
 11903  00364A  C015  F00C         	movff	fputs@fp,fputc@fp
 11904  00364E  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 11905  003652  EC96  F018         	call	_fputc	;wreg free
 11906  003656  4A18               	infsnz	fputs@i,f,c
 11907  003658  2A19               	incf	fputs@i+1,f,c
 11908  00365A                     l6694:
 11909  00365A  5018               	movf	fputs@i,w,c
 11910  00365C  2413               	addwf	fputs@s,w,c
 11911  00365E  6ED9               	movwf	fsr2l,c
 11912  003660  5019               	movf	fputs@i+1,w,c
 11913  003662  2014               	addwfc	fputs@s+1,w,c
 11914  003664  6EDA               	movwf	fsr2h,c
 11915  003666  50DF               	movf	indf2,w,c
 11916  003668  6E17               	movwf	fputs@c,c
 11917  00366A  5017               	movf	fputs@c,w,c
 11918  00366C  B4D8               	btfsc	status,2,c
 11919  00366E  0012               	return	
 11920  003670  D7E9               	goto	l6690
 11921  003672                     __end_of_fputs:
 11922                           	opt callstack 0
 11923                           
 11924 ;; *************** function _fputc *****************
 11925 ;; Defined at:
 11926 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  c               2    9[COMRAM] int 
 11929 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11930 ;;		 -> NULL(0), 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;		None
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  2    9[COMRAM] int 
 11935 ;; Registers used:
 11936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11946 ;;Total ram usage:        9 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:    6
 11949 ;; This function calls:
 11950 ;;		_putch
 11951 ;; This function is called by:
 11952 ;;		_pad
 11953 ;;		_stoa
 11954 ;;		_vfpfcnvrt
 11955 ;;		_fputs
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text51
 11960  00312C                     __ptext51:
 11961                           	opt callstack 0
 11962  00312C                     _fputc:
 11963                           	opt callstack 18
 11964                           
 11965                           ;incstack = 0
 11966  00312C  500C               	movf	fputc@fp,w,c
 11967  00312E  100D               	iorwf	fputc@fp+1,w,c
 11968  003130  B4D8               	btfsc	status,2,c
 11969  003132  D004               	goto	u6980
 11970  003134  500C               	movf	fputc@fp,w,c
 11971  003136  100D               	iorwf	fputc@fp+1,w,c
 11972  003138  A4D8               	btfss	status,2,c
 11973  00313A  D004               	goto	l6680
 11974  00313C                     u6980:
 11975  00313C  500A               	movf	fputc@c,w,c
 11976  00313E  EC97  F01C         	call	_putch
 11977  003142  0012               	return	
 11978  003144                     l6680:
 11979  003144  EE20 F004          	lfsr	2,4
 11980  003148  500C               	movf	fputc@fp,w,c
 11981  00314A  26D9               	addwf	fsr2l,f,c
 11982  00314C  500D               	movf	fputc@fp+1,w,c
 11983  00314E  22DA               	addwfc	fsr2h,f,c
 11984  003150  50DE               	movf	postinc2,w,c
 11985  003152  10DE               	iorwf	postinc2,w,c
 11986  003154  B4D8               	btfsc	status,2,c
 11987  003156  D016               	goto	u7000
 11988  003158  EE20 F004          	lfsr	2,4
 11989  00315C  500C               	movf	fputc@fp,w,c
 11990  00315E  26D9               	addwf	fsr2l,f,c
 11991  003160  500D               	movf	fputc@fp+1,w,c
 11992  003162  22DA               	addwfc	fsr2h,f,c
 11993  003164  EE10 F002          	lfsr	1,2
 11994  003168  500C               	movf	fputc@fp,w,c
 11995  00316A  26E1               	addwf	fsr1l,f,c
 11996  00316C  500D               	movf	fputc@fp+1,w,c
 11997  00316E  22E2               	addwfc	fsr1h,f,c
 11998  003170  50DE               	movf	postinc2,w,c
 11999  003172  5CE6               	subwf	postinc1,w,c
 12000  003174  50E6               	movf	postinc1,w,c
 12001  003176  0A80               	xorlw	128
 12002  003178  6E12               	movwf	(??_fputc+4)& (0+255),c
 12003  00317A  50DE               	movf	postinc2,w,c
 12004  00317C  0A80               	xorlw	128
 12005  00317E  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 12006  003180  B0D8               	btfsc	status,0,c
 12007  003182  0012               	return	
 12008  003184                     u7000:
 12009  003184  EE20 F002          	lfsr	2,2
 12010  003188  500C               	movf	fputc@fp,w,c
 12011  00318A  26D9               	addwf	fsr2l,f,c
 12012  00318C  500D               	movf	fputc@fp+1,w,c
 12013  00318E  22DA               	addwfc	fsr2h,f,c
 12014  003190  2ADE               	incf	postinc2,f,c
 12015  003192  0E00               	movlw	0
 12016  003194  22DD               	addwfc	postdec2,f,c
 12017  003196  0012               	return		;funcret
 12018  003198                     __end_of_fputc:
 12019                           	opt callstack 0
 12020                           
 12021 ;; *************** function _putch *****************
 12022 ;; Defined at:
 12023 ;;		line 102 in file "lcd.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  data            1    wreg     unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  data            1    8[COMRAM] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;Total ram usage:        1 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    5
 12044 ;; This function calls:
 12045 ;;		_send_byte
 12046 ;; This function is called by:
 12047 ;;		_fputc
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text52
 12052  00392E                     __ptext52:
 12053                           	opt callstack 0
 12054  00392E                     _putch:
 12055                           	opt callstack 18
 12056                           
 12057                           ;incstack = 0
 12058                           ;putch@data stored from wreg
 12059  00392E  6E09               	movwf	putch@data,c
 12060                           
 12061                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 12062  003930  848C               	bsf	3980,2,c	;volatile
 12063                           
 12064                           ;lcd.c: 104:     send_byte((unsigned char)data);
 12065  003932  5009               	movf	putch@data,w,c
 12066  003934  EC8E  F01C         	call	_send_byte
 12067  003938  0012               	return		;funcret
 12068  00393A                     __end_of_putch:
 12069                           	opt callstack 0
 12070                           
 12071 ;; *************** function _atoi *****************
 12072 ;; Defined at:
 12073 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12076 ;;		 -> STR_55(11), STR_54(11), STR_53(10), STR_52(13), 
 12077 ;;		 -> STR_50(3), STR_48(3), STR_46(3), STR_44(3), 
 12078 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
 12079 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_29(15), 
 12080 ;;		 -> STR_28(15), STR_26(3), STR_25(13), STR_24(11), 
 12081 ;;		 -> STR_23(10), STR_22(6), STR_21(6), STR_20(3), 
 12082 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(5), 
 12083 ;;		 -> STR_10(9), STR_8(3), STR_6(3), STR_4(5), 
 12084 ;;		 -> STR_1(7), 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  n               2   25[COMRAM] int 
 12087 ;;  neg             2   18[COMRAM] int 
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  2   12[COMRAM] int 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12098 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12099 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12100 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12101 ;;Total ram usage:       15 bytes
 12102 ;; Hardware stack levels used:    1
 12103 ;; Hardware stack levels required when called:    3
 12104 ;; This function calls:
 12105 ;;		___wmul
 12106 ;;		_isdigit
 12107 ;;		_isspace
 12108 ;; This function is called by:
 12109 ;;		_vfpfcnvrt
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text53
 12114  002A12                     __ptext53:
 12115                           	opt callstack 0
 12116  002A12                     _atoi:
 12117                           	opt callstack 24
 12118                           
 12119                           ;incstack = 0
 12120  002A12  0E00               	movlw	0
 12121  002A14  6E1B               	movwf	atoi@n+1,c
 12122  002A16  0E00               	movlw	0
 12123  002A18  6E1A               	movwf	atoi@n,c
 12124  002A1A  0E00               	movlw	0
 12125  002A1C  6E14               	movwf	atoi@neg+1,c
 12126  002A1E  0E00               	movlw	0
 12127  002A20  6E13               	movwf	atoi@neg,c
 12128  002A22  D002               	goto	l7044
 12129  002A24                     l7042:
 12130  002A24  4A0D               	infsnz	atoi@s,f,c
 12131  002A26  2A0E               	incf	atoi@s+1,f,c
 12132  002A28                     l7044:
 12133  002A28  0E01               	movlw	1
 12134  002A2A  6E19               	movwf	_atoi$1830,c
 12135  002A2C  C00D  FFF6         	movff	atoi@s,tblptrl
 12136  002A30  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12137  002A34                     	if	0	;tblptru may be non-zero
 12138  002A34                     	endif
 12139  002A34                     	if	0	;tblptru may be non-zero
 12140  002A34                     	endif
 12141  002A34  0008               	tblrd		*
 12142  002A36  50F5               	movf	tablat,w,c
 12143  002A38  0A20               	xorlw	32
 12144  002A3A  B4D8               	btfsc	status,2,c
 12145  002A3C  D018               	goto	l7052
 12146  002A3E  0EF7               	movlw	247
 12147  002A40  6E0F               	movwf	??_atoi& (0+255),c
 12148  002A42  0EFF               	movlw	255
 12149  002A44  6E10               	movwf	(??_atoi+1)& (0+255),c
 12150  002A46  C00D  FFF6         	movff	atoi@s,tblptrl
 12151  002A4A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12152  002A4E                     	if	0	;tblptru may be non-zero
 12153  002A4E                     	endif
 12154  002A4E                     	if	0	;tblptru may be non-zero
 12155  002A4E                     	endif
 12156  002A4E  0008               	tblrd		*
 12157  002A50  50F5               	movf	tablat,w,c
 12158  002A52  6E11               	movwf	(??_atoi+2)& (0+255),c
 12159  002A54  6A12               	clrf	(??_atoi+3)& (0+255),c
 12160  002A56  500F               	movf	??_atoi,w,c
 12161  002A58  2611               	addwf	??_atoi+2,f,c
 12162  002A5A  5010               	movf	??_atoi+1,w,c
 12163  002A5C  2212               	addwfc	??_atoi+3,f,c
 12164  002A5E  5012               	movf	??_atoi+3,w,c
 12165  002A60  E104               	bnz	u7790
 12166  002A62  0E05               	movlw	5
 12167  002A64  5C11               	subwf	??_atoi+2,w,c
 12168  002A66  A0D8               	btfss	status,0,c
 12169  002A68  D002               	goto	l7052
 12170  002A6A                     u7790:
 12171  002A6A  0E00               	movlw	0
 12172  002A6C  6E19               	movwf	_atoi$1830,c
 12173  002A6E                     l7052:
 12174  002A6E  C019  F015         	movff	_atoi$1830,_atoi$1829
 12175  002A72  6A16               	clrf	_atoi$1829+1,c
 12176  002A74  5015               	movf	_atoi$1829,w,c
 12177  002A76  1016               	iorwf	_atoi$1829+1,w,c
 12178  002A78  B4D8               	btfsc	status,2,c
 12179  002A7A  D008               	goto	l7062
 12180  002A7C  D7D3               	goto	l7042
 12181  002A7E                     l7058:
 12182  002A7E  0E00               	movlw	0
 12183  002A80  6E14               	movwf	atoi@neg+1,c
 12184  002A82  0E01               	movlw	1
 12185  002A84  6E13               	movwf	atoi@neg,c
 12186  002A86                     l7060:
 12187  002A86  4A0D               	infsnz	atoi@s,f,c
 12188  002A88  2A0E               	incf	atoi@s+1,f,c
 12189  002A8A  D02E               	goto	l7068
 12190  002A8C                     l7062:
 12191  002A8C  C00D  FFF6         	movff	atoi@s,tblptrl
 12192  002A90  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12193  002A94                     	if	0	;tblptru may be non-zero
 12194  002A94                     	endif
 12195  002A94                     	if	0	;tblptru may be non-zero
 12196  002A94                     	endif
 12197  002A94  0008               	tblrd		*
 12198  002A96  50F5               	movf	tablat,w,c
 12199  002A98  6E0F               	movwf	??_atoi& (0+255),c
 12200  002A9A  6A10               	clrf	(??_atoi+1)& (0+255),c
 12201                           
 12202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12203                           ; Switch size 1, requested type "simple"
 12204                           ; Number of cases is 1, Range of values is 0 to 0
 12205                           ; switch strategies available:
 12206                           ; Name         Instructions Cycles
 12207                           ; simple_byte            4     3 (average)
 12208                           ;	Chosen strategy is simple_byte
 12209  002A9C  5010               	movf	??_atoi+1,w,c
 12210  002A9E  0A00               	xorlw	0	; case 0
 12211  002AA0  A4D8               	btfss	status,2,c
 12212  002AA2  D022               	goto	l7068
 12213                           
 12214                           ; Switch size 1, requested type "simple"
 12215                           ; Number of cases is 2, Range of values is 43 to 45
 12216                           ; switch strategies available:
 12217                           ; Name         Instructions Cycles
 12218                           ; simple_byte            7     4 (average)
 12219                           ;	Chosen strategy is simple_byte
 12220  002AA4  500F               	movf	??_atoi,w,c
 12221  002AA6  0A2B               	xorlw	43	; case 43
 12222  002AA8  B4D8               	btfsc	status,2,c
 12223  002AAA  D7ED               	goto	l7060
 12224  002AAC  0A06               	xorlw	6	; case 45
 12225  002AAE  B4D8               	btfsc	status,2,c
 12226  002AB0  D7E6               	goto	l7058
 12227  002AB2  D01A               	goto	l7068
 12228  002AB4                     l7064:
 12229  002AB4  C01A  F006         	movff	atoi@n,___wmul@multiplier
 12230  002AB8  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 12231  002ABC  0E00               	movlw	0
 12232  002ABE  6E09               	movwf	___wmul@multiplicand+1,c
 12233  002AC0  0E0A               	movlw	10
 12234  002AC2  6E08               	movwf	___wmul@multiplicand,c
 12235  002AC4  EC07  F01C         	call	___wmul	;wreg free
 12236  002AC8  C00D  FFF6         	movff	atoi@s,tblptrl
 12237  002ACC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12238  002AD0                     	if	0	;tblptru may be non-zero
 12239  002AD0                     	endif
 12240  002AD0                     	if	0	;tblptru may be non-zero
 12241  002AD0                     	endif
 12242  002AD0  0008               	tblrd		*
 12243  002AD2  50F5               	movf	tablat,w,c
 12244  002AD4  5E06               	subwf	?___wmul,f,c
 12245  002AD6  0E00               	movlw	0
 12246  002AD8  5A07               	subwfb	?___wmul+1,f,c
 12247  002ADA  0E30               	movlw	48
 12248  002ADC  2406               	addwf	?___wmul,w,c
 12249  002ADE  6E1A               	movwf	atoi@n,c
 12250  002AE0  0E00               	movlw	0
 12251  002AE2  2007               	addwfc	?___wmul+1,w,c
 12252  002AE4  6E1B               	movwf	atoi@n+1,c
 12253  002AE6  D7CF               	goto	l7060
 12254  002AE8                     l7068:
 12255  002AE8  0ED0               	movlw	208
 12256  002AEA  6E0F               	movwf	??_atoi& (0+255),c
 12257  002AEC  0EFF               	movlw	255
 12258  002AEE  6E10               	movwf	(??_atoi+1)& (0+255),c
 12259  002AF0  C00D  FFF6         	movff	atoi@s,tblptrl
 12260  002AF4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 12261  002AF8                     	if	0	;tblptru may be non-zero
 12262  002AF8                     	endif
 12263  002AF8                     	if	0	;tblptru may be non-zero
 12264  002AF8                     	endif
 12265  002AF8  0008               	tblrd		*
 12266  002AFA  50F5               	movf	tablat,w,c
 12267  002AFC  6E11               	movwf	(??_atoi+2)& (0+255),c
 12268  002AFE  6A12               	clrf	(??_atoi+3)& (0+255),c
 12269  002B00  500F               	movf	??_atoi,w,c
 12270  002B02  2611               	addwf	??_atoi+2,f,c
 12271  002B04  5010               	movf	??_atoi+1,w,c
 12272  002B06  2212               	addwfc	??_atoi+3,f,c
 12273  002B08  5012               	movf	??_atoi+3,w,c
 12274  002B0A  E106               	bnz	u7810
 12275  002B0C  0E0A               	movlw	10
 12276  002B0E  5C11               	subwf	??_atoi+2,w,c
 12277  002B10  B0D8               	btfsc	status,0,c
 12278  002B12  D002               	goto	u7810
 12279  002B14  0E01               	movlw	1
 12280  002B16  D001               	goto	u7820
 12281  002B18                     u7810:
 12282  002B18  0E00               	movlw	0
 12283  002B1A                     u7820:
 12284  002B1A  6E17               	movwf	_atoi$1831,c
 12285  002B1C  6A18               	clrf	_atoi$1831+1,c
 12286  002B1E  5017               	movf	_atoi$1831,w,c
 12287  002B20  1018               	iorwf	_atoi$1831+1,w,c
 12288  002B22  A4D8               	btfss	status,2,c
 12289  002B24  D7C7               	goto	l7064
 12290  002B26  5013               	movf	atoi@neg,w,c
 12291  002B28  1014               	iorwf	atoi@neg+1,w,c
 12292  002B2A  A4D8               	btfss	status,2,c
 12293  002B2C  D00D               	goto	l1415
 12294  002B2E  C01A  F00F         	movff	atoi@n,??_atoi
 12295  002B32  C01B  F010         	movff	atoi@n+1,??_atoi+1
 12296  002B36  1E0F               	comf	??_atoi,f,c
 12297  002B38  1E10               	comf	??_atoi+1,f,c
 12298  002B3A  4A0F               	infsnz	??_atoi,f,c
 12299  002B3C  2A10               	incf	??_atoi+1,f,c
 12300  002B3E  C00F  F00D         	movff	??_atoi,?_atoi
 12301  002B42  C010  F00E         	movff	??_atoi+1,?_atoi+1
 12302  002B46  0012               	return	
 12303  002B48                     l1415:
 12304  002B48  C01A  F00D         	movff	atoi@n,?_atoi
 12305  002B4C  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 12306  002B50  0012               	return		;funcret
 12307  002B52                     __end_of_atoi:
 12308                           	opt callstack 0
 12309                           
 12310 ;; *************** function _isspace *****************
 12311 ;; Defined at:
 12312 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  c               2    5[COMRAM] int 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  2    5[COMRAM] int 
 12319 ;; Registers used:
 12320 ;;		wreg, status,2, status,0
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;Total ram usage:        7 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    2
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_atoi
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text54
 12341  0035FC                     __ptext54:
 12342                           	opt callstack 0
 12343  0035FC                     _isspace:
 12344                           	opt callstack 24
 12345                           
 12346                           ;incstack = 0
 12347  0035FC  0E01               	movlw	1
 12348  0035FE  6E0C               	movwf	_isspace$1856,c
 12349  003600  0E20               	movlw	32
 12350  003602  1806               	xorwf	isspace@c,w,c
 12351  003604  1007               	iorwf	isspace@c+1,w,c
 12352  003606  B4D8               	btfsc	status,2,c
 12353  003608  D014               	goto	l6852
 12354  00360A  0EF7               	movlw	247
 12355  00360C  6E08               	movwf	??_isspace& (0+255),c
 12356  00360E  0EFF               	movlw	255
 12357  003610  6E09               	movwf	(??_isspace+1)& (0+255),c
 12358  003612  C006  F00A         	movff	isspace@c,??_isspace+2
 12359  003616  C007  F00B         	movff	isspace@c+1,??_isspace+3
 12360  00361A  5008               	movf	??_isspace,w,c
 12361  00361C  260A               	addwf	??_isspace+2,f,c
 12362  00361E  5009               	movf	??_isspace+1,w,c
 12363  003620  220B               	addwfc	??_isspace+3,f,c
 12364  003622  500B               	movf	??_isspace+3,w,c
 12365  003624  E104               	bnz	u7340
 12366  003626  0E05               	movlw	5
 12367  003628  5C0A               	subwf	??_isspace+2,w,c
 12368  00362A  A0D8               	btfss	status,0,c
 12369  00362C  D002               	goto	l6852
 12370  00362E                     u7340:
 12371  00362E  0E00               	movlw	0
 12372  003630  6E0C               	movwf	_isspace$1856,c
 12373  003632                     l6852:
 12374  003632  C00C  F006         	movff	_isspace$1856,?_isspace
 12375  003636  6A07               	clrf	?_isspace+1,c
 12376  003638  0012               	return		;funcret
 12377  00363A                     __end_of_isspace:
 12378                           	opt callstack 0
 12379                           
 12380 ;; *************** function _isdigit *****************
 12381 ;; Defined at:
 12382 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  c               2    5[COMRAM] int 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;		None
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  2    5[COMRAM] int 
 12389 ;; Registers used:
 12390 ;;		wreg, status,2, status,0
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;Total ram usage:        6 bytes
 12401 ;; Hardware stack levels used:    1
 12402 ;; Hardware stack levels required when called:    2
 12403 ;; This function calls:
 12404 ;;		Nothing
 12405 ;; This function is called by:
 12406 ;;		_vfpfcnvrt
 12407 ;;		_atoi
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text55
 12412  003738                     __ptext55:
 12413                           	opt callstack 0
 12414  003738                     _isdigit:
 12415                           	opt callstack 25
 12416                           
 12417                           ;incstack = 0
 12418  003738  0ED0               	movlw	208
 12419  00373A  6E08               	movwf	??_isdigit& (0+255),c
 12420  00373C  0EFF               	movlw	255
 12421  00373E  6E09               	movwf	(??_isdigit+1)& (0+255),c
 12422  003740  C006  F00A         	movff	isdigit@c,??_isdigit+2
 12423  003744  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 12424  003748  5008               	movf	??_isdigit,w,c
 12425  00374A  260A               	addwf	??_isdigit+2,f,c
 12426  00374C  5009               	movf	??_isdigit+1,w,c
 12427  00374E  220B               	addwfc	??_isdigit+3,f,c
 12428  003750  500B               	movf	??_isdigit+3,w,c
 12429  003752  E106               	bnz	u7180
 12430  003754  0E0A               	movlw	10
 12431  003756  5C0A               	subwf	??_isdigit+2,w,c
 12432  003758  B0D8               	btfsc	status,0,c
 12433  00375A  D002               	goto	u7180
 12434  00375C  0E01               	movlw	1
 12435  00375E  D001               	goto	u7190
 12436  003760                     u7180:
 12437  003760  0E00               	movlw	0
 12438  003762                     u7190:
 12439  003762  6E06               	movwf	?_isdigit,c
 12440  003764  6A07               	clrf	?_isdigit+1,c
 12441  003766  0012               	return		;funcret
 12442  003768                     __end_of_isdigit:
 12443                           	opt callstack 0
 12444                           
 12445 ;; *************** function ___wmul *****************
 12446 ;; Defined at:
 12447 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  multiplier      2    5[COMRAM] unsigned int 
 12450 ;;  multiplicand    2    7[COMRAM] unsigned int 
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;  product         2    9[COMRAM] unsigned int 
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  2    5[COMRAM] unsigned int 
 12455 ;; Registers used:
 12456 ;;		wreg, status,2, status,0, prodl, prodh
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;Total ram usage:        6 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; Hardware stack levels required when called:    2
 12469 ;; This function calls:
 12470 ;;		Nothing
 12471 ;; This function is called by:
 12472 ;;		_doDisplayLog
 12473 ;;		_atoi
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           	psect	text56
 12478  00380E                     __ptext56:
 12479                           	opt callstack 0
 12480  00380E                     ___wmul:
 12481                           	opt callstack 24
 12482                           
 12483                           ;incstack = 0
 12484  00380E  5006               	movf	___wmul@multiplier,w,c
 12485  003810  0208               	mulwf	___wmul@multiplicand,c
 12486  003812  CFF3 F00A          	movff	prodl,___wmul@product
 12487  003816  CFF4 F00B          	movff	prodh,___wmul@product+1
 12488  00381A  5006               	movf	___wmul@multiplier,w,c
 12489  00381C  0209               	mulwf	___wmul@multiplicand+1,c
 12490  00381E  50F3               	movf	prodl,w,c
 12491  003820  260B               	addwf	___wmul@product+1,f,c
 12492  003822  5007               	movf	___wmul@multiplier+1,w,c
 12493  003824  0208               	mulwf	___wmul@multiplicand,c
 12494  003826  50F3               	movf	prodl,w,c
 12495  003828  260B               	addwf	___wmul@product+1,f,c
 12496  00382A  C00A  F006         	movff	___wmul@product,?___wmul
 12497  00382E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 12498  003832  0012               	return		;funcret
 12499  003834                     __end_of___wmul:
 12500                           	opt callstack 0
 12501                           
 12502 ;; *************** function _lcdInst *****************
 12503 ;; Defined at:
 12504 ;;		line 64 in file "lcd.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;  data            1    wreg     unsigned char 
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;  data            1    8[COMRAM] unsigned char 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;Total ram usage:        1 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    5
 12525 ;; This function calls:
 12526 ;;		_send_byte
 12527 ;; This function is called by:
 12528 ;;		_doDisplayLog
 12529 ;;		_doOperation
 12530 ;;		_main
 12531 ;;		_initLCD
 12532 ;;		_mainEEPROM
 12533 ;;		_lcd_shift_cursor
 12534 ;;		_lcd_shift_display
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text57
 12539  00393A                     __ptext57:
 12540                           	opt callstack 0
 12541  00393A                     _lcdInst:
 12542                           	opt callstack 23
 12543                           
 12544                           ;incstack = 0
 12545                           ;lcdInst@data stored from wreg
 12546  00393A  6E09               	movwf	lcdInst@data,c
 12547                           
 12548                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12549  00393C  948C               	bcf	3980,2,c	;volatile
 12550                           
 12551                           ;lcd.c: 66:     send_byte(data);
 12552  00393E  5009               	movf	lcdInst@data,w,c
 12553  003940  EC8E  F01C         	call	_send_byte
 12554  003944  0012               	return		;funcret
 12555  003946                     __end_of_lcdInst:
 12556                           	opt callstack 0
 12557                           
 12558 ;; *************** function _send_byte *****************
 12559 ;; Defined at:
 12560 ;;		line 55 in file "lcd.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;  data            1    wreg     unsigned char 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;  data            1    7[COMRAM] unsigned char 
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;Total ram usage:        1 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    4
 12581 ;; This function calls:
 12582 ;;		_send_nibble
 12583 ;; This function is called by:
 12584 ;;		_lcdInst
 12585 ;;		_initLCD
 12586 ;;		_putch
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           	psect	text58
 12591  00391C                     __ptext58:
 12592                           	opt callstack 0
 12593  00391C                     _send_byte:
 12594                           	opt callstack 24
 12595                           
 12596                           ;incstack = 0
 12597                           ;send_byte@data stored from wreg
 12598  00391C  6E08               	movwf	send_byte@data,c
 12599                           
 12600                           ;lcd.c: 57:     send_nibble(data >> 4);
 12601  00391E  3808               	swapf	send_byte@data,w,c
 12602  003920  0B0F               	andlw	15
 12603  003922  EC7A  F01C         	call	_send_nibble
 12604                           
 12605                           ;lcd.c: 60:     send_nibble(data);
 12606  003926  5008               	movf	send_byte@data,w,c
 12607  003928  EC7A  F01C         	call	_send_nibble
 12608  00392C  0012               	return		;funcret
 12609  00392E                     __end_of_send_byte:
 12610                           	opt callstack 0
 12611                           
 12612 ;; *************** function _send_nibble *****************
 12613 ;; Defined at:
 12614 ;;		line 44 in file "lcd.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  data            1    wreg     unsigned char 
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  data            1    6[COMRAM] unsigned char 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;Total ram usage:        1 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    3
 12635 ;; This function calls:
 12636 ;;		_pulse_e
 12637 ;; This function is called by:
 12638 ;;		_send_byte
 12639 ;;		_initLCD
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           	psect	text59
 12644  0038F4                     __ptext59:
 12645                           	opt callstack 0
 12646  0038F4                     _send_nibble:
 12647                           	opt callstack 25
 12648                           
 12649                           ;incstack = 0
 12650                           ;send_nibble@data stored from wreg
 12651  0038F4  6E07               	movwf	send_nibble@data,c
 12652                           
 12653                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12654  0038F6  508C               	movf	3980,w,c	;volatile
 12655  0038F8  0B0F               	andlw	15
 12656  0038FA  6E8C               	movwf	3980,c	;volatile
 12657                           
 12658                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12659  0038FC  3807               	swapf	send_nibble@data,w,c
 12660  0038FE  0BF0               	andlw	240
 12661  003900  108C               	iorwf	3980,w,c	;volatile
 12662  003902  6E8C               	movwf	3980,c	;volatile
 12663                           
 12664                           ;lcd.c: 48:     pulse_e();
 12665  003904  ECCA  F01B         	call	_pulse_e	;wreg free
 12666  003908  0012               	return		;funcret
 12667  00390A                     __end_of_send_nibble:
 12668                           	opt callstack 0
 12669                           
 12670 ;; *************** function _pulse_e *****************
 12671 ;; Defined at:
 12672 ;;		line 28 in file "lcd.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;  interruptSta    1    5[COMRAM] unsigned char 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		wreg
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:        1 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:    2
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_send_nibble
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text60
 12701  003794                     __ptext60:
 12702                           	opt callstack 0
 12703  003794                     _pulse_e:
 12704                           	opt callstack 25
 12705                           
 12706                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12707                           
 12708                           ;incstack = 0
 12709  003794  0E00               	movlw	0
 12710  003796  BEF2               	btfsc	4082,7,c	;volatile
 12711  003798  0E01               	movlw	1
 12712  00379A  6E06               	movwf	pulse_e@interruptState,c
 12713                           
 12714                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12715  00379C  9EF2               	bcf	4082,7,c	;volatile
 12716                           
 12717                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12718  00379E  868C               	bsf	3980,3,c	;volatile
 12719                           
 12720                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12721  0037A0  0E14               	movlw	20
 12722  0037A2                     u10317:
 12723  0037A2  2EE8               	decfsz	wreg,f,c
 12724  0037A4  D7FE               	bra	u10317
 12725  0037A6  D000               	nop2	
 12726                           
 12727                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12728  0037A8  968C               	bcf	3980,3,c	;volatile
 12729                           
 12730                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12731  0037AA  0E53               	movlw	83
 12732  0037AC                     u10327:
 12733  0037AC  2EE8               	decfsz	wreg,f,c
 12734  0037AE  D7FE               	bra	u10327
 12735  0037B0  F000               	nop	
 12736                           
 12737                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12738  0037B2  B006               	btfsc	pulse_e@interruptState,0,c
 12739  0037B4  D002               	bra	u6965
 12740  0037B6  9EF2               	bcf	4082,7,c	;volatile
 12741  0037B8  D001               	bra	u6966
 12742  0037BA                     u6965:
 12743  0037BA  8EF2               	bsf	4082,7,c	;volatile
 12744  0037BC                     u6966:
 12745  0037BC  0012               	return		;funcret
 12746  0037BE                     __end_of_pulse_e:
 12747                           	opt callstack 0
 12748                           
 12749 ;; *************** function ___llmod *****************
 12750 ;; Defined at:
 12751 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;  dividend        4    5[COMRAM] unsigned long 
 12754 ;;  divisor         4    9[COMRAM] unsigned long 
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  counter         1   13[COMRAM] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  4    5[COMRAM] unsigned long 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;Total ram usage:        9 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    2
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		_main
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           	psect	text61
 12781  003202                     __ptext61:
 12782                           	opt callstack 0
 12783  003202                     ___llmod:
 12784                           	opt callstack 28
 12785                           
 12786                           ;incstack = 0
 12787  003202  500A               	movf	___llmod@divisor,w,c
 12788  003204  100B               	iorwf	___llmod@divisor+1,w,c
 12789  003206  100C               	iorwf	___llmod@divisor+2,w,c
 12790  003208  100D               	iorwf	___llmod@divisor+3,w,c
 12791  00320A  B4D8               	btfsc	status,2,c
 12792  00320C  D024               	goto	l1129
 12793  00320E  0E01               	movlw	1
 12794  003210  6E0E               	movwf	___llmod@counter,c
 12795  003212  D006               	goto	l8646
 12796  003214                     l8644:
 12797  003214  90D8               	bcf	status,0,c
 12798  003216  360A               	rlcf	___llmod@divisor,f,c
 12799  003218  360B               	rlcf	___llmod@divisor+1,f,c
 12800  00321A  360C               	rlcf	___llmod@divisor+2,f,c
 12801  00321C  360D               	rlcf	___llmod@divisor+3,f,c
 12802  00321E  2A0E               	incf	___llmod@counter,f,c
 12803  003220                     l8646:
 12804  003220  AE0D               	btfss	___llmod@divisor+3,7,c
 12805  003222  D7F8               	goto	l8644
 12806  003224                     u9880:
 12807  003224  500A               	movf	___llmod@divisor,w,c
 12808  003226  5C06               	subwf	___llmod@dividend,w,c
 12809  003228  500B               	movf	___llmod@divisor+1,w,c
 12810  00322A  5807               	subwfb	___llmod@dividend+1,w,c
 12811  00322C  500C               	movf	___llmod@divisor+2,w,c
 12812  00322E  5808               	subwfb	___llmod@dividend+2,w,c
 12813  003230  500D               	movf	___llmod@divisor+3,w,c
 12814  003232  5809               	subwfb	___llmod@dividend+3,w,c
 12815  003234  A0D8               	btfss	status,0,c
 12816  003236  D008               	goto	l8652
 12817  003238  500A               	movf	___llmod@divisor,w,c
 12818  00323A  5E06               	subwf	___llmod@dividend,f,c
 12819  00323C  500B               	movf	___llmod@divisor+1,w,c
 12820  00323E  5A07               	subwfb	___llmod@dividend+1,f,c
 12821  003240  500C               	movf	___llmod@divisor+2,w,c
 12822  003242  5A08               	subwfb	___llmod@dividend+2,f,c
 12823  003244  500D               	movf	___llmod@divisor+3,w,c
 12824  003246  5A09               	subwfb	___llmod@dividend+3,f,c
 12825  003248                     l8652:
 12826  003248  90D8               	bcf	status,0,c
 12827  00324A  320D               	rrcf	___llmod@divisor+3,f,c
 12828  00324C  320C               	rrcf	___llmod@divisor+2,f,c
 12829  00324E  320B               	rrcf	___llmod@divisor+1,f,c
 12830  003250  320A               	rrcf	___llmod@divisor,f,c
 12831  003252  2E0E               	decfsz	___llmod@counter,f,c
 12832  003254  D7E7               	goto	u9880
 12833  003256                     l1129:
 12834  003256  C006  F006         	movff	___llmod@dividend,?___llmod
 12835  00325A  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 12836  00325E  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 12837  003262  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 12838  003266  0012               	return		;funcret
 12839  003268                     __end_of___llmod:
 12840                           	opt callstack 0
 12841                           
 12842 ;; *************** function _interruptHandler *****************
 12843 ;; Defined at:
 12844 ;;		line 1194 in file "main.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		wreg, status,2, status,0, cstack
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;Total ram usage:        0 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:    1
 12865 ;; This function calls:
 12866 ;;		_updateMotorAEncoder
 12867 ;;		_updateMotorBEncoder
 12868 ;; This function is called by:
 12869 ;;		Interrupt level 2
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           	psect	intcode
 12874  000008                     __pintcode:
 12875                           	opt callstack 0
 12876  000008                     _interruptHandler:
 12877                           	opt callstack 17
 12878                           
 12879                           ;incstack = 0
 12880  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12881  00000A  ED55  F01A         	call	int_func,f	;refresh shadow registers
 12882                           
 12883                           	psect	intcode_body
 12884  0034AA                     __pintcode_body:
 12885                           	opt callstack 17
 12886  0034AA                     int_func:
 12887                           	opt callstack 17
 12888  0034AA  0006               	pop		; remove dummy address from shadow register refresh
 12889                           
 12890                           ;main.c: 1196:     if(INT1IF){
 12891  0034AC  A0F0               	btfss	4080,0,c	;volatile
 12892  0034AE  D005               	goto	i2l439
 12893                           
 12894                           ;main.c: 1199:         keyPressed = 1;
 12895  0034B0  0E01               	movlw	1
 12896  0034B2  0100               	movlb	0	; () banked
 12897  0034B4  6FF5               	movwf	_keyPressed& (0+255),b	;volatile
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;main.c: 1200:         INT1IF = 0;
 12901  0034B6  90F0               	bcf	4080,0,c	;volatile
 12902                           
 12903                           ;main.c: 1201:     } else if (TMR0IF) {
 12904  0034B8  D019               	goto	i2l442
 12905  0034BA                     i2l439:
 12906  0034BA  A4F2               	btfss	4082,2,c	;volatile
 12907  0034BC  D00C               	goto	i2l441
 12908                           
 12909                           ;main.c: 1202:     INTCONbits.TMR0IF = 0;
 12910  0034BE  94F2               	bcf	4082,2,c	;volatile
 12911                           
 12912                           ;main.c: 1203:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 12913  0034C0  0EFB               	movlw	251
 12914  0034C2  6ED7               	movwf	4055,c	;volatile
 12915                           
 12916                           ;main.c: 1204:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 12917  0034C4  0E1E               	movlw	30
 12918  0034C6  6ED6               	movwf	4054,c	;volatile
 12919                           
 12920                           ;main.c: 1205:     millisecondsMeasured++;
 12921  0034C8  0E01               	movlw	1
 12922  0034CA  2675               	addwf	_millisecondsMeasured,f,c	;volatile
 12923  0034CC  0E00               	movlw	0
 12924  0034CE  2276               	addwfc	_millisecondsMeasured+1,f,c	;volatile
 12925  0034D0  2277               	addwfc	_millisecondsMeasured+2,f,c	;volatile
 12926  0034D2  2278               	addwfc	_millisecondsMeasured+3,f,c	;volatile
 12927                           
 12928                           ;main.c: 1206:    } else if (INT2IF){
 12929  0034D4  D00B               	goto	i2l442
 12930  0034D6                     i2l441:
 12931  0034D6  A2F0               	btfss	4080,1,c	;volatile
 12932  0034D8  D004               	goto	i2l443
 12933                           
 12934                           ;main.c: 1207:        INT2IF = 0;
 12935  0034DA  92F0               	bcf	4080,1,c	;volatile
 12936                           
 12937                           ;main.c: 1208:        updateMotorBEncoder();
 12938  0034DC  EC9A  F01A         	call	_updateMotorBEncoder	;wreg free
 12939                           
 12940                           ;main.c: 1209:    } else if (INT0IF){
 12941  0034E0  D005               	goto	i2l442
 12942  0034E2                     i2l443:
 12943  0034E2  A2F2               	btfss	4082,1,c	;volatile
 12944  0034E4  D003               	goto	i2l442
 12945                           
 12946                           ;main.c: 1210:        INT0IF = 0;
 12947  0034E6  92F2               	bcf	4082,1,c	;volatile
 12948                           
 12949                           ;main.c: 1211:        updateMotorAEncoder();
 12950  0034E8  ECBC  F01A         	call	_updateMotorAEncoder	;wreg free
 12951  0034EC                     i2l442:
 12952  0034EC  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12953  0034EE  0011               	retfie		f
 12954  0034F0                     __end_of_interruptHandler:
 12955                           	opt callstack 0
 12956                           
 12957 ;; *************** function _updateMotorBEncoder *****************
 12958 ;; Defined at:
 12959 ;;		line 149 in file "main.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;  directionPin    2    3[COMRAM] int 
 12964 ;;  interruptPin    2    1[COMRAM] int 
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  1    wreg      void 
 12967 ;; Registers used:
 12968 ;;		wreg, status,2, status,0
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/0
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12978 ;;Total ram usage:        5 bytes
 12979 ;; Hardware stack levels used:    1
 12980 ;; This function calls:
 12981 ;;		Nothing
 12982 ;; This function is called by:
 12983 ;;		_interruptHandler
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	text63
 12988  003534                     __ptext63:
 12989                           	opt callstack 0
 12990  003534                     _updateMotorBEncoder:
 12991                           	opt callstack 17
 12992                           
 12993                           ;main.c: 150:   int interruptPinState = PORTBbits.RB2;
 12994                           
 12995                           ;incstack = 0
 12996  003534  A481               	btfss	3969,2,c	;volatile
 12997  003536  D003               	goto	i2u622_40
 12998  003538  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 12999  00353A  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 13000  00353C  D001               	goto	i2u622_48
 13001  00353E                     i2u622_40:
 13002  00353E  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13003  003540                     i2u622_48:
 13004  003540  5001               	movf	??_updateMotorBEncoder,w,c
 13005  003542  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 13006  003544  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 13007                           
 13008                           ;main.c: 151:   int directionPin = PORTCbits.RC0;
 13009  003546  A082               	btfss	3970,0,c	;volatile
 13010  003548  D003               	goto	i2u623_40
 13011  00354A  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13012  00354C  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 13013  00354E  D001               	goto	i2u623_48
 13014  003550                     i2u623_40:
 13015  003550  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 13016  003552                     i2u623_48:
 13017  003552  5001               	movf	??_updateMotorBEncoder,w,c
 13018  003554  6E04               	movwf	updateMotorBEncoder@directionPin,c
 13019  003556  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 13020                           
 13021                           ;main.c: 152:   if(directionPin == interruptPinState){
 13022  003558  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 13023  00355A  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 13024  00355C  E108               	bnz	i2l5794
 13025  00355E  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 13026  003560  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 13027  003562  A4D8               	btfss	status,2,c
 13028  003564  D004               	goto	i2l5794
 13029                           
 13030                           ;main.c: 153:     motorBDistance++;
 13031  003566  0100               	movlb	0	; () banked
 13032  003568  4BF1               	infsnz	_motorBDistance& (0+255),f,b	;volatile
 13033  00356A  2BF2               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
 13034                           
 13035                           ;main.c: 154:   } else {
 13036  00356C  0012               	return	
 13037  00356E                     i2l5794:
 13038                           
 13039                           ;main.c: 155:     motorBDistance--;
 13040  00356E  0100               	movlb	0	; () banked
 13041  003570  07F1               	decf	_motorBDistance& (0+255),f,b	;volatile
 13042  003572  A0D8               	btfss	status,0,c
 13043  003574  07F2               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
 13044                           
 13045                           ; BSR set to: 0
 13046  003576  0012               	return		;funcret
 13047  003578                     __end_of_updateMotorBEncoder:
 13048                           	opt callstack 0
 13049                           
 13050 ;; *************** function _updateMotorAEncoder *****************
 13051 ;; Defined at:
 13052 ;;		line 180 in file "main.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  directionPin    2    3[COMRAM] int 
 13057 ;;  interruptPin    2    1[COMRAM] int 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;Total ram usage:        5 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; This function calls:
 13074 ;;		Nothing
 13075 ;; This function is called by:
 13076 ;;		_interruptHandler
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           	psect	text64
 13081  003578                     __ptext64:
 13082                           	opt callstack 0
 13083  003578                     _updateMotorAEncoder:
 13084                           	opt callstack 17
 13085                           
 13086                           ;main.c: 181:   int interruptPinState = PORTBbits.RB0;
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;incstack = 0
 13090  003578  A081               	btfss	3969,0,c	;volatile
 13091  00357A  D003               	goto	i2u625_40
 13092  00357C  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13093  00357E  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 13094  003580  D001               	goto	i2u625_48
 13095  003582                     i2u625_40:
 13096  003582  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13097  003584                     i2u625_48:
 13098  003584  5001               	movf	??_updateMotorAEncoder,w,c
 13099  003586  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 13100  003588  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 13101                           
 13102                           ;main.c: 182:   int directionPin = PORTEbits.RE1;
 13103  00358A  A284               	btfss	3972,1,c	;volatile
 13104  00358C  D003               	goto	i2u626_40
 13105  00358E  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13106  003590  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 13107  003592  D001               	goto	i2u626_48
 13108  003594                     i2u626_40:
 13109  003594  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 13110  003596                     i2u626_48:
 13111  003596  5001               	movf	??_updateMotorAEncoder,w,c
 13112  003598  6E04               	movwf	updateMotorAEncoder@directionPin,c
 13113  00359A  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 13114                           
 13115                           ;main.c: 183:   if(directionPin == interruptPinState){
 13116  00359C  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 13117  00359E  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 13118  0035A0  E109               	bnz	i2l5802
 13119  0035A2  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 13120  0035A4  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 13121  0035A6  A4D8               	btfss	status,2,c
 13122  0035A8  D005               	goto	i2l5802
 13123                           
 13124                           ;main.c: 184:     motorADistance--;
 13125  0035AA  0100               	movlb	0	; () banked
 13126  0035AC  07F3               	decf	_motorADistance& (0+255),f,b	;volatile
 13127  0035AE  A0D8               	btfss	status,0,c
 13128  0035B0  07F4               	decf	(_motorADistance+1)& (0+255),f,b	;volatile
 13129                           
 13130                           ;main.c: 185:   } else {
 13131  0035B2  0012               	return	
 13132  0035B4                     i2l5802:
 13133                           
 13134                           ;main.c: 186:     motorADistance++;
 13135  0035B4  0100               	movlb	0	; () banked
 13136  0035B6  4BF3               	infsnz	_motorADistance& (0+255),f,b	;volatile
 13137  0035B8  2BF4               	incf	(_motorADistance+1)& (0+255),f,b	;volatile
 13138                           
 13139                           ; BSR set to: 0
 13140  0035BA  0012               	return		;funcret
 13141  0035BC                     __end_of_updateMotorAEncoder:
 13142                           	opt callstack 0
 13143                           
 13144                           	psect	rparam
 13145  0000                     
 13146                           	psect	temp
 13147  00007A                     btemp:
 13148                           	opt callstack 0
 13149  00007A                     	ds	1
 13150  0000                     int$flags	set	btemp
 13151  0000                     wtemp8	set	btemp+1
 13152  0000                     ttemp5	set	btemp+1
 13153  0000                     ttemp6	set	btemp+4
 13154  0000                     ttemp7	set	btemp+8
 13155                           tosu	equ	0xFFF
 13156                           tosh	equ	0xFFE
 13157                           tosl	equ	0xFFD
 13158                           stkptr	equ	0xFFC
 13159                           pclatu	equ	0xFFB
 13160                           pclath	equ	0xFFA
 13161                           pcl	equ	0xFF9
 13162                           tblptru	equ	0xFF8
 13163                           tblptrh	equ	0xFF7
 13164                           tblptrl	equ	0xFF6
 13165                           tablat	equ	0xFF5
 13166                           prodh	equ	0xFF4
 13167                           prodl	equ	0xFF3
 13168                           indf0	equ	0xFEF
 13169                           postinc0	equ	0xFEE
 13170                           postdec0	equ	0xFED
 13171                           preinc0	equ	0xFEC
 13172                           plusw0	equ	0xFEB
 13173                           fsr0h	equ	0xFEA
 13174                           fsr0l	equ	0xFE9
 13175                           wreg	equ	0xFE8
 13176                           indf1	equ	0xFE7
 13177                           postinc1	equ	0xFE6
 13178                           postdec1	equ	0xFE5
 13179                           preinc1	equ	0xFE4
 13180                           plusw1	equ	0xFE3
 13181                           fsr1h	equ	0xFE2
 13182                           fsr1l	equ	0xFE1
 13183                           bsr	equ	0xFE0
 13184                           indf2	equ	0xFDF
 13185                           postinc2	equ	0xFDE
 13186                           postdec2	equ	0xFDD
 13187                           preinc2	equ	0xFDC
 13188                           plusw2	equ	0xFDB
 13189                           fsr2h	equ	0xFDA
 13190                           fsr2l	equ	0xFD9
 13191                           status	equ	0xFD8


Data Sizes:
    Strings     391
    Constant    35
    Data        9
    BSS         537
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128    107     119
    BANK1           256     16      65
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_51(CODE[16]), 
		 -> STR_49(CODE[14]), STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), 
		 -> STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), 
		 -> STR_33(CODE[14]), STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), 
		 -> STR_16(CODE[16]), STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), 
		 -> STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), 
		 -> STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1869_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_55(CODE[11]), STR_54(CODE[11]), STR_53(CODE[10]), STR_52(CODE[13]), 
		 -> STR_50(CODE[3]), STR_48(CODE[3]), STR_46(CODE[3]), STR_44(CODE[3]), 
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_29(CODE[15]), 
		 -> STR_28(CODE[15]), STR_26(CODE[3]), STR_25(CODE[13]), STR_24(CODE[11]), 
		 -> STR_23(CODE[10]), STR_22(CODE[6]), STR_21(CODE[6]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[5]), 
		 -> STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_51(CODE[16]), STR_49(CODE[14]), STR_47(CODE[11]), 
		 -> STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), STR_31(CODE[10]), 
		 -> STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), STR_14(CODE[14]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_51(CODE[16]), STR_49(CODE[14]), 
		 -> STR_47(CODE[11]), STR_45(CODE[9]), STR_43(CODE[16]), STR_41(CODE[13]), 
		 -> STR_39(CODE[13]), STR_37(CODE[9]), STR_35(CODE[13]), STR_33(CODE[14]), 
		 -> STR_31(CODE[10]), STR_27(CODE[9]), STR_18(CODE[14]), STR_16(CODE[16]), 
		 -> STR_14(CODE[14]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_tirePositioning
    _tirePositioning->_setMotorSpeeds
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _sendArduinoAbortOperationMessage->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___flsub->___fldiv
    ___fladd->___flmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_errorCorrectedMove
    _tirePositioning->_setMotorSpeeds
    _errorCorrectedMove->_setMotorSpeeds
    _doDisplayLog->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  196150
                                            105 BANK0      2     2      0
                                              0 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     892
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        2     2      0     130
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         77    77      0  121663
                                             32 BANK0     73    73      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                                _abs
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                            _opDelay
                             _printf
              _requestIsTireDropDone
   _sendArduinoAbortOperationMessage
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     25    21      4   21114
                                            113 COMRAM     3     3      0
                                              8 BANK0     22    18      4
                            ___awdiv
                                _abs
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                             18    12      6     636
                                              5 COMRAM    18    12      6
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoAbortOperationMessage                     1     1      0    1325
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1390
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1291
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _errorCorrectedMove                                  24    10     14   38367
                                              8 BANK0     24    10     14
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   18232
                                            107 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   11264
                                             87 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    2096
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2543
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4727
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3982
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        13    11      2   36750
                                             14 BANK0     13    11      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33924
                                              0 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30849
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   30286
                                             75 COMRAM    33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7287
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8063
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     723
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5536
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5257
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2895
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1792
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     _abs
       ___aomod (ARG)
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opDelay
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoAbortOperationMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___awdiv
       _abs
         ___aomod (ARG)
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0     1E0      38       12.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     10      41       8       25.4%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6B      77       5       93.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131       6        0.0%
DATA                 0      0     311       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 29 22:12:11 2019

                                 ___fldiv@aexp 0045                                   ___fldiv@bexp 0044  
                                 ___fldiv@sign 003D                                    __CFG_CPD$ON 000000  
                                 ___awdiv@sign 000B                            ___wmul@multiplicand 0008  
                                  __CFG_BORV$3 000000                 doOperation@motorBStartDistance 00D2  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                  __CFG_OSC$HS 000000                                            l252 2EA6  
                                          l254 2EB6                                            l416 0DDC  
                                          l265 18CA                                            l621 27F4  
                                          l640 2230                                            l642 2238  
                                          l574 2E30                                            l592 203E  
                                          l736 30AA                                            l594 2046  
                                          l974 2D0A                                   __CFG_CPB$OFF 000000  
                                          _PR2 000FCB                                            _PSA 007EAB  
                                          _abs 36A6                                            _pad 2E00  
                                 ___awmod@sign 000B                               ??_init_motor_PWM 0006  
                                          wreg 000FE8                                   ___flmul@aexp 0021  
                                 ___flmul@bexp 0026                                   ___flmul@sign 0020  
                                 ___flmul@temp 002B                                   ___flmul@prod 0027  
                            _doDisplayLog$2223 0099                     __end_of_errorCorrectedMove 1FCA  
                                 __CFG_LVP$OFF 000000                                   ___fltol@exp1 0057  
                                 __CFG_WDT$OFF 000000                                           ?_abs 0018  
                                         l1304 1CBE                                           l1129 3256  
                                         l1305 1CBA                                           l1323 122C  
                                         l1340 14CA                                           l1332 1444  
                                         l1333 1440                                           l1254 1712  
                                         l1238 1640                                           l1415 2B48  
                                         l1263 1778                                           l1239 161E  
                                         l1264 1774                                           l1371 298E  
                                         l1364 2910                                           l1293 1C50  
                                         l1384 36CE                                           l1482 345A  
                                         l7012 232C                                           l7020 23A2  
                                         ?_pad 001A                                           l7200 1D26  
                                         l7042 2A24                                           l7210 1D5C  
                                         l7114 1B4A                                           l7060 2A86  
                                         l7052 2A6E                                           l7044 2A28  
                                         l7036 241A                                           l7212 1D5E  
                                         l7204 1D50                                           l7140 1BB0  
                                         l7132 1B98                                           l7062 2A8C  
                                         l7150 1C00                                           l7126 1B82  
                                         l7118 1B4E                                           l7302 13EC  
                                         l8102 1AD2                                           l8030 185E  
                                         l8022 181E                                           l7064 2AB4  
                                         l7232 11D8                                           l8040 1896  
                                         l7058 2A7E                                           l7170 1C66  
                                         l7250 1218                                           l7234 11DC  
                                         l8050 18DA                                           l7068 2AE8  
                                         l6700 34FE                                           l7164 1C4E  
                                         l7332 14A6                                           l7308 140A  
                                         l7260 124A                                           l7252 121C  
                                         l7236 11EC                                           l7412 2DEE  
                                         l7404 2DC6                                           l8060 1954  
                                         l8044 18B8                                           l8036 1876  
                                         l7510 05BA                                           l7502 05A0  
                                         l8302 108C                                           l8222 30DC  
                                         l7158 1C28                                           l7094 1B0A  
                                         l7406 2DD2                                           l7430 2944  
                                         l7422 2920                                           l8150 3790  
                                         l8070 19C6                                           l6800 2746  
                                         l7600 0992                                           l7504 05A4  
                                         l8320 10F8                                           l8304 10AA  
                                         l7176 1C84                                           l7344 14E8  
                                         l7328 1488                                           l7440 29B4  
                                         l7432 2950                                           l8072 19E2  
                                         l6722 2E28                                           l7522 05CC  
                                         l7514 05C0                                           l7506 05B4  
                                         l8242 3122                                           l8234 310A  
                                         l8226 30EA                                           l8218 30D0  
                                         l7098 1B0E                                           l7362 2CF4  
                                         l7354 2CAA                                           l7442 29C0  
                                         l7434 2976                                           l8058 1938  
                                         l8066 198C                                           l6732 2E80  
                                         l6724 2E3A                                           l6804 276C  
                                         l6820 2BA2                                           l7540 0686  
                                         l8324 1102                                           l8316 10EA  
                                         l8228 30F2                                           l7196 1D02  
                                         l7428 293E                                           l8172 1FA0  
                                         l8164 1F7C                                           l8076 1A06  
                                         l8084 1A7A                                           l6718 2E1A  
                                         l7542 06A4                                           l7526 05D6  
                                         l7518 05C6                                           l7606 09AA  
                                         l8334 115C                                           l8342 117A  
                                         l8254 0E24                                           l8238 3114  
                                         l7710 162C                                           l7358 2CDE  
                                         l8094 1AA6                                           l8078 1A22  
                                         l8510 0362                                           l6680 3144  
                                         l6728 2E52                                           l6840 2C54  
                                         l6832 2C18                                           l6824 2BBC  
                                         l6816 2B7E                                           l6904 2168  
                                         l7544 06B2                                           l7528 0618  
                                         l8328 1118                                           l8344 1198  
                                         l7712 1630                                           l7632 152A  
                                         l7368 2D42                                           l8176 1FAC  
                                         l8168 1F88                                           l8512 0368  
                                         l6690 3644                                           l6826 2BD0  
                                         l7810 17EC                                           l7394 2DAE  
                                         l7378 2D64                                           l7458 2A00  
                                         l8522 039C                                           l8514 036C  
                                         l8450 019C                                           l6852 3632  
                                         l6860 3392                                           l6772 2672  
                                         l6836 2C2E                                           l6924 21D0  
                                         l6940 27B8                                           l8276 0F0E  
                                         l7812 17EE                                           l7660 1576  
                                         l7636 152E                                           l8540 0440  
                                         l8524 03B8                                           l8436 0156  
                                         l8428 00F6                                           l6694 365A  
                                         l6862 339E                                           l6950 280C  
                                         l7590 094C                                           l7558 075E  
                                         l7806 17E4                                           l7734 1686  
                                         l7726 1664                                           l7398 2DBE  
                                         l8470 0240                                           l6784 26C0  
                                         l6928 21E8                                           l7576 087E  
                                         l7568 0810                                           l7736 168A  
                                         l7744 169C                                           l7656 1572  
                                         l7840 2EBA                                           l8544 044E  
                                         l8472 0280                                           l8800 0C2C  
                                         l6698 34FA                                           l6786 26D4  
                                         l6778 269A                                           l6890 2060  
                                         l6954 2824                                           l7762 1736  
                                         l7754 1702                                           l7930 2FF8  
                                         l7922 2FDA                                           l8554 047E  
                                         l8538 043A                                           l8562 049E  
                                         l8634 33D6                                           l8652 3248  
                                         l8644 3214                                           l6796 2730  
                                         l6876 2020                                           l6972 28B4  
                                         l6964 2880                                           l7596 0988  
                                         l7772 174C                                           l7668 1596  
                                         l7836 2EAA                                           l7940 3018  
                                         l7916 2FCA                                           l7828 3278  
                                         l8580 051C                                           l8548 045E  
                                         l8564 04D8                                           l8820 0CA4  
                                         l8724 09FC                                           l8646 3220  
                                         l6894 2070                                           l6958 2842  
                                         l6990 227C                                           l8814 0C92  
                                         l8742 0A90                                           l8734 0A62  
                                         l8830 0CD0                                           l6968 289C  
                                         l6984 224C                                           l7928 2FF0  
                                         l7944 3022                                           l8576 0510  
                                         l8568 04F4                                           l8584 0522  
                                         l8496 0324                                           l8832 0D02  
                                         l7778 1756                                           l7698 15D2  
                                         l8762 0B3C                                           l7876 333C  
                                         l7948 3030                                           l8860 0D7A  
                                         l8852 0D5E                                           l8844 0D44  
                                         l8780 0BA4                                           l6998 229E  
                                         l7878 3362                                           l7798 17BE  
                                         l7886 305C                                           _P1M0 007DEE  
                                         _P1M1 007DEF                                           l7888 3068  
                                         l8872 0DA0                                           l8864 0D88  
                                         l8856 0D6C                                           l8848 0D52  
                                         l8880 0DAE                                           l7898 309C  
                                         l8868 0D94                                           STR_1 FD14  
                                         STR_2 FCC8                                           STR_3 FD19  
                                         STR_4 FD0F                                           STR_5 FBE8  
                                         STR_6 FD18                                           STR_7 FC31  
                                         STR_8 FD18                                           STR_9 FBC8  
                                         _LATB 000F8A                                           _LATD 000F8C  
                                         u7000 3184                                           u7020 3520  
                                         u7110 3730                                           u7120 3732  
                                         u7040 3700                                           u7130 369E  
                                         u7050 3702                                           u8010 1CB4  
                                         u7027 3516                                           u7300 2BD4  
                                         u7060 36B4                                           u7140 36A0  
                                         u7221 26A0                                           u7150 3442  
                                         u7240 26D8                                           u7400 2034  
                                         u7160 3444                                           u8200 143A  
                                         u9010 175A                                           u8050 1D10  
                                         u7180 3760                                           u7340 362E  
                                         u7420 205A                                           u8060 1D34  
                                         u7190 3762                                           u7430 2176  
                                         u9030 176E                                           u8150 1238  
                                         u7511 2798                                           u7360 1FF2  
                                         u7600 28C8                                           u8240 1496  
                                         u8160 13AE                                           u8320 2D52  
                                         u9200 306C                                           u7450 2198  
                                         u7370 1FF4                                           u8250 14B4  
                                         u8330 2D82                                           u7451 2196  
                                         u7460 21A6                                           u7620 2226  
                                         u8165 13A4                                           u7470 21AC  
                                         u7710 237E                                           u8335 2D78  
                                         u7560 2838                                           u7720 23B2  
                                         u7640 229A                                           u7810 2B18  
                                         u7490 21BA                                           u7570 2864  
                                         u7650 22D0                                           u9090 17CA  
                                         u8370 2DD8                                           u8450 29CA  
                                         u8530 2606                                           u9250 2FFC  
                                         u9410 196E                                           u7715 236C  
                                         u7820 2B1A                                           u7740 23D4  
                                         u7660 22D2                                           u9500 1F74  
                                         u7741 23D2                                           u7750 23E2  
                                         u8550 262A                                           u9430 19FC  
                                         u9175 3850                                           u7760 23E8  
                                         u7680 230A                                           u8720 08B2  
                                         u8640 06EA                                           u9520 1F98  
                                         u9176 3852                                           u9280 1828  
                                         u7577 285A                                           u8545 2608  
                                         u7690 230C                                           u8650 06EC  
                                         u9290 183C                                           u6980 313C  
                                         u8660 06F8                                           u9460 1A8C  
                                         u9380 18EE                                           u9700 012A  
                                         u6965 37BA                                           u8565 262C  
                                         u6966 37BC                                           u7790 2A6A  
                                         u8830 15F4                                           u9470 1A9C  
                                         u9390 18FE                                           u9710 013A  
                                         u8840 1604                                           u9480 1AC6  
                                         u9288 182A                                           u9720 0166  
                                         u9545 32F4                                           u8690 0792  
                                         u8850 1606                                           u9298 183E  
                                         u9730 0176                                           u9706 012C  
                                         u9580 30F6                                           u9716 013C  
                                         u9830 0504                                           u9726 0168  
                                         u9680 1172                                           u8880 1648  
                                         u9736 0178                                           u9860 3418  
                                         u9790 03EE                                           u9880 3224  
                                 __CFG_PWRT$ON 000000                                           abs@a 0018  
                                         _dbuf 010A                                           _atoi 2A12  
                                         _ctoa 337E                                           _main 09DE  
                                         _dtoa 1FCA                       __end_of_interruptHandler 34F0  
                                         _keys FB85                                           _logs 0141  
                                         _prec 00ED                                           _nout 0104  
                                         pad@i 0021                                           pad@p 001E  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0023  
                                         fsr2l 000FD9                                           _stoa 278E  
                                         btemp 007A                                           _xtoa 2212  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 000E                                  __CFG_IESO$OFF 000000  
                      __size_of_setMotorSpeeds 0096                                ___fldiv@new_exp 003E  
                          __end_of_EncoderInit 38F4                                  __CFG_MCLRE$ON 000000  
           tirePositioning@bottomPreviousState 0094                                   ___param_bank 000000  
                                        ??_abs 001A                                          ??_pad 0020  
                     __size_of_tirePositioning 02D4                          I2C_Master_Read@ackBit 0007  
                             ?_I2C_Master_Init 0013                               ?_I2C_Master_Read 0001  
                             ?_I2C_Master_Wait 0001                               ?_I2C_Master_Stop 0001  
                               replaceOldLog@i 0006                      doOperation@distanceToPole 00D6  
                                ___fltol@sign1 0056                                    ?_TIMER_INIT 0001  
                              __end_of___aodiv 278E                                          ?_atoi 000D  
                                        ?_ctoa 0025                                __end_of___fladd 180A  
                                        ?_main 0001                                          ?_dtoa 0025  
                              __end_of___aomod 2C76                                          _CCP1X 007DED  
                              __end_of___fldiv 1D66                                          _CCP1Y 007DEC  
                                        _CCP2X 007DD5                                          _CCP2Y 007DD4  
                              __end_of___awdiv 303A                                          _EEADR 000FA9  
                                        STR_10 FD0B                                          STR_11 FD1B  
                                        STR_20 FD24                                          STR_12 FD2D  
                                        STR_13 FD0F                                          STR_21 FD27  
                                        STR_30 FD18                                          STR_22 FD21  
                                        STR_14 FC15                                          STR_15 FD0F  
                                        STR_31 FCDC                                          STR_23 FCD2  
                                        STR_40 FD18                                          STR_32 FD18  
                                        STR_24 FCA7                                          STR_16 FBA8  
                                        STR_17 FD18                                          STR_25 FC82  
                                        STR_41 FC68                                          STR_33 FC3F  
                                        STR_50 FD18                                          STR_42 FD18  
                                        STR_34 FD18                                          STR_26 FD18  
                                        STR_18 FC4D                                          STR_19 FD24  
                                        STR_27 FCF0                                          STR_35 FC75  
                                        STR_43 FBD8                                          STR_51 FBB8  
                                        STR_44 FD18                                          STR_36 FD18  
                                        STR_52 FC8F                                          STR_28 FBF7  
                              __end_of___awmod 312C                                          STR_37 FD02  
                                        STR_45 FCF9                                          STR_53 FCE6  
                                        STR_29 FC06                                          STR_46 FD18  
                                        STR_38 FD18                                          STR_54 FCB2  
                                        STR_55 FCBD                                          STR_47 FC9C  
                                        STR_39 FC5B                                          STR_48 FD18  
                                        STR_49 FC23                                __end_of___flmul 14FE  
                              __end_of___flsub 34AA                                __end_of___fltol 2E00  
                                        ?_stoa 0013                                __end_of___lldiv 30BC  
                                        u10030 0D68                                          u10117 0A9E  
                                        u10207 31B6                                          u10127 0B4A  
                                        u10217 31C8                                          u10137 0B96  
                                        u10307 11A0                                          u10227 31EA  
                                        u10147 0BB2                                          u10317 37A2  
                                        u10237 01C6                                          u10157 0C3A  
                                        u10327 37AC                                          u10247 02C2  
                                        u10167 0CBE                                          u10257 037A  
                                        u10177 0D38                                          u10267 0E0C  
                                        u10187 0DF2                                ___awdiv@divisor 0008  
                                        u10277 0E32                                          u10197 319E  
                                        u10287 0F1C                                          ?_xtoa 0025  
                              __end_of___llmod 3268                                          u10297 10DE  
                                        _T0PS0 007EA8                                          _T0PS1 007EA9  
                                        _T0PS2 007EAA                                          i2l441 34D6  
                                        i2l442 34EC                                          i2l443 34E2  
                                        i2l439 34BA                                   main@keyValue 0139  
                              ___awdiv@counter 000A                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 005E  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 3946  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 0135                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0064  
                  set_pwm_duty_cycle@duty_valB 0066                                __end_of_opDelay 32CC  
                              __end_of_initLCD 3202                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 0092                                          _flags 00EF  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FBA1                 init_motor_PWM@TIMER2_PRESCALER FBA0  
                                        _fputc 312C                                __end_of_isalpha 36A6  
                                        _fputs 363A                                __end_of_isdigit 3768  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 00EB  
                                        ctoa@c 0027                                          _putch 392E  
                                        ctoa@w 0028                                          main@i 0136  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 3708                                __end_of_isspace 363A  
                              __end_of_isupper 3738                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 35BC                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 0548                    __end_of_updateMotorBEncoder 3578  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 37BE  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          status 000FD8  
                  I2C_Master_Read@receivedByte 0008                      requestIsTireDropDone@data 0009  
                                        wtemp8 007B                                          xtoa@c 004A  
                                        xtoa@d 0027                                          xtoa@i 0048  
                                        xtoa@n 0040                                          xtoa@p 003C  
                                        xtoa@w 003E                                          xtoa@x 002F  
                              __end_of_toupper 3464                       errorCorrectedMove@ASpeed 009C  
                     errorCorrectedMove@BSpeed 009E                                 __CFG_PBADEN$ON 000000  
                                 _toupper$1920 0012                                __initialization 2F30  
                          main@currentLogState 0137                                   __end_of_atoi 2B52  
                                 __end_of_ctoa 33CE                                   __end_of_main 0DFE  
                                 __end_of_dtoa 2212                                   __end_of_keys FB96  
                                 __end_of_stoa 28D2                          __size_of_doDisplayLog 03AE  
                                 __end_of_xtoa 2444                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 00E9  
                                       ??_dtoa 002F                               opDelay@startTime 0014  
                                       ??_stoa 0017                                         ??_xtoa 0030  
                                __activetblptr 000002                        set_pwm_duty_cycle@dutyA 0058  
                      set_pwm_duty_cycle@dutyB 005C                              ?_I2C_Master_Start 0001  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 341A  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0075  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                               ___awdiv@dividend 0006  
                       doOperation@tiresOnPole 00DC                                         ?_putch 0001  
                       doOperation@tiresToDrop 00D8                                         _INT0IE 007F94  
                                       _INT0IF 007F91                                         _INT1IE 007F83  
                                       _INT1IF 007F80                                         _INT2IE 007F84  
                                       _INT2IF 007F81                                         i2l5802 35B4  
                                       i2l5794 356E                             _set_pwm_duty_cycle 2444  
                                  _EncoderInit 38DC                                  vfpfcnvrt@done 0068  
                                       _TMR0IE 007F95                                         _TMR0IF 007F92  
                                       _TMR0ON 007EAF                                         _TMR2ON 007E52  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 2A12                                   _doDisplayLog 0DFE  
                          __size_of_TIMER_INIT 001E                            ?_set_pwm_duty_cycle 0058  
                               __CFG_XINST$OFF 000000                          _encoderAInterruptLast 0106  
                                 vfprintf@cfmt 0073                                         ___flge 2C76  
                                    ??___aodiv 0016                                      ??___fladd 0035  
                                    ??___aomod 0016                                         ___wmul 380E  
                                    ??___fldiv 0035                                      ??___awdiv 000A  
                               __CFG_STVREN$ON 000000                                      ??___awmod 000A  
                                    ??___flmul 001C                                      ??___flsub 004E  
                                    ??___fltol 0052                                      ??___lldiv 000E  
                                    ??___llmod 000E                               doOperation@F3372 0100  
                                       clear_0 2F7C                                         clear_1 2F8E  
                                       clear_2 2F9A                               ___awdiv@quotient 000C  
                              ___awmod@divisor 0008                                ___awmod@counter 000A  
                                    ??_lcdInst 0009                                         _printf 37E6  
                                       pad@buf 001C                                         ctoa@fp 0025  
                  ?_sendArduinoTireDropRequest 0001                         doOperation@starterDist 00C9  
                                       dtoa@fp 0025                updateMotorBEncoder@directionPin 0004  
                                       _strlen 34F0                                      ??_opDelay 000C  
                                    ??_initLCD 000A                                         fputc@c 000A  
                                       fputs@c 0017                                         fputs@i 0018  
                                 __pdataCOMRAM 0079                                         fputs@s 0013  
                                    ??_isalpha 0008                                      ??_isdigit 0008  
                        _requestIsTireDropDone 3768                           ??_set_pwm_duty_cycle 0060  
                            ??_tirePositioning 0072                                      ??_islower 0008  
                                 __mediumconst FB84                                      ??_isspace 0008  
             doOperation@currentOperationState 00E6                                         tblptrh 000FF7  
                                    ??_isupper 0008                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0023  
                                       stoa@fp 0013                               __end_of_vfprintf 337E  
                                    ??_pulse_e 0006                                         xtoa@fp 0025  
                                    ??_toupper 000E                                     ___flge@ff1 0006  
                                   ___flge@ff2 000A                                   ___xxtofl@arg 0010  
                        pulse_e@interruptState 0006                                   ___xxtofl@exp 000F  
                                 ___xxtofl@val 0006                                     __accesstop 0080  
                      __end_of__initialization 2FA8                            _setMotorSpeeds$2225 0080  
                          _setMotorSpeeds$2226 0084                                  ___rparam_used 000001  
                               _setMotorSpeeds 2E9A                  doOperation@tiresOnPoleAfterOp 00B6  
                                   ___fltol@f1 004E                           __end_of_happynewyear FB9D  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 3968  
                                 __pidataBANK1 3960                        opDelay@maxOperationTime 0008  
                                __end_of_fputc 3198                                  __end_of_fputs 3672  
                                __end_of_putch 393A                                        ??_fputc 000E  
                                      ??_fputs 0017                                        ??_putch 0009  
                                   __pbssBANK0 00EB                                     __pbssBANK1 0100  
                       __end_of_setMotorSpeeds 2F30       __end_of_sendArduinoAbortOperationMessage 38BE  
    __size_of_sendArduinoAbortOperationMessage 0022             ??_sendArduinoAbortOperationMessage 0009  
            ?_sendArduinoAbortOperationMessage 0001               _sendArduinoAbortOperationMessage 389C  
                            ?_interruptHandler 0001                             _errorCorrectedMove 1D66  
                           ??_interruptHandler 0006                          _encoderBInterruptLast 0107  
                                      ?___flge 0006                                        ?___wmul 0006  
           tirePositioning@distanceRecordedTop 0096                            ?_errorCorrectedMove 0088  
                           __size_of_send_byte 0012                                   ??_TIMER_INIT 0006  
                                      ?_printf 0080                                        ?_strlen 0006  
                                      _T2CKPS0 007E50                                        _T2CKPS1 007E51  
                  tirePositioning@topBreakbeam 009A                         ?_requestIsTireDropDone 0001  
                           __size_of_robotInit 0040                                      ?___xxtofl 0006  
                           __size_of_vfpfcnvrt 0484                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                         ??_errorCorrectedMove 0096                           __size_of_send_nibble 0016  
                              ?_setMotorSpeeds 006C                                  opDelay@millis 0006  
                           __end_of_TIMER_INIT 38DC                                        __Hparam 0000  
                                   _keyPressed 00F5                                        __Lparam 0000  
              tirePositioning@maxOperationTime 0088                                __size_of___flge 00D0  
                                      ___aodiv 2646                                        ___fladd 14FE  
                                      ___aomod 2B52                                        ___fldiv 1ADE  
                                      ___awdiv 2FB6                                        ___awmod 30BC  
                                      ___flmul 11AC                                        ___flsub 3464  
                                      ___fltol 2D46                                        ___lldiv 303A  
                              __size_of___wmul 0026                                        ___llmod 3202  
                                    ?_vfprintf 006D                                        __pcinit 2F30  
                                      __ramtop 1000                                        _lcdInst 393A  
                                      __ptext0 09DE                                        __ptext1 35BC  
                                      __ptext2 3198                                        __ptext3 32CC  
                                      __ptext4 303A                                        __ptext5 38DC  
                                      __ptext6 33CE                                        __ptext7 0012  
                                      __ptext8 180A                                        __ptext9 3268  
                              __size_of_printf 0028                                      _T0CONbits 000FD5  
                                      _opDelay 3268                                __size_of_strlen 0044  
                                      _initLCD 3198                                 _motorADistance 00F3  
                                 __size_of_abs 0032                                   __size_of_pad 009A  
                                      _isalpha 3672                                        _isdigit 3738  
                                   ??___xxtofl 000A                               ___awmod@dividend 0006  
                               _motorBDistance 00F1                                        _islower 36D8  
                                      _isspace 35FC                                        _isupper 3708  
                     __size_of_I2C_Master_Init 005C                       __size_of_I2C_Master_Read 0024  
                     __size_of_I2C_Master_Wait 0012                       __size_of_I2C_Master_Stop 0008  
                                      atoi@neg 0013                                        _pulse_e 3794  
                                ??_doOperation 00A0                                 __pintcode_body 34AA  
                                      _toupper 341A                    _topBreakBeamTriggeredChange 0109  
                         end_of_initialization 2FA8                          __end_of_LCD_SIZE_HORZ FBA0  
                            __end_of_send_byte 392E                          __end_of_LCD_SIZE_VERT FB9F  
                                 ?_EncoderInit 0001                          doOperation@isDoneDrop 00CF  
                                      fputc@fp 000C                                  __Lmediumconst FB84  
                                      int_func 34AA                                        fputs@fp 0015  
                      __size_of_init_motor_PWM 0028                              __end_of_robotInit 35FC  
                    __size_of_I2C_Master_Start 0008                      __size_of_I2C_Master_Write 000A  
                              ___lldiv@divisor 000A                                ___lldiv@counter 0012  
                 __size_of_updateMotorAEncoder 0044                              __end_of_vfpfcnvrt 09DE  
           tirePositioning@startDistanceBottom 008E                   __size_of_updateMotorBEncoder 0044  
                         doDisplayLog@keyValue 0096                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                              _tirePositioning 180A                                     ??_vfprintf 0073  
                         doDisplayLog@keypress 0094                                        strlen@a 0008  
                                      strlen@s 0006                                      _PORTBbits 000F81  
                                    _PORTCbits 000F82                                      _PORTEbits 000F84  
         updateMotorBEncoder@interruptPinState 0002                                    ___fladd@grs 003C  
                                ___xxtofl@sign 000E                                      _TRISAbits 000F92  
                  doOperation@bottomLaserState 00E7                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISEbits 000F96  
           doOperation@millisecondsMeasuredOld 00CB                                    ___fldiv@grs 0040  
                                  ___fldiv@rem 0039                                   _happynewyear FB96  
                 tirePositioning@startDistance 0090                                    ___flmul@grs 0022  
                doOperation@totalTiresSupplied 00BF                                  send_byte@data 0008  
                          __end_of_doOperation 055A                         __size_of_replaceOldLog 004C  
                               __end_of___flge 2D46                                    vfpfcnvrt@ap 0050  
                                  vfpfcnvrt@cp 0066                                    vfpfcnvrt@fp 004C  
                                  vfpfcnvrt@ll 0056                                 __end_of___wmul 3834  
                                __pidataCOMRAM 3967                          doOperation@poleNumber 00BD  
                               __end_of_printf 380E                                 __end_of_strlen 3534  
                          start_initialization 2F30                    __size_of_set_pwm_duty_cycle 0202  
                    setMotorSpeeds@motorASpeed 006C                      setMotorSpeeds@motorBSpeed 0070  
                                  __end_of_abs 36D8                                    __end_of_pad 2E9A  
                      errorCorrectedMove@error 009A                              ??_I2C_Master_Init 0017  
                            ??_I2C_Master_Read 0007                              ??_I2C_Master_Wait 0006  
                            ??_I2C_Master_Stop 0007                                ___llmod@divisor 000A  
                              ___llmod@counter 000E                        __end_of_tirePositioning 1ADE  
                                  vfprintf@fmt 006F                                       ??___flge 000E  
                                     ??___wmul 000A                          main@currentRobotState 0138  
                     I2C_Master_Init@clockFreq 0013                                    __pdataBANK0 00F6  
                                  __pdataBANK1 013A                        ??_requestIsTireDropDone 0009  
                             __CFG_LPT1OSC$OFF 000000                 doOperation@tiresDeployedOnPole 00DA  
              tirePositioning@startDistanceTop 008C                                doOperation@send 00B8  
                                     ??_printf 0075                      __size_of_interruptHandler 34E8  
                                     ??_strlen 0008                                      ___fladd@a 0031  
                                    ___fladd@b 002D                                      ___fldiv@a 0031  
                                    ___fldiv@b 002D                                    __pbssBIGRAM 0141  
                                    ___flmul@a 0018                                      ___flmul@b 0014  
                                  __pbssCOMRAM 0075                                      ___flsub@a 004A  
                                    ___flsub@b 0046                                  __pcstackBANK0 0080  
                                __pcstackBANK1 012A                               ___aodiv@dividend 0006  
                                _replaceOldLog 33CE                               ??_setMotorSpeeds 0072  
                            __size_of___xxtofl 0140                                    _doOperation 0012  
                       setMotorSpeeds@Aforward 006E                         setMotorSpeeds@Bforward 006F  
                               _init_motor_PWM 37BE                                      _atoi$1830 0019  
                                    _atoi$1831 0017                                      _atoi$1829 0015  
                         __size_of_EncoderInit 0018                               _I2C_Master_Start 3958  
                             _I2C_Master_Write 3946                       doOperation@topLaserState 00E8  
                                    _dtoa$1333 0037                              __CFG_CCP2MX$PORTC 000000  
                                    __pintcode 0008                                  __pmediumconst FB84  
                                     ?___aodiv 0006                                       ?___fladd 002D  
                                     ?___aomod 0006                                       ?___fldiv 002D  
                                     ?___awdiv 0006                               ___aodiv@quotient 0018  
                                     ?___awmod 0006                                       ?___flmul 0014  
                                     ?___flsub 0046                                       ?___fltol 004E  
                                     ?___lldiv 0006          errorCorrectedMove@motorAStartDistance 008E  
                                     ?___llmod 0006                                       ?_lcdInst 0001  
                            __size_of_vfprintf 0056                                       ?_opDelay 0006  
                                     ?_initLCD 0001                         doOperation@badCountBot 00BB  
                                     ?_isalpha 0006                                       ?_isdigit 0006  
                                     ?_islower 0006                                       ?_isspace 0006  
                               ?_replaceOldLog 0001                                       ?_isupper 0006  
                          _updateMotorAEncoder 3578                                   doOperation@i 00E0  
                          _updateMotorBEncoder 3534                                  ??_send_nibble 0007  
                                     ?_pulse_e 0001                                 __size_of_fputc 006C  
                               __size_of_fputs 0038                                       ?_toupper 000C  
                       __end_of_init_motor_PWM 37E6                   doOperation@topLaserStatePrev 00DE  
                               __size_of_putch 000C                    __size_of_errorCorrectedMove 0264  
                               ___wmul@product 000A                                       _LATAbits 000F89  
                                ?_doDisplayLog 008E                                       _LATDbits 000F8C  
                             ?_tirePositioning 0088                                      _send_byte 391C  
                  errorCorrectedMove@goalSpeed 0088                                 _LCD_LINE1_ADDR FB9D  
                               _LCD_LINE2_ADDR FBA7                                 _LCD_LINE3_ADDR FBA6  
                               _LCD_LINE4_ADDR FBA5                     doOperation@timeInOperation 00E2  
                      init_motor_PWM@FREQUENCY FBA1                                       i2u622_40 353E  
                                     i2u623_40 3550                                       i2u622_48 3540  
                         ?_updateMotorAEncoder 0001                                       i2u623_48 3552  
                         doOperation@goalSpeed 00C7                                       i2u625_40 3582  
                                     i2u626_40 3594                                       i2u625_48 3584  
                                     i2u626_48 3596                           ?_updateMotorBEncoder 0001  
                             __CFG_WDTPS$32768 000000                                      _robotInit 35BC  
                                    _vfpfcnvrt 055A                                      _xtoa$1354 0038  
                                    _xtoa$1355 003A                              ___wmul@multiplier 0006  
                 ??_sendArduinoTireDropRequest 0009                                   _isspace$1856 000C  
                                   vfpfcnvrt@c 006C                                      copy_data0 2F44  
                      _set_pwm_duty_cycle$2224 0068                                ?_init_motor_PWM 0001  
                               ??_doDisplayLog 0090                           doOperation@timeStart 00C3  
                       __end_of_LCD_LINE1_ADDR FB9E                         __end_of_LCD_LINE2_ADDR FBA8  
                       __end_of_LCD_LINE3_ADDR FBA7                         __end_of_LCD_LINE4_ADDR FBA6  
                          __end_of_send_nibble 390A                                     _EECON1bits 000FA6  
                                   ?_send_byte 0001                                       __Hrparam 0000  
                        ??_updateMotorAEncoder 0001                          ??_updateMotorBEncoder 0001  
                      doDisplayLog@currentPole 0097                doDisplayLog@currentDisplayState 0095  
                                   vfprintf@ap 0071                                       __Lrparam 0000  
                                   vfprintf@fp 006D                             __CFG_BOREN$SBORDIS 000000  
          __size_of_sendArduinoTireDropRequest 0022                                     ?_robotInit 0001  
         updateMotorAEncoder@interruptPinState 0002                               __size_of___aodiv 0148  
                             __size_of___fladd 030C          errorCorrectedMove@motorBStartDistance 0090  
                             __size_of___aomod 0124                               __size_of___fldiv 0288  
                             __size_of___awdiv 0084                               __size_of___awmod 0070  
                             __size_of___flmul 0352                               __size_of___flsub 0046  
                             __size_of___fltol 00BA                               __size_of___lldiv 0082  
                             __size_of___llmod 0066                    errorCorrectedMove@turnRatio 008A  
                                   ?_vfpfcnvrt 004C                                ___aodiv@divisor 000E  
                             _interruptHandler 0008                                ___aodiv@counter 0016  
                             __size_of_lcdInst 000C                                ??_replaceOldLog 0006  
                             __size_of_opDelay 0064                                _I2C_Master_Init 32CC  
                              _I2C_Master_Read 3834                               __size_of_initLCD 006A  
                                     ___xxtofl 28D2                                _I2C_Master_Wait 390A  
                              _I2C_Master_Stop 3950                               __size_of_isalpha 0034  
                             __size_of_isdigit 0030                               __size_of_islower 0030  
                             __size_of_isspace 003E                            doOperation@badCount 00B9  
                                     __ptext10 2FB6                                       __ptext11 3858  
                                     __ptext20 37BE                                       __ptext12 387A  
                                     __ptext21 1D66                                       __ptext13 389C  
                                     __ptext30 14FE                                       __ptext22 2E9A  
                                     __ptext14 3768                                       __ptext31 30BC  
                                     __ptext23 2444                                       __ptext15 3946  
                                     __ptext40 3708                                       __ptext32 38BE  
                                     __ptext24 28D2                                       __ptext16 3950  
                                     __ptext41 3672                                       __ptext33 0DFE  
                                     __ptext25 2D46                                       __ptext17 3958  
                                     __ptext50 363A                                       __ptext42 278E  
                                     __ptext34 37E6                                       __ptext26 11AC  
                                     __ptext18 3834                                       __ptext51 312C  
                                     __ptext43 1FCA                                       __ptext35 3328  
                                     __ptext27 2C76                                       __ptext19 390A  
                                     __ptext60 3794                                       __ptext52 392E  
                                     __ptext44 36A6                                       __ptext36 055A  
                                     __ptext28 1ADE                                       __ptext61 3202  
                                     __ptext53 2A12                                       __ptext45 2B52  
                                     __ptext37 2212                                       __ptext29 3464  
                                     __ptext54 35FC                                       __ptext46 2646  
                                     __ptext38 341A                                       __ptext63 3534  
                                     __ptext55 3738                                       __ptext47 337E  
                                     __ptext39 36D8                                       __ptext64 3578  
                                     __ptext56 380E                                       __ptext48 2E00  
                                     __ptext57 393A                                       __ptext49 34F0  
                                     __ptext58 391C                                       __ptext59 38F4  
                             __size_of_isupper 0030                               __size_of_pulse_e 002A  
                              _motorADirection 00F6                               __size_of_toupper 004A  
                                __size_of_atoi 0140                                  __size_of_ctoa 0050  
                                __size_of_main 0420                                _motorBDirection 0079  
                                __size_of_dtoa 0248                                  __size_of_stoa 0144  
                                __size_of_xtoa 0232                                      stoa@F1144 013A  
              doOperation@distanceFromLastPole 00C1                 set_pwm_duty_cycle@max_duty_val 0062  
                                     int$flags 007A                             doOperation@PIDData 00A4  
                                     _vfprintf 3328                                      printf@fmt 0080  
               doOperation@motorAStartDistance 00D0                                       main@tick 0131  
                                     main@time 012A                 __size_of_requestIsTireDropDone 002C  
                __end_of_requestIsTireDropDone 3794                    I2C_Master_Write@byteToWrite 0007  
 __end_of_sendArduinoTireOperationStartMessage 387A  __size_of_sendArduinoTireOperationStartMessage 0022  
       ??_sendArduinoTireOperationStartMessage 0009          ?_sendArduinoTireOperationStartMessage 0001  
         _sendArduinoTireOperationStartMessage 3858                updateMotorAEncoder@directionPin 0004  
                             ___aomod@dividend 0006                     __end_of_set_pwm_duty_cycle 2646  
                                    putch@data 0009                       __end_of_I2C_Master_Start 3960  
                               _vfpfcnvrt$1369 006A                       __end_of_I2C_Master_Write 3950  
                                   _INTCONbits 000FF2          tirePositioning@distanceRecordedBottom 0098  
                                     isalpha@c 0006                                       isdigit@c 0006  
                                  _send_nibble 38F4                                   ?_doOperation 0001  
               _bottomBreakBeamTriggeredChange 0108                                       intlevel2 0000  
                                _LCD_SIZE_HORZ FB9F                                       islower@c 0006  
         errorCorrectedMove@correctionConstant 0092                                  _LCD_SIZE_VERT FB9E  
                                     isspace@c 0006                               ___lldiv@dividend 0006  
                                  ??_send_byte 0008                                       isupper@c 0006  
              doOperation@bottomLaserStatePrev 00DF                                     _OSCCONbits 000FD3  
                           doOperation@counted 00D4                                    ??_robotInit 001B  
                                     printf@ap 008C                        __end_of_I2C_Master_Init 3328  
                              ___aomod@divisor 000E                        __end_of_I2C_Master_Read 3858  
                      __end_of_I2C_Master_Wait 391C                        __end_of_I2C_Master_Stop 3958  
                                  ??_vfpfcnvrt 0052                                    lcdInst@data 0009  
                                     stoa@nuls 0018                                ___aomod@counter 0016  
                        doDisplayLog@logNumber 008E             __end_of_sendArduinoTireDropRequest 389C  
                   _sendArduinoTireDropRequest 387A                                     _TIMER_INIT 38BE  
              __end_ofinit_motor_PWM@FREQUENCY FBA5                           __end_of_doDisplayLog 11AC  
               tirePositioning@bottomBreakbeam 009C                               ___lldiv@quotient 000E  
                                     toupper@c 000C                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0039  
                                 ___aodiv@sign 0017                                  ??_EncoderInit 0006  
                                 ___fladd@aexp 003A                                   ___fladd@bexp 003B  
                                 ___aomod@sign 0017  
