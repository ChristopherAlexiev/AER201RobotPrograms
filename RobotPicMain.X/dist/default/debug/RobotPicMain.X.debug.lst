

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 23:20:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.05
    75                           ; Generated 20/12/2018 GMT
    76                           ; 
    77                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataCOMRAM
   110  0028AC                     __pidataCOMRAM:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for _motorBDirection
   114  0028AC  01                 	db	1
   115                           
   116                           	psect	idataBANK0
   117  002892                     __pidataBANK0:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for stoa@F1139
   121  002892  28                 	db	40
   122  002893  6E                 	db	110
   123  002894  75                 	db	117
   124  002895  6C                 	db	108
   125  002896  6C                 	db	108
   126  002897  29                 	db	41
   127  002898  00                 	db	0
   128                           
   129                           ;initializer for _motorADirection
   130  002899  01                 	db	1
   131                           
   132                           	psect	mediumconst
   133  00FBD8                     __pmediumconst:
   134                           	opt callstack 0
   135  00FBD8  00                 	db	0
   136  00FBD9                     _keys:
   137                           	opt callstack 0
   138  00FBD9  31                 	db	49
   139  00FBDA  32                 	db	50
   140  00FBDB  33                 	db	51
   141  00FBDC  41                 	db	65
   142  00FBDD  34                 	db	52
   143  00FBDE  35                 	db	53
   144  00FBDF  36                 	db	54
   145  00FBE0  42                 	db	66
   146  00FBE1  37                 	db	55
   147  00FBE2  38                 	db	56
   148  00FBE3  39                 	db	57
   149  00FBE4  43                 	db	67
   150  00FBE5  2A                 	db	42
   151  00FBE6  30                 	db	48
   152  00FBE7  23                 	db	35
   153  00FBE8  44                 	db	68
   154  00FBE9  00                 	db	0
   155  00FBEA                     __end_of_keys:
   156                           	opt callstack 0
   157  00FBEA                     _happynewyear:
   158                           	opt callstack 0
   159  00FBEA  00                 	db	0
   160  00FBEB  37                 	db	55
   161  00FBEC  0E                 	db	14
   162  00FBED  02                 	db	2
   163  00FBEE  13                 	db	19
   164  00FBEF  02                 	db	2
   165  00FBF0  13                 	db	19
   166  00FBF1                     __end_of_happynewyear:
   167                           	opt callstack 0
   168  00FBF1                     _LCD_LINE1_ADDR:
   169                           	opt callstack 0
   170  00FBF1  00                 	db	0
   171  00FBF2                     __end_of_LCD_LINE1_ADDR:
   172                           	opt callstack 0
   173  00FBF2                     _LCD_SIZE_VERT:
   174                           	opt callstack 0
   175  00FBF2  04                 	db	4
   176  00FBF3                     __end_of_LCD_SIZE_VERT:
   177                           	opt callstack 0
   178  00FBF3                     _LCD_SIZE_HORZ:
   179                           	opt callstack 0
   180  00FBF3  10                 	db	16
   181  00FBF4                     __end_of_LCD_SIZE_HORZ:
   182                           	opt callstack 0
   183  00FBF4  10                 	db	16
   184  00FBF5                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   185                           	opt callstack 0
   186  00FBF5  03E8               	dw	1000
   187  00FBF7  0000               	dw	0
   188  00FBF9                     __end_ofinit_motor_PWM@FREQUENCY:
   189                           	opt callstack 0
   190  00FBF9  50                 	db	80
   191  00FBFA                     __end_of_LCD_LINE4_ADDR:
   192                           	opt callstack 0
   193  00FBFA  10                 	db	16
   194  00FBFB                     __end_of_LCD_LINE3_ADDR:
   195                           	opt callstack 0
   196  00FBFB  40                 	db	64
   197  00FBFC                     __end_of_LCD_LINE2_ADDR:
   198                           	opt callstack 0
   199  0000                     _LATDbits	set	3980
   200  0000                     _LATB	set	3978
   201  0000                     _TRISD	set	3989
   202  0000                     _LATD	set	3980
   203  0000                     _TRISAbits	set	3986
   204  0000                     _LATAbits	set	3977
   205  0000                     _TRISCbits	set	3988
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISEbits	set	3990
   208  0000                     _PORTEbits	set	3972
   209  0000                     _PORTBbits	set	3969
   210  0000                     _PORTB	set	3969
   211  0000                     _SSPBUF	set	4041
   212  0000                     _SSPCON2bits	set	4037
   213  0000                     _SSPCON1	set	4038
   214  0000                     _SSPADD	set	4040
   215  0000                     _SSPCON1bits	set	4038
   216  0000                     _SSPCON2	set	4037
   217  0000                     _SSPSTAT	set	4039
   218  0000                     _ADCON1	set	4033
   219  0000                     _CCPR2L	set	4027
   220  0000                     _CCPR1L	set	4030
   221  0000                     _PR2	set	4043
   222  0000                     _OSCCONbits	set	4051
   223  0000                     _CCP2Y	set	32212
   224  0000                     _CCP2X	set	32213
   225  0000                     _CCP1Y	set	32236
   226  0000                     _CCP1X	set	32237
   227  0000                     _TMR2ON	set	32338
   228  0000                     _T2CKPS1	set	32337
   229  0000                     _T2CKPS0	set	32336
   230  0000                     _CCP2M0	set	32208
   231  0000                     _CCP2M1	set	32209
   232  0000                     _CCP2M2	set	32210
   233  0000                     _CCP2M3	set	32211
   234  0000                     _CCP1M0	set	32232
   235  0000                     _CCP1M1	set	32233
   236  0000                     _CCP1M2	set	32234
   237  0000                     _CCP1M3	set	32235
   238  0000                     _P1M0	set	32238
   239  0000                     _P1M1	set	32239
   240  0000                     _TMR0L	set	4054
   241  0000                     _TMR0H	set	4055
   242  0000                     _T0CONbits	set	4053
   243  0000                     _TMR0ON	set	32431
   244  0000                     _PSA	set	32427
   245  0000                     _T0PS0	set	32424
   246  0000                     _T0PS1	set	32425
   247  0000                     _T0PS2	set	32426
   248  0000                     _T08BIT	set	32430
   249  0000                     _INTCONbits	set	4082
   250  0000                     _INT2IF	set	32641
   251  0000                     _TMR0IF	set	32658
   252  0000                     _INT1IF	set	32640
   253  0000                     _INT1IE	set	32643
   254  0000                     _TMR0IE	set	32661
   255  0000                     _INT2IE	set	32644
   256  00FBFC                     STR_14:
   257                           
   258                           ; BSR set to: 0
   259  00FBFC  54                 	db	84	;'T'
   260  00FBFD  49                 	db	73	;'I'
   261  00FBFE  52                 	db	82	;'R'
   262  00FBFF  45                 	db	69	;'E'
   263  00FC00  2E                 	db	46
   264  00FC01  20                 	db	32
   265  00FC02  4F                 	db	79	;'O'
   266  00FC03  4E                 	db	78	;'N'
   267  00FC04  20                 	db	32
   268  00FC05  50                 	db	80	;'P'
   269  00FC06  4F                 	db	79	;'O'
   270  00FC07  4C                 	db	76	;'L'
   271  00FC08  45                 	db	69	;'E'
   272  00FC09  3A                 	db	58	;':'
   273  00FC0A  20                 	db	32
   274  00FC0B  58                 	db	88	;'X'
   275  00FC0C  00                 	db	0
   276  00FC0D                     STR_46:
   277                           
   278                           ; BSR set to: 0
   279  00FC0D  28                 	db	40
   280  00FC0E  31                 	db	49	;'1'
   281  00FC0F  29                 	db	41
   282  00FC10  20                 	db	32
   283  00FC11  28                 	db	40
   284  00FC12  32                 	db	50	;'2'
   285  00FC13  29                 	db	41
   286  00FC14  20                 	db	32
   287  00FC15  28                 	db	40
   288  00FC16  33                 	db	51	;'3'
   289  00FC17  29                 	db	41
   290  00FC18  20                 	db	32
   291  00FC19  28                 	db	40
   292  00FC1A  34                 	db	52	;'4'
   293  00FC1B  29                 	db	41
   294  00FC1C  00                 	db	0
   295  00FC1D                     STR_4:
   296                           
   297                           ; BSR set to: 0
   298  00FC1D  58                 	db	88	;'X'
   299  00FC1E  20                 	db	32
   300  00FC1F  54                 	db	84	;'T'
   301  00FC20  49                 	db	73	;'I'
   302  00FC21  52                 	db	82	;'R'
   303  00FC22  2E                 	db	46
   304  00FC23  20                 	db	32
   305  00FC24  53                 	db	83	;'S'
   306  00FC25  55                 	db	85	;'U'
   307  00FC26  50                 	db	80	;'P'
   308  00FC27  50                 	db	80	;'P'
   309  00FC28  4C                 	db	76	;'L'
   310  00FC29  49                 	db	73	;'I'
   311  00FC2A  45                 	db	69	;'E'
   312  00FC2B  44                 	db	68	;'D'
   313  00FC2C  00                 	db	0
   314  00FC2D                     STR_8:
   315                           
   316                           ; BSR set to: 0
   317  00FC2D  28                 	db	40
   318  00FC2E  32                 	db	50	;'2'
   319  00FC2F  29                 	db	41
   320  00FC30  20                 	db	32
   321  00FC31  53                 	db	83	;'S'
   322  00FC32  41                 	db	65	;'A'
   323  00FC33  56                 	db	86	;'V'
   324  00FC34  45                 	db	69	;'E'
   325  00FC35  20                 	db	32
   326  00FC36  26                 	db	38
   327  00FC37  20                 	db	32
   328  00FC38  45                 	db	69	;'E'
   329  00FC39  58                 	db	88	;'X'
   330  00FC3A  49                 	db	73	;'I'
   331  00FC3B  54                 	db	84	;'T'
   332  00FC3C  00                 	db	0
   333  00FC3D                     STR_38:
   334                           
   335                           ; BSR set to: 0
   336  00FC3D  28                 	db	40
   337  00FC3E  32                 	db	50	;'2'
   338  00FC3F  29                 	db	41
   339  00FC40  20                 	db	32
   340  00FC41  51                 	db	81	;'Q'
   341  00FC42  55                 	db	85	;'U'
   342  00FC43  49                 	db	73	;'I'
   343  00FC44  54                 	db	84	;'T'
   344  00FC45  20                 	db	32
   345  00FC46  44                 	db	68	;'D'
   346  00FC47  4F                 	db	79	;'O'
   347  00FC48  20                 	db	32
   348  00FC49  4E                 	db	78	;'N'
   349  00FC4A  4F                 	db	79	;'O'
   350  00FC4B  54                 	db	84	;'T'
   351  00FC4C  00                 	db	0
   352  00FC4D                     STR_12:
   353                           
   354                           ; BSR set to: 0
   355  00FC4D  54                 	db	84	;'T'
   356  00FC4E  49                 	db	73	;'I'
   357  00FC4F  52                 	db	82	;'R'
   358  00FC50  2E                 	db	46
   359  00FC51  20                 	db	32
   360  00FC52  44                 	db	68	;'D'
   361  00FC53  45                 	db	69	;'E'
   362  00FC54  50                 	db	80	;'P'
   363  00FC55  4C                 	db	76	;'L'
   364  00FC56  4F                 	db	79	;'O'
   365  00FC57  59                 	db	89	;'Y'
   366  00FC58  3A                 	db	58	;':'
   367  00FC59  20                 	db	32
   368  00FC5A  58                 	db	88	;'X'
   369  00FC5B  00                 	db	0
   370  00FC5C                     STR_23:
   371                           
   372                           ; BSR set to: 0
   373  00FC5C  25                 	db	37
   374  00FC5D  30                 	db	48	;'0'
   375  00FC5E  32                 	db	50	;'2'
   376  00FC5F  78                 	db	120	;'x'
   377  00FC60  2F                 	db	47
   378  00FC61  25                 	db	37
   379  00FC62  30                 	db	48	;'0'
   380  00FC63  32                 	db	50	;'2'
   381  00FC64  78                 	db	120	;'x'
   382  00FC65  2F                 	db	47
   383  00FC66  25                 	db	37
   384  00FC67  30                 	db	48	;'0'
   385  00FC68  32                 	db	50	;'2'
   386  00FC69  78                 	db	120	;'x'
   387  00FC6A  00                 	db	0
   388  00FC6B                     STR_24:
   389                           
   390                           ; BSR set to: 0
   391  00FC6B  25                 	db	37
   392  00FC6C  30                 	db	48	;'0'
   393  00FC6D  32                 	db	50	;'2'
   394  00FC6E  78                 	db	120	;'x'
   395  00FC6F  3A                 	db	58	;':'
   396  00FC70  25                 	db	37
   397  00FC71  30                 	db	48	;'0'
   398  00FC72  32                 	db	50	;'2'
   399  00FC73  78                 	db	120	;'x'
   400  00FC74  3A                 	db	58	;':'
   401  00FC75  25                 	db	37
   402  00FC76  30                 	db	48	;'0'
   403  00FC77  32                 	db	50	;'2'
   404  00FC78  78                 	db	120	;'x'
   405  00FC79  00                 	db	0
   406  00FC7A                     STR_44:
   407                           
   408                           ; BSR set to: 0
   409  00FC7A  28                 	db	40
   410  00FC7B  31                 	db	49	;'1'
   411  00FC7C  20                 	db	32
   412  00FC7D  49                 	db	73	;'I'
   413  00FC7E  53                 	db	83	;'S'
   414  00FC7F  20                 	db	32
   415  00FC80  4F                 	db	79	;'O'
   416  00FC81  4C                 	db	76	;'L'
   417  00FC82  44                 	db	68	;'D'
   418  00FC83  45                 	db	69	;'E'
   419  00FC84  53                 	db	83	;'S'
   420  00FC85  54                 	db	84	;'T'
   421  00FC86  29                 	db	41
   422  00FC87  00                 	db	0
   423  00FC88                     STR_6:
   424                           
   425                           ; BSR set to: 0
   426  00FC88  28                 	db	40
   427  00FC89  31                 	db	49	;'1'
   428  00FC8A  29                 	db	41
   429  00FC8B  20                 	db	32
   430  00FC8C  50                 	db	80	;'P'
   431  00FC8D  4F                 	db	79	;'O'
   432  00FC8E  4C                 	db	76	;'L'
   433  00FC8F  45                 	db	69	;'E'
   434  00FC90  20                 	db	32
   435  00FC91  49                 	db	73	;'I'
   436  00FC92  4E                 	db	78	;'N'
   437  00FC93  46                 	db	70	;'F'
   438  00FC94  4F                 	db	79	;'O'
   439  00FC95  00                 	db	0
   440  00FC96                     STR_28:
   441                           
   442                           ; BSR set to: 0
   443  00FC96  28                 	db	40
   444  00FC97  32                 	db	50	;'2'
   445  00FC98  29                 	db	41
   446  00FC99  20                 	db	32
   447  00FC9A  56                 	db	86	;'V'
   448  00FC9B  49                 	db	73	;'I'
   449  00FC9C  45                 	db	69	;'E'
   450  00FC9D  57                 	db	87	;'W'
   451  00FC9E  20                 	db	32
   452  00FC9F  4C                 	db	76	;'L'
   453  00FCA0  4F                 	db	79	;'O'
   454  00FCA1  47                 	db	71	;'G'
   455  00FCA2  53                 	db	83	;'S'
   456  00FCA3  00                 	db	0
   457  00FCA4                     STR_16:
   458                           
   459                           ; BSR set to: 0
   460  00FCA4  31                 	db	49	;'1'
   461  00FCA5  3C                 	db	60	;'<'
   462  00FCA6  2D                 	db	45
   463  00FCA7  20                 	db	32
   464  00FCA8  32                 	db	50	;'2'
   465  00FCA9  2D                 	db	45
   466  00FCAA  3E                 	db	62	;'>'
   467  00FCAB  20                 	db	32
   468  00FCAC  33                 	db	51	;'3'
   469  00FCAD  4D                 	db	77	;'M'
   470  00FCAE  45                 	db	69	;'E'
   471  00FCAF  4E                 	db	78	;'N'
   472  00FCB0  55                 	db	85	;'U'
   473  00FCB1  00                 	db	0
   474  00FCB2                     STR_34:
   475                           
   476                           ; BSR set to: 0
   477  00FCB2  4F                 	db	79	;'O'
   478  00FCB3  50                 	db	80	;'P'
   479  00FCB4  2E                 	db	46
   480  00FCB5  20                 	db	32
   481  00FCB6  43                 	db	67	;'C'
   482  00FCB7  4F                 	db	79	;'O'
   483  00FCB8  4D                 	db	77	;'M'
   484  00FCB9  50                 	db	80	;'P'
   485  00FCBA  4C                 	db	76	;'L'
   486  00FCBB  45                 	db	69	;'E'
   487  00FCBC  54                 	db	84	;'T'
   488  00FCBD  45                 	db	69	;'E'
   489  00FCBE  00                 	db	0
   490  00FCBF                     STR_36:
   491                           
   492                           ; BSR set to: 0
   493  00FCBF  28                 	db	40
   494  00FCC0  31                 	db	49	;'1'
   495  00FCC1  29                 	db	41
   496  00FCC2  20                 	db	32
   497  00FCC3  56                 	db	86	;'V'
   498  00FCC4  49                 	db	73	;'I'
   499  00FCC5  45                 	db	69	;'E'
   500  00FCC6  57                 	db	87	;'W'
   501  00FCC7  20                 	db	32
   502  00FCC8  4C                 	db	76	;'L'
   503  00FCC9  4F                 	db	79	;'O'
   504  00FCCA  47                 	db	71	;'G'
   505  00FCCB  00                 	db	0
   506  00FCCC                     STR_30:
   507                           
   508                           ; BSR set to: 0
   509  00FCCC  4F                 	db	79	;'O'
   510  00FCCD  50                 	db	80	;'P'
   511  00FCCE  45                 	db	69	;'E'
   512  00FCCF  52                 	db	82	;'R'
   513  00FCD0  41                 	db	65	;'A'
   514  00FCD1  54                 	db	84	;'T'
   515  00FCD2  49                 	db	73	;'I'
   516  00FCD3  4F                 	db	79	;'O'
   517  00FCD4  4E                 	db	78	;'N'
   518  00FCD5  20                 	db	32
   519  00FCD6  49                 	db	73	;'I'
   520  00FCD7  4E                 	db	78	;'N'
   521  00FCD8  00                 	db	0
   522  00FCD9                     STR_2:
   523                           
   524                           ; BSR set to: 0
   525  00FCD9  4F                 	db	79	;'O'
   526  00FCDA  50                 	db	80	;'P'
   527  00FCDB  2E                 	db	46
   528  00FCDC  20                 	db	32
   529  00FCDD  54                 	db	84	;'T'
   530  00FCDE  49                 	db	73	;'I'
   531  00FCDF  4D                 	db	77	;'M'
   532  00FCE0  45                 	db	69	;'E'
   533  00FCE1  20                 	db	32
   534  00FCE2  58                 	db	88	;'X'
   535  00FCE3  73                 	db	115	;'s'
   536  00FCE4  00                 	db	0
   537  00FCE5                     STR_42:
   538                           
   539                           ; BSR set to: 0
   540  00FCE5  53                 	db	83	;'S'
   541  00FCE6  45                 	db	69	;'E'
   542  00FCE7  4C                 	db	76	;'L'
   543  00FCE8  45                 	db	69	;'E'
   544  00FCE9  43                 	db	67	;'C'
   545  00FCEA  54                 	db	84	;'T'
   546  00FCEB  20                 	db	32
   547  00FCEC  4C                 	db	76	;'L'
   548  00FCED  4F                 	db	79	;'O'
   549  00FCEE  47                 	db	71	;'G'
   550  00FCEF  00                 	db	0
   551  00FCF0                     STR_20:
   552                           
   553                           ; BSR set to: 0
   554  00FCF0  54                 	db	84	;'T'
   555  00FCF1  49                 	db	73	;'I'
   556  00FCF2  52                 	db	82	;'R'
   557  00FCF3  45                 	db	69	;'E'
   558  00FCF4  20                 	db	32
   559  00FCF5  44                 	db	68	;'D'
   560  00FCF6  52                 	db	82	;'R'
   561  00FCF7  4F                 	db	79	;'O'
   562  00FCF8  50                 	db	80	;'P'
   563  00FCF9  00                 	db	0
   564  00FCFA                     STR_26:
   565                           
   566                           ; BSR set to: 0
   567  00FCFA  28                 	db	40
   568  00FCFB  31                 	db	49	;'1'
   569  00FCFC  29                 	db	41
   570  00FCFD  20                 	db	32
   571  00FCFE  53                 	db	83	;'S'
   572  00FCFF  54                 	db	84	;'T'
   573  00FD00  41                 	db	65	;'A'
   574  00FD01  52                 	db	82	;'R'
   575  00FD02  54                 	db	84	;'T'
   576  00FD03  00                 	db	0
   577  00FD04                     STR_22:
   578                           
   579                           ; BSR set to: 0
   580  00FD04  57                 	db	87	;'W'
   581  00FD05  45                 	db	69	;'E'
   582  00FD06  4C                 	db	76	;'L'
   583  00FD07  43                 	db	67	;'C'
   584  00FD08  4F                 	db	79	;'O'
   585  00FD09  4D                 	db	77	;'M'
   586  00FD0A  45                 	db	69	;'E'
   587  00FD0B  20                 	db	32
   588  00FD0C  00                 	db	0
   589  00FD0D                     STR_40:
   590                           
   591                           ; BSR set to: 0
   592  00FD0D  53                 	db	83	;'S'
   593  00FD0E  41                 	db	65	;'A'
   594  00FD0F  56                 	db	86	;'V'
   595  00FD10  45                 	db	69	;'E'
   596  00FD11  20                 	db	32
   597  00FD12  4C                 	db	76	;'L'
   598  00FD13  4F                 	db	79	;'O'
   599  00FD14  47                 	db	71	;'G'
   600  00FD15  00                 	db	0
   601  00FD16                     STR_32:
   602                           
   603                           ; BSR set to: 0
   604  00FD16  50                 	db	80	;'P'
   605  00FD17  52                 	db	82	;'R'
   606  00FD18  4F                 	db	79	;'O'
   607  00FD19  47                 	db	71	;'G'
   608  00FD1A  52                 	db	82	;'R'
   609  00FD1B  45                 	db	69	;'E'
   610  00FD1C  53                 	db	83	;'S'
   611  00FD1D  53                 	db	83	;'S'
   612  00FD1E  00                 	db	0
   613  00FD1F                     STR_10:
   614                           
   615                           ; BSR set to: 0
   616  00FD1F  50                 	db	80	;'P'
   617  00FD20  4F                 	db	79	;'O'
   618  00FD21  4C                 	db	76	;'L'
   619  00FD22  45                 	db	69	;'E'
   620  00FD23  20                 	db	32
   621  00FD24  58                 	db	88	;'X'
   622  00FD25  2F                 	db	47
   623  00FD26  59                 	db	89	;'Y'
   624  00FD27  00                 	db	0
   625  00FD28                     STR_17:
   626                           
   627                           ; BSR set to: 0
   628  00FD28  25                 	db	37
   629  00FD29  64                 	db	100	;'d'
   630  00FD2A  00                 	db	0
   631  00FD2B                     STR_1:
   632                           
   633                           ; BSR set to: 0
   634  00FD2B  25                 	db	37
   635  00FD2C  73                 	db	115	;'s'
   636  00FD2D  00                 	db	0
   637  0000                     
   638                           ; #config settings
   639  00FD2E  00                 	db	0	; dummy byte at the end
   640  0000                     
   641                           	psect	cinit
   642  0023E0                     __pcinit:
   643                           	opt callstack 0
   644  0023E0                     start_initialization:
   645                           	opt callstack 0
   646  0023E0                     __initialization:
   647                           	opt callstack 0
   648                           
   649                           ; Initialize objects allocated to BANK0 (8 bytes)
   650                           ; load TBLPTR registers with __pidataBANK0
   651  0023E0  0E92               	movlw	low __pidataBANK0
   652  0023E2  6EF6               	movwf	tblptrl,c
   653  0023E4  0E28               	movlw	high __pidataBANK0
   654  0023E6  6EF7               	movwf	tblptrh,c
   655  0023E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   656  0023EA  6EF8               	movwf	tblptru,c
   657  0023EC  EE00  F0EB         	lfsr	0,__pdataBANK0
   658  0023F0  EE10 F008          	lfsr	1,8
   659  0023F4                     copy_data0:
   660  0023F4  0009               	tblrd		*+
   661  0023F6  CFF5 FFEE          	movff	tablat,postinc0
   662  0023FA  50E5               	movf	postdec1,w,c
   663  0023FC  50E1               	movf	fsr1l,w,c
   664  0023FE  E1FA               	bnz	copy_data0
   665                           
   666                           ; Initialize objects allocated to COMRAM (1 bytes)
   667                           ; load TBLPTR registers with __pidataCOMRAM
   668  002400  0EAC               	movlw	low __pidataCOMRAM
   669  002402  6EF6               	movwf	tblptrl,c
   670  002404  0E28               	movlw	high __pidataCOMRAM
   671  002406  6EF7               	movwf	tblptrh,c
   672  002408  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   673  00240A  6EF8               	movwf	tblptru,c
   674  00240C  0009               	tblrd		*+	;fetch initializer
   675  00240E  CFF5 F078          	movff	tablat,__pdataCOMRAM
   676                           
   677                           ; Clear objects allocated to BANK0 (46 bytes)
   678  002412  EE00  F0BD         	lfsr	0,__pbssBANK0
   679  002416  0E2E               	movlw	46
   680  002418                     clear_0:
   681  002418  6AEE               	clrf	postinc0,c
   682  00241A  06E8               	decf	wreg,f,c
   683  00241C  E1FD               	bnz	clear_0
   684                           
   685                           ; Clear objects allocated to COMRAM (5 bytes)
   686  00241E  6A77               	clrf	(__pbssCOMRAM+4)& (0+255),c
   687  002420  6A76               	clrf	(__pbssCOMRAM+3)& (0+255),c
   688  002422  6A75               	clrf	(__pbssCOMRAM+2)& (0+255),c
   689  002424  6A74               	clrf	(__pbssCOMRAM+1)& (0+255),c
   690  002426  6A73               	clrf	__pbssCOMRAM& (0+255),c
   691  002428                     end_of_initialization:
   692                           	opt callstack 0
   693  002428                     __end_of__initialization:
   694                           	opt callstack 0
   695  002428  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   696  00242A  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   697  00242C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   698  00242E  6EF8               	movwf	tblptru,c
   699  002430  0100               	movlb	0
   700  002432  EF13  F002         	goto	_main	;jump to C main() function
   701                           
   702                           	psect	bssCOMRAM
   703  000073                     __pbssCOMRAM:
   704                           	opt callstack 0
   705  000073                     _prec:
   706                           	opt callstack 0
   707  000073                     	ds	2
   708  000075                     _flags:
   709                           	opt callstack 0
   710  000075                     	ds	2
   711  000077                     _encoderBInterruptLast:
   712                           	opt callstack 0
   713  000077                     	ds	1
   714                           
   715                           	psect	dataCOMRAM
   716  000078                     __pdataCOMRAM:
   717                           	opt callstack 0
   718  000078                     _motorBDirection:
   719                           	opt callstack 0
   720  000078                     	ds	1
   721                           
   722                           	psect	bssBANK0
   723  0000BD                     __pbssBANK0:
   724                           	opt callstack 0
   725  0000BD                     _nout:
   726                           	opt callstack 0
   727  0000BD                     	ds	2
   728  0000BF                     _width:
   729                           	opt callstack 0
   730  0000BF                     	ds	2
   731  0000C1                     _secondsMeasured:
   732                           	opt callstack 0
   733  0000C1                     	ds	2
   734  0000C3                     _motorBDistance:
   735                           	opt callstack 0
   736  0000C3                     	ds	2
   737  0000C5                     _motorADistance:
   738                           	opt callstack 0
   739  0000C5                     	ds	2
   740  0000C7                     _encoderAInterruptLast:
   741                           	opt callstack 0
   742  0000C7                     	ds	1
   743  0000C8                     _bottomBreakBeamTriggeredChange:
   744                           	opt callstack 0
   745  0000C8                     	ds	1
   746  0000C9                     _topBreakBeamTriggeredChange:
   747                           	opt callstack 0
   748  0000C9                     	ds	1
   749  0000CA                     _keyPressed:
   750                           	opt callstack 0
   751  0000CA                     	ds	1
   752  0000CB                     _dbuf:
   753                           	opt callstack 0
   754  0000CB                     	ds	32
   755                           
   756                           	psect	dataBANK0
   757  0000EB                     __pdataBANK0:
   758                           	opt callstack 0
   759  0000EB                     stoa@F1139:
   760                           	opt callstack 0
   761  0000EB                     	ds	7
   762  0000F2                     _motorADirection:
   763                           	opt callstack 0
   764  0000F2                     	ds	1
   765                           
   766                           	psect	cstackBANK0
   767  000080                     __pcstackBANK0:
   768                           	opt callstack 0
   769  000080                     vfprintf@cfmt:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x0
   773  000080                     	ds	2
   774  000082                     ?_printf:
   775                           	opt callstack 0
   776  000082                     printf@fmt:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780  000082                     	ds	10
   781  00008C                     printf@ap:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0xC
   785  00008C                     	ds	2
   786  00008E                     ??_doOperation:
   787  00008E                     doDisplayLog@currentLogState:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  00008E                     	ds	2
   792  000090                     ??_doDisplayLog:
   793                           
   794                           ; 1 bytes @ 0x10
   795  000090                     	ds	4
   796  000094                     doDisplayLog@keypress:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x14
   800  000094                     	ds	1
   801  000095                     doDisplayLog@currentDisplayState:
   802                           	opt callstack 0
   803                           
   804                           ; 1 bytes @ 0x15
   805  000095                     	ds	1
   806  000096                     doDisplayLog@keyValue:
   807                           	opt callstack 0
   808                           
   809                           ; 1 bytes @ 0x16
   810  000096                     	ds	7
   811  00009D                     doOperation@motorASpeed:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x1D
   815  00009D                     	ds	2
   816  00009F                     doOperation@motorBSpeed:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x1F
   820  00009F                     	ds	2
   821  0000A1                     doOperation@timeInOperation:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x21
   825  0000A1                     	ds	2
   826  0000A3                     doOperation@isDoneDrop:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x23
   830  0000A3                     	ds	1
   831  0000A4                     doOperation@secondsMeasuredOld:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x24
   835  0000A4                     	ds	2
   836  0000A6                     doOperation@topLaserStatePrev:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0x26
   840  0000A6                     	ds	1
   841  0000A7                     doOperation@tiresToDrop:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x27
   845  0000A7                     	ds	2
   846  0000A9                     doOperation@currentOperationState:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x29
   850  0000A9                     	ds	1
   851  0000AA                     doOperation@topLaserState:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x2A
   855  0000AA                     	ds	1
   856  0000AB                     ??_main:
   857                           
   858                           ; 1 bytes @ 0x2B
   859  0000AB                     	ds	2
   860  0000AD                     main@time:
   861                           	opt callstack 0
   862                           
   863                           ; 7 bytes @ 0x2D
   864  0000AD                     	ds	7
   865  0000B4                     main@tick:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x34
   869  0000B4                     	ds	4
   870  0000B8                     main@keypress:
   871                           	opt callstack 0
   872                           
   873                           ; 1 bytes @ 0x38
   874  0000B8                     	ds	1
   875  0000B9                     main@i:
   876                           	opt callstack 0
   877                           
   878                           ; 1 bytes @ 0x39
   879  0000B9                     	ds	1
   880  0000BA                     main@currentLogState:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x3A
   884  0000BA                     	ds	1
   885  0000BB                     main@currentRobotState:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x3B
   889  0000BB                     	ds	1
   890  0000BC                     main@keyValue:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x3C
   894  0000BC                     	ds	1
   895                           
   896                           	psect	cstackCOMRAM
   897  000001                     __pcstackCOMRAM:
   898                           	opt callstack 0
   899  000001                     ??_updateMotorBEncoder:
   900  000001                     
   901                           ; 1 bytes @ 0x0
   902  000001                     	ds	1
   903  000002                     updateMotorBEncoder@interruptPinState:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x1
   907  000002                     	ds	2
   908  000004                     updateMotorBEncoder@val:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x3
   912  000004                     	ds	2
   913  000006                     ??_I2C_Master_Wait:
   914  000006                     ?_strlen:
   915                           	opt callstack 0
   916  000006                     ?_isupper:
   917                           	opt callstack 0
   918  000006                     ?_isalpha:
   919                           	opt callstack 0
   920  000006                     ?_isdigit:
   921                           	opt callstack 0
   922  000006                     ?_isspace:
   923                           	opt callstack 0
   924  000006                     ?_islower:
   925                           	opt callstack 0
   926  000006                     ?___wmul:
   927                           	opt callstack 0
   928  000006                     ?___lldiv:
   929                           	opt callstack 0
   930  000006                     ?___llmod:
   931                           	opt callstack 0
   932  000006                     ?___xxtofl:
   933                           	opt callstack 0
   934  000006                     ?___aodiv:
   935                           	opt callstack 0
   936  000006                     ?___aomod:
   937                           	opt callstack 0
   938  000006                     pulse_e@interruptState:
   939                           	opt callstack 0
   940  000006                     ___wmul@multiplier:
   941                           	opt callstack 0
   942  000006                     isalpha@c:
   943                           	opt callstack 0
   944  000006                     isdigit@c:
   945                           	opt callstack 0
   946  000006                     isspace@c:
   947                           	opt callstack 0
   948  000006                     isupper@c:
   949                           	opt callstack 0
   950  000006                     strlen@s:
   951                           	opt callstack 0
   952  000006                     islower@c:
   953                           	opt callstack 0
   954  000006                     ___lldiv@dividend:
   955                           	opt callstack 0
   956  000006                     ___flge@ff1:
   957                           	opt callstack 0
   958  000006                     ___llmod@dividend:
   959                           	opt callstack 0
   960  000006                     ___xxtofl@val:
   961                           	opt callstack 0
   962  000006                     ___aodiv@dividend:
   963                           	opt callstack 0
   964  000006                     ___aomod@dividend:
   965                           	opt callstack 0
   966                           
   967                           ; 8 bytes @ 0x5
   968  000006                     	ds	1
   969  000007                     send_nibble@data:
   970                           	opt callstack 0
   971  000007                     I2C_Master_Read@ackBit:
   972                           	opt callstack 0
   973  000007                     I2C_Master_Write@byteToWrite:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x6
   977  000007                     	ds	1
   978  000008                     ??_isupper:
   979  000008                     ??_isalpha:
   980  000008                     ??_isdigit:
   981  000008                     ??_isspace:
   982  000008                     ??_islower:
   983  000008                     send_byte@data:
   984                           	opt callstack 0
   985  000008                     I2C_Master_Read@receivedByte:
   986                           	opt callstack 0
   987  000008                     ___wmul@multiplicand:
   988                           	opt callstack 0
   989  000008                     strlen@a:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x7
   993  000008                     	ds	1
   994  000009                     lcdInst@data:
   995                           	opt callstack 0
   996  000009                     putch@data:
   997                           	opt callstack 0
   998                           
   999                           ; 1 bytes @ 0x8
  1000  000009                     	ds	1
  1001  00000A                     ??_initLCD:
  1002  00000A                     ??___xxtofl:
  1003  00000A                     ___wmul@product:
  1004                           	opt callstack 0
  1005  00000A                     fputc@c:
  1006                           	opt callstack 0
  1007  00000A                     ___lldiv@divisor:
  1008                           	opt callstack 0
  1009  00000A                     ___flge@ff2:
  1010                           	opt callstack 0
  1011  00000A                     ___llmod@divisor:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x9
  1015  00000A                     	ds	2
  1016  00000C                     ?_toupper:
  1017                           	opt callstack 0
  1018  00000C                     _isspace$1617:
  1019                           	opt callstack 0
  1020  00000C                     fputc@fp:
  1021                           	opt callstack 0
  1022  00000C                     toupper@c:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xB
  1026  00000C                     	ds	1
  1027  00000D                     ?_atoi:
  1028                           	opt callstack 0
  1029  00000D                     atoi@s:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0xC
  1033  00000D                     	ds	1
  1034  00000E                     ??_fputc:
  1035  00000E                     ??_toupper:
  1036  00000E                     ??___flge:
  1037  00000E                     ___llmod@counter:
  1038                           	opt callstack 0
  1039  00000E                     ___xxtofl@sign:
  1040                           	opt callstack 0
  1041  00000E                     ___lldiv@quotient:
  1042                           	opt callstack 0
  1043  00000E                     ___aodiv@divisor:
  1044                           	opt callstack 0
  1045  00000E                     ___aomod@divisor:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 8 bytes @ 0xD
  1049  00000E                     	ds	1
  1050  00000F                     ??_atoi:
  1051  00000F                     ___xxtofl@exp:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 1 bytes @ 0xE
  1055  00000F                     	ds	1
  1056  000010                     ___xxtofl@arg:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 4 bytes @ 0xF
  1060  000010                     	ds	2
  1061  000012                     ___lldiv@counter:
  1062                           	opt callstack 0
  1063  000012                     _toupper$1681:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x11
  1067  000012                     	ds	1
  1068  000013                     ?_stoa:
  1069                           	opt callstack 0
  1070  000013                     stoa@fp:
  1071                           	opt callstack 0
  1072  000013                     atoi@neg:
  1073                           	opt callstack 0
  1074  000013                     fputs@s:
  1075                           	opt callstack 0
  1076  000013                     I2C_Master_Init@clockFreq:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x12
  1080  000013                     	ds	1
  1081  000014                     ?___flmul:
  1082                           	opt callstack 0
  1083  000014                     ___flmul@b:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x13
  1087  000014                     	ds	1
  1088  000015                     stoa@s:
  1089                           	opt callstack 0
  1090  000015                     _atoi$1590:
  1091                           	opt callstack 0
  1092  000015                     fputs@fp:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x14
  1096  000015                     	ds	1
  1097  000016                     ___aodiv@counter:
  1098                           	opt callstack 0
  1099  000016                     ___aomod@counter:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x15
  1103  000016                     	ds	1
  1104  000017                     ??_I2C_Master_Init:
  1105  000017                     ??_stoa:
  1106  000017                     ___aodiv@sign:
  1107                           	opt callstack 0
  1108  000017                     ___aomod@sign:
  1109                           	opt callstack 0
  1110  000017                     fputs@c:
  1111                           	opt callstack 0
  1112  000017                     _atoi$1592:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x16
  1116  000017                     	ds	1
  1117  000018                     ?_abs:
  1118                           	opt callstack 0
  1119  000018                     abs@a:
  1120                           	opt callstack 0
  1121  000018                     fputs@i:
  1122                           	opt callstack 0
  1123  000018                     ___flmul@a:
  1124                           	opt callstack 0
  1125  000018                     stoa@nuls:
  1126                           	opt callstack 0
  1127  000018                     ___aodiv@quotient:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x17
  1131  000018                     	ds	1
  1132  000019                     _atoi$1591:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x18
  1136  000019                     	ds	1
  1137  00001A                     ??_abs:
  1138  00001A                     ?_pad:
  1139                           	opt callstack 0
  1140  00001A                     pad@fp:
  1141                           	opt callstack 0
  1142  00001A                     atoi@n:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x19
  1146  00001A                     	ds	1
  1147  00001B                     
  1148                           ; 1 bytes @ 0x1A
  1149  00001B                     	ds	1
  1150  00001C                     ??___flmul:
  1151  00001C                     pad@buf:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x1B
  1155  00001C                     	ds	2
  1156  00001E                     pad@p:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x1D
  1160  00001E                     	ds	1
  1161  00001F                     stoa@i:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1E
  1165  00001F                     	ds	1
  1166  000020                     ??_pad:
  1167  000020                     ___flmul@sign:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x1F
  1171  000020                     	ds	1
  1172  000021                     pad@i:
  1173                           	opt callstack 0
  1174  000021                     stoa@w:
  1175                           	opt callstack 0
  1176  000021                     ___flmul@grs:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x20
  1180  000021                     	ds	2
  1181  000023                     pad@w:
  1182                           	opt callstack 0
  1183  000023                     stoa@cp:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x22
  1187  000023                     	ds	2
  1188  000025                     ?_dtoa:
  1189                           	opt callstack 0
  1190  000025                     ?_xtoa:
  1191                           	opt callstack 0
  1192  000025                     ___flmul@aexp:
  1193                           	opt callstack 0
  1194  000025                     dtoa@fp:
  1195                           	opt callstack 0
  1196  000025                     stoa@p:
  1197                           	opt callstack 0
  1198  000025                     xtoa@fp:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x24
  1202  000025                     	ds	1
  1203  000026                     ___flmul@bexp:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x25
  1207  000026                     	ds	1
  1208  000027                     stoa@l:
  1209                           	opt callstack 0
  1210  000027                     ___flmul@prod:
  1211                           	opt callstack 0
  1212  000027                     dtoa@d:
  1213                           	opt callstack 0
  1214  000027                     xtoa@d:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x26
  1218  000027                     	ds	4
  1219  00002B                     ___flmul@temp:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x2A
  1223  00002B                     	ds	2
  1224  00002D                     ?___fldiv:
  1225                           	opt callstack 0
  1226  00002D                     ?___fltol:
  1227                           	opt callstack 0
  1228  00002D                     ___fltol@f1:
  1229                           	opt callstack 0
  1230  00002D                     ___fldiv@b:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x2C
  1234  00002D                     	ds	2
  1235  00002F                     ??_dtoa:
  1236  00002F                     xtoa@x:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x2E
  1240  00002F                     	ds	1
  1241  000030                     ??_xtoa:
  1242                           
  1243                           ; 1 bytes @ 0x2F
  1244  000030                     	ds	1
  1245  000031                     ??___fltol:
  1246  000031                     ___fldiv@a:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x30
  1250  000031                     	ds	4
  1251  000035                     ??___fldiv:
  1252  000035                     ___fltol@sign1:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x34
  1256  000035                     	ds	1
  1257  000036                     ___fltol@exp1:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x35
  1261  000036                     	ds	1
  1262  000037                     _dtoa$1094:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x36
  1266  000037                     	ds	1
  1267  000038                     _xtoa$1116:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x37
  1271  000038                     	ds	1
  1272  000039                     dtoa@p:
  1273                           	opt callstack 0
  1274  000039                     ___fldiv@rem:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x38
  1278  000039                     	ds	1
  1279  00003A                     _xtoa$1117:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x39
  1283  00003A                     	ds	1
  1284  00003B                     dtoa@w:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x3A
  1288  00003B                     	ds	1
  1289  00003C                     xtoa@p:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x3B
  1293  00003C                     	ds	1
  1294  00003D                     ___fldiv@sign:
  1295                           	opt callstack 0
  1296  00003D                     dtoa@s:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x3C
  1300  00003D                     	ds	1
  1301  00003E                     xtoa@w:
  1302                           	opt callstack 0
  1303  00003E                     ___fldiv@new_exp:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x3D
  1307  00003E                     	ds	1
  1308  00003F                     dtoa@n:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 8 bytes @ 0x3E
  1312  00003F                     	ds	1
  1313  000040                     ___fldiv@grs:
  1314                           	opt callstack 0
  1315  000040                     xtoa@n:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 8 bytes @ 0x3F
  1319  000040                     	ds	4
  1320  000044                     ___fldiv@bexp:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x43
  1324  000044                     	ds	1
  1325  000045                     ___fldiv@aexp:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x44
  1329  000045                     	ds	1
  1330  000046                     set_pwm_duty_cycle@dutyA:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x45
  1334  000046                     	ds	1
  1335  000047                     dtoa@i:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x46
  1339  000047                     	ds	1
  1340  000048                     xtoa@i:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x47
  1344  000048                     	ds	2
  1345  00004A                     xtoa@c:
  1346                           	opt callstack 0
  1347  00004A                     set_pwm_duty_cycle@dutyB:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x49
  1351  00004A                     	ds	2
  1352  00004C                     ?_vfpfcnvrt:
  1353                           	opt callstack 0
  1354  00004C                     vfpfcnvrt@fp:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x4B
  1358  00004C                     	ds	2
  1359  00004E                     ??_set_pwm_duty_cycle:
  1360  00004E                     vfpfcnvrt@fmt:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x4D
  1364  00004E                     	ds	2
  1365  000050                     set_pwm_duty_cycle@max_duty_val:
  1366                           	opt callstack 0
  1367  000050                     vfpfcnvrt@ap:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x4F
  1371  000050                     	ds	2
  1372  000052                     ??_vfpfcnvrt:
  1373  000052                     set_pwm_duty_cycle@duty_valA:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x51
  1377  000052                     	ds	2
  1378  000054                     set_pwm_duty_cycle@duty_valB:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x53
  1382  000054                     	ds	2
  1383  000056                     _set_pwm_duty_cycle$1951:
  1384                           	opt callstack 0
  1385  000056                     vfpfcnvrt@ll:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 8 bytes @ 0x55
  1389  000056                     	ds	4
  1390  00005A                     setMotorSpeeds@motorASpeed:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x59
  1394  00005A                     	ds	2
  1395  00005C                     setMotorSpeeds@Aforward:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x5B
  1399  00005C                     	ds	1
  1400  00005D                     setMotorSpeeds@motorBSpeed:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x5C
  1404  00005D                     	ds	1
  1405  00005E                     vfpfcnvrt@llu:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 8 bytes @ 0x5D
  1409  00005E                     	ds	1
  1410  00005F                     _setMotorSpeeds$1952:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x5E
  1414  00005F                     	ds	4
  1415  000063                     _setMotorSpeeds$1953:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x62
  1419  000063                     	ds	3
  1420  000066                     vfpfcnvrt@cp:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x65
  1424  000066                     	ds	2
  1425  000068                     vfpfcnvrt@c:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x67
  1429  000068                     	ds	1
  1430  000069                     vfpfcnvrt@done:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x68
  1434  000069                     	ds	2
  1435  00006B                     _vfpfcnvrt$1131:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x6A
  1439  00006B                     	ds	2
  1440  00006D                     ?_vfprintf:
  1441                           	opt callstack 0
  1442  00006D                     vfprintf@fp:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x6C
  1446  00006D                     	ds	2
  1447  00006F                     vfprintf@fmt:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x6E
  1451  00006F                     	ds	2
  1452  000071                     vfprintf@ap:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x70
  1456  000071                     	ds	2
  1457  000073                     
  1458                           ; 1 bytes @ 0x72
  1459 ;;
  1460 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1461 ;;
  1462 ;; *************** function _main *****************
  1463 ;; Defined at:
  1464 ;;		line 626 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  i               1   57[BANK0 ] unsigned char 
  1469 ;;  keyValue        1   60[BANK0 ] unsigned char 
  1470 ;;  keypress        1   56[BANK0 ] unsigned char 
  1471 ;;  time            7   45[BANK0 ] unsigned char [7]
  1472 ;;  tick            4   52[BANK0 ] unsigned long 
  1473 ;;  currentRobot    1   59[BANK0 ] enum E3312
  1474 ;;  currentLogSt    1   58[BANK0 ] enum E3319
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:       18 bytes
  1489 ;; Hardware stack levels required when called:   14
  1490 ;; This function calls:
  1491 ;;		_I2C_Master_Read
  1492 ;;		_I2C_Master_Start
  1493 ;;		_I2C_Master_Stop
  1494 ;;		_I2C_Master_Write
  1495 ;;		___llmod
  1496 ;;		_doDisplayLog
  1497 ;;		_doOperation
  1498 ;;		_lcdInst
  1499 ;;		_printf
  1500 ;;		_replaceOldLog
  1501 ;;		_robotInit
  1502 ;; This function is called by:
  1503 ;;		Startup code after reset
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text0
  1508  000426                     __ptext0:
  1509                           	opt callstack 0
  1510  000426                     _main:
  1511                           	opt callstack 17
  1512                           
  1513                           ;main.c: 627:     robotInit();
  1514                           
  1515                           ;incstack = 0
  1516  000426  EC8D  F012         	call	_robotInit	;wreg free
  1517                           
  1518                           ;main.c: 629:     unsigned char time[7];;main.c: 633:     enum robotStates currentRobotS
      +                          tate = standby;
  1519  00042A  0E00               	movlw	0
  1520  00042C  0100               	movlb	0	; () banked
  1521  00042E  6FBB               	movwf	main@currentRobotState& (0+255),b
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;main.c: 635:     enum logStates currentLogState = one;
  1525  000430  0E01               	movlw	1
  1526  000432  6FBA               	movwf	main@currentLogState& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 637:     unsigned long tick = 0;
  1530  000434  0E00               	movlw	0
  1531  000436  6FB4               	movwf	main@tick& (0+255),b
  1532  000438  0E00               	movlw	0
  1533  00043A  6FB5               	movwf	(main@tick+1)& (0+255),b
  1534  00043C  0E00               	movlw	0
  1535  00043E  6FB6               	movwf	(main@tick+2)& (0+255),b
  1536  000440  0E00               	movlw	0
  1537  000442  6FB7               	movwf	(main@tick+3)& (0+255),b
  1538  000444                     l5899:
  1539                           
  1540                           ;main.c: 640:             if (tick%10==0){
  1541  000444  C0B4  F006         	movff	main@tick,___llmod@dividend
  1542  000448  C0B5  F007         	movff	main@tick+1,___llmod@dividend+1
  1543  00044C  C0B6  F008         	movff	main@tick+2,___llmod@dividend+2
  1544  000450  C0B7  F009         	movff	main@tick+3,___llmod@dividend+3
  1545  000454  0E0A               	movlw	10
  1546  000456  6E0A               	movwf	___llmod@divisor,c
  1547  000458  0E00               	movlw	0
  1548  00045A  6E0B               	movwf	___llmod@divisor+1,c
  1549  00045C  0E00               	movlw	0
  1550  00045E  6E0C               	movwf	___llmod@divisor+2,c
  1551  000460  0E00               	movlw	0
  1552  000462  6E0D               	movwf	___llmod@divisor+3,c
  1553  000464  EC8F  F011         	call	___llmod	;wreg free
  1554  000468  5006               	movf	?___llmod,w,c
  1555  00046A  1007               	iorwf	?___llmod+1,w,c
  1556  00046C  1008               	iorwf	?___llmod+2,w,c
  1557  00046E  1009               	iorwf	?___llmod+3,w,c
  1558  000470  A4D8               	btfss	status,2,c
  1559  000472  D150               	goto	l6005
  1560                           
  1561                           ;main.c: 642:                 I2C_Master_Start();
  1562  000474  EC51  F014         	call	_I2C_Master_Start	;wreg free
  1563                           
  1564                           ;main.c: 643:                 I2C_Master_Write(0b11010000);
  1565  000478  0E00               	movlw	0
  1566  00047A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1567  00047C  0ED0               	movlw	208
  1568  00047E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1569  000480  EC44  F014         	call	_I2C_Master_Write	;wreg free
  1570                           
  1571                           ;main.c: 644:                 I2C_Master_Write(0x00);
  1572  000484  0E00               	movlw	0
  1573  000486  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1574  000488  0E00               	movlw	0
  1575  00048A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1576  00048C  EC44  F014         	call	_I2C_Master_Write	;wreg free
  1577                           
  1578                           ;main.c: 645:                 I2C_Master_Stop();
  1579  000490  EC4D  F014         	call	_I2C_Master_Stop	;wreg free
  1580                           
  1581                           ;main.c: 648:                 I2C_Master_Start();
  1582  000494  EC51  F014         	call	_I2C_Master_Start	;wreg free
  1583                           
  1584                           ;main.c: 649:                 I2C_Master_Write(0b11010001);
  1585  000498  0E00               	movlw	0
  1586  00049A  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  1587  00049C  0ED1               	movlw	209
  1588  00049E  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  1589  0004A0  EC44  F014         	call	_I2C_Master_Write	;wreg free
  1590                           
  1591                           ;main.c: 650:                 for(unsigned char i = 0; i < 6; i++){
  1592  0004A4  0E00               	movlw	0
  1593  0004A6  0100               	movlb	0	; () banked
  1594  0004A8  6FB9               	movwf	main@i& (0+255),b
  1595  0004AA                     l5909:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;main.c: 651:                     time[i] = I2C_Master_Read(0);
  1599  0004AA  0EAD               	movlw	low main@time
  1600  0004AC  25B9               	addwf	main@i& (0+255),w,b
  1601  0004AE  6ED9               	movwf	fsr2l,c
  1602  0004B0  6ADA               	clrf	fsr2h,c
  1603  0004B2  0E00               	movlw	high main@time
  1604  0004B4  22DA               	addwfc	fsr2h,f,c
  1605  0004B6  0E00               	movlw	0
  1606  0004B8  ECCD  F013         	call	_I2C_Master_Read
  1607  0004BC  6EDF               	movwf	indf2,c
  1608                           
  1609                           ;main.c: 652:                 }
  1610  0004BE  0100               	movlb	0	; () banked
  1611  0004C0  2BB9               	incf	main@i& (0+255),f,b
  1612                           
  1613                           ; BSR set to: 0
  1614  0004C2  0E05               	movlw	5
  1615  0004C4  65B9               	cpfsgt	main@i& (0+255),b
  1616  0004C6  D7F1               	goto	l5909
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 653:                 time[6] = I2C_Master_Read(1);
  1620  0004C8  0E01               	movlw	1
  1621  0004CA  ECCD  F013         	call	_I2C_Master_Read
  1622  0004CE  0100               	movlb	0	; () banked
  1623  0004D0  6FB3               	movwf	(main@time+6)& (0+255),b
  1624                           
  1625                           ;main.c: 654:                 I2C_Master_Stop();
  1626  0004D2  EC4D  F014         	call	_I2C_Master_Stop	;wreg free
  1627  0004D6  D11E               	goto	l6005
  1628  0004D8                     l5917:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 667:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1632  0004D8  0E80               	movlw	128
  1633  0004DA  EC3E  F014         	call	_lcdInst
  1634  0004DE  0E07               	movlw	7
  1635  0004E0  0100               	movlb	0	; () banked
  1636  0004E2  6FAB               	movwf	??_main& (0+255),b
  1637  0004E4  0E7D               	movlw	125
  1638  0004E6                     u5817:
  1639  0004E6  2EE8               	decfsz	wreg,f,c
  1640  0004E8  D7FE               	bra	u5817
  1641  0004EA  2FAB               	decfsz	??_main& (0+255),f,b
  1642  0004EC  D7FC               	bra	u5817
  1643                           
  1644                           ;main.c: 669:                 printf("%s", "WELCOME ");
  1645  0004EE  0E2B               	movlw	low STR_1
  1646  0004F0  0100               	movlb	0	; () banked
  1647  0004F2  6F82               	movwf	printf@fmt& (0+255),b
  1648  0004F4  0EFD               	movlw	high STR_1
  1649  0004F6  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1650  0004F8  0E04               	movlw	low STR_22
  1651  0004FA  6F84               	movwf	(?_printf+2)& (0+255),b
  1652  0004FC  0EFD               	movlw	high STR_22
  1653  0004FE  6F85               	movwf	(?_printf+3)& (0+255),b
  1654  000500  ECA6  F013         	call	_printf	;wreg free
  1655                           
  1656                           ;main.c: 670:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1657  000504  0E5C               	movlw	low STR_23
  1658  000506  0100               	movlb	0	; () banked
  1659  000508  6F82               	movwf	printf@fmt& (0+255),b
  1660  00050A  0EFC               	movlw	high STR_23
  1661  00050C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1662  00050E  C0B3  F084         	movff	main@time+6,?_printf+2
  1663  000512  6B85               	clrf	(?_printf+3)& (0+255),b
  1664  000514  C0B2  F086         	movff	main@time+5,?_printf+4
  1665  000518  6B87               	clrf	(?_printf+5)& (0+255),b
  1666  00051A  C0B1  F088         	movff	main@time+4,?_printf+6
  1667  00051E  6B89               	clrf	(?_printf+7)& (0+255),b
  1668  000520  ECA6  F013         	call	_printf	;wreg free
  1669  000524  0EC0               	movlw	192
  1670  000526  EC3E  F014         	call	_lcdInst
  1671                           
  1672                           ;main.c: 672:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1673  00052A  0E6B               	movlw	low STR_24
  1674  00052C  0100               	movlb	0	; () banked
  1675  00052E  6F82               	movwf	printf@fmt& (0+255),b
  1676  000530  0EFC               	movlw	high STR_24
  1677  000532  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1678  000534  C0AF  F084         	movff	main@time+2,?_printf+2
  1679  000538  6B85               	clrf	(?_printf+3)& (0+255),b
  1680  00053A  C0AE  F086         	movff	main@time+1,?_printf+4
  1681  00053E  6B87               	clrf	(?_printf+5)& (0+255),b
  1682  000540  C0AD  F088         	movff	main@time,?_printf+6
  1683  000544  6B89               	clrf	(?_printf+7)& (0+255),b
  1684  000546  ECA6  F013         	call	_printf	;wreg free
  1685  00054A  0E90               	movlw	144
  1686  00054C  EC3E  F014         	call	_lcdInst
  1687                           
  1688                           ;main.c: 674:                 printf("%s","(1) START");
  1689  000550  0E2B               	movlw	low STR_1
  1690  000552  0100               	movlb	0	; () banked
  1691  000554  6F82               	movwf	printf@fmt& (0+255),b
  1692  000556  0EFD               	movlw	high STR_1
  1693  000558  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1694  00055A  0EFA               	movlw	low STR_26
  1695  00055C  6F84               	movwf	(?_printf+2)& (0+255),b
  1696  00055E  0EFC               	movlw	high STR_26
  1697  000560  6F85               	movwf	(?_printf+3)& (0+255),b
  1698  000562  ECA6  F013         	call	_printf	;wreg free
  1699  000566  0ED0               	movlw	208
  1700  000568  EC3E  F014         	call	_lcdInst
  1701                           
  1702                           ;main.c: 676:                 printf("%s","(2) VIEW LOGS");
  1703  00056C  0E2B               	movlw	low STR_1
  1704  00056E  0100               	movlb	0	; () banked
  1705  000570  6F82               	movwf	printf@fmt& (0+255),b
  1706  000572  0EFD               	movlw	high STR_1
  1707  000574  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1708  000576  0E96               	movlw	low STR_28
  1709  000578  6F84               	movwf	(?_printf+2)& (0+255),b
  1710  00057A  0EFC               	movlw	high STR_28
  1711  00057C  6F85               	movwf	(?_printf+3)& (0+255),b
  1712  00057E  ECA6  F013         	call	_printf	;wreg free
  1713                           
  1714                           ;main.c: 677:                 break;
  1715  000582  D0E0               	goto	l6007
  1716  000584                     l5937:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 680:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1720  000584  0E80               	movlw	128
  1721  000586  EC3E  F014         	call	_lcdInst
  1722  00058A  0E07               	movlw	7
  1723  00058C  0100               	movlb	0	; () banked
  1724  00058E  6FAB               	movwf	??_main& (0+255),b
  1725  000590  0E7D               	movlw	125
  1726  000592                     u5827:
  1727  000592  2EE8               	decfsz	wreg,f,c
  1728  000594  D7FE               	bra	u5827
  1729  000596  2FAB               	decfsz	??_main& (0+255),f,b
  1730  000598  D7FC               	bra	u5827
  1731                           
  1732                           ;main.c: 681:                 printf("%s", "OPERATION IN");
  1733  00059A  0E2B               	movlw	low STR_1
  1734  00059C  0100               	movlb	0	; () banked
  1735  00059E  6F82               	movwf	printf@fmt& (0+255),b
  1736  0005A0  0EFD               	movlw	high STR_1
  1737  0005A2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1738  0005A4  0ECC               	movlw	low STR_30
  1739  0005A6  6F84               	movwf	(?_printf+2)& (0+255),b
  1740  0005A8  0EFC               	movlw	high STR_30
  1741  0005AA  6F85               	movwf	(?_printf+3)& (0+255),b
  1742  0005AC  ECA6  F013         	call	_printf	;wreg free
  1743  0005B0  0EC0               	movlw	192
  1744  0005B2  EC3E  F014         	call	_lcdInst
  1745                           
  1746                           ;main.c: 683:                 printf("%s","PROGRESS");
  1747  0005B6  0E2B               	movlw	low STR_1
  1748  0005B8  0100               	movlb	0	; () banked
  1749  0005BA  6F82               	movwf	printf@fmt& (0+255),b
  1750  0005BC  0EFD               	movlw	high STR_1
  1751  0005BE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1752  0005C0  0E16               	movlw	low STR_32
  1753  0005C2  6F84               	movwf	(?_printf+2)& (0+255),b
  1754  0005C4  0EFD               	movlw	high STR_32
  1755  0005C6  6F85               	movwf	(?_printf+3)& (0+255),b
  1756  0005C8  ECA6  F013         	call	_printf	;wreg free
  1757                           
  1758                           ;main.c: 684:                 doOperation();
  1759  0005CC  EC3E  F009         	call	_doOperation	;wreg free
  1760                           
  1761                           ;main.c: 685:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1762  0005D0  0E01               	movlw	1
  1763  0005D2  EC3E  F014         	call	_lcdInst
  1764  0005D6  0E11               	movlw	17
  1765  0005D8  0100               	movlb	0	; () banked
  1766  0005DA  6FAB               	movwf	??_main& (0+255),b
  1767  0005DC  0E3A               	movlw	58
  1768  0005DE                     u5837:
  1769  0005DE  2EE8               	decfsz	wreg,f,c
  1770  0005E0  D7FE               	bra	u5837
  1771  0005E2  2FAB               	decfsz	??_main& (0+255),f,b
  1772  0005E4  D7FC               	bra	u5837
  1773  0005E6  F000               	nop	
  1774                           
  1775                           ;main.c: 686:                 currentRobotState = operationComplete;
  1776  0005E8  0E02               	movlw	2
  1777  0005EA  D091               	goto	L1
  1778  0005EC                     l5955:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;main.c: 692:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1782  0005EC  0E80               	movlw	128
  1783  0005EE  EC3E  F014         	call	_lcdInst
  1784  0005F2  0E07               	movlw	7
  1785  0005F4  0100               	movlb	0	; () banked
  1786  0005F6  6FAB               	movwf	??_main& (0+255),b
  1787  0005F8  0E7D               	movlw	125
  1788  0005FA                     u5847:
  1789  0005FA  2EE8               	decfsz	wreg,f,c
  1790  0005FC  D7FE               	bra	u5847
  1791  0005FE  2FAB               	decfsz	??_main& (0+255),f,b
  1792  000600  D7FC               	bra	u5847
  1793                           
  1794                           ;main.c: 693:                 printf("%s", "OP. COMPLETE");
  1795  000602  0E2B               	movlw	low STR_1
  1796  000604  0100               	movlb	0	; () banked
  1797  000606  6F82               	movwf	printf@fmt& (0+255),b
  1798  000608  0EFD               	movlw	high STR_1
  1799  00060A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1800  00060C  0EB2               	movlw	low STR_34
  1801  00060E  6F84               	movwf	(?_printf+2)& (0+255),b
  1802  000610  0EFC               	movlw	high STR_34
  1803  000612  6F85               	movwf	(?_printf+3)& (0+255),b
  1804  000614  ECA6  F013         	call	_printf	;wreg free
  1805  000618  0EC0               	movlw	192
  1806  00061A  EC3E  F014         	call	_lcdInst
  1807                           
  1808                           ;main.c: 695:                 printf("%s","(1) VIEW LOG");
  1809  00061E  0E2B               	movlw	low STR_1
  1810  000620  0100               	movlb	0	; () banked
  1811  000622  6F82               	movwf	printf@fmt& (0+255),b
  1812  000624  0EFD               	movlw	high STR_1
  1813  000626  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1814  000628  0EBF               	movlw	low STR_36
  1815  00062A  6F84               	movwf	(?_printf+2)& (0+255),b
  1816  00062C  0EFC               	movlw	high STR_36
  1817  00062E  6F85               	movwf	(?_printf+3)& (0+255),b
  1818  000630  ECA6  F013         	call	_printf	;wreg free
  1819  000634  0E90               	movlw	144
  1820  000636  EC3E  F014         	call	_lcdInst
  1821                           
  1822                           ;main.c: 697:                 printf("%s","(2) QUIT DO NOT");
  1823  00063A  0E2B               	movlw	low STR_1
  1824  00063C  0100               	movlb	0	; () banked
  1825  00063E  6F82               	movwf	printf@fmt& (0+255),b
  1826  000640  0EFD               	movlw	high STR_1
  1827  000642  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1828  000644  0E3D               	movlw	low STR_38
  1829  000646  6F84               	movwf	(?_printf+2)& (0+255),b
  1830  000648  0EFC               	movlw	high STR_38
  1831  00064A  6F85               	movwf	(?_printf+3)& (0+255),b
  1832  00064C  ECA6  F013         	call	_printf	;wreg free
  1833  000650  0ED0               	movlw	208
  1834  000652  EC3E  F014         	call	_lcdInst
  1835                           
  1836                           ;main.c: 699:                 printf("%s","SAVE LOG");
  1837  000656  0E2B               	movlw	low STR_1
  1838  000658  0100               	movlb	0	; () banked
  1839  00065A  6F82               	movwf	printf@fmt& (0+255),b
  1840  00065C  0EFD               	movlw	high STR_1
  1841  00065E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1842  000660  0E0D               	movlw	low STR_40
  1843  000662  6F84               	movwf	(?_printf+2)& (0+255),b
  1844  000664  0EFD               	movlw	high STR_40
  1845  000666  6F85               	movwf	(?_printf+3)& (0+255),b
  1846  000668  ECA6  F013         	call	_printf	;wreg free
  1847                           
  1848                           ;main.c: 700:                 currentLogState = justRan;
  1849  00066C  0E00               	movlw	0
  1850  00066E  0100               	movlb	0	; () banked
  1851  000670  6FBA               	movwf	main@currentLogState& (0+255),b
  1852                           
  1853                           ;main.c: 701:                 break;
  1854  000672  D068               	goto	l6007
  1855  000674                     l5975:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 704:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1859  000674  0E80               	movlw	128
  1860  000676  EC3E  F014         	call	_lcdInst
  1861  00067A  0E07               	movlw	7
  1862  00067C  0100               	movlb	0	; () banked
  1863  00067E  6FAB               	movwf	??_main& (0+255),b
  1864  000680  0E7D               	movlw	125
  1865  000682                     u5857:
  1866  000682  2EE8               	decfsz	wreg,f,c
  1867  000684  D7FE               	bra	u5857
  1868  000686  2FAB               	decfsz	??_main& (0+255),f,b
  1869  000688  D7FC               	bra	u5857
  1870                           
  1871                           ;main.c: 705:                 printf("%s", "SELECT LOG");
  1872  00068A  0E2B               	movlw	low STR_1
  1873  00068C  0100               	movlb	0	; () banked
  1874  00068E  6F82               	movwf	printf@fmt& (0+255),b
  1875  000690  0EFD               	movlw	high STR_1
  1876  000692  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1877  000694  0EE5               	movlw	low STR_42
  1878  000696  6F84               	movwf	(?_printf+2)& (0+255),b
  1879  000698  0EFC               	movlw	high STR_42
  1880  00069A  6F85               	movwf	(?_printf+3)& (0+255),b
  1881  00069C  ECA6  F013         	call	_printf	;wreg free
  1882  0006A0  0EC0               	movlw	192
  1883  0006A2  EC3E  F014         	call	_lcdInst
  1884                           
  1885                           ;main.c: 707:                 printf("%s","(1 IS OLDEST)");
  1886  0006A6  0E2B               	movlw	low STR_1
  1887  0006A8  0100               	movlb	0	; () banked
  1888  0006AA  6F82               	movwf	printf@fmt& (0+255),b
  1889  0006AC  0EFD               	movlw	high STR_1
  1890  0006AE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1891  0006B0  0E7A               	movlw	low STR_44
  1892  0006B2  6F84               	movwf	(?_printf+2)& (0+255),b
  1893  0006B4  0EFC               	movlw	high STR_44
  1894  0006B6  6F85               	movwf	(?_printf+3)& (0+255),b
  1895  0006B8  ECA6  F013         	call	_printf	;wreg free
  1896  0006BC  0E90               	movlw	144
  1897  0006BE  EC3E  F014         	call	_lcdInst
  1898                           
  1899                           ;main.c: 709:                 printf("%s","(1) (2) (3) (4)");
  1900  0006C2  0E2B               	movlw	low STR_1
  1901  0006C4  0100               	movlb	0	; () banked
  1902  0006C6  6F82               	movwf	printf@fmt& (0+255),b
  1903  0006C8  0EFD               	movlw	high STR_1
  1904  0006CA  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1905  0006CC  0E0D               	movlw	low STR_46
  1906  0006CE  6F84               	movwf	(?_printf+2)& (0+255),b
  1907  0006D0  0EFC               	movlw	high STR_46
  1908  0006D2  6F85               	movwf	(?_printf+3)& (0+255),b
  1909  0006D4  ECA6  F013         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 710:                 break;
  1912  0006D8  D035               	goto	l6007
  1913  0006DA                     l5989:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 712:                 if (currentLogState == justRan){
  1917  0006DA  51BA               	movf	main@currentLogState& (0+255),w,b
  1918  0006DC  A4D8               	btfss	status,2,c
  1919  0006DE  D005               	goto	l5995
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;main.c: 713:                     replaceOldLog();
  1923  0006E0  EC55  F014         	call	_replaceOldLog	;wreg free
  1924                           
  1925                           ;main.c: 714:                     currentLogState = four;
  1926  0006E4  0E04               	movlw	4
  1927  0006E6  0100               	movlb	0	; () banked
  1928  0006E8  6FBA               	movwf	main@currentLogState& (0+255),b
  1929  0006EA                     l5995:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 716:                 doDisplayLog(currentLogState);
  1933  0006EA  C0BA  F08E         	movff	main@currentLogState,doDisplayLog@currentLogState
  1934  0006EE  6B8F               	clrf	(doDisplayLog@currentLogState+1)& (0+255),b
  1935  0006F0  EC50  F00B         	call	_doDisplayLog	;wreg free
  1936                           
  1937                           ;main.c: 717:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1938  0006F4  0E01               	movlw	1
  1939  0006F6  EC3E  F014         	call	_lcdInst
  1940  0006FA  0E11               	movlw	17
  1941  0006FC  0100               	movlb	0	; () banked
  1942  0006FE  6FAB               	movwf	??_main& (0+255),b
  1943  000700  0E3A               	movlw	58
  1944  000702                     u5867:
  1945  000702  2EE8               	decfsz	wreg,f,c
  1946  000704  D7FE               	bra	u5867
  1947  000706  2FAB               	decfsz	??_main& (0+255),f,b
  1948  000708  D7FC               	bra	u5867
  1949  00070A  F000               	nop	
  1950                           
  1951                           ;main.c: 718:                 currentRobotState = standby;
  1952  00070C  0E00               	movlw	0
  1953  00070E                     L1:
  1954  00070E  0100               	movlb	0	; () banked
  1955  000710  6FBB               	movwf	main@currentRobotState& (0+255),b
  1956                           
  1957                           ;main.c: 719:                 break;
  1958  000712  D018               	goto	l6007
  1959  000714                     l6005:
  1960  000714  0100               	movlb	0	; () banked
  1961  000716  51BB               	movf	main@currentRobotState& (0+255),w,b
  1962  000718  6FAB               	movwf	??_main& (0+255),b
  1963  00071A  6BAC               	clrf	(??_main+1)& (0+255),b
  1964                           
  1965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1966                           ; Switch size 1, requested type "simple"
  1967                           ; Number of cases is 1, Range of values is 0 to 0
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte            4     3 (average)
  1971                           ;	Chosen strategy is simple_byte
  1972  00071C  51AC               	movf	(??_main+1)& (0+255),w,b
  1973  00071E  0A00               	xorlw	0	; case 0
  1974  000720  A4D8               	btfss	status,2,c
  1975  000722  D010               	goto	l6007
  1976                           
  1977                           ; BSR set to: 0
  1978                           ; Switch size 1, requested type "simple"
  1979                           ; Number of cases is 5, Range of values is 0 to 4
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte           16     9 (average)
  1983                           ;	Chosen strategy is simple_byte
  1984  000724  51AB               	movf	??_main& (0+255),w,b
  1985  000726  0A00               	xorlw	0	; case 0
  1986  000728  B4D8               	btfsc	status,2,c
  1987  00072A  D6D6               	goto	l5917
  1988  00072C  0A01               	xorlw	1	; case 1
  1989  00072E  B4D8               	btfsc	status,2,c
  1990  000730  D729               	goto	l5937
  1991  000732  0A03               	xorlw	3	; case 2
  1992  000734  B4D8               	btfsc	status,2,c
  1993  000736  D75A               	goto	l5955
  1994  000738  0A01               	xorlw	1	; case 3
  1995  00073A  B4D8               	btfsc	status,2,c
  1996  00073C  D79B               	goto	l5975
  1997  00073E  0A07               	xorlw	7	; case 4
  1998  000740  B4D8               	btfsc	status,2,c
  1999  000742  D7CB               	goto	l5989
  2000  000744                     l6007:
  2001                           
  2002                           ;main.c: 723:         if(keyPressed){
  2003  000744  0100               	movlb	0	; () banked
  2004  000746  51CA               	movf	_keyPressed& (0+255),w,b	;volatile
  2005  000748  B4D8               	btfsc	status,2,c
  2006  00074A  D064               	goto	l274
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 726:             keyPressed = 0;
  2010  00074C  0E00               	movlw	0
  2011  00074E  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 729:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2015  000750  3881               	swapf	3969,w,c	;volatile
  2016  000752  0B0F               	andlw	15
  2017  000754  0B0F               	andlw	15
  2018  000756  6FB8               	movwf	main@keypress& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;main.c: 730:             char keyValue = keys[keypress];
  2022  000758  0ED9               	movlw	low _keys
  2023  00075A  25B8               	addwf	main@keypress& (0+255),w,b
  2024  00075C  6EF6               	movwf	tblptrl,c
  2025  00075E  6AF7               	clrf	tblptrh,c
  2026  000760  0EFB               	movlw	high _keys
  2027  000762  22F7               	addwfc	tblptrh,f,c
  2028  000764                     	if	0	;There are less than 3 active tblptr bytes
  2029  000764                     	endif
  2030  000764  0008               	tblrd		*
  2031  000766  CFF5 F0BC          	movff	tablat,main@keyValue
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 731:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2035  00076A  0E01               	movlw	1
  2036  00076C  EC3E  F014         	call	_lcdInst
  2037  000770  0E11               	movlw	17
  2038  000772  0100               	movlb	0	; () banked
  2039  000774  6FAB               	movwf	??_main& (0+255),b
  2040  000776  0E3A               	movlw	58
  2041  000778                     u5877:
  2042  000778  2EE8               	decfsz	wreg,f,c
  2043  00077A  D7FE               	bra	u5877
  2044  00077C  2FAB               	decfsz	??_main& (0+255),f,b
  2045  00077E  D7FC               	bra	u5877
  2046  000780  F000               	nop	
  2047                           
  2048                           ;main.c: 732:             switch (currentRobotState){
  2049  000782  D032               	goto	l6055
  2050  000784                     l6019:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;main.c: 734:                     if (keyValue == '1'){
  2054  000784  0E31               	movlw	49
  2055  000786  19BC               	xorwf	main@keyValue& (0+255),w,b
  2056  000788  A4D8               	btfss	status,2,c
  2057  00078A  D002               	goto	l6023
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;main.c: 735:                         currentRobotState = operation;
  2061  00078C  0E01               	movlw	1
  2062  00078E  D011               	goto	L4
  2063  000790                     l6023:
  2064                           
  2065                           ; BSR set to: 0
  2066  000790  0E32               	movlw	50
  2067  000792  19BC               	xorwf	main@keyValue& (0+255),w,b
  2068  000794  A4D8               	btfss	status,2,c
  2069  000796  D03E               	goto	l274
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;main.c: 737:                         currentRobotState = selectLog;
  2073  000798  0E03               	movlw	3
  2074  00079A  D00B               	goto	L4
  2075  00079C                     l6027:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 743:                     if (keyValue == '1'){
  2079  00079C  0E31               	movlw	49
  2080  00079E  19BC               	xorwf	main@keyValue& (0+255),w,b
  2081  0007A0  A4D8               	btfss	status,2,c
  2082  0007A2  D002               	goto	l6031
  2083  0007A4                     u5730:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 744:                         currentRobotState = displayLog;
  2087  0007A4  0E04               	movlw	4
  2088  0007A6  D005               	goto	L4
  2089  0007A8                     l6031:
  2090                           
  2091                           ; BSR set to: 0
  2092  0007A8  0E32               	movlw	50
  2093  0007AA  19BC               	xorwf	main@keyValue& (0+255),w,b
  2094  0007AC  A4D8               	btfss	status,2,c
  2095  0007AE  D032               	goto	l274
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 746:                         currentRobotState = standby;
  2099  0007B0  0E00               	movlw	0
  2100  0007B2                     L4:
  2101  0007B2  6FBB               	movwf	main@currentRobotState& (0+255),b
  2102  0007B4  D02F               	goto	l274
  2103  0007B6                     l6035:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 750:                     if (keyValue == '1'){
  2107  0007B6  0E31               	movlw	49
  2108  0007B8  19BC               	xorwf	main@keyValue& (0+255),w,b
  2109  0007BA  A4D8               	btfss	status,2,c
  2110  0007BC  D002               	goto	l6039
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;main.c: 751:                         currentLogState = one;
  2114  0007BE  0E01               	movlw	1
  2115  0007C0  D011               	goto	L7
  2116  0007C2                     l6039:
  2117                           
  2118                           ; BSR set to: 0
  2119  0007C2  0E32               	movlw	50
  2120  0007C4  19BC               	xorwf	main@keyValue& (0+255),w,b
  2121  0007C6  A4D8               	btfss	status,2,c
  2122  0007C8  D002               	goto	l6043
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;main.c: 753:                         currentLogState = two;
  2126  0007CA  0E02               	movlw	2
  2127  0007CC  D00B               	goto	L7
  2128  0007CE                     l6043:
  2129                           
  2130                           ; BSR set to: 0
  2131  0007CE  0E33               	movlw	51
  2132  0007D0  19BC               	xorwf	main@keyValue& (0+255),w,b
  2133  0007D2  A4D8               	btfss	status,2,c
  2134  0007D4  D002               	goto	l6047
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;main.c: 755:                         currentLogState = three;
  2138  0007D6  0E03               	movlw	3
  2139  0007D8  D005               	goto	L7
  2140  0007DA                     l6047:
  2141                           
  2142                           ; BSR set to: 0
  2143  0007DA  0E34               	movlw	52
  2144  0007DC  19BC               	xorwf	main@keyValue& (0+255),w,b
  2145  0007DE  A4D8               	btfss	status,2,c
  2146  0007E0  D019               	goto	l274
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 757:                         currentLogState = '4';
  2150  0007E2  0E34               	movlw	52
  2151  0007E4                     L7:
  2152  0007E4  6FBA               	movwf	main@currentLogState& (0+255),b
  2153                           
  2154                           ;main.c: 758:                     } else {
  2155  0007E6  D7DE               	goto	u5730
  2156  0007E8                     l6055:
  2157  0007E8  0100               	movlb	0	; () banked
  2158  0007EA  51BB               	movf	main@currentRobotState& (0+255),w,b
  2159  0007EC  6FAB               	movwf	??_main& (0+255),b
  2160  0007EE  6BAC               	clrf	(??_main+1)& (0+255),b
  2161                           
  2162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2163                           ; Switch size 1, requested type "simple"
  2164                           ; Number of cases is 1, Range of values is 0 to 0
  2165                           ; switch strategies available:
  2166                           ; Name         Instructions Cycles
  2167                           ; simple_byte            4     3 (average)
  2168                           ;	Chosen strategy is simple_byte
  2169  0007F0  51AC               	movf	(??_main+1)& (0+255),w,b
  2170  0007F2  0A00               	xorlw	0	; case 0
  2171  0007F4  A4D8               	btfss	status,2,c
  2172  0007F6  D00E               	goto	l274
  2173                           
  2174                           ; BSR set to: 0
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 5, Range of values is 0 to 4
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte           16     9 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181  0007F8  51AB               	movf	??_main& (0+255),w,b
  2182  0007FA  0A00               	xorlw	0	; case 0
  2183  0007FC  B4D8               	btfsc	status,2,c
  2184  0007FE  D7C2               	goto	l6019
  2185  000800  0A01               	xorlw	1	; case 1
  2186  000802  B4D8               	btfsc	status,2,c
  2187  000804  D007               	goto	l274
  2188  000806  0A03               	xorlw	3	; case 2
  2189  000808  B4D8               	btfsc	status,2,c
  2190  00080A  D7C8               	goto	l6027
  2191  00080C  0A01               	xorlw	1	; case 3
  2192  00080E  B4D8               	btfsc	status,2,c
  2193  000810  D7D2               	goto	l6035
  2194  000812  0A07               	xorlw	7	; case 4
  2195  000814                     l274:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;main.c: 778:         tick++;
  2199                           
  2200                           ; BSR set to: 0
  2201  000814  0E01               	movlw	1
  2202  000816  27B4               	addwf	main@tick& (0+255),f,b
  2203  000818  0E00               	movlw	0
  2204  00081A  23B5               	addwfc	(main@tick+1)& (0+255),f,b
  2205  00081C  23B6               	addwfc	(main@tick+2)& (0+255),f,b
  2206  00081E  23B7               	addwfc	(main@tick+3)& (0+255),f,b
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 779:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2210  000820  0E04               	movlw	4
  2211  000822  0100               	movlb	0	; () banked
  2212  000824  6FAB               	movwf	??_main& (0+255),b
  2213  000826  0E3D               	movlw	61
  2214  000828                     u5887:
  2215  000828  2EE8               	decfsz	wreg,f,c
  2216  00082A  D7FE               	bra	u5887
  2217  00082C  2FAB               	decfsz	??_main& (0+255),f,b
  2218  00082E  D7FC               	bra	u5887
  2219  000830  D000               	nop2	
  2220  000832  D608               	goto	l5899
  2221  000834                     __end_of_main:
  2222                           	opt callstack 0
  2223                           
  2224 ;; *************** function _robotInit *****************
  2225 ;; Defined at:
  2226 ;;		line 579 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    7
  2247 ;; This function calls:
  2248 ;;		_EncoderInit
  2249 ;;		_I2C_Master_Init
  2250 ;;		_initLCD
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text1
  2257  00251A                     __ptext1:
  2258                           	opt callstack 0
  2259  00251A                     _robotInit:
  2260                           	opt callstack 23
  2261                           
  2262                           ;main.c: 581:     EncoderInit();
  2263                           
  2264                           ;incstack = 0
  2265  00251A  EC10  F014         	call	_EncoderInit	;wreg free
  2266                           
  2267                           ;main.c: 586:     LATD = 0x00;
  2268  00251E  0E00               	movlw	0
  2269  002520  6E8C               	movwf	3980,c	;volatile
  2270                           
  2271                           ;main.c: 587:     TRISD = 0x00;
  2272  002522  0E00               	movlw	0
  2273  002524  6E95               	movwf	3989,c	;volatile
  2274                           
  2275                           ;main.c: 590:     LATB = 0x00;
  2276  002526  0E00               	movlw	0
  2277  002528  6E8A               	movwf	3978,c	;volatile
  2278                           
  2279                           ;main.c: 591:     TRISBbits.TRISB1 = 1;
  2280  00252A  8293               	bsf	3987,1,c	;volatile
  2281                           
  2282                           ;main.c: 592:     TRISBbits.TRISB4 = 1;
  2283  00252C  8893               	bsf	3987,4,c	;volatile
  2284                           
  2285                           ;main.c: 593:     TRISBbits.TRISB5 = 1;
  2286  00252E  8A93               	bsf	3987,5,c	;volatile
  2287                           
  2288                           ;main.c: 594:     TRISBbits.TRISB6 = 1;
  2289  002530  8C93               	bsf	3987,6,c	;volatile
  2290                           
  2291                           ;main.c: 595:     TRISBbits.TRISB7 = 1;
  2292  002532  8E93               	bsf	3987,7,c	;volatile
  2293                           
  2294                           ;main.c: 598:     TRISAbits.TRISA4 = 0;
  2295  002534  9892               	bcf	3986,4,c	;volatile
  2296                           
  2297                           ;main.c: 599:     LATAbits.LATA4 = 0;
  2298  002536  9889               	bcf	3977,4,c	;volatile
  2299                           
  2300                           ;main.c: 602:     I2C_Master_Init(100000);
  2301  002538  0EA0               	movlw	160
  2302  00253A  6E13               	movwf	I2C_Master_Init@clockFreq,c
  2303  00253C  0E86               	movlw	134
  2304  00253E  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  2305  002540  0E01               	movlw	1
  2306  002542  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  2307  002544  0E00               	movlw	0
  2308  002546  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  2309  002548  ECC2  F011         	call	_I2C_Master_Init	;wreg free
  2310                           
  2311                           ;main.c: 609:     ADCON1 = 0b00001111;
  2312  00254C  0E0F               	movlw	15
  2313  00254E  6EC1               	movwf	4033,c	;volatile
  2314                           
  2315                           ;main.c: 612:     INT1IE = 1;
  2316  002550  86F0               	bsf	4080,3,c	;volatile
  2317                           
  2318                           ;main.c: 615:     initLCD();
  2319  002552  EC5A  F011         	call	_initLCD	;wreg free
  2320                           
  2321                           ;main.c: 618:     (INTCONbits.GIE = 1);
  2322  002556  8EF2               	bsf	4082,7,c	;volatile
  2323  002558  0012               	return		;funcret
  2324  00255A                     __end_of_robotInit:
  2325                           	opt callstack 0
  2326                           
  2327 ;; *************** function _initLCD *****************
  2328 ;; Defined at:
  2329 ;;		line 69 in file "lcd.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:        1 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    6
  2350 ;; This function calls:
  2351 ;;		_lcdInst
  2352 ;;		_send_byte
  2353 ;;		_send_nibble
  2354 ;; This function is called by:
  2355 ;;		_robotInit
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text2
  2360  0022B4                     __ptext2:
  2361                           	opt callstack 0
  2362  0022B4                     _initLCD:
  2363                           	opt callstack 23
  2364                           
  2365                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  2366                           
  2367                           ;incstack = 0
  2368  0022B4  0E31               	movlw	49
  2369  0022B6  6E0A               	movwf	??_initLCD& (0+255),c
  2370  0022B8  0EB2               	movlw	178
  2371  0022BA                     u5897:
  2372  0022BA  2EE8               	decfsz	wreg,f,c
  2373  0022BC  D7FE               	bra	u5897
  2374  0022BE  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2375  0022C0  D7FC               	bra	u5897
  2376  0022C2  D000               	nop2	
  2377                           
  2378                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  2379  0022C4  948C               	bcf	3980,2,c	;volatile
  2380                           
  2381                           ;lcd.c: 74:     send_nibble(0b0011);
  2382  0022C6  0E03               	movlw	3
  2383  0022C8  EC1B  F014         	call	_send_nibble
  2384                           
  2385                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2386  0022CC  0E11               	movlw	17
  2387  0022CE  6E0A               	movwf	??_initLCD& (0+255),c
  2388  0022D0  0E3A               	movlw	58
  2389  0022D2                     u5907:
  2390  0022D2  2EE8               	decfsz	wreg,f,c
  2391  0022D4  D7FE               	bra	u5907
  2392  0022D6  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2393  0022D8  D7FC               	bra	u5907
  2394  0022DA  D000               	nop2	
  2395                           
  2396                           ;lcd.c: 76:     send_nibble(0b0011);
  2397  0022DC  0E03               	movlw	3
  2398  0022DE  EC1B  F014         	call	_send_nibble
  2399                           
  2400                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2401  0022E2  0E7D               	movlw	125
  2402  0022E4                     u5917:
  2403  0022E4  2EE8               	decfsz	wreg,f,c
  2404  0022E6  D7FE               	bra	u5917
  2405                           
  2406                           ;lcd.c: 78:     send_byte(0b00110010);
  2407  0022E8  0E32               	movlw	50
  2408  0022EA  EC2F  F014         	call	_send_byte
  2409                           
  2410                           ;lcd.c: 80:     send_byte(0b00101000);
  2411  0022EE  0E28               	movlw	40
  2412  0022F0  EC2F  F014         	call	_send_byte
  2413                           
  2414                           ;lcd.c: 81:     send_byte(0b00001000);
  2415  0022F4  0E08               	movlw	8
  2416  0022F6  EC2F  F014         	call	_send_byte
  2417                           
  2418                           ;lcd.c: 82:     send_byte(0b00000001);
  2419  0022FA  0E01               	movlw	1
  2420  0022FC  EC2F  F014         	call	_send_byte
  2421                           
  2422                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2423  002300  0E11               	movlw	17
  2424  002302  6E0A               	movwf	??_initLCD& (0+255),c
  2425  002304  0E3A               	movlw	58
  2426  002306                     u5927:
  2427  002306  2EE8               	decfsz	wreg,f,c
  2428  002308  D7FE               	bra	u5927
  2429  00230A  2E0A               	decfsz	??_initLCD& (0+255),f,c
  2430  00230C  D7FC               	bra	u5927
  2431  00230E  D000               	nop2	
  2432                           
  2433                           ;lcd.c: 84:     send_byte(0b00000110);
  2434  002310  0E06               	movlw	6
  2435  002312  EC2F  F014         	call	_send_byte
  2436                           
  2437                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2438  002316  0E0C               	movlw	12
  2439  002318  EC3E  F014         	call	_lcdInst
  2440  00231C  0012               	return		;funcret
  2441  00231E                     __end_of_initLCD:
  2442                           	opt callstack 0
  2443                           
  2444 ;; *************** function _I2C_Master_Init *****************
  2445 ;; Defined at:
  2446 ;;		line 32 in file "I2C.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        8 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		___lldiv
  2469 ;; This function is called by:
  2470 ;;		_robotInit
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text3
  2475  002384                     __ptext3:
  2476                           	opt callstack 0
  2477  002384                     _I2C_Master_Init:
  2478                           	opt callstack 26
  2479                           
  2480                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2481                           
  2482                           ;incstack = 0
  2483  002384  9AC6               	bcf	4038,5,c	;volatile
  2484                           
  2485                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2486  002386  8694               	bsf	3988,3,c	;volatile
  2487                           
  2488                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2489  002388  8894               	bsf	3988,4,c	;volatile
  2490                           
  2491                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2492  00238A  0E80               	movlw	128
  2493  00238C  6E06               	movwf	___lldiv@dividend,c
  2494  00238E  0E96               	movlw	150
  2495  002390  6E07               	movwf	___lldiv@dividend+1,c
  2496  002392  0E98               	movlw	152
  2497  002394  6E08               	movwf	___lldiv@dividend+2,c
  2498  002396  0E00               	movlw	0
  2499  002398  6E09               	movwf	___lldiv@dividend+3,c
  2500  00239A  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2501  00239E  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2502  0023A2  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2503  0023A6  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2504  0023AA  0E02               	movlw	2
  2505  0023AC                     u4095:
  2506  0023AC  90D8               	bcf	status,0,c
  2507  0023AE  3617               	rlcf	??_I2C_Master_Init,f,c
  2508  0023B0  3618               	rlcf	??_I2C_Master_Init+1,f,c
  2509  0023B2  3619               	rlcf	??_I2C_Master_Init+2,f,c
  2510  0023B4  361A               	rlcf	??_I2C_Master_Init+3,f,c
  2511  0023B6  2EE8               	decfsz	wreg,f,c
  2512  0023B8  D7F9               	goto	u4095
  2513  0023BA  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  2514  0023BE  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2515  0023C2  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2516  0023C6  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2517  0023CA  ECA4  F010         	call	___lldiv	;wreg free
  2518  0023CE  0406               	decf	?___lldiv,w,c
  2519  0023D0  6EC8               	movwf	4040,c	;volatile
  2520                           
  2521                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2522  0023D2  0E80               	movlw	128
  2523  0023D4  6EC7               	movwf	4039,c	;volatile
  2524                           
  2525                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2526  0023D6  0E28               	movlw	40
  2527  0023D8  6EC6               	movwf	4038,c	;volatile
  2528                           
  2529                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2530  0023DA  0E00               	movlw	0
  2531  0023DC  6EC5               	movwf	4037,c	;volatile
  2532  0023DE  0012               	return		;funcret
  2533  0023E0                     __end_of_I2C_Master_Init:
  2534                           	opt callstack 0
  2535                           
  2536 ;; *************** function ___lldiv *****************
  2537 ;; Defined at:
  2538 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  dividend        4    5[COMRAM] unsigned long 
  2541 ;;  divisor         4    9[COMRAM] unsigned long 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  quotient        4   13[COMRAM] unsigned long 
  2544 ;;  counter         1   17[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  4    5[COMRAM] unsigned long 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2554 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;Total ram usage:       13 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_I2C_Master_Init
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text4
  2569  002148                     __ptext4:
  2570                           	opt callstack 0
  2571  002148                     ___lldiv:
  2572                           	opt callstack 26
  2573                           
  2574                           ;incstack = 0
  2575  002148  0E00               	movlw	0
  2576  00214A  6E0E               	movwf	___lldiv@quotient,c
  2577  00214C  0E00               	movlw	0
  2578  00214E  6E0F               	movwf	___lldiv@quotient+1,c
  2579  002150  0E00               	movlw	0
  2580  002152  6E10               	movwf	___lldiv@quotient+2,c
  2581  002154  0E00               	movlw	0
  2582  002156  6E11               	movwf	___lldiv@quotient+3,c
  2583  002158  500A               	movf	___lldiv@divisor,w,c
  2584  00215A  100B               	iorwf	___lldiv@divisor+1,w,c
  2585  00215C  100C               	iorwf	___lldiv@divisor+2,w,c
  2586  00215E  100D               	iorwf	___lldiv@divisor+3,w,c
  2587  002160  B4D8               	btfsc	status,2,c
  2588  002162  D02A               	goto	l581
  2589  002164  0E01               	movlw	1
  2590  002166  6E12               	movwf	___lldiv@counter,c
  2591  002168  D006               	goto	l4197
  2592  00216A                     l4195:
  2593  00216A  90D8               	bcf	status,0,c
  2594  00216C  360A               	rlcf	___lldiv@divisor,f,c
  2595  00216E  360B               	rlcf	___lldiv@divisor+1,f,c
  2596  002170  360C               	rlcf	___lldiv@divisor+2,f,c
  2597  002172  360D               	rlcf	___lldiv@divisor+3,f,c
  2598  002174  2A12               	incf	___lldiv@counter,f,c
  2599  002176                     l4197:
  2600  002176  AE0D               	btfss	___lldiv@divisor+3,7,c
  2601  002178  D7F8               	goto	l4195
  2602  00217A                     u4060:
  2603  00217A  90D8               	bcf	status,0,c
  2604  00217C  360E               	rlcf	___lldiv@quotient,f,c
  2605  00217E  360F               	rlcf	___lldiv@quotient+1,f,c
  2606  002180  3610               	rlcf	___lldiv@quotient+2,f,c
  2607  002182  3611               	rlcf	___lldiv@quotient+3,f,c
  2608  002184  500A               	movf	___lldiv@divisor,w,c
  2609  002186  5C06               	subwf	___lldiv@dividend,w,c
  2610  002188  500B               	movf	___lldiv@divisor+1,w,c
  2611  00218A  5807               	subwfb	___lldiv@dividend+1,w,c
  2612  00218C  500C               	movf	___lldiv@divisor+2,w,c
  2613  00218E  5808               	subwfb	___lldiv@dividend+2,w,c
  2614  002190  500D               	movf	___lldiv@divisor+3,w,c
  2615  002192  5809               	subwfb	___lldiv@dividend+3,w,c
  2616  002194  A0D8               	btfss	status,0,c
  2617  002196  D009               	goto	l4207
  2618  002198  500A               	movf	___lldiv@divisor,w,c
  2619  00219A  5E06               	subwf	___lldiv@dividend,f,c
  2620  00219C  500B               	movf	___lldiv@divisor+1,w,c
  2621  00219E  5A07               	subwfb	___lldiv@dividend+1,f,c
  2622  0021A0  500C               	movf	___lldiv@divisor+2,w,c
  2623  0021A2  5A08               	subwfb	___lldiv@dividend+2,f,c
  2624  0021A4  500D               	movf	___lldiv@divisor+3,w,c
  2625  0021A6  5A09               	subwfb	___lldiv@dividend+3,f,c
  2626  0021A8  800E               	bsf	___lldiv@quotient,0,c
  2627  0021AA                     l4207:
  2628  0021AA  90D8               	bcf	status,0,c
  2629  0021AC  320D               	rrcf	___lldiv@divisor+3,f,c
  2630  0021AE  320C               	rrcf	___lldiv@divisor+2,f,c
  2631  0021B0  320B               	rrcf	___lldiv@divisor+1,f,c
  2632  0021B2  320A               	rrcf	___lldiv@divisor,f,c
  2633  0021B4  2E12               	decfsz	___lldiv@counter,f,c
  2634  0021B6  D7E1               	goto	u4060
  2635  0021B8                     l581:
  2636  0021B8  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  2637  0021BC  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  2638  0021C0  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  2639  0021C4  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  2640  0021C8  0012               	return		;funcret
  2641  0021CA                     __end_of___lldiv:
  2642                           	opt callstack 0
  2643                           
  2644 ;; *************** function _EncoderInit *****************
  2645 ;; Defined at:
  2646 ;;		line 126 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    2
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_robotInit
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text5
  2675  002820                     __ptext5:
  2676                           	opt callstack 0
  2677  002820                     _EncoderInit:
  2678                           	opt callstack 27
  2679                           
  2680                           ;main.c: 127:   motorBDirection = 1;
  2681                           
  2682                           ;incstack = 0
  2683  002820  0E01               	movlw	1
  2684  002822  6E78               	movwf	_motorBDirection,c	;volatile
  2685                           
  2686                           ;main.c: 128:   motorADirection = 1;
  2687  002824  0E01               	movlw	1
  2688  002826  0100               	movlb	0	; () banked
  2689  002828  6FF2               	movwf	_motorADirection& (0+255),b	;volatile
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;main.c: 131:   TRISEbits.TRISE2 = 1;
  2693  00282A  8496               	bsf	3990,2,c	;volatile
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;main.c: 132:   TRISEbits.TRISE1 = 1;
  2697  00282C  8296               	bsf	3990,1,c	;volatile
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;main.c: 133:   TRISBbits.TRISB2 = 1;
  2701  00282E  8493               	bsf	3987,2,c	;volatile
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;main.c: 134:   TRISBbits.TRISB0 = 1;
  2705  002830  8093               	bsf	3987,0,c	;volatile
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;main.c: 137:   INT2IE = 1;
  2709  002832  88F0               	bsf	4080,4,c	;volatile
  2710                           
  2711                           ; BSR set to: 0
  2712  002834  0012               	return		;funcret
  2713  002836                     __end_of_EncoderInit:
  2714                           	opt callstack 0
  2715                           
  2716 ;; *************** function _replaceOldLog *****************
  2717 ;; Defined at:
  2718 ;;		line 550 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		None
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    2
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text6
  2747  0028AA                     __ptext6:
  2748                           	opt callstack 0
  2749  0028AA                     _replaceOldLog:
  2750                           	opt callstack 28
  2751                           
  2752                           ;main.c: 551:     return;
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;incstack = 0
  2756  0028AA  0012               	return		;funcret
  2757  0028AC                     __end_of_replaceOldLog:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function _doOperation *****************
  2761 ;; Defined at:
  2762 ;;		line 375 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  tiresToDrop     2   39[BANK0 ] int 
  2767 ;;  secondsMeasu    2   36[BANK0 ] int 
  2768 ;;  timeInOperat    2   33[BANK0 ] int 
  2769 ;;  motorBSpeed     2   31[BANK0 ] int 
  2770 ;;  motorASpeed     2   29[BANK0 ] int 
  2771 ;;  rightRangeFi    2    0        int 
  2772 ;;  leftRangeFin    2    0        int 
  2773 ;;  currentAngle    2    0        int 
  2774 ;;  error           2    0        int 
  2775 ;;  errorScaleFa    2    0        int 
  2776 ;;  goalSpeed       2    0        int 
  2777 ;;  fourMetreEqu    2    0        int 
  2778 ;;  minimumSafeD    2    0        int 
  2779 ;;  topLaserStat    1   42[BANK0 ] _Bool 
  2780 ;;  currentOpera    1   41[BANK0 ] enum E3286
  2781 ;;  topLaserStat    1   38[BANK0 ] _Bool 
  2782 ;;  isDoneDrop      1   35[BANK0 ] _Bool 
  2783 ;;  send            1    0        _Bool 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;Total ram usage:       29 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:   13
  2800 ;; This function calls:
  2801 ;;		_I2C_Master_Start
  2802 ;;		_I2C_Master_Stop
  2803 ;;		_I2C_Master_Write
  2804 ;;		_TIMER_INIT
  2805 ;;		_init_motor_PWM
  2806 ;;		_lcdInst
  2807 ;;		_printf
  2808 ;;		_requestIsTireDropDone
  2809 ;;		_sendArduinoTireDropRequest
  2810 ;;		_setMotorSpeeds
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text7
  2817  00127C                     __ptext7:
  2818                           	opt callstack 0
  2819  00127C                     _doOperation:
  2820                           	opt callstack 17
  2821                           
  2822                           ;main.c: 381:     I2C_Master_Start();
  2823                           
  2824                           ;incstack = 0
  2825  00127C  EC51  F014         	call	_I2C_Master_Start	;wreg free
  2826                           
  2827                           ;main.c: 382:     I2C_Master_Write(0b00010000);
  2828  001280  0E00               	movlw	0
  2829  001282  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2830  001284  0E10               	movlw	16
  2831  001286  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2832  001288  EC44  F014         	call	_I2C_Master_Write	;wreg free
  2833                           
  2834                           ;main.c: 383:     I2C_Master_Stop();
  2835  00128C  EC4D  F014         	call	_I2C_Master_Stop	;wreg free
  2836                           
  2837                           ;main.c: 388:     TIMER_INIT();
  2838  001290  ECF0  F013         	call	_TIMER_INIT	;wreg free
  2839                           
  2840                           ;main.c: 389:     secondsMeasured = 0;
  2841  001294  0E00               	movlw	0
  2842  001296  0100               	movlb	0	; () banked
  2843  001298  6FC2               	movwf	(_secondsMeasured+1)& (0+255),b	;volatile
  2844  00129A  0E00               	movlw	0
  2845  00129C  6FC1               	movwf	_secondsMeasured& (0+255),b	;volatile
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;main.c: 392:  int motorASpeed = 50;
  2849                           
  2850                           ; BSR set to: 0
  2851  00129E  0E00               	movlw	0
  2852  0012A0  6F9E               	movwf	(doOperation@motorASpeed+1)& (0+255),b
  2853  0012A2  0E32               	movlw	50
  2854  0012A4  6F9D               	movwf	doOperation@motorASpeed& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;main.c: 393:  int motorBSpeed = 50;
  2858  0012A6  0E00               	movlw	0
  2859  0012A8  6FA0               	movwf	(doOperation@motorBSpeed+1)& (0+255),b
  2860  0012AA  0E32               	movlw	50
  2861  0012AC  6F9F               	movwf	doOperation@motorBSpeed& (0+255),b
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;main.c: 398:  enum operationStates currentOperationState = moveForward;
  2865                           
  2866                           ; BSR set to: 0
  2867                           
  2868                           ; BSR set to: 0
  2869                           
  2870                           ; BSR set to: 0
  2871  0012AE  0E00               	movlw	0
  2872  0012B0  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;main.c: 401:  int tiresToDrop = 0;
  2876                           
  2877                           ; BSR set to: 0
  2878                           
  2879                           ; BSR set to: 0
  2880  0012B2  0E00               	movlw	0
  2881  0012B4  6FA8               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  2882  0012B6  0E00               	movlw	0
  2883  0012B8  6FA7               	movwf	doOperation@tiresToDrop& (0+255),b
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;main.c: 402:     int minimumSafeDistanceToPole;;main.c: 403:     int fourMetreEquivalen
      +                          t;;main.c: 404:     int timeInOperation = 20;
  2887  0012BA  0E00               	movlw	0
  2888  0012BC  6FA2               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  2889  0012BE  0E14               	movlw	20
  2890  0012C0  6FA1               	movwf	doOperation@timeInOperation& (0+255),b
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;main.c: 405:     _Bool topLaserState;;main.c: 406:     _Bool topLaserStatePrev;;main.c:
      +                           407:     _Bool isDoneDrop;;main.c: 408:     init_motor_PWM();
  2894  0012C2  EC92  F013         	call	_init_motor_PWM	;wreg free
  2895                           
  2896                           ;main.c: 411:     TRISAbits.TRISA0 = 0;
  2897  0012C6  9092               	bcf	3986,0,c	;volatile
  2898                           
  2899                           ;main.c: 412:     TRISAbits.TRISA1 = 0;
  2900  0012C8  9292               	bcf	3986,1,c	;volatile
  2901                           
  2902                           ;main.c: 414:     TRISAbits.TRISA4 = 0;
  2903  0012CA  9892               	bcf	3986,4,c	;volatile
  2904                           
  2905                           ;main.c: 417:     LATAbits.LATA4 = 1;
  2906  0012CC  8889               	bsf	3977,4,c	;volatile
  2907                           
  2908                           ;main.c: 419:     topLaserState = PORTBbits.RB4;
  2909  0012CE  A881               	btfss	3969,4,c	;volatile
  2910  0012D0  D002               	goto	u5600
  2911  0012D2  0E01               	movlw	1
  2912  0012D4  D001               	goto	u5606
  2913  0012D6                     u5600:
  2914  0012D6  0E00               	movlw	0
  2915  0012D8                     u5606:
  2916  0012D8  0100               	movlb	0	; () banked
  2917  0012DA  6FAA               	movwf	doOperation@topLaserState& (0+255),b
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;main.c: 428:     int secondsMeasuredOld = 0;
  2921                           
  2922                           ; BSR set to: 0
  2923                           
  2924                           ; BSR set to: 0
  2925  0012DC  0E00               	movlw	0
  2926  0012DE  6FA5               	movwf	(doOperation@secondsMeasuredOld+1)& (0+255),b
  2927  0012E0  0E00               	movlw	0
  2928  0012E2  6FA4               	movwf	doOperation@secondsMeasuredOld& (0+255),b
  2929  0012E4                     l5773:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;main.c: 433:         topLaserStatePrev = topLaserState;
  2933  0012E4  C0AA  F0A6         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;main.c: 434:         topLaserState = PORTBbits.RB4;
  2937  0012E8  A881               	btfss	3969,4,c	;volatile
  2938  0012EA  D002               	goto	u5610
  2939  0012EC  0E01               	movlw	1
  2940  0012EE  D001               	goto	u5616
  2941  0012F0                     u5610:
  2942  0012F0  0E00               	movlw	0
  2943  0012F2                     u5616:
  2944  0012F2  6FAA               	movwf	doOperation@topLaserState& (0+255),b
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;main.c: 435:    if (secondsMeasured > secondsMeasuredOld){
  2948  0012F4  51C1               	movf	_secondsMeasured& (0+255),w,b	;volatile
  2949  0012F6  5DA4               	subwf	doOperation@secondsMeasuredOld& (0+255),w,b
  2950  0012F8  51A5               	movf	(doOperation@secondsMeasuredOld+1)& (0+255),w,b
  2951  0012FA  0A80               	xorlw	128
  2952  0012FC  6F8E               	movwf	??_doOperation& (0+255),b
  2953  0012FE  51C2               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2954  001300  0A80               	xorlw	128
  2955  001302  598E               	subwfb	??_doOperation& (0+255),w,b
  2956  001304  B0D8               	btfsc	status,0,c
  2957  001306  D083               	goto	l5831
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;main.c: 436:             secondsMeasuredOld++;
  2961  001308  4BA4               	infsnz	doOperation@secondsMeasuredOld& (0+255),f,b
  2962  00130A  2BA5               	incf	(doOperation@secondsMeasuredOld+1)& (0+255),f,b
  2963  00130C  D080               	goto	l5831
  2964  00130E                     l5781:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 442:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2968  00130E  0E01               	movlw	1
  2969  001310  EC3E  F014         	call	_lcdInst
  2970  001314  0E11               	movlw	17
  2971  001316  0100               	movlb	0	; () banked
  2972  001318  6F8E               	movwf	??_doOperation& (0+255),b
  2973  00131A  0E3A               	movlw	58
  2974  00131C                     u5937:
  2975  00131C  2EE8               	decfsz	wreg,f,c
  2976  00131E  D7FE               	bra	u5937
  2977  001320  2F8E               	decfsz	??_doOperation& (0+255),f,b
  2978  001322  D7FC               	bra	u5937
  2979  001324  F000               	nop	
  2980                           
  2981                           ;main.c: 443:                 printf("%d", secondsMeasured);
  2982  001326  0E28               	movlw	low STR_17
  2983  001328  0100               	movlb	0	; () banked
  2984  00132A  6F82               	movwf	printf@fmt& (0+255),b
  2985  00132C  0EFD               	movlw	high STR_17
  2986  00132E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  2987  001330  C0C1  F084         	movff	_secondsMeasured,?_printf+2	;volatile
  2988  001334  C0C2  F085         	movff	_secondsMeasured+1,?_printf+3	;volatile
  2989  001338  ECA6  F013         	call	_printf	;wreg free
  2990  00133C  0E90               	movlw	144
  2991  00133E  EC3E  F014         	call	_lcdInst
  2992                           
  2993                           ;main.c: 445:                 printf("%d", topLaserState);
  2994  001342  0E28               	movlw	low STR_17
  2995  001344  0100               	movlb	0	; () banked
  2996  001346  6F82               	movwf	printf@fmt& (0+255),b
  2997  001348  0EFD               	movlw	high STR_17
  2998  00134A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  2999  00134C  C0AA  F084         	movff	doOperation@topLaserState,?_printf+2
  3000  001350  6B85               	clrf	(?_printf+3)& (0+255),b
  3001  001352  ECA6  F013         	call	_printf	;wreg free
  3002  001356  0EC0               	movlw	192
  3003  001358  EC3E  F014         	call	_lcdInst
  3004                           
  3005                           ;main.c: 447:                 printf("%d", motorBDistance);
  3006  00135C  0E28               	movlw	low STR_17
  3007  00135E  0100               	movlb	0	; () banked
  3008  001360  6F82               	movwf	printf@fmt& (0+255),b
  3009  001362  0EFD               	movlw	high STR_17
  3010  001364  6F83               	movwf	(printf@fmt+1)& (0+255),b
  3011  001366  C0C3  F084         	movff	_motorBDistance,?_printf+2	;volatile
  3012  00136A  C0C4  F085         	movff	_motorBDistance+1,?_printf+3	;volatile
  3013  00136E  ECA6  F013         	call	_printf	;wreg free
  3014                           
  3015                           ;main.c: 451:     setMotorSpeeds(motorASpeed, 1, motorBSpeed);
  3016  001372  C09D  F05A         	movff	doOperation@motorASpeed,setMotorSpeeds@motorASpeed
  3017  001376  C09E  F05B         	movff	doOperation@motorASpeed+1,setMotorSpeeds@motorASpeed+1
  3018  00137A  0E01               	movlw	1
  3019  00137C  6E5C               	movwf	setMotorSpeeds@Aforward,c
  3020  00137E  C09F  F05D         	movff	doOperation@motorBSpeed,setMotorSpeeds@motorBSpeed
  3021  001382  C0A0  F05E         	movff	doOperation@motorBSpeed+1,setMotorSpeeds@motorBSpeed+1
  3022  001386  EC61  F010         	call	_setMotorSpeeds	;wreg free
  3023                           
  3024                           ;main.c: 452:                 break;
  3025  00138A  D05B               	goto	l5833
  3026  00138C                     l5797:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 464:                 sendArduinoTireDropRequest();
  3030  00138C  ECDF  F013         	call	_sendArduinoTireDropRequest	;wreg free
  3031                           
  3032                           ;main.c: 465:                 tiresToDrop = 1;
  3033  001390  0E00               	movlw	0
  3034  001392  0100               	movlb	0	; () banked
  3035  001394  6FA8               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3036  001396  0E01               	movlw	1
  3037  001398  6FA7               	movwf	doOperation@tiresToDrop& (0+255),b
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;main.c: 466:                 currentOperationState = tireDrop;
  3041  00139A  0E02               	movlw	2
  3042  00139C  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3043                           
  3044                           ;main.c: 467:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3045  00139E  0E01               	movlw	1
  3046  0013A0  EC3E  F014         	call	_lcdInst
  3047  0013A4  0E11               	movlw	17
  3048  0013A6  0100               	movlb	0	; () banked
  3049  0013A8  6F8E               	movwf	??_doOperation& (0+255),b
  3050  0013AA  0E3A               	movlw	58
  3051  0013AC                     u5947:
  3052  0013AC  2EE8               	decfsz	wreg,f,c
  3053  0013AE  D7FE               	bra	u5947
  3054  0013B0  2F8E               	decfsz	??_doOperation& (0+255),f,b
  3055  0013B2  D7FC               	bra	u5947
  3056  0013B4  F000               	nop	
  3057                           
  3058                           ;main.c: 468:                 printf("TIRE DROP");
  3059  0013B6  0EF0               	movlw	low STR_20
  3060  0013B8  0100               	movlb	0	; () banked
  3061  0013BA  6F82               	movwf	printf@fmt& (0+255),b
  3062  0013BC  0EFC               	movlw	high STR_20
  3063  0013BE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  3064  0013C0  ECA6  F013         	call	_printf	;wreg free
  3065                           
  3066                           ;main.c: 469:     break;
  3067  0013C4  D03E               	goto	l5833
  3068  0013C6                     l5807:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;main.c: 473:     isDoneDrop = requestIsTireDropDone();
  3072  0013C6  EC01  F014         	call	_requestIsTireDropDone	;wreg free
  3073  0013CA  0100               	movlb	0	; () banked
  3074  0013CC  6FA3               	movwf	doOperation@isDoneDrop& (0+255),b
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;main.c: 475:     if (isDoneDrop){
  3078  0013CE  51A3               	movf	doOperation@isDoneDrop& (0+255),w,b
  3079  0013D0  B4D8               	btfsc	status,2,c
  3080  0013D2  D037               	goto	l5833
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 476:      tiresToDrop -- ;
  3084  0013D4  07A7               	decf	doOperation@tiresToDrop& (0+255),f,b
  3085  0013D6  A0D8               	btfss	status,0,c
  3086  0013D8  07A8               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;main.c: 477:      if (tiresToDrop == 0){
  3090  0013DA  51A7               	movf	doOperation@tiresToDrop& (0+255),w,b
  3091  0013DC  11A8               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  3092  0013DE  A4D8               	btfss	status,2,c
  3093  0013E0  D002               	goto	l5817
  3094  0013E2                     u5640:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;main.c: 478:       currentOperationState = moveForward;
  3098  0013E2  0E00               	movlw	0
  3099  0013E4  D004               	goto	L8
  3100  0013E6                     l5817:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;main.c: 481:       sendArduinoTireDropRequest();
  3104  0013E6  ECDF  F013         	call	_sendArduinoTireDropRequest	;wreg free
  3105  0013EA  D02B               	goto	l5833
  3106  0013EC                     l5821:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;main.c: 492:     currentOperationState = complete;
  3110  0013EC  0E05               	movlw	5
  3111  0013EE                     L8:
  3112  0013EE  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3113                           
  3114                           ;main.c: 493:     break;
  3115  0013F0  D028               	goto	l5833
  3116  0013F2                     l5823:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;main.c: 495:     setMotorSpeeds(0, 1, 0);
  3120  0013F2  0E00               	movlw	0
  3121  0013F4  6E5B               	movwf	setMotorSpeeds@motorASpeed+1,c
  3122  0013F6  0E00               	movlw	0
  3123  0013F8  6E5A               	movwf	setMotorSpeeds@motorASpeed,c
  3124  0013FA  0E01               	movlw	1
  3125  0013FC  6E5C               	movwf	setMotorSpeeds@Aforward,c
  3126  0013FE  0E00               	movlw	0
  3127  001400  6E5E               	movwf	setMotorSpeeds@motorBSpeed+1,c
  3128  001402  0E00               	movlw	0
  3129  001404  6E5D               	movwf	setMotorSpeeds@motorBSpeed,c
  3130  001406  EC61  F010         	call	_setMotorSpeeds	;wreg free
  3131                           
  3132                           ;main.c: 496:                 LATAbits.LATA4 = 0;
  3133  00140A  9889               	bcf	3977,4,c	;volatile
  3134  00140C  0012               	return	
  3135  00140E                     l5831:
  3136                           
  3137                           ; BSR set to: 0
  3138  00140E  51A9               	movf	doOperation@currentOperationState& (0+255),w,b
  3139  001410  6F8E               	movwf	??_doOperation& (0+255),b
  3140  001412  6B8F               	clrf	(??_doOperation+1)& (0+255),b
  3141                           
  3142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3143                           ; Switch size 1, requested type "simple"
  3144                           ; Number of cases is 1, Range of values is 0 to 0
  3145                           ; switch strategies available:
  3146                           ; Name         Instructions Cycles
  3147                           ; simple_byte            4     3 (average)
  3148                           ;	Chosen strategy is simple_byte
  3149  001414  518F               	movf	(??_doOperation+1)& (0+255),w,b
  3150  001416  0A00               	xorlw	0	; case 0
  3151  001418  A4D8               	btfss	status,2,c
  3152  00141A  D013               	goto	l5833
  3153                           
  3154                           ; BSR set to: 0
  3155                           ; Switch size 1, requested type "simple"
  3156                           ; Number of cases is 6, Range of values is 0 to 5
  3157                           ; switch strategies available:
  3158                           ; Name         Instructions Cycles
  3159                           ; simple_byte           19    10 (average)
  3160                           ;	Chosen strategy is simple_byte
  3161  00141C  518E               	movf	??_doOperation& (0+255),w,b
  3162  00141E  0A00               	xorlw	0	; case 0
  3163  001420  B4D8               	btfsc	status,2,c
  3164  001422  D775               	goto	l5781
  3165  001424  0A01               	xorlw	1	; case 1
  3166  001426  B4D8               	btfsc	status,2,c
  3167  001428  D7B1               	goto	l5797
  3168  00142A  0A03               	xorlw	3	; case 2
  3169  00142C  B4D8               	btfsc	status,2,c
  3170  00142E  D7CB               	goto	l5807
  3171  001430  0A01               	xorlw	1	; case 3
  3172  001432  B4D8               	btfsc	status,2,c
  3173  001434  D7D6               	goto	u5640
  3174  001436  0A07               	xorlw	7	; case 4
  3175  001438  B4D8               	btfsc	status,2,c
  3176  00143A  D7D8               	goto	l5821
  3177  00143C  0A01               	xorlw	1	; case 5
  3178  00143E  B4D8               	btfsc	status,2,c
  3179  001440  D7D8               	goto	l5823
  3180  001442                     l5833:
  3181                           
  3182                           ;main.c: 514:   if (secondsMeasured >= timeInOperation){
  3183  001442  0100               	movlb	0	; () banked
  3184  001444  51A1               	movf	doOperation@timeInOperation& (0+255),w,b
  3185  001446  5DC1               	subwf	_secondsMeasured& (0+255),w,b	;volatile
  3186  001448  51C2               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  3187  00144A  0A80               	xorlw	128
  3188  00144C  6F8E               	movwf	??_doOperation& (0+255),b
  3189  00144E  51A2               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  3190  001450  0A80               	xorlw	128
  3191  001452  598E               	subwfb	??_doOperation& (0+255),w,b
  3192  001454  A0D8               	btfss	status,0,c
  3193  001456  D00A               	goto	l5843
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;main.c: 515:    currentOperationState = complete;
  3197  001458  0E05               	movlw	5
  3198  00145A  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3199  00145C  D007               	goto	l5843
  3200  00145E                     l5837:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 525:                 if (topLaserStatePrev != topLaserState){
  3204  00145E  51AA               	movf	doOperation@topLaserState& (0+255),w,b
  3205  001460  19A6               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  3206  001462  B4D8               	btfsc	status,2,c
  3207  001464  D73F               	goto	l5773
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;main.c: 526:                     currentOperationState = poleFinding;
  3211  001466  0E01               	movlw	1
  3212  001468  6FA9               	movwf	doOperation@currentOperationState& (0+255),b
  3213  00146A  D73C               	goto	l5773
  3214  00146C                     l5843:
  3215                           
  3216                           ; BSR set to: 0
  3217  00146C  51A9               	movf	doOperation@currentOperationState& (0+255),w,b
  3218  00146E  6F8E               	movwf	??_doOperation& (0+255),b
  3219  001470  6B8F               	clrf	(??_doOperation+1)& (0+255),b
  3220                           
  3221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3222                           ; Switch size 1, requested type "simple"
  3223                           ; Number of cases is 1, Range of values is 0 to 0
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte            4     3 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228  001472  518F               	movf	(??_doOperation+1)& (0+255),w,b
  3229  001474  0A00               	xorlw	0	; case 0
  3230  001476  A4D8               	btfss	status,2,c
  3231  001478  D735               	goto	l5773
  3232                           
  3233                           ; BSR set to: 0
  3234                           ; Switch size 1, requested type "simple"
  3235                           ; Number of cases is 6, Range of values is 0 to 5
  3236                           ; switch strategies available:
  3237                           ; Name         Instructions Cycles
  3238                           ; simple_byte           19    10 (average)
  3239                           ;	Chosen strategy is simple_byte
  3240  00147A  518E               	movf	??_doOperation& (0+255),w,b
  3241  00147C  0A00               	xorlw	0	; case 0
  3242  00147E  B4D8               	btfsc	status,2,c
  3243  001480  D7EE               	goto	l5837
  3244  001482  0A01               	xorlw	1	; case 1
  3245  001484  B4D8               	btfsc	status,2,c
  3246  001486  D72E               	goto	l5773
  3247  001488  0A03               	xorlw	3	; case 2
  3248  00148A  B4D8               	btfsc	status,2,c
  3249  00148C  D72B               	goto	l5773
  3250  00148E  0A01               	xorlw	1	; case 3
  3251  001490  B4D8               	btfsc	status,2,c
  3252  001492  D728               	goto	l5773
  3253  001494  0A07               	xorlw	7	; case 4
  3254  001496  B4D8               	btfsc	status,2,c
  3255  001498  D725               	goto	l5773
  3256  00149A  0A01               	xorlw	1	; case 5
  3257  00149C  D723               	goto	l5773
  3258  00149E                     __end_of_doOperation:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function _setMotorSpeeds *****************
  3262 ;; Defined at:
  3263 ;;		line 271 in file "main.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  motorASpeed     2   89[COMRAM] int 
  3266 ;;  Aforward        1   91[COMRAM] _Bool 
  3267 ;;  motorBSpeed     2   92[COMRAM] int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:       13 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    4
  3286 ;; This function calls:
  3287 ;;		___xxtofl
  3288 ;;		_set_pwm_duty_cycle
  3289 ;; This function is called by:
  3290 ;;		_doOperation
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text8
  3295  0020C2                     __ptext8:
  3296                           	opt callstack 0
  3297  0020C2                     _setMotorSpeeds:
  3298                           	opt callstack 25
  3299                           
  3300                           ;main.c: 272:     if (Aforward){
  3301                           
  3302                           ;incstack = 0
  3303  0020C2  505C               	movf	setMotorSpeeds@Aforward,w,c
  3304  0020C4  B4D8               	btfsc	status,2,c
  3305  0020C6  D003               	goto	l201
  3306                           
  3307                           ;main.c: 273:         LATAbits.LATA0 = 0;
  3308  0020C8  9089               	bcf	3977,0,c	;volatile
  3309                           
  3310                           ;main.c: 274:         LATAbits.LATA1 = 1;
  3311  0020CA  8289               	bsf	3977,1,c	;volatile
  3312                           
  3313                           ;main.c: 275:     } else {
  3314  0020CC  D002               	goto	l4281
  3315  0020CE                     l201:
  3316                           
  3317                           ;main.c: 276:         LATAbits.LATA0 = 1;
  3318  0020CE  8089               	bsf	3977,0,c	;volatile
  3319                           
  3320                           ;main.c: 277:         LATAbits.LATA1 = 0;
  3321  0020D0  9289               	bcf	3977,1,c	;volatile
  3322  0020D2                     l4281:
  3323                           
  3324                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3325  0020D2  C05A  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  3326  0020D6  C05B  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  3327  0020DA  0E00               	movlw	0
  3328  0020DC  BE07               	btfsc	___xxtofl@val+1,7,c
  3329  0020DE  0EFF               	movlw	-1
  3330  0020E0  6E08               	movwf	___xxtofl@val+2,c
  3331  0020E2  6E09               	movwf	___xxtofl@val+3,c
  3332  0020E4  0E01               	movlw	1
  3333  0020E6  ECDF  F00C         	call	___xxtofl
  3334  0020EA  C006  F05F         	movff	?___xxtofl,_setMotorSpeeds$1952
  3335  0020EE  C007  F060         	movff	?___xxtofl+1,_setMotorSpeeds$1952+1
  3336  0020F2  C008  F061         	movff	?___xxtofl+2,_setMotorSpeeds$1952+2
  3337  0020F6  C009  F062         	movff	?___xxtofl+3,_setMotorSpeeds$1952+3
  3338                           
  3339                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3340  0020FA  C05D  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  3341  0020FE  C05E  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  3342  002102  0E00               	movlw	0
  3343  002104  BE07               	btfsc	___xxtofl@val+1,7,c
  3344  002106  0EFF               	movlw	-1
  3345  002108  6E08               	movwf	___xxtofl@val+2,c
  3346  00210A  6E09               	movwf	___xxtofl@val+3,c
  3347  00210C  0E01               	movlw	1
  3348  00210E  ECDF  F00C         	call	___xxtofl
  3349  002112  C006  F063         	movff	?___xxtofl,_setMotorSpeeds$1953
  3350  002116  C007  F064         	movff	?___xxtofl+1,_setMotorSpeeds$1953+1
  3351  00211A  C008  F065         	movff	?___xxtofl+2,_setMotorSpeeds$1953+2
  3352  00211E  C009  F066         	movff	?___xxtofl+3,_setMotorSpeeds$1953+3
  3353                           
  3354                           ;main.c: 280:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  3355  002122  C05F  F046         	movff	_setMotorSpeeds$1952,set_pwm_duty_cycle@dutyA
  3356  002126  C060  F047         	movff	_setMotorSpeeds$1952+1,set_pwm_duty_cycle@dutyA+1
  3357  00212A  C061  F048         	movff	_setMotorSpeeds$1952+2,set_pwm_duty_cycle@dutyA+2
  3358  00212E  C062  F049         	movff	_setMotorSpeeds$1952+3,set_pwm_duty_cycle@dutyA+3
  3359  002132  C063  F04A         	movff	_setMotorSpeeds$1953,set_pwm_duty_cycle@dutyB
  3360  002136  C064  F04B         	movff	_setMotorSpeeds$1953+1,set_pwm_duty_cycle@dutyB+1
  3361  00213A  C065  F04C         	movff	_setMotorSpeeds$1953+2,set_pwm_duty_cycle@dutyB+2
  3362  00213E  C066  F04D         	movff	_setMotorSpeeds$1953+3,set_pwm_duty_cycle@dutyB+3
  3363  002142  EC4F  F00A         	call	_set_pwm_duty_cycle	;wreg free
  3364  002146  0012               	return		;funcret
  3365  002148                     __end_of_setMotorSpeeds:
  3366                           	opt callstack 0
  3367                           
  3368 ;; *************** function _set_pwm_duty_cycle *****************
  3369 ;; Defined at:
  3370 ;;		line 241 in file "main.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  dutyA           4   69[COMRAM] float 
  3373 ;;  dutyB           4   73[COMRAM] float 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  duty_valB       2   83[COMRAM] unsigned short 
  3376 ;;  duty_valA       2   81[COMRAM] unsigned short 
  3377 ;;  max_duty_val    2   79[COMRAM] unsigned short 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:       20 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    3
  3394 ;; This function calls:
  3395 ;;		___fldiv
  3396 ;;		___flge
  3397 ;;		___flmul
  3398 ;;		___fltol
  3399 ;;		___xxtofl
  3400 ;; This function is called by:
  3401 ;;		_setMotorSpeeds
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text9
  3406  00149E                     __ptext9:
  3407                           	opt callstack 0
  3408  00149E                     _set_pwm_duty_cycle:
  3409                           	opt callstack 25
  3410                           
  3411                           ;main.c: 242:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  3412                           
  3413                           ;incstack = 0
  3414  00149E  BE49               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  3415  0014A0  0012               	return	
  3416  0014A2  0E00               	movlw	0
  3417  0014A4  6E06               	movwf	___flge@ff1,c
  3418  0014A6  0E00               	movlw	0
  3419  0014A8  6E07               	movwf	___flge@ff1+1,c
  3420  0014AA  0EC8               	movlw	200
  3421  0014AC  6E08               	movwf	___flge@ff1+2,c
  3422  0014AE  0E42               	movlw	66
  3423  0014B0  6E09               	movwf	___flge@ff1+3,c
  3424  0014B2  C046  F00A         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  3425  0014B6  C047  F00B         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  3426  0014BA  C048  F00C         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  3427  0014BE  C049  F00D         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  3428  0014C2  EC51  F00F         	call	___flge	;wreg free
  3429  0014C6  A0D8               	btfss	status,0,c
  3430  0014C8  0012               	return	
  3431  0014CA  BE4D               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  3432  0014CC  0012               	return	
  3433  0014CE  0E00               	movlw	0
  3434  0014D0  6E06               	movwf	___flge@ff1,c
  3435  0014D2  0E00               	movlw	0
  3436  0014D4  6E07               	movwf	___flge@ff1+1,c
  3437  0014D6  0EC8               	movlw	200
  3438  0014D8  6E08               	movwf	___flge@ff1+2,c
  3439  0014DA  0E42               	movlw	66
  3440  0014DC  6E09               	movwf	___flge@ff1+3,c
  3441  0014DE  C04A  F00A         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  3442  0014E2  C04B  F00B         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  3443  0014E6  C04C  F00C         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  3444  0014EA  C04D  F00D         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  3445  0014EE  EC51  F00F         	call	___flge	;wreg free
  3446  0014F2  A0D8               	btfss	status,0,c
  3447  0014F4  0012               	return	
  3448                           
  3449                           ;main.c: 247:         unsigned short max_duty_val = PR2 + 1;
  3450  0014F6  0E01               	movlw	1
  3451  0014F8  24CB               	addwf	4043,w,c	;volatile
  3452  0014FA  6E50               	movwf	set_pwm_duty_cycle@max_duty_val,c
  3453  0014FC  6A51               	clrf	set_pwm_duty_cycle@max_duty_val+1,c
  3454  0014FE  0E00               	movlw	0
  3455  001500  2251               	addwfc	set_pwm_duty_cycle@max_duty_val+1,f,c
  3456                           
  3457                           ;main.c: 253:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  3458  001502  0E00               	movlw	0
  3459  001504  6E31               	movwf	___fldiv@a,c
  3460  001506  0E00               	movlw	0
  3461  001508  6E32               	movwf	___fldiv@a+1,c
  3462  00150A  0EC8               	movlw	200
  3463  00150C  6E33               	movwf	___fldiv@a+2,c
  3464  00150E  0E42               	movlw	66
  3465  001510  6E34               	movwf	___fldiv@a+3,c
  3466  001512  0E00               	movlw	0
  3467  001514  6E18               	movwf	___flmul@a,c
  3468  001516  0E00               	movlw	0
  3469  001518  6E19               	movwf	___flmul@a+1,c
  3470  00151A  0E80               	movlw	128
  3471  00151C  6E1A               	movwf	___flmul@a+2,c
  3472  00151E  0E40               	movlw	64
  3473  001520  6E1B               	movwf	___flmul@a+3,c
  3474  001522  C046  F014         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  3475  001526  C047  F015         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  3476  00152A  C048  F016         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  3477  00152E  C049  F017         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  3478  001532  EC1A  F004         	call	___flmul	;wreg free
  3479  001536  C014  F02D         	movff	?___flmul,___fldiv@b
  3480  00153A  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3481  00153E  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3482  001542  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3483  001546  ECC3  F005         	call	___fldiv	;wreg free
  3484  00154A  C02D  F056         	movff	?___fldiv,_set_pwm_duty_cycle$1951
  3485  00154E  C02E  F057         	movff	?___fldiv+1,_set_pwm_duty_cycle$1951+1
  3486  001552  C02F  F058         	movff	?___fldiv+2,_set_pwm_duty_cycle$1951+2
  3487  001556  C030  F059         	movff	?___fldiv+3,_set_pwm_duty_cycle$1951+3
  3488                           
  3489                           ;main.c: 253:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  3490  00155A  C050  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  3491  00155E  C051  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  3492  001562  6A08               	clrf	___xxtofl@val+2,c
  3493  001564  6A09               	clrf	___xxtofl@val+3,c
  3494  001566  0E00               	movlw	0
  3495  001568  ECDF  F00C         	call	___xxtofl
  3496  00156C  C006  F018         	movff	?___xxtofl,___flmul@a
  3497  001570  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  3498  001574  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  3499  001578  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  3500  00157C  C056  F014         	movff	_set_pwm_duty_cycle$1951,___flmul@b
  3501  001580  C057  F015         	movff	_set_pwm_duty_cycle$1951+1,___flmul@b+1
  3502  001584  C058  F016         	movff	_set_pwm_duty_cycle$1951+2,___flmul@b+2
  3503  001588  C059  F017         	movff	_set_pwm_duty_cycle$1951+3,___flmul@b+3
  3504  00158C  EC1A  F004         	call	___flmul	;wreg free
  3505  001590  C014  F02D         	movff	?___flmul,___fltol@f1
  3506  001594  C015  F02E         	movff	?___flmul+1,___fltol@f1+1
  3507  001598  C016  F02F         	movff	?___flmul+2,___fltol@f1+2
  3508  00159C  C017  F030         	movff	?___flmul+3,___fltol@f1+3
  3509  0015A0  ECB9  F00F         	call	___fltol	;wreg free
  3510  0015A4  C02D  F052         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  3511  0015A8  C02E  F053         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  3512                           
  3513                           ;main.c: 254:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  3514  0015AC  0E00               	movlw	0
  3515  0015AE  6E31               	movwf	___fldiv@a,c
  3516  0015B0  0E00               	movlw	0
  3517  0015B2  6E32               	movwf	___fldiv@a+1,c
  3518  0015B4  0EC8               	movlw	200
  3519  0015B6  6E33               	movwf	___fldiv@a+2,c
  3520  0015B8  0E42               	movlw	66
  3521  0015BA  6E34               	movwf	___fldiv@a+3,c
  3522  0015BC  0E00               	movlw	0
  3523  0015BE  6E18               	movwf	___flmul@a,c
  3524  0015C0  0E00               	movlw	0
  3525  0015C2  6E19               	movwf	___flmul@a+1,c
  3526  0015C4  0E80               	movlw	128
  3527  0015C6  6E1A               	movwf	___flmul@a+2,c
  3528  0015C8  0E40               	movlw	64
  3529  0015CA  6E1B               	movwf	___flmul@a+3,c
  3530  0015CC  C04A  F014         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  3531  0015D0  C04B  F015         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  3532  0015D4  C04C  F016         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  3533  0015D8  C04D  F017         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  3534  0015DC  EC1A  F004         	call	___flmul	;wreg free
  3535  0015E0  C014  F02D         	movff	?___flmul,___fldiv@b
  3536  0015E4  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3537  0015E8  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3538  0015EC  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3539  0015F0  ECC3  F005         	call	___fldiv	;wreg free
  3540  0015F4  C02D  F056         	movff	?___fldiv,_set_pwm_duty_cycle$1951
  3541  0015F8  C02E  F057         	movff	?___fldiv+1,_set_pwm_duty_cycle$1951+1
  3542  0015FC  C02F  F058         	movff	?___fldiv+2,_set_pwm_duty_cycle$1951+2
  3543  001600  C030  F059         	movff	?___fldiv+3,_set_pwm_duty_cycle$1951+3
  3544                           
  3545                           ;main.c: 254:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  3546  001604  C050  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  3547  001608  C051  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  3548  00160C  6A08               	clrf	___xxtofl@val+2,c
  3549  00160E  6A09               	clrf	___xxtofl@val+3,c
  3550  001610  0E00               	movlw	0
  3551  001612  ECDF  F00C         	call	___xxtofl
  3552  001616  C006  F018         	movff	?___xxtofl,___flmul@a
  3553  00161A  C007  F019         	movff	?___xxtofl+1,___flmul@a+1
  3554  00161E  C008  F01A         	movff	?___xxtofl+2,___flmul@a+2
  3555  001622  C009  F01B         	movff	?___xxtofl+3,___flmul@a+3
  3556  001626  C056  F014         	movff	_set_pwm_duty_cycle$1951,___flmul@b
  3557  00162A  C057  F015         	movff	_set_pwm_duty_cycle$1951+1,___flmul@b+1
  3558  00162E  C058  F016         	movff	_set_pwm_duty_cycle$1951+2,___flmul@b+2
  3559  001632  C059  F017         	movff	_set_pwm_duty_cycle$1951+3,___flmul@b+3
  3560  001636  EC1A  F004         	call	___flmul	;wreg free
  3561  00163A  C014  F02D         	movff	?___flmul,___fltol@f1
  3562  00163E  C015  F02E         	movff	?___flmul+1,___fltol@f1+1
  3563  001642  C016  F02F         	movff	?___flmul+2,___fltol@f1+2
  3564  001646  C017  F030         	movff	?___flmul+3,___fltol@f1+3
  3565  00164A  ECB9  F00F         	call	___fltol	;wreg free
  3566  00164E  C02D  F054         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  3567  001652  C02E  F055         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  3568                           
  3569                           ;main.c: 258:         CCP1X = duty_valA & 2;
  3570  001656  9ABD               	bcf	4029,5,c	;volatile
  3571                           
  3572                           ;main.c: 259:         CCP1Y = duty_valA & 1;
  3573  001658  A052               	btfss	set_pwm_duty_cycle@duty_valA,0,c
  3574  00165A  D002               	goto	u3990
  3575  00165C  88BD               	bsf	4029,4,c	;volatile
  3576  00165E  D001               	goto	u4005
  3577  001660                     u3990:
  3578  001660  98BD               	bcf	4029,4,c	;volatile
  3579  001662                     u4005:
  3580                           
  3581                           ;main.c: 260:         CCPR1L = duty_valA >> 2;
  3582  001662  C052  F04E         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  3583  001666  C053  F04F         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  3584  00166A  90D8               	bcf	status,0,c
  3585  00166C  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3586  00166E  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3587  001670  90D8               	bcf	status,0,c
  3588  001672  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3589  001674  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3590  001676  504E               	movf	??_set_pwm_duty_cycle,w,c
  3591  001678  6EBE               	movwf	4030,c	;volatile
  3592                           
  3593                           ;main.c: 264:         CCP2X = duty_valB & 2;
  3594  00167A  9ABA               	bcf	4026,5,c	;volatile
  3595                           
  3596                           ;main.c: 265:         CCP2Y = duty_valB & 1;
  3597  00167C  A054               	btfss	set_pwm_duty_cycle@duty_valB,0,c
  3598  00167E  D002               	goto	u4010
  3599  001680  88BA               	bsf	4026,4,c	;volatile
  3600  001682  D001               	goto	u4025
  3601  001684                     u4010:
  3602  001684  98BA               	bcf	4026,4,c	;volatile
  3603  001686                     u4025:
  3604                           
  3605                           ;main.c: 266:         CCPR2L = duty_valB >> 2;
  3606  001686  C054  F04E         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  3607  00168A  C055  F04F         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  3608  00168E  90D8               	bcf	status,0,c
  3609  001690  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3610  001692  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3611  001694  90D8               	bcf	status,0,c
  3612  001696  324F               	rrcf	??_set_pwm_duty_cycle+1,f,c
  3613  001698  324E               	rrcf	??_set_pwm_duty_cycle,f,c
  3614  00169A  504E               	movf	??_set_pwm_duty_cycle,w,c
  3615  00169C  6EBB               	movwf	4027,c	;volatile
  3616  00169E  0012               	return		;funcret
  3617  0016A0                     __end_of_set_pwm_duty_cycle:
  3618                           	opt callstack 0
  3619                           
  3620 ;; *************** function ___xxtofl *****************
  3621 ;; Defined at:
  3622 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  sign            1    wreg     unsigned char 
  3625 ;;  val             4    5[COMRAM] long 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  sign            1   13[COMRAM] unsigned char 
  3628 ;;  arg             4   15[COMRAM] unsigned long 
  3629 ;;  exp             1   14[COMRAM] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  4    5[COMRAM] unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;Total ram usage:       14 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    2
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_set_pwm_duty_cycle
  3650 ;;		_setMotorSpeeds
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text10
  3655  0019BE                     __ptext10:
  3656                           	opt callstack 0
  3657  0019BE                     ___xxtofl:
  3658                           	opt callstack 25
  3659                           
  3660                           ;incstack = 0
  3661                           ;___xxtofl@sign stored from wreg
  3662  0019BE  6E0E               	movwf	___xxtofl@sign,c
  3663  0019C0  500E               	movf	___xxtofl@sign,w,c
  3664  0019C2  A4D8               	btfss	status,2,c
  3665  0019C4  AE09               	btfss	___xxtofl@val+3,7,c
  3666  0019C6  D01A               	goto	l1209
  3667  0019C8  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  3668  0019CC  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  3669  0019D0  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  3670  0019D4  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  3671  0019D8  1E0A               	comf	??___xxtofl,f,c
  3672  0019DA  1E0B               	comf	??___xxtofl+1,f,c
  3673  0019DC  1E0C               	comf	??___xxtofl+2,f,c
  3674  0019DE  1E0D               	comf	??___xxtofl+3,f,c
  3675  0019E0  2A0A               	incf	??___xxtofl,f,c
  3676  0019E2  0E00               	movlw	0
  3677  0019E4  220B               	addwfc	??___xxtofl+1,f,c
  3678  0019E6  220C               	addwfc	??___xxtofl+2,f,c
  3679  0019E8  220D               	addwfc	??___xxtofl+3,f,c
  3680  0019EA  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  3681  0019EE  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  3682  0019F2  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  3683  0019F6  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  3684  0019FA  D008               	goto	l4085
  3685  0019FC                     l1209:
  3686  0019FC  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  3687  001A00  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3688  001A04  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3689  001A08  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3690  001A0C                     l4085:
  3691  001A0C  5006               	movf	___xxtofl@val,w,c
  3692  001A0E  1007               	iorwf	___xxtofl@val+1,w,c
  3693  001A10  1008               	iorwf	___xxtofl@val+2,w,c
  3694  001A12  1009               	iorwf	___xxtofl@val+3,w,c
  3695  001A14  A4D8               	btfss	status,2,c
  3696  001A16  D009               	goto	l4091
  3697  001A18  0E00               	movlw	0
  3698  001A1A  6E06               	movwf	?___xxtofl,c
  3699  001A1C  0E00               	movlw	0
  3700  001A1E  6E07               	movwf	?___xxtofl+1,c
  3701  001A20  0E00               	movlw	0
  3702  001A22  6E08               	movwf	?___xxtofl+2,c
  3703  001A24  0E00               	movlw	0
  3704  001A26  6E09               	movwf	?___xxtofl+3,c
  3705  001A28  0012               	return	
  3706  001A2A                     l4091:
  3707  001A2A  0E96               	movlw	150
  3708  001A2C  6E0F               	movwf	___xxtofl@exp,c
  3709  001A2E  D006               	goto	l4095
  3710  001A30                     l4093:
  3711  001A30  2A0F               	incf	___xxtofl@exp,f,c
  3712  001A32  90D8               	bcf	status,0,c
  3713  001A34  3213               	rrcf	___xxtofl@arg+3,f,c
  3714  001A36  3212               	rrcf	___xxtofl@arg+2,f,c
  3715  001A38  3211               	rrcf	___xxtofl@arg+1,f,c
  3716  001A3A  3210               	rrcf	___xxtofl@arg,f,c
  3717  001A3C                     l4095:
  3718  001A3C  0E00               	movlw	0
  3719  001A3E  1410               	andwf	___xxtofl@arg,w,c
  3720  001A40  6E0A               	movwf	??___xxtofl& (0+255),c
  3721  001A42  0E00               	movlw	0
  3722  001A44  1411               	andwf	___xxtofl@arg+1,w,c
  3723  001A46  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  3724  001A48  0E00               	movlw	0
  3725  001A4A  1412               	andwf	___xxtofl@arg+2,w,c
  3726  001A4C  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  3727  001A4E  0EFE               	movlw	254
  3728  001A50  1413               	andwf	___xxtofl@arg+3,w,c
  3729  001A52  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  3730  001A54  500A               	movf	??___xxtofl,w,c
  3731  001A56  100B               	iorwf	??___xxtofl+1,w,c
  3732  001A58  100C               	iorwf	??___xxtofl+2,w,c
  3733  001A5A  100D               	iorwf	??___xxtofl+3,w,c
  3734  001A5C  B4D8               	btfsc	status,2,c
  3735  001A5E  D00D               	goto	l1216
  3736  001A60  D7E7               	goto	l4093
  3737  001A62                     l4097:
  3738  001A62  2A0F               	incf	___xxtofl@exp,f,c
  3739  001A64  0E01               	movlw	1
  3740  001A66  2610               	addwf	___xxtofl@arg,f,c
  3741  001A68  0E00               	movlw	0
  3742  001A6A  2211               	addwfc	___xxtofl@arg+1,f,c
  3743  001A6C  2212               	addwfc	___xxtofl@arg+2,f,c
  3744  001A6E  2213               	addwfc	___xxtofl@arg+3,f,c
  3745  001A70  90D8               	bcf	status,0,c
  3746  001A72  3213               	rrcf	___xxtofl@arg+3,f,c
  3747  001A74  3212               	rrcf	___xxtofl@arg+2,f,c
  3748  001A76  3211               	rrcf	___xxtofl@arg+1,f,c
  3749  001A78  3210               	rrcf	___xxtofl@arg,f,c
  3750  001A7A                     l1216:
  3751  001A7A  0E00               	movlw	0
  3752  001A7C  1410               	andwf	___xxtofl@arg,w,c
  3753  001A7E  6E0A               	movwf	??___xxtofl& (0+255),c
  3754  001A80  0E00               	movlw	0
  3755  001A82  1411               	andwf	___xxtofl@arg+1,w,c
  3756  001A84  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  3757  001A86  0E00               	movlw	0
  3758  001A88  1412               	andwf	___xxtofl@arg+2,w,c
  3759  001A8A  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  3760  001A8C  0EFF               	movlw	255
  3761  001A8E  1413               	andwf	___xxtofl@arg+3,w,c
  3762  001A90  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  3763  001A92  500A               	movf	??___xxtofl,w,c
  3764  001A94  100B               	iorwf	??___xxtofl+1,w,c
  3765  001A96  100C               	iorwf	??___xxtofl+2,w,c
  3766  001A98  100D               	iorwf	??___xxtofl+3,w,c
  3767  001A9A  B4D8               	btfsc	status,2,c
  3768  001A9C  D007               	goto	l4105
  3769  001A9E  D7E1               	goto	l4097
  3770  001AA0                     l4103:
  3771  001AA0  060F               	decf	___xxtofl@exp,f,c
  3772  001AA2  90D8               	bcf	status,0,c
  3773  001AA4  3610               	rlcf	___xxtofl@arg,f,c
  3774  001AA6  3611               	rlcf	___xxtofl@arg+1,f,c
  3775  001AA8  3612               	rlcf	___xxtofl@arg+2,f,c
  3776  001AAA  3613               	rlcf	___xxtofl@arg+3,f,c
  3777  001AAC                     l4105:
  3778  001AAC  BE12               	btfsc	___xxtofl@arg+2,7,c
  3779  001AAE  D003               	goto	u3910
  3780  001AB0  0E02               	movlw	2
  3781  001AB2  600F               	cpfslt	___xxtofl@exp,c
  3782  001AB4  D7F5               	goto	l4103
  3783  001AB6                     u3910:
  3784  001AB6  A00F               	btfss	___xxtofl@exp,0,c
  3785  001AB8  9E12               	bcf	___xxtofl@arg+2,7,c
  3786  001ABA  90D8               	bcf	status,0,c
  3787  001ABC  320F               	rrcf	___xxtofl@exp,f,c
  3788  001ABE  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  3789  001AC2  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  3790  001AC4  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  3791  001AC6  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  3792  001AC8  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  3793  001ACC  6A0C               	clrf	??___xxtofl+2,c
  3794  001ACE  6A0B               	clrf	??___xxtofl+1,c
  3795  001AD0  6A0A               	clrf	??___xxtofl,c
  3796  001AD2  500A               	movf	??___xxtofl,w,c
  3797  001AD4  1210               	iorwf	___xxtofl@arg,f,c
  3798  001AD6  500B               	movf	??___xxtofl+1,w,c
  3799  001AD8  1211               	iorwf	___xxtofl@arg+1,f,c
  3800  001ADA  500C               	movf	??___xxtofl+2,w,c
  3801  001ADC  1212               	iorwf	___xxtofl@arg+2,f,c
  3802  001ADE  500D               	movf	??___xxtofl+3,w,c
  3803  001AE0  1213               	iorwf	___xxtofl@arg+3,f,c
  3804  001AE2  500E               	movf	___xxtofl@sign,w,c
  3805  001AE4  A4D8               	btfss	status,2,c
  3806  001AE6  AE09               	btfss	___xxtofl@val+3,7,c
  3807  001AE8  D001               	goto	l4121
  3808  001AEA  8E13               	bsf	___xxtofl@arg+3,7,c
  3809  001AEC                     l4121:
  3810  001AEC  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  3811  001AF0  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  3812  001AF4  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  3813  001AF8  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  3814  001AFC  0012               	return		;funcret
  3815  001AFE                     __end_of___xxtofl:
  3816                           	opt callstack 0
  3817                           
  3818 ;; *************** function ___fltol *****************
  3819 ;; Defined at:
  3820 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  f1              4   44[COMRAM] unsigned char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  exp1            1   53[COMRAM] unsigned char 
  3825 ;;  sign1           1   52[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4   44[COMRAM] long 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:       10 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    2
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_set_pwm_duty_cycle
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text11
  3850  001F72                     __ptext11:
  3851                           	opt callstack 0
  3852  001F72                     ___fltol:
  3853                           	opt callstack 25
  3854                           
  3855                           ;incstack = 0
  3856  001F72  342F               	rlcf	___fltol@f1+2,w,c
  3857  001F74  3430               	rlcf	___fltol@f1+3,w,c
  3858  001F76  6E36               	movwf	___fltol@exp1,c
  3859  001F78  5036               	movf	___fltol@exp1,w,c
  3860  001F7A  A4D8               	btfss	status,2,c
  3861  001F7C  D009               	goto	l4041
  3862  001F7E                     u3780:
  3863  001F7E  0E00               	movlw	0
  3864  001F80  6E2D               	movwf	?___fltol,c
  3865  001F82  0E00               	movlw	0
  3866  001F84  6E2E               	movwf	?___fltol+1,c
  3867  001F86  0E00               	movlw	0
  3868  001F88  6E2F               	movwf	?___fltol+2,c
  3869  001F8A  0E00               	movlw	0
  3870  001F8C  6E30               	movwf	?___fltol+3,c
  3871  001F8E  0012               	return	
  3872  001F90                     l4041:
  3873  001F90  C02D  F031         	movff	___fltol@f1,??___fltol
  3874  001F94  C02E  F032         	movff	___fltol@f1+1,??___fltol+1
  3875  001F98  C02F  F033         	movff	___fltol@f1+2,??___fltol+2
  3876  001F9C  C030  F034         	movff	___fltol@f1+3,??___fltol+3
  3877  001FA0  0E20               	movlw	32
  3878  001FA2  D005               	goto	u3790
  3879  001FA4                     u3795:
  3880  001FA4  90D8               	bcf	status,0,c
  3881  001FA6  3234               	rrcf	??___fltol+3,f,c
  3882  001FA8  3233               	rrcf	??___fltol+2,f,c
  3883  001FAA  3232               	rrcf	??___fltol+1,f,c
  3884  001FAC  3231               	rrcf	??___fltol,f,c
  3885  001FAE                     u3790:
  3886  001FAE  2EE8               	decfsz	wreg,f,c
  3887  001FB0  D7F9               	goto	u3795
  3888  001FB2  5031               	movf	??___fltol,w,c
  3889  001FB4  6E35               	movwf	___fltol@sign1,c
  3890  001FB6  8E2F               	bsf	___fltol@f1+2,7,c
  3891  001FB8  0EFF               	movlw	255
  3892  001FBA  162D               	andwf	___fltol@f1,f,c
  3893  001FBC  0EFF               	movlw	255
  3894  001FBE  162E               	andwf	___fltol@f1+1,f,c
  3895  001FC0  0EFF               	movlw	255
  3896  001FC2  162F               	andwf	___fltol@f1+2,f,c
  3897  001FC4  0E00               	movlw	0
  3898  001FC6  1630               	andwf	___fltol@f1+3,f,c
  3899  001FC8  0E96               	movlw	150
  3900  001FCA  5E36               	subwf	___fltol@exp1,f,c
  3901  001FCC  AE36               	btfss	___fltol@exp1,7,c
  3902  001FCE  D00D               	goto	l4061
  3903  001FD0  5036               	movf	___fltol@exp1,w,c
  3904  001FD2  0A80               	xorlw	128
  3905  001FD4  0F97               	addlw	151
  3906  001FD6  A0D8               	btfss	status,0,c
  3907  001FD8  D7D2               	goto	u3780
  3908  001FDA                     l4057:
  3909  001FDA  90D8               	bcf	status,0,c
  3910  001FDC  3230               	rrcf	___fltol@f1+3,f,c
  3911  001FDE  322F               	rrcf	___fltol@f1+2,f,c
  3912  001FE0  322E               	rrcf	___fltol@f1+1,f,c
  3913  001FE2  322D               	rrcf	___fltol@f1,f,c
  3914  001FE4  3E36               	incfsz	___fltol@exp1,f,c
  3915  001FE6  D7F9               	goto	l4057
  3916  001FE8  D00D               	goto	u3830
  3917  001FEA                     l4061:
  3918  001FEA  0E1F               	movlw	31
  3919  001FEC  6436               	cpfsgt	___fltol@exp1,c
  3920  001FEE  D007               	goto	l4069
  3921  001FF0  D7C6               	goto	u3780
  3922  001FF2                     l4067:
  3923  001FF2  90D8               	bcf	status,0,c
  3924  001FF4  362D               	rlcf	___fltol@f1,f,c
  3925  001FF6  362E               	rlcf	___fltol@f1+1,f,c
  3926  001FF8  362F               	rlcf	___fltol@f1+2,f,c
  3927  001FFA  3630               	rlcf	___fltol@f1+3,f,c
  3928  001FFC  0636               	decf	___fltol@exp1,f,c
  3929  001FFE                     l4069:
  3930  001FFE  5036               	movf	___fltol@exp1,w,c
  3931  002000  A4D8               	btfss	status,2,c
  3932  002002  D7F7               	goto	l4067
  3933  002004                     u3830:
  3934  002004  5035               	movf	___fltol@sign1,w,c
  3935  002006  B4D8               	btfsc	status,2,c
  3936  002008  D008               	goto	l4075
  3937  00200A  1E30               	comf	___fltol@f1+3,f,c
  3938  00200C  1E2F               	comf	___fltol@f1+2,f,c
  3939  00200E  1E2E               	comf	___fltol@f1+1,f,c
  3940  002010  6C2D               	negf	___fltol@f1,c
  3941  002012  0E00               	movlw	0
  3942  002014  222E               	addwfc	___fltol@f1+1,f,c
  3943  002016  222F               	addwfc	___fltol@f1+2,f,c
  3944  002018  2230               	addwfc	___fltol@f1+3,f,c
  3945  00201A                     l4075:
  3946  00201A  C02D  F02D         	movff	___fltol@f1,?___fltol
  3947  00201E  C02E  F02E         	movff	___fltol@f1+1,?___fltol+1
  3948  002022  C02F  F02F         	movff	___fltol@f1+2,?___fltol+2
  3949  002026  C030  F030         	movff	___fltol@f1+3,?___fltol+3
  3950  00202A  0012               	return		;funcret
  3951  00202C                     __end_of___fltol:
  3952                           	opt callstack 0
  3953                           
  3954 ;; *************** function ___flmul *****************
  3955 ;; Defined at:
  3956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  b               4   19[COMRAM] long 
  3959 ;;  a               4   23[COMRAM] long 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  prod            4   38[COMRAM] struct .
  3962 ;;  grs             4   32[COMRAM] unsigned long 
  3963 ;;  temp            2   42[COMRAM] struct .
  3964 ;;  bexp            1   37[COMRAM] unsigned char 
  3965 ;;  aexp            1   36[COMRAM] unsigned char 
  3966 ;;  sign            1   31[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  4   19[COMRAM] unsigned char 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, prodl, prodh
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3976 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;Total ram usage:       25 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_set_pwm_duty_cycle
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text12
  3991  000834                     __ptext12:
  3992                           	opt callstack 0
  3993  000834                     ___flmul:
  3994                           	opt callstack 25
  3995                           
  3996                           ;incstack = 0
  3997  000834  5017               	movf	___flmul@b+3,w,c
  3998  000836  0B80               	andlw	128
  3999  000838  6E20               	movwf	___flmul@sign,c
  4000  00083A  5017               	movf	___flmul@b+3,w,c
  4001  00083C  2417               	addwf	___flmul@b+3,w,c
  4002  00083E  6E26               	movwf	___flmul@bexp,c
  4003  000840  BE16               	btfsc	___flmul@b+2,7,c
  4004  000842  8026               	bsf	___flmul@bexp,0,c
  4005  000844  5026               	movf	___flmul@bexp,w,c
  4006  000846  B4D8               	btfsc	status,2,c
  4007  000848  D00D               	goto	l3897
  4008  00084A  2826               	incf	___flmul@bexp,w,c
  4009  00084C  A4D8               	btfss	status,2,c
  4010  00084E  D008               	goto	l3895
  4011  000850  0E00               	movlw	0
  4012  000852  6E14               	movwf	___flmul@b,c
  4013  000854  0E00               	movlw	0
  4014  000856  6E15               	movwf	___flmul@b+1,c
  4015  000858  0E00               	movlw	0
  4016  00085A  6E16               	movwf	___flmul@b+2,c
  4017  00085C  0E00               	movlw	0
  4018  00085E  6E17               	movwf	___flmul@b+3,c
  4019  000860                     l3895:
  4020  000860  8E16               	bsf	___flmul@b+2,7,c
  4021  000862  D008               	goto	l3899
  4022  000864                     l3897:
  4023  000864  0E00               	movlw	0
  4024  000866  6E14               	movwf	___flmul@b,c
  4025  000868  0E00               	movlw	0
  4026  00086A  6E15               	movwf	___flmul@b+1,c
  4027  00086C  0E00               	movlw	0
  4028  00086E  6E16               	movwf	___flmul@b+2,c
  4029  000870  0E00               	movlw	0
  4030  000872  6E17               	movwf	___flmul@b+3,c
  4031  000874                     l3899:
  4032  000874  501B               	movf	___flmul@a+3,w,c
  4033  000876  0B80               	andlw	128
  4034  000878  1A20               	xorwf	___flmul@sign,f,c
  4035  00087A  501B               	movf	___flmul@a+3,w,c
  4036  00087C  241B               	addwf	___flmul@a+3,w,c
  4037  00087E  6E25               	movwf	___flmul@aexp,c
  4038  000880  BE1A               	btfsc	___flmul@a+2,7,c
  4039  000882  8025               	bsf	___flmul@aexp,0,c
  4040  000884  5025               	movf	___flmul@aexp,w,c
  4041  000886  B4D8               	btfsc	status,2,c
  4042  000888  D00D               	goto	l3915
  4043  00088A  2825               	incf	___flmul@aexp,w,c
  4044  00088C  A4D8               	btfss	status,2,c
  4045  00088E  D008               	goto	l3913
  4046  000890  0E00               	movlw	0
  4047  000892  6E18               	movwf	___flmul@a,c
  4048  000894  0E00               	movlw	0
  4049  000896  6E19               	movwf	___flmul@a+1,c
  4050  000898  0E00               	movlw	0
  4051  00089A  6E1A               	movwf	___flmul@a+2,c
  4052  00089C  0E00               	movlw	0
  4053  00089E  6E1B               	movwf	___flmul@a+3,c
  4054  0008A0                     l3913:
  4055  0008A0  8E1A               	bsf	___flmul@a+2,7,c
  4056  0008A2  D008               	goto	l1168
  4057  0008A4                     l3915:
  4058  0008A4  0E00               	movlw	0
  4059  0008A6  6E18               	movwf	___flmul@a,c
  4060  0008A8  0E00               	movlw	0
  4061  0008AA  6E19               	movwf	___flmul@a+1,c
  4062  0008AC  0E00               	movlw	0
  4063  0008AE  6E1A               	movwf	___flmul@a+2,c
  4064  0008B0  0E00               	movlw	0
  4065  0008B2  6E1B               	movwf	___flmul@a+3,c
  4066  0008B4                     l1168:
  4067  0008B4  5025               	movf	___flmul@aexp,w,c
  4068  0008B6  B4D8               	btfsc	status,2,c
  4069  0008B8  D003               	goto	u3610
  4070  0008BA  5026               	movf	___flmul@bexp,w,c
  4071  0008BC  A4D8               	btfss	status,2,c
  4072  0008BE  D009               	goto	l3923
  4073  0008C0                     u3610:
  4074  0008C0  0E00               	movlw	0
  4075  0008C2  6E14               	movwf	?___flmul,c
  4076  0008C4  0E00               	movlw	0
  4077  0008C6  6E15               	movwf	?___flmul+1,c
  4078  0008C8  0E00               	movlw	0
  4079  0008CA  6E16               	movwf	?___flmul+2,c
  4080  0008CC  0E00               	movlw	0
  4081  0008CE  6E17               	movwf	?___flmul+3,c
  4082  0008D0  0012               	return	
  4083  0008D2                     l3923:
  4084  0008D2  501A               	movf	___flmul@a+2,w,c
  4085  0008D4  0214               	mulwf	___flmul@b,c
  4086  0008D6  CFF3 F02B          	movff	prodl,___flmul@temp
  4087  0008DA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4088  0008DE  502B               	movf	___flmul@temp,w,c
  4089  0008E0  6E21               	movwf	___flmul@grs,c
  4090  0008E2  6A22               	clrf	___flmul@grs+1,c
  4091  0008E4  6A23               	clrf	___flmul@grs+2,c
  4092  0008E6  6A24               	clrf	___flmul@grs+3,c
  4093  0008E8  502C               	movf	___flmul@temp+1,w,c
  4094  0008EA  6E27               	movwf	___flmul@prod,c
  4095  0008EC  6A28               	clrf	___flmul@prod+1,c
  4096  0008EE  6A29               	clrf	___flmul@prod+2,c
  4097  0008F0  6A2A               	clrf	___flmul@prod+3,c
  4098  0008F2  5019               	movf	___flmul@a+1,w,c
  4099  0008F4  0215               	mulwf	___flmul@b+1,c
  4100  0008F6  CFF3 F02B          	movff	prodl,___flmul@temp
  4101  0008FA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4102  0008FE  502B               	movf	___flmul@temp,w,c
  4103  000900  2621               	addwf	___flmul@grs,f,c
  4104  000902  0E00               	movlw	0
  4105  000904  2222               	addwfc	___flmul@grs+1,f,c
  4106  000906  2223               	addwfc	___flmul@grs+2,f,c
  4107  000908  2224               	addwfc	___flmul@grs+3,f,c
  4108  00090A  502C               	movf	___flmul@temp+1,w,c
  4109  00090C  2627               	addwf	___flmul@prod,f,c
  4110  00090E  0E00               	movlw	0
  4111  000910  2228               	addwfc	___flmul@prod+1,f,c
  4112  000912  2229               	addwfc	___flmul@prod+2,f,c
  4113  000914  222A               	addwfc	___flmul@prod+3,f,c
  4114  000916  5018               	movf	___flmul@a,w,c
  4115  000918  0216               	mulwf	___flmul@b+2,c
  4116  00091A  CFF3 F02B          	movff	prodl,___flmul@temp
  4117  00091E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4118  000922  502B               	movf	___flmul@temp,w,c
  4119  000924  2621               	addwf	___flmul@grs,f,c
  4120  000926  0E00               	movlw	0
  4121  000928  2222               	addwfc	___flmul@grs+1,f,c
  4122  00092A  2223               	addwfc	___flmul@grs+2,f,c
  4123  00092C  2224               	addwfc	___flmul@grs+3,f,c
  4124  00092E  502C               	movf	___flmul@temp+1,w,c
  4125  000930  2627               	addwf	___flmul@prod,f,c
  4126  000932  0E00               	movlw	0
  4127  000934  2228               	addwfc	___flmul@prod+1,f,c
  4128  000936  2229               	addwfc	___flmul@prod+2,f,c
  4129  000938  222A               	addwfc	___flmul@prod+3,f,c
  4130  00093A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4131  00093E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4132  000942  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4133  000946  6A21               	clrf	___flmul@grs,c
  4134  000948  5018               	movf	___flmul@a,w,c
  4135  00094A  0215               	mulwf	___flmul@b+1,c
  4136  00094C  CFF3 F02B          	movff	prodl,___flmul@temp
  4137  000950  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4138  000954  502B               	movf	___flmul@temp,w,c
  4139  000956  2621               	addwf	___flmul@grs,f,c
  4140  000958  502C               	movf	___flmul@temp+1,w,c
  4141  00095A  2222               	addwfc	___flmul@grs+1,f,c
  4142  00095C  0E00               	movlw	0
  4143  00095E  2223               	addwfc	___flmul@grs+2,f,c
  4144  000960  0E00               	movlw	0
  4145  000962  2224               	addwfc	___flmul@grs+3,f,c
  4146  000964  5019               	movf	___flmul@a+1,w,c
  4147  000966  0214               	mulwf	___flmul@b,c
  4148  000968  CFF3 F02B          	movff	prodl,___flmul@temp
  4149  00096C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4150  000970  502B               	movf	___flmul@temp,w,c
  4151  000972  2621               	addwf	___flmul@grs,f,c
  4152  000974  502C               	movf	___flmul@temp+1,w,c
  4153  000976  2222               	addwfc	___flmul@grs+1,f,c
  4154  000978  0E00               	movlw	0
  4155  00097A  2223               	addwfc	___flmul@grs+2,f,c
  4156  00097C  0E00               	movlw	0
  4157  00097E  2224               	addwfc	___flmul@grs+3,f,c
  4158  000980  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4159  000984  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4160  000988  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4161  00098C  6A21               	clrf	___flmul@grs,c
  4162  00098E  5018               	movf	___flmul@a,w,c
  4163  000990  0214               	mulwf	___flmul@b,c
  4164  000992  CFF3 F02B          	movff	prodl,___flmul@temp
  4165  000996  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4166  00099A  502B               	movf	___flmul@temp,w,c
  4167  00099C  2621               	addwf	___flmul@grs,f,c
  4168  00099E  502C               	movf	___flmul@temp+1,w,c
  4169  0009A0  2222               	addwfc	___flmul@grs+1,f,c
  4170  0009A2  0E00               	movlw	0
  4171  0009A4  2223               	addwfc	___flmul@grs+2,f,c
  4172  0009A6  0E00               	movlw	0
  4173  0009A8  2224               	addwfc	___flmul@grs+3,f,c
  4174  0009AA  501A               	movf	___flmul@a+2,w,c
  4175  0009AC  0215               	mulwf	___flmul@b+1,c
  4176  0009AE  CFF3 F02B          	movff	prodl,___flmul@temp
  4177  0009B2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4178  0009B6  502B               	movf	___flmul@temp,w,c
  4179  0009B8  2627               	addwf	___flmul@prod,f,c
  4180  0009BA  502C               	movf	___flmul@temp+1,w,c
  4181  0009BC  2228               	addwfc	___flmul@prod+1,f,c
  4182  0009BE  0E00               	movlw	0
  4183  0009C0  2229               	addwfc	___flmul@prod+2,f,c
  4184  0009C2  0E00               	movlw	0
  4185  0009C4  222A               	addwfc	___flmul@prod+3,f,c
  4186  0009C6  5019               	movf	___flmul@a+1,w,c
  4187  0009C8  0216               	mulwf	___flmul@b+2,c
  4188  0009CA  CFF3 F02B          	movff	prodl,___flmul@temp
  4189  0009CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4190  0009D2  502B               	movf	___flmul@temp,w,c
  4191  0009D4  2627               	addwf	___flmul@prod,f,c
  4192  0009D6  502C               	movf	___flmul@temp+1,w,c
  4193  0009D8  2228               	addwfc	___flmul@prod+1,f,c
  4194  0009DA  0E00               	movlw	0
  4195  0009DC  2229               	addwfc	___flmul@prod+2,f,c
  4196  0009DE  0E00               	movlw	0
  4197  0009E0  222A               	addwfc	___flmul@prod+3,f,c
  4198  0009E2  501A               	movf	___flmul@a+2,w,c
  4199  0009E4  0216               	mulwf	___flmul@b+2,c
  4200  0009E6  CFF3 F02B          	movff	prodl,___flmul@temp
  4201  0009EA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  4202  0009EE  502B               	movf	___flmul@temp,w,c
  4203  0009F0  6E1C               	movwf	??___flmul& (0+255),c
  4204  0009F2  502C               	movf	___flmul@temp+1,w,c
  4205  0009F4  6E1D               	movwf	(??___flmul+1)& (0+255),c
  4206  0009F6  6A1E               	clrf	(??___flmul+2)& (0+255),c
  4207  0009F8  6A1F               	clrf	(??___flmul+3)& (0+255),c
  4208  0009FA  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  4209  0009FE  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  4210  000A02  C01C  F01D         	movff	??___flmul,??___flmul+1
  4211  000A06  6A1C               	clrf	??___flmul,c
  4212  000A08  501C               	movf	??___flmul,w,c
  4213  000A0A  2627               	addwf	___flmul@prod,f,c
  4214  000A0C  501D               	movf	??___flmul+1,w,c
  4215  000A0E  2228               	addwfc	___flmul@prod+1,f,c
  4216  000A10  501E               	movf	??___flmul+2,w,c
  4217  000A12  2229               	addwfc	___flmul@prod+2,f,c
  4218  000A14  501F               	movf	??___flmul+3,w,c
  4219  000A16  222A               	addwfc	___flmul@prod+3,f,c
  4220  000A18  C021  F01C         	movff	___flmul@grs,??___flmul
  4221  000A1C  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  4222  000A20  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  4223  000A24  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  4224  000A28  0E19               	movlw	25
  4225  000A2A  D005               	goto	u3620
  4226  000A2C                     u3625:
  4227  000A2C  90D8               	bcf	status,0,c
  4228  000A2E  321F               	rrcf	??___flmul+3,f,c
  4229  000A30  321E               	rrcf	??___flmul+2,f,c
  4230  000A32  321D               	rrcf	??___flmul+1,f,c
  4231  000A34  321C               	rrcf	??___flmul,f,c
  4232  000A36                     u3620:
  4233  000A36  2EE8               	decfsz	wreg,f,c
  4234  000A38  D7F9               	goto	u3625
  4235  000A3A  501C               	movf	??___flmul,w,c
  4236  000A3C  2627               	addwf	___flmul@prod,f,c
  4237  000A3E  501D               	movf	??___flmul+1,w,c
  4238  000A40  2228               	addwfc	___flmul@prod+1,f,c
  4239  000A42  501E               	movf	??___flmul+2,w,c
  4240  000A44  2229               	addwfc	___flmul@prod+2,f,c
  4241  000A46  501F               	movf	??___flmul+3,w,c
  4242  000A48  222A               	addwfc	___flmul@prod+3,f,c
  4243  000A4A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  4244  000A4E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  4245  000A52  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  4246  000A56  6A21               	clrf	___flmul@grs,c
  4247  000A58  5025               	movf	___flmul@aexp,w,c
  4248  000A5A  C026  F01C         	movff	___flmul@bexp,??___flmul
  4249  000A5E  6A1D               	clrf	(??___flmul+1)& (0+255),c
  4250  000A60  261C               	addwf	??___flmul,f,c
  4251  000A62  0E00               	movlw	0
  4252  000A64  221D               	addwfc	??___flmul+1,f,c
  4253  000A66  0E82               	movlw	130
  4254  000A68  241C               	addwf	??___flmul,w,c
  4255  000A6A  6E2B               	movwf	___flmul@temp,c
  4256  000A6C  0EFF               	movlw	255
  4257  000A6E  201D               	addwfc	??___flmul+1,w,c
  4258  000A70  6E2C               	movwf	___flmul@temp+1,c
  4259  000A72  D00F               	goto	l3971
  4260  000A74                     l3965:
  4261  000A74  90D8               	bcf	status,0,c
  4262  000A76  3627               	rlcf	___flmul@prod,f,c
  4263  000A78  3628               	rlcf	___flmul@prod+1,f,c
  4264  000A7A  3629               	rlcf	___flmul@prod+2,f,c
  4265  000A7C  362A               	rlcf	___flmul@prod+3,f,c
  4266  000A7E  BE24               	btfsc	___flmul@grs+3,7,c
  4267  000A80  8027               	bsf	___flmul@prod,0,c
  4268  000A82  90D8               	bcf	status,0,c
  4269  000A84  3621               	rlcf	___flmul@grs,f,c
  4270  000A86  3622               	rlcf	___flmul@grs+1,f,c
  4271  000A88  3623               	rlcf	___flmul@grs+2,f,c
  4272  000A8A  3624               	rlcf	___flmul@grs+3,f,c
  4273  000A8C  062B               	decf	___flmul@temp,f,c
  4274  000A8E  A0D8               	btfss	status,0,c
  4275  000A90  062C               	decf	___flmul@temp+1,f,c
  4276  000A92                     l3971:
  4277  000A92  AE29               	btfss	___flmul@prod+2,7,c
  4278  000A94  D7EF               	goto	l3965
  4279  000A96  0E00               	movlw	0
  4280  000A98  6E25               	movwf	___flmul@aexp,c
  4281  000A9A  AE24               	btfss	___flmul@grs+3,7,c
  4282  000A9C  D017               	goto	l1177
  4283  000A9E  0EFF               	movlw	255
  4284  000AA0  1421               	andwf	___flmul@grs,w,c
  4285  000AA2  6E1C               	movwf	??___flmul& (0+255),c
  4286  000AA4  0EFF               	movlw	255
  4287  000AA6  1422               	andwf	___flmul@grs+1,w,c
  4288  000AA8  6E1D               	movwf	(??___flmul+1)& (0+255),c
  4289  000AAA  0EFF               	movlw	255
  4290  000AAC  1423               	andwf	___flmul@grs+2,w,c
  4291  000AAE  6E1E               	movwf	(??___flmul+2)& (0+255),c
  4292  000AB0  0E7F               	movlw	127
  4293  000AB2  1424               	andwf	___flmul@grs+3,w,c
  4294  000AB4  6E1F               	movwf	(??___flmul+3)& (0+255),c
  4295  000AB6  501C               	movf	??___flmul,w,c
  4296  000AB8  101D               	iorwf	??___flmul+1,w,c
  4297  000ABA  101E               	iorwf	??___flmul+2,w,c
  4298  000ABC  101F               	iorwf	??___flmul+3,w,c
  4299  000ABE  B4D8               	btfsc	status,2,c
  4300  000AC0  D003               	goto	l1178
  4301  000AC2                     u3660:
  4302  000AC2  0E01               	movlw	1
  4303  000AC4  6E25               	movwf	___flmul@aexp,c
  4304  000AC6  D002               	goto	l1177
  4305  000AC8                     l1178:
  4306  000AC8  B027               	btfsc	___flmul@prod,0,c
  4307  000ACA  D7FB               	goto	u3660
  4308  000ACC                     l1177:
  4309  000ACC  5025               	movf	___flmul@aexp,w,c
  4310  000ACE  B4D8               	btfsc	status,2,c
  4311  000AD0  D01F               	goto	l3991
  4312  000AD2  0E01               	movlw	1
  4313  000AD4  2627               	addwf	___flmul@prod,f,c
  4314  000AD6  0E00               	movlw	0
  4315  000AD8  2228               	addwfc	___flmul@prod+1,f,c
  4316  000ADA  2229               	addwfc	___flmul@prod+2,f,c
  4317  000ADC  222A               	addwfc	___flmul@prod+3,f,c
  4318  000ADE  A02A               	btfss	___flmul@prod+3,0,c
  4319  000AE0  D017               	goto	l3991
  4320  000AE2  C027  F01C         	movff	___flmul@prod,??___flmul
  4321  000AE6  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  4322  000AEA  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  4323  000AEE  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  4324  000AF2  341F               	rlcf	??___flmul+3,w,c
  4325  000AF4  321F               	rrcf	??___flmul+3,f,c
  4326  000AF6  321E               	rrcf	??___flmul+2,f,c
  4327  000AF8  321D               	rrcf	??___flmul+1,f,c
  4328  000AFA  321C               	rrcf	??___flmul,f,c
  4329  000AFC  C01C  F027         	movff	??___flmul,___flmul@prod
  4330  000B00  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  4331  000B04  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  4332  000B08  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  4333  000B0C  4A2B               	infsnz	___flmul@temp,f,c
  4334  000B0E  2A2C               	incf	___flmul@temp+1,f,c
  4335  000B10                     l3991:
  4336  000B10  BE2C               	btfsc	___flmul@temp+1,7,c
  4337  000B12  D00D               	goto	l3995
  4338  000B14  502C               	movf	___flmul@temp+1,w,c
  4339  000B16  E103               	bnz	u3700
  4340  000B18  282B               	incf	___flmul@temp,w,c
  4341  000B1A  A0D8               	btfss	status,0,c
  4342  000B1C  D008               	goto	l3995
  4343  000B1E                     u3700:
  4344  000B1E  0E00               	movlw	0
  4345  000B20  6E27               	movwf	___flmul@prod,c
  4346  000B22  0E00               	movlw	0
  4347  000B24  6E28               	movwf	___flmul@prod+1,c
  4348  000B26  0E80               	movlw	128
  4349  000B28  6E29               	movwf	___flmul@prod+2,c
  4350  000B2A  0E7F               	movlw	127
  4351  000B2C  D020               	goto	L9
  4352  000B2E                     l3995:
  4353  000B2E  BE2C               	btfsc	___flmul@temp+1,7,c
  4354  000B30  D005               	goto	u3710
  4355  000B32  502C               	movf	___flmul@temp+1,w,c
  4356  000B34  E10E               	bnz	l1185
  4357  000B36  042B               	decf	___flmul@temp,w,c
  4358  000B38  B0D8               	btfsc	status,0,c
  4359  000B3A  D00B               	goto	l1185
  4360  000B3C                     u3710:
  4361  000B3C  0E00               	movlw	0
  4362  000B3E  6E27               	movwf	___flmul@prod,c
  4363  000B40  0E00               	movlw	0
  4364  000B42  6E28               	movwf	___flmul@prod+1,c
  4365  000B44  0E00               	movlw	0
  4366  000B46  6E29               	movwf	___flmul@prod+2,c
  4367  000B48  0E00               	movlw	0
  4368  000B4A  6E2A               	movwf	___flmul@prod+3,c
  4369  000B4C  0E00               	movlw	0
  4370  000B4E  6E20               	movwf	___flmul@sign,c
  4371  000B50  D00F               	goto	l4007
  4372  000B52                     l1185:
  4373  000B52  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  4374  000B56  0EFF               	movlw	255
  4375  000B58  1627               	andwf	___flmul@prod,f,c
  4376  000B5A  0EFF               	movlw	255
  4377  000B5C  1628               	andwf	___flmul@prod+1,f,c
  4378  000B5E  0E7F               	movlw	127
  4379  000B60  1629               	andwf	___flmul@prod+2,f,c
  4380  000B62  0E00               	movlw	0
  4381  000B64  162A               	andwf	___flmul@prod+3,f,c
  4382  000B66  B026               	btfsc	___flmul@bexp,0,c
  4383  000B68  8E29               	bsf	___flmul@prod+2,7,c
  4384  000B6A  90D8               	bcf	status,0,c
  4385  000B6C  3026               	rrcf	___flmul@bexp,w,c
  4386  000B6E                     L9:
  4387  000B6E  6E2A               	movwf	___flmul@prod+3,c
  4388  000B70                     l4007:
  4389  000B70  5020               	movf	___flmul@sign,w,c
  4390  000B72  122A               	iorwf	___flmul@prod+3,f,c
  4391  000B74  C027  F014         	movff	___flmul@prod,?___flmul
  4392  000B78  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  4393  000B7C  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  4394  000B80  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  4395  000B84  0012               	return		;funcret
  4396  000B86                     __end_of___flmul:
  4397                           	opt callstack 0
  4398                           
  4399 ;; *************** function ___flge *****************
  4400 ;; Defined at:
  4401 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  ff1             4    5[COMRAM] unsigned char 
  4404 ;;  ff2             4    9[COMRAM] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;		None               void
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:       12 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    2
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_set_pwm_duty_cycle
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text13
  4431  001EA2                     __ptext13:
  4432                           	opt callstack 0
  4433  001EA2                     ___flge:
  4434                           	opt callstack 25
  4435                           
  4436                           ;incstack = 0
  4437  001EA2  0E00               	movlw	0
  4438  001EA4  1406               	andwf	___flge@ff1,w,c
  4439  001EA6  6E0E               	movwf	??___flge& (0+255),c
  4440  001EA8  0E00               	movlw	0
  4441  001EAA  1407               	andwf	___flge@ff1+1,w,c
  4442  001EAC  6E0F               	movwf	(??___flge+1)& (0+255),c
  4443  001EAE  0E80               	movlw	128
  4444  001EB0  1408               	andwf	___flge@ff1+2,w,c
  4445  001EB2  6E10               	movwf	(??___flge+2)& (0+255),c
  4446  001EB4  0E7F               	movlw	127
  4447  001EB6  1409               	andwf	___flge@ff1+3,w,c
  4448  001EB8  6E11               	movwf	(??___flge+3)& (0+255),c
  4449  001EBA  500E               	movf	??___flge,w,c
  4450  001EBC  100F               	iorwf	??___flge+1,w,c
  4451  001EBE  1010               	iorwf	??___flge+2,w,c
  4452  001EC0  1011               	iorwf	??___flge+3,w,c
  4453  001EC2  A4D8               	btfss	status,2,c
  4454  001EC4  D008               	goto	l4017
  4455  001EC6  0E00               	movlw	0
  4456  001EC8  6E06               	movwf	___flge@ff1,c
  4457  001ECA  0E00               	movlw	0
  4458  001ECC  6E07               	movwf	___flge@ff1+1,c
  4459  001ECE  0E00               	movlw	0
  4460  001ED0  6E08               	movwf	___flge@ff1+2,c
  4461  001ED2  0E00               	movlw	0
  4462  001ED4  6E09               	movwf	___flge@ff1+3,c
  4463  001ED6                     l4017:
  4464  001ED6  0E00               	movlw	0
  4465  001ED8  140A               	andwf	___flge@ff2,w,c
  4466  001EDA  6E0E               	movwf	??___flge& (0+255),c
  4467  001EDC  0E00               	movlw	0
  4468  001EDE  140B               	andwf	___flge@ff2+1,w,c
  4469  001EE0  6E0F               	movwf	(??___flge+1)& (0+255),c
  4470  001EE2  0E80               	movlw	128
  4471  001EE4  140C               	andwf	___flge@ff2+2,w,c
  4472  001EE6  6E10               	movwf	(??___flge+2)& (0+255),c
  4473  001EE8  0E7F               	movlw	127
  4474  001EEA  140D               	andwf	___flge@ff2+3,w,c
  4475  001EEC  6E11               	movwf	(??___flge+3)& (0+255),c
  4476  001EEE  500E               	movf	??___flge,w,c
  4477  001EF0  100F               	iorwf	??___flge+1,w,c
  4478  001EF2  1010               	iorwf	??___flge+2,w,c
  4479  001EF4  1011               	iorwf	??___flge+3,w,c
  4480  001EF6  A4D8               	btfss	status,2,c
  4481  001EF8  D008               	goto	l4021
  4482  001EFA  0E00               	movlw	0
  4483  001EFC  6E0A               	movwf	___flge@ff2,c
  4484  001EFE  0E00               	movlw	0
  4485  001F00  6E0B               	movwf	___flge@ff2+1,c
  4486  001F02  0E00               	movlw	0
  4487  001F04  6E0C               	movwf	___flge@ff2+2,c
  4488  001F06  0E00               	movlw	0
  4489  001F08  6E0D               	movwf	___flge@ff2+3,c
  4490  001F0A                     l4021:
  4491  001F0A  AE09               	btfss	___flge@ff1+3,7,c
  4492  001F0C  D009               	goto	l4025
  4493  001F0E  6C06               	negf	___flge@ff1,c
  4494  001F10  1E07               	comf	___flge@ff1+1,f,c
  4495  001F12  B0D8               	btfsc	status,0,c
  4496  001F14  2A07               	incf	___flge@ff1+1,f,c
  4497  001F16  1E08               	comf	___flge@ff1+2,f,c
  4498  001F18  B0D8               	btfsc	status,0,c
  4499  001F1A  2A08               	incf	___flge@ff1+2,f,c
  4500  001F1C  0E80               	movlw	128
  4501  001F1E  5609               	subfwb	___flge@ff1+3,f,c
  4502  001F20                     l4025:
  4503  001F20  AE0D               	btfss	___flge@ff2+3,7,c
  4504  001F22  D009               	goto	l819
  4505  001F24  6C0A               	negf	___flge@ff2,c
  4506  001F26  1E0B               	comf	___flge@ff2+1,f,c
  4507  001F28  B0D8               	btfsc	status,0,c
  4508  001F2A  2A0B               	incf	___flge@ff2+1,f,c
  4509  001F2C  1E0C               	comf	___flge@ff2+2,f,c
  4510  001F2E  B0D8               	btfsc	status,0,c
  4511  001F30  2A0C               	incf	___flge@ff2+2,f,c
  4512  001F32  0E80               	movlw	128
  4513  001F34  560D               	subfwb	___flge@ff2+3,f,c
  4514  001F36                     l819:
  4515  001F36  0E00               	movlw	0
  4516  001F38  1A06               	xorwf	___flge@ff1,f,c
  4517  001F3A  0E00               	movlw	0
  4518  001F3C  1A07               	xorwf	___flge@ff1+1,f,c
  4519  001F3E  0E00               	movlw	0
  4520  001F40  1A08               	xorwf	___flge@ff1+2,f,c
  4521  001F42  0E80               	movlw	128
  4522  001F44  1A09               	xorwf	___flge@ff1+3,f,c
  4523  001F46  0E00               	movlw	0
  4524  001F48  1A0A               	xorwf	___flge@ff2,f,c
  4525  001F4A  0E00               	movlw	0
  4526  001F4C  1A0B               	xorwf	___flge@ff2+1,f,c
  4527  001F4E  0E00               	movlw	0
  4528  001F50  1A0C               	xorwf	___flge@ff2+2,f,c
  4529  001F52  0E80               	movlw	128
  4530  001F54  1A0D               	xorwf	___flge@ff2+3,f,c
  4531  001F56  500A               	movf	___flge@ff2,w,c
  4532  001F58  5C06               	subwf	___flge@ff1,w,c
  4533  001F5A  500B               	movf	___flge@ff2+1,w,c
  4534  001F5C  5807               	subwfb	___flge@ff1+1,w,c
  4535  001F5E  500C               	movf	___flge@ff2+2,w,c
  4536  001F60  5808               	subwfb	___flge@ff1+2,w,c
  4537  001F62  500D               	movf	___flge@ff2+3,w,c
  4538  001F64  5809               	subwfb	___flge@ff1+3,w,c
  4539  001F66  B0D8               	btfsc	status,0,c
  4540  001F68  D002               	goto	l4031
  4541  001F6A  90D8               	bcf	status,0,c
  4542  001F6C  0012               	return	
  4543  001F6E                     l4031:
  4544  001F6E  80D8               	bsf	status,0,c
  4545  001F70  0012               	return		;funcret
  4546  001F72                     __end_of___flge:
  4547                           	opt callstack 0
  4548                           
  4549 ;; *************** function ___fldiv *****************
  4550 ;; Defined at:
  4551 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  b               4   44[COMRAM] unsigned char 
  4554 ;;  a               4   48[COMRAM] unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  grs             4   63[COMRAM] unsigned long 
  4557 ;;  rem             4   56[COMRAM] unsigned long 
  4558 ;;  new_exp         2   61[COMRAM] short 
  4559 ;;  aexp            1   68[COMRAM] unsigned char 
  4560 ;;  bexp            1   67[COMRAM] unsigned char 
  4561 ;;  sign            1   60[COMRAM] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4   44[COMRAM] unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:       25 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    2
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_set_pwm_duty_cycle
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text14
  4586  000B86                     __ptext14:
  4587                           	opt callstack 0
  4588  000B86                     ___fldiv:
  4589                           	opt callstack 25
  4590                           
  4591                           ;incstack = 0
  4592  000B86  5030               	movf	___fldiv@b+3,w,c
  4593  000B88  0B80               	andlw	128
  4594  000B8A  6E3D               	movwf	___fldiv@sign,c
  4595  000B8C  5030               	movf	___fldiv@b+3,w,c
  4596  000B8E  2430               	addwf	___fldiv@b+3,w,c
  4597  000B90  6E44               	movwf	___fldiv@bexp,c
  4598  000B92  BE2F               	btfsc	___fldiv@b+2,7,c
  4599  000B94  8044               	bsf	___fldiv@bexp,0,c
  4600  000B96  5044               	movf	___fldiv@bexp,w,c
  4601  000B98  B4D8               	btfsc	status,2,c
  4602  000B9A  D00D               	goto	l3761
  4603  000B9C  2844               	incf	___fldiv@bexp,w,c
  4604  000B9E  A4D8               	btfss	status,2,c
  4605  000BA0  D008               	goto	l3757
  4606  000BA2  0E00               	movlw	0
  4607  000BA4  6E2D               	movwf	___fldiv@b,c
  4608  000BA6  0E00               	movlw	0
  4609  000BA8  6E2E               	movwf	___fldiv@b+1,c
  4610  000BAA  0E00               	movlw	0
  4611  000BAC  6E2F               	movwf	___fldiv@b+2,c
  4612  000BAE  0E00               	movlw	0
  4613  000BB0  6E30               	movwf	___fldiv@b+3,c
  4614  000BB2                     l3757:
  4615  000BB2  8E2F               	bsf	___fldiv@b+2,7,c
  4616  000BB4  D006               	goto	L10
  4617  000BB6                     l3761:
  4618  000BB6  0E00               	movlw	0
  4619  000BB8  6E2D               	movwf	___fldiv@b,c
  4620  000BBA  0E00               	movlw	0
  4621  000BBC  6E2E               	movwf	___fldiv@b+1,c
  4622  000BBE  0E00               	movlw	0
  4623  000BC0  6E2F               	movwf	___fldiv@b+2,c
  4624  000BC2                     L10:
  4625  000BC2  0E00               	movlw	0
  4626  000BC4  6E30               	movwf	___fldiv@b+3,c
  4627  000BC6  5034               	movf	___fldiv@a+3,w,c
  4628  000BC8  0B80               	andlw	128
  4629  000BCA  1A3D               	xorwf	___fldiv@sign,f,c
  4630  000BCC  5034               	movf	___fldiv@a+3,w,c
  4631  000BCE  2434               	addwf	___fldiv@a+3,w,c
  4632  000BD0  6E45               	movwf	___fldiv@aexp,c
  4633  000BD2  BE33               	btfsc	___fldiv@a+2,7,c
  4634  000BD4  8045               	bsf	___fldiv@aexp,0,c
  4635  000BD6  5045               	movf	___fldiv@aexp,w,c
  4636  000BD8  B4D8               	btfsc	status,2,c
  4637  000BDA  D00D               	goto	l3781
  4638  000BDC  2845               	incf	___fldiv@aexp,w,c
  4639  000BDE  A4D8               	btfss	status,2,c
  4640  000BE0  D008               	goto	l3777
  4641  000BE2  0E00               	movlw	0
  4642  000BE4  6E31               	movwf	___fldiv@a,c
  4643  000BE6  0E00               	movlw	0
  4644  000BE8  6E32               	movwf	___fldiv@a+1,c
  4645  000BEA  0E00               	movlw	0
  4646  000BEC  6E33               	movwf	___fldiv@a+2,c
  4647  000BEE  0E00               	movlw	0
  4648  000BF0  6E34               	movwf	___fldiv@a+3,c
  4649  000BF2                     l3777:
  4650  000BF2  8E33               	bsf	___fldiv@a+2,7,c
  4651  000BF4  D006               	goto	L11
  4652  000BF6                     l3781:
  4653  000BF6  0E00               	movlw	0
  4654  000BF8  6E31               	movwf	___fldiv@a,c
  4655  000BFA  0E00               	movlw	0
  4656  000BFC  6E32               	movwf	___fldiv@a+1,c
  4657  000BFE  0E00               	movlw	0
  4658  000C00  6E33               	movwf	___fldiv@a+2,c
  4659  000C02                     L11:
  4660  000C02  0E00               	movlw	0
  4661  000C04  6E34               	movwf	___fldiv@a+3,c
  4662  000C06  5031               	movf	___fldiv@a,w,c
  4663  000C08  1032               	iorwf	___fldiv@a+1,w,c
  4664  000C0A  1033               	iorwf	___fldiv@a+2,w,c
  4665  000C0C  1034               	iorwf	___fldiv@a+3,w,c
  4666  000C0E  A4D8               	btfss	status,2,c
  4667  000C10  D017               	goto	l3795
  4668  000C12  0E00               	movlw	0
  4669  000C14  6E2D               	movwf	___fldiv@b,c
  4670  000C16  0E00               	movlw	0
  4671  000C18  6E2E               	movwf	___fldiv@b+1,c
  4672  000C1A  0E00               	movlw	0
  4673  000C1C  6E2F               	movwf	___fldiv@b+2,c
  4674  000C1E  0E00               	movlw	0
  4675  000C20  6E30               	movwf	___fldiv@b+3,c
  4676  000C22  0E80               	movlw	128
  4677  000C24  122F               	iorwf	___fldiv@b+2,f,c
  4678  000C26  0E7F               	movlw	127
  4679  000C28  1230               	iorwf	___fldiv@b+3,f,c
  4680  000C2A                     l3789:
  4681  000C2A  503D               	movf	___fldiv@sign,w,c
  4682  000C2C  1230               	iorwf	___fldiv@b+3,f,c
  4683  000C2E  C02D  F02D         	movff	___fldiv@b,?___fldiv
  4684  000C32  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  4685  000C36  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  4686  000C3A  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  4687  000C3E  0012               	return	
  4688  000C40                     l3795:
  4689  000C40  5044               	movf	___fldiv@bexp,w,c
  4690  000C42  A4D8               	btfss	status,2,c
  4691  000C44  D009               	goto	l3803
  4692  000C46  0E00               	movlw	0
  4693  000C48  6E2D               	movwf	?___fldiv,c
  4694  000C4A  0E00               	movlw	0
  4695  000C4C  6E2E               	movwf	?___fldiv+1,c
  4696  000C4E  0E00               	movlw	0
  4697  000C50  6E2F               	movwf	?___fldiv+2,c
  4698  000C52  0E00               	movlw	0
  4699  000C54  6E30               	movwf	?___fldiv+3,c
  4700  000C56  0012               	return	
  4701  000C58                     l3803:
  4702  000C58  5045               	movf	___fldiv@aexp,w,c
  4703  000C5A  C044  F035         	movff	___fldiv@bexp,??___fldiv
  4704  000C5E  6A36               	clrf	(??___fldiv+1)& (0+255),c
  4705  000C60  5E35               	subwf	??___fldiv,f,c
  4706  000C62  0E00               	movlw	0
  4707  000C64  5A36               	subwfb	??___fldiv+1,f,c
  4708  000C66  0E7F               	movlw	127
  4709  000C68  2435               	addwf	??___fldiv,w,c
  4710  000C6A  6E3E               	movwf	___fldiv@new_exp,c
  4711  000C6C  0E00               	movlw	0
  4712  000C6E  2036               	addwfc	??___fldiv+1,w,c
  4713  000C70  6E3F               	movwf	___fldiv@new_exp+1,c
  4714  000C72  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  4715  000C76  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  4716  000C7A  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  4717  000C7E  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  4718  000C82  0E00               	movlw	0
  4719  000C84  6E2D               	movwf	___fldiv@b,c
  4720  000C86  0E00               	movlw	0
  4721  000C88  6E2E               	movwf	___fldiv@b+1,c
  4722  000C8A  0E00               	movlw	0
  4723  000C8C  6E2F               	movwf	___fldiv@b+2,c
  4724  000C8E  0E00               	movlw	0
  4725  000C90  6E30               	movwf	___fldiv@b+3,c
  4726  000C92  0E00               	movlw	0
  4727  000C94  6E40               	movwf	___fldiv@grs,c
  4728  000C96  0E00               	movlw	0
  4729  000C98  6E41               	movwf	___fldiv@grs+1,c
  4730  000C9A  0E00               	movlw	0
  4731  000C9C  6E42               	movwf	___fldiv@grs+2,c
  4732  000C9E  0E00               	movlw	0
  4733  000CA0  6E43               	movwf	___fldiv@grs+3,c
  4734  000CA2  0E00               	movlw	0
  4735  000CA4  6E45               	movwf	___fldiv@aexp,c
  4736  000CA6  D028               	goto	l1138
  4737  000CA8                     l3813:
  4738  000CA8  5045               	movf	___fldiv@aexp,w,c
  4739  000CAA  B4D8               	btfsc	status,2,c
  4740  000CAC  D011               	goto	l3821
  4741  000CAE  90D8               	bcf	status,0,c
  4742  000CB0  3639               	rlcf	___fldiv@rem,f,c
  4743  000CB2  363A               	rlcf	___fldiv@rem+1,f,c
  4744  000CB4  363B               	rlcf	___fldiv@rem+2,f,c
  4745  000CB6  363C               	rlcf	___fldiv@rem+3,f,c
  4746  000CB8  90D8               	bcf	status,0,c
  4747  000CBA  362D               	rlcf	___fldiv@b,f,c
  4748  000CBC  362E               	rlcf	___fldiv@b+1,f,c
  4749  000CBE  362F               	rlcf	___fldiv@b+2,f,c
  4750  000CC0  3630               	rlcf	___fldiv@b+3,f,c
  4751  000CC2  BE43               	btfsc	___fldiv@grs+3,7,c
  4752  000CC4  802D               	bsf	___fldiv@b,0,c
  4753  000CC6  90D8               	bcf	status,0,c
  4754  000CC8  3640               	rlcf	___fldiv@grs,f,c
  4755  000CCA  3641               	rlcf	___fldiv@grs+1,f,c
  4756  000CCC  3642               	rlcf	___fldiv@grs+2,f,c
  4757  000CCE  3643               	rlcf	___fldiv@grs+3,f,c
  4758  000CD0                     l3821:
  4759  000CD0  5031               	movf	___fldiv@a,w,c
  4760  000CD2  5C39               	subwf	___fldiv@rem,w,c
  4761  000CD4  5032               	movf	___fldiv@a+1,w,c
  4762  000CD6  583A               	subwfb	___fldiv@rem+1,w,c
  4763  000CD8  5033               	movf	___fldiv@a+2,w,c
  4764  000CDA  583B               	subwfb	___fldiv@rem+2,w,c
  4765  000CDC  5034               	movf	___fldiv@a+3,w,c
  4766  000CDE  583C               	subwfb	___fldiv@rem+3,w,c
  4767  000CE0  A0D8               	btfss	status,0,c
  4768  000CE2  D009               	goto	l3827
  4769  000CE4  8C43               	bsf	___fldiv@grs+3,6,c
  4770  000CE6  5031               	movf	___fldiv@a,w,c
  4771  000CE8  5E39               	subwf	___fldiv@rem,f,c
  4772  000CEA  5032               	movf	___fldiv@a+1,w,c
  4773  000CEC  5A3A               	subwfb	___fldiv@rem+1,f,c
  4774  000CEE  5033               	movf	___fldiv@a+2,w,c
  4775  000CF0  5A3B               	subwfb	___fldiv@rem+2,f,c
  4776  000CF2  5034               	movf	___fldiv@a+3,w,c
  4777  000CF4  5A3C               	subwfb	___fldiv@rem+3,f,c
  4778  000CF6                     l3827:
  4779  000CF6  2A45               	incf	___fldiv@aexp,f,c
  4780  000CF8                     l1138:
  4781  000CF8  0E19               	movlw	25
  4782  000CFA  6445               	cpfsgt	___fldiv@aexp,c
  4783  000CFC  D7D5               	goto	l3813
  4784  000CFE  5039               	movf	___fldiv@rem,w,c
  4785  000D00  103A               	iorwf	___fldiv@rem+1,w,c
  4786  000D02  103B               	iorwf	___fldiv@rem+2,w,c
  4787  000D04  103C               	iorwf	___fldiv@rem+3,w,c
  4788  000D06  B4D8               	btfsc	status,2,c
  4789  000D08  D011               	goto	l3839
  4790  000D0A  8040               	bsf	___fldiv@grs,0,c
  4791  000D0C  D00F               	goto	l3839
  4792  000D0E                     l3833:
  4793  000D0E  90D8               	bcf	status,0,c
  4794  000D10  362D               	rlcf	___fldiv@b,f,c
  4795  000D12  362E               	rlcf	___fldiv@b+1,f,c
  4796  000D14  362F               	rlcf	___fldiv@b+2,f,c
  4797  000D16  3630               	rlcf	___fldiv@b+3,f,c
  4798  000D18  BE43               	btfsc	___fldiv@grs+3,7,c
  4799  000D1A  802D               	bsf	___fldiv@b,0,c
  4800  000D1C  90D8               	bcf	status,0,c
  4801  000D1E  3640               	rlcf	___fldiv@grs,f,c
  4802  000D20  3641               	rlcf	___fldiv@grs+1,f,c
  4803  000D22  3642               	rlcf	___fldiv@grs+2,f,c
  4804  000D24  3643               	rlcf	___fldiv@grs+3,f,c
  4805  000D26  063E               	decf	___fldiv@new_exp,f,c
  4806  000D28  A0D8               	btfss	status,0,c
  4807  000D2A  063F               	decf	___fldiv@new_exp+1,f,c
  4808  000D2C                     l3839:
  4809  000D2C  AE2F               	btfss	___fldiv@b+2,7,c
  4810  000D2E  D7EF               	goto	l3833
  4811  000D30  0E00               	movlw	0
  4812  000D32  6E45               	movwf	___fldiv@aexp,c
  4813  000D34  AE43               	btfss	___fldiv@grs+3,7,c
  4814  000D36  D017               	goto	l1149
  4815  000D38  0EFF               	movlw	255
  4816  000D3A  1440               	andwf	___fldiv@grs,w,c
  4817  000D3C  6E35               	movwf	??___fldiv& (0+255),c
  4818  000D3E  0EFF               	movlw	255
  4819  000D40  1441               	andwf	___fldiv@grs+1,w,c
  4820  000D42  6E36               	movwf	(??___fldiv+1)& (0+255),c
  4821  000D44  0EFF               	movlw	255
  4822  000D46  1442               	andwf	___fldiv@grs+2,w,c
  4823  000D48  6E37               	movwf	(??___fldiv+2)& (0+255),c
  4824  000D4A  0E7F               	movlw	127
  4825  000D4C  1443               	andwf	___fldiv@grs+3,w,c
  4826  000D4E  6E38               	movwf	(??___fldiv+3)& (0+255),c
  4827  000D50  5035               	movf	??___fldiv,w,c
  4828  000D52  1036               	iorwf	??___fldiv+1,w,c
  4829  000D54  1037               	iorwf	??___fldiv+2,w,c
  4830  000D56  1038               	iorwf	??___fldiv+3,w,c
  4831  000D58  B4D8               	btfsc	status,2,c
  4832  000D5A  D003               	goto	l1150
  4833  000D5C                     u3470:
  4834  000D5C  0E01               	movlw	1
  4835  000D5E  6E45               	movwf	___fldiv@aexp,c
  4836  000D60  D002               	goto	l1149
  4837  000D62                     l1150:
  4838  000D62  B02D               	btfsc	___fldiv@b,0,c
  4839  000D64  D7FB               	goto	u3470
  4840  000D66                     l1149:
  4841  000D66  5045               	movf	___fldiv@aexp,w,c
  4842  000D68  B4D8               	btfsc	status,2,c
  4843  000D6A  D01F               	goto	l3859
  4844  000D6C  0E01               	movlw	1
  4845  000D6E  262D               	addwf	___fldiv@b,f,c
  4846  000D70  0E00               	movlw	0
  4847  000D72  222E               	addwfc	___fldiv@b+1,f,c
  4848  000D74  222F               	addwfc	___fldiv@b+2,f,c
  4849  000D76  2230               	addwfc	___fldiv@b+3,f,c
  4850  000D78  A030               	btfss	___fldiv@b+3,0,c
  4851  000D7A  D017               	goto	l3859
  4852  000D7C  C02D  F035         	movff	___fldiv@b,??___fldiv
  4853  000D80  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  4854  000D84  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  4855  000D88  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  4856  000D8C  3438               	rlcf	??___fldiv+3,w,c
  4857  000D8E  3238               	rrcf	??___fldiv+3,f,c
  4858  000D90  3237               	rrcf	??___fldiv+2,f,c
  4859  000D92  3236               	rrcf	??___fldiv+1,f,c
  4860  000D94  3235               	rrcf	??___fldiv,f,c
  4861  000D96  C035  F02D         	movff	??___fldiv,___fldiv@b
  4862  000D9A  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  4863  000D9E  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  4864  000DA2  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  4865  000DA6  4A3E               	infsnz	___fldiv@new_exp,f,c
  4866  000DA8  2A3F               	incf	___fldiv@new_exp+1,f,c
  4867  000DAA                     l3859:
  4868  000DAA  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  4869  000DAC  D010               	goto	l3863
  4870  000DAE  503F               	movf	___fldiv@new_exp+1,w,c
  4871  000DB0  E103               	bnz	u3510
  4872  000DB2  283E               	incf	___fldiv@new_exp,w,c
  4873  000DB4  A0D8               	btfss	status,0,c
  4874  000DB6  D00B               	goto	l3863
  4875  000DB8                     u3510:
  4876  000DB8  0E00               	movlw	0
  4877  000DBA  6E3F               	movwf	___fldiv@new_exp+1,c
  4878  000DBC  683E               	setf	___fldiv@new_exp,c
  4879  000DBE  0E00               	movlw	0
  4880  000DC0  6E2D               	movwf	___fldiv@b,c
  4881  000DC2  0E00               	movlw	0
  4882  000DC4  6E2E               	movwf	___fldiv@b+1,c
  4883  000DC6  0E00               	movlw	0
  4884  000DC8  6E2F               	movwf	___fldiv@b+2,c
  4885  000DCA  0E00               	movlw	0
  4886  000DCC  6E30               	movwf	___fldiv@b+3,c
  4887  000DCE                     l3863:
  4888  000DCE  BE3F               	btfsc	___fldiv@new_exp+1,7,c
  4889  000DD0  D005               	goto	u3520
  4890  000DD2  503F               	movf	___fldiv@new_exp+1,w,c
  4891  000DD4  E111               	bnz	l3867
  4892  000DD6  043E               	decf	___fldiv@new_exp,w,c
  4893  000DD8  B0D8               	btfsc	status,0,c
  4894  000DDA  D00E               	goto	l3867
  4895  000DDC                     u3520:
  4896  000DDC  0E00               	movlw	0
  4897  000DDE  6E3F               	movwf	___fldiv@new_exp+1,c
  4898  000DE0  0E00               	movlw	0
  4899  000DE2  6E3E               	movwf	___fldiv@new_exp,c
  4900  000DE4  0E00               	movlw	0
  4901  000DE6  6E2D               	movwf	___fldiv@b,c
  4902  000DE8  0E00               	movlw	0
  4903  000DEA  6E2E               	movwf	___fldiv@b+1,c
  4904  000DEC  0E00               	movlw	0
  4905  000DEE  6E2F               	movwf	___fldiv@b+2,c
  4906  000DF0  0E00               	movlw	0
  4907  000DF2  6E30               	movwf	___fldiv@b+3,c
  4908  000DF4  0E00               	movlw	0
  4909  000DF6  6E3D               	movwf	___fldiv@sign,c
  4910  000DF8                     l3867:
  4911  000DF8  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  4912  000DFC  A044               	btfss	___fldiv@bexp,0,c
  4913  000DFE  D002               	goto	l3873
  4914  000E00  8E2F               	bsf	___fldiv@b+2,7,c
  4915  000E02  D001               	goto	l3875
  4916  000E04                     l3873:
  4917  000E04  9E2F               	bcf	___fldiv@b+2,7,c
  4918  000E06                     l3875:
  4919  000E06  90D8               	bcf	status,0,c
  4920  000E08  3044               	rrcf	___fldiv@bexp,w,c
  4921  000E0A  6E30               	movwf	___fldiv@b+3,c
  4922  000E0C  D70E               	goto	l3789
  4923  000E0E                     __end_of___fldiv:
  4924                           	opt callstack 0
  4925                           
  4926 ;; *************** function _sendArduinoTireDropRequest *****************
  4927 ;; Defined at:
  4928 ;;		line 293 in file "main.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  data            1    0        unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;Total ram usage:        1 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    4
  4949 ;; This function calls:
  4950 ;;		_I2C_Master_Start
  4951 ;;		_I2C_Master_Stop
  4952 ;;		_I2C_Master_Write
  4953 ;; This function is called by:
  4954 ;;		_doOperation
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text15
  4959  0027BE                     __ptext15:
  4960                           	opt callstack 0
  4961  0027BE                     _sendArduinoTireDropRequest:
  4962                           	opt callstack 25
  4963                           
  4964                           ;main.c: 300:     I2C_Master_Start();
  4965                           
  4966                           ;incstack = 0
  4967  0027BE  EC51  F014         	call	_I2C_Master_Start	;wreg free
  4968                           
  4969                           ;main.c: 301:     I2C_Master_Write(0b00010000);
  4970  0027C2  0E00               	movlw	0
  4971  0027C4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4972  0027C6  0E10               	movlw	16
  4973  0027C8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4974  0027CA  EC44  F014         	call	_I2C_Master_Write	;wreg free
  4975                           
  4976                           ;main.c: 302:     I2C_Master_Write(data);
  4977  0027CE  0E00               	movlw	0
  4978  0027D0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  4979  0027D2  0E31               	movlw	49
  4980  0027D4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  4981  0027D6  EC44  F014         	call	_I2C_Master_Write	;wreg free
  4982                           
  4983                           ;main.c: 303:     I2C_Master_Stop();
  4984  0027DA  EC4D  F014         	call	_I2C_Master_Stop	;wreg free
  4985  0027DE  0012               	return		;funcret
  4986  0027E0                     __end_of_sendArduinoTireDropRequest:
  4987                           	opt callstack 0
  4988                           
  4989 ;; *************** function _requestIsTireDropDone *****************
  4990 ;; Defined at:
  4991 ;;		line 352 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  data            1    0        unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      _Bool 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    4
  5012 ;; This function calls:
  5013 ;;		_I2C_Master_Read
  5014 ;;		_I2C_Master_Start
  5015 ;;		_I2C_Master_Stop
  5016 ;;		_I2C_Master_Write
  5017 ;; This function is called by:
  5018 ;;		_doOperation
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text16
  5023  002802                     __ptext16:
  5024                           	opt callstack 0
  5025  002802                     _requestIsTireDropDone:
  5026                           	opt callstack 25
  5027                           
  5028                           ;main.c: 353:     I2C_Master_Start();
  5029                           
  5030                           ;incstack = 0
  5031  002802  EC51  F014         	call	_I2C_Master_Start	;wreg free
  5032                           
  5033                           ;main.c: 354:     I2C_Master_Write(0b00010001);
  5034  002806  0E00               	movlw	0
  5035  002808  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  5036  00280A  0E11               	movlw	17
  5037  00280C  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  5038  00280E  EC44  F014         	call	_I2C_Master_Write	;wreg free
  5039  002812  0E01               	movlw	1
  5040  002814  ECCD  F013         	call	_I2C_Master_Read
  5041                           
  5042                           ;main.c: 356:     I2C_Master_Stop();
  5043  002818  EC4D  F014         	call	_I2C_Master_Stop	;wreg free
  5044                           
  5045                           ;main.c: 358:         return 1;
  5046  00281C  0E01               	movlw	1
  5047  00281E  0012               	return		;funcret
  5048  002820                     __end_of_requestIsTireDropDone:
  5049                           	opt callstack 0
  5050                           
  5051 ;; *************** function _I2C_Master_Write *****************
  5052 ;; Defined at:
  5053 ;;		line 70 in file "I2C.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;Total ram usage:        2 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    3
  5074 ;; This function calls:
  5075 ;;		_I2C_Master_Wait
  5076 ;; This function is called by:
  5077 ;;		_sendArduinoTireDropRequest
  5078 ;;		_requestIsTireDropDone
  5079 ;;		_doOperation
  5080 ;;		_main
  5081 ;;		_rtc_set_time
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text17
  5086  002888                     __ptext17:
  5087                           	opt callstack 0
  5088  002888                     _I2C_Master_Write:
  5089                           	opt callstack 25
  5090                           
  5091                           ;I2C.c: 71:     I2C_Master_Wait();
  5092                           
  5093                           ;incstack = 0
  5094  002888  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5095                           
  5096                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  5097  00288C  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  5098  002890  0012               	return		;funcret
  5099  002892                     __end_of_I2C_Master_Write:
  5100                           	opt callstack 0
  5101                           
  5102 ;; *************** function _I2C_Master_Stop *****************
  5103 ;; Defined at:
  5104 ;;		line 65 in file "I2C.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    3
  5125 ;; This function calls:
  5126 ;;		_I2C_Master_Wait
  5127 ;; This function is called by:
  5128 ;;		_sendArduinoTireDropRequest
  5129 ;;		_requestIsTireDropDone
  5130 ;;		_doOperation
  5131 ;;		_main
  5132 ;;		_rtc_set_time
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text18
  5137  00289A                     __ptext18:
  5138                           	opt callstack 0
  5139  00289A                     _I2C_Master_Stop:
  5140                           	opt callstack 25
  5141                           
  5142                           ;I2C.c: 66:     I2C_Master_Wait();
  5143                           
  5144                           ;incstack = 0
  5145  00289A  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5146                           
  5147                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  5148  00289E  84C5               	bsf	4037,2,c	;volatile
  5149  0028A0  0012               	return		;funcret
  5150  0028A2                     __end_of_I2C_Master_Stop:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function _I2C_Master_Start *****************
  5154 ;; Defined at:
  5155 ;;		line 55 in file "I2C.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    3
  5176 ;; This function calls:
  5177 ;;		_I2C_Master_Wait
  5178 ;; This function is called by:
  5179 ;;		_sendArduinoTireDropRequest
  5180 ;;		_requestIsTireDropDone
  5181 ;;		_doOperation
  5182 ;;		_main
  5183 ;;		_rtc_set_time
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text19
  5188  0028A2                     __ptext19:
  5189                           	opt callstack 0
  5190  0028A2                     _I2C_Master_Start:
  5191                           	opt callstack 25
  5192                           
  5193                           ;I2C.c: 56:     I2C_Master_Wait();
  5194                           
  5195                           ;incstack = 0
  5196  0028A2  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5197                           
  5198                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  5199  0028A6  80C5               	bsf	4037,0,c	;volatile
  5200  0028A8  0012               	return		;funcret
  5201  0028AA                     __end_of_I2C_Master_Start:
  5202                           	opt callstack 0
  5203                           
  5204 ;; *************** function _I2C_Master_Read *****************
  5205 ;; Defined at:
  5206 ;;		line 77 in file "I2C.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  ackBit          1    wreg     unsigned char 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  ackBit          1    6[COMRAM] unsigned char 
  5211 ;;  receivedByte    1    7[COMRAM] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      unsigned char 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		_I2C_Master_Wait
  5230 ;; This function is called by:
  5231 ;;		_requestIsTireDropDone
  5232 ;;		_main
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text20
  5237  00279A                     __ptext20:
  5238                           	opt callstack 0
  5239  00279A                     _I2C_Master_Read:
  5240                           	opt callstack 25
  5241                           
  5242                           ;incstack = 0
  5243                           ;I2C_Master_Read@ackBit stored from wreg
  5244  00279A  6E07               	movwf	I2C_Master_Read@ackBit,c
  5245                           
  5246                           ;I2C.c: 78:     I2C_Master_Wait();
  5247  00279C  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5248                           
  5249                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  5250  0027A0  86C5               	bsf	4037,3,c	;volatile
  5251                           
  5252                           ;I2C.c: 81:     I2C_Master_Wait();
  5253  0027A2  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5254                           
  5255                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  5256  0027A6  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  5257                           
  5258                           ;I2C.c: 86:     I2C_Master_Wait();
  5259  0027AA  EC26  F014         	call	_I2C_Master_Wait	;wreg free
  5260                           
  5261                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  5262  0027AE  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  5263  0027B0  D002               	bra	u4035
  5264  0027B2  9AC5               	bcf	4037,5,c	;volatile
  5265  0027B4  D001               	bra	u4036
  5266  0027B6                     u4035:
  5267  0027B6  8AC5               	bsf	4037,5,c	;volatile
  5268  0027B8                     u4036:
  5269                           
  5270                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  5271  0027B8  88C5               	bsf	4037,4,c	;volatile
  5272                           
  5273                           ;I2C.c: 90:     return receivedByte;
  5274  0027BA  5008               	movf	I2C_Master_Read@receivedByte,w,c
  5275  0027BC  0012               	return		;funcret
  5276  0027BE                     __end_of_I2C_Master_Read:
  5277                           	opt callstack 0
  5278                           
  5279 ;; *************** function _I2C_Master_Wait *****************
  5280 ;; Defined at:
  5281 ;;		line 21 in file "I2C.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;Total ram usage:        1 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    2
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_I2C_Master_Start
  5306 ;;		_I2C_Master_Stop
  5307 ;;		_I2C_Master_Write
  5308 ;;		_I2C_Master_Read
  5309 ;;		_I2C_Master_RepeatedStart
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text21
  5314  00284C                     __ptext21:
  5315                           	opt callstack 0
  5316  00284C                     _I2C_Master_Wait:
  5317                           	opt callstack 25
  5318                           
  5319                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  5320                           
  5321                           ;I2C.c: 28:     }
  5322                           
  5323                           ;incstack = 0
  5324  00284C  B4C7               	btfsc	4039,2,c	;volatile
  5325  00284E  D7FE               	goto	_I2C_Master_Wait
  5326  002850  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  5327  002854  0E1F               	movlw	31
  5328  002856  1606               	andwf	??_I2C_Master_Wait,f,c
  5329  002858  B4D8               	btfsc	status,2,c
  5330  00285A  0012               	return	
  5331  00285C  D7F7               	goto	_I2C_Master_Wait
  5332  00285E                     __end_of_I2C_Master_Wait:
  5333                           	opt callstack 0
  5334                           
  5335 ;; *************** function _init_motor_PWM *****************
  5336 ;; Defined at:
  5337 ;;		line 198 in file "main.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        0 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    2
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_doOperation
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text22
  5366  002724                     __ptext22:
  5367                           	opt callstack 0
  5368  002724                     _init_motor_PWM:
  5369                           	opt callstack 27
  5370                           
  5371                           ;main.c: 206:     TRISCbits.TRISC2 = 1;
  5372                           
  5373                           ;incstack = 0
  5374  002724  8494               	bsf	3988,2,c	;volatile
  5375                           
  5376                           ;main.c: 207:     TRISCbits.TRISC1 = 1;
  5377  002726  8294               	bsf	3988,1,c	;volatile
  5378                           
  5379                           ;main.c: 210:     const unsigned long FREQUENCY = 1000;;main.c: 211:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 212:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
  5380  002728  0E9B               	movlw	155
  5381  00272A  6ECB               	movwf	4043,c	;volatile
  5382                           
  5383                           ;main.c: 215:     P1M1 = 0;
  5384  00272C  9EBD               	bcf	4029,7,c	;volatile
  5385                           
  5386                           ;main.c: 216:     P1M0 = 0;
  5387  00272E  9CBD               	bcf	4029,6,c	;volatile
  5388                           
  5389                           ;main.c: 217:     CCP1M3 = 1;
  5390  002730  86BD               	bsf	4029,3,c	;volatile
  5391                           
  5392                           ;main.c: 218:     CCP1M2 = 1;
  5393  002732  84BD               	bsf	4029,2,c	;volatile
  5394                           
  5395                           ;main.c: 219:     CCP1M1 = 0;
  5396  002734  92BD               	bcf	4029,1,c	;volatile
  5397                           
  5398                           ;main.c: 220:     CCP1M0 = 0;
  5399  002736  90BD               	bcf	4029,0,c	;volatile
  5400                           
  5401                           ;main.c: 222:     CCP2M3 = 1;
  5402  002738  86BA               	bsf	4026,3,c	;volatile
  5403                           
  5404                           ;main.c: 223:     CCP2M2 = 1;
  5405  00273A  84BA               	bsf	4026,2,c	;volatile
  5406                           
  5407                           ;main.c: 224:     CCP2M1 = 0;
  5408  00273C  92BA               	bcf	4026,1,c	;volatile
  5409                           
  5410                           ;main.c: 225:     CCP2M0 = 0;
  5411  00273E  90BA               	bcf	4026,0,c	;volatile
  5412                           
  5413                           ;main.c: 228:     T2CKPS0 = 1;
  5414  002740  80CA               	bsf	4042,0,c	;volatile
  5415                           
  5416                           ;main.c: 229:     T2CKPS1 = 1;
  5417  002742  82CA               	bsf	4042,1,c	;volatile
  5418                           
  5419                           ;main.c: 232:     TMR2ON = 1;
  5420  002744  84CA               	bsf	4042,2,c	;volatile
  5421                           
  5422                           ;main.c: 235:     TRISCbits.TRISC2 = 0;
  5423  002746  9494               	bcf	3988,2,c	;volatile
  5424                           
  5425                           ;main.c: 236:     TRISCbits.TRISC1 = 0;
  5426  002748  9294               	bcf	3988,1,c	;volatile
  5427  00274A  0012               	return		;funcret
  5428  00274C                     __end_of_init_motor_PWM:
  5429                           	opt callstack 0
  5430                           
  5431 ;; *************** function _TIMER_INIT *****************
  5432 ;; Defined at:
  5433 ;;		line 152 in file "main.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_doOperation
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text23
  5462  0027E0                     __ptext23:
  5463                           	opt callstack 0
  5464  0027E0                     _TIMER_INIT:
  5465                           	opt callstack 27
  5466                           
  5467                           ;main.c: 153:     T0CONbits.TMR0ON = 0;
  5468                           
  5469                           ;incstack = 0
  5470  0027E0  9ED5               	bcf	4053,7,c	;volatile
  5471                           
  5472                           ;main.c: 154:     T0CONbits.T08BIT = 0;
  5473  0027E2  9CD5               	bcf	4053,6,c	;volatile
  5474                           
  5475                           ;main.c: 155:     T0CONbits.T0CS = 0;
  5476  0027E4  9AD5               	bcf	4053,5,c	;volatile
  5477                           
  5478                           ;main.c: 156:     T0CONbits.PSA = 0;
  5479  0027E6  96D5               	bcf	4053,3,c	;volatile
  5480                           
  5481                           ;main.c: 157:     T0CONbits.T0PS = 0b101;
  5482  0027E8  50D5               	movf	4053,w,c	;volatile
  5483  0027EA  0BF8               	andlw	-8
  5484  0027EC  0905               	iorlw	5
  5485  0027EE  6ED5               	movwf	4053,c	;volatile
  5486                           
  5487                           ;main.c: 158:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  5488  0027F0  0EB3               	movlw	179
  5489  0027F2  6ED7               	movwf	4055,c	;volatile
  5490                           
  5491                           ;main.c: 159:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  5492  0027F4  0EB5               	movlw	181
  5493  0027F6  6ED6               	movwf	4054,c	;volatile
  5494                           
  5495                           ;main.c: 160:     T0CONbits.TMR0ON = 1;
  5496  0027F8  8ED5               	bsf	4053,7,c	;volatile
  5497                           
  5498                           ;main.c: 161:     INTCONbits.TMR0IE = 1;
  5499  0027FA  8AF2               	bsf	4082,5,c	;volatile
  5500                           
  5501                           ;main.c: 163:     INTCONbits.GIE = 1;
  5502  0027FC  8EF2               	bsf	4082,7,c	;volatile
  5503                           
  5504                           ;main.c: 164:     INTCONbits.PEIE = 1;
  5505  0027FE  8CF2               	bsf	4082,6,c	;volatile
  5506  002800  0012               	return		;funcret
  5507  002802                     __end_of_TIMER_INIT:
  5508                           	opt callstack 0
  5509                           
  5510 ;; *************** function _doDisplayLog *****************
  5511 ;; Defined at:
  5512 ;;		line 36 in file "main.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  currentLogSt    2   14[BANK0 ] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  keyValue        1   22[BANK0 ] unsigned char 
  5517 ;;  keypress        1   20[BANK0 ] unsigned char 
  5518 ;;  currentPole     2    0        int 
  5519 ;;  currentDispl    1   21[BANK0 ] enum E3248
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;Total ram usage:        9 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:   13
  5536 ;; This function calls:
  5537 ;;		_lcdInst
  5538 ;;		_printf
  5539 ;; This function is called by:
  5540 ;;		_main
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text24
  5545  0016A0                     __ptext24:
  5546                           	opt callstack 0
  5547  0016A0                     _doDisplayLog:
  5548                           	opt callstack 17
  5549                           
  5550                           ;main.c: 37:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5551                           
  5552                           ;incstack = 0
  5553  0016A0  0E80               	movlw	128
  5554  0016A2  EC3E  F014         	call	_lcdInst
  5555  0016A6  0E07               	movlw	7
  5556  0016A8  0100               	movlb	0	; () banked
  5557  0016AA  6F90               	movwf	??_doDisplayLog& (0+255),b
  5558  0016AC  0E7D               	movlw	125
  5559  0016AE                     u5957:
  5560  0016AE  2EE8               	decfsz	wreg,f,c
  5561  0016B0  D7FE               	bra	u5957
  5562  0016B2  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5563  0016B4  D7FC               	bra	u5957
  5564                           
  5565                           ;main.c: 44:     enum displayStates currentDisplayState = opTime;
  5566  0016B6  0E00               	movlw	0
  5567  0016B8  0100               	movlb	0	; () banked
  5568  0016BA  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  5569  0016BC  D082               	goto	l5687
  5570  0016BE                     l5649:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;main.c: 49:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  5574  0016BE  0E80               	movlw	128
  5575  0016C0  EC3E  F014         	call	_lcdInst
  5576  0016C4  0E07               	movlw	7
  5577  0016C6  0100               	movlb	0	; () banked
  5578  0016C8  6F90               	movwf	??_doDisplayLog& (0+255),b
  5579  0016CA  0E7D               	movlw	125
  5580  0016CC                     u5967:
  5581  0016CC  2EE8               	decfsz	wreg,f,c
  5582  0016CE  D7FE               	bra	u5967
  5583  0016D0  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5584  0016D2  D7FC               	bra	u5967
  5585                           
  5586                           ;main.c: 50:                 printf("%s", "OP. TIME Xs");
  5587  0016D4  0E2B               	movlw	low STR_1
  5588  0016D6  0100               	movlb	0	; () banked
  5589  0016D8  6F82               	movwf	printf@fmt& (0+255),b
  5590  0016DA  0EFD               	movlw	high STR_1
  5591  0016DC  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5592  0016DE  0ED9               	movlw	low STR_2
  5593  0016E0  6F84               	movwf	(?_printf+2)& (0+255),b
  5594  0016E2  0EFC               	movlw	high STR_2
  5595  0016E4  6F85               	movwf	(?_printf+3)& (0+255),b
  5596  0016E6  ECA6  F013         	call	_printf	;wreg free
  5597  0016EA  0EC0               	movlw	192
  5598  0016EC  EC3E  F014         	call	_lcdInst
  5599                           
  5600                           ;main.c: 52:                 printf("%s","X TIR. SUPPLIED");
  5601  0016F0  0E2B               	movlw	low STR_1
  5602  0016F2  0100               	movlb	0	; () banked
  5603  0016F4  6F82               	movwf	printf@fmt& (0+255),b
  5604  0016F6  0EFD               	movlw	high STR_1
  5605  0016F8  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5606  0016FA  0E1D               	movlw	low STR_4
  5607  0016FC  6F84               	movwf	(?_printf+2)& (0+255),b
  5608  0016FE  0EFC               	movlw	high STR_4
  5609  001700  6F85               	movwf	(?_printf+3)& (0+255),b
  5610  001702  ECA6  F013         	call	_printf	;wreg free
  5611  001706  0E90               	movlw	144
  5612  001708  EC3E  F014         	call	_lcdInst
  5613                           
  5614                           ;main.c: 54:                 printf("%s","(1) POLE INFO");
  5615  00170C  0E2B               	movlw	low STR_1
  5616  00170E  0100               	movlb	0	; () banked
  5617  001710  6F82               	movwf	printf@fmt& (0+255),b
  5618  001712  0EFD               	movlw	high STR_1
  5619  001714  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5620  001716  0E88               	movlw	low STR_6
  5621  001718  6F84               	movwf	(?_printf+2)& (0+255),b
  5622  00171A  0EFC               	movlw	high STR_6
  5623  00171C  6F85               	movwf	(?_printf+3)& (0+255),b
  5624  00171E  ECA6  F013         	call	_printf	;wreg free
  5625  001722  0ED0               	movlw	208
  5626  001724  EC3E  F014         	call	_lcdInst
  5627                           
  5628                           ;main.c: 56:                 printf("%s","(2) SAVE & EXIT");
  5629  001728  0E2B               	movlw	low STR_1
  5630  00172A  0100               	movlb	0	; () banked
  5631  00172C  6F82               	movwf	printf@fmt& (0+255),b
  5632  00172E  0EFD               	movlw	high STR_1
  5633  001730  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5634  001732  0E2D               	movlw	low STR_8
  5635  001734  6F84               	movwf	(?_printf+2)& (0+255),b
  5636  001736  0EFC               	movlw	high STR_8
  5637  001738  6F85               	movwf	(?_printf+3)& (0+255),b
  5638  00173A  ECA6  F013         	call	_printf	;wreg free
  5639                           
  5640                           ;main.c: 57:                 break;
  5641  00173E  D050               	goto	l5689
  5642  001740                     l5667:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;main.c: 59:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  5646  001740  0E80               	movlw	128
  5647  001742  EC3E  F014         	call	_lcdInst
  5648  001746  0E07               	movlw	7
  5649  001748  0100               	movlb	0	; () banked
  5650  00174A  6F90               	movwf	??_doDisplayLog& (0+255),b
  5651  00174C  0E7D               	movlw	125
  5652  00174E                     u5977:
  5653  00174E  2EE8               	decfsz	wreg,f,c
  5654  001750  D7FE               	bra	u5977
  5655  001752  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5656  001754  D7FC               	bra	u5977
  5657                           
  5658                           ;main.c: 60:                 printf("%s", "POLE X/Y");
  5659  001756  0E2B               	movlw	low STR_1
  5660  001758  0100               	movlb	0	; () banked
  5661  00175A  6F82               	movwf	printf@fmt& (0+255),b
  5662  00175C  0EFD               	movlw	high STR_1
  5663  00175E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5664  001760  0E1F               	movlw	low STR_10
  5665  001762  6F84               	movwf	(?_printf+2)& (0+255),b
  5666  001764  0EFD               	movlw	high STR_10
  5667  001766  6F85               	movwf	(?_printf+3)& (0+255),b
  5668  001768  ECA6  F013         	call	_printf	;wreg free
  5669  00176C  0EC0               	movlw	192
  5670  00176E  EC3E  F014         	call	_lcdInst
  5671                           
  5672                           ;main.c: 62:                 printf("%s","TIR. DEPLOY: X");
  5673  001772  0E2B               	movlw	low STR_1
  5674  001774  0100               	movlb	0	; () banked
  5675  001776  6F82               	movwf	printf@fmt& (0+255),b
  5676  001778  0EFD               	movlw	high STR_1
  5677  00177A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5678  00177C  0E4D               	movlw	low STR_12
  5679  00177E  6F84               	movwf	(?_printf+2)& (0+255),b
  5680  001780  0EFC               	movlw	high STR_12
  5681  001782  6F85               	movwf	(?_printf+3)& (0+255),b
  5682  001784  ECA6  F013         	call	_printf	;wreg free
  5683  001788  0E90               	movlw	144
  5684  00178A  EC3E  F014         	call	_lcdInst
  5685                           
  5686                           ;main.c: 64:                 printf("%s","TIRE. ON POLE: X");
  5687  00178E  0E2B               	movlw	low STR_1
  5688  001790  0100               	movlb	0	; () banked
  5689  001792  6F82               	movwf	printf@fmt& (0+255),b
  5690  001794  0EFD               	movlw	high STR_1
  5691  001796  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5692  001798  0EFC               	movlw	low STR_14
  5693  00179A  6F84               	movwf	(?_printf+2)& (0+255),b
  5694  00179C  0EFB               	movlw	high STR_14
  5695  00179E  6F85               	movwf	(?_printf+3)& (0+255),b
  5696  0017A0  ECA6  F013         	call	_printf	;wreg free
  5697  0017A4  0ED0               	movlw	208
  5698  0017A6  EC3E  F014         	call	_lcdInst
  5699                           
  5700                           ;main.c: 66:                 printf("%s","1<- 2-> 3MENU");
  5701  0017AA  0E2B               	movlw	low STR_1
  5702  0017AC  0100               	movlb	0	; () banked
  5703  0017AE  6F82               	movwf	printf@fmt& (0+255),b
  5704  0017B0  0EFD               	movlw	high STR_1
  5705  0017B2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  5706  0017B4  0EA4               	movlw	low STR_16
  5707  0017B6  6F84               	movwf	(?_printf+2)& (0+255),b
  5708  0017B8  0EFC               	movlw	high STR_16
  5709  0017BA  6F85               	movwf	(?_printf+3)& (0+255),b
  5710  0017BC  ECA6  F013         	call	_printf	;wreg free
  5711                           
  5712                           ;main.c: 67:                 break;
  5713  0017C0  D00F               	goto	l5689
  5714  0017C2                     l5687:
  5715  0017C2  0100               	movlb	0	; () banked
  5716  0017C4  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  5717  0017C6  6F90               	movwf	??_doDisplayLog& (0+255),b
  5718  0017C8  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  5719                           
  5720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5721                           ; Switch size 1, requested type "simple"
  5722                           ; Number of cases is 1, Range of values is 0 to 0
  5723                           ; switch strategies available:
  5724                           ; Name         Instructions Cycles
  5725                           ; simple_byte            4     3 (average)
  5726                           ;	Chosen strategy is simple_byte
  5727  0017CA  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  5728  0017CC  0A00               	xorlw	0	; case 0
  5729  0017CE  A4D8               	btfss	status,2,c
  5730  0017D0  D007               	goto	l5689
  5731                           
  5732                           ; BSR set to: 0
  5733                           ; Switch size 1, requested type "simple"
  5734                           ; Number of cases is 2, Range of values is 0 to 1
  5735                           ; switch strategies available:
  5736                           ; Name         Instructions Cycles
  5737                           ; simple_byte            7     4 (average)
  5738                           ;	Chosen strategy is simple_byte
  5739  0017D2  5190               	movf	??_doDisplayLog& (0+255),w,b
  5740  0017D4  0A00               	xorlw	0	; case 0
  5741  0017D6  B4D8               	btfsc	status,2,c
  5742  0017D8  D772               	goto	l5649
  5743  0017DA  0A01               	xorlw	1	; case 1
  5744  0017DC  B4D8               	btfsc	status,2,c
  5745  0017DE  D7B0               	goto	l5667
  5746  0017E0                     l5689:
  5747                           
  5748                           ;main.c: 70:         if(keyPressed){
  5749  0017E0  0100               	movlb	0	; () banked
  5750  0017E2  51CA               	movf	_keyPressed& (0+255),w,b	;volatile
  5751  0017E4  B4D8               	btfsc	status,2,c
  5752  0017E6  D03D               	goto	l159
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;main.c: 73:             keyPressed = 0;
  5756  0017E8  0E00               	movlw	0
  5757  0017EA  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;main.c: 76:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  5761  0017EC  3881               	swapf	3969,w,c	;volatile
  5762  0017EE  0B0F               	andlw	15
  5763  0017F0  0B0F               	andlw	15
  5764  0017F2  6F94               	movwf	doDisplayLog@keypress& (0+255),b
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;main.c: 77:             char keyValue = keys[keypress];
  5768  0017F4  0ED9               	movlw	low _keys
  5769  0017F6  2594               	addwf	doDisplayLog@keypress& (0+255),w,b
  5770  0017F8  6EF6               	movwf	tblptrl,c
  5771  0017FA  6AF7               	clrf	tblptrh,c
  5772  0017FC  0EFB               	movlw	high _keys
  5773  0017FE  22F7               	addwfc	tblptrh,f,c
  5774  001800                     	if	0	;There are less than 3 active tblptr bytes
  5775  001800                     	endif
  5776  001800  0008               	tblrd		*
  5777  001802  CFF5 F096          	movff	tablat,doDisplayLog@keyValue
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;main.c: 78:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  5781  001806  0E01               	movlw	1
  5782  001808  EC3E  F014         	call	_lcdInst
  5783  00180C  0E11               	movlw	17
  5784  00180E  0100               	movlb	0	; () banked
  5785  001810  6F90               	movwf	??_doDisplayLog& (0+255),b
  5786  001812  0E3A               	movlw	58
  5787  001814                     u5987:
  5788  001814  2EE8               	decfsz	wreg,f,c
  5789  001816  D7FE               	bra	u5987
  5790  001818  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5791  00181A  D7FC               	bra	u5987
  5792  00181C  F000               	nop	
  5793                           
  5794                           ;main.c: 79:             switch (currentDisplayState){
  5795  00181E  D012               	goto	l5715
  5796  001820                     l5701:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;main.c: 81:                     if (keyValue == '1'){
  5800  001820  0E31               	movlw	49
  5801  001822  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5802  001824  A4D8               	btfss	status,2,c
  5803  001826  D002               	goto	l5705
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;main.c: 82:                         currentDisplayState = pole;
  5807  001828  0E01               	movlw	1
  5808  00182A  D00A               	goto	L12
  5809  00182C                     l5705:
  5810                           
  5811                           ; BSR set to: 0
  5812  00182C  0E32               	movlw	50
  5813  00182E  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5814  001830  B4D8               	btfsc	status,2,c
  5815  001832  0012               	return	
  5816  001834  D016               	goto	l159
  5817  001836                     l5709:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;main.c: 88:                     if (keyValue == '3'){
  5821  001836  0E33               	movlw	51
  5822  001838  1996               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  5823  00183A  A4D8               	btfss	status,2,c
  5824  00183C  D012               	goto	l159
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;main.c: 89:                         currentDisplayState = opTime;
  5828  00183E  0E00               	movlw	0
  5829  001840                     L12:
  5830  001840  6F95               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  5831  001842  D00F               	goto	l159
  5832  001844                     l5715:
  5833  001844  0100               	movlb	0	; () banked
  5834  001846  5195               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  5835  001848  6F90               	movwf	??_doDisplayLog& (0+255),b
  5836  00184A  6B91               	clrf	(??_doDisplayLog+1)& (0+255),b
  5837                           
  5838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5839                           ; Switch size 1, requested type "simple"
  5840                           ; Number of cases is 1, Range of values is 0 to 0
  5841                           ; switch strategies available:
  5842                           ; Name         Instructions Cycles
  5843                           ; simple_byte            4     3 (average)
  5844                           ;	Chosen strategy is simple_byte
  5845  00184C  5191               	movf	(??_doDisplayLog+1)& (0+255),w,b
  5846  00184E  0A00               	xorlw	0	; case 0
  5847  001850  A4D8               	btfss	status,2,c
  5848  001852  D007               	goto	l159
  5849                           
  5850                           ; BSR set to: 0
  5851                           ; Switch size 1, requested type "simple"
  5852                           ; Number of cases is 2, Range of values is 0 to 1
  5853                           ; switch strategies available:
  5854                           ; Name         Instructions Cycles
  5855                           ; simple_byte            7     4 (average)
  5856                           ;	Chosen strategy is simple_byte
  5857  001854  5190               	movf	??_doDisplayLog& (0+255),w,b
  5858  001856  0A00               	xorlw	0	; case 0
  5859  001858  B4D8               	btfsc	status,2,c
  5860  00185A  D7E2               	goto	l5701
  5861  00185C  0A01               	xorlw	1	; case 1
  5862  00185E  B4D8               	btfsc	status,2,c
  5863  001860  D7EA               	goto	l5709
  5864  001862                     l159:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;main.c: 98:     _delay((unsigned long)((1)*(10000000/4000.0)));
  5868                           
  5869                           ; BSR set to: 0
  5870  001862  0E04               	movlw	4
  5871  001864  0100               	movlb	0	; () banked
  5872  001866  6F90               	movwf	??_doDisplayLog& (0+255),b
  5873  001868  0E3D               	movlw	61
  5874  00186A                     u5997:
  5875  00186A  2EE8               	decfsz	wreg,f,c
  5876  00186C  D7FE               	bra	u5997
  5877  00186E  2F90               	decfsz	??_doDisplayLog& (0+255),f,b
  5878  001870  D7FC               	bra	u5997
  5879  001872  D000               	nop2	
  5880  001874  D7A6               	goto	l5687
  5881  001876                     __end_of_doDisplayLog:
  5882                           	opt callstack 0
  5883                           
  5884 ;; *************** function _printf *****************
  5885 ;; Defined at:
  5886 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5889 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  5890 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  5891 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  5892 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  5893 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  5894 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  5895 ;;		 -> STR_3(3), STR_1(3), 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  ap              2   12[BANK0 ] PTR void [1]
  5898 ;;		 -> ?_printf(2), 
  5899 ;;  ret             2    0        int 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    2[BANK0 ] int 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;Total ram usage:       12 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:   12
  5916 ;; This function calls:
  5917 ;;		_vfprintf
  5918 ;; This function is called by:
  5919 ;;		_doDisplayLog
  5920 ;;		_doOperation
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text25
  5926  00274C                     __ptext25:
  5927                           	opt callstack 0
  5928  00274C                     _printf:
  5929                           	opt callstack 18
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;incstack = 0
  5933  00274C  0E84               	movlw	low (?_printf+2)
  5934  00274E  0100               	movlb	0	; () banked
  5935  002750  6F8C               	movwf	printf@ap& (0+255),b
  5936  002752  0E00               	movlw	high (?_printf+2)
  5937  002754  6F8D               	movwf	(printf@ap+1)& (0+255),b
  5938                           
  5939                           ; BSR set to: 0
  5940  002756  0E00               	movlw	0
  5941  002758  6E6D               	movwf	vfprintf@fp,c
  5942  00275A  0E00               	movlw	0
  5943  00275C  6E6E               	movwf	vfprintf@fp+1,c
  5944  00275E  C082  F06F         	movff	printf@fmt,vfprintf@fmt
  5945  002762  C083  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  5946  002766  0E8C               	movlw	low printf@ap
  5947  002768  6E71               	movwf	vfprintf@ap,c
  5948  00276A  0E00               	movlw	high printf@ap
  5949  00276C  6E72               	movwf	vfprintf@ap+1,c
  5950  00276E  EC1B  F012         	call	_vfprintf	;wreg free
  5951  002772  0012               	return		;funcret
  5952  002774                     __end_of_printf:
  5953                           	opt callstack 0
  5954                           
  5955 ;; *************** function _vfprintf *****************
  5956 ;; Defined at:
  5957 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  5960 ;;		 -> NULL(0), 
  5961 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  5962 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  5963 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  5964 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  5965 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  5966 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  5967 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  5968 ;;		 -> STR_3(3), STR_1(3), 
  5969 ;;  ap              2  112[COMRAM] PTR PTR void 
  5970 ;;		 -> printf@ap(2), 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  5973 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  5974 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  5975 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  5976 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  5977 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  5978 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  5979 ;;		 -> STR_3(3), STR_1(3), 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  2  108[COMRAM] int 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:        8 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:   11
  5996 ;; This function calls:
  5997 ;;		_vfpfcnvrt
  5998 ;; This function is called by:
  5999 ;;		_printf
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text26
  6004  002436                     __ptext26:
  6005                           	opt callstack 0
  6006  002436                     _vfprintf:
  6007                           	opt callstack 18
  6008                           
  6009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6010                           
  6011                           ;incstack = 0
  6012  002436  C06F  F080         	movff	vfprintf@fmt,vfprintf@cfmt
  6013  00243A  C070  F081         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6014                           
  6015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6016  00243E  0E00               	movlw	0
  6017  002440  0100               	movlb	0	; () banked
  6018  002442  6FBE               	movwf	(_nout+1)& (0+255),b
  6019  002444  0E00               	movlw	0
  6020  002446  6FBD               	movwf	_nout& (0+255),b
  6021                           
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6023  002448  D013               	goto	l5613
  6024  00244A                     l5611:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6028  00244A  C06D  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6029  00244E  C06E  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6030  002452  0E80               	movlw	low vfprintf@cfmt
  6031  002454  6E4E               	movwf	vfpfcnvrt@fmt,c
  6032  002456  0E00               	movlw	high vfprintf@cfmt
  6033  002458  6E4F               	movwf	vfpfcnvrt@fmt+1,c
  6034  00245A  C071  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  6035  00245E  C072  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6036  002462  EC09  F000         	call	_vfpfcnvrt	;wreg free
  6037  002466  504C               	movf	?_vfpfcnvrt,w,c
  6038  002468  0100               	movlb	0	; () banked
  6039  00246A  27BD               	addwf	_nout& (0+255),f,b
  6040  00246C  504D               	movf	?_vfpfcnvrt+1,w,c
  6041  00246E  23BE               	addwfc	(_nout+1)& (0+255),f,b
  6042  002470                     l5613:
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6046  002470  C080  FFF6         	movff	vfprintf@cfmt,tblptrl
  6047  002474  C081  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6048  002478                     	if	0	;tblptru may be non-zero
  6049  002478                     	endif
  6050  002478                     	if	0	;tblptru may be non-zero
  6051  002478                     	endif
  6052  002478  0008               	tblrd		*
  6053  00247A  50F5               	movf	tablat,w,c
  6054  00247C  0900               	iorlw	0
  6055  00247E  A4D8               	btfss	status,2,c
  6056  002480  D7E4               	goto	l5611
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6060  002482  C0BD  F06D         	movff	_nout,?_vfprintf
  6061  002486  C0BE  F06E         	movff	_nout+1,?_vfprintf+1
  6062                           
  6063                           ; BSR set to: 0
  6064  00248A  0012               	return		;funcret
  6065  00248C                     __end_of_vfprintf:
  6066                           	opt callstack 0
  6067                           
  6068 ;; *************** function _vfpfcnvrt *****************
  6069 ;; Defined at:
  6070 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  6073 ;;		 -> NULL(0), 
  6074 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  6075 ;;		 -> vfprintf@cfmt(2), 
  6076 ;;  ap              2   79[COMRAM] PTR PTR void 
  6077 ;;		 -> printf@ap(2), 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  llu             8   93[COMRAM] unsigned long long 
  6080 ;;  ll              8   85[COMRAM] long long 
  6081 ;;  f               4    0        long long 
  6082 ;;  vp              3    0        PTR void 
  6083 ;;  ct              3    0        unsigned char [3]
  6084 ;;  done            2  104[COMRAM] int 
  6085 ;;  cp              2  101[COMRAM] PTR unsigned char 
  6086 ;;		 -> ?_printf(2), STR_46(16), STR_44(14), STR_42(11), 
  6087 ;;		 -> STR_40(9), STR_38(16), STR_36(13), STR_34(13), 
  6088 ;;		 -> STR_32(9), STR_30(13), STR_28(14), STR_26(10), 
  6089 ;;		 -> STR_22(9), STR_16(14), STR_14(17), STR_12(15), 
  6090 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  6091 ;;		 -> STR_2(12), 
  6092 ;;  i               2    0        int 
  6093 ;;  c               1  103[COMRAM] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  2   75[COMRAM] int 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6103 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;Total ram usage:       33 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:   10
  6110 ;; This function calls:
  6111 ;;		_atoi
  6112 ;;		_dtoa
  6113 ;;		_fputc
  6114 ;;		_isdigit
  6115 ;;		_stoa
  6116 ;;		_xtoa
  6117 ;; This function is called by:
  6118 ;;		_vfprintf
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text27
  6123  000012                     __ptext27:
  6124                           	opt callstack 0
  6125  000012                     _vfpfcnvrt:
  6126                           	opt callstack 18
  6127                           
  6128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;incstack = 0
  6132  000012  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6133  000016  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6134  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  6135  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  6136  000022                     	if	0	;tblptru may be non-zero
  6137  000022                     	endif
  6138  000022                     	if	0	;tblptru may be non-zero
  6139  000022                     	endif
  6140  000022  0008               	tblrd		*
  6141  000024  50F5               	movf	tablat,w,c
  6142  000026  0A25               	xorlw	37
  6143  000028  A4D8               	btfss	status,2,c
  6144  00002A  D1E3               	goto	l5591
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6147  00002C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6148  000030  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6149  000034  2ADE               	incf	postinc2,f,c
  6150  000036  0E00               	movlw	0
  6151  000038  22DD               	addwfc	postdec2,f,c
  6152                           
  6153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6154  00003A  0E00               	movlw	0
  6155  00003C  0100               	movlb	0	; () banked
  6156  00003E  6FC0               	movwf	(_width+1)& (0+255),b
  6157  000040  0E00               	movlw	0
  6158  000042  6FBF               	movwf	_width& (0+255),b
  6159  000044  C0BF  F075         	movff	_width,_flags
  6160  000048  C0C0  F076         	movff	_width+1,_flags+1
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6164  00004C  6873               	setf	_prec,c
  6165  00004E  6874               	setf	_prec+1,c
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6169  000050  0E00               	movlw	0
  6170  000052  6E6A               	movwf	vfpfcnvrt@done+1,c
  6171  000054  0E00               	movlw	0
  6172  000056  D014               	goto	L13
  6173  000058                     l5495:
  6174                           
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6176  000058  8075               	bsf	_flags,0,c
  6177  00005A                     l5497:
  6178                           
  6179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6180  00005A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6181  00005E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6182  000062  2ADE               	incf	postinc2,f,c
  6183  000064  0E00               	movlw	0
  6184  000066  22DD               	addwfc	postdec2,f,c
  6185                           
  6186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6187  000068  D02E               	goto	l5521
  6188  00006A                     l5499:
  6189                           
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6191  00006A  8275               	bsf	_flags,1,c
  6192  00006C  D7F6               	goto	l5497
  6193  00006E                     l5503:
  6194                           
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6196  00006E  8475               	bsf	_flags,2,c
  6197  000070  D7F4               	goto	l5497
  6198  000072                     l5507:
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6201  000072  8675               	bsf	_flags,3,c
  6202  000074  D7F2               	goto	l5497
  6203  000076                     l5511:
  6204                           
  6205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6206  000076  8875               	bsf	_flags,4,c
  6207  000078  D7F0               	goto	l5497
  6208  00007A                     l5515:
  6209                           
  6210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6211  00007A  0E00               	movlw	0
  6212  00007C  6E6A               	movwf	vfpfcnvrt@done+1,c
  6213  00007E  0E01               	movlw	1
  6214  000080                     L13:
  6215  000080  6E69               	movwf	vfpfcnvrt@done,c
  6216                           
  6217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6218  000082  D021               	goto	l5521
  6219  000084                     l5519:
  6220  000084  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6221  000088  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6222  00008C  CFDE FFF6          	movff	postinc2,tblptrl
  6223  000090  CFDD FFF7          	movff	postdec2,tblptrh
  6224  000094                     	if	0	;tblptru may be non-zero
  6225  000094                     	endif
  6226  000094                     	if	0	;tblptru may be non-zero
  6227  000094                     	endif
  6228  000094  0008               	tblrd		*
  6229  000096  50F5               	movf	tablat,w,c
  6230  000098  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  6231  00009A  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  6232                           
  6233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6234                           ; Switch size 1, requested type "simple"
  6235                           ; Number of cases is 1, Range of values is 0 to 0
  6236                           ; switch strategies available:
  6237                           ; Name         Instructions Cycles
  6238                           ; simple_byte            4     3 (average)
  6239                           ;	Chosen strategy is simple_byte
  6240  00009C  5053               	movf	??_vfpfcnvrt+1,w,c
  6241  00009E  0A00               	xorlw	0	; case 0
  6242  0000A0  A4D8               	btfss	status,2,c
  6243  0000A2  D7EB               	goto	l5515
  6244                           
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 5, Range of values is 32 to 48
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte           16     9 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251  0000A4  5052               	movf	??_vfpfcnvrt,w,c
  6252  0000A6  0A20               	xorlw	32	; case 32
  6253  0000A8  B4D8               	btfsc	status,2,c
  6254  0000AA  D7E3               	goto	l5507
  6255  0000AC  0A03               	xorlw	3	; case 35
  6256  0000AE  B4D8               	btfsc	status,2,c
  6257  0000B0  D7E2               	goto	l5511
  6258  0000B2  0A08               	xorlw	8	; case 43
  6259  0000B4  B4D8               	btfsc	status,2,c
  6260  0000B6  D7DB               	goto	l5503
  6261  0000B8  0A06               	xorlw	6	; case 45
  6262  0000BA  B4D8               	btfsc	status,2,c
  6263  0000BC  D7CD               	goto	l5495
  6264  0000BE  0A1D               	xorlw	29	; case 48
  6265  0000C0  B4D8               	btfsc	status,2,c
  6266  0000C2  D7D3               	goto	l5499
  6267  0000C4  D7DA               	goto	l5515
  6268  0000C6                     l5521:
  6269                           
  6270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6271  0000C6  5069               	movf	vfpfcnvrt@done,w,c
  6272  0000C8  106A               	iorwf	vfpfcnvrt@done+1,w,c
  6273  0000CA  B4D8               	btfsc	status,2,c
  6274  0000CC  D7DB               	goto	l5519
  6275                           
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6277  0000CE  B075               	btfsc	_flags,0,c
  6278                           
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6280  0000D0  9275               	bcf	_flags,1,c
  6281                           
  6282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6283  0000D2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6284  0000D6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6285  0000DA  CFDE FFF6          	movff	postinc2,tblptrl
  6286  0000DE  CFDD FFF7          	movff	postdec2,tblptrh
  6287  0000E2                     	if	0	;tblptru may be non-zero
  6288  0000E2                     	endif
  6289  0000E2                     	if	0	;tblptru may be non-zero
  6290  0000E2                     	endif
  6291  0000E2  0008               	tblrd		*
  6292  0000E4  50F5               	movf	tablat,w,c
  6293  0000E6  0A2A               	xorlw	42
  6294  0000E8  A4D8               	btfss	status,2,c
  6295  0000EA  D024               	goto	l5533
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6298  0000EC  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6299  0000F0  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6300  0000F4  2ADE               	incf	postinc2,f,c
  6301  0000F6  0E00               	movlw	0
  6302  0000F8  22DD               	addwfc	postdec2,f,c
  6303                           
  6304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6305  0000FA  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6306  0000FE  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6307  000102  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6308  000106  0E02               	movlw	2
  6309  000108  26DE               	addwf	postinc2,f,c
  6310  00010A  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6311  00010E  0E00               	movlw	0
  6312  000110  22DD               	addwfc	postdec2,f,c
  6313  000112  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6314  000116  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6315  00011A  CFDE F0BF          	movff	postinc2,_width
  6316  00011E  CFDD F0C0          	movff	postdec2,_width+1
  6317                           
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6319  000122  0100               	movlb	0	; () banked
  6320  000124  AFC0               	btfss	(_width+1)& (0+255),7,b
  6321  000126  D03F               	goto	u5480
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6325  000128  8075               	bsf	_flags,0,c
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6328  00012A  6DBF               	negf	_width& (0+255),b
  6329  00012C  1FC0               	comf	(_width+1)& (0+255),f,b
  6330  00012E  B0D8               	btfsc	status,0,c
  6331  000130  2BC0               	incf	(_width+1)& (0+255),f,b
  6332  000132  D039               	goto	u5480
  6333  000134                     l5533:
  6334                           
  6335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6336  000134  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6337  000138  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6338  00013C  CFDE F00D          	movff	postinc2,atoi@s
  6339  000140  CFDD F00E          	movff	postdec2,atoi@s+1
  6340  000144  EC1F  F00E         	call	_atoi	;wreg free
  6341  000148  C00D  F0BF         	movff	?_atoi,_width
  6342  00014C  C00E  F0C0         	movff	?_atoi+1,_width+1
  6343                           
  6344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6345  000150  D007               	goto	l5537
  6346  000152                     l5535:
  6347                           
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6349  000152  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6350  000156  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6351  00015A  2ADE               	incf	postinc2,f,c
  6352  00015C  0E00               	movlw	0
  6353  00015E  22DD               	addwfc	postdec2,f,c
  6354  000160                     l5537:
  6355  000160  0ED0               	movlw	208
  6356  000162  6E52               	movwf	??_vfpfcnvrt& (0+255),c
  6357  000164  0EFF               	movlw	255
  6358  000166  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  6359  000168  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6360  00016C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6361  000170  CFDE FFF6          	movff	postinc2,tblptrl
  6362  000174  CFDD FFF7          	movff	postdec2,tblptrh
  6363  000178                     	if	0	;tblptru may be non-zero
  6364  000178                     	endif
  6365  000178                     	if	0	;tblptru may be non-zero
  6366  000178                     	endif
  6367  000178  0008               	tblrd		*
  6368  00017A  50F5               	movf	tablat,w,c
  6369  00017C  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6370  00017E  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  6371  000180  5052               	movf	??_vfpfcnvrt,w,c
  6372  000182  2654               	addwf	??_vfpfcnvrt+2,f,c
  6373  000184  5053               	movf	??_vfpfcnvrt+1,w,c
  6374  000186  2255               	addwfc	??_vfpfcnvrt+3,f,c
  6375  000188  5055               	movf	??_vfpfcnvrt+3,w,c
  6376  00018A  E106               	bnz	u5460
  6377  00018C  0E0A               	movlw	10
  6378  00018E  5C54               	subwf	??_vfpfcnvrt+2,w,c
  6379  000190  B0D8               	btfsc	status,0,c
  6380  000192  D002               	goto	u5460
  6381  000194  0E01               	movlw	1
  6382  000196  D001               	goto	u5470
  6383  000198                     u5460:
  6384  000198  0E00               	movlw	0
  6385  00019A                     u5470:
  6386  00019A  6E6B               	movwf	_vfpfcnvrt$1131,c
  6387  00019C  6A6C               	clrf	_vfpfcnvrt$1131+1,c
  6388  00019E  506B               	movf	_vfpfcnvrt$1131,w,c
  6389  0001A0  106C               	iorwf	_vfpfcnvrt$1131+1,w,c
  6390  0001A2  A4D8               	btfss	status,2,c
  6391  0001A4  D7D6               	goto	l5535
  6392  0001A6                     u5480:
  6393                           
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6395  0001A6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6396  0001AA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6397  0001AE  CFDE FFF6          	movff	postinc2,tblptrl
  6398  0001B2  CFDD FFF7          	movff	postdec2,tblptrh
  6399  0001B6                     	if	0	;tblptru may be non-zero
  6400  0001B6                     	endif
  6401  0001B6                     	if	0	;tblptru may be non-zero
  6402  0001B6                     	endif
  6403  0001B6  0008               	tblrd		*
  6404  0001B8  50F5               	movf	tablat,w,c
  6405  0001BA  0A64               	xorlw	100
  6406  0001BC  B4D8               	btfsc	status,2,c
  6407  0001BE  D00D               	goto	u5500
  6408  0001C0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6409  0001C4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6410  0001C8  CFDE FFF6          	movff	postinc2,tblptrl
  6411  0001CC  CFDD FFF7          	movff	postdec2,tblptrh
  6412  0001D0                     	if	0	;tblptru may be non-zero
  6413  0001D0                     	endif
  6414  0001D0                     	if	0	;tblptru may be non-zero
  6415  0001D0                     	endif
  6416  0001D0  0008               	tblrd		*
  6417  0001D2  50F5               	movf	tablat,w,c
  6418  0001D4  0A69               	xorlw	105
  6419  0001D6  A4D8               	btfss	status,2,c
  6420  0001D8  D03F               	goto	l5553
  6421  0001DA                     u5500:
  6422                           
  6423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6424  0001DA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6425  0001DE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6426  0001E2  2ADE               	incf	postinc2,f,c
  6427  0001E4  0E00               	movlw	0
  6428  0001E6  22DD               	addwfc	postdec2,f,c
  6429                           
  6430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6431  0001E8  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6432  0001EC  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6433  0001F0  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6434  0001F4  0E02               	movlw	2
  6435  0001F6  26DE               	addwf	postinc2,f,c
  6436  0001F8  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6437  0001FC  0E00               	movlw	0
  6438  0001FE  22DD               	addwfc	postdec2,f,c
  6439  000200  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6440  000204  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6441  000208  CFDE F056          	movff	postinc2,vfpfcnvrt@ll
  6442  00020C  CFDD F057          	movff	postdec2,vfpfcnvrt@ll+1
  6443  000210  0E00               	movlw	0
  6444  000212  BE57               	btfsc	vfpfcnvrt@ll+1,7,c
  6445  000214  0EFF               	movlw	-1
  6446  000216  6E58               	movwf	vfpfcnvrt@ll+2,c
  6447  000218  6E59               	movwf	vfpfcnvrt@ll+3,c
  6448  00021A  6E5A               	movwf	vfpfcnvrt@ll+4,c
  6449  00021C  6E5B               	movwf	vfpfcnvrt@ll+5,c
  6450  00021E  6E5C               	movwf	vfpfcnvrt@ll+6,c
  6451  000220  6E5D               	movwf	vfpfcnvrt@ll+7,c
  6452                           
  6453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6454  000222  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  6455  000226  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6456  00022A  C056  F027         	movff	vfpfcnvrt@ll,dtoa@d
  6457  00022E  C057  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6458  000232  C058  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6459  000236  C059  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6460  00023A  C05A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6461  00023E  C05B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6462  000242  C05C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6463  000246  C05D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6464  00024A  EC07  F007         	call	_dtoa	;wreg free
  6465  00024E  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
  6466  000252  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6467  000256  0012               	return	
  6468  000258                     l5553:
  6469                           
  6470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6471  000258  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6472  00025C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6473  000260  CFDE FFF6          	movff	postinc2,tblptrl
  6474  000264  CFDD FFF7          	movff	postdec2,tblptrh
  6475  000268                     	if	0	;tblptru may be non-zero
  6476  000268                     	endif
  6477  000268                     	if	0	;tblptru may be non-zero
  6478  000268                     	endif
  6479  000268  0008               	tblrd		*
  6480  00026A  50F5               	movf	tablat,w,c
  6481  00026C  0A73               	xorlw	115
  6482  00026E  A4D8               	btfss	status,2,c
  6483  000270  D02A               	goto	l5561
  6484                           
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6486  000272  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6487  000276  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6488  00027A  2ADE               	incf	postinc2,f,c
  6489  00027C  0E00               	movlw	0
  6490  00027E  22DD               	addwfc	postdec2,f,c
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6493  000280  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6494  000284  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6495  000288  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6496  00028C  0E02               	movlw	2
  6497  00028E  26DE               	addwf	postinc2,f,c
  6498  000290  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6499  000294  0E00               	movlw	0
  6500  000296  22DD               	addwfc	postdec2,f,c
  6501  000298  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6502  00029C  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6503  0002A0  CFDE F066          	movff	postinc2,vfpfcnvrt@cp
  6504  0002A4  CFDD F067          	movff	postdec2,vfpfcnvrt@cp+1
  6505                           
  6506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6507  0002A8  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
  6508  0002AC  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6509  0002B0  C066  F015         	movff	vfpfcnvrt@cp,stoa@s
  6510  0002B4  C067  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6511  0002B8  EC7F  F00D         	call	_stoa	;wreg free
  6512  0002BC  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
  6513  0002C0  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
  6514  0002C4  0012               	return	
  6515  0002C6                     l5561:
  6516                           
  6517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6518  0002C6  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6519  0002CA  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6520  0002CE  CFDE FFF6          	movff	postinc2,tblptrl
  6521  0002D2  CFDD FFF7          	movff	postdec2,tblptrh
  6522  0002D6                     	if	0	;tblptru may be non-zero
  6523  0002D6                     	endif
  6524  0002D6                     	if	0	;tblptru may be non-zero
  6525  0002D6                     	endif
  6526  0002D6  0008               	tblrd		*
  6527  0002D8  50F5               	movf	tablat,w,c
  6528  0002DA  0A78               	xorlw	120
  6529  0002DC  B4D8               	btfsc	status,2,c
  6530  0002DE  D00D               	goto	u5530
  6531  0002E0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6532  0002E4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6533  0002E8  CFDE FFF6          	movff	postinc2,tblptrl
  6534  0002EC  CFDD FFF7          	movff	postdec2,tblptrh
  6535  0002F0                     	if	0	;tblptru may be non-zero
  6536  0002F0                     	endif
  6537  0002F0                     	if	0	;tblptru may be non-zero
  6538  0002F0                     	endif
  6539  0002F0  0008               	tblrd		*
  6540  0002F2  50F5               	movf	tablat,w,c
  6541  0002F4  0A58               	xorlw	88
  6542  0002F6  A4D8               	btfss	status,2,c
  6543  0002F8  D04D               	goto	l5575
  6544  0002FA                     u5530:
  6545                           
  6546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6547  0002FA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6548  0002FE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6549  000302  CFDE FFF6          	movff	postinc2,tblptrl
  6550  000306  CFDD FFF7          	movff	postdec2,tblptrh
  6551  00030A                     	if	0	;tblptru may be non-zero
  6552  00030A                     	endif
  6553  00030A                     	if	0	;tblptru may be non-zero
  6554  00030A                     	endif
  6555  00030A  0008               	tblrd		*
  6556  00030C  CFF5 F068          	movff	tablat,vfpfcnvrt@c
  6557                           
  6558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6559  000310  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6560  000314  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6561  000318  2ADE               	incf	postinc2,f,c
  6562  00031A  0E00               	movlw	0
  6563  00031C  22DD               	addwfc	postdec2,f,c
  6564                           
  6565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6566  00031E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6567  000322  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6568  000326  CFDF F052          	movff	indf2,??_vfpfcnvrt
  6569  00032A  0E02               	movlw	2
  6570  00032C  26DE               	addwf	postinc2,f,c
  6571  00032E  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
  6572  000332  0E00               	movlw	0
  6573  000334  22DD               	addwfc	postdec2,f,c
  6574  000336  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6575  00033A  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6576  00033E  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
  6577  000342  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
  6578  000346  C054  F05E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6579  00034A  C055  F05F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6580  00034E  6A60               	clrf	vfpfcnvrt@llu+2,c
  6581  000350  6A61               	clrf	vfpfcnvrt@llu+3,c
  6582  000352  6A62               	clrf	vfpfcnvrt@llu+4,c
  6583  000354  6A63               	clrf	vfpfcnvrt@llu+5,c
  6584  000356  6A64               	clrf	vfpfcnvrt@llu+6,c
  6585  000358  6A65               	clrf	vfpfcnvrt@llu+7,c
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  6588  00035A  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
  6589  00035E  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6590  000362  C05E  F027         	movff	vfpfcnvrt@llu,xtoa@d
  6591  000366  C05F  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6592  00036A  C060  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6593  00036E  C061  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6594  000372  C062  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6595  000376  C063  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6596  00037A  C064  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6597  00037E  C065  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6598  000382  C068  F02F         	movff	vfpfcnvrt@c,xtoa@x
  6599  000386  EC28  F008         	call	_xtoa	;wreg free
  6600  00038A  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
  6601  00038E  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6602  000392  0012               	return	
  6603  000394                     l5575:
  6604                           
  6605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6606  000394  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6607  000398  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6608  00039C  CFDE FFF6          	movff	postinc2,tblptrl
  6609  0003A0  CFDD FFF7          	movff	postdec2,tblptrh
  6610  0003A4                     	if	0	;tblptru may be non-zero
  6611  0003A4                     	endif
  6612  0003A4                     	if	0	;tblptru may be non-zero
  6613  0003A4                     	endif
  6614  0003A4  0008               	tblrd		*
  6615  0003A6  50F5               	movf	tablat,w,c
  6616  0003A8  0A25               	xorlw	37
  6617  0003AA  A4D8               	btfss	status,2,c
  6618  0003AC  D016               	goto	l5585
  6619                           
  6620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6621  0003AE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6622  0003B2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6623  0003B6  2ADE               	incf	postinc2,f,c
  6624  0003B8  0E00               	movlw	0
  6625  0003BA  22DD               	addwfc	postdec2,f,c
  6626                           
  6627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6628  0003BC  0E00               	movlw	0
  6629  0003BE  6E0B               	movwf	fputc@c+1,c
  6630  0003C0  0E25               	movlw	37
  6631  0003C2  6E0A               	movwf	fputc@c,c
  6632  0003C4  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  6633  0003C8  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6634  0003CC  EC24  F011         	call	_fputc	;wreg free
  6635  0003D0                     l5581:
  6636                           
  6637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6638  0003D0  0E00               	movlw	0
  6639  0003D2  6E4D               	movwf	?_vfpfcnvrt+1,c
  6640  0003D4  0E01               	movlw	1
  6641  0003D6  6E4C               	movwf	?_vfpfcnvrt,c
  6642  0003D8  0012               	return	
  6643  0003DA                     l5585:
  6644                           
  6645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6646  0003DA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6647  0003DE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6648  0003E2  2ADE               	incf	postinc2,f,c
  6649  0003E4  0E00               	movlw	0
  6650  0003E6  22DD               	addwfc	postdec2,f,c
  6651                           
  6652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6653  0003E8  0E00               	movlw	0
  6654  0003EA  6E4D               	movwf	?_vfpfcnvrt+1,c
  6655  0003EC  0E00               	movlw	0
  6656  0003EE  6E4C               	movwf	?_vfpfcnvrt,c
  6657  0003F0  0012               	return	
  6658  0003F2                     l5591:
  6659                           
  6660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6661  0003F2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6662  0003F6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6663  0003FA  CFDE FFF6          	movff	postinc2,tblptrl
  6664  0003FE  CFDD FFF7          	movff	postdec2,tblptrh
  6665  000402                     	if	0	;tblptru may be non-zero
  6666  000402                     	endif
  6667  000402                     	if	0	;tblptru may be non-zero
  6668  000402                     	endif
  6669  000402  0008               	tblrd		*
  6670  000404  50F5               	movf	tablat,w,c
  6671  000406  6E0A               	movwf	fputc@c,c
  6672  000408  6A0B               	clrf	fputc@c+1,c
  6673  00040A  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  6674  00040E  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6675  000412  EC24  F011         	call	_fputc	;wreg free
  6676                           
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6678  000416  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6679  00041A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6680  00041E  2ADE               	incf	postinc2,f,c
  6681  000420  0E00               	movlw	0
  6682  000422  22DD               	addwfc	postdec2,f,c
  6683  000424  D7D5               	goto	l5581
  6684  000426                     __end_of_vfpfcnvrt:
  6685                           	opt callstack 0
  6686                           
  6687 ;; *************** function _xtoa *****************
  6688 ;; Defined at:
  6689 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  6692 ;;		 -> NULL(0), 
  6693 ;;  d               8   38[COMRAM] unsigned long long 
  6694 ;;  x               1   46[COMRAM] unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  n               8   63[COMRAM] unsigned long long 
  6697 ;;  c               2   73[COMRAM] int 
  6698 ;;  i               2   71[COMRAM] int 
  6699 ;;  w               2   61[COMRAM] int 
  6700 ;;  p               2   59[COMRAM] int 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  2   36[COMRAM] int 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6710 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;Total ram usage:       39 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    9
  6717 ;; This function calls:
  6718 ;;		_isalpha
  6719 ;;		_isupper
  6720 ;;		_pad
  6721 ;;		_toupper
  6722 ;; This function is called by:
  6723 ;;		_vfpfcnvrt
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text28
  6728  001050                     __ptext28:
  6729                           	opt callstack 0
  6730  001050                     _xtoa:
  6731                           	opt callstack 18
  6732                           
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6734                           
  6735                           ;incstack = 0
  6736  001050  AE74               	btfss	_prec+1,7,c
  6737                           
  6738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6739  001052  9275               	bcf	_flags,1,c
  6740                           
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6742  001054  BE74               	btfsc	_prec+1,7,c
  6743  001056  D005               	goto	u5180
  6744  001058  5074               	movf	_prec+1,w,c
  6745  00105A  E108               	bnz	l486
  6746  00105C  0473               	decf	_prec,w,c
  6747  00105E  B0D8               	btfsc	status,0,c
  6748  001060  D005               	goto	l486
  6749  001062                     u5180:
  6750  001062  0E00               	movlw	0
  6751  001064  6E3D               	movwf	xtoa@p+1,c
  6752  001066  0E01               	movlw	1
  6753  001068  6E3C               	movwf	xtoa@p,c
  6754  00106A  D004               	goto	l488
  6755  00106C                     l486:
  6756  00106C  C073  F03C         	movff	_prec,xtoa@p
  6757  001070  C074  F03D         	movff	_prec+1,xtoa@p+1
  6758  001074                     l488:
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6761  001074  C0BF  F03E         	movff	_width,xtoa@w
  6762  001078  C0C0  F03F         	movff	_width+1,xtoa@w+1
  6763                           
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6765  00107C  A875               	btfss	_flags,4,c
  6766  00107E  D004               	goto	l5387
  6767                           
  6768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6769  001080  0EFE               	movlw	254
  6770  001082  263E               	addwf	xtoa@w,f,c
  6771  001084  0EFF               	movlw	255
  6772  001086  223F               	addwfc	xtoa@w+1,f,c
  6773  001088                     l5387:
  6774                           
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6776  001088  C027  F040         	movff	xtoa@d,xtoa@n
  6777  00108C  C028  F041         	movff	xtoa@d+1,xtoa@n+1
  6778  001090  C029  F042         	movff	xtoa@d+2,xtoa@n+2
  6779  001094  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
  6780  001098  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
  6781  00109C  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
  6782  0010A0  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
  6783  0010A4  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
  6784                           
  6785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6786  0010A8  0E00               	movlw	0
  6787  0010AA  6E49               	movwf	xtoa@i+1,c
  6788  0010AC  0E1F               	movlw	31
  6789  0010AE  6E48               	movwf	xtoa@i,c
  6790                           
  6791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6792  0010B0  0E00               	movlw	0
  6793  0010B2  0100               	movlb	0	; () banked
  6794  0010B4  6FEA               	movwf	(_dbuf+31)& (0+255),b
  6795                           
  6796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6797  0010B6  D093               	goto	l5423
  6798  0010B8                     l5393:
  6799                           
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6801  0010B8  0648               	decf	xtoa@i,f,c
  6802  0010BA  A0D8               	btfss	status,0,c
  6803  0010BC  0649               	decf	xtoa@i+1,f,c
  6804                           
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6806  0010BE  0E0F               	movlw	15
  6807  0010C0  1440               	andwf	xtoa@n,w,c
  6808  0010C2  6E4A               	movwf	xtoa@c,c
  6809  0010C4  6A4B               	clrf	xtoa@c+1,c
  6810                           
  6811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6812  0010C6  BE4B               	btfsc	xtoa@c+1,7,c
  6813  0010C8  D008               	goto	l5401
  6814  0010CA  504B               	movf	xtoa@c+1,w,c
  6815  0010CC  E104               	bnz	u5200
  6816  0010CE  0E0A               	movlw	10
  6817  0010D0  5C4A               	subwf	xtoa@c,w,c
  6818  0010D2  A0D8               	btfss	status,0,c
  6819  0010D4  D002               	goto	l5401
  6820  0010D6                     u5200:
  6821  0010D6  0E57               	movlw	87
  6822  0010D8  D001               	goto	L14
  6823  0010DA                     l5401:
  6824  0010DA  0E30               	movlw	48
  6825  0010DC                     L14:
  6826  0010DC  244A               	addwf	xtoa@c,w,c
  6827  0010DE  6E4A               	movwf	xtoa@c,c
  6828  0010E0  0E00               	movlw	0
  6829  0010E2  204B               	addwfc	xtoa@c+1,w,c
  6830  0010E4  6E4B               	movwf	xtoa@c+1,c
  6831                           
  6832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  6833  0010E6  0EBF               	movlw	191
  6834  0010E8  6E30               	movwf	??_xtoa& (0+255),c
  6835  0010EA  0EFF               	movlw	255
  6836  0010EC  6E31               	movwf	(??_xtoa+1)& (0+255),c
  6837  0010EE  502F               	movf	xtoa@x,w,c
  6838  0010F0  6E32               	movwf	(??_xtoa+2)& (0+255),c
  6839  0010F2  6A33               	clrf	(??_xtoa+3)& (0+255),c
  6840  0010F4  5030               	movf	??_xtoa,w,c
  6841  0010F6  2632               	addwf	??_xtoa+2,f,c
  6842  0010F8  5031               	movf	??_xtoa+1,w,c
  6843  0010FA  2233               	addwfc	??_xtoa+3,f,c
  6844  0010FC  5033               	movf	??_xtoa+3,w,c
  6845  0010FE  E106               	bnz	u5210
  6846  001100  0E1A               	movlw	26
  6847  001102  5C32               	subwf	??_xtoa+2,w,c
  6848  001104  B0D8               	btfsc	status,0,c
  6849  001106  D002               	goto	u5210
  6850  001108  0E01               	movlw	1
  6851  00110A  D001               	goto	u5220
  6852  00110C                     u5210:
  6853  00110C  0E00               	movlw	0
  6854  00110E                     u5220:
  6855  00110E  6E38               	movwf	_xtoa$1116,c
  6856  001110  6A39               	clrf	_xtoa$1116+1,c
  6857  001112  5038               	movf	_xtoa$1116,w,c
  6858  001114  1039               	iorwf	_xtoa$1116+1,w,c
  6859  001116  B4D8               	btfsc	status,2,c
  6860  001118  D027               	goto	l5415
  6861  00111A  0E9F               	movlw	159
  6862  00111C  6E30               	movwf	??_xtoa& (0+255),c
  6863  00111E  0EFF               	movlw	255
  6864  001120  6E31               	movwf	(??_xtoa+1)& (0+255),c
  6865  001122  0E20               	movlw	32
  6866  001124  104A               	iorwf	xtoa@c,w,c
  6867  001126  6E32               	movwf	(??_xtoa+2)& (0+255),c
  6868  001128  0E00               	movlw	0
  6869  00112A  104B               	iorwf	xtoa@c+1,w,c
  6870  00112C  6E33               	movwf	(??_xtoa+3)& (0+255),c
  6871  00112E  5030               	movf	??_xtoa,w,c
  6872  001130  2632               	addwf	??_xtoa+2,f,c
  6873  001132  5031               	movf	??_xtoa+1,w,c
  6874  001134  2233               	addwfc	??_xtoa+3,f,c
  6875  001136  5033               	movf	??_xtoa+3,w,c
  6876  001138  E106               	bnz	u5240
  6877  00113A  0E1A               	movlw	26
  6878  00113C  5C32               	subwf	??_xtoa+2,w,c
  6879  00113E  B0D8               	btfsc	status,0,c
  6880  001140  D002               	goto	u5240
  6881  001142  0E01               	movlw	1
  6882  001144  D001               	goto	u5250
  6883  001146                     u5240:
  6884  001146  0E00               	movlw	0
  6885  001148                     u5250:
  6886  001148  6E3A               	movwf	_xtoa$1117,c
  6887  00114A  6A3B               	clrf	_xtoa$1117+1,c
  6888  00114C  503A               	movf	_xtoa$1117,w,c
  6889  00114E  103B               	iorwf	_xtoa$1117+1,w,c
  6890  001150  B4D8               	btfsc	status,2,c
  6891  001152  D00A               	goto	l5415
  6892                           
  6893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6894  001154  C04A  F00C         	movff	xtoa@c,toupper@c
  6895  001158  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
  6896  00115C  EC46  F012         	call	_toupper	;wreg free
  6897  001160  C00C  F04A         	movff	?_toupper,xtoa@c
  6898  001164  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
  6899  001168                     l5415:
  6900                           
  6901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6902  001168  0ECB               	movlw	low _dbuf
  6903  00116A  2448               	addwf	xtoa@i,w,c
  6904  00116C  6ED9               	movwf	fsr2l,c
  6905  00116E  0E00               	movlw	high _dbuf
  6906  001170  2049               	addwfc	xtoa@i+1,w,c
  6907  001172  6EDA               	movwf	fsr2h,c
  6908  001174  C04A  FFDF         	movff	xtoa@c,indf2
  6909                           
  6910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6911  001178  063C               	decf	xtoa@p,f,c
  6912  00117A  A0D8               	btfss	status,0,c
  6913  00117C  063D               	decf	xtoa@p+1,f,c
  6914                           
  6915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6916  00117E  063E               	decf	xtoa@w,f,c
  6917  001180  A0D8               	btfss	status,0,c
  6918  001182  063F               	decf	xtoa@w+1,f,c
  6919                           
  6920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6921  001184  C040  F030         	movff	xtoa@n,??_xtoa
  6922  001188  C041  F031         	movff	xtoa@n+1,??_xtoa+1
  6923  00118C  C042  F032         	movff	xtoa@n+2,??_xtoa+2
  6924  001190  C043  F033         	movff	xtoa@n+3,??_xtoa+3
  6925  001194  C044  F034         	movff	xtoa@n+4,??_xtoa+4
  6926  001198  C045  F035         	movff	xtoa@n+5,??_xtoa+5
  6927  00119C  C046  F036         	movff	xtoa@n+6,??_xtoa+6
  6928  0011A0  C047  F037         	movff	xtoa@n+7,??_xtoa+7
  6929  0011A4  0E05               	movlw	5
  6930  0011A6  D009               	goto	u5270
  6931  0011A8                     u5275:
  6932  0011A8  90D8               	bcf	status,0,c
  6933  0011AA  3237               	rrcf	??_xtoa+7,f,c
  6934  0011AC  3236               	rrcf	??_xtoa+6,f,c
  6935  0011AE  3235               	rrcf	??_xtoa+5,f,c
  6936  0011B0  3234               	rrcf	??_xtoa+4,f,c
  6937  0011B2  3233               	rrcf	??_xtoa+3,f,c
  6938  0011B4  3232               	rrcf	??_xtoa+2,f,c
  6939  0011B6  3231               	rrcf	??_xtoa+1,f,c
  6940  0011B8  3230               	rrcf	??_xtoa,f,c
  6941  0011BA                     u5270:
  6942  0011BA  2EE8               	decfsz	wreg,f,c
  6943  0011BC  D7F5               	goto	u5275
  6944  0011BE  C030  F040         	movff	??_xtoa,xtoa@n
  6945  0011C2  C031  F041         	movff	??_xtoa+1,xtoa@n+1
  6946  0011C6  C032  F042         	movff	??_xtoa+2,xtoa@n+2
  6947  0011CA  C033  F043         	movff	??_xtoa+3,xtoa@n+3
  6948  0011CE  C034  F044         	movff	??_xtoa+4,xtoa@n+4
  6949  0011D2  C035  F045         	movff	??_xtoa+5,xtoa@n+5
  6950  0011D6  C036  F046         	movff	??_xtoa+6,xtoa@n+6
  6951  0011DA  C037  F047         	movff	??_xtoa+7,xtoa@n+7
  6952  0011DE                     l5423:
  6953                           
  6954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6955  0011DE  BE49               	btfsc	xtoa@i+1,7,c
  6956  0011E0  D020               	goto	u5320
  6957  0011E2  5049               	movf	xtoa@i+1,w,c
  6958  0011E4  E104               	bnz	u5280
  6959  0011E6  0E02               	movlw	2
  6960  0011E8  5C48               	subwf	xtoa@i,w,c
  6961  0011EA  A0D8               	btfss	status,0,c
  6962  0011EC  D01A               	goto	u5320
  6963  0011EE                     u5280:
  6964  0011EE  5040               	movf	xtoa@n,w,c
  6965  0011F0  1041               	iorwf	xtoa@n+1,w,c
  6966  0011F2  1042               	iorwf	xtoa@n+2,w,c
  6967  0011F4  1043               	iorwf	xtoa@n+3,w,c
  6968  0011F6  1044               	iorwf	xtoa@n+4,w,c
  6969  0011F8  1045               	iorwf	xtoa@n+5,w,c
  6970  0011FA  1046               	iorwf	xtoa@n+6,w,c
  6971  0011FC  1047               	iorwf	xtoa@n+7,w,c
  6972  0011FE  A4D8               	btfss	status,2,c
  6973  001200  D75B               	goto	l5393
  6974  001202  BE3D               	btfsc	xtoa@p+1,7,c
  6975  001204  D005               	goto	u5300
  6976  001206  503D               	movf	xtoa@p+1,w,c
  6977  001208  E102               	bnz	u5301
  6978  00120A  043C               	decf	xtoa@p,w,c
  6979  00120C  B0D8               	btfsc	status,0,c
  6980  00120E                     u5301:
  6981  00120E  D754               	goto	l5393
  6982  001210                     u5300:
  6983  001210  BE3F               	btfsc	xtoa@w+1,7,c
  6984  001212  D007               	goto	u5320
  6985  001214  503F               	movf	xtoa@w+1,w,c
  6986  001216  E103               	bnz	u5310
  6987  001218  043E               	decf	xtoa@w,w,c
  6988  00121A  A0D8               	btfss	status,0,c
  6989  00121C  D002               	goto	u5320
  6990  00121E                     u5310:
  6991  00121E  B275               	btfsc	_flags,1,c
  6992  001220  D74B               	goto	l5393
  6993  001222                     u5320:
  6994                           
  6995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6996  001222  A875               	btfss	_flags,4,c
  6997  001224  D016               	goto	l5439
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7000  001226  0648               	decf	xtoa@i,f,c
  7001  001228  A0D8               	btfss	status,0,c
  7002  00122A  0649               	decf	xtoa@i+1,f,c
  7003                           
  7004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7005  00122C  0ECB               	movlw	low _dbuf
  7006  00122E  2448               	addwf	xtoa@i,w,c
  7007  001230  6ED9               	movwf	fsr2l,c
  7008  001232  0E00               	movlw	high _dbuf
  7009  001234  2049               	addwfc	xtoa@i+1,w,c
  7010  001236  6EDA               	movwf	fsr2h,c
  7011  001238  C02F  FFDF         	movff	xtoa@x,indf2
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7014  00123C  0648               	decf	xtoa@i,f,c
  7015  00123E  A0D8               	btfss	status,0,c
  7016  001240  0649               	decf	xtoa@i+1,f,c
  7017                           
  7018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7019  001242  0ECB               	movlw	low _dbuf
  7020  001244  2448               	addwf	xtoa@i,w,c
  7021  001246  6ED9               	movwf	fsr2l,c
  7022  001248  0E00               	movlw	high _dbuf
  7023  00124A  2049               	addwfc	xtoa@i+1,w,c
  7024  00124C  6EDA               	movwf	fsr2h,c
  7025  00124E  0E30               	movlw	48
  7026  001250  6EDF               	movwf	indf2,c
  7027  001252                     l5439:
  7028                           
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7030  001252  C025  F01A         	movff	xtoa@fp,pad@fp
  7031  001256  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
  7032  00125A  0ECB               	movlw	low _dbuf
  7033  00125C  2448               	addwf	xtoa@i,w,c
  7034  00125E  6E1C               	movwf	pad@buf,c
  7035  001260  0E00               	movlw	high _dbuf
  7036  001262  2049               	addwfc	xtoa@i+1,w,c
  7037  001264  6E1D               	movwf	pad@buf+1,c
  7038  001266  C03E  F01E         	movff	xtoa@w,pad@p
  7039  00126A  C03F  F01F         	movff	xtoa@w+1,pad@p+1
  7040  00126E  EC16  F010         	call	_pad	;wreg free
  7041  001272  C01A  F025         	movff	?_pad,?_xtoa
  7042  001276  C01B  F026         	movff	?_pad+1,?_xtoa+1
  7043  00127A  0012               	return		;funcret
  7044  00127C                     __end_of_xtoa:
  7045                           	opt callstack 0
  7046                           
  7047 ;; *************** function _toupper *****************
  7048 ;; Defined at:
  7049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  c               2   11[COMRAM] int 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  2   11[COMRAM] int 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;Total ram usage:        8 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    3
  7070 ;; This function calls:
  7071 ;;		_islower
  7072 ;; This function is called by:
  7073 ;;		_xtoa
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text29
  7078  00248C                     __ptext29:
  7079                           	opt callstack 0
  7080  00248C                     _toupper:
  7081                           	opt callstack 23
  7082                           
  7083                           ;incstack = 0
  7084  00248C  0E9F               	movlw	159
  7085  00248E  6E0E               	movwf	??_toupper& (0+255),c
  7086  002490  0EFF               	movlw	255
  7087  002492  6E0F               	movwf	(??_toupper+1)& (0+255),c
  7088  002494  C00C  F010         	movff	toupper@c,??_toupper+2
  7089  002498  C00D  F011         	movff	toupper@c+1,??_toupper+3
  7090  00249C  500E               	movf	??_toupper,w,c
  7091  00249E  2610               	addwf	??_toupper+2,f,c
  7092  0024A0  500F               	movf	??_toupper+1,w,c
  7093  0024A2  2211               	addwfc	??_toupper+3,f,c
  7094  0024A4  5011               	movf	??_toupper+3,w,c
  7095  0024A6  E106               	bnz	u4720
  7096  0024A8  0E1A               	movlw	26
  7097  0024AA  5C10               	subwf	??_toupper+2,w,c
  7098  0024AC  B0D8               	btfsc	status,0,c
  7099  0024AE  D002               	goto	u4720
  7100  0024B0  0E01               	movlw	1
  7101  0024B2  D001               	goto	u4730
  7102  0024B4                     u4720:
  7103  0024B4  0E00               	movlw	0
  7104  0024B6                     u4730:
  7105  0024B6  6E12               	movwf	_toupper$1681,c
  7106  0024B8  6A13               	clrf	_toupper$1681+1,c
  7107  0024BA  5012               	movf	_toupper$1681,w,c
  7108  0024BC  1013               	iorwf	_toupper$1681+1,w,c
  7109  0024BE  B4D8               	btfsc	status,2,c
  7110  0024C0  D005               	goto	l1327
  7111  0024C2  0E5F               	movlw	95
  7112  0024C4  140C               	andwf	toupper@c,w,c
  7113  0024C6  6E0C               	movwf	?_toupper,c
  7114  0024C8  6A0D               	clrf	?_toupper+1,c
  7115  0024CA  0012               	return	
  7116  0024CC                     l1327:
  7117  0024CC  C00C  F00C         	movff	toupper@c,?_toupper
  7118  0024D0  C00D  F00D         	movff	toupper@c+1,?_toupper+1
  7119  0024D4  0012               	return		;funcret
  7120  0024D6                     __end_of_toupper:
  7121                           	opt callstack 0
  7122                           
  7123 ;; *************** function _islower *****************
  7124 ;; Defined at:
  7125 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  c               2    5[COMRAM] int 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2    5[COMRAM] int 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;Total ram usage:        6 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    2
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_toupper
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text30
  7154  00266A                     __ptext30:
  7155                           	opt callstack 0
  7156  00266A                     _islower:
  7157                           	opt callstack 23
  7158                           
  7159                           ;incstack = 0
  7160  00266A  0E9F               	movlw	159
  7161  00266C  6E08               	movwf	??_islower& (0+255),c
  7162  00266E  0EFF               	movlw	255
  7163  002670  6E09               	movwf	(??_islower+1)& (0+255),c
  7164  002672  C006  F00A         	movff	islower@c,??_islower+2
  7165  002676  C007  F00B         	movff	islower@c+1,??_islower+3
  7166  00267A  5008               	movf	??_islower,w,c
  7167  00267C  260A               	addwf	??_islower+2,f,c
  7168  00267E  5009               	movf	??_islower+1,w,c
  7169  002680  220B               	addwfc	??_islower+3,f,c
  7170  002682  500B               	movf	??_islower+3,w,c
  7171  002684  E106               	bnz	u4610
  7172  002686  0E1A               	movlw	26
  7173  002688  5C0A               	subwf	??_islower+2,w,c
  7174  00268A  B0D8               	btfsc	status,0,c
  7175  00268C  D002               	goto	u4610
  7176  00268E  0E01               	movlw	1
  7177  002690  D001               	goto	u4620
  7178  002692                     u4610:
  7179  002692  0E00               	movlw	0
  7180  002694                     u4620:
  7181  002694  6E06               	movwf	?_islower,c
  7182  002696  6A07               	clrf	?_islower+1,c
  7183  002698  0012               	return		;funcret
  7184  00269A                     __end_of_islower:
  7185                           	opt callstack 0
  7186                           
  7187 ;; *************** function _isupper *****************
  7188 ;; Defined at:
  7189 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  c               2    5[COMRAM] int 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  2    5[COMRAM] int 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;Total ram usage:        6 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    2
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_xtoa
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text31
  7218  00269A                     __ptext31:
  7219                           	opt callstack 0
  7220  00269A                     _isupper:
  7221                           	opt callstack 24
  7222                           
  7223                           ;incstack = 0
  7224  00269A  0EBF               	movlw	191
  7225  00269C  6E08               	movwf	??_isupper& (0+255),c
  7226  00269E  0EFF               	movlw	255
  7227  0026A0  6E09               	movwf	(??_isupper+1)& (0+255),c
  7228  0026A2  C006  F00A         	movff	isupper@c,??_isupper+2
  7229  0026A6  C007  F00B         	movff	isupper@c+1,??_isupper+3
  7230  0026AA  5008               	movf	??_isupper,w,c
  7231  0026AC  260A               	addwf	??_isupper+2,f,c
  7232  0026AE  5009               	movf	??_isupper+1,w,c
  7233  0026B0  220B               	addwfc	??_isupper+3,f,c
  7234  0026B2  500B               	movf	??_isupper+3,w,c
  7235  0026B4  E106               	bnz	u4680
  7236  0026B6  0E1A               	movlw	26
  7237  0026B8  5C0A               	subwf	??_isupper+2,w,c
  7238  0026BA  B0D8               	btfsc	status,0,c
  7239  0026BC  D002               	goto	u4680
  7240  0026BE  0E01               	movlw	1
  7241  0026C0  D001               	goto	u4690
  7242  0026C2                     u4680:
  7243  0026C2  0E00               	movlw	0
  7244  0026C4                     u4690:
  7245  0026C4  6E06               	movwf	?_isupper,c
  7246  0026C6  6A07               	clrf	?_isupper+1,c
  7247  0026C8  0012               	return		;funcret
  7248  0026CA                     __end_of_isupper:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _isalpha *****************
  7252 ;; Defined at:
  7253 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  c               2    5[COMRAM] int 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    5[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_xtoa
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text32
  7282  0025D0                     __ptext32:
  7283                           	opt callstack 0
  7284  0025D0                     _isalpha:
  7285                           	opt callstack 24
  7286                           
  7287                           ;incstack = 0
  7288  0025D0  0E9F               	movlw	159
  7289  0025D2  6E08               	movwf	??_isalpha& (0+255),c
  7290  0025D4  0EFF               	movlw	255
  7291  0025D6  6E09               	movwf	(??_isalpha+1)& (0+255),c
  7292  0025D8  0E20               	movlw	32
  7293  0025DA  1006               	iorwf	isalpha@c,w,c
  7294  0025DC  6E0A               	movwf	(??_isalpha+2)& (0+255),c
  7295  0025DE  0E00               	movlw	0
  7296  0025E0  1007               	iorwf	isalpha@c+1,w,c
  7297  0025E2  6E0B               	movwf	(??_isalpha+3)& (0+255),c
  7298  0025E4  5008               	movf	??_isalpha,w,c
  7299  0025E6  260A               	addwf	??_isalpha+2,f,c
  7300  0025E8  5009               	movf	??_isalpha+1,w,c
  7301  0025EA  220B               	addwfc	??_isalpha+3,f,c
  7302  0025EC  500B               	movf	??_isalpha+3,w,c
  7303  0025EE  E106               	bnz	u4700
  7304  0025F0  0E1A               	movlw	26
  7305  0025F2  5C0A               	subwf	??_isalpha+2,w,c
  7306  0025F4  B0D8               	btfsc	status,0,c
  7307  0025F6  D002               	goto	u4700
  7308  0025F8  0E01               	movlw	1
  7309  0025FA  D001               	goto	u4710
  7310  0025FC                     u4700:
  7311  0025FC  0E00               	movlw	0
  7312  0025FE                     u4710:
  7313  0025FE  6E06               	movwf	?_isalpha,c
  7314  002600  6A07               	clrf	?_isalpha+1,c
  7315  002602  0012               	return		;funcret
  7316  002604                     __end_of_isalpha:
  7317                           	opt callstack 0
  7318                           
  7319 ;; *************** function _stoa *****************
  7320 ;; Defined at:
  7321 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7324 ;;		 -> NULL(0), 
  7325 ;;  s               2   20[COMRAM] PTR unsigned char 
  7326 ;;		 -> ?_printf(2), STR_46(16), STR_44(14), STR_42(11), 
  7327 ;;		 -> STR_40(9), STR_38(16), STR_36(13), STR_34(13), 
  7328 ;;		 -> STR_32(9), STR_30(13), STR_28(14), STR_26(10), 
  7329 ;;		 -> STR_22(9), STR_16(14), STR_14(17), STR_12(15), 
  7330 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  7331 ;;		 -> STR_2(12), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  nuls            7   23[COMRAM] unsigned char [7]
  7334 ;;  l               2   38[COMRAM] int 
  7335 ;;  p               2   36[COMRAM] int 
  7336 ;;  cp              2   34[COMRAM] PTR unsigned char 
  7337 ;;		 -> ?_printf(2), stoa@nuls(7), STR_46(16), STR_44(14), 
  7338 ;;		 -> STR_42(11), STR_40(9), STR_38(16), STR_36(13), 
  7339 ;;		 -> STR_34(13), STR_32(9), STR_30(13), STR_28(14), 
  7340 ;;		 -> STR_26(10), STR_22(9), STR_16(14), STR_14(17), 
  7341 ;;		 -> STR_12(15), STR_10(9), STR_8(16), STR_6(14), 
  7342 ;;		 -> STR_4(16), STR_2(12), 
  7343 ;;  w               2   32[COMRAM] int 
  7344 ;;  i               2   30[COMRAM] int 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  2   18[COMRAM] int 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;Total ram usage:       22 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    7
  7361 ;; This function calls:
  7362 ;;		_fputc
  7363 ;;		_strlen
  7364 ;; This function is called by:
  7365 ;;		_vfpfcnvrt
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text33
  7370  001AFE                     __ptext33:
  7371                           	opt callstack 0
  7372  001AFE                     _stoa:
  7373                           	opt callstack 20
  7374                           
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7376                           
  7377                           ;incstack = 0
  7378  001AFE  EE20  F0EB         	lfsr	2,stoa@F1139
  7379  001B02  EE10  F018         	lfsr	1,stoa@nuls
  7380  001B06  0E06               	movlw	6
  7381  001B08                     u5071:
  7382  001B08  CFDB FFE3          	movff	plusw2,plusw1
  7383  001B0C  06E8               	decf	wreg,f,c
  7384  001B0E  E2FC               	bc	u5071
  7385                           
  7386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7387  001B10  C015  F023         	movff	stoa@s,stoa@cp
  7388  001B14  C016  F024         	movff	stoa@s+1,stoa@cp+1
  7389                           
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7391  001B18  5023               	movf	stoa@cp,w,c
  7392  001B1A  1024               	iorwf	stoa@cp+1,w,c
  7393  001B1C  A4D8               	btfss	status,2,c
  7394  001B1E  D004               	goto	l5343
  7395                           
  7396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7397  001B20  0E18               	movlw	low stoa@nuls
  7398  001B22  6E23               	movwf	stoa@cp,c
  7399  001B24  0E00               	movlw	high stoa@nuls
  7400  001B26  6E24               	movwf	stoa@cp+1,c
  7401  001B28                     l5343:
  7402                           
  7403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7404  001B28  C023  F006         	movff	stoa@cp,strlen@s
  7405  001B2C  C024  F007         	movff	stoa@cp+1,strlen@s+1
  7406  001B30  EC6B  F012         	call	_strlen	;wreg free
  7407  001B34  C006  F027         	movff	?_strlen,stoa@l
  7408  001B38  C007  F028         	movff	?_strlen+1,stoa@l+1
  7409                           
  7410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7411  001B3C  C073  F025         	movff	_prec,stoa@p
  7412  001B40  C074  F026         	movff	_prec+1,stoa@p+1
  7413                           
  7414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7415  001B44  BE26               	btfsc	stoa@p+1,7,c
  7416  001B46  D00E               	goto	l467
  7417  001B48  5027               	movf	stoa@l,w,c
  7418  001B4A  5C25               	subwf	stoa@p,w,c
  7419  001B4C  5026               	movf	stoa@p+1,w,c
  7420  001B4E  0A80               	xorlw	128
  7421  001B50  6E17               	movwf	??_stoa& (0+255),c
  7422  001B52  5028               	movf	stoa@l+1,w,c
  7423  001B54  0A80               	xorlw	128
  7424  001B56  5817               	subwfb	??_stoa& (0+255),w,c
  7425  001B58  B0D8               	btfsc	status,0,c
  7426  001B5A  D004               	goto	l467
  7427  001B5C  C025  F027         	movff	stoa@p,stoa@l
  7428  001B60  C026  F028         	movff	stoa@p+1,stoa@l+1
  7429  001B64                     l467:
  7430                           
  7431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7432  001B64  C027  F025         	movff	stoa@l,stoa@p
  7433  001B68  C028  F026         	movff	stoa@l+1,stoa@p+1
  7434                           
  7435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7436  001B6C  C0BF  F021         	movff	_width,stoa@w
  7437  001B70  C0C0  F022         	movff	_width+1,stoa@w+1
  7438                           
  7439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7440  001B74  A075               	btfss	_flags,0,c
  7441  001B76  D00D               	goto	l5357
  7442  001B78  D016               	goto	u5120
  7443  001B7A                     l5353:
  7444                           
  7445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7446  001B7A  0E00               	movlw	0
  7447  001B7C  6E0B               	movwf	fputc@c+1,c
  7448  001B7E  0E20               	movlw	32
  7449  001B80  6E0A               	movwf	fputc@c,c
  7450  001B82  C013  F00C         	movff	stoa@fp,fputc@fp
  7451  001B86  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7452  001B8A  EC24  F011         	call	_fputc	;wreg free
  7453                           
  7454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7455  001B8E  4A27               	infsnz	stoa@l,f,c
  7456  001B90  2A28               	incf	stoa@l+1,f,c
  7457  001B92                     l5357:
  7458                           
  7459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7460  001B92  5021               	movf	stoa@w,w,c
  7461  001B94  5C27               	subwf	stoa@l,w,c
  7462  001B96  5028               	movf	stoa@l+1,w,c
  7463  001B98  0A80               	xorlw	128
  7464  001B9A  6E17               	movwf	??_stoa& (0+255),c
  7465  001B9C  5022               	movf	stoa@w+1,w,c
  7466  001B9E  0A80               	xorlw	128
  7467  001BA0  5817               	subwfb	??_stoa& (0+255),w,c
  7468  001BA2  A0D8               	btfss	status,0,c
  7469  001BA4  D7EA               	goto	l5353
  7470  001BA6                     u5120:
  7471                           
  7472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7473  001BA6  0E00               	movlw	0
  7474  001BA8  6E20               	movwf	stoa@i+1,c
  7475  001BAA  0E00               	movlw	0
  7476  001BAC  6E1F               	movwf	stoa@i,c
  7477                           
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7479  001BAE  D01F               	goto	l5367
  7480  001BB0                     l5361:
  7481                           
  7482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7483  001BB0  C023  FFF6         	movff	stoa@cp,tblptrl
  7484  001BB4  C024  FFF7         	movff	stoa@cp+1,tblptrh
  7485  001BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7486  001BBA  6EF8               	movwf	tblptru,c
  7487  001BBC  0E0F               	movlw	(high __ramtop+-1)
  7488  001BBE  64F7               	cpfsgt	tblptrh,c
  7489  001BC0  D003               	bra	u5137
  7490  001BC2  0008               	tblrd		*
  7491  001BC4  50F5               	movf	tablat,w,c
  7492  001BC6  D005               	bra	u5130
  7493  001BC8                     u5137:
  7494  001BC8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7495  001BCC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7496  001BD0  50E7               	movf	indf1,w,c
  7497  001BD2                     u5130:
  7498  001BD2  6E17               	movwf	??_stoa& (0+255),c
  7499  001BD4  5017               	movf	??_stoa,w,c
  7500  001BD6  6E0A               	movwf	fputc@c,c
  7501  001BD8  6A0B               	clrf	fputc@c+1,c
  7502  001BDA  C013  F00C         	movff	stoa@fp,fputc@fp
  7503  001BDE  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7504  001BE2  EC24  F011         	call	_fputc	;wreg free
  7505                           
  7506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7507  001BE6  4A23               	infsnz	stoa@cp,f,c
  7508  001BE8  2A24               	incf	stoa@cp+1,f,c
  7509                           
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7511  001BEA  4A1F               	infsnz	stoa@i,f,c
  7512  001BEC  2A20               	incf	stoa@i+1,f,c
  7513  001BEE                     l5367:
  7514                           
  7515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7516  001BEE  5025               	movf	stoa@p,w,c
  7517  001BF0  5C1F               	subwf	stoa@i,w,c
  7518  001BF2  5020               	movf	stoa@i+1,w,c
  7519  001BF4  0A80               	xorlw	128
  7520  001BF6  6E17               	movwf	??_stoa& (0+255),c
  7521  001BF8  5026               	movf	stoa@p+1,w,c
  7522  001BFA  0A80               	xorlw	128
  7523  001BFC  5817               	subwfb	??_stoa& (0+255),w,c
  7524  001BFE  A0D8               	btfss	status,0,c
  7525  001C00  D7D7               	goto	l5361
  7526                           
  7527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7528  001C02  B075               	btfsc	_flags,0,c
  7529  001C04  D00D               	goto	l5375
  7530  001C06  D016               	goto	u5160
  7531  001C08                     l5371:
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7534  001C08  0E00               	movlw	0
  7535  001C0A  6E0B               	movwf	fputc@c+1,c
  7536  001C0C  0E20               	movlw	32
  7537  001C0E  6E0A               	movwf	fputc@c,c
  7538  001C10  C013  F00C         	movff	stoa@fp,fputc@fp
  7539  001C14  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
  7540  001C18  EC24  F011         	call	_fputc	;wreg free
  7541                           
  7542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7543  001C1C  4A27               	infsnz	stoa@l,f,c
  7544  001C1E  2A28               	incf	stoa@l+1,f,c
  7545  001C20                     l5375:
  7546                           
  7547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7548  001C20  5021               	movf	stoa@w,w,c
  7549  001C22  5C27               	subwf	stoa@l,w,c
  7550  001C24  5028               	movf	stoa@l+1,w,c
  7551  001C26  0A80               	xorlw	128
  7552  001C28  6E17               	movwf	??_stoa& (0+255),c
  7553  001C2A  5022               	movf	stoa@w+1,w,c
  7554  001C2C  0A80               	xorlw	128
  7555  001C2E  5817               	subwfb	??_stoa& (0+255),w,c
  7556  001C30  A0D8               	btfss	status,0,c
  7557  001C32  D7EA               	goto	l5371
  7558  001C34                     u5160:
  7559                           
  7560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7561                           
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  7563  001C34  C027  F013         	movff	stoa@l,?_stoa
  7564  001C38  C028  F014         	movff	stoa@l+1,?_stoa+1
  7565  001C3C  0012               	return		;funcret
  7566  001C3E                     __end_of_stoa:
  7567                           	opt callstack 0
  7568                           
  7569 ;; *************** function _dtoa *****************
  7570 ;; Defined at:
  7571 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  7574 ;;		 -> NULL(0), 
  7575 ;;  d               8   38[COMRAM] long long 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  n               8   62[COMRAM] long long 
  7578 ;;  i               2   70[COMRAM] int 
  7579 ;;  s               2   60[COMRAM] int 
  7580 ;;  w               2   58[COMRAM] int 
  7581 ;;  p               2   56[COMRAM] int 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  2   36[COMRAM] int 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7591 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;Total ram usage:       36 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    9
  7598 ;; This function calls:
  7599 ;;		___aodiv
  7600 ;;		___aomod
  7601 ;;		_abs
  7602 ;;		_pad
  7603 ;; This function is called by:
  7604 ;;		_vfpfcnvrt
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text34
  7609  000E0E                     __ptext34:
  7610                           	opt callstack 0
  7611  000E0E                     _dtoa:
  7612                           	opt callstack 18
  7613                           
  7614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7615                           
  7616                           ;incstack = 0
  7617  000E0E  C027  F03F         	movff	dtoa@d,dtoa@n
  7618  000E12  C028  F040         	movff	dtoa@d+1,dtoa@n+1
  7619  000E16  C029  F041         	movff	dtoa@d+2,dtoa@n+2
  7620  000E1A  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
  7621  000E1E  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
  7622  000E22  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
  7623  000E26  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
  7624  000E2A  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
  7625                           
  7626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7627  000E2E  AE46               	btfss	dtoa@n+7,7,c
  7628  000E30  D002               	goto	u4920
  7629  000E32  0E01               	movlw	1
  7630  000E34  D001               	goto	u4930
  7631  000E36                     u4920:
  7632  000E36  0E00               	movlw	0
  7633  000E38                     u4930:
  7634  000E38  6E3D               	movwf	dtoa@s,c
  7635  000E3A  6A3E               	clrf	dtoa@s+1,c
  7636                           
  7637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7638  000E3C  503D               	movf	dtoa@s,w,c
  7639  000E3E  103E               	iorwf	dtoa@s+1,w,c
  7640  000E40  B4D8               	btfsc	status,2,c
  7641  000E42  D010               	goto	l5279
  7642                           
  7643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7644  000E44  1E46               	comf	dtoa@n+7,f,c
  7645  000E46  1E45               	comf	dtoa@n+6,f,c
  7646  000E48  1E44               	comf	dtoa@n+5,f,c
  7647  000E4A  1E43               	comf	dtoa@n+4,f,c
  7648  000E4C  1E42               	comf	dtoa@n+3,f,c
  7649  000E4E  1E41               	comf	dtoa@n+2,f,c
  7650  000E50  1E40               	comf	dtoa@n+1,f,c
  7651  000E52  6C3F               	negf	dtoa@n,c
  7652  000E54  0E00               	movlw	0
  7653  000E56  2240               	addwfc	dtoa@n+1,f,c
  7654  000E58  2241               	addwfc	dtoa@n+2,f,c
  7655  000E5A  2242               	addwfc	dtoa@n+3,f,c
  7656  000E5C  2243               	addwfc	dtoa@n+4,f,c
  7657  000E5E  2244               	addwfc	dtoa@n+5,f,c
  7658  000E60  2245               	addwfc	dtoa@n+6,f,c
  7659  000E62  2246               	addwfc	dtoa@n+7,f,c
  7660  000E64                     l5279:
  7661                           
  7662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7663  000E64  AE74               	btfss	_prec+1,7,c
  7664                           
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7666  000E66  9275               	bcf	_flags,1,c
  7667                           
  7668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7669  000E68  BE74               	btfsc	_prec+1,7,c
  7670  000E6A  D005               	goto	u4960
  7671  000E6C  5074               	movf	_prec+1,w,c
  7672  000E6E  E108               	bnz	l438
  7673  000E70  0473               	decf	_prec,w,c
  7674  000E72  B0D8               	btfsc	status,0,c
  7675  000E74  D005               	goto	l438
  7676  000E76                     u4960:
  7677  000E76  0E00               	movlw	0
  7678  000E78  6E3A               	movwf	dtoa@p+1,c
  7679  000E7A  0E01               	movlw	1
  7680  000E7C  6E39               	movwf	dtoa@p,c
  7681  000E7E  D004               	goto	l440
  7682  000E80                     l438:
  7683  000E80  C073  F039         	movff	_prec,dtoa@p
  7684  000E84  C074  F03A         	movff	_prec+1,dtoa@p+1
  7685  000E88                     l440:
  7686                           
  7687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7688  000E88  C0BF  F03B         	movff	_width,dtoa@w
  7689  000E8C  C0C0  F03C         	movff	_width+1,dtoa@w+1
  7690                           
  7691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7692  000E90  503D               	movf	dtoa@s,w,c
  7693  000E92  103E               	iorwf	dtoa@s+1,w,c
  7694  000E94  A4D8               	btfss	status,2,c
  7695  000E96  D002               	goto	u4980
  7696  000E98  A475               	btfss	_flags,2,c
  7697  000E9A  D003               	goto	l5293
  7698  000E9C                     u4980:
  7699                           
  7700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7701  000E9C  063B               	decf	dtoa@w,f,c
  7702  000E9E  A0D8               	btfss	status,0,c
  7703  000EA0  063C               	decf	dtoa@w+1,f,c
  7704  000EA2                     l5293:
  7705                           
  7706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7707  000EA2  0E00               	movlw	0
  7708  000EA4  6E48               	movwf	dtoa@i+1,c
  7709  000EA6  0E1F               	movlw	31
  7710  000EA8  6E47               	movwf	dtoa@i,c
  7711                           
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7713  000EAA  0E00               	movlw	0
  7714  000EAC  0100               	movlb	0	; () banked
  7715  000EAE  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7716                           
  7717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7718  000EB0  D07C               	goto	l5307
  7719  000EB2                     l5297:
  7720                           
  7721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7722  000EB2  0647               	decf	dtoa@i,f,c
  7723  000EB4  A0D8               	btfss	status,0,c
  7724  000EB6  0648               	decf	dtoa@i+1,f,c
  7725                           
  7726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7727  000EB8  0ECB               	movlw	low _dbuf
  7728  000EBA  2447               	addwf	dtoa@i,w,c
  7729  000EBC  6ED9               	movwf	fsr2l,c
  7730  000EBE  0E00               	movlw	high _dbuf
  7731  000EC0  2048               	addwfc	dtoa@i+1,w,c
  7732  000EC2  6EDA               	movwf	fsr2h,c
  7733  000EC4  C03F  F006         	movff	dtoa@n,___aomod@dividend
  7734  000EC8  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
  7735  000ECC  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
  7736  000ED0  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
  7737  000ED4  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  7738  000ED8  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  7739  000EDC  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  7740  000EE0  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  7741  000EE4  0E0A               	movlw	10
  7742  000EE6  6E0E               	movwf	___aomod@divisor,c
  7743  000EE8  0E00               	movlw	0
  7744  000EEA  6E0F               	movwf	___aomod@divisor+1,c
  7745  000EEC  0E00               	movlw	0
  7746  000EEE  6E10               	movwf	___aomod@divisor+2,c
  7747  000EF0  0E00               	movlw	0
  7748  000EF2  6E11               	movwf	___aomod@divisor+3,c
  7749  000EF4  0E00               	movlw	0
  7750  000EF6  6E12               	movwf	___aomod@divisor+4,c
  7751  000EF8  0E00               	movlw	0
  7752  000EFA  6E13               	movwf	___aomod@divisor+5,c
  7753  000EFC  0E00               	movlw	0
  7754  000EFE  6E14               	movwf	___aomod@divisor+6,c
  7755  000F00  0E00               	movlw	0
  7756  000F02  6E15               	movwf	___aomod@divisor+7,c
  7757  000F04  ECBF  F00E         	call	___aomod	;wreg free
  7758  000F08  C006  F02F         	movff	?___aomod,??_dtoa
  7759  000F0C  C007  F030         	movff	?___aomod+1,??_dtoa+1
  7760  000F10  C008  F031         	movff	?___aomod+2,??_dtoa+2
  7761  000F14  C009  F032         	movff	?___aomod+3,??_dtoa+3
  7762  000F18  C00A  F033         	movff	?___aomod+4,??_dtoa+4
  7763  000F1C  C00B  F034         	movff	?___aomod+5,??_dtoa+5
  7764  000F20  C00C  F035         	movff	?___aomod+6,??_dtoa+6
  7765  000F24  C00D  F036         	movff	?___aomod+7,??_dtoa+7
  7766  000F28  C02F  F018         	movff	??_dtoa,abs@a
  7767  000F2C  C031  F019         	movff	??_dtoa+2,abs@a+1
  7768  000F30  EC1C  F013         	call	_abs	;wreg free
  7769  000F34  5018               	movf	?_abs,w,c
  7770  000F36  0F30               	addlw	48
  7771  000F38  6EDF               	movwf	indf2,c
  7772                           
  7773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7774  000F3A  0639               	decf	dtoa@p,f,c
  7775  000F3C  A0D8               	btfss	status,0,c
  7776  000F3E  063A               	decf	dtoa@p+1,f,c
  7777                           
  7778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7779  000F40  063B               	decf	dtoa@w,f,c
  7780  000F42  A0D8               	btfss	status,0,c
  7781  000F44  063C               	decf	dtoa@w+1,f,c
  7782                           
  7783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7784  000F46  C03F  F006         	movff	dtoa@n,___aodiv@dividend
  7785  000F4A  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  7786  000F4E  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  7787  000F52  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  7788  000F56  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  7789  000F5A  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  7790  000F5E  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  7791  000F62  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  7792  000F66  0E0A               	movlw	10
  7793  000F68  6E0E               	movwf	___aodiv@divisor,c
  7794  000F6A  0E00               	movlw	0
  7795  000F6C  6E0F               	movwf	___aodiv@divisor+1,c
  7796  000F6E  0E00               	movlw	0
  7797  000F70  6E10               	movwf	___aodiv@divisor+2,c
  7798  000F72  0E00               	movlw	0
  7799  000F74  6E11               	movwf	___aodiv@divisor+3,c
  7800  000F76  0E00               	movlw	0
  7801  000F78  6E12               	movwf	___aodiv@divisor+4,c
  7802  000F7A  0E00               	movlw	0
  7803  000F7C  6E13               	movwf	___aodiv@divisor+5,c
  7804  000F7E  0E00               	movlw	0
  7805  000F80  6E14               	movwf	___aodiv@divisor+6,c
  7806  000F82  0E00               	movlw	0
  7807  000F84  6E15               	movwf	___aodiv@divisor+7,c
  7808  000F86  EC3B  F00C         	call	___aodiv	;wreg free
  7809  000F8A  C006  F03F         	movff	?___aodiv,dtoa@n
  7810  000F8E  C007  F040         	movff	?___aodiv+1,dtoa@n+1
  7811  000F92  C008  F041         	movff	?___aodiv+2,dtoa@n+2
  7812  000F96  C009  F042         	movff	?___aodiv+3,dtoa@n+3
  7813  000F9A  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
  7814  000F9E  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
  7815  000FA2  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
  7816  000FA6  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
  7817  000FAA                     l5307:
  7818                           
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7820  000FAA  BE48               	btfsc	dtoa@i+1,7,c
  7821  000FAC  D01F               	goto	u5030
  7822  000FAE  5048               	movf	dtoa@i+1,w,c
  7823  000FB0  E103               	bnz	u4990
  7824  000FB2  0447               	decf	dtoa@i,w,c
  7825  000FB4  A0D8               	btfss	status,0,c
  7826  000FB6  D01A               	goto	u5030
  7827  000FB8                     u4990:
  7828  000FB8  503F               	movf	dtoa@n,w,c
  7829  000FBA  1040               	iorwf	dtoa@n+1,w,c
  7830  000FBC  1041               	iorwf	dtoa@n+2,w,c
  7831  000FBE  1042               	iorwf	dtoa@n+3,w,c
  7832  000FC0  1043               	iorwf	dtoa@n+4,w,c
  7833  000FC2  1044               	iorwf	dtoa@n+5,w,c
  7834  000FC4  1045               	iorwf	dtoa@n+6,w,c
  7835  000FC6  1046               	iorwf	dtoa@n+7,w,c
  7836  000FC8  A4D8               	btfss	status,2,c
  7837  000FCA  D773               	goto	l5297
  7838  000FCC  BE3A               	btfsc	dtoa@p+1,7,c
  7839  000FCE  D005               	goto	u5010
  7840  000FD0  503A               	movf	dtoa@p+1,w,c
  7841  000FD2  E102               	bnz	u5011
  7842  000FD4  0439               	decf	dtoa@p,w,c
  7843  000FD6  B0D8               	btfsc	status,0,c
  7844  000FD8                     u5011:
  7845  000FD8  D76C               	goto	l5297
  7846  000FDA                     u5010:
  7847  000FDA  BE3C               	btfsc	dtoa@w+1,7,c
  7848  000FDC  D007               	goto	u5030
  7849  000FDE  503C               	movf	dtoa@w+1,w,c
  7850  000FE0  E103               	bnz	u5020
  7851  000FE2  043B               	decf	dtoa@w,w,c
  7852  000FE4  A0D8               	btfss	status,0,c
  7853  000FE6  D002               	goto	u5030
  7854  000FE8                     u5020:
  7855  000FE8  B275               	btfsc	_flags,1,c
  7856  000FEA  D763               	goto	l5297
  7857  000FEC                     u5030:
  7858                           
  7859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7860  000FEC  503D               	movf	dtoa@s,w,c
  7861  000FEE  103E               	iorwf	dtoa@s+1,w,c
  7862  000FF0  A4D8               	btfss	status,2,c
  7863  000FF2  D002               	goto	u5050
  7864  000FF4  A475               	btfss	_flags,2,c
  7865  000FF6  D017               	goto	l5331
  7866  000FF8                     u5050:
  7867                           
  7868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7869  000FF8  0647               	decf	dtoa@i,f,c
  7870  000FFA  A0D8               	btfss	status,0,c
  7871  000FFC  0648               	decf	dtoa@i+1,f,c
  7872                           
  7873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7874  000FFE  503D               	movf	dtoa@s,w,c
  7875  001000  103E               	iorwf	dtoa@s+1,w,c
  7876  001002  A4D8               	btfss	status,2,c
  7877  001004  D004               	goto	l5327
  7878  001006  0E00               	movlw	0
  7879  001008  6E38               	movwf	_dtoa$1094+1,c
  7880  00100A  0E2B               	movlw	43
  7881  00100C  D003               	goto	L15
  7882  00100E                     l5327:
  7883  00100E  0E00               	movlw	0
  7884  001010  6E38               	movwf	_dtoa$1094+1,c
  7885  001012  0E2D               	movlw	45
  7886  001014                     L15:
  7887  001014  6E37               	movwf	_dtoa$1094,c
  7888  001016  0ECB               	movlw	low _dbuf
  7889  001018  2447               	addwf	dtoa@i,w,c
  7890  00101A  6ED9               	movwf	fsr2l,c
  7891  00101C  0E00               	movlw	high _dbuf
  7892  00101E  2048               	addwfc	dtoa@i+1,w,c
  7893  001020  6EDA               	movwf	fsr2h,c
  7894  001022  C037  FFDF         	movff	_dtoa$1094,indf2
  7895  001026                     l5331:
  7896                           
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7898  001026  C025  F01A         	movff	dtoa@fp,pad@fp
  7899  00102A  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  7900  00102E  0ECB               	movlw	low _dbuf
  7901  001030  2447               	addwf	dtoa@i,w,c
  7902  001032  6E1C               	movwf	pad@buf,c
  7903  001034  0E00               	movlw	high _dbuf
  7904  001036  2048               	addwfc	dtoa@i+1,w,c
  7905  001038  6E1D               	movwf	pad@buf+1,c
  7906  00103A  C03B  F01E         	movff	dtoa@w,pad@p
  7907  00103E  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  7908  001042  EC16  F010         	call	_pad	;wreg free
  7909  001046  C01A  F025         	movff	?_pad,?_dtoa
  7910  00104A  C01B  F026         	movff	?_pad+1,?_dtoa+1
  7911  00104E  0012               	return		;funcret
  7912  001050                     __end_of_dtoa:
  7913                           	opt callstack 0
  7914                           
  7915 ;; *************** function _pad *****************
  7916 ;; Defined at:
  7917 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  7920 ;;		 -> NULL(0), 
  7921 ;;  buf             2   27[COMRAM] PTR unsigned char 
  7922 ;;		 -> dbuf(32), 
  7923 ;;  p               2   29[COMRAM] int 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  w               2   34[COMRAM] int 
  7926 ;;  i               2   32[COMRAM] int 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  2   25[COMRAM] int 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7936 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;Total ram usage:       11 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    8
  7943 ;; This function calls:
  7944 ;;		_fputc
  7945 ;;		_fputs
  7946 ;;		_strlen
  7947 ;; This function is called by:
  7948 ;;		_dtoa
  7949 ;;		_xtoa
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text35
  7954  00202C                     __ptext35:
  7955                           	opt callstack 0
  7956  00202C                     _pad:
  7957                           	opt callstack 18
  7958                           
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7960                           
  7961                           ;incstack = 0
  7962  00202C  A075               	btfss	_flags,0,c
  7963  00202E  D00A               	goto	l5131
  7964                           
  7965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7966  002030  C01C  F013         	movff	pad@buf,fputs@s
  7967  002034  C01D  F014         	movff	pad@buf+1,fputs@s+1
  7968  002038  C01A  F015         	movff	pad@fp,fputs@fp
  7969  00203C  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  7970  002040  ECCC  F012         	call	_fputs	;wreg free
  7971  002044                     l5131:
  7972                           
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7974  002044  BE1F               	btfsc	pad@p+1,7,c
  7975  002046  D005               	goto	l5135
  7976  002048  C01E  F023         	movff	pad@p,pad@w
  7977  00204C  C01F  F024         	movff	pad@p+1,pad@w+1
  7978  002050  D004               	goto	l427
  7979  002052                     l5135:
  7980  002052  0E00               	movlw	0
  7981  002054  6E24               	movwf	pad@w+1,c
  7982  002056  0E00               	movlw	0
  7983  002058  6E23               	movwf	pad@w,c
  7984  00205A                     l427:
  7985                           
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7987  00205A  0E00               	movlw	0
  7988  00205C  6E22               	movwf	pad@i+1,c
  7989  00205E  0E00               	movlw	0
  7990  002060  6E21               	movwf	pad@i,c
  7991                           
  7992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7993  002062  D00C               	goto	l5141
  7994  002064                     l5137:
  7995                           
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7997  002064  0E00               	movlw	0
  7998  002066  6E0B               	movwf	fputc@c+1,c
  7999  002068  0E20               	movlw	32
  8000  00206A  6E0A               	movwf	fputc@c,c
  8001  00206C  C01A  F00C         	movff	pad@fp,fputc@fp
  8002  002070  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  8003  002074  EC24  F011         	call	_fputc	;wreg free
  8004                           
  8005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8006  002078  4A21               	infsnz	pad@i,f,c
  8007  00207A  2A22               	incf	pad@i+1,f,c
  8008  00207C                     l5141:
  8009                           
  8010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8011  00207C  5023               	movf	pad@w,w,c
  8012  00207E  5C21               	subwf	pad@i,w,c
  8013  002080  5022               	movf	pad@i+1,w,c
  8014  002082  0A80               	xorlw	128
  8015  002084  6E20               	movwf	??_pad& (0+255),c
  8016  002086  5024               	movf	pad@w+1,w,c
  8017  002088  0A80               	xorlw	128
  8018  00208A  5820               	subwfb	??_pad& (0+255),w,c
  8019  00208C  A0D8               	btfss	status,0,c
  8020  00208E  D7EA               	goto	l5137
  8021                           
  8022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8023  002090  B075               	btfsc	_flags,0,c
  8024  002092  D00A               	goto	l5145
  8025                           
  8026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8027  002094  C01C  F013         	movff	pad@buf,fputs@s
  8028  002098  C01D  F014         	movff	pad@buf+1,fputs@s+1
  8029  00209C  C01A  F015         	movff	pad@fp,fputs@fp
  8030  0020A0  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  8031  0020A4  ECCC  F012         	call	_fputs	;wreg free
  8032  0020A8                     l5145:
  8033                           
  8034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8035  0020A8  C01C  F006         	movff	pad@buf,strlen@s
  8036  0020AC  C01D  F007         	movff	pad@buf+1,strlen@s+1
  8037  0020B0  EC6B  F012         	call	_strlen	;wreg free
  8038  0020B4  5023               	movf	pad@w,w,c
  8039  0020B6  2406               	addwf	?_strlen,w,c
  8040  0020B8  6E1A               	movwf	?_pad,c
  8041  0020BA  5024               	movf	pad@w+1,w,c
  8042  0020BC  2007               	addwfc	?_strlen+1,w,c
  8043  0020BE  6E1B               	movwf	?_pad+1,c
  8044  0020C0  0012               	return		;funcret
  8045  0020C2                     __end_of_pad:
  8046                           	opt callstack 0
  8047                           
  8048 ;; *************** function _strlen *****************
  8049 ;; Defined at:
  8050 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8053 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_46(16), 
  8054 ;;		 -> STR_44(14), STR_42(11), STR_40(9), STR_38(16), 
  8055 ;;		 -> STR_36(13), STR_34(13), STR_32(9), STR_30(13), 
  8056 ;;		 -> STR_28(14), STR_26(10), STR_22(9), STR_16(14), 
  8057 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  8058 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8061 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_46(16), 
  8062 ;;		 -> STR_44(14), STR_42(11), STR_40(9), STR_38(16), 
  8063 ;;		 -> STR_36(13), STR_34(13), STR_32(9), STR_30(13), 
  8064 ;;		 -> STR_28(14), STR_26(10), STR_22(9), STR_16(14), 
  8065 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  8066 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  2    5[COMRAM] unsigned int 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;Total ram usage:        4 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    2
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_pad
  8087 ;;		_stoa
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text36
  8092  0024D6                     __ptext36:
  8093                           	opt callstack 0
  8094  0024D6                     _strlen:
  8095                           	opt callstack 23
  8096                           
  8097                           ;incstack = 0
  8098  0024D6  C006  F008         	movff	strlen@s,strlen@a
  8099  0024DA  C007  F009         	movff	strlen@s+1,strlen@a+1
  8100  0024DE  D002               	goto	l5117
  8101  0024E0                     l5115:
  8102  0024E0  4A06               	infsnz	strlen@s,f,c
  8103  0024E2  2A07               	incf	strlen@s+1,f,c
  8104  0024E4                     l5117:
  8105  0024E4  C006  FFF6         	movff	strlen@s,tblptrl
  8106  0024E8  C007  FFF7         	movff	strlen@s+1,tblptrh
  8107  0024EC  0E00               	movlw	low (__mediumconst shr (0+16))
  8108  0024EE  6EF8               	movwf	tblptru,c
  8109  0024F0  0E0F               	movlw	(high __ramtop+-1)
  8110  0024F2  64F7               	cpfsgt	tblptrh,c
  8111  0024F4  D003               	bra	u4597
  8112  0024F6  0008               	tblrd		*
  8113  0024F8  50F5               	movf	tablat,w,c
  8114  0024FA  D005               	bra	u4590
  8115  0024FC                     u4597:
  8116  0024FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8117  002500  CFF7 FFE2          	movff	tblptrh,fsr1h
  8118  002504  50E7               	movf	indf1,w,c
  8119  002506                     u4590:
  8120  002506  0900               	iorlw	0
  8121  002508  A4D8               	btfss	status,2,c
  8122  00250A  D7EA               	goto	l5115
  8123  00250C  5008               	movf	strlen@a,w,c
  8124  00250E  5C06               	subwf	strlen@s,w,c
  8125  002510  6E06               	movwf	?_strlen,c
  8126  002512  5009               	movf	strlen@a+1,w,c
  8127  002514  5807               	subwfb	strlen@s+1,w,c
  8128  002516  6E07               	movwf	?_strlen+1,c
  8129  002518  0012               	return		;funcret
  8130  00251A                     __end_of_strlen:
  8131                           	opt callstack 0
  8132                           
  8133 ;; *************** function _fputs *****************
  8134 ;; Defined at:
  8135 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  s               2   18[COMRAM] PTR const unsigned char 
  8138 ;;		 -> dbuf(32), 
  8139 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  8140 ;;		 -> NULL(0), 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  i               2   23[COMRAM] int 
  8143 ;;  c               1   22[COMRAM] unsigned char 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  2   18[COMRAM] int 
  8146 ;; Registers used:
  8147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;Total ram usage:        7 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    7
  8160 ;; This function calls:
  8161 ;;		_fputc
  8162 ;; This function is called by:
  8163 ;;		_pad
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text37
  8168  002598                     __ptext37:
  8169                           	opt callstack 0
  8170  002598                     _fputs:
  8171                           	opt callstack 18
  8172                           
  8173                           ;incstack = 0
  8174  002598  0E00               	movlw	0
  8175  00259A  6E19               	movwf	fputs@i+1,c
  8176  00259C  0E00               	movlw	0
  8177  00259E  6E18               	movwf	fputs@i,c
  8178  0025A0  D00B               	goto	l5111
  8179  0025A2                     l5107:
  8180  0025A2  C017  F00A         	movff	fputs@c,fputc@c
  8181  0025A6  6A0B               	clrf	fputc@c+1,c
  8182  0025A8  C015  F00C         	movff	fputs@fp,fputc@fp
  8183  0025AC  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  8184  0025B0  EC24  F011         	call	_fputc	;wreg free
  8185  0025B4  4A18               	infsnz	fputs@i,f,c
  8186  0025B6  2A19               	incf	fputs@i+1,f,c
  8187  0025B8                     l5111:
  8188  0025B8  5018               	movf	fputs@i,w,c
  8189  0025BA  2413               	addwf	fputs@s,w,c
  8190  0025BC  6ED9               	movwf	fsr2l,c
  8191  0025BE  5019               	movf	fputs@i+1,w,c
  8192  0025C0  2014               	addwfc	fputs@s+1,w,c
  8193  0025C2  6EDA               	movwf	fsr2h,c
  8194  0025C4  50DF               	movf	indf2,w,c
  8195  0025C6  6E17               	movwf	fputs@c,c
  8196  0025C8  5017               	movf	fputs@c,w,c
  8197  0025CA  B4D8               	btfsc	status,2,c
  8198  0025CC  0012               	return	
  8199  0025CE  D7E9               	goto	l5107
  8200  0025D0                     __end_of_fputs:
  8201                           	opt callstack 0
  8202                           
  8203 ;; *************** function _fputc *****************
  8204 ;; Defined at:
  8205 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  c               2    9[COMRAM] int 
  8208 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8209 ;;		 -> NULL(0), 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2    9[COMRAM] int 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;Total ram usage:        9 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:    6
  8228 ;; This function calls:
  8229 ;;		_putch
  8230 ;; This function is called by:
  8231 ;;		_pad
  8232 ;;		_stoa
  8233 ;;		_vfpfcnvrt
  8234 ;;		_fputs
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text38
  8239  002248                     __ptext38:
  8240                           	opt callstack 0
  8241  002248                     _fputc:
  8242                           	opt callstack 18
  8243                           
  8244                           ;incstack = 0
  8245  002248  500C               	movf	fputc@fp,w,c
  8246  00224A  100D               	iorwf	fputc@fp+1,w,c
  8247  00224C  B4D8               	btfsc	status,2,c
  8248  00224E  D004               	goto	u4550
  8249  002250  500C               	movf	fputc@fp,w,c
  8250  002252  100D               	iorwf	fputc@fp+1,w,c
  8251  002254  A4D8               	btfss	status,2,c
  8252  002256  D004               	goto	l5097
  8253  002258                     u4550:
  8254  002258  500A               	movf	fputc@c,w,c
  8255  00225A  EC38  F014         	call	_putch
  8256  00225E  0012               	return	
  8257  002260                     l5097:
  8258  002260  EE20 F004          	lfsr	2,4
  8259  002264  500C               	movf	fputc@fp,w,c
  8260  002266  26D9               	addwf	fsr2l,f,c
  8261  002268  500D               	movf	fputc@fp+1,w,c
  8262  00226A  22DA               	addwfc	fsr2h,f,c
  8263  00226C  50DE               	movf	postinc2,w,c
  8264  00226E  10DE               	iorwf	postinc2,w,c
  8265  002270  B4D8               	btfsc	status,2,c
  8266  002272  D016               	goto	u4570
  8267  002274  EE20 F004          	lfsr	2,4
  8268  002278  500C               	movf	fputc@fp,w,c
  8269  00227A  26D9               	addwf	fsr2l,f,c
  8270  00227C  500D               	movf	fputc@fp+1,w,c
  8271  00227E  22DA               	addwfc	fsr2h,f,c
  8272  002280  EE10 F002          	lfsr	1,2
  8273  002284  500C               	movf	fputc@fp,w,c
  8274  002286  26E1               	addwf	fsr1l,f,c
  8275  002288  500D               	movf	fputc@fp+1,w,c
  8276  00228A  22E2               	addwfc	fsr1h,f,c
  8277  00228C  50DE               	movf	postinc2,w,c
  8278  00228E  5CE6               	subwf	postinc1,w,c
  8279  002290  50E6               	movf	postinc1,w,c
  8280  002292  0A80               	xorlw	128
  8281  002294  6E12               	movwf	(??_fputc+4)& (0+255),c
  8282  002296  50DE               	movf	postinc2,w,c
  8283  002298  0A80               	xorlw	128
  8284  00229A  5812               	subwfb	(??_fputc+4)& (0+255),w,c
  8285  00229C  B0D8               	btfsc	status,0,c
  8286  00229E  0012               	return	
  8287  0022A0                     u4570:
  8288  0022A0  EE20 F002          	lfsr	2,2
  8289  0022A4  500C               	movf	fputc@fp,w,c
  8290  0022A6  26D9               	addwf	fsr2l,f,c
  8291  0022A8  500D               	movf	fputc@fp+1,w,c
  8292  0022AA  22DA               	addwfc	fsr2h,f,c
  8293  0022AC  2ADE               	incf	postinc2,f,c
  8294  0022AE  0E00               	movlw	0
  8295  0022B0  22DD               	addwfc	postdec2,f,c
  8296  0022B2  0012               	return		;funcret
  8297  0022B4                     __end_of_fputc:
  8298                           	opt callstack 0
  8299                           
  8300 ;; *************** function _putch *****************
  8301 ;; Defined at:
  8302 ;;		line 102 in file "lcd.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  data            1    wreg     unsigned char 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  data            1    8[COMRAM] unsigned char 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;Total ram usage:        1 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    5
  8323 ;; This function calls:
  8324 ;;		_send_byte
  8325 ;; This function is called by:
  8326 ;;		_fputc
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text39
  8331  002870                     __ptext39:
  8332                           	opt callstack 0
  8333  002870                     _putch:
  8334                           	opt callstack 18
  8335                           
  8336                           ;incstack = 0
  8337                           ;putch@data stored from wreg
  8338  002870  6E09               	movwf	putch@data,c
  8339                           
  8340                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  8341  002872  848C               	bsf	3980,2,c	;volatile
  8342                           
  8343                           ;lcd.c: 104:     send_byte((unsigned char)data);
  8344  002874  5009               	movf	putch@data,w,c
  8345  002876  EC2F  F014         	call	_send_byte
  8346  00287A  0012               	return		;funcret
  8347  00287C                     __end_of_putch:
  8348                           	opt callstack 0
  8349                           
  8350 ;; *************** function _abs *****************
  8351 ;; Defined at:
  8352 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  a               2   23[COMRAM] int 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  2   23[COMRAM] int 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2, status,0
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:        4 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    2
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_dtoa
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text40
  8381  002638                     __ptext40:
  8382                           	opt callstack 0
  8383  002638                     _abs:
  8384                           	opt callstack 24
  8385                           
  8386                           ;incstack = 0
  8387  002638  BE19               	btfsc	abs@a+1,7,c
  8388  00263A  D005               	goto	u4670
  8389  00263C  5019               	movf	abs@a+1,w,c
  8390  00263E  E110               	bnz	l1229
  8391  002640  0418               	decf	abs@a,w,c
  8392  002642  B0D8               	btfsc	status,0,c
  8393  002644  D00D               	goto	l1229
  8394  002646                     u4670:
  8395  002646  C018  F01A         	movff	abs@a,??_abs
  8396  00264A  C019  F01B         	movff	abs@a+1,??_abs+1
  8397  00264E  1E1A               	comf	??_abs,f,c
  8398  002650  1E1B               	comf	??_abs+1,f,c
  8399  002652  4A1A               	infsnz	??_abs,f,c
  8400  002654  2A1B               	incf	??_abs+1,f,c
  8401  002656  C01A  F018         	movff	??_abs,?_abs
  8402  00265A  C01B  F019         	movff	??_abs+1,?_abs+1
  8403  00265E  0012               	return	
  8404  002660                     l1229:
  8405  002660  C018  F018         	movff	abs@a,?_abs
  8406  002664  C019  F019         	movff	abs@a+1,?_abs+1
  8407  002668  0012               	return		;funcret
  8408  00266A                     __end_of_abs:
  8409                           	opt callstack 0
  8410                           
  8411 ;; *************** function ___aomod *****************
  8412 ;; Defined at:
  8413 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  dividend        8    5[COMRAM] long long 
  8416 ;;  divisor         8   13[COMRAM] long long 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  sign            1   22[COMRAM] unsigned char 
  8419 ;;  counter         1   21[COMRAM] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  8    5[COMRAM] long long 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8429 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;Total ram usage:       18 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    2
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_dtoa
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text41
  8444  001D7E                     __ptext41:
  8445                           	opt callstack 0
  8446  001D7E                     ___aomod:
  8447                           	opt callstack 24
  8448                           
  8449                           ;incstack = 0
  8450  001D7E  0E00               	movlw	0
  8451  001D80  6E17               	movwf	___aomod@sign,c
  8452  001D82  AE0D               	btfss	___aomod@dividend+7,7,c
  8453  001D84  D012               	goto	l5233
  8454  001D86  1E0D               	comf	___aomod@dividend+7,f,c
  8455  001D88  1E0C               	comf	___aomod@dividend+6,f,c
  8456  001D8A  1E0B               	comf	___aomod@dividend+5,f,c
  8457  001D8C  1E0A               	comf	___aomod@dividend+4,f,c
  8458  001D8E  1E09               	comf	___aomod@dividend+3,f,c
  8459  001D90  1E08               	comf	___aomod@dividend+2,f,c
  8460  001D92  1E07               	comf	___aomod@dividend+1,f,c
  8461  001D94  6C06               	negf	___aomod@dividend,c
  8462  001D96  0E00               	movlw	0
  8463  001D98  2207               	addwfc	___aomod@dividend+1,f,c
  8464  001D9A  2208               	addwfc	___aomod@dividend+2,f,c
  8465  001D9C  2209               	addwfc	___aomod@dividend+3,f,c
  8466  001D9E  220A               	addwfc	___aomod@dividend+4,f,c
  8467  001DA0  220B               	addwfc	___aomod@dividend+5,f,c
  8468  001DA2  220C               	addwfc	___aomod@dividend+6,f,c
  8469  001DA4  220D               	addwfc	___aomod@dividend+7,f,c
  8470  001DA6  0E01               	movlw	1
  8471  001DA8  6E17               	movwf	___aomod@sign,c
  8472  001DAA                     l5233:
  8473  001DAA  AE15               	btfss	___aomod@divisor+7,7,c
  8474  001DAC  D010               	goto	l5237
  8475  001DAE  1E15               	comf	___aomod@divisor+7,f,c
  8476  001DB0  1E14               	comf	___aomod@divisor+6,f,c
  8477  001DB2  1E13               	comf	___aomod@divisor+5,f,c
  8478  001DB4  1E12               	comf	___aomod@divisor+4,f,c
  8479  001DB6  1E11               	comf	___aomod@divisor+3,f,c
  8480  001DB8  1E10               	comf	___aomod@divisor+2,f,c
  8481  001DBA  1E0F               	comf	___aomod@divisor+1,f,c
  8482  001DBC  6C0E               	negf	___aomod@divisor,c
  8483  001DBE  0E00               	movlw	0
  8484  001DC0  220F               	addwfc	___aomod@divisor+1,f,c
  8485  001DC2  2210               	addwfc	___aomod@divisor+2,f,c
  8486  001DC4  2211               	addwfc	___aomod@divisor+3,f,c
  8487  001DC6  2212               	addwfc	___aomod@divisor+4,f,c
  8488  001DC8  2213               	addwfc	___aomod@divisor+5,f,c
  8489  001DCA  2214               	addwfc	___aomod@divisor+6,f,c
  8490  001DCC  2215               	addwfc	___aomod@divisor+7,f,c
  8491  001DCE                     l5237:
  8492  001DCE  500E               	movf	___aomod@divisor,w,c
  8493  001DD0  100F               	iorwf	___aomod@divisor+1,w,c
  8494  001DD2  1010               	iorwf	___aomod@divisor+2,w,c
  8495  001DD4  1011               	iorwf	___aomod@divisor+3,w,c
  8496  001DD6  1012               	iorwf	___aomod@divisor+4,w,c
  8497  001DD8  1013               	iorwf	___aomod@divisor+5,w,c
  8498  001DDA  1014               	iorwf	___aomod@divisor+6,w,c
  8499  001DDC  1015               	iorwf	___aomod@divisor+7,w,c
  8500  001DDE  B4D8               	btfsc	status,2,c
  8501  001DE0  D03C               	goto	l5253
  8502  001DE2  0E01               	movlw	1
  8503  001DE4  6E16               	movwf	___aomod@counter,c
  8504  001DE6  D00A               	goto	l5243
  8505  001DE8                     l5241:
  8506  001DE8  90D8               	bcf	status,0,c
  8507  001DEA  360E               	rlcf	___aomod@divisor,f,c
  8508  001DEC  360F               	rlcf	___aomod@divisor+1,f,c
  8509  001DEE  3610               	rlcf	___aomod@divisor+2,f,c
  8510  001DF0  3611               	rlcf	___aomod@divisor+3,f,c
  8511  001DF2  3612               	rlcf	___aomod@divisor+4,f,c
  8512  001DF4  3613               	rlcf	___aomod@divisor+5,f,c
  8513  001DF6  3614               	rlcf	___aomod@divisor+6,f,c
  8514  001DF8  3615               	rlcf	___aomod@divisor+7,f,c
  8515  001DFA  2A16               	incf	___aomod@counter,f,c
  8516  001DFC                     l5243:
  8517  001DFC  AE15               	btfss	___aomod@divisor+7,7,c
  8518  001DFE  D7F4               	goto	l5241
  8519  001E00                     u4870:
  8520  001E00  500E               	movf	___aomod@divisor,w,c
  8521  001E02  5C06               	subwf	___aomod@dividend,w,c
  8522  001E04  500F               	movf	___aomod@divisor+1,w,c
  8523  001E06  5807               	subwfb	___aomod@dividend+1,w,c
  8524  001E08  5010               	movf	___aomod@divisor+2,w,c
  8525  001E0A  5808               	subwfb	___aomod@dividend+2,w,c
  8526  001E0C  5011               	movf	___aomod@divisor+3,w,c
  8527  001E0E  5809               	subwfb	___aomod@dividend+3,w,c
  8528  001E10  5012               	movf	___aomod@divisor+4,w,c
  8529  001E12  580A               	subwfb	___aomod@dividend+4,w,c
  8530  001E14  5013               	movf	___aomod@divisor+5,w,c
  8531  001E16  580B               	subwfb	___aomod@dividend+5,w,c
  8532  001E18  5014               	movf	___aomod@divisor+6,w,c
  8533  001E1A  580C               	subwfb	___aomod@dividend+6,w,c
  8534  001E1C  5015               	movf	___aomod@divisor+7,w,c
  8535  001E1E  580D               	subwfb	___aomod@dividend+7,w,c
  8536  001E20  A0D8               	btfss	status,0,c
  8537  001E22  D010               	goto	l5249
  8538  001E24  500E               	movf	___aomod@divisor,w,c
  8539  001E26  5E06               	subwf	___aomod@dividend,f,c
  8540  001E28  500F               	movf	___aomod@divisor+1,w,c
  8541  001E2A  5A07               	subwfb	___aomod@dividend+1,f,c
  8542  001E2C  5010               	movf	___aomod@divisor+2,w,c
  8543  001E2E  5A08               	subwfb	___aomod@dividend+2,f,c
  8544  001E30  5011               	movf	___aomod@divisor+3,w,c
  8545  001E32  5A09               	subwfb	___aomod@dividend+3,f,c
  8546  001E34  5012               	movf	___aomod@divisor+4,w,c
  8547  001E36  5A0A               	subwfb	___aomod@dividend+4,f,c
  8548  001E38  5013               	movf	___aomod@divisor+5,w,c
  8549  001E3A  5A0B               	subwfb	___aomod@dividend+5,f,c
  8550  001E3C  5014               	movf	___aomod@divisor+6,w,c
  8551  001E3E  5A0C               	subwfb	___aomod@dividend+6,f,c
  8552  001E40  5015               	movf	___aomod@divisor+7,w,c
  8553  001E42  5A0D               	subwfb	___aomod@dividend+7,f,c
  8554  001E44                     l5249:
  8555  001E44  90D8               	bcf	status,0,c
  8556  001E46  3215               	rrcf	___aomod@divisor+7,f,c
  8557  001E48  3214               	rrcf	___aomod@divisor+6,f,c
  8558  001E4A  3213               	rrcf	___aomod@divisor+5,f,c
  8559  001E4C  3212               	rrcf	___aomod@divisor+4,f,c
  8560  001E4E  3211               	rrcf	___aomod@divisor+3,f,c
  8561  001E50  3210               	rrcf	___aomod@divisor+2,f,c
  8562  001E52  320F               	rrcf	___aomod@divisor+1,f,c
  8563  001E54  320E               	rrcf	___aomod@divisor,f,c
  8564  001E56  2E16               	decfsz	___aomod@counter,f,c
  8565  001E58  D7D3               	goto	u4870
  8566  001E5A                     l5253:
  8567  001E5A  5017               	movf	___aomod@sign,w,c
  8568  001E5C  B4D8               	btfsc	status,2,c
  8569  001E5E  D010               	goto	l5257
  8570  001E60  1E0D               	comf	___aomod@dividend+7,f,c
  8571  001E62  1E0C               	comf	___aomod@dividend+6,f,c
  8572  001E64  1E0B               	comf	___aomod@dividend+5,f,c
  8573  001E66  1E0A               	comf	___aomod@dividend+4,f,c
  8574  001E68  1E09               	comf	___aomod@dividend+3,f,c
  8575  001E6A  1E08               	comf	___aomod@dividend+2,f,c
  8576  001E6C  1E07               	comf	___aomod@dividend+1,f,c
  8577  001E6E  6C06               	negf	___aomod@dividend,c
  8578  001E70  0E00               	movlw	0
  8579  001E72  2207               	addwfc	___aomod@dividend+1,f,c
  8580  001E74  2208               	addwfc	___aomod@dividend+2,f,c
  8581  001E76  2209               	addwfc	___aomod@dividend+3,f,c
  8582  001E78  220A               	addwfc	___aomod@dividend+4,f,c
  8583  001E7A  220B               	addwfc	___aomod@dividend+5,f,c
  8584  001E7C  220C               	addwfc	___aomod@dividend+6,f,c
  8585  001E7E  220D               	addwfc	___aomod@dividend+7,f,c
  8586  001E80                     l5257:
  8587  001E80  C006  F006         	movff	___aomod@dividend,?___aomod
  8588  001E84  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  8589  001E88  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  8590  001E8C  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  8591  001E90  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  8592  001E94  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  8593  001E98  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  8594  001E9C  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  8595  001EA0  0012               	return		;funcret
  8596  001EA2                     __end_of___aomod:
  8597                           	opt callstack 0
  8598                           
  8599 ;; *************** function ___aodiv *****************
  8600 ;; Defined at:
  8601 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  dividend        8    5[COMRAM] long long 
  8604 ;;  divisor         8   13[COMRAM] long long 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  quotient        8   23[COMRAM] long long 
  8607 ;;  sign            1   22[COMRAM] unsigned char 
  8608 ;;  counter         1   21[COMRAM] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  8    5[COMRAM] long long 
  8611 ;; Registers used:
  8612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8618 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;Total ram usage:       26 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    2
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_dtoa
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text42
  8633  001876                     __ptext42:
  8634                           	opt callstack 0
  8635  001876                     ___aodiv:
  8636                           	opt callstack 24
  8637                           
  8638                           ;incstack = 0
  8639  001876  0E00               	movlw	0
  8640  001878  6E17               	movwf	___aodiv@sign,c
  8641  00187A  AE15               	btfss	___aodiv@divisor+7,7,c
  8642  00187C  D012               	goto	l5189
  8643  00187E  1E15               	comf	___aodiv@divisor+7,f,c
  8644  001880  1E14               	comf	___aodiv@divisor+6,f,c
  8645  001882  1E13               	comf	___aodiv@divisor+5,f,c
  8646  001884  1E12               	comf	___aodiv@divisor+4,f,c
  8647  001886  1E11               	comf	___aodiv@divisor+3,f,c
  8648  001888  1E10               	comf	___aodiv@divisor+2,f,c
  8649  00188A  1E0F               	comf	___aodiv@divisor+1,f,c
  8650  00188C  6C0E               	negf	___aodiv@divisor,c
  8651  00188E  0E00               	movlw	0
  8652  001890  220F               	addwfc	___aodiv@divisor+1,f,c
  8653  001892  2210               	addwfc	___aodiv@divisor+2,f,c
  8654  001894  2211               	addwfc	___aodiv@divisor+3,f,c
  8655  001896  2212               	addwfc	___aodiv@divisor+4,f,c
  8656  001898  2213               	addwfc	___aodiv@divisor+5,f,c
  8657  00189A  2214               	addwfc	___aodiv@divisor+6,f,c
  8658  00189C  2215               	addwfc	___aodiv@divisor+7,f,c
  8659  00189E  0E01               	movlw	1
  8660  0018A0  6E17               	movwf	___aodiv@sign,c
  8661  0018A2                     l5189:
  8662  0018A2  AE0D               	btfss	___aodiv@dividend+7,7,c
  8663  0018A4  D012               	goto	l5195
  8664  0018A6  1E0D               	comf	___aodiv@dividend+7,f,c
  8665  0018A8  1E0C               	comf	___aodiv@dividend+6,f,c
  8666  0018AA  1E0B               	comf	___aodiv@dividend+5,f,c
  8667  0018AC  1E0A               	comf	___aodiv@dividend+4,f,c
  8668  0018AE  1E09               	comf	___aodiv@dividend+3,f,c
  8669  0018B0  1E08               	comf	___aodiv@dividend+2,f,c
  8670  0018B2  1E07               	comf	___aodiv@dividend+1,f,c
  8671  0018B4  6C06               	negf	___aodiv@dividend,c
  8672  0018B6  0E00               	movlw	0
  8673  0018B8  2207               	addwfc	___aodiv@dividend+1,f,c
  8674  0018BA  2208               	addwfc	___aodiv@dividend+2,f,c
  8675  0018BC  2209               	addwfc	___aodiv@dividend+3,f,c
  8676  0018BE  220A               	addwfc	___aodiv@dividend+4,f,c
  8677  0018C0  220B               	addwfc	___aodiv@dividend+5,f,c
  8678  0018C2  220C               	addwfc	___aodiv@dividend+6,f,c
  8679  0018C4  220D               	addwfc	___aodiv@dividend+7,f,c
  8680  0018C6  0E01               	movlw	1
  8681  0018C8  1A17               	xorwf	___aodiv@sign,f,c
  8682  0018CA                     l5195:
  8683  0018CA  EE20  F018         	lfsr	2,___aodiv@quotient
  8684  0018CE  0E07               	movlw	7
  8685  0018D0                     u4791:
  8686  0018D0  6ADE               	clrf	postinc2,c
  8687  0018D2  06E8               	decf	wreg,f,c
  8688  0018D4  E2FD               	bc	u4791
  8689  0018D6  500E               	movf	___aodiv@divisor,w,c
  8690  0018D8  100F               	iorwf	___aodiv@divisor+1,w,c
  8691  0018DA  1010               	iorwf	___aodiv@divisor+2,w,c
  8692  0018DC  1011               	iorwf	___aodiv@divisor+3,w,c
  8693  0018DE  1012               	iorwf	___aodiv@divisor+4,w,c
  8694  0018E0  1013               	iorwf	___aodiv@divisor+5,w,c
  8695  0018E2  1014               	iorwf	___aodiv@divisor+6,w,c
  8696  0018E4  1015               	iorwf	___aodiv@divisor+7,w,c
  8697  0018E6  B4D8               	btfsc	status,2,c
  8698  0018E8  D046               	goto	l5217
  8699  0018EA  0E01               	movlw	1
  8700  0018EC  6E16               	movwf	___aodiv@counter,c
  8701  0018EE  D00A               	goto	l5203
  8702  0018F0                     l5201:
  8703  0018F0  90D8               	bcf	status,0,c
  8704  0018F2  360E               	rlcf	___aodiv@divisor,f,c
  8705  0018F4  360F               	rlcf	___aodiv@divisor+1,f,c
  8706  0018F6  3610               	rlcf	___aodiv@divisor+2,f,c
  8707  0018F8  3611               	rlcf	___aodiv@divisor+3,f,c
  8708  0018FA  3612               	rlcf	___aodiv@divisor+4,f,c
  8709  0018FC  3613               	rlcf	___aodiv@divisor+5,f,c
  8710  0018FE  3614               	rlcf	___aodiv@divisor+6,f,c
  8711  001900  3615               	rlcf	___aodiv@divisor+7,f,c
  8712  001902  2A16               	incf	___aodiv@counter,f,c
  8713  001904                     l5203:
  8714  001904  AE15               	btfss	___aodiv@divisor+7,7,c
  8715  001906  D7F4               	goto	l5201
  8716  001908                     u4810:
  8717  001908  90D8               	bcf	status,0,c
  8718  00190A  3618               	rlcf	___aodiv@quotient,f,c
  8719  00190C  3619               	rlcf	___aodiv@quotient+1,f,c
  8720  00190E  361A               	rlcf	___aodiv@quotient+2,f,c
  8721  001910  361B               	rlcf	___aodiv@quotient+3,f,c
  8722  001912  361C               	rlcf	___aodiv@quotient+4,f,c
  8723  001914  361D               	rlcf	___aodiv@quotient+5,f,c
  8724  001916  361E               	rlcf	___aodiv@quotient+6,f,c
  8725  001918  361F               	rlcf	___aodiv@quotient+7,f,c
  8726  00191A  500E               	movf	___aodiv@divisor,w,c
  8727  00191C  5C06               	subwf	___aodiv@dividend,w,c
  8728  00191E  500F               	movf	___aodiv@divisor+1,w,c
  8729  001920  5807               	subwfb	___aodiv@dividend+1,w,c
  8730  001922  5010               	movf	___aodiv@divisor+2,w,c
  8731  001924  5808               	subwfb	___aodiv@dividend+2,w,c
  8732  001926  5011               	movf	___aodiv@divisor+3,w,c
  8733  001928  5809               	subwfb	___aodiv@dividend+3,w,c
  8734  00192A  5012               	movf	___aodiv@divisor+4,w,c
  8735  00192C  580A               	subwfb	___aodiv@dividend+4,w,c
  8736  00192E  5013               	movf	___aodiv@divisor+5,w,c
  8737  001930  580B               	subwfb	___aodiv@dividend+5,w,c
  8738  001932  5014               	movf	___aodiv@divisor+6,w,c
  8739  001934  580C               	subwfb	___aodiv@dividend+6,w,c
  8740  001936  5015               	movf	___aodiv@divisor+7,w,c
  8741  001938  580D               	subwfb	___aodiv@dividend+7,w,c
  8742  00193A  A0D8               	btfss	status,0,c
  8743  00193C  D011               	goto	l5213
  8744  00193E  500E               	movf	___aodiv@divisor,w,c
  8745  001940  5E06               	subwf	___aodiv@dividend,f,c
  8746  001942  500F               	movf	___aodiv@divisor+1,w,c
  8747  001944  5A07               	subwfb	___aodiv@dividend+1,f,c
  8748  001946  5010               	movf	___aodiv@divisor+2,w,c
  8749  001948  5A08               	subwfb	___aodiv@dividend+2,f,c
  8750  00194A  5011               	movf	___aodiv@divisor+3,w,c
  8751  00194C  5A09               	subwfb	___aodiv@dividend+3,f,c
  8752  00194E  5012               	movf	___aodiv@divisor+4,w,c
  8753  001950  5A0A               	subwfb	___aodiv@dividend+4,f,c
  8754  001952  5013               	movf	___aodiv@divisor+5,w,c
  8755  001954  5A0B               	subwfb	___aodiv@dividend+5,f,c
  8756  001956  5014               	movf	___aodiv@divisor+6,w,c
  8757  001958  5A0C               	subwfb	___aodiv@dividend+6,f,c
  8758  00195A  5015               	movf	___aodiv@divisor+7,w,c
  8759  00195C  5A0D               	subwfb	___aodiv@dividend+7,f,c
  8760  00195E  8018               	bsf	___aodiv@quotient,0,c
  8761  001960                     l5213:
  8762  001960  90D8               	bcf	status,0,c
  8763  001962  3215               	rrcf	___aodiv@divisor+7,f,c
  8764  001964  3214               	rrcf	___aodiv@divisor+6,f,c
  8765  001966  3213               	rrcf	___aodiv@divisor+5,f,c
  8766  001968  3212               	rrcf	___aodiv@divisor+4,f,c
  8767  00196A  3211               	rrcf	___aodiv@divisor+3,f,c
  8768  00196C  3210               	rrcf	___aodiv@divisor+2,f,c
  8769  00196E  320F               	rrcf	___aodiv@divisor+1,f,c
  8770  001970  320E               	rrcf	___aodiv@divisor,f,c
  8771  001972  2E16               	decfsz	___aodiv@counter,f,c
  8772  001974  D7C9               	goto	u4810
  8773  001976                     l5217:
  8774  001976  5017               	movf	___aodiv@sign,w,c
  8775  001978  B4D8               	btfsc	status,2,c
  8776  00197A  D010               	goto	l5221
  8777  00197C  1E1F               	comf	___aodiv@quotient+7,f,c
  8778  00197E  1E1E               	comf	___aodiv@quotient+6,f,c
  8779  001980  1E1D               	comf	___aodiv@quotient+5,f,c
  8780  001982  1E1C               	comf	___aodiv@quotient+4,f,c
  8781  001984  1E1B               	comf	___aodiv@quotient+3,f,c
  8782  001986  1E1A               	comf	___aodiv@quotient+2,f,c
  8783  001988  1E19               	comf	___aodiv@quotient+1,f,c
  8784  00198A  6C18               	negf	___aodiv@quotient,c
  8785  00198C  0E00               	movlw	0
  8786  00198E  2219               	addwfc	___aodiv@quotient+1,f,c
  8787  001990  221A               	addwfc	___aodiv@quotient+2,f,c
  8788  001992  221B               	addwfc	___aodiv@quotient+3,f,c
  8789  001994  221C               	addwfc	___aodiv@quotient+4,f,c
  8790  001996  221D               	addwfc	___aodiv@quotient+5,f,c
  8791  001998  221E               	addwfc	___aodiv@quotient+6,f,c
  8792  00199A  221F               	addwfc	___aodiv@quotient+7,f,c
  8793  00199C                     l5221:
  8794  00199C  C018  F006         	movff	___aodiv@quotient,?___aodiv
  8795  0019A0  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  8796  0019A4  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  8797  0019A8  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  8798  0019AC  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  8799  0019B0  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  8800  0019B4  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  8801  0019B8  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  8802  0019BC  0012               	return		;funcret
  8803  0019BE                     __end_of___aodiv:
  8804                           	opt callstack 0
  8805                           
  8806 ;; *************** function _atoi *****************
  8807 ;; Defined at:
  8808 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8811 ;;		 -> STR_45(3), STR_43(3), STR_41(3), STR_39(3), 
  8812 ;;		 -> STR_37(3), STR_35(3), STR_33(3), STR_31(3), 
  8813 ;;		 -> STR_29(3), STR_27(3), STR_25(3), STR_24(15), 
  8814 ;;		 -> STR_23(15), STR_21(3), STR_20(10), STR_19(3), 
  8815 ;;		 -> STR_18(3), STR_17(3), STR_15(3), STR_13(3), 
  8816 ;;		 -> STR_11(3), STR_9(3), STR_7(3), STR_5(3), 
  8817 ;;		 -> STR_3(3), STR_1(3), 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  n               2   25[COMRAM] int 
  8820 ;;  neg             2   18[COMRAM] int 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  2   12[COMRAM] int 
  8823 ;; Registers used:
  8824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;Total ram usage:       15 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    3
  8837 ;; This function calls:
  8838 ;;		___wmul
  8839 ;;		_isdigit
  8840 ;;		_isspace
  8841 ;; This function is called by:
  8842 ;;		_vfpfcnvrt
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text43
  8847  001C3E                     __ptext43:
  8848                           	opt callstack 0
  8849  001C3E                     _atoi:
  8850                           	opt callstack 24
  8851                           
  8852                           ;incstack = 0
  8853  001C3E  0E00               	movlw	0
  8854  001C40  6E1B               	movwf	atoi@n+1,c
  8855  001C42  0E00               	movlw	0
  8856  001C44  6E1A               	movwf	atoi@n,c
  8857  001C46  0E00               	movlw	0
  8858  001C48  6E14               	movwf	atoi@neg+1,c
  8859  001C4A  0E00               	movlw	0
  8860  001C4C  6E13               	movwf	atoi@neg,c
  8861  001C4E  D002               	goto	l5447
  8862  001C50                     l5445:
  8863  001C50  4A0D               	infsnz	atoi@s,f,c
  8864  001C52  2A0E               	incf	atoi@s+1,f,c
  8865  001C54                     l5447:
  8866  001C54  0E01               	movlw	1
  8867  001C56  6E19               	movwf	_atoi$1591,c
  8868  001C58  C00D  FFF6         	movff	atoi@s,tblptrl
  8869  001C5C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8870  001C60                     	if	0	;tblptru may be non-zero
  8871  001C60                     	endif
  8872  001C60                     	if	0	;tblptru may be non-zero
  8873  001C60                     	endif
  8874  001C60  0008               	tblrd		*
  8875  001C62  50F5               	movf	tablat,w,c
  8876  001C64  0A20               	xorlw	32
  8877  001C66  B4D8               	btfsc	status,2,c
  8878  001C68  D018               	goto	l5455
  8879  001C6A  0EF7               	movlw	247
  8880  001C6C  6E0F               	movwf	??_atoi& (0+255),c
  8881  001C6E  0EFF               	movlw	255
  8882  001C70  6E10               	movwf	(??_atoi+1)& (0+255),c
  8883  001C72  C00D  FFF6         	movff	atoi@s,tblptrl
  8884  001C76  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8885  001C7A                     	if	0	;tblptru may be non-zero
  8886  001C7A                     	endif
  8887  001C7A                     	if	0	;tblptru may be non-zero
  8888  001C7A                     	endif
  8889  001C7A  0008               	tblrd		*
  8890  001C7C  50F5               	movf	tablat,w,c
  8891  001C7E  6E11               	movwf	(??_atoi+2)& (0+255),c
  8892  001C80  6A12               	clrf	(??_atoi+3)& (0+255),c
  8893  001C82  500F               	movf	??_atoi,w,c
  8894  001C84  2611               	addwf	??_atoi+2,f,c
  8895  001C86  5010               	movf	??_atoi+1,w,c
  8896  001C88  2212               	addwfc	??_atoi+3,f,c
  8897  001C8A  5012               	movf	??_atoi+3,w,c
  8898  001C8C  E104               	bnz	u5350
  8899  001C8E  0E05               	movlw	5
  8900  001C90  5C11               	subwf	??_atoi+2,w,c
  8901  001C92  A0D8               	btfss	status,0,c
  8902  001C94  D002               	goto	l5455
  8903  001C96                     u5350:
  8904  001C96  0E00               	movlw	0
  8905  001C98  6E19               	movwf	_atoi$1591,c
  8906  001C9A                     l5455:
  8907  001C9A  C019  F015         	movff	_atoi$1591,_atoi$1590
  8908  001C9E  6A16               	clrf	_atoi$1590+1,c
  8909  001CA0  5015               	movf	_atoi$1590,w,c
  8910  001CA2  1016               	iorwf	_atoi$1590+1,w,c
  8911  001CA4  B4D8               	btfsc	status,2,c
  8912  001CA6  D008               	goto	l5465
  8913  001CA8  D7D3               	goto	l5445
  8914  001CAA                     l5461:
  8915  001CAA  0E00               	movlw	0
  8916  001CAC  6E14               	movwf	atoi@neg+1,c
  8917  001CAE  0E01               	movlw	1
  8918  001CB0  6E13               	movwf	atoi@neg,c
  8919  001CB2                     l5463:
  8920  001CB2  4A0D               	infsnz	atoi@s,f,c
  8921  001CB4  2A0E               	incf	atoi@s+1,f,c
  8922  001CB6  D02E               	goto	l5471
  8923  001CB8                     l5465:
  8924  001CB8  C00D  FFF6         	movff	atoi@s,tblptrl
  8925  001CBC  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8926  001CC0                     	if	0	;tblptru may be non-zero
  8927  001CC0                     	endif
  8928  001CC0                     	if	0	;tblptru may be non-zero
  8929  001CC0                     	endif
  8930  001CC0  0008               	tblrd		*
  8931  001CC2  50F5               	movf	tablat,w,c
  8932  001CC4  6E0F               	movwf	??_atoi& (0+255),c
  8933  001CC6  6A10               	clrf	(??_atoi+1)& (0+255),c
  8934                           
  8935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8936                           ; Switch size 1, requested type "simple"
  8937                           ; Number of cases is 1, Range of values is 0 to 0
  8938                           ; switch strategies available:
  8939                           ; Name         Instructions Cycles
  8940                           ; simple_byte            4     3 (average)
  8941                           ;	Chosen strategy is simple_byte
  8942  001CC8  5010               	movf	??_atoi+1,w,c
  8943  001CCA  0A00               	xorlw	0	; case 0
  8944  001CCC  A4D8               	btfss	status,2,c
  8945  001CCE  D022               	goto	l5471
  8946                           
  8947                           ; Switch size 1, requested type "simple"
  8948                           ; Number of cases is 2, Range of values is 43 to 45
  8949                           ; switch strategies available:
  8950                           ; Name         Instructions Cycles
  8951                           ; simple_byte            7     4 (average)
  8952                           ;	Chosen strategy is simple_byte
  8953  001CD0  500F               	movf	??_atoi,w,c
  8954  001CD2  0A2B               	xorlw	43	; case 43
  8955  001CD4  B4D8               	btfsc	status,2,c
  8956  001CD6  D7ED               	goto	l5463
  8957  001CD8  0A06               	xorlw	6	; case 45
  8958  001CDA  B4D8               	btfsc	status,2,c
  8959  001CDC  D7E6               	goto	l5461
  8960  001CDE  D01A               	goto	l5471
  8961  001CE0                     l5467:
  8962  001CE0  C01A  F006         	movff	atoi@n,___wmul@multiplier
  8963  001CE4  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  8964  001CE8  0E00               	movlw	0
  8965  001CEA  6E09               	movwf	___wmul@multiplicand+1,c
  8966  001CEC  0E0A               	movlw	10
  8967  001CEE  6E08               	movwf	___wmul@multiplicand,c
  8968  001CF0  ECBA  F013         	call	___wmul	;wreg free
  8969  001CF4  C00D  FFF6         	movff	atoi@s,tblptrl
  8970  001CF8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8971  001CFC                     	if	0	;tblptru may be non-zero
  8972  001CFC                     	endif
  8973  001CFC                     	if	0	;tblptru may be non-zero
  8974  001CFC                     	endif
  8975  001CFC  0008               	tblrd		*
  8976  001CFE  50F5               	movf	tablat,w,c
  8977  001D00  5E06               	subwf	?___wmul,f,c
  8978  001D02  0E00               	movlw	0
  8979  001D04  5A07               	subwfb	?___wmul+1,f,c
  8980  001D06  0E30               	movlw	48
  8981  001D08  2406               	addwf	?___wmul,w,c
  8982  001D0A  6E1A               	movwf	atoi@n,c
  8983  001D0C  0E00               	movlw	0
  8984  001D0E  2007               	addwfc	?___wmul+1,w,c
  8985  001D10  6E1B               	movwf	atoi@n+1,c
  8986  001D12  D7CF               	goto	l5463
  8987  001D14                     l5471:
  8988  001D14  0ED0               	movlw	208
  8989  001D16  6E0F               	movwf	??_atoi& (0+255),c
  8990  001D18  0EFF               	movlw	255
  8991  001D1A  6E10               	movwf	(??_atoi+1)& (0+255),c
  8992  001D1C  C00D  FFF6         	movff	atoi@s,tblptrl
  8993  001D20  C00E  FFF7         	movff	atoi@s+1,tblptrh
  8994  001D24                     	if	0	;tblptru may be non-zero
  8995  001D24                     	endif
  8996  001D24                     	if	0	;tblptru may be non-zero
  8997  001D24                     	endif
  8998  001D24  0008               	tblrd		*
  8999  001D26  50F5               	movf	tablat,w,c
  9000  001D28  6E11               	movwf	(??_atoi+2)& (0+255),c
  9001  001D2A  6A12               	clrf	(??_atoi+3)& (0+255),c
  9002  001D2C  500F               	movf	??_atoi,w,c
  9003  001D2E  2611               	addwf	??_atoi+2,f,c
  9004  001D30  5010               	movf	??_atoi+1,w,c
  9005  001D32  2212               	addwfc	??_atoi+3,f,c
  9006  001D34  5012               	movf	??_atoi+3,w,c
  9007  001D36  E106               	bnz	u5370
  9008  001D38  0E0A               	movlw	10
  9009  001D3A  5C11               	subwf	??_atoi+2,w,c
  9010  001D3C  B0D8               	btfsc	status,0,c
  9011  001D3E  D002               	goto	u5370
  9012  001D40  0E01               	movlw	1
  9013  001D42  D001               	goto	u5380
  9014  001D44                     u5370:
  9015  001D44  0E00               	movlw	0
  9016  001D46                     u5380:
  9017  001D46  6E17               	movwf	_atoi$1592,c
  9018  001D48  6A18               	clrf	_atoi$1592+1,c
  9019  001D4A  5017               	movf	_atoi$1592,w,c
  9020  001D4C  1018               	iorwf	_atoi$1592+1,w,c
  9021  001D4E  A4D8               	btfss	status,2,c
  9022  001D50  D7C7               	goto	l5467
  9023  001D52  5013               	movf	atoi@neg,w,c
  9024  001D54  1014               	iorwf	atoi@neg+1,w,c
  9025  001D56  A4D8               	btfss	status,2,c
  9026  001D58  D00D               	goto	l1260
  9027  001D5A  C01A  F00F         	movff	atoi@n,??_atoi
  9028  001D5E  C01B  F010         	movff	atoi@n+1,??_atoi+1
  9029  001D62  1E0F               	comf	??_atoi,f,c
  9030  001D64  1E10               	comf	??_atoi+1,f,c
  9031  001D66  4A0F               	infsnz	??_atoi,f,c
  9032  001D68  2A10               	incf	??_atoi+1,f,c
  9033  001D6A  C00F  F00D         	movff	??_atoi,?_atoi
  9034  001D6E  C010  F00E         	movff	??_atoi+1,?_atoi+1
  9035  001D72  0012               	return	
  9036  001D74                     l1260:
  9037  001D74  C01A  F00D         	movff	atoi@n,?_atoi
  9038  001D78  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  9039  001D7C  0012               	return		;funcret
  9040  001D7E                     __end_of_atoi:
  9041                           	opt callstack 0
  9042                           
  9043 ;; *************** function _isspace *****************
  9044 ;; Defined at:
  9045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  c               2    5[COMRAM] int 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    5[COMRAM] int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9063 ;;Total ram usage:        7 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:    2
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_atoi
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text44
  9074  00255A                     __ptext44:
  9075                           	opt callstack 0
  9076  00255A                     _isspace:
  9077                           	opt callstack 24
  9078                           
  9079                           ;incstack = 0
  9080  00255A  0E01               	movlw	1
  9081  00255C  6E0C               	movwf	_isspace$1617,c
  9082  00255E  0E20               	movlw	32
  9083  002560  1806               	xorwf	isspace@c,w,c
  9084  002562  1007               	iorwf	isspace@c+1,w,c
  9085  002564  B4D8               	btfsc	status,2,c
  9086  002566  D014               	goto	l5269
  9087  002568  0EF7               	movlw	247
  9088  00256A  6E08               	movwf	??_isspace& (0+255),c
  9089  00256C  0EFF               	movlw	255
  9090  00256E  6E09               	movwf	(??_isspace+1)& (0+255),c
  9091  002570  C006  F00A         	movff	isspace@c,??_isspace+2
  9092  002574  C007  F00B         	movff	isspace@c+1,??_isspace+3
  9093  002578  5008               	movf	??_isspace,w,c
  9094  00257A  260A               	addwf	??_isspace+2,f,c
  9095  00257C  5009               	movf	??_isspace+1,w,c
  9096  00257E  220B               	addwfc	??_isspace+3,f,c
  9097  002580  500B               	movf	??_isspace+3,w,c
  9098  002582  E104               	bnz	u4910
  9099  002584  0E05               	movlw	5
  9100  002586  5C0A               	subwf	??_isspace+2,w,c
  9101  002588  A0D8               	btfss	status,0,c
  9102  00258A  D002               	goto	l5269
  9103  00258C                     u4910:
  9104  00258C  0E00               	movlw	0
  9105  00258E  6E0C               	movwf	_isspace$1617,c
  9106  002590                     l5269:
  9107  002590  C00C  F006         	movff	_isspace$1617,?_isspace
  9108  002594  6A07               	clrf	?_isspace+1,c
  9109  002596  0012               	return		;funcret
  9110  002598                     __end_of_isspace:
  9111                           	opt callstack 0
  9112                           
  9113 ;; *************** function _isdigit *****************
  9114 ;; Defined at:
  9115 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  c               2    5[COMRAM] int 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    5[COMRAM] int 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;Total ram usage:        6 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    2
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_vfpfcnvrt
  9140 ;;		_atoi
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text45
  9145  0026CA                     __ptext45:
  9146                           	opt callstack 0
  9147  0026CA                     _isdigit:
  9148                           	opt callstack 25
  9149                           
  9150                           ;incstack = 0
  9151  0026CA  0ED0               	movlw	208
  9152  0026CC  6E08               	movwf	??_isdigit& (0+255),c
  9153  0026CE  0EFF               	movlw	255
  9154  0026D0  6E09               	movwf	(??_isdigit+1)& (0+255),c
  9155  0026D2  C006  F00A         	movff	isdigit@c,??_isdigit+2
  9156  0026D6  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  9157  0026DA  5008               	movf	??_isdigit,w,c
  9158  0026DC  260A               	addwf	??_isdigit+2,f,c
  9159  0026DE  5009               	movf	??_isdigit+1,w,c
  9160  0026E0  220B               	addwfc	??_isdigit+3,f,c
  9161  0026E2  500B               	movf	??_isdigit+3,w,c
  9162  0026E4  E106               	bnz	u4750
  9163  0026E6  0E0A               	movlw	10
  9164  0026E8  5C0A               	subwf	??_isdigit+2,w,c
  9165  0026EA  B0D8               	btfsc	status,0,c
  9166  0026EC  D002               	goto	u4750
  9167  0026EE  0E01               	movlw	1
  9168  0026F0  D001               	goto	u4760
  9169  0026F2                     u4750:
  9170  0026F2  0E00               	movlw	0
  9171  0026F4                     u4760:
  9172  0026F4  6E06               	movwf	?_isdigit,c
  9173  0026F6  6A07               	clrf	?_isdigit+1,c
  9174  0026F8  0012               	return		;funcret
  9175  0026FA                     __end_of_isdigit:
  9176                           	opt callstack 0
  9177                           
  9178 ;; *************** function ___wmul *****************
  9179 ;; Defined at:
  9180 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  multiplier      2    5[COMRAM] unsigned int 
  9183 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  product         2    9[COMRAM] unsigned int 
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  2    5[COMRAM] unsigned int 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0, prodl, prodh
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9199 ;;Total ram usage:        6 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    2
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_atoi
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text46
  9210  002774                     __ptext46:
  9211                           	opt callstack 0
  9212  002774                     ___wmul:
  9213                           	opt callstack 24
  9214                           
  9215                           ;incstack = 0
  9216  002774  5006               	movf	___wmul@multiplier,w,c
  9217  002776  0208               	mulwf	___wmul@multiplicand,c
  9218  002778  CFF3 F00A          	movff	prodl,___wmul@product
  9219  00277C  CFF4 F00B          	movff	prodh,___wmul@product+1
  9220  002780  5006               	movf	___wmul@multiplier,w,c
  9221  002782  0209               	mulwf	___wmul@multiplicand+1,c
  9222  002784  50F3               	movf	prodl,w,c
  9223  002786  260B               	addwf	___wmul@product+1,f,c
  9224  002788  5007               	movf	___wmul@multiplier+1,w,c
  9225  00278A  0208               	mulwf	___wmul@multiplicand,c
  9226  00278C  50F3               	movf	prodl,w,c
  9227  00278E  260B               	addwf	___wmul@product+1,f,c
  9228  002790  C00A  F006         	movff	___wmul@product,?___wmul
  9229  002794  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9230  002798  0012               	return		;funcret
  9231  00279A                     __end_of___wmul:
  9232                           	opt callstack 0
  9233                           
  9234 ;; *************** function _lcdInst *****************
  9235 ;; Defined at:
  9236 ;;		line 64 in file "lcd.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  data            1    wreg     unsigned char 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  data            1    8[COMRAM] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;Total ram usage:        1 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    5
  9257 ;; This function calls:
  9258 ;;		_send_byte
  9259 ;; This function is called by:
  9260 ;;		_doDisplayLog
  9261 ;;		_doOperation
  9262 ;;		_main
  9263 ;;		_initLCD
  9264 ;;		_lcd_shift_cursor
  9265 ;;		_lcd_shift_display
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text47
  9270  00287C                     __ptext47:
  9271                           	opt callstack 0
  9272  00287C                     _lcdInst:
  9273                           	opt callstack 23
  9274                           
  9275                           ;incstack = 0
  9276                           ;lcdInst@data stored from wreg
  9277  00287C  6E09               	movwf	lcdInst@data,c
  9278                           
  9279                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  9280  00287E  948C               	bcf	3980,2,c	;volatile
  9281                           
  9282                           ;lcd.c: 66:     send_byte(data);
  9283  002880  5009               	movf	lcdInst@data,w,c
  9284  002882  EC2F  F014         	call	_send_byte
  9285  002886  0012               	return		;funcret
  9286  002888                     __end_of_lcdInst:
  9287                           	opt callstack 0
  9288                           
  9289 ;; *************** function _send_byte *****************
  9290 ;; Defined at:
  9291 ;;		line 55 in file "lcd.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  data            1    wreg     unsigned char 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  data            1    7[COMRAM] unsigned char 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;Total ram usage:        1 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    4
  9312 ;; This function calls:
  9313 ;;		_send_nibble
  9314 ;; This function is called by:
  9315 ;;		_lcdInst
  9316 ;;		_initLCD
  9317 ;;		_putch
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text48
  9322  00285E                     __ptext48:
  9323                           	opt callstack 0
  9324  00285E                     _send_byte:
  9325                           	opt callstack 24
  9326                           
  9327                           ;incstack = 0
  9328                           ;send_byte@data stored from wreg
  9329  00285E  6E08               	movwf	send_byte@data,c
  9330                           
  9331                           ;lcd.c: 57:     send_nibble(data >> 4);
  9332  002860  3808               	swapf	send_byte@data,w,c
  9333  002862  0B0F               	andlw	15
  9334  002864  EC1B  F014         	call	_send_nibble
  9335                           
  9336                           ;lcd.c: 60:     send_nibble(data);
  9337  002868  5008               	movf	send_byte@data,w,c
  9338  00286A  EC1B  F014         	call	_send_nibble
  9339  00286E  0012               	return		;funcret
  9340  002870                     __end_of_send_byte:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _send_nibble *****************
  9344 ;; Defined at:
  9345 ;;		line 44 in file "lcd.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  data            1    wreg     unsigned char 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  data            1    6[COMRAM] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        1 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    3
  9366 ;; This function calls:
  9367 ;;		_pulse_e
  9368 ;; This function is called by:
  9369 ;;		_send_byte
  9370 ;;		_initLCD
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text49
  9375  002836                     __ptext49:
  9376                           	opt callstack 0
  9377  002836                     _send_nibble:
  9378                           	opt callstack 25
  9379                           
  9380                           ;incstack = 0
  9381                           ;send_nibble@data stored from wreg
  9382  002836  6E07               	movwf	send_nibble@data,c
  9383                           
  9384                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  9385  002838  508C               	movf	3980,w,c	;volatile
  9386  00283A  0B0F               	andlw	15
  9387  00283C  6E8C               	movwf	3980,c	;volatile
  9388                           
  9389                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  9390  00283E  3807               	swapf	send_nibble@data,w,c
  9391  002840  0BF0               	andlw	240
  9392  002842  108C               	iorwf	3980,w,c	;volatile
  9393  002844  6E8C               	movwf	3980,c	;volatile
  9394                           
  9395                           ;lcd.c: 48:     pulse_e();
  9396  002846  EC7D  F013         	call	_pulse_e	;wreg free
  9397  00284A  0012               	return		;funcret
  9398  00284C                     __end_of_send_nibble:
  9399                           	opt callstack 0
  9400                           
  9401 ;; *************** function _pulse_e *****************
  9402 ;; Defined at:
  9403 ;;		line 28 in file "lcd.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  interruptSta    1    5[COMRAM] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		wreg
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;Total ram usage:        1 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:    2
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_send_nibble
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text50
  9432  0026FA                     __ptext50:
  9433                           	opt callstack 0
  9434  0026FA                     _pulse_e:
  9435                           	opt callstack 25
  9436                           
  9437                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  9438                           
  9439                           ;incstack = 0
  9440  0026FA  0E00               	movlw	0
  9441  0026FC  BEF2               	btfsc	4082,7,c	;volatile
  9442  0026FE  0E01               	movlw	1
  9443  002700  6E06               	movwf	pulse_e@interruptState,c
  9444                           
  9445                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  9446  002702  9EF2               	bcf	4082,7,c	;volatile
  9447                           
  9448                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  9449  002704  868C               	bsf	3980,3,c	;volatile
  9450                           
  9451                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  9452  002706  0E14               	movlw	20
  9453  002708                     u6007:
  9454  002708  2EE8               	decfsz	wreg,f,c
  9455  00270A  D7FE               	bra	u6007
  9456  00270C  D000               	nop2	
  9457                           
  9458                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  9459  00270E  968C               	bcf	3980,3,c	;volatile
  9460                           
  9461                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  9462  002710  0E53               	movlw	83
  9463  002712                     u6017:
  9464  002712  2EE8               	decfsz	wreg,f,c
  9465  002714  D7FE               	bra	u6017
  9466  002716  F000               	nop	
  9467                           
  9468                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  9469  002718  B006               	btfsc	pulse_e@interruptState,0,c
  9470  00271A  D002               	bra	u4535
  9471  00271C  9EF2               	bcf	4082,7,c	;volatile
  9472  00271E  D001               	bra	u4536
  9473  002720                     u4535:
  9474  002720  8EF2               	bsf	4082,7,c	;volatile
  9475  002722                     u4536:
  9476  002722  0012               	return		;funcret
  9477  002724                     __end_of_pulse_e:
  9478                           	opt callstack 0
  9479                           
  9480 ;; *************** function ___llmod *****************
  9481 ;; Defined at:
  9482 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  dividend        4    5[COMRAM] unsigned long 
  9485 ;;  divisor         4    9[COMRAM] unsigned long 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  counter         1   13[COMRAM] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  4    5[COMRAM] unsigned long 
  9490 ;; Registers used:
  9491 ;;		wreg, status,2, status,0
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;Total ram usage:        9 bytes
  9502 ;; Hardware stack levels used:    1
  9503 ;; Hardware stack levels required when called:    2
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_main
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text51
  9512  00231E                     __ptext51:
  9513                           	opt callstack 0
  9514  00231E                     ___llmod:
  9515                           	opt callstack 28
  9516                           
  9517                           ;incstack = 0
  9518  00231E  500A               	movf	___llmod@divisor,w,c
  9519  002320  100B               	iorwf	___llmod@divisor+1,w,c
  9520  002322  100C               	iorwf	___llmod@divisor+2,w,c
  9521  002324  100D               	iorwf	___llmod@divisor+3,w,c
  9522  002326  B4D8               	btfsc	status,2,c
  9523  002328  D024               	goto	l974
  9524  00232A  0E01               	movlw	1
  9525  00232C  6E0E               	movwf	___llmod@counter,c
  9526  00232E  D006               	goto	l4625
  9527  002330                     l4623:
  9528  002330  90D8               	bcf	status,0,c
  9529  002332  360A               	rlcf	___llmod@divisor,f,c
  9530  002334  360B               	rlcf	___llmod@divisor+1,f,c
  9531  002336  360C               	rlcf	___llmod@divisor+2,f,c
  9532  002338  360D               	rlcf	___llmod@divisor+3,f,c
  9533  00233A  2A0E               	incf	___llmod@counter,f,c
  9534  00233C                     l4625:
  9535  00233C  AE0D               	btfss	___llmod@divisor+3,7,c
  9536  00233E  D7F8               	goto	l4623
  9537  002340                     u4330:
  9538  002340  500A               	movf	___llmod@divisor,w,c
  9539  002342  5C06               	subwf	___llmod@dividend,w,c
  9540  002344  500B               	movf	___llmod@divisor+1,w,c
  9541  002346  5807               	subwfb	___llmod@dividend+1,w,c
  9542  002348  500C               	movf	___llmod@divisor+2,w,c
  9543  00234A  5808               	subwfb	___llmod@dividend+2,w,c
  9544  00234C  500D               	movf	___llmod@divisor+3,w,c
  9545  00234E  5809               	subwfb	___llmod@dividend+3,w,c
  9546  002350  A0D8               	btfss	status,0,c
  9547  002352  D008               	goto	l4631
  9548  002354  500A               	movf	___llmod@divisor,w,c
  9549  002356  5E06               	subwf	___llmod@dividend,f,c
  9550  002358  500B               	movf	___llmod@divisor+1,w,c
  9551  00235A  5A07               	subwfb	___llmod@dividend+1,f,c
  9552  00235C  500C               	movf	___llmod@divisor+2,w,c
  9553  00235E  5A08               	subwfb	___llmod@dividend+2,f,c
  9554  002360  500D               	movf	___llmod@divisor+3,w,c
  9555  002362  5A09               	subwfb	___llmod@dividend+3,f,c
  9556  002364                     l4631:
  9557  002364  90D8               	bcf	status,0,c
  9558  002366  320D               	rrcf	___llmod@divisor+3,f,c
  9559  002368  320C               	rrcf	___llmod@divisor+2,f,c
  9560  00236A  320B               	rrcf	___llmod@divisor+1,f,c
  9561  00236C  320A               	rrcf	___llmod@divisor,f,c
  9562  00236E  2E0E               	decfsz	___llmod@counter,f,c
  9563  002370  D7E7               	goto	u4330
  9564  002372                     l974:
  9565  002372  C006  F006         	movff	___llmod@dividend,?___llmod
  9566  002376  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
  9567  00237A  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
  9568  00237E  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
  9569  002382  0012               	return		;funcret
  9570  002384                     __end_of___llmod:
  9571                           	opt callstack 0
  9572                           
  9573 ;; *************** function _interruptHandler *****************
  9574 ;; Defined at:
  9575 ;;		line 791 in file "main.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;		None
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;		None
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;Total ram usage:        0 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    1
  9596 ;; This function calls:
  9597 ;;		_updateMotorBEncoder
  9598 ;; This function is called by:
  9599 ;;		Interrupt level 2
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	intcode
  9604  000008                     __pintcode:
  9605                           	opt callstack 0
  9606  000008                     _interruptHandler:
  9607                           	opt callstack 17
  9608                           
  9609                           ;incstack = 0
  9610  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9611  00000A  ED02  F013         	call	int_func,f	;refresh shadow registers
  9612                           
  9613                           	psect	intcode_body
  9614  002604                     __pintcode_body:
  9615                           	opt callstack 17
  9616  002604                     int_func:
  9617                           	opt callstack 17
  9618  002604  0006               	pop		; remove dummy address from shadow register refresh
  9619                           
  9620                           ;main.c: 793:     if(INT1IF){
  9621  002606  A0F0               	btfss	4080,0,c	;volatile
  9622  002608  D005               	goto	i2l297
  9623                           
  9624                           ;main.c: 796:         keyPressed = 1;
  9625  00260A  0E01               	movlw	1
  9626  00260C  0100               	movlb	0	; () banked
  9627  00260E  6FCA               	movwf	_keyPressed& (0+255),b	;volatile
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;main.c: 797:         INT1IF = 0;
  9631  002610  90F0               	bcf	4080,0,c	;volatile
  9632                           
  9633                           ;main.c: 798:     } else if (TMR0IF) {
  9634  002612  D010               	goto	i2l302
  9635  002614                     i2l297:
  9636  002614  A4F2               	btfss	4082,2,c	;volatile
  9637  002616  D009               	goto	i2l299
  9638                           
  9639                           ;main.c: 799:     INTCONbits.TMR0IF = 0;
  9640  002618  94F2               	bcf	4082,2,c	;volatile
  9641                           
  9642                           ;main.c: 800:     TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
  9643  00261A  0EB3               	movlw	179
  9644  00261C  6ED7               	movwf	4055,c	;volatile
  9645                           
  9646                           ;main.c: 801:     TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
  9647  00261E  0EB5               	movlw	181
  9648  002620  6ED6               	movwf	4054,c	;volatile
  9649                           
  9650                           ;main.c: 802:     secondsMeasured++;
  9651  002622  0100               	movlb	0	; () banked
  9652  002624  4BC1               	infsnz	_secondsMeasured& (0+255),f,b	;volatile
  9653  002626  2BC2               	incf	(_secondsMeasured+1)& (0+255),f,b	;volatile
  9654                           
  9655                           ;main.c: 803:    } else if (INT2IF){
  9656  002628  D005               	goto	i2l302
  9657  00262A                     i2l299:
  9658  00262A  A2F0               	btfss	4080,1,c	;volatile
  9659  00262C  D003               	goto	i2l302
  9660                           
  9661                           ;main.c: 804:        INT2IF = 0;
  9662  00262E  92F0               	bcf	4080,1,c	;volatile
  9663                           
  9664                           ;main.c: 805:        updateMotorBEncoder();
  9665  002630  ECE5  F010         	call	_updateMotorBEncoder	;wreg free
  9666  002634                     i2l302:
  9667  002634  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9668  002636  0011               	retfie		f
  9669  002638                     __end_of_interruptHandler:
  9670                           	opt callstack 0
  9671                           
  9672 ;; *************** function _updateMotorBEncoder *****************
  9673 ;; Defined at:
  9674 ;;		line 105 in file "main.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;		None
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  val             2    3[COMRAM] int 
  9679 ;;  interruptPin    2    1[COMRAM] int 
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  1    wreg      void 
  9682 ;; Registers used:
  9683 ;;		wreg, status,2, status,0
  9684 ;; Tracked objects:
  9685 ;;		On entry : 0/0
  9686 ;;		On exit  : 0/0
  9687 ;;		Unchanged: 0/0
  9688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9693 ;;Total ram usage:        5 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		_interruptHandler
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text53
  9703  0021CA                     __ptext53:
  9704                           	opt callstack 0
  9705  0021CA                     _updateMotorBEncoder:
  9706                           	opt callstack 17
  9707                           
  9708                           ;main.c: 106:   int interruptPinState = PORTBbits.RB2;
  9709                           
  9710                           ;incstack = 0
  9711  0021CA  A481               	btfss	3969,2,c	;volatile
  9712  0021CC  D003               	goto	i2u414_40
  9713  0021CE  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9714  0021D0  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
  9715  0021D2  D001               	goto	i2u414_48
  9716  0021D4                     i2u414_40:
  9717  0021D4  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9718  0021D6                     i2u414_48:
  9719  0021D6  5001               	movf	??_updateMotorBEncoder,w,c
  9720  0021D8  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
  9721  0021DA  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
  9722                           
  9723                           ;main.c: 107:   if(encoderBInterruptLast == 0 && interruptPinState==1){
  9724  0021DC  5077               	movf	_encoderBInterruptLast,w,c	;volatile
  9725  0021DE  A4D8               	btfss	status,2,c
  9726  0021E0  D01F               	goto	i2l4445
  9727  0021E2  0402               	decf	updateMotorBEncoder@interruptPinState,w,c
  9728  0021E4  1003               	iorwf	updateMotorBEncoder@interruptPinState+1,w,c
  9729  0021E6  A4D8               	btfss	status,2,c
  9730  0021E8  D01B               	goto	i2l4445
  9731                           
  9732                           ;main.c: 108:     int val = PORTEbits.RE2;
  9733  0021EA  A484               	btfss	3972,2,c	;volatile
  9734  0021EC  D003               	goto	i2u417_40
  9735  0021EE  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9736  0021F0  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
  9737  0021F2  D001               	goto	i2u417_48
  9738  0021F4                     i2u417_40:
  9739  0021F4  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
  9740  0021F6                     i2u417_48:
  9741  0021F6  5001               	movf	??_updateMotorBEncoder,w,c
  9742  0021F8  6E04               	movwf	updateMotorBEncoder@val,c
  9743  0021FA  6A05               	clrf	updateMotorBEncoder@val+1,c
  9744                           
  9745                           ;main.c: 109:     if(val == 0 && motorBDirection){
  9746  0021FC  5004               	movf	updateMotorBEncoder@val,w,c
  9747  0021FE  1005               	iorwf	updateMotorBEncoder@val+1,w,c
  9748  002200  A4D8               	btfss	status,2,c
  9749  002202  D005               	goto	i2l4439
  9750  002204  5078               	movf	_motorBDirection,w,c	;volatile
  9751  002206  B4D8               	btfsc	status,2,c
  9752  002208  D002               	goto	i2l4439
  9753                           
  9754                           ;main.c: 110:       motorBDirection = 0;
  9755  00220A  0E00               	movlw	0
  9756  00220C  D008               	goto	L16
  9757  00220E                     i2l4439:
  9758  00220E  0404               	decf	updateMotorBEncoder@val,w,c
  9759  002210  1005               	iorwf	updateMotorBEncoder@val+1,w,c
  9760  002212  A4D8               	btfss	status,2,c
  9761  002214  D005               	goto	i2l4445
  9762  002216  5078               	movf	_motorBDirection,w,c	;volatile
  9763  002218  A4D8               	btfss	status,2,c
  9764  00221A  D002               	goto	i2l4445
  9765                           
  9766                           ;main.c: 113:       motorBDirection = 1;
  9767  00221C  0E01               	movlw	1
  9768  00221E                     L16:
  9769  00221E  6E78               	movwf	_motorBDirection,c	;volatile
  9770  002220                     i2l4445:
  9771                           
  9772                           ;main.c: 116:   encoderBInterruptLast = interruptPinState;
  9773  002220  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
  9774  002222  1003               	iorwf	updateMotorBEncoder@interruptPinState+1,w,c
  9775  002224  B4D8               	btfsc	status,2,c
  9776  002226  D002               	goto	i2u422_40
  9777  002228  0E01               	movlw	1
  9778  00222A  D001               	goto	i2u423_40
  9779  00222C                     i2u422_40:
  9780  00222C  0E00               	movlw	0
  9781  00222E                     i2u423_40:
  9782  00222E  6E77               	movwf	_encoderBInterruptLast,c	;volatile
  9783                           
  9784                           ;main.c: 119:   if(!motorBDirection){
  9785  002230  5078               	movf	_motorBDirection,w,c	;volatile
  9786  002232  A4D8               	btfss	status,2,c
  9787  002234  D004               	goto	i2l4451
  9788                           
  9789                           ;main.c: 120:       motorBDistance++;
  9790  002236  0100               	movlb	0	; () banked
  9791  002238  4BC3               	infsnz	_motorBDistance& (0+255),f,b	;volatile
  9792  00223A  2BC4               	incf	(_motorBDistance+1)& (0+255),f,b	;volatile
  9793                           
  9794                           ;main.c: 121:   }else{
  9795  00223C  0012               	return	
  9796  00223E                     i2l4451:
  9797                           
  9798                           ;main.c: 122:       motorBDistance--;
  9799  00223E  0100               	movlb	0	; () banked
  9800  002240  07C3               	decf	_motorBDistance& (0+255),f,b	;volatile
  9801  002242  A0D8               	btfss	status,0,c
  9802  002244  07C4               	decf	(_motorBDistance+1)& (0+255),f,b	;volatile
  9803                           
  9804                           ; BSR set to: 0
  9805  002246  0012               	return		;funcret
  9806  002248                     __end_of_updateMotorBEncoder:
  9807                           	opt callstack 0
  9808                           
  9809                           	psect	rparam
  9810  0000                     
  9811                           	psect	temp
  9812  000079                     btemp:
  9813                           	opt callstack 0
  9814  000079                     	ds	1
  9815  0000                     int$flags	set	btemp
  9816  0000                     wtemp8	set	btemp+1
  9817  0000                     ttemp5	set	btemp+1
  9818  0000                     ttemp6	set	btemp+4
  9819  0000                     ttemp7	set	btemp+8
  9820                           tosu	equ	0xFFF
  9821                           tosh	equ	0xFFE
  9822                           tosl	equ	0xFFD
  9823                           stkptr	equ	0xFFC
  9824                           pclatu	equ	0xFFB
  9825                           pclath	equ	0xFFA
  9826                           pcl	equ	0xFF9
  9827                           tblptru	equ	0xFF8
  9828                           tblptrh	equ	0xFF7
  9829                           tblptrl	equ	0xFF6
  9830                           tablat	equ	0xFF5
  9831                           prodh	equ	0xFF4
  9832                           prodl	equ	0xFF3
  9833                           indf0	equ	0xFEF
  9834                           postinc0	equ	0xFEE
  9835                           postdec0	equ	0xFED
  9836                           preinc0	equ	0xFEC
  9837                           plusw0	equ	0xFEB
  9838                           fsr0h	equ	0xFEA
  9839                           fsr0l	equ	0xFE9
  9840                           wreg	equ	0xFE8
  9841                           indf1	equ	0xFE7
  9842                           postinc1	equ	0xFE6
  9843                           postdec1	equ	0xFE5
  9844                           preinc1	equ	0xFE4
  9845                           plusw1	equ	0xFE3
  9846                           fsr1h	equ	0xFE2
  9847                           fsr1l	equ	0xFE1
  9848                           bsr	equ	0xFE0
  9849                           indf2	equ	0xFDF
  9850                           postinc2	equ	0xFDE
  9851                           postdec2	equ	0xFDD
  9852                           preinc2	equ	0xFDC
  9853                           plusw2	equ	0xFDB
  9854                           fsr2h	equ	0xFDA
  9855                           fsr2l	equ	0xFD9
  9856                           status	equ	0xFD8


Data Sizes:
    Strings     306
    Constant    35
    Data        9
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    114     120
    BANK0           128     61     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_46(CODE[16]), 
		 -> STR_44(CODE[14]), STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), 
		 -> STR_36(CODE[13]), STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), 
		 -> STR_28(CODE[14]), STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_46(CODE[16]), 
		 -> STR_44(CODE[14]), STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), 
		 -> STR_36(CODE[13]), STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), 
		 -> STR_28(CODE[14]), STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1630_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_45(CODE[3]), STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[3]), STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), 
		 -> STR_29(CODE[3]), STR_27(CODE[3]), STR_25(CODE[3]), STR_24(CODE[15]), 
		 -> STR_23(CODE[15]), STR_21(CODE[3]), STR_20(CODE[10]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_46(CODE[16]), STR_44(CODE[14]), STR_42(CODE[11]), 
		 -> STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), STR_34(CODE[13]), 
		 -> STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), STR_26(CODE[10]), 
		 -> STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_46(CODE[16]), STR_44(CODE[14]), STR_42(CODE[11]), 
		 -> STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), STR_34(CODE[13]), 
		 -> STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), STR_26(CODE[10]), 
		 -> STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_46(CODE[16]), STR_44(CODE[14]), 
		 -> STR_42(CODE[11]), STR_40(CODE[9]), STR_38(CODE[16]), STR_36(CODE[13]), 
		 -> STR_34(CODE[13]), STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[14]), 
		 -> STR_26(CODE[10]), STR_22(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), 
		 -> STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), 
		 -> STR_4(CODE[16]), STR_2(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_printf
    _doDisplayLog->_printf
    _printf->_vfprintf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   89464
                                             43 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     762
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         33    33      0   35336
                                             14 BANK0     29    29      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                     _init_motor_PWM
                            _lcdInst
                             _printf
              _requestIsTireDropDone
         _sendArduinoTireDropRequest
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (2) _setMotorSpeeds                                      13     8      5    6903
                                             89 COMRAM    13     8      5
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (3) _set_pwm_duty_cycle                                  20    12      8    5709
                                             69 COMRAM    20    12      8
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             44 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2200
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1551
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0     805
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0     829
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     782
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                         9     7      2   25830
                                             14 BANK0      9     7      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   25375
                                              2 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22936
                                            108 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   22382
                                             75 COMRAM    33    27      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7017
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7253
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4987
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      90
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3D      73       5       89.8%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     72      78       1       95.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB       6        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 23:20:45 2019

                          ___fldiv@aexp 0045                            ___fldiv@bexp 0044  
                          ___fldiv@sign 003D                             __CFG_CPD$ON 000000  
                   ___wmul@multiplicand 0008                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                           __CFG_OSC$HS 000000                                     l201 20CE  
                                   l159 1862                                     l440 0E88  
                                   l274 0814                                     l427 205A  
                                   l438 0E80                                     l467 1B64  
                                   l581 21B8                                     l486 106C  
                                   l488 1074                                     l819 1F36  
                                   l974 2372                            __CFG_CPB$OFF 000000  
                                   _PR2 000FCB                                     _PSA 007EAB  
                                   _abs 2638                                     _pad 202C  
                      ??_init_motor_PWM 0006                                     wreg 000FE8  
                          ___flmul@aexp 0025                            ___flmul@bexp 0026  
                          ___flmul@sign 0020                            ___flmul@temp 002B  
                          ___flmul@prod 0027                            __CFG_LVP$OFF 000000  
                          ___fltol@exp1 0036                            __CFG_WDT$OFF 000000  
                                  ?_abs 0018                                    l1150 0D62  
                                  l1216 1A7A                                    l1209 19FC  
                                  l1138 0CF8                                    l1260 1D74  
                                  l1229 2660                                    l1149 0D66  
                                  l1327 24CC                                    l1168 08B4  
                                  l1185 0B52                                    l1177 0ACC  
                                  l1178 0AC8                                    l4021 1F0A  
                                  l4031 1F6E                                    l4007 0B70  
                                  l4103 1AA0                                    l4025 1F20  
                                  l4017 1ED6                                    l4041 1F90  
                                  l4121 1AEC                                    l4105 1AAC  
                                  l4061 1FEA                                    l5111 25B8  
                                  l4207 21AA                                    l5201 18F0  
                                  l4057 1FDA                                    l5203 1904  
                                  l5107 25A2                                    l5115 24E0  
                                  l5131 2044                                    l4075 201A  
                                  l4067 1FF2                                    l4091 1A2A  
                                  l5221 199C                                    l5213 1960  
                                  l5117 24E4                                    l5141 207C  
                                  l4069 1FFE                                    l4093 1A30  
                                  l4085 1A0C                                    l6005 0714  
                                  l5135 2052                                    l4095 1A3C  
                                  l6031 07A8                                    l6023 0790  
                                  l6007 0744                                    l5217 1976  
                                  l5241 1DE8                                    l5233 1DAA  
                                  l5145 20A8                                    l5137 2064  
                                  l5401 10DA                                    l4097 1A62  
                                  l4281 20D2                                    l5243 1DFC  
                                  l5331 1026                                    l5307 0FAA  
                                  l3803 0C58                                    l4195 216A  
                                  l6043 07CE                                    l6035 07B6  
                                  l6027 079C                                    l6019 0784  
                                  l5253 1E5A                                    l5237 1DCE  
                                  l3821 0CD0                                    l3813 0CA8  
                                  l4197 2176                                    ?_pad 001A  
                                  l4631 2364                                    l4623 2330  
                                  l5327 100E                                    l5343 1B28  
                                  l5415 1168                                    l5423 11DE  
                                  l5511 0076                                    l5503 006E  
                                  l6047 07DA                                    l6039 07C2  
                                  l6055 07E8                                    l4625 233C  
                                  l5257 1E80                                    l5249 1E44  
                                  l5097 2260                                    l5361 1BB0  
                                  l5353 1B7A                                    l5521 00C6  
                                  l3833 0D0E                                    l3761 0BB6  
                                  l3913 08A0                                    l5195 18CA  
                                  l5371 1C08                                    l5515 007A  
                                  l5507 0072                                    l5611 244A  
                                  l3827 0CF6                                    l3923 08D2  
                                  l3915 08A4                                    l5269 2590  
                                  l5461 1CAA                                    l5445 1C50  
                                  l5189 18A2                                    l5293 0EA2  
                                  l5357 1B92                                    l5533 0134  
                                  l5613 2470                                    l5701 1820  
                                  l3781 0BF6                                    l3757 0BB2  
                                  l5471 1D14                                    l5463 1CB2  
                                  l5455 1C9A                                    l5447 1C54  
                                  l5279 0E64                                    l5375 1C20  
                                  l5367 1BEE                                    l5439 1252  
                                  l5535 0152                                    l5519 0084  
                                  l3863 0DCE                                    l3839 0D2C  
                                  l5465 1CB8                                    l5297 0EB2  
                                  l5393 10B8                                    l5561 02C6  
                                  l5553 0258                                    l5537 0160  
                                  l5705 182C                                    l3873 0E04  
                                  l3777 0BF2                                    l5467 1CE0  
                                  l5387 1088                                    l5715 1844  
                                  l3875 0E06                                    l3867 0DF8  
                                  l3859 0DAA                                    l3795 0C40  
                                  l3971 0A92                                    l5581 03D0  
                                  l5709 1836                                    l3789 0C2A  
                                  l3965 0A74                                    l5821 13EC  
                                  l5575 0394                                    l5495 0058  
                                  l5591 03F2                                    l3991 0B10  
                                  l3895 0860                                    l5823 13F2  
                                  l5807 13C6                                    l5831 140E  
                                  l5585 03DA                                    l5497 005A  
                                  l5649 16BE                                    l3897 0864  
                                  l5817 13E6                                    l5833 1442  
                                  l5499 006A                                    l5667 1740  
                                  l3995 0B2E                                    l3899 0874  
                                  l5843 146C                                    l5837 145E  
                                  l5781 130E                                    l5773 12E4  
                                  l5917 04D8                                    l5909 04AA  
                                  l5687 17C2                                    l5689 17E0  
                                  l5937 0584                                    l5955 05EC  
                                  l5797 138C                                    l5975 0674  
                                  l5995 06EA                                    l5899 0444  
                                  l5989 06DA                                    _P1M0 007DEE  
                                  _P1M1 007DEF                                    STR_1 FD2B  
                                  STR_2 FCD9                                    STR_3 FD2B  
                                  STR_4 FC1D                                    STR_5 FD2B  
                                  STR_6 FC88                                    STR_7 FD2B  
                                  STR_8 FC2D                                    STR_9 FD2B  
                                  _LATB 000F8A                                    _LATD 000F8C  
                                  u4010 1684                                    u4005 1662  
                                  u4025 1686                                    u5010 0FDA  
                                  u5011 0FD8                                    u4035 27B6  
                                  u5020 0FE8                                    u4036 27B8  
                                  u4060 217A                                    u5030 0FEC  
                                  u3510 0DB8                                    u5120 1BA6  
                                  u5200 10D6                                    u3520 0DDC  
                                  u4330 2340                                    u5050 0FF8  
                                  u5130 1BD2                                    u5210 110C  
                                  u3610 08C0                                    u5300 1210  
                                  u5220 110E                                    u3700 0B1E  
                                  u3620 0A36                                    u5301 120E  
                                  u5310 121E                                    u3470 0D5C  
                                  u3710 0B3C                                    u6007 2708  
                                  u5071 1B08                                    u4095 23AC  
                                  u5160 1C34                                    u5320 1222  
                                  u5240 1146                                    u6017 2712  
                                  u5137 1BC8                                    u3625 0A2C  
                                  u4610 2692                                    u5250 1148  
                                  u4700 25FC                                    u4620 2694  
                                  u5180 1062                                    u5500 01DA  
                                  u3660 0AC2                                    u5350 1C96  
                                  u4550 2258                                    u4710 25FE  
                                  u5270 11BA                                    u3830 2004  
                                  u3910 1AB6                                    u4535 2720  
                                  u4536 2722                                    u4720 24B4  
                                  u5280 11EE                                    u5600 12D6  
                                  u5370 1D44                                    u4810 1908  
                                  u4570 22A0                                    u4730 24B6  
                                  u5530 02FA                                    u5610 12F0  
                                  u5275 11A8                                    u5380 1D46  
                                  u5460 0198                                    u3780 1F7E  
                                  u4750 26F2                                    u4910 258C  
                                  u4670 2646                                    u4590 2506  
                                  u5470 019A                                    u3790 1FAE  
                                  u5606 12D8                                    u4760 26F4  
                                  u4920 0E36                                    u4680 26C2  
                                  u5480 01A6                                    u5640 13E2  
                                  u5616 12F2                                    u4930 0E38  
                                  u4690 26C4                                    u5730 07A4  
                                  u3795 1FA4                                    u4597 24FC  
                                  u4870 1E00                                    u3990 1660  
                                  u4791 18D0                                    u4960 0E76  
                                  u5817 04E6                                    u5907 22D2  
                                  u5827 0592                                    u4980 0E9C  
                                  u5917 22E4                                    u5837 05DE  
                                  u4990 0FB8                                    u5927 2306  
                                  u5847 05FA                                    u5937 131C  
                                  u5857 0682                                    u5947 13AC  
                                  u5867 0702                                    u5957 16AE  
                                  u5877 0778                                    u5967 16CC  
                                  u5887 0828                                    u5977 174E  
                                  u5897 22BA                                    u5987 1814  
                                  u5997 186A                                    abs@a 0018  
                                  _dbuf 00CB                                    _atoi 1C3E  
                                  _main 0426                                    _dtoa 0E0E  
              __end_of_interruptHandler 2638                                    _keys FBD9  
                                  _prec 0073                                    _nout 00BD  
                                  pad@i 0021                                    pad@p 001E  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 0023  
                                  fsr2l 000FD9                                    _stoa 1AFE  
                                  btemp 0079                                    _xtoa 1050  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E                           __CFG_IESO$OFF 000000  
               __size_of_setMotorSpeeds 0086                         ___fldiv@new_exp 003E  
                   __end_of_EncoderInit 2836                           __CFG_MCLRE$ON 000000  
                          ___param_bank 000000                                   ??_abs 001A  
                                 ??_pad 0020                   I2C_Master_Read@ackBit 0007  
                      ?_I2C_Master_Init 0013                        ?_I2C_Master_Read 0001  
                      ?_I2C_Master_Wait 0001                        ?_I2C_Master_Stop 0001  
                         ___fltol@sign1 0035                             ?_TIMER_INIT 0001  
                       __end_of___aodiv 19BE                                   ?_atoi 000D  
                                 ?_main 0001                                   ?_dtoa 0025  
                       __end_of___aomod 1EA2                                   _CCP1X 007DED  
                       __end_of___fldiv 0E0E                                   _CCP1Y 007DEC  
                                 _CCP2X 007DD5                                   _CCP2Y 007DD4  
                                 STR_10 FD1F                                   STR_11 FD2B  
                                 STR_20 FCF0                                   STR_12 FC4D  
                                 STR_21 FD2B                                   STR_13 FD2B  
                                 STR_22 FD04                                   STR_30 FCCC  
                                 STR_14 FBFC                                   STR_31 FD2B  
                                 STR_15 FD2B                                   STR_23 FC5C  
                                 STR_32 FD16                                   STR_40 FD0D  
                                 STR_16 FCA4                                   STR_24 FC6B  
                                 STR_41 FD2B                                   STR_33 FD2B  
                                 STR_25 FD2B                                   STR_17 FD28  
                                 STR_18 FD28                                   STR_26 FCFA  
                                 STR_42 FCE5                                   STR_34 FCB2  
                                 STR_19 FD28                                   STR_43 FD2B  
                                 STR_35 FD2B                                   STR_27 FD2B  
                                 STR_36 FCBF                                   STR_28 FC96  
                                 STR_44 FC7A                                   STR_45 FD2B  
                                 STR_37 FD2B                                   STR_29 FD2B  
                                 STR_38 FC3D                                   STR_46 FC0D  
                                 STR_39 FD2B                         __end_of___flmul 0B86  
                       __end_of___fltol 202C                                   ?_stoa 0013  
                       __end_of___lldiv 21CA                                   ?_xtoa 0025  
                       __end_of___llmod 2384                                   _T0PS0 007EA8  
                                 _T0PS1 007EA9                                   _T0PS2 007EAA  
                                 i2l302 2634                                   i2l297 2614  
                          main@keyValue 00BC                                   i2l299 262A  
                          vfpfcnvrt@fmt 004E                                   _TMR0H 000FD7  
                          vfpfcnvrt@llu 005E                                   _TMR0L 000FD6  
                                 _PORTB 000F81                                   _TRISD 000F95  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                         __CFG_WRT3$OFF 000000                         __end_of_lcdInst 2888  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                          main@keypress 00B8                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000             set_pwm_duty_cycle@duty_valA 0052  
           set_pwm_duty_cycle@duty_valB 0054                         __end_of_initLCD 231E  
                        __CFG_EBTRB$OFF 000000                                   _flags 0075  
__end_ofinit_motor_PWM@TIMER2_PRESCALER FBF5          init_motor_PWM@TIMER2_PRESCALER FBF4  
                                 _fputc 2248                         __end_of_isalpha 2604  
                                 _fputs 2598                         __end_of_isdigit 26FA  
                                 atoi@n 001A                                   pad@fp 001A  
                                 atoi@s 000D                                   _width 00BF  
                                 _putch 2870                                   main@i 00B9  
                                 dtoa@d 0027                                   dtoa@i 0047  
                                 dtoa@n 003F                                   dtoa@p 0039  
                                 dtoa@s 003D                                   dtoa@w 003B  
                       __end_of_islower 269A                         __end_of_isspace 2598  
                       __end_of_isupper 26CA                                   tablat 000FF5  
                       send_nibble@data 0007                                   plusw1 000FE3  
                                 plusw2 000FDB                    __size_of_doOperation 0222  
           __end_of_updateMotorBEncoder 2248                                   stoa@i 001F  
                                 stoa@l 0027                                   stoa@p 0025  
                                 stoa@s 0015                                   stoa@w 0021  
                       __end_of_pulse_e 2724                                   ttemp5 007A  
                                 ttemp6 007D                                   ttemp7 0081  
                                 status 000FD8             I2C_Master_Read@receivedByte 0008  
                                 wtemp8 007A                                   xtoa@c 004A  
                                 xtoa@d 0027                                   xtoa@i 0048  
                                 xtoa@n 0040                                   xtoa@p 003C  
                                 xtoa@w 003E                                   xtoa@x 002F  
                       __end_of_toupper 24D6                  doOperation@motorASpeed 009D  
                doOperation@motorBSpeed 009F                          __CFG_PBADEN$ON 000000  
                          _toupper$1681 0012                         __initialization 23E0  
                   main@currentLogState 00BA                            __end_of_atoi 1D7E  
                          __end_of_main 0834                            __end_of_dtoa 1050  
                          __end_of_keys FBEA                            __end_of_stoa 1C3E  
                 __size_of_doDisplayLog 01D6                            __end_of_xtoa 127C  
                                ??_atoi 000F                                  ??_main 00AB  
                                ??_dtoa 002F                                  ??_stoa 0017  
                                ??_xtoa 0030                           __activetblptr 000002  
               set_pwm_duty_cycle@dutyA 0046                 set_pwm_duty_cycle@dutyB 004A  
         doOperation@secondsMeasuredOld 00A4                       ?_I2C_Master_Start 0001  
                     ?_I2C_Master_Write 0007                   __end_of_replaceOldLog 28AC  
                    ??_I2C_Master_Start 0007                                  _ADCON1 000FC1  
                    ??_I2C_Master_Write 0009                                  _CCP1M0 007DE8  
                                _CCP1M1 007DE9                                  _CCP1M2 007DEA  
                                _CCP1M3 007DEB                                  _CCP2M0 007DD0  
                                _CCP2M1 007DD1                                  _CCP2M2 007DD2  
                                _CCP2M3 007DD3                            ?_send_nibble 0001  
                                ?_fputc 000A                        ___llmod@dividend 0006  
                                ?_fputs 0013                                  _CCPR1L 000FBE  
                                _CCPR2L 000FBB                                  _T08BIT 007EAE  
                                ?_putch 0001                  doOperation@tiresToDrop 00A7  
                                _INT1IE 007F83                                  _INT1IF 007F80  
                                _INT2IE 007F84                                  _INT2IF 007F81  
                                i2l4451 223E                                  i2l4445 2220  
                                i2l4439 220E                      _set_pwm_duty_cycle 149E  
                           _EncoderInit 2820                           vfpfcnvrt@done 0069  
                                _TMR0IE 007F95                                  _TMR0IF 007F92  
                                _TMR0ON 007EAF                                  _TMR2ON 007E52  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 1AFE                            _doDisplayLog 16A0  
                   __size_of_TIMER_INIT 0022                     ?_set_pwm_duty_cycle 0046  
                        __CFG_XINST$OFF 000000                   _encoderAInterruptLast 00C7  
                          vfprintf@cfmt 0080                                  ___flge 1EA2  
                             ??___aodiv 0016                               ??___aomod 0016  
                                ___wmul 2774                               ??___fldiv 0035  
                        __CFG_STVREN$ON 000000                               ??___flmul 001C  
                             ??___fltol 0031                               ??___lldiv 000E  
                             ??___llmod 000E                                  clear_0 2418  
                             ??_lcdInst 0009                                  _printf 274C  
                                pad@buf 001C             ?_sendArduinoTireDropRequest 0001  
                                dtoa@fp 0025                                  _strlen 24D6  
                             ??_initLCD 000A                                  fputc@c 000A  
                                fputs@c 0017                                  fputs@i 0018  
                          __pdataCOMRAM 0078                                  fputs@s 0013  
                             ??_isalpha 0008                               ??_isdigit 0008  
                 _requestIsTireDropDone 2802                    ??_set_pwm_duty_cycle 004E  
                             ??_islower 0008                            __mediumconst FBD8  
                             ??_isspace 0008        doOperation@currentOperationState 00A9  
                                tblptrh 000FF7                               ??_isupper 0008  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                stoa@cp 0023                                  stoa@fp 0013  
                      __end_of_vfprintf 248C                               ??_pulse_e 0006  
                                xtoa@fp 0025                               ??_toupper 000E  
                            ___flge@ff1 0006                              ___flge@ff2 000A  
                          ___xxtofl@arg 0010                   pulse_e@interruptState 0006  
                          ___xxtofl@exp 000F                            ___xxtofl@val 0006  
                            __accesstop 0080                 __end_of__initialization 2428  
                   _setMotorSpeeds$1952 005F                     _setMotorSpeeds$1953 0063  
                         ___rparam_used 000001                          _setMotorSpeeds 20C2  
                            ___fltol@f1 002D                    __end_of_happynewyear FBF1  
                        __pcstackCOMRAM 0001                            __pidataBANK0 2892  
                         __end_of_fputc 22B4                           __end_of_fputs 25D0  
                         __end_of_putch 287C                                 ??_fputc 000E  
                               ??_fputs 0017                                 ??_putch 0009  
                            __pbssBANK0 00BD                  __end_of_setMotorSpeeds 2148  
                       _secondsMeasured 00C1                       ?_interruptHandler 0001  
           doDisplayLog@currentLogState 008E                      ??_interruptHandler 0006  
                 _encoderBInterruptLast 0077                                 ?___flge 0006  
                               ?___wmul 0006                      __size_of_send_byte 0012  
                          ??_TIMER_INIT 0006                                 ?_printf 0082  
                               ?_strlen 0006                                 _T2CKPS0 007E50  
                               _T2CKPS1 007E51                  ?_requestIsTireDropDone 0001  
                    __size_of_robotInit 0040                               ?___xxtofl 0006  
                    __size_of_vfpfcnvrt 0414                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                  __size_of_send_nibble 0016                         ?_setMotorSpeeds 005A  
                    __end_of_TIMER_INIT 2802                                 __Hparam 0000  
                            _keyPressed 00CA                                 __Lparam 0000  
                       __size_of___flge 00D0                                 ___aodiv 1876  
                               ___aomod 1D7E                                 ___fldiv 0B86  
                               ___flmul 0834                                 ___fltol 1F72  
                               ___lldiv 2148                         __size_of___wmul 0026  
                               ___llmod 231E                               ?_vfprintf 006D  
                               __pcinit 23E0                                 __ramtop 1000  
                               _lcdInst 287C                                 __ptext0 0426  
                               __ptext1 251A                                 __ptext2 22B4  
                               __ptext3 2384                                 __ptext4 2148  
                               __ptext5 2820                                 __ptext6 28AA  
                               __ptext7 127C                                 __ptext8 20C2  
                               __ptext9 149E                         __size_of_printf 0028  
                             _T0CONbits 000FD5                         __size_of_strlen 0044  
                               _initLCD 22B4                          _motorADistance 00C5  
                          __size_of_abs 0032                            __size_of_pad 0096  
                               _isalpha 25D0                                 _isdigit 26CA  
                            ??___xxtofl 000A                          _motorBDistance 00C3  
                               _islower 266A                                 _isspace 255A  
                               _isupper 269A                __size_of_I2C_Master_Init 005C  
              __size_of_I2C_Master_Read 0024                __size_of_I2C_Master_Wait 0012  
              __size_of_I2C_Master_Stop 0008                                 atoi@neg 0013  
                               _pulse_e 26FA                           ??_doOperation 008E  
                        __pintcode_body 2604                                 _toupper 248C  
           _topBreakBeamTriggeredChange 00C9                    end_of_initialization 2428  
                 __end_of_LCD_SIZE_HORZ FBF4                       __end_of_send_byte 2870  
                 __end_of_LCD_SIZE_VERT FBF3                            ?_EncoderInit 0001  
                 doOperation@isDoneDrop 00A3                                 fputc@fp 000C  
                         __Lmediumconst FBD8                                 int_func 2604  
                               fputs@fp 0015                 __size_of_init_motor_PWM 0028  
                     __end_of_robotInit 255A               __size_of_I2C_Master_Start 0008  
             __size_of_I2C_Master_Write 000A                         ___lldiv@divisor 000A  
                       ___lldiv@counter 0012                       __end_of_vfpfcnvrt 0426  
          __size_of_updateMotorBEncoder 007E                    doDisplayLog@keyValue 0096  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 0073  
                  doDisplayLog@keypress 0094                                 strlen@a 0008  
                               strlen@s 0006                               _PORTBbits 000F81  
                             _PORTEbits 000F84    updateMotorBEncoder@interruptPinState 0002  
                         ___xxtofl@sign 000E                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISEbits 000F96                             ___fldiv@grs 0040  
                           ___fldiv@rem 0039                            _happynewyear FBEA  
                           ___flmul@grs 0021                           send_byte@data 0008  
                   __end_of_doOperation 149E                  updateMotorBEncoder@val 0004  
                __size_of_replaceOldLog 0002                          __end_of___flge 1F72  
                           vfpfcnvrt@ap 0050                             vfpfcnvrt@cp 0066  
                           vfpfcnvrt@fp 004C                             vfpfcnvrt@ll 0056  
                        __end_of___wmul 279A                           __pidataCOMRAM 28AC  
                        __end_of_printf 2774                          __end_of_strlen 251A  
                   start_initialization 23E0             __size_of_set_pwm_duty_cycle 0202  
             setMotorSpeeds@motorASpeed 005A               setMotorSpeeds@motorBSpeed 005D  
                           __end_of_abs 266A                             __end_of_pad 20C2  
                     ??_I2C_Master_Init 0017                       ??_I2C_Master_Read 0007  
                     ??_I2C_Master_Wait 0006                       ??_I2C_Master_Stop 0007  
                       ___llmod@divisor 000A                         ___llmod@counter 000E  
                           vfprintf@fmt 006F                                ??___flge 000E  
                              ??___wmul 000A                   main@currentRobotState 00BB  
              I2C_Master_Init@clockFreq 0013                             __pdataBANK0 00EB  
               ??_requestIsTireDropDone 0009                        __CFG_LPT1OSC$OFF 000000  
                              ??_printf 0073               __size_of_interruptHandler 2630  
                              ??_strlen 0008                               ___fldiv@a 0031  
                             ___fldiv@b 002D                               ___flmul@a 0018  
                             ___flmul@b 0014                             __pbssCOMRAM 0073  
                         __pcstackBANK0 0080                        ___aodiv@dividend 0006  
                         _replaceOldLog 28AA                        ??_setMotorSpeeds 005F  
                     __size_of___xxtofl 0140                             _doOperation 127C  
                setMotorSpeeds@Aforward 005C                          _init_motor_PWM 2724  
                             _atoi$1590 0015                               _atoi$1591 0019  
                             _atoi$1592 0017                    __size_of_EncoderInit 0016  
                      _I2C_Master_Start 28A2                        _I2C_Master_Write 2888  
              doOperation@topLaserState 00AA                               _dtoa$1094 0037  
                     __CFG_CCP2MX$PORTC 000000                               __pintcode 0008  
                         __pmediumconst FBD8                                ?___aodiv 0006  
                              ?___aomod 0006                                ?___fldiv 002D  
                      ___aodiv@quotient 0018                                ?___flmul 0014  
                              ?___fltol 002D                                ?___lldiv 0006  
                              ?___llmod 0006                                ?_lcdInst 0001  
                     __size_of_vfprintf 0056                                ?_initLCD 0001  
                              ?_isalpha 0006                                ?_isdigit 0006  
                              ?_islower 0006                                ?_isspace 0006  
                        ?_replaceOldLog 0001                                ?_isupper 0006  
                   _updateMotorBEncoder 21CA                           ??_send_nibble 0007  
                              ?_pulse_e 0001                          __size_of_fputc 006C  
                        __size_of_fputs 0038                                ?_toupper 000C  
                __end_of_init_motor_PWM 274C            doOperation@topLaserStatePrev 00A6  
                        __size_of_putch 000C                          ___wmul@product 000A  
                              _LATAbits 000F89                           ?_doDisplayLog 008E  
                              _LATDbits 000F8C                               _send_byte 285E  
                        _LCD_LINE1_ADDR FBF1                          _LCD_LINE2_ADDR FBFB  
                        _LCD_LINE3_ADDR FBFA                          _LCD_LINE4_ADDR FBF9  
            doOperation@timeInOperation 00A1                                i2u422_40 222C  
                              i2u414_40 21D4                                i2u423_40 222E  
                              i2u414_48 21D6                 init_motor_PWM@FREQUENCY FBF5  
                              i2u417_40 21F4                                i2u417_48 21F6  
                  ?_updateMotorBEncoder 0001                        __CFG_WDTPS$32768 000000  
                             _robotInit 251A                               _vfpfcnvrt 0012  
                             _xtoa$1116 0038                               _xtoa$1117 003A  
                     ___wmul@multiplier 0006            ??_sendArduinoTireDropRequest 0009  
                          _isspace$1617 000C                              vfpfcnvrt@c 0068  
                             copy_data0 23F4                         ?_init_motor_PWM 0001  
               _set_pwm_duty_cycle$1951 0056                          ??_doDisplayLog 0090  
                __end_of_LCD_LINE1_ADDR FBF2                  __end_of_LCD_LINE2_ADDR FBFC  
                __end_of_LCD_LINE3_ADDR FBFB                  __end_of_LCD_LINE4_ADDR FBFA  
                   __end_of_send_nibble 284C                              ?_send_byte 0001  
                              __Hrparam 0000                   ??_updateMotorBEncoder 0001  
       doDisplayLog@currentDisplayState 0095                              vfprintf@ap 0071  
                              __Lrparam 0000                              vfprintf@fp 006D  
                    __CFG_BOREN$SBORDIS 000000     __size_of_sendArduinoTireDropRequest 0022  
                            ?_robotInit 0001                        __size_of___aodiv 0148  
                      __size_of___aomod 0124                        __size_of___fldiv 0288  
                      __size_of___flmul 0352                        __size_of___fltol 00BA  
                      __size_of___lldiv 0082                        __size_of___llmod 0066  
                            ?_vfpfcnvrt 004C                         ___aodiv@divisor 000E  
                      _interruptHandler 0008                         ___aodiv@counter 0016  
                      __size_of_lcdInst 000C                         ??_replaceOldLog 0006  
                       _I2C_Master_Init 2384                         _I2C_Master_Read 279A  
                      __size_of_initLCD 006A                                ___xxtofl 19BE  
                       _I2C_Master_Wait 284C                         _I2C_Master_Stop 289A  
                      __size_of_isalpha 0034                        __size_of_isdigit 0030  
                      __size_of_islower 0030                        __size_of_isspace 003E  
                              __ptext10 19BE                                __ptext11 1F72  
                              __ptext20 279A                                __ptext12 0834  
                              __ptext21 284C                                __ptext13 1EA2  
                              __ptext30 266A                                __ptext22 2724  
                              __ptext14 0B86                                __ptext31 269A  
                              __ptext23 27E0                                __ptext15 27BE  
                              __ptext40 2638                                __ptext32 25D0  
                              __ptext24 16A0                                __ptext16 2802  
                              __ptext41 1D7E                                __ptext33 1AFE  
                              __ptext25 274C                                __ptext17 2888  
                              __ptext50 26FA                                __ptext42 1876  
                              __ptext34 0E0E                                __ptext26 2436  
                              __ptext18 289A                                __ptext51 231E  
                              __ptext43 1C3E                                __ptext35 202C  
                              __ptext27 0012                                __ptext19 28A2  
                              __ptext44 255A                                __ptext36 24D6  
                              __ptext28 1050                                __ptext53 21CA  
                              __ptext45 26CA                                __ptext37 2598  
                              __ptext29 248C                                __ptext46 2774  
                              __ptext38 2248                                __ptext47 287C  
                              __ptext39 2870                                __ptext48 285E  
                              __ptext49 2836                        __size_of_isupper 0030  
                      __size_of_pulse_e 002A                         _motorADirection 00F2  
                      __size_of_toupper 004A                           __size_of_atoi 0140  
                         __size_of_main 040E                         _motorBDirection 0078  
                         __size_of_dtoa 0242                           __size_of_stoa 0140  
                         __size_of_xtoa 022C                               stoa@F1139 00EB  
        set_pwm_duty_cycle@max_duty_val 0050                                int$flags 0079  
                              _vfprintf 2436                               printf@fmt 0082  
                              main@tick 00B4                                main@time 00AD  
        __size_of_requestIsTireDropDone 001E           __end_of_requestIsTireDropDone 2820  
           I2C_Master_Write@byteToWrite 0007                        ___aomod@dividend 0006  
            __end_of_set_pwm_duty_cycle 16A0                               putch@data 0009  
                        _vfpfcnvrt$1131 006B                __end_of_I2C_Master_Start 28AA  
              __end_of_I2C_Master_Write 2892                              _INTCONbits 000FF2  
                              isalpha@c 0006                                isdigit@c 0006  
                           _send_nibble 2836                            ?_doOperation 0001  
        _bottomBreakBeamTriggeredChange 00C8                                intlevel2 0000  
                         _LCD_SIZE_HORZ FBF3                                islower@c 0006  
                         _LCD_SIZE_VERT FBF2                                isspace@c 0006  
                      ___lldiv@dividend 0006                             ??_send_byte 0008  
                              isupper@c 0006                              _OSCCONbits 000FD3  
                           ??_robotInit 001B                                printf@ap 008C  
               __end_of_I2C_Master_Init 23E0                         ___aomod@divisor 000E  
               __end_of_I2C_Master_Read 27BE                 __end_of_I2C_Master_Wait 285E  
               __end_of_I2C_Master_Stop 28A2                             ??_vfpfcnvrt 0052  
                           lcdInst@data 0009                                stoa@nuls 0018  
                       ___aomod@counter 0016      __end_of_sendArduinoTireDropRequest 27E0  
            _sendArduinoTireDropRequest 27BE                              _TIMER_INIT 27E0  
       __end_ofinit_motor_PWM@FREQUENCY FBF9                    __end_of_doDisplayLog 1876  
                      ___lldiv@quotient 000E                                toupper@c 000C  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                          ___aodiv@sign 0017                           ??_EncoderInit 0006  
                          ___aomod@sign 0017  
