

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 19 21:00:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4620 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  001A88                     __pidataBANK0:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for stoa@F1139
   100  001A88  28                 	db	40
   101  001A89  6E                 	db	110
   102  001A8A  75                 	db	117
   103  001A8B  6C                 	db	108
   104  001A8C  6C                 	db	108
   105  001A8D  29                 	db	41
   106  001A8E  00                 	db	0
   107                           
   108                           	psect	mediumconst
   109  00FBE8                     __pmediumconst:
   110                           	opt callstack 0
   111  00FBE8  00                 	db	0
   112  00FBE9                     _keys:
   113                           	opt callstack 0
   114  00FBE9  31                 	db	49
   115  00FBEA  32                 	db	50
   116  00FBEB  33                 	db	51
   117  00FBEC  41                 	db	65
   118  00FBED  34                 	db	52
   119  00FBEE  35                 	db	53
   120  00FBEF  36                 	db	54
   121  00FBF0  42                 	db	66
   122  00FBF1  37                 	db	55
   123  00FBF2  38                 	db	56
   124  00FBF3  39                 	db	57
   125  00FBF4  43                 	db	67
   126  00FBF5  2A                 	db	42
   127  00FBF6  30                 	db	48
   128  00FBF7  23                 	db	35
   129  00FBF8  44                 	db	68
   130  00FBF9  00                 	db	0
   131  00FBFA                     __end_of_keys:
   132                           	opt callstack 0
   133  00FBFA                     _happynewyear:
   134                           	opt callstack 0
   135  00FBFA  00                 	db	0
   136  00FBFB  37                 	db	55
   137  00FBFC  0E                 	db	14
   138  00FBFD  02                 	db	2
   139  00FBFE  13                 	db	19
   140  00FBFF  02                 	db	2
   141  00FC00  13                 	db	19
   142  00FC01                     __end_of_happynewyear:
   143                           	opt callstack 0
   144  00FC01                     _LCD_LINE1_ADDR:
   145                           	opt callstack 0
   146  00FC01  00                 	db	0
   147  00FC02                     __end_of_LCD_LINE1_ADDR:
   148                           	opt callstack 0
   149  00FC02                     _LCD_SIZE_VERT:
   150                           	opt callstack 0
   151  00FC02  04                 	db	4
   152  00FC03                     __end_of_LCD_SIZE_VERT:
   153                           	opt callstack 0
   154  00FC03                     _LCD_SIZE_HORZ:
   155                           	opt callstack 0
   156  00FC03  10                 	db	16
   157  00FC04                     __end_of_LCD_SIZE_HORZ:
   158                           	opt callstack 0
   159  00FC04  50                 	db	80
   160  00FC05                     __end_of_LCD_LINE4_ADDR:
   161                           	opt callstack 0
   162  00FC05  10                 	db	16
   163  00FC06                     __end_of_LCD_LINE3_ADDR:
   164                           	opt callstack 0
   165  00FC06  40                 	db	64
   166  00FC07                     __end_of_LCD_LINE2_ADDR:
   167                           	opt callstack 0
   168  0000                     _TRISCbits	set	3988
   169  0000                     _LATDbits	set	3980
   170  0000                     _TRISB	set	3987
   171  0000                     _LATB	set	3978
   172  0000                     _TRISD	set	3989
   173  0000                     _LATD	set	3980
   174  0000                     _PORTB	set	3969
   175  0000                     _SSPBUF	set	4041
   176  0000                     _SSPCON2bits	set	4037
   177  0000                     _SSPCON1	set	4038
   178  0000                     _SSPADD	set	4040
   179  0000                     _SSPCON1bits	set	4038
   180  0000                     _SSPCON2	set	4037
   181  0000                     _SSPSTAT	set	4039
   182  0000                     _ADCON1	set	4033
   183  0000                     _TMR0L	set	4054
   184  0000                     _TMR0H	set	4055
   185  0000                     _TMR0ON	set	32431
   186  0000                     _PSA	set	32427
   187  0000                     _T0PS0	set	32424
   188  0000                     _T0PS1	set	32425
   189  0000                     _T0PS2	set	32426
   190  0000                     _T08BIT	set	32430
   191  0000                     _INTCONbits	set	4082
   192  0000                     _TMR0IF	set	32658
   193  0000                     _INT1IF	set	32640
   194  0000                     _INT1IE	set	32643
   195  0000                     _TMR0IE	set	32661
   196  00FC07                     STR_14:
   197  00FC07  54                 	db	84	;'T'
   198  00FC08  49                 	db	73	;'I'
   199  00FC09  52                 	db	82	;'R'
   200  00FC0A  45                 	db	69	;'E'
   201  00FC0B  2E                 	db	46
   202  00FC0C  20                 	db	32
   203  00FC0D  4F                 	db	79	;'O'
   204  00FC0E  4E                 	db	78	;'N'
   205  00FC0F  20                 	db	32
   206  00FC10  50                 	db	80	;'P'
   207  00FC11  4F                 	db	79	;'O'
   208  00FC12  4C                 	db	76	;'L'
   209  00FC13  45                 	db	69	;'E'
   210  00FC14  3A                 	db	58	;':'
   211  00FC15  20                 	db	32
   212  00FC16  58                 	db	88	;'X'
   213  00FC17  00                 	db	0
   214  00FC18                     STR_43:
   215  00FC18  28                 	db	40
   216  00FC19  31                 	db	49	;'1'
   217  00FC1A  29                 	db	41
   218  00FC1B  20                 	db	32
   219  00FC1C  28                 	db	40
   220  00FC1D  32                 	db	50	;'2'
   221  00FC1E  29                 	db	41
   222  00FC1F  20                 	db	32
   223  00FC20  28                 	db	40
   224  00FC21  33                 	db	51	;'3'
   225  00FC22  29                 	db	41
   226  00FC23  20                 	db	32
   227  00FC24  28                 	db	40
   228  00FC25  34                 	db	52	;'4'
   229  00FC26  29                 	db	41
   230  00FC27  00                 	db	0
   231  00FC28                     STR_4:
   232  00FC28  58                 	db	88	;'X'
   233  00FC29  20                 	db	32
   234  00FC2A  54                 	db	84	;'T'
   235  00FC2B  49                 	db	73	;'I'
   236  00FC2C  52                 	db	82	;'R'
   237  00FC2D  2E                 	db	46
   238  00FC2E  20                 	db	32
   239  00FC2F  53                 	db	83	;'S'
   240  00FC30  55                 	db	85	;'U'
   241  00FC31  50                 	db	80	;'P'
   242  00FC32  50                 	db	80	;'P'
   243  00FC33  4C                 	db	76	;'L'
   244  00FC34  49                 	db	73	;'I'
   245  00FC35  45                 	db	69	;'E'
   246  00FC36  44                 	db	68	;'D'
   247  00FC37  00                 	db	0
   248  00FC38                     STR_8:
   249  00FC38  28                 	db	40
   250  00FC39  32                 	db	50	;'2'
   251  00FC3A  29                 	db	41
   252  00FC3B  20                 	db	32
   253  00FC3C  53                 	db	83	;'S'
   254  00FC3D  41                 	db	65	;'A'
   255  00FC3E  56                 	db	86	;'V'
   256  00FC3F  45                 	db	69	;'E'
   257  00FC40  20                 	db	32
   258  00FC41  26                 	db	38
   259  00FC42  20                 	db	32
   260  00FC43  45                 	db	69	;'E'
   261  00FC44  58                 	db	88	;'X'
   262  00FC45  49                 	db	73	;'I'
   263  00FC46  54                 	db	84	;'T'
   264  00FC47  00                 	db	0
   265  00FC48                     STR_35:
   266  00FC48  28                 	db	40
   267  00FC49  32                 	db	50	;'2'
   268  00FC4A  29                 	db	41
   269  00FC4B  20                 	db	32
   270  00FC4C  51                 	db	81	;'Q'
   271  00FC4D  55                 	db	85	;'U'
   272  00FC4E  49                 	db	73	;'I'
   273  00FC4F  54                 	db	84	;'T'
   274  00FC50  20                 	db	32
   275  00FC51  44                 	db	68	;'D'
   276  00FC52  4F                 	db	79	;'O'
   277  00FC53  20                 	db	32
   278  00FC54  4E                 	db	78	;'N'
   279  00FC55  4F                 	db	79	;'O'
   280  00FC56  54                 	db	84	;'T'
   281  00FC57  00                 	db	0
   282  00FC58                     STR_12:
   283  00FC58  54                 	db	84	;'T'
   284  00FC59  49                 	db	73	;'I'
   285  00FC5A  52                 	db	82	;'R'
   286  00FC5B  2E                 	db	46
   287  00FC5C  20                 	db	32
   288  00FC5D  44                 	db	68	;'D'
   289  00FC5E  45                 	db	69	;'E'
   290  00FC5F  50                 	db	80	;'P'
   291  00FC60  4C                 	db	76	;'L'
   292  00FC61  4F                 	db	79	;'O'
   293  00FC62  59                 	db	89	;'Y'
   294  00FC63  3A                 	db	58	;':'
   295  00FC64  20                 	db	32
   296  00FC65  58                 	db	88	;'X'
   297  00FC66  00                 	db	0
   298  00FC67                     STR_20:
   299  00FC67  25                 	db	37
   300  00FC68  30                 	db	48	;'0'
   301  00FC69  32                 	db	50	;'2'
   302  00FC6A  78                 	db	120	;'x'
   303  00FC6B  2F                 	db	47
   304  00FC6C  25                 	db	37
   305  00FC6D  30                 	db	48	;'0'
   306  00FC6E  32                 	db	50	;'2'
   307  00FC6F  78                 	db	120	;'x'
   308  00FC70  2F                 	db	47
   309  00FC71  25                 	db	37
   310  00FC72  30                 	db	48	;'0'
   311  00FC73  32                 	db	50	;'2'
   312  00FC74  78                 	db	120	;'x'
   313  00FC75  00                 	db	0
   314  00FC76                     STR_21:
   315  00FC76  25                 	db	37
   316  00FC77  30                 	db	48	;'0'
   317  00FC78  32                 	db	50	;'2'
   318  00FC79  78                 	db	120	;'x'
   319  00FC7A  3A                 	db	58	;':'
   320  00FC7B  25                 	db	37
   321  00FC7C  30                 	db	48	;'0'
   322  00FC7D  32                 	db	50	;'2'
   323  00FC7E  78                 	db	120	;'x'
   324  00FC7F  3A                 	db	58	;':'
   325  00FC80  25                 	db	37
   326  00FC81  30                 	db	48	;'0'
   327  00FC82  32                 	db	50	;'2'
   328  00FC83  78                 	db	120	;'x'
   329  00FC84  00                 	db	0
   330  00FC85                     STR_41:
   331  00FC85  28                 	db	40
   332  00FC86  31                 	db	49	;'1'
   333  00FC87  20                 	db	32
   334  00FC88  49                 	db	73	;'I'
   335  00FC89  53                 	db	83	;'S'
   336  00FC8A  20                 	db	32
   337  00FC8B  4F                 	db	79	;'O'
   338  00FC8C  4C                 	db	76	;'L'
   339  00FC8D  44                 	db	68	;'D'
   340  00FC8E  45                 	db	69	;'E'
   341  00FC8F  53                 	db	83	;'S'
   342  00FC90  54                 	db	84	;'T'
   343  00FC91  29                 	db	41
   344  00FC92  00                 	db	0
   345  00FC93                     STR_6:
   346  00FC93  28                 	db	40
   347  00FC94  31                 	db	49	;'1'
   348  00FC95  29                 	db	41
   349  00FC96  20                 	db	32
   350  00FC97  50                 	db	80	;'P'
   351  00FC98  4F                 	db	79	;'O'
   352  00FC99  4C                 	db	76	;'L'
   353  00FC9A  45                 	db	69	;'E'
   354  00FC9B  20                 	db	32
   355  00FC9C  49                 	db	73	;'I'
   356  00FC9D  4E                 	db	78	;'N'
   357  00FC9E  46                 	db	70	;'F'
   358  00FC9F  4F                 	db	79	;'O'
   359  00FCA0  00                 	db	0
   360  00FCA1                     STR_25:
   361  00FCA1  28                 	db	40
   362  00FCA2  32                 	db	50	;'2'
   363  00FCA3  29                 	db	41
   364  00FCA4  20                 	db	32
   365  00FCA5  56                 	db	86	;'V'
   366  00FCA6  49                 	db	73	;'I'
   367  00FCA7  45                 	db	69	;'E'
   368  00FCA8  57                 	db	87	;'W'
   369  00FCA9  20                 	db	32
   370  00FCAA  4C                 	db	76	;'L'
   371  00FCAB  4F                 	db	79	;'O'
   372  00FCAC  47                 	db	71	;'G'
   373  00FCAD  53                 	db	83	;'S'
   374  00FCAE  00                 	db	0
   375  00FCAF                     STR_16:
   376  00FCAF  31                 	db	49	;'1'
   377  00FCB0  3C                 	db	60	;'<'
   378  00FCB1  2D                 	db	45
   379  00FCB2  20                 	db	32
   380  00FCB3  32                 	db	50	;'2'
   381  00FCB4  2D                 	db	45
   382  00FCB5  3E                 	db	62	;'>'
   383  00FCB6  20                 	db	32
   384  00FCB7  33                 	db	51	;'3'
   385  00FCB8  4D                 	db	77	;'M'
   386  00FCB9  45                 	db	69	;'E'
   387  00FCBA  4E                 	db	78	;'N'
   388  00FCBB  55                 	db	85	;'U'
   389  00FCBC  00                 	db	0
   390  00FCBD                     STR_31:
   391  00FCBD  4F                 	db	79	;'O'
   392  00FCBE  50                 	db	80	;'P'
   393  00FCBF  2E                 	db	46
   394  00FCC0  20                 	db	32
   395  00FCC1  43                 	db	67	;'C'
   396  00FCC2  4F                 	db	79	;'O'
   397  00FCC3  4D                 	db	77	;'M'
   398  00FCC4  50                 	db	80	;'P'
   399  00FCC5  4C                 	db	76	;'L'
   400  00FCC6  45                 	db	69	;'E'
   401  00FCC7  54                 	db	84	;'T'
   402  00FCC8  45                 	db	69	;'E'
   403  00FCC9  00                 	db	0
   404  00FCCA                     STR_33:
   405  00FCCA  28                 	db	40
   406  00FCCB  31                 	db	49	;'1'
   407  00FCCC  29                 	db	41
   408  00FCCD  20                 	db	32
   409  00FCCE  56                 	db	86	;'V'
   410  00FCCF  49                 	db	73	;'I'
   411  00FCD0  45                 	db	69	;'E'
   412  00FCD1  57                 	db	87	;'W'
   413  00FCD2  20                 	db	32
   414  00FCD3  4C                 	db	76	;'L'
   415  00FCD4  4F                 	db	79	;'O'
   416  00FCD5  47                 	db	71	;'G'
   417  00FCD6  00                 	db	0
   418  00FCD7                     STR_27:
   419  00FCD7  4F                 	db	79	;'O'
   420  00FCD8  50                 	db	80	;'P'
   421  00FCD9  45                 	db	69	;'E'
   422  00FCDA  52                 	db	82	;'R'
   423  00FCDB  41                 	db	65	;'A'
   424  00FCDC  54                 	db	84	;'T'
   425  00FCDD  49                 	db	73	;'I'
   426  00FCDE  4F                 	db	79	;'O'
   427  00FCDF  4E                 	db	78	;'N'
   428  00FCE0  20                 	db	32
   429  00FCE1  49                 	db	73	;'I'
   430  00FCE2  4E                 	db	78	;'N'
   431  00FCE3  00                 	db	0
   432  00FCE4                     STR_2:
   433  00FCE4  4F                 	db	79	;'O'
   434  00FCE5  50                 	db	80	;'P'
   435  00FCE6  2E                 	db	46
   436  00FCE7  20                 	db	32
   437  00FCE8  54                 	db	84	;'T'
   438  00FCE9  49                 	db	73	;'I'
   439  00FCEA  4D                 	db	77	;'M'
   440  00FCEB  45                 	db	69	;'E'
   441  00FCEC  20                 	db	32
   442  00FCED  58                 	db	88	;'X'
   443  00FCEE  73                 	db	115	;'s'
   444  00FCEF  00                 	db	0
   445  00FCF0                     STR_39:
   446  00FCF0  53                 	db	83	;'S'
   447  00FCF1  45                 	db	69	;'E'
   448  00FCF2  4C                 	db	76	;'L'
   449  00FCF3  45                 	db	69	;'E'
   450  00FCF4  43                 	db	67	;'C'
   451  00FCF5  54                 	db	84	;'T'
   452  00FCF6  20                 	db	32
   453  00FCF7  4C                 	db	76	;'L'
   454  00FCF8  4F                 	db	79	;'O'
   455  00FCF9  47                 	db	71	;'G'
   456  00FCFA  00                 	db	0
   457  00FCFB                     STR_23:
   458  00FCFB  28                 	db	40
   459  00FCFC  31                 	db	49	;'1'
   460  00FCFD  29                 	db	41
   461  00FCFE  20                 	db	32
   462  00FCFF  53                 	db	83	;'S'
   463  00FD00  54                 	db	84	;'T'
   464  00FD01  41                 	db	65	;'A'
   465  00FD02  52                 	db	82	;'R'
   466  00FD03  54                 	db	84	;'T'
   467  00FD04  00                 	db	0
   468  00FD05                     STR_19:
   469  00FD05  57                 	db	87	;'W'
   470  00FD06  45                 	db	69	;'E'
   471  00FD07  4C                 	db	76	;'L'
   472  00FD08  43                 	db	67	;'C'
   473  00FD09  4F                 	db	79	;'O'
   474  00FD0A  4D                 	db	77	;'M'
   475  00FD0B  45                 	db	69	;'E'
   476  00FD0C  20                 	db	32
   477  00FD0D  00                 	db	0
   478  00FD0E                     STR_37:
   479  00FD0E  53                 	db	83	;'S'
   480  00FD0F  41                 	db	65	;'A'
   481  00FD10  56                 	db	86	;'V'
   482  00FD11  45                 	db	69	;'E'
   483  00FD12  20                 	db	32
   484  00FD13  4C                 	db	76	;'L'
   485  00FD14  4F                 	db	79	;'O'
   486  00FD15  47                 	db	71	;'G'
   487  00FD16  00                 	db	0
   488  00FD17                     STR_29:
   489  00FD17  50                 	db	80	;'P'
   490  00FD18  52                 	db	82	;'R'
   491  00FD19  4F                 	db	79	;'O'
   492  00FD1A  47                 	db	71	;'G'
   493  00FD1B  52                 	db	82	;'R'
   494  00FD1C  45                 	db	69	;'E'
   495  00FD1D  53                 	db	83	;'S'
   496  00FD1E  53                 	db	83	;'S'
   497  00FD1F  00                 	db	0
   498  00FD20                     STR_10:
   499  00FD20  50                 	db	80	;'P'
   500  00FD21  4F                 	db	79	;'O'
   501  00FD22  4C                 	db	76	;'L'
   502  00FD23  45                 	db	69	;'E'
   503  00FD24  20                 	db	32
   504  00FD25  58                 	db	88	;'X'
   505  00FD26  2F                 	db	47
   506  00FD27  59                 	db	89	;'Y'
   507  00FD28  00                 	db	0
   508  00FD29                     STR_17:
   509  00FD29  25                 	db	37
   510  00FD2A  64                 	db	100	;'d'
   511  00FD2B  00                 	db	0
   512  00FD2C                     STR_1:
   513  00FD2C  25                 	db	37
   514  00FD2D  73                 	db	115	;'s'
   515  00FD2E  00                 	db	0
   516  0000                     
   517                           ; #config settings
   518  00FD2F  00                 	db	0	; dummy byte at the end
   519  0000                     
   520                           	psect	cinit
   521  0017A2                     __pcinit:
   522                           	opt callstack 0
   523  0017A2                     start_initialization:
   524                           	opt callstack 0
   525  0017A2                     __initialization:
   526                           	opt callstack 0
   527                           
   528                           ; Initialize objects allocated to BANK0 (7 bytes)
   529                           ; load TBLPTR registers with __pidataBANK0
   530  0017A2  0E88               	movlw	low __pidataBANK0
   531  0017A4  6EF6               	movwf	tblptrl,c
   532  0017A6  0E1A               	movlw	high __pidataBANK0
   533  0017A8  6EF7               	movwf	tblptrh,c
   534  0017AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   535  0017AC  6EF8               	movwf	tblptru,c
   536  0017AE  EE00  F0D7         	lfsr	0,__pdataBANK0
   537  0017B2  EE10 F007          	lfsr	1,7
   538  0017B6                     copy_data0:
   539  0017B6  0009               	tblrd		*+
   540  0017B8  CFF5 FFEE          	movff	tablat,postinc0
   541  0017BC  50E5               	movf	postdec1,w,c
   542  0017BE  50E1               	movf	fsr1l,w,c
   543  0017C0  E1FA               	bnz	copy_data0
   544                           
   545                           ; Clear objects allocated to BANK0 (46 bytes)
   546  0017C2  EE00  F080         	lfsr	0,__pbssBANK0
   547  0017C6  0E2E               	movlw	46
   548  0017C8                     clear_0:
   549  0017C8  6AEE               	clrf	postinc0,c
   550  0017CA  06E8               	decf	wreg,f,c
   551  0017CC  E1FD               	bnz	clear_0
   552                           
   553                           ; Clear objects allocated to COMRAM (1 bytes)
   554  0017CE  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   555  0017D0                     end_of_initialization:
   556                           	opt callstack 0
   557  0017D0                     __end_of__initialization:
   558                           	opt callstack 0
   559  0017D0  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   560  0017D2  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   561  0017D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   562  0017D6  6EF8               	movwf	tblptru,c
   563  0017D8  0100               	movlb	0
   564  0017DA  EF18  F002         	goto	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMRAM
   567  00007E                     __pbssCOMRAM:
   568                           	opt callstack 0
   569  00007E                     _keyPressed:
   570                           	opt callstack 0
   571  00007E                     	ds	1
   572                           
   573                           	psect	bssBANK0
   574  000080                     __pbssBANK0:
   575                           	opt callstack 0
   576  000080                     _nout:
   577                           	opt callstack 0
   578  000080                     	ds	2
   579  000082                     _width:
   580                           	opt callstack 0
   581  000082                     	ds	2
   582  000084                     _prec:
   583                           	opt callstack 0
   584  000084                     	ds	2
   585  000086                     _flags:
   586                           	opt callstack 0
   587  000086                     	ds	2
   588  000088                     _secondsMeasured:
   589                           	opt callstack 0
   590  000088                     	ds	2
   591  00008A                     _motorBDistance:
   592                           	opt callstack 0
   593  00008A                     	ds	2
   594  00008C                     _motorADistance:
   595                           	opt callstack 0
   596  00008C                     	ds	2
   597  00008E                     _dbuf:
   598                           	opt callstack 0
   599  00008E                     	ds	32
   600                           
   601                           	psect	dataBANK0
   602  0000D7                     __pdataBANK0:
   603                           	opt callstack 0
   604  0000D7                     stoa@F1139:
   605                           	opt callstack 0
   606  0000D7                     	ds	7
   607                           
   608                           	psect	cstackBANK0
   609  0000AE                     __pcstackBANK0:
   610                           	opt callstack 0
   611  0000AE                     ??_doDisplayLog:
   612                           
   613                           ; 1 bytes @ 0x0
   614  0000AE                     	ds	4
   615  0000B2                     doDisplayLog@keypress:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x4
   619  0000B2                     	ds	1
   620  0000B3                     doDisplayLog@currentDisplayState:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x5
   624  0000B3                     	ds	1
   625  0000B4                     doDisplayLog@keyValue:
   626                           	opt callstack 0
   627                           
   628                           ; 1 bytes @ 0x6
   629  0000B4                     	ds	15
   630  0000C3                     doOperation@secondsMeasuredOld:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0x15
   634  0000C3                     	ds	2
   635  0000C5                     ??_main:
   636                           
   637                           ; 1 bytes @ 0x17
   638  0000C5                     	ds	2
   639  0000C7                     main@time:
   640                           	opt callstack 0
   641                           
   642                           ; 7 bytes @ 0x19
   643  0000C7                     	ds	7
   644  0000CE                     main@tick:
   645                           	opt callstack 0
   646                           
   647                           ; 4 bytes @ 0x20
   648  0000CE                     	ds	4
   649  0000D2                     main@keypress:
   650                           	opt callstack 0
   651                           
   652                           ; 1 bytes @ 0x24
   653  0000D2                     	ds	1
   654  0000D3                     main@i:
   655                           	opt callstack 0
   656                           
   657                           ; 1 bytes @ 0x25
   658  0000D3                     	ds	1
   659  0000D4                     main@currentLogState:
   660                           	opt callstack 0
   661                           
   662                           ; 1 bytes @ 0x26
   663  0000D4                     	ds	1
   664  0000D5                     main@currentRobotState:
   665                           	opt callstack 0
   666                           
   667                           ; 1 bytes @ 0x27
   668  0000D5                     	ds	1
   669  0000D6                     main@keyValue:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x28
   673  0000D6                     	ds	1
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	opt callstack 0
   678  000001                     ??_I2C_Master_Wait:
   679  000001                     ?_strlen:
   680                           	opt callstack 0
   681  000001                     ?_isupper:
   682                           	opt callstack 0
   683  000001                     ?_isalpha:
   684                           	opt callstack 0
   685  000001                     ?_isdigit:
   686                           	opt callstack 0
   687  000001                     ?_isspace:
   688                           	opt callstack 0
   689  000001                     ?_islower:
   690                           	opt callstack 0
   691  000001                     ?___wmul:
   692                           	opt callstack 0
   693  000001                     ?___lldiv:
   694                           	opt callstack 0
   695  000001                     ?___llmod:
   696                           	opt callstack 0
   697  000001                     ?___aodiv:
   698                           	opt callstack 0
   699  000001                     ?___aomod:
   700                           	opt callstack 0
   701  000001                     pulse_e@interruptState:
   702                           	opt callstack 0
   703  000001                     ___wmul@multiplier:
   704                           	opt callstack 0
   705  000001                     isalpha@c:
   706                           	opt callstack 0
   707  000001                     isdigit@c:
   708                           	opt callstack 0
   709  000001                     isspace@c:
   710                           	opt callstack 0
   711  000001                     isupper@c:
   712                           	opt callstack 0
   713  000001                     strlen@s:
   714                           	opt callstack 0
   715  000001                     islower@c:
   716                           	opt callstack 0
   717  000001                     ___lldiv@dividend:
   718                           	opt callstack 0
   719  000001                     ___llmod@dividend:
   720                           	opt callstack 0
   721  000001                     ___aodiv@dividend:
   722                           	opt callstack 0
   723  000001                     ___aomod@dividend:
   724                           	opt callstack 0
   725                           
   726                           ; 8 bytes @ 0x0
   727  000001                     	ds	1
   728  000002                     send_nibble@data:
   729                           	opt callstack 0
   730  000002                     I2C_Master_Read@ackBit:
   731                           	opt callstack 0
   732  000002                     I2C_Master_Write@byteToWrite:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x1
   736  000002                     	ds	1
   737  000003                     ??_isupper:
   738  000003                     ??_isalpha:
   739  000003                     ??_isdigit:
   740  000003                     ??_isspace:
   741  000003                     ??_islower:
   742  000003                     send_byte@data:
   743                           	opt callstack 0
   744  000003                     I2C_Master_Read@receivedByte:
   745                           	opt callstack 0
   746  000003                     ___wmul@multiplicand:
   747                           	opt callstack 0
   748  000003                     strlen@a:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x2
   752  000003                     	ds	1
   753  000004                     lcdInst@data:
   754                           	opt callstack 0
   755  000004                     putch@data:
   756                           	opt callstack 0
   757                           
   758                           ; 1 bytes @ 0x3
   759  000004                     	ds	1
   760  000005                     ??_initLCD:
   761  000005                     ___wmul@product:
   762                           	opt callstack 0
   763  000005                     fputc@c:
   764                           	opt callstack 0
   765  000005                     ___lldiv@divisor:
   766                           	opt callstack 0
   767  000005                     ___llmod@divisor:
   768                           	opt callstack 0
   769                           
   770                           ; 4 bytes @ 0x4
   771  000005                     	ds	2
   772  000007                     ?_toupper:
   773                           	opt callstack 0
   774  000007                     _isspace$1097:
   775                           	opt callstack 0
   776  000007                     fputc@fp:
   777                           	opt callstack 0
   778  000007                     toupper@c:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x6
   782  000007                     	ds	1
   783  000008                     ?_atoi:
   784                           	opt callstack 0
   785  000008                     atoi@s:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x7
   789  000008                     	ds	1
   790  000009                     ??_fputc:
   791  000009                     ??_toupper:
   792  000009                     ___llmod@counter:
   793                           	opt callstack 0
   794  000009                     ___lldiv@quotient:
   795                           	opt callstack 0
   796  000009                     ___aodiv@divisor:
   797                           	opt callstack 0
   798  000009                     ___aomod@divisor:
   799                           	opt callstack 0
   800                           
   801                           ; 8 bytes @ 0x8
   802  000009                     	ds	1
   803  00000A                     ??_atoi:
   804                           
   805                           ; 1 bytes @ 0x9
   806  00000A                     	ds	3
   807  00000D                     ___lldiv@counter:
   808                           	opt callstack 0
   809  00000D                     _toupper$1161:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0xC
   813  00000D                     	ds	1
   814  00000E                     ?_stoa:
   815                           	opt callstack 0
   816  00000E                     stoa@fp:
   817                           	opt callstack 0
   818  00000E                     atoi@neg:
   819                           	opt callstack 0
   820  00000E                     fputs@s:
   821                           	opt callstack 0
   822  00000E                     I2C_Master_Init@clockFreq:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0xD
   826  00000E                     	ds	2
   827  000010                     stoa@s:
   828                           	opt callstack 0
   829  000010                     _atoi$1070:
   830                           	opt callstack 0
   831  000010                     fputs@fp:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0xF
   835  000010                     	ds	1
   836  000011                     ___aodiv@counter:
   837                           	opt callstack 0
   838  000011                     ___aomod@counter:
   839                           	opt callstack 0
   840                           
   841                           ; 1 bytes @ 0x10
   842  000011                     	ds	1
   843  000012                     ??_I2C_Master_Init:
   844  000012                     ??_stoa:
   845  000012                     ___aodiv@sign:
   846                           	opt callstack 0
   847  000012                     ___aomod@sign:
   848                           	opt callstack 0
   849  000012                     fputs@c:
   850                           	opt callstack 0
   851  000012                     _atoi$1072:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x11
   855  000012                     	ds	1
   856  000013                     ?_abs:
   857                           	opt callstack 0
   858  000013                     abs@a:
   859                           	opt callstack 0
   860  000013                     fputs@i:
   861                           	opt callstack 0
   862  000013                     stoa@nuls:
   863                           	opt callstack 0
   864  000013                     ___aodiv@quotient:
   865                           	opt callstack 0
   866                           
   867                           ; 8 bytes @ 0x12
   868  000013                     	ds	1
   869  000014                     _atoi$1071:
   870                           	opt callstack 0
   871                           
   872                           ; 1 bytes @ 0x13
   873  000014                     	ds	1
   874  000015                     ??_abs:
   875  000015                     ?_pad:
   876                           	opt callstack 0
   877  000015                     pad@fp:
   878                           	opt callstack 0
   879  000015                     atoi@n:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x14
   883  000015                     	ds	1
   884  000016                     
   885                           ; 1 bytes @ 0x15
   886  000016                     	ds	1
   887  000017                     pad@buf:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x16
   891  000017                     	ds	2
   892  000019                     pad@p:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x18
   896  000019                     	ds	1
   897  00001A                     stoa@i:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0x19
   901  00001A                     	ds	1
   902  00001B                     ??_pad:
   903                           
   904                           ; 1 bytes @ 0x1A
   905  00001B                     	ds	1
   906  00001C                     pad@i:
   907                           	opt callstack 0
   908  00001C                     stoa@w:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x1B
   912  00001C                     	ds	2
   913  00001E                     pad@w:
   914                           	opt callstack 0
   915  00001E                     stoa@cp:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919  00001E                     	ds	2
   920  000020                     ?_dtoa:
   921                           	opt callstack 0
   922  000020                     ?_xtoa:
   923                           	opt callstack 0
   924  000020                     dtoa@fp:
   925                           	opt callstack 0
   926  000020                     stoa@p:
   927                           	opt callstack 0
   928  000020                     xtoa@fp:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x1F
   932  000020                     	ds	2
   933  000022                     stoa@l:
   934                           	opt callstack 0
   935  000022                     dtoa@d:
   936                           	opt callstack 0
   937  000022                     xtoa@d:
   938                           	opt callstack 0
   939                           
   940                           ; 8 bytes @ 0x21
   941  000022                     	ds	8
   942  00002A                     ??_dtoa:
   943  00002A                     xtoa@x:
   944                           	opt callstack 0
   945                           
   946                           ; 1 bytes @ 0x29
   947  00002A                     	ds	1
   948  00002B                     ??_xtoa:
   949                           
   950                           ; 1 bytes @ 0x2A
   951  00002B                     	ds	7
   952  000032                     _dtoa$574:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x31
   956  000032                     	ds	1
   957  000033                     _xtoa$596:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x32
   961  000033                     	ds	1
   962  000034                     dtoa@p:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x33
   966  000034                     	ds	1
   967  000035                     _xtoa$597:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x34
   971  000035                     	ds	1
   972  000036                     dtoa@w:
   973                           	opt callstack 0
   974                           
   975                           ; 2 bytes @ 0x35
   976  000036                     	ds	1
   977  000037                     xtoa@p:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0x36
   981  000037                     	ds	1
   982  000038                     dtoa@s:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0x37
   986  000038                     	ds	1
   987  000039                     xtoa@w:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x38
   991  000039                     	ds	1
   992  00003A                     dtoa@n:
   993                           	opt callstack 0
   994                           
   995                           ; 8 bytes @ 0x39
   996  00003A                     	ds	1
   997  00003B                     xtoa@n:
   998                           	opt callstack 0
   999                           
  1000                           ; 8 bytes @ 0x3A
  1001  00003B                     	ds	7
  1002  000042                     dtoa@i:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x41
  1006  000042                     	ds	1
  1007  000043                     xtoa@i:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x42
  1011  000043                     	ds	2
  1012  000045                     xtoa@c:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x44
  1016  000045                     	ds	2
  1017  000047                     ?_vfpfcnvrt:
  1018                           	opt callstack 0
  1019  000047                     vfpfcnvrt@fp:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x46
  1023  000047                     	ds	2
  1024  000049                     vfpfcnvrt@fmt:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x48
  1028  000049                     	ds	2
  1029  00004B                     vfpfcnvrt@ap:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x4A
  1033  00004B                     	ds	2
  1034  00004D                     ??_vfpfcnvrt:
  1035                           
  1036                           ; 1 bytes @ 0x4C
  1037  00004D                     	ds	4
  1038  000051                     vfpfcnvrt@ll:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 8 bytes @ 0x50
  1042  000051                     	ds	8
  1043  000059                     vfpfcnvrt@llu:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 8 bytes @ 0x58
  1047  000059                     	ds	8
  1048  000061                     vfpfcnvrt@cp:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x60
  1052  000061                     	ds	2
  1053  000063                     vfpfcnvrt@done:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x62
  1057  000063                     	ds	2
  1058  000065                     _vfpfcnvrt$611:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x64
  1062  000065                     	ds	2
  1063  000067                     vfpfcnvrt@c:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x66
  1067  000067                     	ds	1
  1068  000068                     ?_vfprintf:
  1069                           	opt callstack 0
  1070  000068                     vfprintf@fp:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x67
  1074  000068                     	ds	2
  1075  00006A                     vfprintf@fmt:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x69
  1079  00006A                     	ds	2
  1080  00006C                     vfprintf@ap:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x6B
  1084  00006C                     	ds	2
  1085  00006E                     vfprintf@cfmt:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x6D
  1089  00006E                     	ds	2
  1090  000070                     ?_printf:
  1091                           	opt callstack 0
  1092  000070                     printf@fmt:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x6F
  1096  000070                     	ds	8
  1097  000078                     
  1098                           ; 1 bytes @ 0x77
  1099  000078                     	ds	2
  1100  00007A                     printf@ap:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x79
  1104  00007A                     	ds	2
  1105  00007C                     ??_doOperation:
  1106  00007C                     doDisplayLog@currentLogState:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x7B
  1110  00007C                     	ds	2
  1111                           
  1112 ;;
  1113 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1114 ;;
  1115 ;; *************** function _main *****************
  1116 ;; Defined at:
  1117 ;;		line 373 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  i               1   37[BANK0 ] unsigned char 
  1122 ;;  keyValue        1   40[BANK0 ] unsigned char 
  1123 ;;  keypress        1   36[BANK0 ] unsigned char 
  1124 ;;  time            7   25[BANK0 ] unsigned char [7]
  1125 ;;  tick            4   32[BANK0 ] unsigned long 
  1126 ;;  currentRobot    1   39[BANK0 ] enum E2826
  1127 ;;  currentLogSt    1   38[BANK0 ] enum E2833
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;Total ram usage:       18 bytes
  1142 ;; Hardware stack levels required when called:   13
  1143 ;; This function calls:
  1144 ;;		_I2C_Master_Read
  1145 ;;		_I2C_Master_Start
  1146 ;;		_I2C_Master_Stop
  1147 ;;		_I2C_Master_Write
  1148 ;;		___llmod
  1149 ;;		_doDisplayLog
  1150 ;;		_doOperation
  1151 ;;		_lcdInst
  1152 ;;		_printf
  1153 ;;		_replaceOldLog
  1154 ;;		_robotInit
  1155 ;; This function is called by:
  1156 ;;		Startup code after reset
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text0
  1161  000430                     __ptext0:
  1162                           	opt callstack 0
  1163  000430                     _main:
  1164                           	opt callstack 18
  1165                           
  1166                           ;main.c: 374:     robotInit();
  1167                           
  1168                           ;incstack = 0
  1169  000430  EC25  F00C         	call	_robotInit	;wreg free
  1170                           
  1171                           ;main.c: 376:     unsigned char time[7];;main.c: 380:     enum robotStates currentRobotS
      +                          tate = standby;
  1172  000434  0E00               	movlw	0
  1173  000436  0100               	movlb	0	; () banked
  1174  000438  6FD5               	movwf	main@currentRobotState& (0+255),b
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 382:     enum logStates currentLogState = one;
  1178  00043A  0E01               	movlw	1
  1179  00043C  6FD4               	movwf	main@currentLogState& (0+255),b
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 384:     unsigned long tick = 0;
  1183  00043E  0E00               	movlw	0
  1184  000440  6FCE               	movwf	main@tick& (0+255),b
  1185  000442  0E00               	movlw	0
  1186  000444  6FCF               	movwf	(main@tick+1)& (0+255),b
  1187  000446  0E00               	movlw	0
  1188  000448  6FD0               	movwf	(main@tick+2)& (0+255),b
  1189  00044A  0E00               	movlw	0
  1190  00044C  6FD1               	movwf	(main@tick+3)& (0+255),b
  1191  00044E                     l3109:
  1192                           
  1193                           ;main.c: 387:             if (tick%10==0){
  1194  00044E  C0CE  F001         	movff	main@tick,___llmod@dividend
  1195  000452  C0CF  F002         	movff	main@tick+1,___llmod@dividend+1
  1196  000456  C0D0  F003         	movff	main@tick+2,___llmod@dividend+2
  1197  00045A  C0D1  F004         	movff	main@tick+3,___llmod@dividend+3
  1198  00045E  0E0A               	movlw	10
  1199  000460  6E05               	movwf	___llmod@divisor,c
  1200  000462  0E00               	movlw	0
  1201  000464  6E06               	movwf	___llmod@divisor+1,c
  1202  000466  0E00               	movlw	0
  1203  000468  6E07               	movwf	___llmod@divisor+2,c
  1204  00046A  0E00               	movlw	0
  1205  00046C  6E08               	movwf	___llmod@divisor+3,c
  1206  00046E  ECDF  F00A         	call	___llmod	;wreg free
  1207  000472  5001               	movf	?___llmod,w,c
  1208  000474  1002               	iorwf	?___llmod+1,w,c
  1209  000476  1003               	iorwf	?___llmod+2,w,c
  1210  000478  1004               	iorwf	?___llmod+3,w,c
  1211  00047A  A4D8               	btfss	status,2,c
  1212  00047C  D142               	goto	l3215
  1213                           
  1214                           ;main.c: 389:                 I2C_Master_Start();
  1215  00047E  EC40  F00D         	call	_I2C_Master_Start	;wreg free
  1216                           
  1217                           ;main.c: 390:                 I2C_Master_Write(0b11010000);
  1218  000482  0E00               	movlw	0
  1219  000484  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1220  000486  0ED0               	movlw	208
  1221  000488  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1222  00048A  EC37  F00D         	call	_I2C_Master_Write	;wreg free
  1223                           
  1224                           ;main.c: 391:                 I2C_Master_Write(0x00);
  1225  00048E  0E00               	movlw	0
  1226  000490  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1227  000492  0E00               	movlw	0
  1228  000494  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1229  000496  EC37  F00D         	call	_I2C_Master_Write	;wreg free
  1230                           
  1231                           ;main.c: 392:                 I2C_Master_Stop();
  1232  00049A  EC3C  F00D         	call	_I2C_Master_Stop	;wreg free
  1233                           
  1234                           ;main.c: 395:                 I2C_Master_Start();
  1235  00049E  EC40  F00D         	call	_I2C_Master_Start	;wreg free
  1236                           
  1237                           ;main.c: 396:                 I2C_Master_Write(0b11010001);
  1238  0004A2  0E00               	movlw	0
  1239  0004A4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1240  0004A6  0ED1               	movlw	209
  1241  0004A8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1242  0004AA  EC37  F00D         	call	_I2C_Master_Write	;wreg free
  1243                           
  1244                           ;main.c: 397:                 for(unsigned char i = 0; i < 6; i++){
  1245  0004AE  0E00               	movlw	0
  1246  0004B0  0100               	movlb	0	; () banked
  1247  0004B2  6FD3               	movwf	main@i& (0+255),b
  1248  0004B4                     l3119:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 398:                     time[i] = I2C_Master_Read(0);
  1252  0004B4  0EC7               	movlw	low main@time
  1253  0004B6  25D3               	addwf	main@i& (0+255),w,b
  1254  0004B8  6ED9               	movwf	fsr2l,c
  1255  0004BA  6ADA               	clrf	fsr2h,c
  1256  0004BC  0E00               	movlw	high main@time
  1257  0004BE  22DA               	addwfc	fsr2h,f,c
  1258  0004C0  0E00               	movlw	0
  1259  0004C2  ECDA  F00C         	call	_I2C_Master_Read
  1260  0004C6  6EDF               	movwf	indf2,c
  1261                           
  1262                           ;main.c: 399:                 }
  1263  0004C8  0100               	movlb	0	; () banked
  1264  0004CA  2BD3               	incf	main@i& (0+255),f,b
  1265                           
  1266                           ; BSR set to: 0
  1267  0004CC  0E05               	movlw	5
  1268  0004CE  65D3               	cpfsgt	main@i& (0+255),b
  1269  0004D0  D7F1               	goto	l3119
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;main.c: 400:                 time[6] = I2C_Master_Read(1);
  1273  0004D2  0E01               	movlw	1
  1274  0004D4  ECDA  F00C         	call	_I2C_Master_Read
  1275  0004D8  0100               	movlb	0	; () banked
  1276  0004DA  6FCD               	movwf	(main@time+6)& (0+255),b
  1277                           
  1278                           ;main.c: 401:                 I2C_Master_Stop();
  1279  0004DC  EC3C  F00D         	call	_I2C_Master_Stop	;wreg free
  1280  0004E0  D110               	goto	l3215
  1281  0004E2                     l3127:
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;main.c: 414:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1285  0004E2  0E80               	movlw	128
  1286  0004E4  EC31  F00D         	call	_lcdInst
  1287  0004E8  0E07               	movlw	7
  1288  0004EA  0100               	movlb	0	; () banked
  1289  0004EC  6FC5               	movwf	??_main& (0+255),b
  1290  0004EE  0E7D               	movlw	125
  1291  0004F0                     u2737:
  1292  0004F0  2EE8               	decfsz	wreg,f,c
  1293  0004F2  D7FE               	bra	u2737
  1294  0004F4  2FC5               	decfsz	??_main& (0+255),f,b
  1295  0004F6  D7FC               	bra	u2737
  1296                           
  1297                           ;main.c: 416:                 printf("%s", "WELCOME ");
  1298  0004F8  0E2C               	movlw	low STR_1
  1299  0004FA  6E70               	movwf	printf@fmt,c
  1300  0004FC  0EFD               	movlw	high STR_1
  1301  0004FE  6E71               	movwf	printf@fmt+1,c
  1302  000500  0E05               	movlw	low STR_19
  1303  000502  6E72               	movwf	?_printf+2,c
  1304  000504  0EFD               	movlw	high STR_19
  1305  000506  6E73               	movwf	?_printf+3,c
  1306  000508  ECB4  F00C         	call	_printf	;wreg free
  1307                           
  1308                           ;main.c: 417:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1309  00050C  0E67               	movlw	low STR_20
  1310  00050E  6E70               	movwf	printf@fmt,c
  1311  000510  0EFC               	movlw	high STR_20
  1312  000512  6E71               	movwf	printf@fmt+1,c
  1313  000514  C0CD  F072         	movff	main@time+6,?_printf+2
  1314  000518  6A73               	clrf	?_printf+3,c
  1315  00051A  C0CC  F074         	movff	main@time+5,?_printf+4
  1316  00051E  6A75               	clrf	?_printf+5,c
  1317  000520  C0CB  F076         	movff	main@time+4,?_printf+6
  1318  000524  6A77               	clrf	?_printf+7,c
  1319  000526  ECB4  F00C         	call	_printf	;wreg free
  1320  00052A  0EC0               	movlw	192
  1321  00052C  EC31  F00D         	call	_lcdInst
  1322                           
  1323                           ;main.c: 419:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1324  000530  0E76               	movlw	low STR_21
  1325  000532  6E70               	movwf	printf@fmt,c
  1326  000534  0EFC               	movlw	high STR_21
  1327  000536  6E71               	movwf	printf@fmt+1,c
  1328  000538  C0C9  F072         	movff	main@time+2,?_printf+2
  1329  00053C  6A73               	clrf	?_printf+3,c
  1330  00053E  C0C8  F074         	movff	main@time+1,?_printf+4
  1331  000542  6A75               	clrf	?_printf+5,c
  1332  000544  C0C7  F076         	movff	main@time,?_printf+6
  1333  000548  6A77               	clrf	?_printf+7,c
  1334  00054A  ECB4  F00C         	call	_printf	;wreg free
  1335  00054E  0E90               	movlw	144
  1336  000550  EC31  F00D         	call	_lcdInst
  1337                           
  1338                           ;main.c: 421:                 printf("%s","(1) START");
  1339  000554  0E2C               	movlw	low STR_1
  1340  000556  6E70               	movwf	printf@fmt,c
  1341  000558  0EFD               	movlw	high STR_1
  1342  00055A  6E71               	movwf	printf@fmt+1,c
  1343  00055C  0EFB               	movlw	low STR_23
  1344  00055E  6E72               	movwf	?_printf+2,c
  1345  000560  0EFC               	movlw	high STR_23
  1346  000562  6E73               	movwf	?_printf+3,c
  1347  000564  ECB4  F00C         	call	_printf	;wreg free
  1348  000568  0ED0               	movlw	208
  1349  00056A  EC31  F00D         	call	_lcdInst
  1350                           
  1351                           ;main.c: 423:                 printf("%s","(2) VIEW LOGS");
  1352  00056E  0E2C               	movlw	low STR_1
  1353  000570  6E70               	movwf	printf@fmt,c
  1354  000572  0EFD               	movlw	high STR_1
  1355  000574  6E71               	movwf	printf@fmt+1,c
  1356  000576  0EA1               	movlw	low STR_25
  1357  000578  6E72               	movwf	?_printf+2,c
  1358  00057A  0EFC               	movlw	high STR_25
  1359  00057C  6E73               	movwf	?_printf+3,c
  1360  00057E  ECB4  F00C         	call	_printf	;wreg free
  1361                           
  1362                           ;main.c: 424:                 break;
  1363  000582  D0D7               	goto	l3217
  1364  000584                     l3147:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;main.c: 427:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1368  000584  0E80               	movlw	128
  1369  000586  EC31  F00D         	call	_lcdInst
  1370  00058A  0E07               	movlw	7
  1371  00058C  0100               	movlb	0	; () banked
  1372  00058E  6FC5               	movwf	??_main& (0+255),b
  1373  000590  0E7D               	movlw	125
  1374  000592                     u2747:
  1375  000592  2EE8               	decfsz	wreg,f,c
  1376  000594  D7FE               	bra	u2747
  1377  000596  2FC5               	decfsz	??_main& (0+255),f,b
  1378  000598  D7FC               	bra	u2747
  1379                           
  1380                           ;main.c: 428:                 printf("%s", "OPERATION IN");
  1381  00059A  0E2C               	movlw	low STR_1
  1382  00059C  6E70               	movwf	printf@fmt,c
  1383  00059E  0EFD               	movlw	high STR_1
  1384  0005A0  6E71               	movwf	printf@fmt+1,c
  1385  0005A2  0ED7               	movlw	low STR_27
  1386  0005A4  6E72               	movwf	?_printf+2,c
  1387  0005A6  0EFC               	movlw	high STR_27
  1388  0005A8  6E73               	movwf	?_printf+3,c
  1389  0005AA  ECB4  F00C         	call	_printf	;wreg free
  1390  0005AE  0EC0               	movlw	192
  1391  0005B0  EC31  F00D         	call	_lcdInst
  1392                           
  1393                           ;main.c: 430:                 printf("%s","PROGRESS");
  1394  0005B4  0E2C               	movlw	low STR_1
  1395  0005B6  6E70               	movwf	printf@fmt,c
  1396  0005B8  0EFD               	movlw	high STR_1
  1397  0005BA  6E71               	movwf	printf@fmt+1,c
  1398  0005BC  0E17               	movlw	low STR_29
  1399  0005BE  6E72               	movwf	?_printf+2,c
  1400  0005C0  0EFD               	movlw	high STR_29
  1401  0005C2  6E73               	movwf	?_printf+3,c
  1402  0005C4  ECB4  F00C         	call	_printf	;wreg free
  1403                           
  1404                           ;main.c: 431:                 doOperation();
  1405  0005C8  EC36  F00A         	call	_doOperation	;wreg free
  1406                           
  1407                           ;main.c: 432:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1408  0005CC  0E01               	movlw	1
  1409  0005CE  EC31  F00D         	call	_lcdInst
  1410  0005D2  0E11               	movlw	17
  1411  0005D4  0100               	movlb	0	; () banked
  1412  0005D6  6FC5               	movwf	??_main& (0+255),b
  1413  0005D8  0E3A               	movlw	58
  1414  0005DA                     u2757:
  1415  0005DA  2EE8               	decfsz	wreg,f,c
  1416  0005DC  D7FE               	bra	u2757
  1417  0005DE  2FC5               	decfsz	??_main& (0+255),f,b
  1418  0005E0  D7FC               	bra	u2757
  1419  0005E2  F000               	nop	
  1420                           
  1421                           ;main.c: 433:                 currentRobotState = operationComplete;
  1422  0005E4  0E02               	movlw	2
  1423  0005E6  D08A               	goto	L1
  1424  0005E8                     l3165:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 437:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1428  0005E8  0E80               	movlw	128
  1429  0005EA  EC31  F00D         	call	_lcdInst
  1430  0005EE  0E07               	movlw	7
  1431  0005F0  0100               	movlb	0	; () banked
  1432  0005F2  6FC5               	movwf	??_main& (0+255),b
  1433  0005F4  0E7D               	movlw	125
  1434  0005F6                     u2767:
  1435  0005F6  2EE8               	decfsz	wreg,f,c
  1436  0005F8  D7FE               	bra	u2767
  1437  0005FA  2FC5               	decfsz	??_main& (0+255),f,b
  1438  0005FC  D7FC               	bra	u2767
  1439                           
  1440                           ;main.c: 438:                 printf("%s", "OP. COMPLETE");
  1441  0005FE  0E2C               	movlw	low STR_1
  1442  000600  6E70               	movwf	printf@fmt,c
  1443  000602  0EFD               	movlw	high STR_1
  1444  000604  6E71               	movwf	printf@fmt+1,c
  1445  000606  0EBD               	movlw	low STR_31
  1446  000608  6E72               	movwf	?_printf+2,c
  1447  00060A  0EFC               	movlw	high STR_31
  1448  00060C  6E73               	movwf	?_printf+3,c
  1449  00060E  ECB4  F00C         	call	_printf	;wreg free
  1450  000612  0EC0               	movlw	192
  1451  000614  EC31  F00D         	call	_lcdInst
  1452                           
  1453                           ;main.c: 440:                 printf("%s","(1) VIEW LOG");
  1454  000618  0E2C               	movlw	low STR_1
  1455  00061A  6E70               	movwf	printf@fmt,c
  1456  00061C  0EFD               	movlw	high STR_1
  1457  00061E  6E71               	movwf	printf@fmt+1,c
  1458  000620  0ECA               	movlw	low STR_33
  1459  000622  6E72               	movwf	?_printf+2,c
  1460  000624  0EFC               	movlw	high STR_33
  1461  000626  6E73               	movwf	?_printf+3,c
  1462  000628  ECB4  F00C         	call	_printf	;wreg free
  1463  00062C  0E90               	movlw	144
  1464  00062E  EC31  F00D         	call	_lcdInst
  1465                           
  1466                           ;main.c: 442:                 printf("%s","(2) QUIT DO NOT");
  1467  000632  0E2C               	movlw	low STR_1
  1468  000634  6E70               	movwf	printf@fmt,c
  1469  000636  0EFD               	movlw	high STR_1
  1470  000638  6E71               	movwf	printf@fmt+1,c
  1471  00063A  0E48               	movlw	low STR_35
  1472  00063C  6E72               	movwf	?_printf+2,c
  1473  00063E  0EFC               	movlw	high STR_35
  1474  000640  6E73               	movwf	?_printf+3,c
  1475  000642  ECB4  F00C         	call	_printf	;wreg free
  1476  000646  0ED0               	movlw	208
  1477  000648  EC31  F00D         	call	_lcdInst
  1478                           
  1479                           ;main.c: 444:                 printf("%s","SAVE LOG");
  1480  00064C  0E2C               	movlw	low STR_1
  1481  00064E  6E70               	movwf	printf@fmt,c
  1482  000650  0EFD               	movlw	high STR_1
  1483  000652  6E71               	movwf	printf@fmt+1,c
  1484  000654  0E0E               	movlw	low STR_37
  1485  000656  6E72               	movwf	?_printf+2,c
  1486  000658  0EFD               	movlw	high STR_37
  1487  00065A  6E73               	movwf	?_printf+3,c
  1488  00065C  ECB4  F00C         	call	_printf	;wreg free
  1489                           
  1490                           ;main.c: 445:                 currentLogState = justRan;
  1491  000660  0E00               	movlw	0
  1492  000662  0100               	movlb	0	; () banked
  1493  000664  6FD4               	movwf	main@currentLogState& (0+255),b
  1494                           
  1495                           ;main.c: 446:                 break;
  1496  000666  D065               	goto	l3217
  1497  000668                     l3185:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 449:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  1501  000668  0E80               	movlw	128
  1502  00066A  EC31  F00D         	call	_lcdInst
  1503  00066E  0E07               	movlw	7
  1504  000670  0100               	movlb	0	; () banked
  1505  000672  6FC5               	movwf	??_main& (0+255),b
  1506  000674  0E7D               	movlw	125
  1507  000676                     u2777:
  1508  000676  2EE8               	decfsz	wreg,f,c
  1509  000678  D7FE               	bra	u2777
  1510  00067A  2FC5               	decfsz	??_main& (0+255),f,b
  1511  00067C  D7FC               	bra	u2777
  1512                           
  1513                           ;main.c: 450:                 printf("%s", "SELECT LOG");
  1514  00067E  0E2C               	movlw	low STR_1
  1515  000680  6E70               	movwf	printf@fmt,c
  1516  000682  0EFD               	movlw	high STR_1
  1517  000684  6E71               	movwf	printf@fmt+1,c
  1518  000686  0EF0               	movlw	low STR_39
  1519  000688  6E72               	movwf	?_printf+2,c
  1520  00068A  0EFC               	movlw	high STR_39
  1521  00068C  6E73               	movwf	?_printf+3,c
  1522  00068E  ECB4  F00C         	call	_printf	;wreg free
  1523  000692  0EC0               	movlw	192
  1524  000694  EC31  F00D         	call	_lcdInst
  1525                           
  1526                           ;main.c: 452:                 printf("%s","(1 IS OLDEST)");
  1527  000698  0E2C               	movlw	low STR_1
  1528  00069A  6E70               	movwf	printf@fmt,c
  1529  00069C  0EFD               	movlw	high STR_1
  1530  00069E  6E71               	movwf	printf@fmt+1,c
  1531  0006A0  0E85               	movlw	low STR_41
  1532  0006A2  6E72               	movwf	?_printf+2,c
  1533  0006A4  0EFC               	movlw	high STR_41
  1534  0006A6  6E73               	movwf	?_printf+3,c
  1535  0006A8  ECB4  F00C         	call	_printf	;wreg free
  1536  0006AC  0E90               	movlw	144
  1537  0006AE  EC31  F00D         	call	_lcdInst
  1538                           
  1539                           ;main.c: 454:                 printf("%s","(1) (2) (3) (4)");
  1540  0006B2  0E2C               	movlw	low STR_1
  1541  0006B4  6E70               	movwf	printf@fmt,c
  1542  0006B6  0EFD               	movlw	high STR_1
  1543  0006B8  6E71               	movwf	printf@fmt+1,c
  1544  0006BA  0E18               	movlw	low STR_43
  1545  0006BC  6E72               	movwf	?_printf+2,c
  1546  0006BE  0EFC               	movlw	high STR_43
  1547  0006C0  6E73               	movwf	?_printf+3,c
  1548  0006C2  ECB4  F00C         	call	_printf	;wreg free
  1549                           
  1550                           ;main.c: 455:                 break;
  1551  0006C6  D035               	goto	l3217
  1552  0006C8                     l3199:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;main.c: 457:                 if (currentLogState == justRan){
  1556  0006C8  51D4               	movf	main@currentLogState& (0+255),w,b
  1557  0006CA  A4D8               	btfss	status,2,c
  1558  0006CC  D005               	goto	l3205
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 458:                     replaceOldLog();
  1562  0006CE  EC48  F00D         	call	_replaceOldLog	;wreg free
  1563                           
  1564                           ;main.c: 459:                     currentLogState = four;
  1565  0006D2  0E04               	movlw	4
  1566  0006D4  0100               	movlb	0	; () banked
  1567  0006D6  6FD4               	movwf	main@currentLogState& (0+255),b
  1568  0006D8                     l3205:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 461:                 doDisplayLog(currentLogState);
  1572  0006D8  C0D4  F07C         	movff	main@currentLogState,doDisplayLog@currentLogState
  1573  0006DC  6A7D               	clrf	doDisplayLog@currentLogState+1,c
  1574  0006DE  EC4D  F006         	call	_doDisplayLog	;wreg free
  1575                           
  1576                           ;main.c: 462:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  1577  0006E2  0E01               	movlw	1
  1578  0006E4  EC31  F00D         	call	_lcdInst
  1579  0006E8  0E11               	movlw	17
  1580  0006EA  0100               	movlb	0	; () banked
  1581  0006EC  6FC5               	movwf	??_main& (0+255),b
  1582  0006EE  0E3A               	movlw	58
  1583  0006F0                     u2787:
  1584  0006F0  2EE8               	decfsz	wreg,f,c
  1585  0006F2  D7FE               	bra	u2787
  1586  0006F4  2FC5               	decfsz	??_main& (0+255),f,b
  1587  0006F6  D7FC               	bra	u2787
  1588  0006F8  F000               	nop	
  1589                           
  1590                           ;main.c: 463:                 currentRobotState = standby;
  1591  0006FA  0E00               	movlw	0
  1592  0006FC                     L1:
  1593  0006FC  0100               	movlb	0	; () banked
  1594  0006FE  6FD5               	movwf	main@currentRobotState& (0+255),b
  1595                           
  1596                           ;main.c: 464:                 break;
  1597  000700  D018               	goto	l3217
  1598  000702                     l3215:
  1599  000702  0100               	movlb	0	; () banked
  1600  000704  51D5               	movf	main@currentRobotState& (0+255),w,b
  1601  000706  6FC5               	movwf	??_main& (0+255),b
  1602  000708  6BC6               	clrf	(??_main+1)& (0+255),b
  1603                           
  1604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 1, Range of values is 0 to 0
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte            4     3 (average)
  1610                           ;	Chosen strategy is simple_byte
  1611  00070A  51C6               	movf	(??_main+1)& (0+255),w,b
  1612  00070C  0A00               	xorlw	0	; case 0
  1613  00070E  A4D8               	btfss	status,2,c
  1614  000710  D010               	goto	l3217
  1615                           
  1616                           ; BSR set to: 0
  1617                           ; Switch size 1, requested type "simple"
  1618                           ; Number of cases is 5, Range of values is 0 to 4
  1619                           ; switch strategies available:
  1620                           ; Name         Instructions Cycles
  1621                           ; simple_byte           16     9 (average)
  1622                           ;	Chosen strategy is simple_byte
  1623  000712  51C5               	movf	??_main& (0+255),w,b
  1624  000714  0A00               	xorlw	0	; case 0
  1625  000716  B4D8               	btfsc	status,2,c
  1626  000718  D6E4               	goto	l3127
  1627  00071A  0A01               	xorlw	1	; case 1
  1628  00071C  B4D8               	btfsc	status,2,c
  1629  00071E  D732               	goto	l3147
  1630  000720  0A03               	xorlw	3	; case 2
  1631  000722  B4D8               	btfsc	status,2,c
  1632  000724  D761               	goto	l3165
  1633  000726  0A01               	xorlw	1	; case 3
  1634  000728  B4D8               	btfsc	status,2,c
  1635  00072A  D79E               	goto	l3185
  1636  00072C  0A07               	xorlw	7	; case 4
  1637  00072E  B4D8               	btfsc	status,2,c
  1638  000730  D7CB               	goto	l3199
  1639  000732                     l3217:
  1640                           
  1641                           ;main.c: 468:         if(keyPressed){
  1642  000732  507E               	movf	_keyPressed,w,c	;volatile
  1643  000734  B4D8               	btfsc	status,2,c
  1644  000736  D065               	goto	l140
  1645                           
  1646                           ;main.c: 471:             keyPressed = 0;
  1647  000738  0E00               	movlw	0
  1648  00073A  6E7E               	movwf	_keyPressed,c	;volatile
  1649                           
  1650                           ;main.c: 474:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1651  00073C  3881               	swapf	3969,w,c	;volatile
  1652  00073E  0B0F               	andlw	15
  1653  000740  0B0F               	andlw	15
  1654  000742  0100               	movlb	0	; () banked
  1655  000744  6FD2               	movwf	main@keypress& (0+255),b
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 475:             char keyValue = keys[keypress];
  1659  000746  0EE9               	movlw	low _keys
  1660  000748  25D2               	addwf	main@keypress& (0+255),w,b
  1661  00074A  6EF6               	movwf	tblptrl,c
  1662  00074C  6AF7               	clrf	tblptrh,c
  1663  00074E  0EFB               	movlw	high _keys
  1664  000750  22F7               	addwfc	tblptrh,f,c
  1665  000752                     	if	0	;There are less than 3 active tblptr bytes
  1666  000752                     	endif
  1667  000752  0008               	tblrd		*
  1668  000754  CFF5 F0D6          	movff	tablat,main@keyValue
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 476:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1672  000758  0E01               	movlw	1
  1673  00075A  EC31  F00D         	call	_lcdInst
  1674  00075E  0E11               	movlw	17
  1675  000760  0100               	movlb	0	; () banked
  1676  000762  6FC5               	movwf	??_main& (0+255),b
  1677  000764  0E3A               	movlw	58
  1678  000766                     u2797:
  1679  000766  2EE8               	decfsz	wreg,f,c
  1680  000768  D7FE               	bra	u2797
  1681  00076A  2FC5               	decfsz	??_main& (0+255),f,b
  1682  00076C  D7FC               	bra	u2797
  1683  00076E  F000               	nop	
  1684                           
  1685                           ;main.c: 477:             switch (currentRobotState){
  1686  000770  D032               	goto	l3265
  1687  000772                     l3229:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 479:                     if (keyValue == '1'){
  1691  000772  0E31               	movlw	49
  1692  000774  19D6               	xorwf	main@keyValue& (0+255),w,b
  1693  000776  A4D8               	btfss	status,2,c
  1694  000778  D002               	goto	l3233
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;main.c: 480:                         currentRobotState = operation;
  1698  00077A  0E01               	movlw	1
  1699  00077C  D011               	goto	L4
  1700  00077E                     l3233:
  1701                           
  1702                           ; BSR set to: 0
  1703  00077E  0E32               	movlw	50
  1704  000780  19D6               	xorwf	main@keyValue& (0+255),w,b
  1705  000782  A4D8               	btfss	status,2,c
  1706  000784  D03E               	goto	l140
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;main.c: 482:                         currentRobotState = selectLog;
  1710  000786  0E03               	movlw	3
  1711  000788  D00B               	goto	L4
  1712  00078A                     l3237:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 488:                     if (keyValue == '1'){
  1716  00078A  0E31               	movlw	49
  1717  00078C  19D6               	xorwf	main@keyValue& (0+255),w,b
  1718  00078E  A4D8               	btfss	status,2,c
  1719  000790  D002               	goto	l3241
  1720  000792                     u2630:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;main.c: 489:                         currentRobotState = displayLog;
  1724  000792  0E04               	movlw	4
  1725  000794  D005               	goto	L4
  1726  000796                     l3241:
  1727                           
  1728                           ; BSR set to: 0
  1729  000796  0E32               	movlw	50
  1730  000798  19D6               	xorwf	main@keyValue& (0+255),w,b
  1731  00079A  A4D8               	btfss	status,2,c
  1732  00079C  D032               	goto	l140
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;main.c: 491:                         currentRobotState = standby;
  1736  00079E  0E00               	movlw	0
  1737  0007A0                     L4:
  1738  0007A0  6FD5               	movwf	main@currentRobotState& (0+255),b
  1739  0007A2  D02F               	goto	l140
  1740  0007A4                     l3245:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 495:                     if (keyValue == '1'){
  1744  0007A4  0E31               	movlw	49
  1745  0007A6  19D6               	xorwf	main@keyValue& (0+255),w,b
  1746  0007A8  A4D8               	btfss	status,2,c
  1747  0007AA  D002               	goto	l3249
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;main.c: 496:                         currentLogState = one;
  1751  0007AC  0E01               	movlw	1
  1752  0007AE  D011               	goto	L7
  1753  0007B0                     l3249:
  1754                           
  1755                           ; BSR set to: 0
  1756  0007B0  0E32               	movlw	50
  1757  0007B2  19D6               	xorwf	main@keyValue& (0+255),w,b
  1758  0007B4  A4D8               	btfss	status,2,c
  1759  0007B6  D002               	goto	l3253
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;main.c: 498:                         currentLogState = two;
  1763  0007B8  0E02               	movlw	2
  1764  0007BA  D00B               	goto	L7
  1765  0007BC                     l3253:
  1766                           
  1767                           ; BSR set to: 0
  1768  0007BC  0E33               	movlw	51
  1769  0007BE  19D6               	xorwf	main@keyValue& (0+255),w,b
  1770  0007C0  A4D8               	btfss	status,2,c
  1771  0007C2  D002               	goto	l3257
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 500:                         currentLogState = three;
  1775  0007C4  0E03               	movlw	3
  1776  0007C6  D005               	goto	L7
  1777  0007C8                     l3257:
  1778                           
  1779                           ; BSR set to: 0
  1780  0007C8  0E34               	movlw	52
  1781  0007CA  19D6               	xorwf	main@keyValue& (0+255),w,b
  1782  0007CC  A4D8               	btfss	status,2,c
  1783  0007CE  D019               	goto	l140
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 502:                         currentLogState = '4';
  1787  0007D0  0E34               	movlw	52
  1788  0007D2                     L7:
  1789  0007D2  6FD4               	movwf	main@currentLogState& (0+255),b
  1790                           
  1791                           ;main.c: 503:                     } else {
  1792  0007D4  D7DE               	goto	u2630
  1793  0007D6                     l3265:
  1794  0007D6  0100               	movlb	0	; () banked
  1795  0007D8  51D5               	movf	main@currentRobotState& (0+255),w,b
  1796  0007DA  6FC5               	movwf	??_main& (0+255),b
  1797  0007DC  6BC6               	clrf	(??_main+1)& (0+255),b
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806  0007DE  51C6               	movf	(??_main+1)& (0+255),w,b
  1807  0007E0  0A00               	xorlw	0	; case 0
  1808  0007E2  A4D8               	btfss	status,2,c
  1809  0007E4  D00E               	goto	l140
  1810                           
  1811                           ; BSR set to: 0
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 5, Range of values is 0 to 4
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           16     9 (average)
  1817                           ;	Chosen strategy is simple_byte
  1818  0007E6  51C5               	movf	??_main& (0+255),w,b
  1819  0007E8  0A00               	xorlw	0	; case 0
  1820  0007EA  B4D8               	btfsc	status,2,c
  1821  0007EC  D7C2               	goto	l3229
  1822  0007EE  0A01               	xorlw	1	; case 1
  1823  0007F0  B4D8               	btfsc	status,2,c
  1824  0007F2  D007               	goto	l140
  1825  0007F4  0A03               	xorlw	3	; case 2
  1826  0007F6  B4D8               	btfsc	status,2,c
  1827  0007F8  D7C8               	goto	l3237
  1828  0007FA  0A01               	xorlw	1	; case 3
  1829  0007FC  B4D8               	btfsc	status,2,c
  1830  0007FE  D7D2               	goto	l3245
  1831  000800  0A07               	xorlw	7	; case 4
  1832  000802                     l140:
  1833                           
  1834                           ;main.c: 523:         tick++;
  1835                           
  1836                           ; BSR set to: 0
  1837  000802  0E01               	movlw	1
  1838  000804  0100               	movlb	0	; () banked
  1839  000806  27CE               	addwf	main@tick& (0+255),f,b
  1840  000808  0E00               	movlw	0
  1841  00080A  23CF               	addwfc	(main@tick+1)& (0+255),f,b
  1842  00080C  23D0               	addwfc	(main@tick+2)& (0+255),f,b
  1843  00080E  23D1               	addwfc	(main@tick+3)& (0+255),f,b
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;main.c: 524:         _delay((unsigned long)((1)*(10000000/4000.0)));
  1847  000810  0E04               	movlw	4
  1848  000812  0100               	movlb	0	; () banked
  1849  000814  6FC5               	movwf	??_main& (0+255),b
  1850  000816  0E3D               	movlw	61
  1851  000818                     u2807:
  1852  000818  2EE8               	decfsz	wreg,f,c
  1853  00081A  D7FE               	bra	u2807
  1854  00081C  2FC5               	decfsz	??_main& (0+255),f,b
  1855  00081E  D7FC               	bra	u2807
  1856  000820  D000               	nop2	
  1857  000822  D615               	goto	l3109
  1858  000824                     __end_of_main:
  1859                           	opt callstack 0
  1860                           
  1861 ;; *************** function _robotInit *****************
  1862 ;; Defined at:
  1863 ;;		line 337 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    6
  1884 ;; This function calls:
  1885 ;;		_I2C_Master_Init
  1886 ;;		_initLCD
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text1
  1893  00184A                     __ptext1:
  1894                           	opt callstack 0
  1895  00184A                     _robotInit:
  1896                           	opt callstack 24
  1897                           
  1898                           ;main.c: 341:     LATD = 0x00;
  1899                           
  1900                           ;incstack = 0
  1901  00184A  0E00               	movlw	0
  1902  00184C  6E8C               	movwf	3980,c	;volatile
  1903                           
  1904                           ;main.c: 342:     TRISD = 0x00;
  1905  00184E  0E00               	movlw	0
  1906  001850  6E95               	movwf	3989,c	;volatile
  1907                           
  1908                           ;main.c: 345:     LATB = 0x00;
  1909  001852  0E00               	movlw	0
  1910  001854  6E8A               	movwf	3978,c	;volatile
  1911                           
  1912                           ;main.c: 346:     TRISB = 0b11110010;
  1913  001856  0EF2               	movlw	242
  1914  001858  6E93               	movwf	3987,c	;volatile
  1915                           
  1916                           ;main.c: 349:     I2C_Master_Init(100000);
  1917  00185A  0EA0               	movlw	160
  1918  00185C  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1919  00185E  0E86               	movlw	134
  1920  001860  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1921  001862  0E01               	movlw	1
  1922  001864  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1923  001866  0E00               	movlw	0
  1924  001868  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1925  00186A  EC12  F00B         	call	_I2C_Master_Init	;wreg free
  1926                           
  1927                           ;main.c: 356:     ADCON1 = 0b00001111;
  1928  00186E  0E0F               	movlw	15
  1929  001870  6EC1               	movwf	4033,c	;volatile
  1930                           
  1931                           ;main.c: 359:     INT1IE = 1;
  1932  001872  86F0               	bsf	4080,3,c	;volatile
  1933                           
  1934                           ;main.c: 362:     initLCD();
  1935  001874  ECAA  F00A         	call	_initLCD	;wreg free
  1936                           
  1937                           ;main.c: 365:     (INTCONbits.GIE = 1);
  1938  001878  8EF2               	bsf	4082,7,c	;volatile
  1939  00187A  0012               	return		;funcret
  1940  00187C                     __end_of_robotInit:
  1941                           	opt callstack 0
  1942                           
  1943 ;; *************** function _initLCD *****************
  1944 ;; Defined at:
  1945 ;;		line 69 in file "lcd.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        1 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    5
  1966 ;; This function calls:
  1967 ;;		_lcdInst
  1968 ;;		_send_byte
  1969 ;;		_send_nibble
  1970 ;; This function is called by:
  1971 ;;		_robotInit
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text2
  1976  001554                     __ptext2:
  1977                           	opt callstack 0
  1978  001554                     _initLCD:
  1979                           	opt callstack 24
  1980                           
  1981                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  1982                           
  1983                           ;incstack = 0
  1984  001554  0E31               	movlw	49
  1985  001556  6E05               	movwf	??_initLCD& (0+255),c
  1986  001558  0EB2               	movlw	178
  1987  00155A                     u2817:
  1988  00155A  2EE8               	decfsz	wreg,f,c
  1989  00155C  D7FE               	bra	u2817
  1990  00155E  2E05               	decfsz	??_initLCD& (0+255),f,c
  1991  001560  D7FC               	bra	u2817
  1992  001562  D000               	nop2	
  1993                           
  1994                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  1995  001564  948C               	bcf	3980,2,c	;volatile
  1996                           
  1997                           ;lcd.c: 74:     send_nibble(0b0011);
  1998  001566  0E03               	movlw	3
  1999  001568  EC0E  F00D         	call	_send_nibble
  2000                           
  2001                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2002  00156C  0E11               	movlw	17
  2003  00156E  6E05               	movwf	??_initLCD& (0+255),c
  2004  001570  0E3A               	movlw	58
  2005  001572                     u2827:
  2006  001572  2EE8               	decfsz	wreg,f,c
  2007  001574  D7FE               	bra	u2827
  2008  001576  2E05               	decfsz	??_initLCD& (0+255),f,c
  2009  001578  D7FC               	bra	u2827
  2010  00157A  D000               	nop2	
  2011                           
  2012                           ;lcd.c: 76:     send_nibble(0b0011);
  2013  00157C  0E03               	movlw	3
  2014  00157E  EC0E  F00D         	call	_send_nibble
  2015                           
  2016                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  2017  001582  0E7D               	movlw	125
  2018  001584                     u2837:
  2019  001584  2EE8               	decfsz	wreg,f,c
  2020  001586  D7FE               	bra	u2837
  2021                           
  2022                           ;lcd.c: 78:     send_byte(0b00110010);
  2023  001588  0E32               	movlw	50
  2024  00158A  EC19  F00D         	call	_send_byte
  2025                           
  2026                           ;lcd.c: 80:     send_byte(0b00101000);
  2027  00158E  0E28               	movlw	40
  2028  001590  EC19  F00D         	call	_send_byte
  2029                           
  2030                           ;lcd.c: 81:     send_byte(0b00001000);
  2031  001594  0E08               	movlw	8
  2032  001596  EC19  F00D         	call	_send_byte
  2033                           
  2034                           ;lcd.c: 82:     send_byte(0b00000001);
  2035  00159A  0E01               	movlw	1
  2036  00159C  EC19  F00D         	call	_send_byte
  2037                           
  2038                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  2039  0015A0  0E11               	movlw	17
  2040  0015A2  6E05               	movwf	??_initLCD& (0+255),c
  2041  0015A4  0E3A               	movlw	58
  2042  0015A6                     u2847:
  2043  0015A6  2EE8               	decfsz	wreg,f,c
  2044  0015A8  D7FE               	bra	u2847
  2045  0015AA  2E05               	decfsz	??_initLCD& (0+255),f,c
  2046  0015AC  D7FC               	bra	u2847
  2047  0015AE  D000               	nop2	
  2048                           
  2049                           ;lcd.c: 84:     send_byte(0b00000110);
  2050  0015B0  0E06               	movlw	6
  2051  0015B2  EC19  F00D         	call	_send_byte
  2052                           
  2053                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2054  0015B6  0E0C               	movlw	12
  2055  0015B8  EC31  F00D         	call	_lcdInst
  2056  0015BC  0012               	return		;funcret
  2057  0015BE                     __end_of_initLCD:
  2058                           	opt callstack 0
  2059                           
  2060 ;; *************** function _I2C_Master_Init *****************
  2061 ;; Defined at:
  2062 ;;		line 32 in file "I2C.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        8 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    2
  2083 ;; This function calls:
  2084 ;;		___lldiv
  2085 ;; This function is called by:
  2086 ;;		_robotInit
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text3
  2091  001624                     __ptext3:
  2092                           	opt callstack 0
  2093  001624                     _I2C_Master_Init:
  2094                           	opt callstack 27
  2095                           
  2096                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  2097                           
  2098                           ;incstack = 0
  2099  001624  9AC6               	bcf	4038,5,c	;volatile
  2100                           
  2101                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2102  001626  8694               	bsf	3988,3,c	;volatile
  2103                           
  2104                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2105  001628  8894               	bsf	3988,4,c	;volatile
  2106                           
  2107                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  2108  00162A  0E80               	movlw	128
  2109  00162C  6E01               	movwf	___lldiv@dividend,c
  2110  00162E  0E96               	movlw	150
  2111  001630  6E02               	movwf	___lldiv@dividend+1,c
  2112  001632  0E98               	movlw	152
  2113  001634  6E03               	movwf	___lldiv@dividend+2,c
  2114  001636  0E00               	movlw	0
  2115  001638  6E04               	movwf	___lldiv@dividend+3,c
  2116  00163A  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  2117  00163E  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  2118  001642  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  2119  001646  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  2120  00164A  0E02               	movlw	2
  2121  00164C                     u2455:
  2122  00164C  90D8               	bcf	status,0,c
  2123  00164E  3612               	rlcf	??_I2C_Master_Init,f,c
  2124  001650  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2125  001652  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2126  001654  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2127  001656  2EE8               	decfsz	wreg,f,c
  2128  001658  D7F9               	goto	u2455
  2129  00165A  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2130  00165E  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2131  001662  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2132  001666  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2133  00166A  ECF5  F009         	call	___lldiv	;wreg free
  2134  00166E  0401               	decf	?___lldiv,w,c
  2135  001670  6EC8               	movwf	4040,c	;volatile
  2136                           
  2137                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  2138  001672  0E80               	movlw	128
  2139  001674  6EC7               	movwf	4039,c	;volatile
  2140                           
  2141                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  2142  001676  0E28               	movlw	40
  2143  001678  6EC6               	movwf	4038,c	;volatile
  2144                           
  2145                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  2146  00167A  0E00               	movlw	0
  2147  00167C  6EC5               	movwf	4037,c	;volatile
  2148  00167E  0012               	return		;funcret
  2149  001680                     __end_of_I2C_Master_Init:
  2150                           	opt callstack 0
  2151                           
  2152 ;; *************** function ___lldiv *****************
  2153 ;; Defined at:
  2154 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  dividend        4    0[COMRAM] unsigned long 
  2157 ;;  divisor         4    4[COMRAM] unsigned long 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  quotient        4    8[COMRAM] unsigned long 
  2160 ;;  counter         1   12[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  4    0[COMRAM] unsigned long 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;Total ram usage:       13 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_I2C_Master_Init
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text4
  2185  0013EA                     __ptext4:
  2186                           	opt callstack 0
  2187  0013EA                     ___lldiv:
  2188                           	opt callstack 27
  2189                           
  2190                           ;incstack = 0
  2191  0013EA  0E00               	movlw	0
  2192  0013EC  6E09               	movwf	___lldiv@quotient,c
  2193  0013EE  0E00               	movlw	0
  2194  0013F0  6E0A               	movwf	___lldiv@quotient+1,c
  2195  0013F2  0E00               	movlw	0
  2196  0013F4  6E0B               	movwf	___lldiv@quotient+2,c
  2197  0013F6  0E00               	movlw	0
  2198  0013F8  6E0C               	movwf	___lldiv@quotient+3,c
  2199  0013FA  5005               	movf	___lldiv@divisor,w,c
  2200  0013FC  1006               	iorwf	___lldiv@divisor+1,w,c
  2201  0013FE  1007               	iorwf	___lldiv@divisor+2,w,c
  2202  001400  1008               	iorwf	___lldiv@divisor+3,w,c
  2203  001402  B4D8               	btfsc	status,2,c
  2204  001404  D02A               	goto	l445
  2205  001406  0E01               	movlw	1
  2206  001408  6E0D               	movwf	___lldiv@counter,c
  2207  00140A  D006               	goto	l2833
  2208  00140C                     l2831:
  2209  00140C  90D8               	bcf	status,0,c
  2210  00140E  3605               	rlcf	___lldiv@divisor,f,c
  2211  001410  3606               	rlcf	___lldiv@divisor+1,f,c
  2212  001412  3607               	rlcf	___lldiv@divisor+2,f,c
  2213  001414  3608               	rlcf	___lldiv@divisor+3,f,c
  2214  001416  2A0D               	incf	___lldiv@counter,f,c
  2215  001418                     l2833:
  2216  001418  AE08               	btfss	___lldiv@divisor+3,7,c
  2217  00141A  D7F8               	goto	l2831
  2218  00141C                     u2430:
  2219  00141C  90D8               	bcf	status,0,c
  2220  00141E  3609               	rlcf	___lldiv@quotient,f,c
  2221  001420  360A               	rlcf	___lldiv@quotient+1,f,c
  2222  001422  360B               	rlcf	___lldiv@quotient+2,f,c
  2223  001424  360C               	rlcf	___lldiv@quotient+3,f,c
  2224  001426  5005               	movf	___lldiv@divisor,w,c
  2225  001428  5C01               	subwf	___lldiv@dividend,w,c
  2226  00142A  5006               	movf	___lldiv@divisor+1,w,c
  2227  00142C  5802               	subwfb	___lldiv@dividend+1,w,c
  2228  00142E  5007               	movf	___lldiv@divisor+2,w,c
  2229  001430  5803               	subwfb	___lldiv@dividend+2,w,c
  2230  001432  5008               	movf	___lldiv@divisor+3,w,c
  2231  001434  5804               	subwfb	___lldiv@dividend+3,w,c
  2232  001436  A0D8               	btfss	status,0,c
  2233  001438  D009               	goto	l2843
  2234  00143A  5005               	movf	___lldiv@divisor,w,c
  2235  00143C  5E01               	subwf	___lldiv@dividend,f,c
  2236  00143E  5006               	movf	___lldiv@divisor+1,w,c
  2237  001440  5A02               	subwfb	___lldiv@dividend+1,f,c
  2238  001442  5007               	movf	___lldiv@divisor+2,w,c
  2239  001444  5A03               	subwfb	___lldiv@dividend+2,f,c
  2240  001446  5008               	movf	___lldiv@divisor+3,w,c
  2241  001448  5A04               	subwfb	___lldiv@dividend+3,f,c
  2242  00144A  8009               	bsf	___lldiv@quotient,0,c
  2243  00144C                     l2843:
  2244  00144C  90D8               	bcf	status,0,c
  2245  00144E  3208               	rrcf	___lldiv@divisor+3,f,c
  2246  001450  3207               	rrcf	___lldiv@divisor+2,f,c
  2247  001452  3206               	rrcf	___lldiv@divisor+1,f,c
  2248  001454  3205               	rrcf	___lldiv@divisor,f,c
  2249  001456  2E0D               	decfsz	___lldiv@counter,f,c
  2250  001458  D7E1               	goto	u2430
  2251  00145A                     l445:
  2252  00145A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2253  00145E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2254  001462  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2255  001466  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2256  00146A  0012               	return		;funcret
  2257  00146C                     __end_of___lldiv:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function _replaceOldLog *****************
  2261 ;; Defined at:
  2262 ;;		line 308 in file "main.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		None
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text5
  2291  001A90                     __ptext5:
  2292                           	opt callstack 0
  2293  001A90                     _replaceOldLog:
  2294                           	opt callstack 29
  2295                           
  2296                           ;main.c: 309:     return;
  2297                           
  2298                           ;incstack = 0
  2299  001A90  0012               	return		;funcret
  2300  001A92                     __end_of_replaceOldLog:
  2301                           	opt callstack 0
  2302                           
  2303 ;; *************** function _doOperation *****************
  2304 ;; Defined at:
  2305 ;;		line 130 in file "main.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  mem             3    0        unsigned char [3]
  2310 ;;  secondsMeasu    2   21[BANK0 ] int 
  2311 ;;  tiresToDrop     2    0        int 
  2312 ;;  rightRangeFi    2    0        int 
  2313 ;;  leftRangeFin    2    0        int 
  2314 ;;  currentAngle    2    0        int 
  2315 ;;  error           2    0        int 
  2316 ;;  errorScaleFa    2    0        int 
  2317 ;;  motorBSpeed     2    0        int 
  2318 ;;  motorASpeed     2    0        int 
  2319 ;;  goalSpeed       2    0        int 
  2320 ;;  send            1    0        _Bool 
  2321 ;;  counter         1    0        unsigned char 
  2322 ;;  currentOpera    1    0        enum E2803
  2323 ;;  data            1    0        unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;Total ram usage:       24 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:   12
  2340 ;; This function calls:
  2341 ;;		_I2C_Master_Start
  2342 ;;		_I2C_Master_Stop
  2343 ;;		_I2C_Master_Write
  2344 ;;		_initSecondTimer
  2345 ;;		_lcdInst
  2346 ;;		_printf
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text6
  2353  00146C                     __ptext6:
  2354                           	opt callstack 0
  2355  00146C                     _doOperation:
  2356                           	opt callstack 18
  2357                           
  2358                           ;main.c: 136:     I2C_Master_Start();
  2359                           
  2360                           ;incstack = 0
  2361  00146C  EC40  F00D         	call	_I2C_Master_Start	;wreg free
  2362                           
  2363                           ;main.c: 137:     I2C_Master_Write(0b00010000);
  2364  001470  0E00               	movlw	0
  2365  001472  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  2366  001474  0E10               	movlw	16
  2367  001476  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  2368  001478  EC37  F00D         	call	_I2C_Master_Write	;wreg free
  2369                           
  2370                           ;main.c: 138:     I2C_Master_Stop();
  2371  00147C  EC3C  F00D         	call	_I2C_Master_Stop	;wreg free
  2372                           
  2373                           ;main.c: 141:     initSecondTimer();
  2374  001480  ECEC  F00C         	call	_initSecondTimer	;wreg free
  2375                           
  2376                           ;main.c: 253:     int secondsMeasuredOld = 0;
  2377  001484  0E00               	movlw	0
  2378  001486  0100               	movlb	0	; () banked
  2379  001488  6FC4               	movwf	(doOperation@secondsMeasuredOld+1)& (0+255),b
  2380  00148A  0E00               	movlw	0
  2381  00148C  6FC3               	movwf	doOperation@secondsMeasuredOld& (0+255),b
  2382                           
  2383                           ;main.c: 254:     while(secondsMeasured < 10){
  2384  00148E  D022               	goto	l3039
  2385  001490                     l3029:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 255:         if (secondsMeasured > secondsMeasuredOld){
  2389  001490  5188               	movf	_secondsMeasured& (0+255),w,b	;volatile
  2390  001492  5DC3               	subwf	doOperation@secondsMeasuredOld& (0+255),w,b
  2391  001494  51C4               	movf	(doOperation@secondsMeasuredOld+1)& (0+255),w,b
  2392  001496  0A80               	xorlw	128
  2393  001498  6E7C               	movwf	??_doOperation& (0+255),c
  2394  00149A  5189               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2395  00149C  0A80               	xorlw	128
  2396  00149E  587C               	subwfb	??_doOperation& (0+255),w,c
  2397  0014A0  B0D8               	btfsc	status,0,c
  2398  0014A2  D018               	goto	l3039
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;main.c: 256:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2402  0014A4  0E01               	movlw	1
  2403  0014A6  EC31  F00D         	call	_lcdInst
  2404  0014AA  0E11               	movlw	17
  2405  0014AC  6E7C               	movwf	??_doOperation& (0+255),c
  2406  0014AE  0E3A               	movlw	58
  2407  0014B0                     u2857:
  2408  0014B0  2EE8               	decfsz	wreg,f,c
  2409  0014B2  D7FE               	bra	u2857
  2410  0014B4  2E7C               	decfsz	??_doOperation& (0+255),f,c
  2411  0014B6  D7FC               	bra	u2857
  2412  0014B8  D000               	nop2	
  2413                           
  2414                           ;main.c: 257:             printf("%d", secondsMeasured);
  2415  0014BA  0E29               	movlw	low STR_17
  2416  0014BC  6E70               	movwf	printf@fmt,c
  2417  0014BE  0EFD               	movlw	high STR_17
  2418  0014C0  6E71               	movwf	printf@fmt+1,c
  2419  0014C2  C088  F072         	movff	_secondsMeasured,?_printf+2	;volatile
  2420  0014C6  C089  F073         	movff	_secondsMeasured+1,?_printf+3	;volatile
  2421  0014CA  ECB4  F00C         	call	_printf	;wreg free
  2422                           
  2423                           ;main.c: 258:             secondsMeasuredOld++;
  2424  0014CE  0100               	movlb	0	; () banked
  2425  0014D0  4BC3               	infsnz	doOperation@secondsMeasuredOld& (0+255),f,b
  2426  0014D2  2BC4               	incf	(doOperation@secondsMeasuredOld+1)& (0+255),f,b
  2427  0014D4                     l3039:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 254:     while(secondsMeasured < 10){
  2431  0014D4  BF89               	btfsc	(_secondsMeasured+1)& (0+255),7,b	;volatile
  2432  0014D6  D7DC               	goto	l3029
  2433  0014D8  5189               	movf	(_secondsMeasured+1)& (0+255),w,b	;volatile
  2434  0014DA  E105               	bnz	u2510
  2435  0014DC  0E0A               	movlw	10
  2436  0014DE  5D88               	subwf	_secondsMeasured& (0+255),w,b	;volatile
  2437  0014E0  B0D8               	btfsc	status,0,c
  2438  0014E2  0012               	return	
  2439  0014E4  D7D5               	goto	l3029
  2440  0014E6                     u2510:
  2441                           
  2442                           ; BSR set to: 0
  2443  0014E6  0012               	return		;funcret
  2444  0014E8                     __end_of_doOperation:
  2445                           	opt callstack 0
  2446                           
  2447 ;; *************** function _initSecondTimer *****************
  2448 ;; Defined at:
  2449 ;;		line 103 in file "main.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_doOperation
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text7
  2478  0019D8                     __ptext7:
  2479                           	opt callstack 0
  2480  0019D8                     _initSecondTimer:
  2481                           	opt callstack 28
  2482                           
  2483                           ;main.c: 105:     secondsMeasured = 0;
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;incstack = 0
  2487  0019D8  0E00               	movlw	0
  2488  0019DA  0100               	movlb	0	; () banked
  2489  0019DC  6F89               	movwf	(_secondsMeasured+1)& (0+255),b	;volatile
  2490  0019DE  0E00               	movlw	0
  2491  0019E0  6F88               	movwf	_secondsMeasured& (0+255),b	;volatile
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;main.c: 107:     T08BIT = 0;
  2495  0019E2  9CD5               	bcf	4053,6,c	;volatile
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;main.c: 108:     T0PS2 = 1;
  2499  0019E4  84D5               	bsf	4053,2,c	;volatile
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;main.c: 109:     T0PS1 = 1;
  2503  0019E6  82D5               	bsf	4053,1,c	;volatile
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;main.c: 110:     T0PS0 = 1;
  2507  0019E8  80D5               	bsf	4053,0,c	;volatile
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;main.c: 111:     PSA=0;
  2511  0019EA  96D5               	bcf	4053,3,c	;volatile
  2512                           
  2513                           ;main.c: 115:     TMR0H = 0xF0;
  2514  0019EC  0EF0               	movlw	240
  2515  0019EE  6ED7               	movwf	4055,c	;volatile
  2516                           
  2517                           ;main.c: 116:     TMR0L = 0xBE;
  2518  0019F0  0EBE               	movlw	190
  2519  0019F2  6ED6               	movwf	4054,c	;volatile
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 117:     TMR0IE = 1;
  2523  0019F4  8AF2               	bsf	4082,5,c	;volatile
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 118:     TMR0ON = 1;
  2527  0019F6  8ED5               	bsf	4053,7,c	;volatile
  2528                           
  2529                           ; BSR set to: 0
  2530  0019F8  0012               	return		;funcret
  2531  0019FA                     __end_of_initSecondTimer:
  2532                           	opt callstack 0
  2533                           
  2534 ;; *************** function _I2C_Master_Write *****************
  2535 ;; Defined at:
  2536 ;;		line 70 in file "I2C.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;Total ram usage:        2 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		_I2C_Master_Wait
  2559 ;; This function is called by:
  2560 ;;		_doOperation
  2561 ;;		_main
  2562 ;;		_rtc_set_time
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text8
  2567  001A6E                     __ptext8:
  2568                           	opt callstack 0
  2569  001A6E                     _I2C_Master_Write:
  2570                           	opt callstack 27
  2571                           
  2572                           ;I2C.c: 71:     I2C_Master_Wait();
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;incstack = 0
  2576  001A6E  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  2577                           
  2578                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  2579  001A72  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2580  001A76  0012               	return		;funcret
  2581  001A78                     __end_of_I2C_Master_Write:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _I2C_Master_Stop *****************
  2585 ;; Defined at:
  2586 ;;		line 65 in file "I2C.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    2
  2607 ;; This function calls:
  2608 ;;		_I2C_Master_Wait
  2609 ;; This function is called by:
  2610 ;;		_doOperation
  2611 ;;		_main
  2612 ;;		_rtc_set_time
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text9
  2617  001A78                     __ptext9:
  2618                           	opt callstack 0
  2619  001A78                     _I2C_Master_Stop:
  2620                           	opt callstack 27
  2621                           
  2622                           ;I2C.c: 66:     I2C_Master_Wait();
  2623                           
  2624                           ;incstack = 0
  2625  001A78  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  2626                           
  2627                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  2628  001A7C  84C5               	bsf	4037,2,c	;volatile
  2629  001A7E  0012               	return		;funcret
  2630  001A80                     __end_of_I2C_Master_Stop:
  2631                           	opt callstack 0
  2632                           
  2633 ;; *************** function _I2C_Master_Start *****************
  2634 ;; Defined at:
  2635 ;;		line 55 in file "I2C.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		_I2C_Master_Wait
  2658 ;; This function is called by:
  2659 ;;		_doOperation
  2660 ;;		_main
  2661 ;;		_rtc_set_time
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text10
  2666  001A80                     __ptext10:
  2667                           	opt callstack 0
  2668  001A80                     _I2C_Master_Start:
  2669                           	opt callstack 27
  2670                           
  2671                           ;I2C.c: 56:     I2C_Master_Wait();
  2672                           
  2673                           ;incstack = 0
  2674  001A80  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  2675                           
  2676                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  2677  001A84  80C5               	bsf	4037,0,c	;volatile
  2678  001A86  0012               	return		;funcret
  2679  001A88                     __end_of_I2C_Master_Start:
  2680                           	opt callstack 0
  2681                           
  2682 ;; *************** function _doDisplayLog *****************
  2683 ;; Defined at:
  2684 ;;		line 35 in file "main.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  currentLogSt    2  123[COMRAM] int 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  keyValue        1    6[BANK0 ] unsigned char 
  2689 ;;  keypress        1    4[BANK0 ] unsigned char 
  2690 ;;  currentPole     2    0        int 
  2691 ;;  currentDispl    1    5[BANK0 ] enum E2788
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        9 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:   12
  2708 ;; This function calls:
  2709 ;;		_lcdInst
  2710 ;;		_printf
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text11
  2717  000C9A                     __ptext11:
  2718                           	opt callstack 0
  2719  000C9A                     _doDisplayLog:
  2720                           	opt callstack 18
  2721                           
  2722                           ;main.c: 36:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2723                           
  2724                           ;incstack = 0
  2725  000C9A  0E80               	movlw	128
  2726  000C9C  EC31  F00D         	call	_lcdInst
  2727  000CA0  0E07               	movlw	7
  2728  000CA2  0100               	movlb	0	; () banked
  2729  000CA4  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2730  000CA6  0E7D               	movlw	125
  2731  000CA8                     u2867:
  2732  000CA8  2EE8               	decfsz	wreg,f,c
  2733  000CAA  D7FE               	bra	u2867
  2734  000CAC  2FAE               	decfsz	??_doDisplayLog& (0+255),f,b
  2735  000CAE  D7FC               	bra	u2867
  2736                           
  2737                           ;main.c: 43:     enum displayStates currentDisplayState = opTime;
  2738  000CB0  0E00               	movlw	0
  2739  000CB2  0100               	movlb	0	; () banked
  2740  000CB4  6FB3               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  2741  000CB6  D07A               	goto	l2959
  2742  000CB8                     l2921:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 48:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  2746  000CB8  0E80               	movlw	128
  2747  000CBA  EC31  F00D         	call	_lcdInst
  2748  000CBE  0E07               	movlw	7
  2749  000CC0  0100               	movlb	0	; () banked
  2750  000CC2  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2751  000CC4  0E7D               	movlw	125
  2752  000CC6                     u2877:
  2753  000CC6  2EE8               	decfsz	wreg,f,c
  2754  000CC8  D7FE               	bra	u2877
  2755  000CCA  2FAE               	decfsz	??_doDisplayLog& (0+255),f,b
  2756  000CCC  D7FC               	bra	u2877
  2757                           
  2758                           ;main.c: 49:                 printf("%s", "OP. TIME Xs");
  2759  000CCE  0E2C               	movlw	low STR_1
  2760  000CD0  6E70               	movwf	printf@fmt,c
  2761  000CD2  0EFD               	movlw	high STR_1
  2762  000CD4  6E71               	movwf	printf@fmt+1,c
  2763  000CD6  0EE4               	movlw	low STR_2
  2764  000CD8  6E72               	movwf	?_printf+2,c
  2765  000CDA  0EFC               	movlw	high STR_2
  2766  000CDC  6E73               	movwf	?_printf+3,c
  2767  000CDE  ECB4  F00C         	call	_printf	;wreg free
  2768  000CE2  0EC0               	movlw	192
  2769  000CE4  EC31  F00D         	call	_lcdInst
  2770                           
  2771                           ;main.c: 51:                 printf("%s","X TIR. SUPPLIED");
  2772  000CE8  0E2C               	movlw	low STR_1
  2773  000CEA  6E70               	movwf	printf@fmt,c
  2774  000CEC  0EFD               	movlw	high STR_1
  2775  000CEE  6E71               	movwf	printf@fmt+1,c
  2776  000CF0  0E28               	movlw	low STR_4
  2777  000CF2  6E72               	movwf	?_printf+2,c
  2778  000CF4  0EFC               	movlw	high STR_4
  2779  000CF6  6E73               	movwf	?_printf+3,c
  2780  000CF8  ECB4  F00C         	call	_printf	;wreg free
  2781  000CFC  0E90               	movlw	144
  2782  000CFE  EC31  F00D         	call	_lcdInst
  2783                           
  2784                           ;main.c: 53:                 printf("%s","(1) POLE INFO");
  2785  000D02  0E2C               	movlw	low STR_1
  2786  000D04  6E70               	movwf	printf@fmt,c
  2787  000D06  0EFD               	movlw	high STR_1
  2788  000D08  6E71               	movwf	printf@fmt+1,c
  2789  000D0A  0E93               	movlw	low STR_6
  2790  000D0C  6E72               	movwf	?_printf+2,c
  2791  000D0E  0EFC               	movlw	high STR_6
  2792  000D10  6E73               	movwf	?_printf+3,c
  2793  000D12  ECB4  F00C         	call	_printf	;wreg free
  2794  000D16  0ED0               	movlw	208
  2795  000D18  EC31  F00D         	call	_lcdInst
  2796                           
  2797                           ;main.c: 55:                 printf("%s","(2) SAVE & EXIT");
  2798  000D1C  0E2C               	movlw	low STR_1
  2799  000D1E  6E70               	movwf	printf@fmt,c
  2800  000D20  0EFD               	movlw	high STR_1
  2801  000D22  6E71               	movwf	printf@fmt+1,c
  2802  000D24  0E38               	movlw	low STR_8
  2803  000D26  6E72               	movwf	?_printf+2,c
  2804  000D28  0EFC               	movlw	high STR_8
  2805  000D2A  6E73               	movwf	?_printf+3,c
  2806  000D2C  ECB4  F00C         	call	_printf	;wreg free
  2807                           
  2808                           ;main.c: 56:                 break;
  2809  000D30  D04C               	goto	l2961
  2810  000D32                     l2939:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;main.c: 58:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  2814  000D32  0E80               	movlw	128
  2815  000D34  EC31  F00D         	call	_lcdInst
  2816  000D38  0E07               	movlw	7
  2817  000D3A  0100               	movlb	0	; () banked
  2818  000D3C  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2819  000D3E  0E7D               	movlw	125
  2820  000D40                     u2887:
  2821  000D40  2EE8               	decfsz	wreg,f,c
  2822  000D42  D7FE               	bra	u2887
  2823  000D44  2FAE               	decfsz	??_doDisplayLog& (0+255),f,b
  2824  000D46  D7FC               	bra	u2887
  2825                           
  2826                           ;main.c: 59:                 printf("%s", "POLE X/Y");
  2827  000D48  0E2C               	movlw	low STR_1
  2828  000D4A  6E70               	movwf	printf@fmt,c
  2829  000D4C  0EFD               	movlw	high STR_1
  2830  000D4E  6E71               	movwf	printf@fmt+1,c
  2831  000D50  0E20               	movlw	low STR_10
  2832  000D52  6E72               	movwf	?_printf+2,c
  2833  000D54  0EFD               	movlw	high STR_10
  2834  000D56  6E73               	movwf	?_printf+3,c
  2835  000D58  ECB4  F00C         	call	_printf	;wreg free
  2836  000D5C  0EC0               	movlw	192
  2837  000D5E  EC31  F00D         	call	_lcdInst
  2838                           
  2839                           ;main.c: 61:                 printf("%s","TIR. DEPLOY: X");
  2840  000D62  0E2C               	movlw	low STR_1
  2841  000D64  6E70               	movwf	printf@fmt,c
  2842  000D66  0EFD               	movlw	high STR_1
  2843  000D68  6E71               	movwf	printf@fmt+1,c
  2844  000D6A  0E58               	movlw	low STR_12
  2845  000D6C  6E72               	movwf	?_printf+2,c
  2846  000D6E  0EFC               	movlw	high STR_12
  2847  000D70  6E73               	movwf	?_printf+3,c
  2848  000D72  ECB4  F00C         	call	_printf	;wreg free
  2849  000D76  0E90               	movlw	144
  2850  000D78  EC31  F00D         	call	_lcdInst
  2851                           
  2852                           ;main.c: 63:                 printf("%s","TIRE. ON POLE: X");
  2853  000D7C  0E2C               	movlw	low STR_1
  2854  000D7E  6E70               	movwf	printf@fmt,c
  2855  000D80  0EFD               	movlw	high STR_1
  2856  000D82  6E71               	movwf	printf@fmt+1,c
  2857  000D84  0E07               	movlw	low STR_14
  2858  000D86  6E72               	movwf	?_printf+2,c
  2859  000D88  0EFC               	movlw	high STR_14
  2860  000D8A  6E73               	movwf	?_printf+3,c
  2861  000D8C  ECB4  F00C         	call	_printf	;wreg free
  2862  000D90  0ED0               	movlw	208
  2863  000D92  EC31  F00D         	call	_lcdInst
  2864                           
  2865                           ;main.c: 65:                 printf("%s","1<- 2-> 3MENU");
  2866  000D96  0E2C               	movlw	low STR_1
  2867  000D98  6E70               	movwf	printf@fmt,c
  2868  000D9A  0EFD               	movlw	high STR_1
  2869  000D9C  6E71               	movwf	printf@fmt+1,c
  2870  000D9E  0EAF               	movlw	low STR_16
  2871  000DA0  6E72               	movwf	?_printf+2,c
  2872  000DA2  0EFC               	movlw	high STR_16
  2873  000DA4  6E73               	movwf	?_printf+3,c
  2874  000DA6  ECB4  F00C         	call	_printf	;wreg free
  2875                           
  2876                           ;main.c: 66:                 break;
  2877  000DAA  D00F               	goto	l2961
  2878  000DAC                     l2959:
  2879  000DAC  0100               	movlb	0	; () banked
  2880  000DAE  51B3               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  2881  000DB0  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2882  000DB2  6BAF               	clrf	(??_doDisplayLog+1)& (0+255),b
  2883                           
  2884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2885                           ; Switch size 1, requested type "simple"
  2886                           ; Number of cases is 1, Range of values is 0 to 0
  2887                           ; switch strategies available:
  2888                           ; Name         Instructions Cycles
  2889                           ; simple_byte            4     3 (average)
  2890                           ;	Chosen strategy is simple_byte
  2891  000DB4  51AF               	movf	(??_doDisplayLog+1)& (0+255),w,b
  2892  000DB6  0A00               	xorlw	0	; case 0
  2893  000DB8  A4D8               	btfss	status,2,c
  2894  000DBA  D007               	goto	l2961
  2895                           
  2896                           ; BSR set to: 0
  2897                           ; Switch size 1, requested type "simple"
  2898                           ; Number of cases is 2, Range of values is 0 to 1
  2899                           ; switch strategies available:
  2900                           ; Name         Instructions Cycles
  2901                           ; simple_byte            7     4 (average)
  2902                           ;	Chosen strategy is simple_byte
  2903  000DBC  51AE               	movf	??_doDisplayLog& (0+255),w,b
  2904  000DBE  0A00               	xorlw	0	; case 0
  2905  000DC0  B4D8               	btfsc	status,2,c
  2906  000DC2  D77A               	goto	l2921
  2907  000DC4  0A01               	xorlw	1	; case 1
  2908  000DC6  B4D8               	btfsc	status,2,c
  2909  000DC8  D7B4               	goto	l2939
  2910  000DCA                     l2961:
  2911                           
  2912                           ;main.c: 69:         if(keyPressed){
  2913  000DCA  507E               	movf	_keyPressed,w,c	;volatile
  2914  000DCC  B4D8               	btfsc	status,2,c
  2915  000DCE  D03E               	goto	l87
  2916                           
  2917                           ;main.c: 72:             keyPressed = 0;
  2918  000DD0  0E00               	movlw	0
  2919  000DD2  6E7E               	movwf	_keyPressed,c	;volatile
  2920                           
  2921                           ;main.c: 75:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2922  000DD4  3881               	swapf	3969,w,c	;volatile
  2923  000DD6  0B0F               	andlw	15
  2924  000DD8  0B0F               	andlw	15
  2925  000DDA  0100               	movlb	0	; () banked
  2926  000DDC  6FB2               	movwf	doDisplayLog@keypress& (0+255),b
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;main.c: 76:             char keyValue = keys[keypress];
  2930  000DDE  0EE9               	movlw	low _keys
  2931  000DE0  25B2               	addwf	doDisplayLog@keypress& (0+255),w,b
  2932  000DE2  6EF6               	movwf	tblptrl,c
  2933  000DE4  6AF7               	clrf	tblptrh,c
  2934  000DE6  0EFB               	movlw	high _keys
  2935  000DE8  22F7               	addwfc	tblptrh,f,c
  2936  000DEA                     	if	0	;There are less than 3 active tblptr bytes
  2937  000DEA                     	endif
  2938  000DEA  0008               	tblrd		*
  2939  000DEC  CFF5 F0B4          	movff	tablat,doDisplayLog@keyValue
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;main.c: 77:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
  2943  000DF0  0E01               	movlw	1
  2944  000DF2  EC31  F00D         	call	_lcdInst
  2945  000DF6  0E11               	movlw	17
  2946  000DF8  0100               	movlb	0	; () banked
  2947  000DFA  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2948  000DFC  0E3A               	movlw	58
  2949  000DFE                     u2897:
  2950  000DFE  2EE8               	decfsz	wreg,f,c
  2951  000E00  D7FE               	bra	u2897
  2952  000E02  2FAE               	decfsz	??_doDisplayLog& (0+255),f,b
  2953  000E04  D7FC               	bra	u2897
  2954  000E06  F000               	nop	
  2955                           
  2956                           ;main.c: 78:             switch (currentDisplayState){
  2957  000E08  D012               	goto	l2987
  2958  000E0A                     l2973:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;main.c: 80:                     if (keyValue == '1'){
  2962  000E0A  0E31               	movlw	49
  2963  000E0C  19B4               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  2964  000E0E  A4D8               	btfss	status,2,c
  2965  000E10  D002               	goto	l2977
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;main.c: 81:                         currentDisplayState = pole;
  2969  000E12  0E01               	movlw	1
  2970  000E14  D00A               	goto	L8
  2971  000E16                     l2977:
  2972                           
  2973                           ; BSR set to: 0
  2974  000E16  0E32               	movlw	50
  2975  000E18  19B4               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  2976  000E1A  B4D8               	btfsc	status,2,c
  2977  000E1C  0012               	return	
  2978  000E1E  D016               	goto	l87
  2979  000E20                     l2981:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;main.c: 87:                     if (keyValue == '3'){
  2983  000E20  0E33               	movlw	51
  2984  000E22  19B4               	xorwf	doDisplayLog@keyValue& (0+255),w,b
  2985  000E24  A4D8               	btfss	status,2,c
  2986  000E26  D012               	goto	l87
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;main.c: 88:                         currentDisplayState = opTime;
  2990  000E28  0E00               	movlw	0
  2991  000E2A                     L8:
  2992  000E2A  6FB3               	movwf	doDisplayLog@currentDisplayState& (0+255),b
  2993  000E2C  D00F               	goto	l87
  2994  000E2E                     l2987:
  2995  000E2E  0100               	movlb	0	; () banked
  2996  000E30  51B3               	movf	doDisplayLog@currentDisplayState& (0+255),w,b
  2997  000E32  6FAE               	movwf	??_doDisplayLog& (0+255),b
  2998  000E34  6BAF               	clrf	(??_doDisplayLog+1)& (0+255),b
  2999                           
  3000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3001                           ; Switch size 1, requested type "simple"
  3002                           ; Number of cases is 1, Range of values is 0 to 0
  3003                           ; switch strategies available:
  3004                           ; Name         Instructions Cycles
  3005                           ; simple_byte            4     3 (average)
  3006                           ;	Chosen strategy is simple_byte
  3007  000E36  51AF               	movf	(??_doDisplayLog+1)& (0+255),w,b
  3008  000E38  0A00               	xorlw	0	; case 0
  3009  000E3A  A4D8               	btfss	status,2,c
  3010  000E3C  D007               	goto	l87
  3011                           
  3012                           ; BSR set to: 0
  3013                           ; Switch size 1, requested type "simple"
  3014                           ; Number of cases is 2, Range of values is 0 to 1
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; simple_byte            7     4 (average)
  3018                           ;	Chosen strategy is simple_byte
  3019  000E3E  51AE               	movf	??_doDisplayLog& (0+255),w,b
  3020  000E40  0A00               	xorlw	0	; case 0
  3021  000E42  B4D8               	btfsc	status,2,c
  3022  000E44  D7E2               	goto	l2973
  3023  000E46  0A01               	xorlw	1	; case 1
  3024  000E48  B4D8               	btfsc	status,2,c
  3025  000E4A  D7EA               	goto	l2981
  3026  000E4C                     l87:
  3027                           
  3028                           ;main.c: 97:     _delay((unsigned long)((1)*(10000000/4000.0)));
  3029                           
  3030                           ; BSR set to: 0
  3031  000E4C  0E04               	movlw	4
  3032  000E4E  0100               	movlb	0	; () banked
  3033  000E50  6FAE               	movwf	??_doDisplayLog& (0+255),b
  3034  000E52  0E3D               	movlw	61
  3035  000E54                     u2907:
  3036  000E54  2EE8               	decfsz	wreg,f,c
  3037  000E56  D7FE               	bra	u2907
  3038  000E58  2FAE               	decfsz	??_doDisplayLog& (0+255),f,b
  3039  000E5A  D7FC               	bra	u2907
  3040  000E5C  D000               	nop2	
  3041  000E5E  D7A6               	goto	l2959
  3042  000E60                     __end_of_doDisplayLog:
  3043                           	opt callstack 0
  3044                           
  3045 ;; *************** function _printf *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  fmt             2  111[COMRAM] PTR const unsigned char 
  3050 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3051 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3052 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3053 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3054 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3055 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  ap              2  121[COMRAM] PTR void [1]
  3058 ;;		 -> ?_printf(2), 
  3059 ;;  ret             2    0        int 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2  111[COMRAM] int 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:       12 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:   11
  3076 ;; This function calls:
  3077 ;;		_vfprintf
  3078 ;; This function is called by:
  3079 ;;		_doDisplayLog
  3080 ;;		_doOperation
  3081 ;;		_main
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text12
  3086  001968                     __ptext12:
  3087                           	opt callstack 0
  3088  001968                     _printf:
  3089                           	opt callstack 19
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;incstack = 0
  3093  001968  0E72               	movlw	low (?_printf+2)
  3094  00196A  6E7A               	movwf	printf@ap,c
  3095  00196C  0E00               	movlw	high (?_printf+2)
  3096  00196E  6E7B               	movwf	printf@ap+1,c
  3097  001970  0E00               	movlw	0
  3098  001972  6E68               	movwf	vfprintf@fp,c
  3099  001974  0E00               	movlw	0
  3100  001976  6E69               	movwf	vfprintf@fp+1,c
  3101  001978  C070  F06A         	movff	printf@fmt,vfprintf@fmt
  3102  00197C  C071  F06B         	movff	printf@fmt+1,vfprintf@fmt+1
  3103  001980  0E7A               	movlw	low printf@ap
  3104  001982  6E6C               	movwf	vfprintf@ap,c
  3105  001984  0E00               	movlw	high printf@ap
  3106  001986  6E6D               	movwf	vfprintf@ap+1,c
  3107  001988  EC40  F00B         	call	_vfprintf	;wreg free
  3108  00198C  0012               	return		;funcret
  3109  00198E                     __end_of_printf:
  3110                           	opt callstack 0
  3111                           
  3112 ;; *************** function _vfprintf *****************
  3113 ;; Defined at:
  3114 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3117 ;;		 -> NULL(0), 
  3118 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3119 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3120 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3121 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3122 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3123 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3124 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3125 ;;  ap              2  107[COMRAM] PTR PTR void 
  3126 ;;		 -> printf@ap(2), 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3129 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  3130 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  3131 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  3132 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  3133 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  3134 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2  103[COMRAM] int 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:        8 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:   10
  3151 ;; This function calls:
  3152 ;;		_vfpfcnvrt
  3153 ;; This function is called by:
  3154 ;;		_printf
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text13
  3159  001680                     __ptext13:
  3160                           	opt callstack 0
  3161  001680                     _vfprintf:
  3162                           	opt callstack 19
  3163                           
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3165                           
  3166                           ;incstack = 0
  3167  001680  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3168  001684  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3169                           
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3171  001688  0E00               	movlw	0
  3172  00168A  0100               	movlb	0	; () banked
  3173  00168C  6F81               	movwf	(_nout+1)& (0+255),b
  3174  00168E  0E00               	movlw	0
  3175  001690  6F80               	movwf	_nout& (0+255),b
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3178  001692  D013               	goto	l2823
  3179  001694                     l2821:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3183  001694  C068  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  3184  001698  C069  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3185  00169C  0E6E               	movlw	low vfprintf@cfmt
  3186  00169E  6E49               	movwf	vfpfcnvrt@fmt,c
  3187  0016A0  0E00               	movlw	high vfprintf@cfmt
  3188  0016A2  6E4A               	movwf	vfpfcnvrt@fmt+1,c
  3189  0016A4  C06C  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  3190  0016A8  C06D  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3191  0016AC  EC09  F000         	call	_vfpfcnvrt	;wreg free
  3192  0016B0  5047               	movf	?_vfpfcnvrt,w,c
  3193  0016B2  0100               	movlb	0	; () banked
  3194  0016B4  2780               	addwf	_nout& (0+255),f,b
  3195  0016B6  5048               	movf	?_vfpfcnvrt+1,w,c
  3196  0016B8  2381               	addwfc	(_nout+1)& (0+255),f,b
  3197  0016BA                     l2823:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3201  0016BA  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3202  0016BE  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3203  0016C2                     	if	0	;tblptru may be non-zero
  3204  0016C2                     	endif
  3205  0016C2                     	if	0	;tblptru may be non-zero
  3206  0016C2                     	endif
  3207  0016C2  0008               	tblrd		*
  3208  0016C4  50F5               	movf	tablat,w,c
  3209  0016C6  0900               	iorlw	0
  3210  0016C8  A4D8               	btfss	status,2,c
  3211  0016CA  D7E4               	goto	l2821
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3215  0016CC  C080  F068         	movff	_nout,?_vfprintf
  3216  0016D0  C081  F069         	movff	_nout+1,?_vfprintf+1
  3217                           
  3218                           ; BSR set to: 0
  3219  0016D4  0012               	return		;funcret
  3220  0016D6                     __end_of_vfprintf:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _vfpfcnvrt *****************
  3224 ;; Defined at:
  3225 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  3228 ;;		 -> NULL(0), 
  3229 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  3230 ;;		 -> vfprintf@cfmt(2), 
  3231 ;;  ap              2   74[COMRAM] PTR PTR void 
  3232 ;;		 -> printf@ap(2), 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  llu             8   88[COMRAM] unsigned long long 
  3235 ;;  ll              8   80[COMRAM] long long 
  3236 ;;  f               4    0        long long 
  3237 ;;  vp              3    0        PTR void 
  3238 ;;  ct              3    0        unsigned char [3]
  3239 ;;  done            2   98[COMRAM] int 
  3240 ;;  cp              2   96[COMRAM] PTR unsigned char 
  3241 ;;		 -> ?_printf(2), STR_43(16), STR_41(14), STR_39(11), 
  3242 ;;		 -> STR_37(9), STR_35(16), STR_33(13), STR_31(13), 
  3243 ;;		 -> STR_29(9), STR_27(13), STR_25(14), STR_23(10), 
  3244 ;;		 -> STR_19(9), STR_16(14), STR_14(17), STR_12(15), 
  3245 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  3246 ;;		 -> STR_2(12), 
  3247 ;;  i               2    0        int 
  3248 ;;  c               1  102[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  2   70[COMRAM] int 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;Total ram usage:       33 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    9
  3265 ;; This function calls:
  3266 ;;		_atoi
  3267 ;;		_dtoa
  3268 ;;		_fputc
  3269 ;;		_isdigit
  3270 ;;		_stoa
  3271 ;;		_xtoa
  3272 ;; This function is called by:
  3273 ;;		_vfprintf
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text14
  3278  000012                     __ptext14:
  3279                           	opt callstack 0
  3280  000012                     _vfpfcnvrt:
  3281                           	opt callstack 19
  3282                           
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;incstack = 0
  3287  000012  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3288  000016  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3289  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  3290  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  3291  000022                     	if	0	;tblptru may be non-zero
  3292  000022                     	endif
  3293  000022                     	if	0	;tblptru may be non-zero
  3294  000022                     	endif
  3295  000022  0008               	tblrd		*
  3296  000024  50F5               	movf	tablat,w,c
  3297  000026  0A25               	xorlw	37
  3298  000028  A4D8               	btfss	status,2,c
  3299  00002A  D1E8               	goto	l2795
  3300                           
  3301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3302  00002C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3303  000030  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3304  000034  2ADE               	incf	postinc2,f,c
  3305  000036  0E00               	movlw	0
  3306  000038  22DD               	addwfc	postdec2,f,c
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3309  00003A  0E00               	movlw	0
  3310  00003C  0100               	movlb	0	; () banked
  3311  00003E  6F83               	movwf	(_width+1)& (0+255),b
  3312  000040  0E00               	movlw	0
  3313  000042  6F82               	movwf	_width& (0+255),b
  3314  000044  C082  F086         	movff	_width,_flags
  3315  000048  C083  F087         	movff	_width+1,_flags+1
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3319  00004C  6984               	setf	_prec& (0+255),b
  3320  00004E  6985               	setf	(_prec+1)& (0+255),b
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3324  000050  0E00               	movlw	0
  3325  000052  6E64               	movwf	vfpfcnvrt@done+1,c
  3326  000054  0E00               	movlw	0
  3327  000056  D019               	goto	L9
  3328  000058                     l2699:
  3329                           
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3331  000058  0100               	movlb	0	; () banked
  3332  00005A  8186               	bsf	_flags& (0+255),0,b
  3333  00005C                     l2701:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3337  00005C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3338  000060  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3339  000064  2ADE               	incf	postinc2,f,c
  3340  000066  0E00               	movlw	0
  3341  000068  22DD               	addwfc	postdec2,f,c
  3342                           
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3344  00006A  D032               	goto	l2725
  3345  00006C                     l2703:
  3346                           
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3348  00006C  0100               	movlb	0	; () banked
  3349  00006E  8386               	bsf	_flags& (0+255),1,b
  3350  000070  D7F5               	goto	l2701
  3351  000072                     l2707:
  3352                           
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3354  000072  0100               	movlb	0	; () banked
  3355  000074  8586               	bsf	_flags& (0+255),2,b
  3356  000076  D7F2               	goto	l2701
  3357  000078                     l2711:
  3358                           
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3360  000078  0100               	movlb	0	; () banked
  3361  00007A  8786               	bsf	_flags& (0+255),3,b
  3362  00007C  D7EF               	goto	l2701
  3363  00007E                     l2715:
  3364                           
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3366  00007E  0100               	movlb	0	; () banked
  3367  000080  8986               	bsf	_flags& (0+255),4,b
  3368  000082  D7EC               	goto	l2701
  3369  000084                     l2719:
  3370                           
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3372  000084  0E00               	movlw	0
  3373  000086  6E64               	movwf	vfpfcnvrt@done+1,c
  3374  000088  0E01               	movlw	1
  3375  00008A                     L9:
  3376  00008A  6E63               	movwf	vfpfcnvrt@done,c
  3377                           
  3378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3379  00008C  D021               	goto	l2725
  3380  00008E                     l2723:
  3381  00008E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  000092  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  000096  CFDE FFF6          	movff	postinc2,tblptrl
  3384  00009A  CFDD FFF7          	movff	postdec2,tblptrh
  3385  00009E                     	if	0	;tblptru may be non-zero
  3386  00009E                     	endif
  3387  00009E                     	if	0	;tblptru may be non-zero
  3388  00009E                     	endif
  3389  00009E  0008               	tblrd		*
  3390  0000A0  50F5               	movf	tablat,w,c
  3391  0000A2  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3392  0000A4  6A4E               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3393                           
  3394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 1, Range of values is 0 to 0
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte            4     3 (average)
  3400                           ;	Chosen strategy is simple_byte
  3401  0000A6  504E               	movf	??_vfpfcnvrt+1,w,c
  3402  0000A8  0A00               	xorlw	0	; case 0
  3403  0000AA  A4D8               	btfss	status,2,c
  3404  0000AC  D7EB               	goto	l2719
  3405                           
  3406                           ; Switch size 1, requested type "simple"
  3407                           ; Number of cases is 5, Range of values is 32 to 48
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte           16     9 (average)
  3411                           ;	Chosen strategy is simple_byte
  3412  0000AE  504D               	movf	??_vfpfcnvrt,w,c
  3413  0000B0  0A20               	xorlw	32	; case 32
  3414  0000B2  B4D8               	btfsc	status,2,c
  3415  0000B4  D7E1               	goto	l2711
  3416  0000B6  0A03               	xorlw	3	; case 35
  3417  0000B8  B4D8               	btfsc	status,2,c
  3418  0000BA  D7E1               	goto	l2715
  3419  0000BC  0A08               	xorlw	8	; case 43
  3420  0000BE  B4D8               	btfsc	status,2,c
  3421  0000C0  D7D8               	goto	l2707
  3422  0000C2  0A06               	xorlw	6	; case 45
  3423  0000C4  B4D8               	btfsc	status,2,c
  3424  0000C6  D7C8               	goto	l2699
  3425  0000C8  0A1D               	xorlw	29	; case 48
  3426  0000CA  B4D8               	btfsc	status,2,c
  3427  0000CC  D7CF               	goto	l2703
  3428  0000CE  D7DA               	goto	l2719
  3429  0000D0                     l2725:
  3430                           
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3432  0000D0  5063               	movf	vfpfcnvrt@done,w,c
  3433  0000D2  1064               	iorwf	vfpfcnvrt@done+1,w,c
  3434  0000D4  B4D8               	btfsc	status,2,c
  3435  0000D6  D7DB               	goto	l2723
  3436                           
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3438  0000D8  0100               	movlb	0	; () banked
  3439  0000DA  B186               	btfsc	_flags& (0+255),0,b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3443  0000DC  9386               	bcf	_flags& (0+255),1,b
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3447  0000DE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3448  0000E2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3449  0000E6  CFDE FFF6          	movff	postinc2,tblptrl
  3450  0000EA  CFDD FFF7          	movff	postdec2,tblptrh
  3451  0000EE                     	if	0	;tblptru may be non-zero
  3452  0000EE                     	endif
  3453  0000EE                     	if	0	;tblptru may be non-zero
  3454  0000EE                     	endif
  3455  0000EE  0008               	tblrd		*
  3456  0000F0  50F5               	movf	tablat,w,c
  3457  0000F2  0A2A               	xorlw	42
  3458  0000F4  A4D8               	btfss	status,2,c
  3459  0000F6  D023               	goto	l2737
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3463  0000F8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3464  0000FC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3465  000100  2ADE               	incf	postinc2,f,c
  3466  000102  0E00               	movlw	0
  3467  000104  22DD               	addwfc	postdec2,f,c
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3470  000106  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3471  00010A  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3472  00010E  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3473  000112  0E02               	movlw	2
  3474  000114  26DE               	addwf	postinc2,f,c
  3475  000116  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3476  00011A  0E00               	movlw	0
  3477  00011C  22DD               	addwfc	postdec2,f,c
  3478  00011E  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3479  000122  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3480  000126  CFDE F082          	movff	postinc2,_width
  3481  00012A  CFDD F083          	movff	postdec2,_width+1
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3485  00012E  AF83               	btfss	(_width+1)& (0+255),7,b
  3486  000130  D03F               	goto	u2320
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3490  000132  8186               	bsf	_flags& (0+255),0,b
  3491                           
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3493  000134  6D82               	negf	_width& (0+255),b
  3494  000136  1F83               	comf	(_width+1)& (0+255),f,b
  3495  000138  B0D8               	btfsc	status,0,c
  3496  00013A  2B83               	incf	(_width+1)& (0+255),f,b
  3497  00013C  D039               	goto	u2320
  3498  00013E                     l2737:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3502  00013E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3503  000142  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3504  000146  CFDE F008          	movff	postinc2,atoi@s
  3505  00014A  CFDD F009          	movff	postdec2,atoi@s+1
  3506  00014E  EC76  F008         	call	_atoi	;wreg free
  3507  000152  C008  F082         	movff	?_atoi,_width
  3508  000156  C009  F083         	movff	?_atoi+1,_width+1
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3511  00015A  D007               	goto	l2741
  3512  00015C                     l2739:
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3515  00015C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3516  000160  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3517  000164  2ADE               	incf	postinc2,f,c
  3518  000166  0E00               	movlw	0
  3519  000168  22DD               	addwfc	postdec2,f,c
  3520  00016A                     l2741:
  3521  00016A  0ED0               	movlw	208
  3522  00016C  6E4D               	movwf	??_vfpfcnvrt& (0+255),c
  3523  00016E  0EFF               	movlw	255
  3524  000170  6E4E               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3525  000172  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3526  000176  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3527  00017A  CFDE FFF6          	movff	postinc2,tblptrl
  3528  00017E  CFDD FFF7          	movff	postdec2,tblptrh
  3529  000182                     	if	0	;tblptru may be non-zero
  3530  000182                     	endif
  3531  000182                     	if	0	;tblptru may be non-zero
  3532  000182                     	endif
  3533  000182  0008               	tblrd		*
  3534  000184  50F5               	movf	tablat,w,c
  3535  000186  6E4F               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3536  000188  6A50               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3537  00018A  504D               	movf	??_vfpfcnvrt,w,c
  3538  00018C  264F               	addwf	??_vfpfcnvrt+2,f,c
  3539  00018E  504E               	movf	??_vfpfcnvrt+1,w,c
  3540  000190  2250               	addwfc	??_vfpfcnvrt+3,f,c
  3541  000192  5050               	movf	??_vfpfcnvrt+3,w,c
  3542  000194  E106               	bnz	u2300
  3543  000196  0E0A               	movlw	10
  3544  000198  5C4F               	subwf	??_vfpfcnvrt+2,w,c
  3545  00019A  B0D8               	btfsc	status,0,c
  3546  00019C  D002               	goto	u2300
  3547  00019E  0E01               	movlw	1
  3548  0001A0  D001               	goto	u2310
  3549  0001A2                     u2300:
  3550  0001A2  0E00               	movlw	0
  3551  0001A4                     u2310:
  3552  0001A4  6E65               	movwf	_vfpfcnvrt$611,c
  3553  0001A6  6A66               	clrf	_vfpfcnvrt$611+1,c
  3554  0001A8  5065               	movf	_vfpfcnvrt$611,w,c
  3555  0001AA  1066               	iorwf	_vfpfcnvrt$611+1,w,c
  3556  0001AC  A4D8               	btfss	status,2,c
  3557  0001AE  D7D6               	goto	l2739
  3558  0001B0                     u2320:
  3559                           
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3561  0001B0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3562  0001B4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3563  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3564  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3565  0001C0                     	if	0	;tblptru may be non-zero
  3566  0001C0                     	endif
  3567  0001C0                     	if	0	;tblptru may be non-zero
  3568  0001C0                     	endif
  3569  0001C0  0008               	tblrd		*
  3570  0001C2  50F5               	movf	tablat,w,c
  3571  0001C4  0A64               	xorlw	100
  3572  0001C6  B4D8               	btfsc	status,2,c
  3573  0001C8  D00D               	goto	u2340
  3574  0001CA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3575  0001CE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3576  0001D2  CFDE FFF6          	movff	postinc2,tblptrl
  3577  0001D6  CFDD FFF7          	movff	postdec2,tblptrh
  3578  0001DA                     	if	0	;tblptru may be non-zero
  3579  0001DA                     	endif
  3580  0001DA                     	if	0	;tblptru may be non-zero
  3581  0001DA                     	endif
  3582  0001DA  0008               	tblrd		*
  3583  0001DC  50F5               	movf	tablat,w,c
  3584  0001DE  0A69               	xorlw	105
  3585  0001E0  A4D8               	btfss	status,2,c
  3586  0001E2  D03F               	goto	l2757
  3587  0001E4                     u2340:
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3590  0001E4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3591  0001E8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3592  0001EC  2ADE               	incf	postinc2,f,c
  3593  0001EE  0E00               	movlw	0
  3594  0001F0  22DD               	addwfc	postdec2,f,c
  3595                           
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3597  0001F2  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3598  0001F6  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3599  0001FA  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3600  0001FE  0E02               	movlw	2
  3601  000200  26DE               	addwf	postinc2,f,c
  3602  000202  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3603  000206  0E00               	movlw	0
  3604  000208  22DD               	addwfc	postdec2,f,c
  3605  00020A  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3606  00020E  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3607  000212  CFDE F051          	movff	postinc2,vfpfcnvrt@ll
  3608  000216  CFDD F052          	movff	postdec2,vfpfcnvrt@ll+1
  3609  00021A  0E00               	movlw	0
  3610  00021C  BE52               	btfsc	vfpfcnvrt@ll+1,7,c
  3611  00021E  0EFF               	movlw	-1
  3612  000220  6E53               	movwf	vfpfcnvrt@ll+2,c
  3613  000222  6E54               	movwf	vfpfcnvrt@ll+3,c
  3614  000224  6E55               	movwf	vfpfcnvrt@ll+4,c
  3615  000226  6E56               	movwf	vfpfcnvrt@ll+5,c
  3616  000228  6E57               	movwf	vfpfcnvrt@ll+6,c
  3617  00022A  6E58               	movwf	vfpfcnvrt@ll+7,c
  3618                           
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3620  00022C  C047  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  3621  000230  C048  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3622  000234  C051  F022         	movff	vfpfcnvrt@ll,dtoa@d
  3623  000238  C052  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3624  00023C  C053  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3625  000240  C054  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3626  000244  C055  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3627  000248  C056  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3628  00024C  C057  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3629  000250  C058  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3630  000254  EC12  F004         	call	_dtoa	;wreg free
  3631  000258  C020  F047         	movff	?_dtoa,?_vfpfcnvrt
  3632  00025C  C021  F048         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3633  000260  0012               	return	
  3634  000262                     l2757:
  3635                           
  3636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3637  000262  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3638  000266  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3639  00026A  CFDE FFF6          	movff	postinc2,tblptrl
  3640  00026E  CFDD FFF7          	movff	postdec2,tblptrh
  3641  000272                     	if	0	;tblptru may be non-zero
  3642  000272                     	endif
  3643  000272                     	if	0	;tblptru may be non-zero
  3644  000272                     	endif
  3645  000272  0008               	tblrd		*
  3646  000274  50F5               	movf	tablat,w,c
  3647  000276  0A73               	xorlw	115
  3648  000278  A4D8               	btfss	status,2,c
  3649  00027A  D02A               	goto	l2765
  3650                           
  3651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3652  00027C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3653  000280  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3654  000284  2ADE               	incf	postinc2,f,c
  3655  000286  0E00               	movlw	0
  3656  000288  22DD               	addwfc	postdec2,f,c
  3657                           
  3658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3659  00028A  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3660  00028E  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3661  000292  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3662  000296  0E02               	movlw	2
  3663  000298  26DE               	addwf	postinc2,f,c
  3664  00029A  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3665  00029E  0E00               	movlw	0
  3666  0002A0  22DD               	addwfc	postdec2,f,c
  3667  0002A2  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3668  0002A6  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3669  0002AA  CFDE F061          	movff	postinc2,vfpfcnvrt@cp
  3670  0002AE  CFDD F062          	movff	postdec2,vfpfcnvrt@cp+1
  3671                           
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3673  0002B2  C047  F00E         	movff	vfpfcnvrt@fp,stoa@fp
  3674  0002B6  C048  F00F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3675  0002BA  C061  F010         	movff	vfpfcnvrt@cp,stoa@s
  3676  0002BE  C062  F011         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3677  0002C2  ECD4  F007         	call	_stoa	;wreg free
  3678  0002C6  C00E  F047         	movff	?_stoa,?_vfpfcnvrt
  3679  0002CA  C00F  F048         	movff	?_stoa+1,?_vfpfcnvrt+1
  3680  0002CE  0012               	return	
  3681  0002D0                     l2765:
  3682                           
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3684  0002D0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3685  0002D4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3686  0002D8  CFDE FFF6          	movff	postinc2,tblptrl
  3687  0002DC  CFDD FFF7          	movff	postdec2,tblptrh
  3688  0002E0                     	if	0	;tblptru may be non-zero
  3689  0002E0                     	endif
  3690  0002E0                     	if	0	;tblptru may be non-zero
  3691  0002E0                     	endif
  3692  0002E0  0008               	tblrd		*
  3693  0002E2  50F5               	movf	tablat,w,c
  3694  0002E4  0A78               	xorlw	120
  3695  0002E6  B4D8               	btfsc	status,2,c
  3696  0002E8  D00D               	goto	u2370
  3697  0002EA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  0002EE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  0002F2  CFDE FFF6          	movff	postinc2,tblptrl
  3700  0002F6  CFDD FFF7          	movff	postdec2,tblptrh
  3701  0002FA                     	if	0	;tblptru may be non-zero
  3702  0002FA                     	endif
  3703  0002FA                     	if	0	;tblptru may be non-zero
  3704  0002FA                     	endif
  3705  0002FA  0008               	tblrd		*
  3706  0002FC  50F5               	movf	tablat,w,c
  3707  0002FE  0A58               	xorlw	88
  3708  000300  A4D8               	btfss	status,2,c
  3709  000302  D04D               	goto	l2779
  3710  000304                     u2370:
  3711                           
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3713  000304  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3714  000308  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3715  00030C  CFDE FFF6          	movff	postinc2,tblptrl
  3716  000310  CFDD FFF7          	movff	postdec2,tblptrh
  3717  000314                     	if	0	;tblptru may be non-zero
  3718  000314                     	endif
  3719  000314                     	if	0	;tblptru may be non-zero
  3720  000314                     	endif
  3721  000314  0008               	tblrd		*
  3722  000316  CFF5 F067          	movff	tablat,vfpfcnvrt@c
  3723                           
  3724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3725  00031A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3726  00031E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3727  000322  2ADE               	incf	postinc2,f,c
  3728  000324  0E00               	movlw	0
  3729  000326  22DD               	addwfc	postdec2,f,c
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3732  000328  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3733  00032C  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3734  000330  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  3735  000334  0E02               	movlw	2
  3736  000336  26DE               	addwf	postinc2,f,c
  3737  000338  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  3738  00033C  0E00               	movlw	0
  3739  00033E  22DD               	addwfc	postdec2,f,c
  3740  000340  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3741  000344  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3742  000348  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  3743  00034C  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  3744  000350  C04F  F059         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3745  000354  C050  F05A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3746  000358  6A5B               	clrf	vfpfcnvrt@llu+2,c
  3747  00035A  6A5C               	clrf	vfpfcnvrt@llu+3,c
  3748  00035C  6A5D               	clrf	vfpfcnvrt@llu+4,c
  3749  00035E  6A5E               	clrf	vfpfcnvrt@llu+5,c
  3750  000360  6A5F               	clrf	vfpfcnvrt@llu+6,c
  3751  000362  6A60               	clrf	vfpfcnvrt@llu+7,c
  3752                           
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3754  000364  C047  F020         	movff	vfpfcnvrt@fp,xtoa@fp
  3755  000368  C048  F021         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3756  00036C  C059  F022         	movff	vfpfcnvrt@llu,xtoa@d
  3757  000370  C05A  F023         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3758  000374  C05B  F024         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3759  000378  C05C  F025         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3760  00037C  C05D  F026         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3761  000380  C05E  F027         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3762  000384  C05F  F028         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3763  000388  C060  F029         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3764  00038C  C067  F02A         	movff	vfpfcnvrt@c,xtoa@x
  3765  000390  EC35  F005         	call	_xtoa	;wreg free
  3766  000394  C020  F047         	movff	?_xtoa,?_vfpfcnvrt
  3767  000398  C021  F048         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3768  00039C  0012               	return	
  3769  00039E                     l2779:
  3770                           
  3771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3772  00039E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3773  0003A2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3774  0003A6  CFDE FFF6          	movff	postinc2,tblptrl
  3775  0003AA  CFDD FFF7          	movff	postdec2,tblptrh
  3776  0003AE                     	if	0	;tblptru may be non-zero
  3777  0003AE                     	endif
  3778  0003AE                     	if	0	;tblptru may be non-zero
  3779  0003AE                     	endif
  3780  0003AE  0008               	tblrd		*
  3781  0003B0  50F5               	movf	tablat,w,c
  3782  0003B2  0A25               	xorlw	37
  3783  0003B4  A4D8               	btfss	status,2,c
  3784  0003B6  D016               	goto	l2789
  3785                           
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3787  0003B8  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3788  0003BC  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3789  0003C0  2ADE               	incf	postinc2,f,c
  3790  0003C2  0E00               	movlw	0
  3791  0003C4  22DD               	addwfc	postdec2,f,c
  3792                           
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3794  0003C6  0E00               	movlw	0
  3795  0003C8  6E06               	movwf	fputc@c+1,c
  3796  0003CA  0E25               	movlw	37
  3797  0003CC  6E05               	movwf	fputc@c,c
  3798  0003CE  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3799  0003D2  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3800  0003D6  EC74  F00A         	call	_fputc	;wreg free
  3801  0003DA                     l2785:
  3802                           
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3804  0003DA  0E00               	movlw	0
  3805  0003DC  6E48               	movwf	?_vfpfcnvrt+1,c
  3806  0003DE  0E01               	movlw	1
  3807  0003E0  6E47               	movwf	?_vfpfcnvrt,c
  3808  0003E2  0012               	return	
  3809  0003E4                     l2789:
  3810                           
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3812  0003E4  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3813  0003E8  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3814  0003EC  2ADE               	incf	postinc2,f,c
  3815  0003EE  0E00               	movlw	0
  3816  0003F0  22DD               	addwfc	postdec2,f,c
  3817                           
  3818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3819  0003F2  0E00               	movlw	0
  3820  0003F4  6E48               	movwf	?_vfpfcnvrt+1,c
  3821  0003F6  0E00               	movlw	0
  3822  0003F8  6E47               	movwf	?_vfpfcnvrt,c
  3823  0003FA  0012               	return	
  3824  0003FC                     l2795:
  3825                           
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3827  0003FC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3828  000400  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3829  000404  CFDE FFF6          	movff	postinc2,tblptrl
  3830  000408  CFDD FFF7          	movff	postdec2,tblptrh
  3831  00040C                     	if	0	;tblptru may be non-zero
  3832  00040C                     	endif
  3833  00040C                     	if	0	;tblptru may be non-zero
  3834  00040C                     	endif
  3835  00040C  0008               	tblrd		*
  3836  00040E  50F5               	movf	tablat,w,c
  3837  000410  6E05               	movwf	fputc@c,c
  3838  000412  6A06               	clrf	fputc@c+1,c
  3839  000414  C047  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3840  000418  C048  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3841  00041C  EC74  F00A         	call	_fputc	;wreg free
  3842                           
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3844  000420  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3845  000424  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3846  000428  2ADE               	incf	postinc2,f,c
  3847  00042A  0E00               	movlw	0
  3848  00042C  22DD               	addwfc	postdec2,f,c
  3849  00042E  D7D5               	goto	l2785
  3850  000430                     __end_of_vfpfcnvrt:
  3851                           	opt callstack 0
  3852                           
  3853 ;; *************** function _xtoa *****************
  3854 ;; Defined at:
  3855 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3858 ;;		 -> NULL(0), 
  3859 ;;  d               8   33[COMRAM] unsigned long long 
  3860 ;;  x               1   41[COMRAM] unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  n               8   58[COMRAM] unsigned long long 
  3863 ;;  c               2   68[COMRAM] int 
  3864 ;;  i               2   66[COMRAM] int 
  3865 ;;  w               2   56[COMRAM] int 
  3866 ;;  p               2   54[COMRAM] int 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2   31[COMRAM] int 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:       39 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    8
  3883 ;; This function calls:
  3884 ;;		_isalpha
  3885 ;;		_isupper
  3886 ;;		_pad
  3887 ;;		_toupper
  3888 ;; This function is called by:
  3889 ;;		_vfpfcnvrt
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text15
  3894  000A6A                     __ptext15:
  3895                           	opt callstack 0
  3896  000A6A                     _xtoa:
  3897                           	opt callstack 19
  3898                           
  3899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3900                           
  3901                           ;incstack = 0
  3902  000A6A  0100               	movlb	0	; () banked
  3903  000A6C  AF85               	btfss	(_prec+1)& (0+255),7,b
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  3907  000A6E  9386               	bcf	_flags& (0+255),1,b
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  3911  000A70  BF85               	btfsc	(_prec+1)& (0+255),7,b
  3912  000A72  D005               	goto	u2020
  3913  000A74  5185               	movf	(_prec+1)& (0+255),w,b
  3914  000A76  E108               	bnz	l350
  3915  000A78  0584               	decf	_prec& (0+255),w,b
  3916  000A7A  B0D8               	btfsc	status,0,c
  3917  000A7C  D005               	goto	l350
  3918  000A7E                     u2020:
  3919                           
  3920                           ; BSR set to: 0
  3921  000A7E  0E00               	movlw	0
  3922  000A80  6E38               	movwf	xtoa@p+1,c
  3923  000A82  0E01               	movlw	1
  3924  000A84  6E37               	movwf	xtoa@p,c
  3925  000A86  D004               	goto	l352
  3926  000A88                     l350:
  3927                           
  3928                           ; BSR set to: 0
  3929  000A88  C084  F037         	movff	_prec,xtoa@p
  3930  000A8C  C085  F038         	movff	_prec+1,xtoa@p+1
  3931  000A90                     l352:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  3935  000A90  C082  F039         	movff	_width,xtoa@w
  3936  000A94  C083  F03A         	movff	_width+1,xtoa@w+1
  3937                           
  3938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  3939  000A98  A986               	btfss	_flags& (0+255),4,b
  3940  000A9A  D004               	goto	l2591
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  3944  000A9C  0EFE               	movlw	254
  3945  000A9E  2639               	addwf	xtoa@w,f,c
  3946  000AA0  0EFF               	movlw	255
  3947  000AA2  223A               	addwfc	xtoa@w+1,f,c
  3948  000AA4                     l2591:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  3952  000AA4  C022  F03B         	movff	xtoa@d,xtoa@n
  3953  000AA8  C023  F03C         	movff	xtoa@d+1,xtoa@n+1
  3954  000AAC  C024  F03D         	movff	xtoa@d+2,xtoa@n+2
  3955  000AB0  C025  F03E         	movff	xtoa@d+3,xtoa@n+3
  3956  000AB4  C026  F03F         	movff	xtoa@d+4,xtoa@n+4
  3957  000AB8  C027  F040         	movff	xtoa@d+5,xtoa@n+5
  3958  000ABC  C028  F041         	movff	xtoa@d+6,xtoa@n+6
  3959  000AC0  C029  F042         	movff	xtoa@d+7,xtoa@n+7
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  3963  000AC4  0E00               	movlw	0
  3964  000AC6  6E44               	movwf	xtoa@i+1,c
  3965  000AC8  0E1F               	movlw	31
  3966  000ACA  6E43               	movwf	xtoa@i,c
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  3970  000ACC  0E00               	movlw	0
  3971  000ACE  6FAD               	movwf	(_dbuf+31)& (0+255),b
  3972                           
  3973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3974  000AD0  D093               	goto	l2627
  3975  000AD2                     l2597:
  3976                           
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  3978  000AD2  0643               	decf	xtoa@i,f,c
  3979  000AD4  A0D8               	btfss	status,0,c
  3980  000AD6  0644               	decf	xtoa@i+1,f,c
  3981                           
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  3983  000AD8  0E0F               	movlw	15
  3984  000ADA  143B               	andwf	xtoa@n,w,c
  3985  000ADC  6E45               	movwf	xtoa@c,c
  3986  000ADE  6A46               	clrf	xtoa@c+1,c
  3987                           
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3989  000AE0  BE46               	btfsc	xtoa@c+1,7,c
  3990  000AE2  D008               	goto	l2605
  3991  000AE4  5046               	movf	xtoa@c+1,w,c
  3992  000AE6  E104               	bnz	u2040
  3993  000AE8  0E0A               	movlw	10
  3994  000AEA  5C45               	subwf	xtoa@c,w,c
  3995  000AEC  A0D8               	btfss	status,0,c
  3996  000AEE  D002               	goto	l2605
  3997  000AF0                     u2040:
  3998  000AF0  0E57               	movlw	87
  3999  000AF2  D001               	goto	L10
  4000  000AF4                     l2605:
  4001  000AF4  0E30               	movlw	48
  4002  000AF6                     L10:
  4003  000AF6  2445               	addwf	xtoa@c,w,c
  4004  000AF8  6E45               	movwf	xtoa@c,c
  4005  000AFA  0E00               	movlw	0
  4006  000AFC  2046               	addwfc	xtoa@c+1,w,c
  4007  000AFE  6E46               	movwf	xtoa@c+1,c
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  4010  000B00  0EBF               	movlw	191
  4011  000B02  6E2B               	movwf	??_xtoa& (0+255),c
  4012  000B04  0EFF               	movlw	255
  4013  000B06  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  4014  000B08  502A               	movf	xtoa@x,w,c
  4015  000B0A  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  4016  000B0C  6A2E               	clrf	(??_xtoa+3)& (0+255),c
  4017  000B0E  502B               	movf	??_xtoa,w,c
  4018  000B10  262D               	addwf	??_xtoa+2,f,c
  4019  000B12  502C               	movf	??_xtoa+1,w,c
  4020  000B14  222E               	addwfc	??_xtoa+3,f,c
  4021  000B16  502E               	movf	??_xtoa+3,w,c
  4022  000B18  E106               	bnz	u2050
  4023  000B1A  0E1A               	movlw	26
  4024  000B1C  5C2D               	subwf	??_xtoa+2,w,c
  4025  000B1E  B0D8               	btfsc	status,0,c
  4026  000B20  D002               	goto	u2050
  4027  000B22  0E01               	movlw	1
  4028  000B24  D001               	goto	u2060
  4029  000B26                     u2050:
  4030  000B26  0E00               	movlw	0
  4031  000B28                     u2060:
  4032  000B28  6E33               	movwf	_xtoa$596,c
  4033  000B2A  6A34               	clrf	_xtoa$596+1,c
  4034  000B2C  5033               	movf	_xtoa$596,w,c
  4035  000B2E  1034               	iorwf	_xtoa$596+1,w,c
  4036  000B30  B4D8               	btfsc	status,2,c
  4037  000B32  D027               	goto	l2619
  4038  000B34  0E9F               	movlw	159
  4039  000B36  6E2B               	movwf	??_xtoa& (0+255),c
  4040  000B38  0EFF               	movlw	255
  4041  000B3A  6E2C               	movwf	(??_xtoa+1)& (0+255),c
  4042  000B3C  0E20               	movlw	32
  4043  000B3E  1045               	iorwf	xtoa@c,w,c
  4044  000B40  6E2D               	movwf	(??_xtoa+2)& (0+255),c
  4045  000B42  0E00               	movlw	0
  4046  000B44  1046               	iorwf	xtoa@c+1,w,c
  4047  000B46  6E2E               	movwf	(??_xtoa+3)& (0+255),c
  4048  000B48  502B               	movf	??_xtoa,w,c
  4049  000B4A  262D               	addwf	??_xtoa+2,f,c
  4050  000B4C  502C               	movf	??_xtoa+1,w,c
  4051  000B4E  222E               	addwfc	??_xtoa+3,f,c
  4052  000B50  502E               	movf	??_xtoa+3,w,c
  4053  000B52  E106               	bnz	u2080
  4054  000B54  0E1A               	movlw	26
  4055  000B56  5C2D               	subwf	??_xtoa+2,w,c
  4056  000B58  B0D8               	btfsc	status,0,c
  4057  000B5A  D002               	goto	u2080
  4058  000B5C  0E01               	movlw	1
  4059  000B5E  D001               	goto	u2090
  4060  000B60                     u2080:
  4061  000B60  0E00               	movlw	0
  4062  000B62                     u2090:
  4063  000B62  6E35               	movwf	_xtoa$597,c
  4064  000B64  6A36               	clrf	_xtoa$597+1,c
  4065  000B66  5035               	movf	_xtoa$597,w,c
  4066  000B68  1036               	iorwf	_xtoa$597+1,w,c
  4067  000B6A  B4D8               	btfsc	status,2,c
  4068  000B6C  D00A               	goto	l2619
  4069                           
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4071  000B6E  C045  F007         	movff	xtoa@c,toupper@c
  4072  000B72  C046  F008         	movff	xtoa@c+1,toupper@c+1
  4073  000B76  EC6B  F00B         	call	_toupper	;wreg free
  4074  000B7A  C007  F045         	movff	?_toupper,xtoa@c
  4075  000B7E  C008  F046         	movff	?_toupper+1,xtoa@c+1
  4076  000B82                     l2619:
  4077                           
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4079  000B82  0E8E               	movlw	low _dbuf
  4080  000B84  2443               	addwf	xtoa@i,w,c
  4081  000B86  6ED9               	movwf	fsr2l,c
  4082  000B88  0E00               	movlw	high _dbuf
  4083  000B8A  2044               	addwfc	xtoa@i+1,w,c
  4084  000B8C  6EDA               	movwf	fsr2h,c
  4085  000B8E  C045  FFDF         	movff	xtoa@c,indf2
  4086                           
  4087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4088  000B92  0637               	decf	xtoa@p,f,c
  4089  000B94  A0D8               	btfss	status,0,c
  4090  000B96  0638               	decf	xtoa@p+1,f,c
  4091                           
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4093  000B98  0639               	decf	xtoa@w,f,c
  4094  000B9A  A0D8               	btfss	status,0,c
  4095  000B9C  063A               	decf	xtoa@w+1,f,c
  4096                           
  4097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4098  000B9E  C03B  F02B         	movff	xtoa@n,??_xtoa
  4099  000BA2  C03C  F02C         	movff	xtoa@n+1,??_xtoa+1
  4100  000BA6  C03D  F02D         	movff	xtoa@n+2,??_xtoa+2
  4101  000BAA  C03E  F02E         	movff	xtoa@n+3,??_xtoa+3
  4102  000BAE  C03F  F02F         	movff	xtoa@n+4,??_xtoa+4
  4103  000BB2  C040  F030         	movff	xtoa@n+5,??_xtoa+5
  4104  000BB6  C041  F031         	movff	xtoa@n+6,??_xtoa+6
  4105  000BBA  C042  F032         	movff	xtoa@n+7,??_xtoa+7
  4106  000BBE  0E05               	movlw	5
  4107  000BC0  D009               	goto	u2110
  4108  000BC2                     u2115:
  4109  000BC2  90D8               	bcf	status,0,c
  4110  000BC4  3232               	rrcf	??_xtoa+7,f,c
  4111  000BC6  3231               	rrcf	??_xtoa+6,f,c
  4112  000BC8  3230               	rrcf	??_xtoa+5,f,c
  4113  000BCA  322F               	rrcf	??_xtoa+4,f,c
  4114  000BCC  322E               	rrcf	??_xtoa+3,f,c
  4115  000BCE  322D               	rrcf	??_xtoa+2,f,c
  4116  000BD0  322C               	rrcf	??_xtoa+1,f,c
  4117  000BD2  322B               	rrcf	??_xtoa,f,c
  4118  000BD4                     u2110:
  4119  000BD4  2EE8               	decfsz	wreg,f,c
  4120  000BD6  D7F5               	goto	u2115
  4121  000BD8  C02B  F03B         	movff	??_xtoa,xtoa@n
  4122  000BDC  C02C  F03C         	movff	??_xtoa+1,xtoa@n+1
  4123  000BE0  C02D  F03D         	movff	??_xtoa+2,xtoa@n+2
  4124  000BE4  C02E  F03E         	movff	??_xtoa+3,xtoa@n+3
  4125  000BE8  C02F  F03F         	movff	??_xtoa+4,xtoa@n+4
  4126  000BEC  C030  F040         	movff	??_xtoa+5,xtoa@n+5
  4127  000BF0  C031  F041         	movff	??_xtoa+6,xtoa@n+6
  4128  000BF4  C032  F042         	movff	??_xtoa+7,xtoa@n+7
  4129  000BF8                     l2627:
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4132  000BF8  BE44               	btfsc	xtoa@i+1,7,c
  4133  000BFA  D021               	goto	u2160
  4134  000BFC  5044               	movf	xtoa@i+1,w,c
  4135  000BFE  E104               	bnz	u2120
  4136  000C00  0E02               	movlw	2
  4137  000C02  5C43               	subwf	xtoa@i,w,c
  4138  000C04  A0D8               	btfss	status,0,c
  4139  000C06  D01B               	goto	u2160
  4140  000C08                     u2120:
  4141  000C08  503B               	movf	xtoa@n,w,c
  4142  000C0A  103C               	iorwf	xtoa@n+1,w,c
  4143  000C0C  103D               	iorwf	xtoa@n+2,w,c
  4144  000C0E  103E               	iorwf	xtoa@n+3,w,c
  4145  000C10  103F               	iorwf	xtoa@n+4,w,c
  4146  000C12  1040               	iorwf	xtoa@n+5,w,c
  4147  000C14  1041               	iorwf	xtoa@n+6,w,c
  4148  000C16  1042               	iorwf	xtoa@n+7,w,c
  4149  000C18  A4D8               	btfss	status,2,c
  4150  000C1A  D75B               	goto	l2597
  4151  000C1C  BE38               	btfsc	xtoa@p+1,7,c
  4152  000C1E  D005               	goto	u2140
  4153  000C20  5038               	movf	xtoa@p+1,w,c
  4154  000C22  E102               	bnz	u2141
  4155  000C24  0437               	decf	xtoa@p,w,c
  4156  000C26  B0D8               	btfsc	status,0,c
  4157  000C28                     u2141:
  4158  000C28  D754               	goto	l2597
  4159  000C2A                     u2140:
  4160  000C2A  BE3A               	btfsc	xtoa@w+1,7,c
  4161  000C2C  D008               	goto	u2160
  4162  000C2E  503A               	movf	xtoa@w+1,w,c
  4163  000C30  E103               	bnz	u2150
  4164  000C32  0439               	decf	xtoa@w,w,c
  4165  000C34  A0D8               	btfss	status,0,c
  4166  000C36  D003               	goto	u2160
  4167  000C38                     u2150:
  4168  000C38  0100               	movlb	0	; () banked
  4169  000C3A  B386               	btfsc	_flags& (0+255),1,b
  4170  000C3C  D74A               	goto	l2597
  4171  000C3E                     u2160:
  4172                           
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4174  000C3E  0100               	movlb	0	; () banked
  4175  000C40  A986               	btfss	_flags& (0+255),4,b
  4176  000C42  D016               	goto	l2643
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4180  000C44  0643               	decf	xtoa@i,f,c
  4181  000C46  A0D8               	btfss	status,0,c
  4182  000C48  0644               	decf	xtoa@i+1,f,c
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4186  000C4A  0E8E               	movlw	low _dbuf
  4187  000C4C  2443               	addwf	xtoa@i,w,c
  4188  000C4E  6ED9               	movwf	fsr2l,c
  4189  000C50  0E00               	movlw	high _dbuf
  4190  000C52  2044               	addwfc	xtoa@i+1,w,c
  4191  000C54  6EDA               	movwf	fsr2h,c
  4192  000C56  C02A  FFDF         	movff	xtoa@x,indf2
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4196  000C5A  0643               	decf	xtoa@i,f,c
  4197  000C5C  A0D8               	btfss	status,0,c
  4198  000C5E  0644               	decf	xtoa@i+1,f,c
  4199                           
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4201  000C60  0E8E               	movlw	low _dbuf
  4202  000C62  2443               	addwf	xtoa@i,w,c
  4203  000C64  6ED9               	movwf	fsr2l,c
  4204  000C66  0E00               	movlw	high _dbuf
  4205  000C68  2044               	addwfc	xtoa@i+1,w,c
  4206  000C6A  6EDA               	movwf	fsr2h,c
  4207  000C6C  0E30               	movlw	48
  4208  000C6E  6EDF               	movwf	indf2,c
  4209  000C70                     l2643:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4213  000C70  C020  F015         	movff	xtoa@fp,pad@fp
  4214  000C74  C021  F016         	movff	xtoa@fp+1,pad@fp+1
  4215  000C78  0E8E               	movlw	low _dbuf
  4216  000C7A  2443               	addwf	xtoa@i,w,c
  4217  000C7C  6E17               	movwf	pad@buf,c
  4218  000C7E  0E00               	movlw	high _dbuf
  4219  000C80  2044               	addwfc	xtoa@i+1,w,c
  4220  000C82  6E18               	movwf	pad@buf+1,c
  4221  000C84  C039  F019         	movff	xtoa@w,pad@p
  4222  000C88  C03A  F01A         	movff	xtoa@w+1,pad@p+1
  4223  000C8C  ECA8  F009         	call	_pad	;wreg free
  4224  000C90  C015  F020         	movff	?_pad,?_xtoa
  4225  000C94  C016  F021         	movff	?_pad+1,?_xtoa+1
  4226  000C98  0012               	return		;funcret
  4227  000C9A                     __end_of_xtoa:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _toupper *****************
  4231 ;; Defined at:
  4232 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  c               2    6[COMRAM] int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  2    6[COMRAM] int 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;Total ram usage:        8 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    2
  4253 ;; This function calls:
  4254 ;;		_islower
  4255 ;; This function is called by:
  4256 ;;		_xtoa
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text16
  4261  0016D6                     __ptext16:
  4262                           	opt callstack 0
  4263  0016D6                     _toupper:
  4264                           	opt callstack 24
  4265                           
  4266                           ;incstack = 0
  4267  0016D6  0E9F               	movlw	159
  4268  0016D8  6E09               	movwf	??_toupper& (0+255),c
  4269  0016DA  0EFF               	movlw	255
  4270  0016DC  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4271  0016DE  C007  F00B         	movff	toupper@c,??_toupper+2
  4272  0016E2  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4273  0016E6  5009               	movf	??_toupper,w,c
  4274  0016E8  260B               	addwf	??_toupper+2,f,c
  4275  0016EA  500A               	movf	??_toupper+1,w,c
  4276  0016EC  220C               	addwfc	??_toupper+3,f,c
  4277  0016EE  500C               	movf	??_toupper+3,w,c
  4278  0016F0  E106               	bnz	u1560
  4279  0016F2  0E1A               	movlw	26
  4280  0016F4  5C0B               	subwf	??_toupper+2,w,c
  4281  0016F6  B0D8               	btfsc	status,0,c
  4282  0016F8  D002               	goto	u1560
  4283  0016FA  0E01               	movlw	1
  4284  0016FC  D001               	goto	u1570
  4285  0016FE                     u1560:
  4286  0016FE  0E00               	movlw	0
  4287  001700                     u1570:
  4288  001700  6E0D               	movwf	_toupper$1161,c
  4289  001702  6A0E               	clrf	_toupper$1161+1,c
  4290  001704  500D               	movf	_toupper$1161,w,c
  4291  001706  100E               	iorwf	_toupper$1161+1,w,c
  4292  001708  B4D8               	btfsc	status,2,c
  4293  00170A  D005               	goto	l1191
  4294  00170C  0E5F               	movlw	95
  4295  00170E  1407               	andwf	toupper@c,w,c
  4296  001710  6E07               	movwf	?_toupper,c
  4297  001712  6A08               	clrf	?_toupper+1,c
  4298  001714  0012               	return	
  4299  001716                     l1191:
  4300  001716  C007  F007         	movff	toupper@c,?_toupper
  4301  00171A  C008  F008         	movff	toupper@c+1,?_toupper+1
  4302  00171E  0012               	return		;funcret
  4303  001720                     __end_of_toupper:
  4304                           	opt callstack 0
  4305                           
  4306 ;; *************** function _islower *****************
  4307 ;; Defined at:
  4308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  c               2    0[COMRAM] int 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2    0[COMRAM] int 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        6 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_toupper
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text17
  4337  0018AE                     __ptext17:
  4338                           	opt callstack 0
  4339  0018AE                     _islower:
  4340                           	opt callstack 24
  4341                           
  4342                           ;incstack = 0
  4343  0018AE  0E9F               	movlw	159
  4344  0018B0  6E03               	movwf	??_islower& (0+255),c
  4345  0018B2  0EFF               	movlw	255
  4346  0018B4  6E04               	movwf	(??_islower+1)& (0+255),c
  4347  0018B6  C001  F005         	movff	islower@c,??_islower+2
  4348  0018BA  C002  F006         	movff	islower@c+1,??_islower+3
  4349  0018BE  5003               	movf	??_islower,w,c
  4350  0018C0  2605               	addwf	??_islower+2,f,c
  4351  0018C2  5004               	movf	??_islower+1,w,c
  4352  0018C4  2206               	addwfc	??_islower+3,f,c
  4353  0018C6  5006               	movf	??_islower+3,w,c
  4354  0018C8  E106               	bnz	u1450
  4355  0018CA  0E1A               	movlw	26
  4356  0018CC  5C05               	subwf	??_islower+2,w,c
  4357  0018CE  B0D8               	btfsc	status,0,c
  4358  0018D0  D002               	goto	u1450
  4359  0018D2  0E01               	movlw	1
  4360  0018D4  D001               	goto	u1460
  4361  0018D6                     u1450:
  4362  0018D6  0E00               	movlw	0
  4363  0018D8                     u1460:
  4364  0018D8  6E01               	movwf	?_islower,c
  4365  0018DA  6A02               	clrf	?_islower+1,c
  4366  0018DC  0012               	return		;funcret
  4367  0018DE                     __end_of_islower:
  4368                           	opt callstack 0
  4369                           
  4370 ;; *************** function _isupper *****************
  4371 ;; Defined at:
  4372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  c               2    0[COMRAM] int 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  2    0[COMRAM] int 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;Total ram usage:        6 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_xtoa
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text18
  4401  0018DE                     __ptext18:
  4402                           	opt callstack 0
  4403  0018DE                     _isupper:
  4404                           	opt callstack 25
  4405                           
  4406                           ;incstack = 0
  4407  0018DE  0EBF               	movlw	191
  4408  0018E0  6E03               	movwf	??_isupper& (0+255),c
  4409  0018E2  0EFF               	movlw	255
  4410  0018E4  6E04               	movwf	(??_isupper+1)& (0+255),c
  4411  0018E6  C001  F005         	movff	isupper@c,??_isupper+2
  4412  0018EA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4413  0018EE  5003               	movf	??_isupper,w,c
  4414  0018F0  2605               	addwf	??_isupper+2,f,c
  4415  0018F2  5004               	movf	??_isupper+1,w,c
  4416  0018F4  2206               	addwfc	??_isupper+3,f,c
  4417  0018F6  5006               	movf	??_isupper+3,w,c
  4418  0018F8  E106               	bnz	u1520
  4419  0018FA  0E1A               	movlw	26
  4420  0018FC  5C05               	subwf	??_isupper+2,w,c
  4421  0018FE  B0D8               	btfsc	status,0,c
  4422  001900  D002               	goto	u1520
  4423  001902  0E01               	movlw	1
  4424  001904  D001               	goto	u1530
  4425  001906                     u1520:
  4426  001906  0E00               	movlw	0
  4427  001908                     u1530:
  4428  001908  6E01               	movwf	?_isupper,c
  4429  00190A  6A02               	clrf	?_isupper+1,c
  4430  00190C  0012               	return		;funcret
  4431  00190E                     __end_of_isupper:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _isalpha *****************
  4435 ;; Defined at:
  4436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  c               2    0[COMRAM] int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    0[COMRAM] int 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        6 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_xtoa
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text19
  4465  001816                     __ptext19:
  4466                           	opt callstack 0
  4467  001816                     _isalpha:
  4468                           	opt callstack 25
  4469                           
  4470                           ;incstack = 0
  4471  001816  0E9F               	movlw	159
  4472  001818  6E03               	movwf	??_isalpha& (0+255),c
  4473  00181A  0EFF               	movlw	255
  4474  00181C  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4475  00181E  0E20               	movlw	32
  4476  001820  1001               	iorwf	isalpha@c,w,c
  4477  001822  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4478  001824  0E00               	movlw	0
  4479  001826  1002               	iorwf	isalpha@c+1,w,c
  4480  001828  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4481  00182A  5003               	movf	??_isalpha,w,c
  4482  00182C  2605               	addwf	??_isalpha+2,f,c
  4483  00182E  5004               	movf	??_isalpha+1,w,c
  4484  001830  2206               	addwfc	??_isalpha+3,f,c
  4485  001832  5006               	movf	??_isalpha+3,w,c
  4486  001834  E106               	bnz	u1540
  4487  001836  0E1A               	movlw	26
  4488  001838  5C05               	subwf	??_isalpha+2,w,c
  4489  00183A  B0D8               	btfsc	status,0,c
  4490  00183C  D002               	goto	u1540
  4491  00183E  0E01               	movlw	1
  4492  001840  D001               	goto	u1550
  4493  001842                     u1540:
  4494  001842  0E00               	movlw	0
  4495  001844                     u1550:
  4496  001844  6E01               	movwf	?_isalpha,c
  4497  001846  6A02               	clrf	?_isalpha+1,c
  4498  001848  0012               	return		;funcret
  4499  00184A                     __end_of_isalpha:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _stoa *****************
  4503 ;; Defined at:
  4504 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4507 ;;		 -> NULL(0), 
  4508 ;;  s               2   15[COMRAM] PTR unsigned char 
  4509 ;;		 -> ?_printf(2), STR_43(16), STR_41(14), STR_39(11), 
  4510 ;;		 -> STR_37(9), STR_35(16), STR_33(13), STR_31(13), 
  4511 ;;		 -> STR_29(9), STR_27(13), STR_25(14), STR_23(10), 
  4512 ;;		 -> STR_19(9), STR_16(14), STR_14(17), STR_12(15), 
  4513 ;;		 -> STR_10(9), STR_8(16), STR_6(14), STR_4(16), 
  4514 ;;		 -> STR_2(12), 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  nuls            7   18[COMRAM] unsigned char [7]
  4517 ;;  l               2   33[COMRAM] int 
  4518 ;;  p               2   31[COMRAM] int 
  4519 ;;  cp              2   29[COMRAM] PTR unsigned char 
  4520 ;;		 -> ?_printf(2), stoa@nuls(7), STR_43(16), STR_41(14), 
  4521 ;;		 -> STR_39(11), STR_37(9), STR_35(16), STR_33(13), 
  4522 ;;		 -> STR_31(13), STR_29(9), STR_27(13), STR_25(14), 
  4523 ;;		 -> STR_23(10), STR_19(9), STR_16(14), STR_14(17), 
  4524 ;;		 -> STR_12(15), STR_10(9), STR_8(16), STR_6(14), 
  4525 ;;		 -> STR_4(16), STR_2(12), 
  4526 ;;  w               2   27[COMRAM] int 
  4527 ;;  i               2   25[COMRAM] int 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  2   13[COMRAM] int 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;Total ram usage:       22 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    6
  4544 ;; This function calls:
  4545 ;;		_fputc
  4546 ;;		_strlen
  4547 ;; This function is called by:
  4548 ;;		_vfpfcnvrt
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text20
  4553  000FA8                     __ptext20:
  4554                           	opt callstack 0
  4555  000FA8                     _stoa:
  4556                           	opt callstack 21
  4557                           
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4559                           
  4560                           ;incstack = 0
  4561  000FA8  EE20  F0D7         	lfsr	2,stoa@F1139
  4562  000FAC  EE10  F013         	lfsr	1,stoa@nuls
  4563  000FB0  0E06               	movlw	6
  4564  000FB2                     u1911:
  4565  000FB2  CFDB FFE3          	movff	plusw2,plusw1
  4566  000FB6  06E8               	decf	wreg,f,c
  4567  000FB8  E2FC               	bc	u1911
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4570  000FBA  C010  F01E         	movff	stoa@s,stoa@cp
  4571  000FBE  C011  F01F         	movff	stoa@s+1,stoa@cp+1
  4572                           
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4574  000FC2  501E               	movf	stoa@cp,w,c
  4575  000FC4  101F               	iorwf	stoa@cp+1,w,c
  4576  000FC6  A4D8               	btfss	status,2,c
  4577  000FC8  D004               	goto	l2547
  4578                           
  4579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4580  000FCA  0E13               	movlw	low stoa@nuls
  4581  000FCC  6E1E               	movwf	stoa@cp,c
  4582  000FCE  0E00               	movlw	high stoa@nuls
  4583  000FD0  6E1F               	movwf	stoa@cp+1,c
  4584  000FD2                     l2547:
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4587  000FD2  C01E  F001         	movff	stoa@cp,strlen@s
  4588  000FD6  C01F  F002         	movff	stoa@cp+1,strlen@s+1
  4589  000FDA  EC90  F00B         	call	_strlen	;wreg free
  4590  000FDE  C001  F022         	movff	?_strlen,stoa@l
  4591  000FE2  C002  F023         	movff	?_strlen+1,stoa@l+1
  4592                           
  4593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4594  000FE6  C084  F020         	movff	_prec,stoa@p
  4595  000FEA  C085  F021         	movff	_prec+1,stoa@p+1
  4596                           
  4597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4598  000FEE  BE21               	btfsc	stoa@p+1,7,c
  4599  000FF0  D00E               	goto	l331
  4600  000FF2  5022               	movf	stoa@l,w,c
  4601  000FF4  5C20               	subwf	stoa@p,w,c
  4602  000FF6  5021               	movf	stoa@p+1,w,c
  4603  000FF8  0A80               	xorlw	128
  4604  000FFA  6E12               	movwf	??_stoa& (0+255),c
  4605  000FFC  5023               	movf	stoa@l+1,w,c
  4606  000FFE  0A80               	xorlw	128
  4607  001000  5812               	subwfb	??_stoa& (0+255),w,c
  4608  001002  B0D8               	btfsc	status,0,c
  4609  001004  D004               	goto	l331
  4610  001006  C020  F022         	movff	stoa@p,stoa@l
  4611  00100A  C021  F023         	movff	stoa@p+1,stoa@l+1
  4612  00100E                     l331:
  4613                           
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4615  00100E  C022  F020         	movff	stoa@l,stoa@p
  4616  001012  C023  F021         	movff	stoa@l+1,stoa@p+1
  4617                           
  4618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4619  001016  C082  F01C         	movff	_width,stoa@w
  4620  00101A  C083  F01D         	movff	_width+1,stoa@w+1
  4621                           
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4623  00101E  0100               	movlb	0	; () banked
  4624  001020  A186               	btfss	_flags& (0+255),0,b
  4625  001022  D00D               	goto	l2561
  4626  001024  D016               	goto	u1960
  4627  001026                     l2557:
  4628                           
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4630  001026  0E00               	movlw	0
  4631  001028  6E06               	movwf	fputc@c+1,c
  4632  00102A  0E20               	movlw	32
  4633  00102C  6E05               	movwf	fputc@c,c
  4634  00102E  C00E  F007         	movff	stoa@fp,fputc@fp
  4635  001032  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4636  001036  EC74  F00A         	call	_fputc	;wreg free
  4637                           
  4638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4639  00103A  4A22               	infsnz	stoa@l,f,c
  4640  00103C  2A23               	incf	stoa@l+1,f,c
  4641  00103E                     l2561:
  4642                           
  4643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4644  00103E  501C               	movf	stoa@w,w,c
  4645  001040  5C22               	subwf	stoa@l,w,c
  4646  001042  5023               	movf	stoa@l+1,w,c
  4647  001044  0A80               	xorlw	128
  4648  001046  6E12               	movwf	??_stoa& (0+255),c
  4649  001048  501D               	movf	stoa@w+1,w,c
  4650  00104A  0A80               	xorlw	128
  4651  00104C  5812               	subwfb	??_stoa& (0+255),w,c
  4652  00104E  A0D8               	btfss	status,0,c
  4653  001050  D7EA               	goto	l2557
  4654  001052                     u1960:
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4657  001052  0E00               	movlw	0
  4658  001054  6E1B               	movwf	stoa@i+1,c
  4659  001056  0E00               	movlw	0
  4660  001058  6E1A               	movwf	stoa@i,c
  4661                           
  4662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4663  00105A  D01F               	goto	l2571
  4664  00105C                     l2565:
  4665                           
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4667  00105C  C01E  FFF6         	movff	stoa@cp,tblptrl
  4668  001060  C01F  FFF7         	movff	stoa@cp+1,tblptrh
  4669  001064  0E00               	movlw	low (__mediumconst shr (0+16))
  4670  001066  6EF8               	movwf	tblptru,c
  4671  001068  0E0F               	movlw	(high __ramtop+-1)
  4672  00106A  64F7               	cpfsgt	tblptrh,c
  4673  00106C  D003               	bra	u1977
  4674  00106E  0008               	tblrd		*
  4675  001070  50F5               	movf	tablat,w,c
  4676  001072  D005               	bra	u1970
  4677  001074                     u1977:
  4678  001074  CFF6 FFE1          	movff	tblptrl,fsr1l
  4679  001078  CFF7 FFE2          	movff	tblptrh,fsr1h
  4680  00107C  50E7               	movf	indf1,w,c
  4681  00107E                     u1970:
  4682  00107E  6E12               	movwf	??_stoa& (0+255),c
  4683  001080  5012               	movf	??_stoa,w,c
  4684  001082  6E05               	movwf	fputc@c,c
  4685  001084  6A06               	clrf	fputc@c+1,c
  4686  001086  C00E  F007         	movff	stoa@fp,fputc@fp
  4687  00108A  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4688  00108E  EC74  F00A         	call	_fputc	;wreg free
  4689                           
  4690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4691  001092  4A1E               	infsnz	stoa@cp,f,c
  4692  001094  2A1F               	incf	stoa@cp+1,f,c
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4695  001096  4A1A               	infsnz	stoa@i,f,c
  4696  001098  2A1B               	incf	stoa@i+1,f,c
  4697  00109A                     l2571:
  4698                           
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4700  00109A  5020               	movf	stoa@p,w,c
  4701  00109C  5C1A               	subwf	stoa@i,w,c
  4702  00109E  501B               	movf	stoa@i+1,w,c
  4703  0010A0  0A80               	xorlw	128
  4704  0010A2  6E12               	movwf	??_stoa& (0+255),c
  4705  0010A4  5021               	movf	stoa@p+1,w,c
  4706  0010A6  0A80               	xorlw	128
  4707  0010A8  5812               	subwfb	??_stoa& (0+255),w,c
  4708  0010AA  A0D8               	btfss	status,0,c
  4709  0010AC  D7D7               	goto	l2565
  4710                           
  4711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4712  0010AE  0100               	movlb	0	; () banked
  4713  0010B0  B186               	btfsc	_flags& (0+255),0,b
  4714  0010B2  D00D               	goto	l2579
  4715  0010B4  D016               	goto	u2000
  4716  0010B6                     l2575:
  4717                           
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4719  0010B6  0E00               	movlw	0
  4720  0010B8  6E06               	movwf	fputc@c+1,c
  4721  0010BA  0E20               	movlw	32
  4722  0010BC  6E05               	movwf	fputc@c,c
  4723  0010BE  C00E  F007         	movff	stoa@fp,fputc@fp
  4724  0010C2  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  4725  0010C6  EC74  F00A         	call	_fputc	;wreg free
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4728  0010CA  4A22               	infsnz	stoa@l,f,c
  4729  0010CC  2A23               	incf	stoa@l+1,f,c
  4730  0010CE                     l2579:
  4731                           
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4733  0010CE  501C               	movf	stoa@w,w,c
  4734  0010D0  5C22               	subwf	stoa@l,w,c
  4735  0010D2  5023               	movf	stoa@l+1,w,c
  4736  0010D4  0A80               	xorlw	128
  4737  0010D6  6E12               	movwf	??_stoa& (0+255),c
  4738  0010D8  501D               	movf	stoa@w+1,w,c
  4739  0010DA  0A80               	xorlw	128
  4740  0010DC  5812               	subwfb	??_stoa& (0+255),w,c
  4741  0010DE  A0D8               	btfss	status,0,c
  4742  0010E0  D7EA               	goto	l2575
  4743  0010E2                     u2000:
  4744                           
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4746                           
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  4748  0010E2  C022  F00E         	movff	stoa@l,?_stoa
  4749  0010E6  C023  F00F         	movff	stoa@l+1,?_stoa+1
  4750  0010EA  0012               	return		;funcret
  4751  0010EC                     __end_of_stoa:
  4752                           	opt callstack 0
  4753                           
  4754 ;; *************** function _dtoa *****************
  4755 ;; Defined at:
  4756 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4759 ;;		 -> NULL(0), 
  4760 ;;  d               8   33[COMRAM] long long 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  n               8   57[COMRAM] long long 
  4763 ;;  i               2   65[COMRAM] int 
  4764 ;;  s               2   55[COMRAM] int 
  4765 ;;  w               2   53[COMRAM] int 
  4766 ;;  p               2   51[COMRAM] int 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2   31[COMRAM] int 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:       36 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    8
  4783 ;; This function calls:
  4784 ;;		___aodiv
  4785 ;;		___aomod
  4786 ;;		_abs
  4787 ;;		_pad
  4788 ;; This function is called by:
  4789 ;;		_vfpfcnvrt
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text21
  4794  000824                     __ptext21:
  4795                           	opt callstack 0
  4796  000824                     _dtoa:
  4797                           	opt callstack 19
  4798                           
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4800                           
  4801                           ;incstack = 0
  4802  000824  C022  F03A         	movff	dtoa@d,dtoa@n
  4803  000828  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  4804  00082C  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  4805  000830  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  4806  000834  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  4807  000838  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  4808  00083C  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  4809  000840  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  4810                           
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4812  000844  AE41               	btfss	dtoa@n+7,7,c
  4813  000846  D002               	goto	u1760
  4814  000848  0E01               	movlw	1
  4815  00084A  D001               	goto	u1770
  4816  00084C                     u1760:
  4817  00084C  0E00               	movlw	0
  4818  00084E                     u1770:
  4819  00084E  6E38               	movwf	dtoa@s,c
  4820  000850  6A39               	clrf	dtoa@s+1,c
  4821                           
  4822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4823  000852  5038               	movf	dtoa@s,w,c
  4824  000854  1039               	iorwf	dtoa@s+1,w,c
  4825  000856  B4D8               	btfsc	status,2,c
  4826  000858  D010               	goto	l2483
  4827                           
  4828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4829  00085A  1E41               	comf	dtoa@n+7,f,c
  4830  00085C  1E40               	comf	dtoa@n+6,f,c
  4831  00085E  1E3F               	comf	dtoa@n+5,f,c
  4832  000860  1E3E               	comf	dtoa@n+4,f,c
  4833  000862  1E3D               	comf	dtoa@n+3,f,c
  4834  000864  1E3C               	comf	dtoa@n+2,f,c
  4835  000866  1E3B               	comf	dtoa@n+1,f,c
  4836  000868  6C3A               	negf	dtoa@n,c
  4837  00086A  0E00               	movlw	0
  4838  00086C  223B               	addwfc	dtoa@n+1,f,c
  4839  00086E  223C               	addwfc	dtoa@n+2,f,c
  4840  000870  223D               	addwfc	dtoa@n+3,f,c
  4841  000872  223E               	addwfc	dtoa@n+4,f,c
  4842  000874  223F               	addwfc	dtoa@n+5,f,c
  4843  000876  2240               	addwfc	dtoa@n+6,f,c
  4844  000878  2241               	addwfc	dtoa@n+7,f,c
  4845  00087A                     l2483:
  4846                           
  4847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4848  00087A  0100               	movlb	0	; () banked
  4849  00087C  AF85               	btfss	(_prec+1)& (0+255),7,b
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4853  00087E  9386               	bcf	_flags& (0+255),1,b
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4857  000880  BF85               	btfsc	(_prec+1)& (0+255),7,b
  4858  000882  D005               	goto	u1800
  4859  000884  5185               	movf	(_prec+1)& (0+255),w,b
  4860  000886  E108               	bnz	l302
  4861  000888  0584               	decf	_prec& (0+255),w,b
  4862  00088A  B0D8               	btfsc	status,0,c
  4863  00088C  D005               	goto	l302
  4864  00088E                     u1800:
  4865                           
  4866                           ; BSR set to: 0
  4867  00088E  0E00               	movlw	0
  4868  000890  6E35               	movwf	dtoa@p+1,c
  4869  000892  0E01               	movlw	1
  4870  000894  6E34               	movwf	dtoa@p,c
  4871  000896  D004               	goto	l304
  4872  000898                     l302:
  4873                           
  4874                           ; BSR set to: 0
  4875  000898  C084  F034         	movff	_prec,dtoa@p
  4876  00089C  C085  F035         	movff	_prec+1,dtoa@p+1
  4877  0008A0                     l304:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4881  0008A0  C082  F036         	movff	_width,dtoa@w
  4882  0008A4  C083  F037         	movff	_width+1,dtoa@w+1
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4886  0008A8  5038               	movf	dtoa@s,w,c
  4887  0008AA  1039               	iorwf	dtoa@s+1,w,c
  4888  0008AC  A4D8               	btfss	status,2,c
  4889  0008AE  D002               	goto	u1820
  4890                           
  4891                           ; BSR set to: 0
  4892  0008B0  A586               	btfss	_flags& (0+255),2,b
  4893  0008B2  D003               	goto	l2497
  4894  0008B4                     u1820:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4898  0008B4  0636               	decf	dtoa@w,f,c
  4899  0008B6  A0D8               	btfss	status,0,c
  4900  0008B8  0637               	decf	dtoa@w+1,f,c
  4901  0008BA                     l2497:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4905  0008BA  0E00               	movlw	0
  4906  0008BC  6E43               	movwf	dtoa@i+1,c
  4907  0008BE  0E1F               	movlw	31
  4908  0008C0  6E42               	movwf	dtoa@i,c
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4912  0008C2  0E00               	movlw	0
  4913  0008C4  6FAD               	movwf	(_dbuf+31)& (0+255),b
  4914                           
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4916  0008C6  D07C               	goto	l2511
  4917  0008C8                     l2501:
  4918                           
  4919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4920  0008C8  0642               	decf	dtoa@i,f,c
  4921  0008CA  A0D8               	btfss	status,0,c
  4922  0008CC  0643               	decf	dtoa@i+1,f,c
  4923                           
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4925  0008CE  0E8E               	movlw	low _dbuf
  4926  0008D0  2442               	addwf	dtoa@i,w,c
  4927  0008D2  6ED9               	movwf	fsr2l,c
  4928  0008D4  0E00               	movlw	high _dbuf
  4929  0008D6  2043               	addwfc	dtoa@i+1,w,c
  4930  0008D8  6EDA               	movwf	fsr2h,c
  4931  0008DA  C03A  F001         	movff	dtoa@n,___aomod@dividend
  4932  0008DE  C03B  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4933  0008E2  C03C  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4934  0008E6  C03D  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4935  0008EA  C03E  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4936  0008EE  C03F  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4937  0008F2  C040  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4938  0008F6  C041  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4939  0008FA  0E0A               	movlw	10
  4940  0008FC  6E09               	movwf	___aomod@divisor,c
  4941  0008FE  0E00               	movlw	0
  4942  000900  6E0A               	movwf	___aomod@divisor+1,c
  4943  000902  0E00               	movlw	0
  4944  000904  6E0B               	movwf	___aomod@divisor+2,c
  4945  000906  0E00               	movlw	0
  4946  000908  6E0C               	movwf	___aomod@divisor+3,c
  4947  00090A  0E00               	movlw	0
  4948  00090C  6E0D               	movwf	___aomod@divisor+4,c
  4949  00090E  0E00               	movlw	0
  4950  000910  6E0E               	movwf	___aomod@divisor+5,c
  4951  000912  0E00               	movlw	0
  4952  000914  6E0F               	movwf	___aomod@divisor+6,c
  4953  000916  0E00               	movlw	0
  4954  000918  6E10               	movwf	___aomod@divisor+7,c
  4955  00091A  EC16  F009         	call	___aomod	;wreg free
  4956  00091E  C001  F02A         	movff	?___aomod,??_dtoa
  4957  000922  C002  F02B         	movff	?___aomod+1,??_dtoa+1
  4958  000926  C003  F02C         	movff	?___aomod+2,??_dtoa+2
  4959  00092A  C004  F02D         	movff	?___aomod+3,??_dtoa+3
  4960  00092E  C005  F02E         	movff	?___aomod+4,??_dtoa+4
  4961  000932  C006  F02F         	movff	?___aomod+5,??_dtoa+5
  4962  000936  C007  F030         	movff	?___aomod+6,??_dtoa+6
  4963  00093A  C008  F031         	movff	?___aomod+7,??_dtoa+7
  4964  00093E  C02A  F013         	movff	??_dtoa,abs@a
  4965  000942  C02C  F014         	movff	??_dtoa+2,abs@a+1
  4966  000946  EC3E  F00C         	call	_abs	;wreg free
  4967  00094A  5013               	movf	?_abs,w,c
  4968  00094C  0F30               	addlw	48
  4969  00094E  6EDF               	movwf	indf2,c
  4970                           
  4971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4972  000950  0634               	decf	dtoa@p,f,c
  4973  000952  A0D8               	btfss	status,0,c
  4974  000954  0635               	decf	dtoa@p+1,f,c
  4975                           
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4977  000956  0636               	decf	dtoa@w,f,c
  4978  000958  A0D8               	btfss	status,0,c
  4979  00095A  0637               	decf	dtoa@w+1,f,c
  4980                           
  4981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4982  00095C  C03A  F001         	movff	dtoa@n,___aodiv@dividend
  4983  000960  C03B  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4984  000964  C03C  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4985  000968  C03D  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4986  00096C  C03E  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4987  000970  C03F  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4988  000974  C040  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4989  000978  C041  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4990  00097C  0E0A               	movlw	10
  4991  00097E  6E09               	movwf	___aodiv@divisor,c
  4992  000980  0E00               	movlw	0
  4993  000982  6E0A               	movwf	___aodiv@divisor+1,c
  4994  000984  0E00               	movlw	0
  4995  000986  6E0B               	movwf	___aodiv@divisor+2,c
  4996  000988  0E00               	movlw	0
  4997  00098A  6E0C               	movwf	___aodiv@divisor+3,c
  4998  00098C  0E00               	movlw	0
  4999  00098E  6E0D               	movwf	___aodiv@divisor+4,c
  5000  000990  0E00               	movlw	0
  5001  000992  6E0E               	movwf	___aodiv@divisor+5,c
  5002  000994  0E00               	movlw	0
  5003  000996  6E0F               	movwf	___aodiv@divisor+6,c
  5004  000998  0E00               	movlw	0
  5005  00099A  6E10               	movwf	___aodiv@divisor+7,c
  5006  00099C  EC30  F007         	call	___aodiv	;wreg free
  5007  0009A0  C001  F03A         	movff	?___aodiv,dtoa@n
  5008  0009A4  C002  F03B         	movff	?___aodiv+1,dtoa@n+1
  5009  0009A8  C003  F03C         	movff	?___aodiv+2,dtoa@n+2
  5010  0009AC  C004  F03D         	movff	?___aodiv+3,dtoa@n+3
  5011  0009B0  C005  F03E         	movff	?___aodiv+4,dtoa@n+4
  5012  0009B4  C006  F03F         	movff	?___aodiv+5,dtoa@n+5
  5013  0009B8  C007  F040         	movff	?___aodiv+6,dtoa@n+6
  5014  0009BC  C008  F041         	movff	?___aodiv+7,dtoa@n+7
  5015  0009C0                     l2511:
  5016                           
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5018  0009C0  BE43               	btfsc	dtoa@i+1,7,c
  5019  0009C2  D020               	goto	u1870
  5020  0009C4  5043               	movf	dtoa@i+1,w,c
  5021  0009C6  E103               	bnz	u1830
  5022  0009C8  0442               	decf	dtoa@i,w,c
  5023  0009CA  A0D8               	btfss	status,0,c
  5024  0009CC  D01B               	goto	u1870
  5025  0009CE                     u1830:
  5026  0009CE  503A               	movf	dtoa@n,w,c
  5027  0009D0  103B               	iorwf	dtoa@n+1,w,c
  5028  0009D2  103C               	iorwf	dtoa@n+2,w,c
  5029  0009D4  103D               	iorwf	dtoa@n+3,w,c
  5030  0009D6  103E               	iorwf	dtoa@n+4,w,c
  5031  0009D8  103F               	iorwf	dtoa@n+5,w,c
  5032  0009DA  1040               	iorwf	dtoa@n+6,w,c
  5033  0009DC  1041               	iorwf	dtoa@n+7,w,c
  5034  0009DE  A4D8               	btfss	status,2,c
  5035  0009E0  D773               	goto	l2501
  5036  0009E2  BE35               	btfsc	dtoa@p+1,7,c
  5037  0009E4  D005               	goto	u1850
  5038  0009E6  5035               	movf	dtoa@p+1,w,c
  5039  0009E8  E102               	bnz	u1851
  5040  0009EA  0434               	decf	dtoa@p,w,c
  5041  0009EC  B0D8               	btfsc	status,0,c
  5042  0009EE                     u1851:
  5043  0009EE  D76C               	goto	l2501
  5044  0009F0                     u1850:
  5045  0009F0  BE37               	btfsc	dtoa@w+1,7,c
  5046  0009F2  D008               	goto	u1870
  5047  0009F4  5037               	movf	dtoa@w+1,w,c
  5048  0009F6  E103               	bnz	u1860
  5049  0009F8  0436               	decf	dtoa@w,w,c
  5050  0009FA  A0D8               	btfss	status,0,c
  5051  0009FC  D003               	goto	u1870
  5052  0009FE                     u1860:
  5053  0009FE  0100               	movlb	0	; () banked
  5054  000A00  B386               	btfsc	_flags& (0+255),1,b
  5055  000A02  D762               	goto	l2501
  5056  000A04                     u1870:
  5057                           
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5059  000A04  5038               	movf	dtoa@s,w,c
  5060  000A06  1039               	iorwf	dtoa@s+1,w,c
  5061  000A08  A4D8               	btfss	status,2,c
  5062  000A0A  D003               	goto	u1890
  5063  000A0C  0100               	movlb	0	; () banked
  5064  000A0E  A586               	btfss	_flags& (0+255),2,b
  5065  000A10  D017               	goto	l2535
  5066  000A12                     u1890:
  5067                           
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5069  000A12  0642               	decf	dtoa@i,f,c
  5070  000A14  A0D8               	btfss	status,0,c
  5071  000A16  0643               	decf	dtoa@i+1,f,c
  5072                           
  5073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5074  000A18  5038               	movf	dtoa@s,w,c
  5075  000A1A  1039               	iorwf	dtoa@s+1,w,c
  5076  000A1C  A4D8               	btfss	status,2,c
  5077  000A1E  D004               	goto	l2531
  5078  000A20  0E00               	movlw	0
  5079  000A22  6E33               	movwf	_dtoa$574+1,c
  5080  000A24  0E2B               	movlw	43
  5081  000A26  D003               	goto	L11
  5082  000A28                     l2531:
  5083  000A28  0E00               	movlw	0
  5084  000A2A  6E33               	movwf	_dtoa$574+1,c
  5085  000A2C  0E2D               	movlw	45
  5086  000A2E                     L11:
  5087  000A2E  6E32               	movwf	_dtoa$574,c
  5088  000A30  0E8E               	movlw	low _dbuf
  5089  000A32  2442               	addwf	dtoa@i,w,c
  5090  000A34  6ED9               	movwf	fsr2l,c
  5091  000A36  0E00               	movlw	high _dbuf
  5092  000A38  2043               	addwfc	dtoa@i+1,w,c
  5093  000A3A  6EDA               	movwf	fsr2h,c
  5094  000A3C  C032  FFDF         	movff	_dtoa$574,indf2
  5095  000A40                     l2535:
  5096                           
  5097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5098  000A40  C020  F015         	movff	dtoa@fp,pad@fp
  5099  000A44  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5100  000A48  0E8E               	movlw	low _dbuf
  5101  000A4A  2442               	addwf	dtoa@i,w,c
  5102  000A4C  6E17               	movwf	pad@buf,c
  5103  000A4E  0E00               	movlw	high _dbuf
  5104  000A50  2043               	addwfc	dtoa@i+1,w,c
  5105  000A52  6E18               	movwf	pad@buf+1,c
  5106  000A54  C036  F019         	movff	dtoa@w,pad@p
  5107  000A58  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5108  000A5C  ECA8  F009         	call	_pad	;wreg free
  5109  000A60  C015  F020         	movff	?_pad,?_dtoa
  5110  000A64  C016  F021         	movff	?_pad+1,?_dtoa+1
  5111  000A68  0012               	return		;funcret
  5112  000A6A                     __end_of_dtoa:
  5113                           	opt callstack 0
  5114                           
  5115 ;; *************** function _pad *****************
  5116 ;; Defined at:
  5117 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5120 ;;		 -> NULL(0), 
  5121 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5122 ;;		 -> dbuf(32), 
  5123 ;;  p               2   24[COMRAM] int 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  w               2   29[COMRAM] int 
  5126 ;;  i               2   27[COMRAM] int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2   20[COMRAM] int 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:       11 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    7
  5143 ;; This function calls:
  5144 ;;		_fputc
  5145 ;;		_fputs
  5146 ;;		_strlen
  5147 ;; This function is called by:
  5148 ;;		_dtoa
  5149 ;;		_xtoa
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text22
  5154  001350                     __ptext22:
  5155                           	opt callstack 0
  5156  001350                     _pad:
  5157                           	opt callstack 19
  5158                           
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5160                           
  5161                           ;incstack = 0
  5162  001350  0100               	movlb	0	; () banked
  5163  001352  A186               	btfss	_flags& (0+255),0,b
  5164  001354  D00A               	goto	l2335
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5168  001356  C017  F00E         	movff	pad@buf,fputs@s
  5169  00135A  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5170  00135E  C015  F010         	movff	pad@fp,fputs@fp
  5171  001362  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5172  001366  ECEF  F00B         	call	_fputs	;wreg free
  5173  00136A                     l2335:
  5174                           
  5175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5176  00136A  BE1A               	btfsc	pad@p+1,7,c
  5177  00136C  D005               	goto	l2339
  5178  00136E  C019  F01E         	movff	pad@p,pad@w
  5179  001372  C01A  F01F         	movff	pad@p+1,pad@w+1
  5180  001376  D004               	goto	l291
  5181  001378                     l2339:
  5182  001378  0E00               	movlw	0
  5183  00137A  6E1F               	movwf	pad@w+1,c
  5184  00137C  0E00               	movlw	0
  5185  00137E  6E1E               	movwf	pad@w,c
  5186  001380                     l291:
  5187                           
  5188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5189  001380  0E00               	movlw	0
  5190  001382  6E1D               	movwf	pad@i+1,c
  5191  001384  0E00               	movlw	0
  5192  001386  6E1C               	movwf	pad@i,c
  5193                           
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5195  001388  D00C               	goto	l2345
  5196  00138A                     l2341:
  5197                           
  5198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5199  00138A  0E00               	movlw	0
  5200  00138C  6E06               	movwf	fputc@c+1,c
  5201  00138E  0E20               	movlw	32
  5202  001390  6E05               	movwf	fputc@c,c
  5203  001392  C015  F007         	movff	pad@fp,fputc@fp
  5204  001396  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5205  00139A  EC74  F00A         	call	_fputc	;wreg free
  5206                           
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5208  00139E  4A1C               	infsnz	pad@i,f,c
  5209  0013A0  2A1D               	incf	pad@i+1,f,c
  5210  0013A2                     l2345:
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5213  0013A2  501E               	movf	pad@w,w,c
  5214  0013A4  5C1C               	subwf	pad@i,w,c
  5215  0013A6  501D               	movf	pad@i+1,w,c
  5216  0013A8  0A80               	xorlw	128
  5217  0013AA  6E1B               	movwf	??_pad& (0+255),c
  5218  0013AC  501F               	movf	pad@w+1,w,c
  5219  0013AE  0A80               	xorlw	128
  5220  0013B0  581B               	subwfb	??_pad& (0+255),w,c
  5221  0013B2  A0D8               	btfss	status,0,c
  5222  0013B4  D7EA               	goto	l2341
  5223                           
  5224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5225  0013B6  0100               	movlb	0	; () banked
  5226  0013B8  B186               	btfsc	_flags& (0+255),0,b
  5227  0013BA  D00A               	goto	l2349
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5231  0013BC  C017  F00E         	movff	pad@buf,fputs@s
  5232  0013C0  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5233  0013C4  C015  F010         	movff	pad@fp,fputs@fp
  5234  0013C8  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5235  0013CC  ECEF  F00B         	call	_fputs	;wreg free
  5236  0013D0                     l2349:
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5239  0013D0  C017  F001         	movff	pad@buf,strlen@s
  5240  0013D4  C018  F002         	movff	pad@buf+1,strlen@s+1
  5241  0013D8  EC90  F00B         	call	_strlen	;wreg free
  5242  0013DC  501E               	movf	pad@w,w,c
  5243  0013DE  2401               	addwf	?_strlen,w,c
  5244  0013E0  6E15               	movwf	?_pad,c
  5245  0013E2  501F               	movf	pad@w+1,w,c
  5246  0013E4  2002               	addwfc	?_strlen+1,w,c
  5247  0013E6  6E16               	movwf	?_pad+1,c
  5248  0013E8  0012               	return		;funcret
  5249  0013EA                     __end_of_pad:
  5250                           	opt callstack 0
  5251                           
  5252 ;; *************** function _strlen *****************
  5253 ;; Defined at:
  5254 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5257 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_43(16), 
  5258 ;;		 -> STR_41(14), STR_39(11), STR_37(9), STR_35(16), 
  5259 ;;		 -> STR_33(13), STR_31(13), STR_29(9), STR_27(13), 
  5260 ;;		 -> STR_25(14), STR_23(10), STR_19(9), STR_16(14), 
  5261 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  5262 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5265 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_43(16), 
  5266 ;;		 -> STR_41(14), STR_39(11), STR_37(9), STR_35(16), 
  5267 ;;		 -> STR_33(13), STR_31(13), STR_29(9), STR_27(13), 
  5268 ;;		 -> STR_25(14), STR_23(10), STR_19(9), STR_16(14), 
  5269 ;;		 -> STR_14(17), STR_12(15), STR_10(9), STR_8(16), 
  5270 ;;		 -> STR_6(14), STR_4(16), STR_2(12), 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2    0[COMRAM] unsigned int 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        4 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_pad
  5291 ;;		_stoa
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text23
  5296  001720                     __ptext23:
  5297                           	opt callstack 0
  5298  001720                     _strlen:
  5299                           	opt callstack 24
  5300                           
  5301                           ;incstack = 0
  5302  001720  C001  F003         	movff	strlen@s,strlen@a
  5303  001724  C002  F004         	movff	strlen@s+1,strlen@a+1
  5304  001728  D002               	goto	l2321
  5305  00172A                     l2319:
  5306  00172A  4A01               	infsnz	strlen@s,f,c
  5307  00172C  2A02               	incf	strlen@s+1,f,c
  5308  00172E                     l2321:
  5309  00172E  C001  FFF6         	movff	strlen@s,tblptrl
  5310  001732  C002  FFF7         	movff	strlen@s+1,tblptrh
  5311  001736  0E00               	movlw	low (__mediumconst shr (0+16))
  5312  001738  6EF8               	movwf	tblptru,c
  5313  00173A  0E0F               	movlw	(high __ramtop+-1)
  5314  00173C  64F7               	cpfsgt	tblptrh,c
  5315  00173E  D003               	bra	u1437
  5316  001740  0008               	tblrd		*
  5317  001742  50F5               	movf	tablat,w,c
  5318  001744  D005               	bra	u1430
  5319  001746                     u1437:
  5320  001746  CFF6 FFE1          	movff	tblptrl,fsr1l
  5321  00174A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5322  00174E  50E7               	movf	indf1,w,c
  5323  001750                     u1430:
  5324  001750  0900               	iorlw	0
  5325  001752  A4D8               	btfss	status,2,c
  5326  001754  D7EA               	goto	l2319
  5327  001756  5003               	movf	strlen@a,w,c
  5328  001758  5C01               	subwf	strlen@s,w,c
  5329  00175A  6E01               	movwf	?_strlen,c
  5330  00175C  5004               	movf	strlen@a+1,w,c
  5331  00175E  5802               	subwfb	strlen@s+1,w,c
  5332  001760  6E02               	movwf	?_strlen+1,c
  5333  001762  0012               	return		;funcret
  5334  001764                     __end_of_strlen:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _fputs *****************
  5338 ;; Defined at:
  5339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5342 ;;		 -> dbuf(32), 
  5343 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5344 ;;		 -> NULL(0), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  i               2   18[COMRAM] int 
  5347 ;;  c               1   17[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2   13[COMRAM] int 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;Total ram usage:        7 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    6
  5364 ;; This function calls:
  5365 ;;		_fputc
  5366 ;; This function is called by:
  5367 ;;		_pad
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text24
  5372  0017DE                     __ptext24:
  5373                           	opt callstack 0
  5374  0017DE                     _fputs:
  5375                           	opt callstack 19
  5376                           
  5377                           ;incstack = 0
  5378  0017DE  0E00               	movlw	0
  5379  0017E0  6E14               	movwf	fputs@i+1,c
  5380  0017E2  0E00               	movlw	0
  5381  0017E4  6E13               	movwf	fputs@i,c
  5382  0017E6  D00B               	goto	l2315
  5383  0017E8                     l2311:
  5384  0017E8  C012  F005         	movff	fputs@c,fputc@c
  5385  0017EC  6A06               	clrf	fputc@c+1,c
  5386  0017EE  C010  F007         	movff	fputs@fp,fputc@fp
  5387  0017F2  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5388  0017F6  EC74  F00A         	call	_fputc	;wreg free
  5389  0017FA  4A13               	infsnz	fputs@i,f,c
  5390  0017FC  2A14               	incf	fputs@i+1,f,c
  5391  0017FE                     l2315:
  5392  0017FE  5013               	movf	fputs@i,w,c
  5393  001800  240E               	addwf	fputs@s,w,c
  5394  001802  6ED9               	movwf	fsr2l,c
  5395  001804  5014               	movf	fputs@i+1,w,c
  5396  001806  200F               	addwfc	fputs@s+1,w,c
  5397  001808  6EDA               	movwf	fsr2h,c
  5398  00180A  50DF               	movf	indf2,w,c
  5399  00180C  6E12               	movwf	fputs@c,c
  5400  00180E  5012               	movf	fputs@c,w,c
  5401  001810  B4D8               	btfsc	status,2,c
  5402  001812  0012               	return	
  5403  001814  D7E9               	goto	l2311
  5404  001816                     __end_of_fputs:
  5405                           	opt callstack 0
  5406                           
  5407 ;; *************** function _fputc *****************
  5408 ;; Defined at:
  5409 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  c               2    4[COMRAM] int 
  5412 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5413 ;;		 -> NULL(0), 
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;		None
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  2    4[COMRAM] int 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;Total ram usage:        9 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    5
  5432 ;; This function calls:
  5433 ;;		_putch
  5434 ;; This function is called by:
  5435 ;;		_pad
  5436 ;;		_stoa
  5437 ;;		_vfpfcnvrt
  5438 ;;		_fputs
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text25
  5443  0014E8                     __ptext25:
  5444                           	opt callstack 0
  5445  0014E8                     _fputc:
  5446                           	opt callstack 19
  5447                           
  5448                           ;incstack = 0
  5449  0014E8  5007               	movf	fputc@fp,w,c
  5450  0014EA  1008               	iorwf	fputc@fp+1,w,c
  5451  0014EC  B4D8               	btfsc	status,2,c
  5452  0014EE  D004               	goto	u1390
  5453  0014F0  5007               	movf	fputc@fp,w,c
  5454  0014F2  1008               	iorwf	fputc@fp+1,w,c
  5455  0014F4  A4D8               	btfss	status,2,c
  5456  0014F6  D004               	goto	l2301
  5457  0014F8                     u1390:
  5458  0014F8  5005               	movf	fputc@c,w,c
  5459  0014FA  EC2B  F00D         	call	_putch
  5460  0014FE  0012               	return	
  5461  001500                     l2301:
  5462  001500  EE20 F004          	lfsr	2,4
  5463  001504  5007               	movf	fputc@fp,w,c
  5464  001506  26D9               	addwf	fsr2l,f,c
  5465  001508  5008               	movf	fputc@fp+1,w,c
  5466  00150A  22DA               	addwfc	fsr2h,f,c
  5467  00150C  50DE               	movf	postinc2,w,c
  5468  00150E  10DE               	iorwf	postinc2,w,c
  5469  001510  B4D8               	btfsc	status,2,c
  5470  001512  D016               	goto	u1410
  5471  001514  EE20 F004          	lfsr	2,4
  5472  001518  5007               	movf	fputc@fp,w,c
  5473  00151A  26D9               	addwf	fsr2l,f,c
  5474  00151C  5008               	movf	fputc@fp+1,w,c
  5475  00151E  22DA               	addwfc	fsr2h,f,c
  5476  001520  EE10 F002          	lfsr	1,2
  5477  001524  5007               	movf	fputc@fp,w,c
  5478  001526  26E1               	addwf	fsr1l,f,c
  5479  001528  5008               	movf	fputc@fp+1,w,c
  5480  00152A  22E2               	addwfc	fsr1h,f,c
  5481  00152C  50DE               	movf	postinc2,w,c
  5482  00152E  5CE6               	subwf	postinc1,w,c
  5483  001530  50E6               	movf	postinc1,w,c
  5484  001532  0A80               	xorlw	128
  5485  001534  6E0D               	movwf	(??_fputc+4)& (0+255),c
  5486  001536  50DE               	movf	postinc2,w,c
  5487  001538  0A80               	xorlw	128
  5488  00153A  580D               	subwfb	(??_fputc+4)& (0+255),w,c
  5489  00153C  B0D8               	btfsc	status,0,c
  5490  00153E  0012               	return	
  5491  001540                     u1410:
  5492  001540  EE20 F002          	lfsr	2,2
  5493  001544  5007               	movf	fputc@fp,w,c
  5494  001546  26D9               	addwf	fsr2l,f,c
  5495  001548  5008               	movf	fputc@fp+1,w,c
  5496  00154A  22DA               	addwfc	fsr2h,f,c
  5497  00154C  2ADE               	incf	postinc2,f,c
  5498  00154E  0E00               	movlw	0
  5499  001550  22DD               	addwfc	postdec2,f,c
  5500  001552  0012               	return		;funcret
  5501  001554                     __end_of_fputc:
  5502                           	opt callstack 0
  5503                           
  5504 ;; *************** function _putch *****************
  5505 ;; Defined at:
  5506 ;;		line 102 in file "lcd.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  data            1    wreg     unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  data            1    3[COMRAM] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;Total ram usage:        1 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    4
  5527 ;; This function calls:
  5528 ;;		_send_byte
  5529 ;; This function is called by:
  5530 ;;		_fputc
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text26
  5535  001A56                     __ptext26:
  5536                           	opt callstack 0
  5537  001A56                     _putch:
  5538                           	opt callstack 19
  5539                           
  5540                           ;incstack = 0
  5541                           ;putch@data stored from wreg
  5542  001A56  6E04               	movwf	putch@data,c
  5543                           
  5544                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  5545  001A58  848C               	bsf	3980,2,c	;volatile
  5546                           
  5547                           ;lcd.c: 104:     send_byte((unsigned char)data);
  5548  001A5A  5004               	movf	putch@data,w,c
  5549  001A5C  EC19  F00D         	call	_send_byte
  5550  001A60  0012               	return		;funcret
  5551  001A62                     __end_of_putch:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function _abs *****************
  5555 ;; Defined at:
  5556 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  a               2   18[COMRAM] int 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  2   18[COMRAM] int 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;Total ram usage:        4 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_dtoa
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text27
  5585  00187C                     __ptext27:
  5586                           	opt callstack 0
  5587  00187C                     _abs:
  5588                           	opt callstack 25
  5589                           
  5590                           ;incstack = 0
  5591  00187C  BE14               	btfsc	abs@a+1,7,c
  5592  00187E  D005               	goto	u1510
  5593  001880  5014               	movf	abs@a+1,w,c
  5594  001882  E110               	bnz	l1093
  5595  001884  0413               	decf	abs@a,w,c
  5596  001886  B0D8               	btfsc	status,0,c
  5597  001888  D00D               	goto	l1093
  5598  00188A                     u1510:
  5599  00188A  C013  F015         	movff	abs@a,??_abs
  5600  00188E  C014  F016         	movff	abs@a+1,??_abs+1
  5601  001892  1E15               	comf	??_abs,f,c
  5602  001894  1E16               	comf	??_abs+1,f,c
  5603  001896  4A15               	infsnz	??_abs,f,c
  5604  001898  2A16               	incf	??_abs+1,f,c
  5605  00189A  C015  F013         	movff	??_abs,?_abs
  5606  00189E  C016  F014         	movff	??_abs+1,?_abs+1
  5607  0018A2  0012               	return	
  5608  0018A4                     l1093:
  5609  0018A4  C013  F013         	movff	abs@a,?_abs
  5610  0018A8  C014  F014         	movff	abs@a+1,?_abs+1
  5611  0018AC  0012               	return		;funcret
  5612  0018AE                     __end_of_abs:
  5613                           	opt callstack 0
  5614                           
  5615 ;; *************** function ___aomod *****************
  5616 ;; Defined at:
  5617 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  dividend        8    0[COMRAM] long long 
  5620 ;;  divisor         8    8[COMRAM] long long 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  sign            1   17[COMRAM] unsigned char 
  5623 ;;  counter         1   16[COMRAM] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  8    0[COMRAM] long long 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5633 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:       18 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_dtoa
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text28
  5648  00122C                     __ptext28:
  5649                           	opt callstack 0
  5650  00122C                     ___aomod:
  5651                           	opt callstack 25
  5652                           
  5653                           ;incstack = 0
  5654  00122C  0E00               	movlw	0
  5655  00122E  6E12               	movwf	___aomod@sign,c
  5656  001230  AE08               	btfss	___aomod@dividend+7,7,c
  5657  001232  D012               	goto	l2437
  5658  001234  1E08               	comf	___aomod@dividend+7,f,c
  5659  001236  1E07               	comf	___aomod@dividend+6,f,c
  5660  001238  1E06               	comf	___aomod@dividend+5,f,c
  5661  00123A  1E05               	comf	___aomod@dividend+4,f,c
  5662  00123C  1E04               	comf	___aomod@dividend+3,f,c
  5663  00123E  1E03               	comf	___aomod@dividend+2,f,c
  5664  001240  1E02               	comf	___aomod@dividend+1,f,c
  5665  001242  6C01               	negf	___aomod@dividend,c
  5666  001244  0E00               	movlw	0
  5667  001246  2202               	addwfc	___aomod@dividend+1,f,c
  5668  001248  2203               	addwfc	___aomod@dividend+2,f,c
  5669  00124A  2204               	addwfc	___aomod@dividend+3,f,c
  5670  00124C  2205               	addwfc	___aomod@dividend+4,f,c
  5671  00124E  2206               	addwfc	___aomod@dividend+5,f,c
  5672  001250  2207               	addwfc	___aomod@dividend+6,f,c
  5673  001252  2208               	addwfc	___aomod@dividend+7,f,c
  5674  001254  0E01               	movlw	1
  5675  001256  6E12               	movwf	___aomod@sign,c
  5676  001258                     l2437:
  5677  001258  AE10               	btfss	___aomod@divisor+7,7,c
  5678  00125A  D010               	goto	l2441
  5679  00125C  1E10               	comf	___aomod@divisor+7,f,c
  5680  00125E  1E0F               	comf	___aomod@divisor+6,f,c
  5681  001260  1E0E               	comf	___aomod@divisor+5,f,c
  5682  001262  1E0D               	comf	___aomod@divisor+4,f,c
  5683  001264  1E0C               	comf	___aomod@divisor+3,f,c
  5684  001266  1E0B               	comf	___aomod@divisor+2,f,c
  5685  001268  1E0A               	comf	___aomod@divisor+1,f,c
  5686  00126A  6C09               	negf	___aomod@divisor,c
  5687  00126C  0E00               	movlw	0
  5688  00126E  220A               	addwfc	___aomod@divisor+1,f,c
  5689  001270  220B               	addwfc	___aomod@divisor+2,f,c
  5690  001272  220C               	addwfc	___aomod@divisor+3,f,c
  5691  001274  220D               	addwfc	___aomod@divisor+4,f,c
  5692  001276  220E               	addwfc	___aomod@divisor+5,f,c
  5693  001278  220F               	addwfc	___aomod@divisor+6,f,c
  5694  00127A  2210               	addwfc	___aomod@divisor+7,f,c
  5695  00127C                     l2441:
  5696  00127C  5009               	movf	___aomod@divisor,w,c
  5697  00127E  100A               	iorwf	___aomod@divisor+1,w,c
  5698  001280  100B               	iorwf	___aomod@divisor+2,w,c
  5699  001282  100C               	iorwf	___aomod@divisor+3,w,c
  5700  001284  100D               	iorwf	___aomod@divisor+4,w,c
  5701  001286  100E               	iorwf	___aomod@divisor+5,w,c
  5702  001288  100F               	iorwf	___aomod@divisor+6,w,c
  5703  00128A  1010               	iorwf	___aomod@divisor+7,w,c
  5704  00128C  B4D8               	btfsc	status,2,c
  5705  00128E  D03C               	goto	l2457
  5706  001290  0E01               	movlw	1
  5707  001292  6E11               	movwf	___aomod@counter,c
  5708  001294  D00A               	goto	l2447
  5709  001296                     l2445:
  5710  001296  90D8               	bcf	status,0,c
  5711  001298  3609               	rlcf	___aomod@divisor,f,c
  5712  00129A  360A               	rlcf	___aomod@divisor+1,f,c
  5713  00129C  360B               	rlcf	___aomod@divisor+2,f,c
  5714  00129E  360C               	rlcf	___aomod@divisor+3,f,c
  5715  0012A0  360D               	rlcf	___aomod@divisor+4,f,c
  5716  0012A2  360E               	rlcf	___aomod@divisor+5,f,c
  5717  0012A4  360F               	rlcf	___aomod@divisor+6,f,c
  5718  0012A6  3610               	rlcf	___aomod@divisor+7,f,c
  5719  0012A8  2A11               	incf	___aomod@counter,f,c
  5720  0012AA                     l2447:
  5721  0012AA  AE10               	btfss	___aomod@divisor+7,7,c
  5722  0012AC  D7F4               	goto	l2445
  5723  0012AE                     u1710:
  5724  0012AE  5009               	movf	___aomod@divisor,w,c
  5725  0012B0  5C01               	subwf	___aomod@dividend,w,c
  5726  0012B2  500A               	movf	___aomod@divisor+1,w,c
  5727  0012B4  5802               	subwfb	___aomod@dividend+1,w,c
  5728  0012B6  500B               	movf	___aomod@divisor+2,w,c
  5729  0012B8  5803               	subwfb	___aomod@dividend+2,w,c
  5730  0012BA  500C               	movf	___aomod@divisor+3,w,c
  5731  0012BC  5804               	subwfb	___aomod@dividend+3,w,c
  5732  0012BE  500D               	movf	___aomod@divisor+4,w,c
  5733  0012C0  5805               	subwfb	___aomod@dividend+4,w,c
  5734  0012C2  500E               	movf	___aomod@divisor+5,w,c
  5735  0012C4  5806               	subwfb	___aomod@dividend+5,w,c
  5736  0012C6  500F               	movf	___aomod@divisor+6,w,c
  5737  0012C8  5807               	subwfb	___aomod@dividend+6,w,c
  5738  0012CA  5010               	movf	___aomod@divisor+7,w,c
  5739  0012CC  5808               	subwfb	___aomod@dividend+7,w,c
  5740  0012CE  A0D8               	btfss	status,0,c
  5741  0012D0  D010               	goto	l2453
  5742  0012D2  5009               	movf	___aomod@divisor,w,c
  5743  0012D4  5E01               	subwf	___aomod@dividend,f,c
  5744  0012D6  500A               	movf	___aomod@divisor+1,w,c
  5745  0012D8  5A02               	subwfb	___aomod@dividend+1,f,c
  5746  0012DA  500B               	movf	___aomod@divisor+2,w,c
  5747  0012DC  5A03               	subwfb	___aomod@dividend+2,f,c
  5748  0012DE  500C               	movf	___aomod@divisor+3,w,c
  5749  0012E0  5A04               	subwfb	___aomod@dividend+3,f,c
  5750  0012E2  500D               	movf	___aomod@divisor+4,w,c
  5751  0012E4  5A05               	subwfb	___aomod@dividend+4,f,c
  5752  0012E6  500E               	movf	___aomod@divisor+5,w,c
  5753  0012E8  5A06               	subwfb	___aomod@dividend+5,f,c
  5754  0012EA  500F               	movf	___aomod@divisor+6,w,c
  5755  0012EC  5A07               	subwfb	___aomod@dividend+6,f,c
  5756  0012EE  5010               	movf	___aomod@divisor+7,w,c
  5757  0012F0  5A08               	subwfb	___aomod@dividend+7,f,c
  5758  0012F2                     l2453:
  5759  0012F2  90D8               	bcf	status,0,c
  5760  0012F4  3210               	rrcf	___aomod@divisor+7,f,c
  5761  0012F6  320F               	rrcf	___aomod@divisor+6,f,c
  5762  0012F8  320E               	rrcf	___aomod@divisor+5,f,c
  5763  0012FA  320D               	rrcf	___aomod@divisor+4,f,c
  5764  0012FC  320C               	rrcf	___aomod@divisor+3,f,c
  5765  0012FE  320B               	rrcf	___aomod@divisor+2,f,c
  5766  001300  320A               	rrcf	___aomod@divisor+1,f,c
  5767  001302  3209               	rrcf	___aomod@divisor,f,c
  5768  001304  2E11               	decfsz	___aomod@counter,f,c
  5769  001306  D7D3               	goto	u1710
  5770  001308                     l2457:
  5771  001308  5012               	movf	___aomod@sign,w,c
  5772  00130A  B4D8               	btfsc	status,2,c
  5773  00130C  D010               	goto	l2461
  5774  00130E  1E08               	comf	___aomod@dividend+7,f,c
  5775  001310  1E07               	comf	___aomod@dividend+6,f,c
  5776  001312  1E06               	comf	___aomod@dividend+5,f,c
  5777  001314  1E05               	comf	___aomod@dividend+4,f,c
  5778  001316  1E04               	comf	___aomod@dividend+3,f,c
  5779  001318  1E03               	comf	___aomod@dividend+2,f,c
  5780  00131A  1E02               	comf	___aomod@dividend+1,f,c
  5781  00131C  6C01               	negf	___aomod@dividend,c
  5782  00131E  0E00               	movlw	0
  5783  001320  2202               	addwfc	___aomod@dividend+1,f,c
  5784  001322  2203               	addwfc	___aomod@dividend+2,f,c
  5785  001324  2204               	addwfc	___aomod@dividend+3,f,c
  5786  001326  2205               	addwfc	___aomod@dividend+4,f,c
  5787  001328  2206               	addwfc	___aomod@dividend+5,f,c
  5788  00132A  2207               	addwfc	___aomod@dividend+6,f,c
  5789  00132C  2208               	addwfc	___aomod@dividend+7,f,c
  5790  00132E                     l2461:
  5791  00132E  C001  F001         	movff	___aomod@dividend,?___aomod
  5792  001332  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5793  001336  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5794  00133A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5795  00133E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5796  001342  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5797  001346  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5798  00134A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5799  00134E  0012               	return		;funcret
  5800  001350                     __end_of___aomod:
  5801                           	opt callstack 0
  5802                           
  5803 ;; *************** function ___aodiv *****************
  5804 ;; Defined at:
  5805 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  dividend        8    0[COMRAM] long long 
  5808 ;;  divisor         8    8[COMRAM] long long 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  quotient        8   18[COMRAM] long long 
  5811 ;;  sign            1   17[COMRAM] unsigned char 
  5812 ;;  counter         1   16[COMRAM] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  8    0[COMRAM] long long 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5822 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;Total ram usage:       26 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    1
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_dtoa
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text29
  5837  000E60                     __ptext29:
  5838                           	opt callstack 0
  5839  000E60                     ___aodiv:
  5840                           	opt callstack 25
  5841                           
  5842                           ;incstack = 0
  5843  000E60  0E00               	movlw	0
  5844  000E62  6E12               	movwf	___aodiv@sign,c
  5845  000E64  AE10               	btfss	___aodiv@divisor+7,7,c
  5846  000E66  D012               	goto	l2393
  5847  000E68  1E10               	comf	___aodiv@divisor+7,f,c
  5848  000E6A  1E0F               	comf	___aodiv@divisor+6,f,c
  5849  000E6C  1E0E               	comf	___aodiv@divisor+5,f,c
  5850  000E6E  1E0D               	comf	___aodiv@divisor+4,f,c
  5851  000E70  1E0C               	comf	___aodiv@divisor+3,f,c
  5852  000E72  1E0B               	comf	___aodiv@divisor+2,f,c
  5853  000E74  1E0A               	comf	___aodiv@divisor+1,f,c
  5854  000E76  6C09               	negf	___aodiv@divisor,c
  5855  000E78  0E00               	movlw	0
  5856  000E7A  220A               	addwfc	___aodiv@divisor+1,f,c
  5857  000E7C  220B               	addwfc	___aodiv@divisor+2,f,c
  5858  000E7E  220C               	addwfc	___aodiv@divisor+3,f,c
  5859  000E80  220D               	addwfc	___aodiv@divisor+4,f,c
  5860  000E82  220E               	addwfc	___aodiv@divisor+5,f,c
  5861  000E84  220F               	addwfc	___aodiv@divisor+6,f,c
  5862  000E86  2210               	addwfc	___aodiv@divisor+7,f,c
  5863  000E88  0E01               	movlw	1
  5864  000E8A  6E12               	movwf	___aodiv@sign,c
  5865  000E8C                     l2393:
  5866  000E8C  AE08               	btfss	___aodiv@dividend+7,7,c
  5867  000E8E  D012               	goto	l2399
  5868  000E90  1E08               	comf	___aodiv@dividend+7,f,c
  5869  000E92  1E07               	comf	___aodiv@dividend+6,f,c
  5870  000E94  1E06               	comf	___aodiv@dividend+5,f,c
  5871  000E96  1E05               	comf	___aodiv@dividend+4,f,c
  5872  000E98  1E04               	comf	___aodiv@dividend+3,f,c
  5873  000E9A  1E03               	comf	___aodiv@dividend+2,f,c
  5874  000E9C  1E02               	comf	___aodiv@dividend+1,f,c
  5875  000E9E  6C01               	negf	___aodiv@dividend,c
  5876  000EA0  0E00               	movlw	0
  5877  000EA2  2202               	addwfc	___aodiv@dividend+1,f,c
  5878  000EA4  2203               	addwfc	___aodiv@dividend+2,f,c
  5879  000EA6  2204               	addwfc	___aodiv@dividend+3,f,c
  5880  000EA8  2205               	addwfc	___aodiv@dividend+4,f,c
  5881  000EAA  2206               	addwfc	___aodiv@dividend+5,f,c
  5882  000EAC  2207               	addwfc	___aodiv@dividend+6,f,c
  5883  000EAE  2208               	addwfc	___aodiv@dividend+7,f,c
  5884  000EB0  0E01               	movlw	1
  5885  000EB2  1A12               	xorwf	___aodiv@sign,f,c
  5886  000EB4                     l2399:
  5887  000EB4  EE20  F013         	lfsr	2,___aodiv@quotient
  5888  000EB8  0E07               	movlw	7
  5889  000EBA                     u1631:
  5890  000EBA  6ADE               	clrf	postinc2,c
  5891  000EBC  06E8               	decf	wreg,f,c
  5892  000EBE  E2FD               	bc	u1631
  5893  000EC0  5009               	movf	___aodiv@divisor,w,c
  5894  000EC2  100A               	iorwf	___aodiv@divisor+1,w,c
  5895  000EC4  100B               	iorwf	___aodiv@divisor+2,w,c
  5896  000EC6  100C               	iorwf	___aodiv@divisor+3,w,c
  5897  000EC8  100D               	iorwf	___aodiv@divisor+4,w,c
  5898  000ECA  100E               	iorwf	___aodiv@divisor+5,w,c
  5899  000ECC  100F               	iorwf	___aodiv@divisor+6,w,c
  5900  000ECE  1010               	iorwf	___aodiv@divisor+7,w,c
  5901  000ED0  B4D8               	btfsc	status,2,c
  5902  000ED2  D046               	goto	l2421
  5903  000ED4  0E01               	movlw	1
  5904  000ED6  6E11               	movwf	___aodiv@counter,c
  5905  000ED8  D00A               	goto	l2407
  5906  000EDA                     l2405:
  5907  000EDA  90D8               	bcf	status,0,c
  5908  000EDC  3609               	rlcf	___aodiv@divisor,f,c
  5909  000EDE  360A               	rlcf	___aodiv@divisor+1,f,c
  5910  000EE0  360B               	rlcf	___aodiv@divisor+2,f,c
  5911  000EE2  360C               	rlcf	___aodiv@divisor+3,f,c
  5912  000EE4  360D               	rlcf	___aodiv@divisor+4,f,c
  5913  000EE6  360E               	rlcf	___aodiv@divisor+5,f,c
  5914  000EE8  360F               	rlcf	___aodiv@divisor+6,f,c
  5915  000EEA  3610               	rlcf	___aodiv@divisor+7,f,c
  5916  000EEC  2A11               	incf	___aodiv@counter,f,c
  5917  000EEE                     l2407:
  5918  000EEE  AE10               	btfss	___aodiv@divisor+7,7,c
  5919  000EF0  D7F4               	goto	l2405
  5920  000EF2                     u1650:
  5921  000EF2  90D8               	bcf	status,0,c
  5922  000EF4  3613               	rlcf	___aodiv@quotient,f,c
  5923  000EF6  3614               	rlcf	___aodiv@quotient+1,f,c
  5924  000EF8  3615               	rlcf	___aodiv@quotient+2,f,c
  5925  000EFA  3616               	rlcf	___aodiv@quotient+3,f,c
  5926  000EFC  3617               	rlcf	___aodiv@quotient+4,f,c
  5927  000EFE  3618               	rlcf	___aodiv@quotient+5,f,c
  5928  000F00  3619               	rlcf	___aodiv@quotient+6,f,c
  5929  000F02  361A               	rlcf	___aodiv@quotient+7,f,c
  5930  000F04  5009               	movf	___aodiv@divisor,w,c
  5931  000F06  5C01               	subwf	___aodiv@dividend,w,c
  5932  000F08  500A               	movf	___aodiv@divisor+1,w,c
  5933  000F0A  5802               	subwfb	___aodiv@dividend+1,w,c
  5934  000F0C  500B               	movf	___aodiv@divisor+2,w,c
  5935  000F0E  5803               	subwfb	___aodiv@dividend+2,w,c
  5936  000F10  500C               	movf	___aodiv@divisor+3,w,c
  5937  000F12  5804               	subwfb	___aodiv@dividend+3,w,c
  5938  000F14  500D               	movf	___aodiv@divisor+4,w,c
  5939  000F16  5805               	subwfb	___aodiv@dividend+4,w,c
  5940  000F18  500E               	movf	___aodiv@divisor+5,w,c
  5941  000F1A  5806               	subwfb	___aodiv@dividend+5,w,c
  5942  000F1C  500F               	movf	___aodiv@divisor+6,w,c
  5943  000F1E  5807               	subwfb	___aodiv@dividend+6,w,c
  5944  000F20  5010               	movf	___aodiv@divisor+7,w,c
  5945  000F22  5808               	subwfb	___aodiv@dividend+7,w,c
  5946  000F24  A0D8               	btfss	status,0,c
  5947  000F26  D011               	goto	l2417
  5948  000F28  5009               	movf	___aodiv@divisor,w,c
  5949  000F2A  5E01               	subwf	___aodiv@dividend,f,c
  5950  000F2C  500A               	movf	___aodiv@divisor+1,w,c
  5951  000F2E  5A02               	subwfb	___aodiv@dividend+1,f,c
  5952  000F30  500B               	movf	___aodiv@divisor+2,w,c
  5953  000F32  5A03               	subwfb	___aodiv@dividend+2,f,c
  5954  000F34  500C               	movf	___aodiv@divisor+3,w,c
  5955  000F36  5A04               	subwfb	___aodiv@dividend+3,f,c
  5956  000F38  500D               	movf	___aodiv@divisor+4,w,c
  5957  000F3A  5A05               	subwfb	___aodiv@dividend+4,f,c
  5958  000F3C  500E               	movf	___aodiv@divisor+5,w,c
  5959  000F3E  5A06               	subwfb	___aodiv@dividend+5,f,c
  5960  000F40  500F               	movf	___aodiv@divisor+6,w,c
  5961  000F42  5A07               	subwfb	___aodiv@dividend+6,f,c
  5962  000F44  5010               	movf	___aodiv@divisor+7,w,c
  5963  000F46  5A08               	subwfb	___aodiv@dividend+7,f,c
  5964  000F48  8013               	bsf	___aodiv@quotient,0,c
  5965  000F4A                     l2417:
  5966  000F4A  90D8               	bcf	status,0,c
  5967  000F4C  3210               	rrcf	___aodiv@divisor+7,f,c
  5968  000F4E  320F               	rrcf	___aodiv@divisor+6,f,c
  5969  000F50  320E               	rrcf	___aodiv@divisor+5,f,c
  5970  000F52  320D               	rrcf	___aodiv@divisor+4,f,c
  5971  000F54  320C               	rrcf	___aodiv@divisor+3,f,c
  5972  000F56  320B               	rrcf	___aodiv@divisor+2,f,c
  5973  000F58  320A               	rrcf	___aodiv@divisor+1,f,c
  5974  000F5A  3209               	rrcf	___aodiv@divisor,f,c
  5975  000F5C  2E11               	decfsz	___aodiv@counter,f,c
  5976  000F5E  D7C9               	goto	u1650
  5977  000F60                     l2421:
  5978  000F60  5012               	movf	___aodiv@sign,w,c
  5979  000F62  B4D8               	btfsc	status,2,c
  5980  000F64  D010               	goto	l2425
  5981  000F66  1E1A               	comf	___aodiv@quotient+7,f,c
  5982  000F68  1E19               	comf	___aodiv@quotient+6,f,c
  5983  000F6A  1E18               	comf	___aodiv@quotient+5,f,c
  5984  000F6C  1E17               	comf	___aodiv@quotient+4,f,c
  5985  000F6E  1E16               	comf	___aodiv@quotient+3,f,c
  5986  000F70  1E15               	comf	___aodiv@quotient+2,f,c
  5987  000F72  1E14               	comf	___aodiv@quotient+1,f,c
  5988  000F74  6C13               	negf	___aodiv@quotient,c
  5989  000F76  0E00               	movlw	0
  5990  000F78  2214               	addwfc	___aodiv@quotient+1,f,c
  5991  000F7A  2215               	addwfc	___aodiv@quotient+2,f,c
  5992  000F7C  2216               	addwfc	___aodiv@quotient+3,f,c
  5993  000F7E  2217               	addwfc	___aodiv@quotient+4,f,c
  5994  000F80  2218               	addwfc	___aodiv@quotient+5,f,c
  5995  000F82  2219               	addwfc	___aodiv@quotient+6,f,c
  5996  000F84  221A               	addwfc	___aodiv@quotient+7,f,c
  5997  000F86                     l2425:
  5998  000F86  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5999  000F8A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6000  000F8E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6001  000F92  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6002  000F96  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6003  000F9A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6004  000F9E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6005  000FA2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6006  000FA6  0012               	return		;funcret
  6007  000FA8                     __end_of___aodiv:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function _atoi *****************
  6011 ;; Defined at:
  6012 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6015 ;;		 -> STR_42(3), STR_40(3), STR_38(3), STR_36(3), 
  6016 ;;		 -> STR_34(3), STR_32(3), STR_30(3), STR_28(3), 
  6017 ;;		 -> STR_26(3), STR_24(3), STR_22(3), STR_21(15), 
  6018 ;;		 -> STR_20(15), STR_18(3), STR_17(3), STR_15(3), 
  6019 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_7(3), 
  6020 ;;		 -> STR_5(3), STR_3(3), STR_1(3), 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  n               2   20[COMRAM] int 
  6023 ;;  neg             2   13[COMRAM] int 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2    7[COMRAM] int 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;Total ram usage:       15 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    2
  6040 ;; This function calls:
  6041 ;;		___wmul
  6042 ;;		_isdigit
  6043 ;;		_isspace
  6044 ;; This function is called by:
  6045 ;;		_vfpfcnvrt
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text30
  6050  0010EC                     __ptext30:
  6051                           	opt callstack 0
  6052  0010EC                     _atoi:
  6053                           	opt callstack 25
  6054                           
  6055                           ;incstack = 0
  6056  0010EC  0E00               	movlw	0
  6057  0010EE  6E16               	movwf	atoi@n+1,c
  6058  0010F0  0E00               	movlw	0
  6059  0010F2  6E15               	movwf	atoi@n,c
  6060  0010F4  0E00               	movlw	0
  6061  0010F6  6E0F               	movwf	atoi@neg+1,c
  6062  0010F8  0E00               	movlw	0
  6063  0010FA  6E0E               	movwf	atoi@neg,c
  6064  0010FC  D002               	goto	l2651
  6065  0010FE                     l2649:
  6066  0010FE  4A08               	infsnz	atoi@s,f,c
  6067  001100  2A09               	incf	atoi@s+1,f,c
  6068  001102                     l2651:
  6069  001102  0E01               	movlw	1
  6070  001104  6E14               	movwf	_atoi$1071,c
  6071  001106  C008  FFF6         	movff	atoi@s,tblptrl
  6072  00110A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6073  00110E                     	if	0	;tblptru may be non-zero
  6074  00110E                     	endif
  6075  00110E                     	if	0	;tblptru may be non-zero
  6076  00110E                     	endif
  6077  00110E  0008               	tblrd		*
  6078  001110  50F5               	movf	tablat,w,c
  6079  001112  0A20               	xorlw	32
  6080  001114  B4D8               	btfsc	status,2,c
  6081  001116  D018               	goto	l2659
  6082  001118  0EF7               	movlw	247
  6083  00111A  6E0A               	movwf	??_atoi& (0+255),c
  6084  00111C  0EFF               	movlw	255
  6085  00111E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6086  001120  C008  FFF6         	movff	atoi@s,tblptrl
  6087  001124  C009  FFF7         	movff	atoi@s+1,tblptrh
  6088  001128                     	if	0	;tblptru may be non-zero
  6089  001128                     	endif
  6090  001128                     	if	0	;tblptru may be non-zero
  6091  001128                     	endif
  6092  001128  0008               	tblrd		*
  6093  00112A  50F5               	movf	tablat,w,c
  6094  00112C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6095  00112E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6096  001130  500A               	movf	??_atoi,w,c
  6097  001132  260C               	addwf	??_atoi+2,f,c
  6098  001134  500B               	movf	??_atoi+1,w,c
  6099  001136  220D               	addwfc	??_atoi+3,f,c
  6100  001138  500D               	movf	??_atoi+3,w,c
  6101  00113A  E104               	bnz	u2190
  6102  00113C  0E05               	movlw	5
  6103  00113E  5C0C               	subwf	??_atoi+2,w,c
  6104  001140  A0D8               	btfss	status,0,c
  6105  001142  D002               	goto	l2659
  6106  001144                     u2190:
  6107  001144  0E00               	movlw	0
  6108  001146  6E14               	movwf	_atoi$1071,c
  6109  001148                     l2659:
  6110  001148  C014  F010         	movff	_atoi$1071,_atoi$1070
  6111  00114C  6A11               	clrf	_atoi$1070+1,c
  6112  00114E  5010               	movf	_atoi$1070,w,c
  6113  001150  1011               	iorwf	_atoi$1070+1,w,c
  6114  001152  B4D8               	btfsc	status,2,c
  6115  001154  D008               	goto	l2669
  6116  001156  D7D3               	goto	l2649
  6117  001158                     l2665:
  6118  001158  0E00               	movlw	0
  6119  00115A  6E0F               	movwf	atoi@neg+1,c
  6120  00115C  0E01               	movlw	1
  6121  00115E  6E0E               	movwf	atoi@neg,c
  6122  001160                     l2667:
  6123  001160  4A08               	infsnz	atoi@s,f,c
  6124  001162  2A09               	incf	atoi@s+1,f,c
  6125  001164  D02E               	goto	l2675
  6126  001166                     l2669:
  6127  001166  C008  FFF6         	movff	atoi@s,tblptrl
  6128  00116A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6129  00116E                     	if	0	;tblptru may be non-zero
  6130  00116E                     	endif
  6131  00116E                     	if	0	;tblptru may be non-zero
  6132  00116E                     	endif
  6133  00116E  0008               	tblrd		*
  6134  001170  50F5               	movf	tablat,w,c
  6135  001172  6E0A               	movwf	??_atoi& (0+255),c
  6136  001174  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6137                           
  6138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6139                           ; Switch size 1, requested type "simple"
  6140                           ; Number of cases is 1, Range of values is 0 to 0
  6141                           ; switch strategies available:
  6142                           ; Name         Instructions Cycles
  6143                           ; simple_byte            4     3 (average)
  6144                           ;	Chosen strategy is simple_byte
  6145  001176  500B               	movf	??_atoi+1,w,c
  6146  001178  0A00               	xorlw	0	; case 0
  6147  00117A  A4D8               	btfss	status,2,c
  6148  00117C  D022               	goto	l2675
  6149                           
  6150                           ; Switch size 1, requested type "simple"
  6151                           ; Number of cases is 2, Range of values is 43 to 45
  6152                           ; switch strategies available:
  6153                           ; Name         Instructions Cycles
  6154                           ; simple_byte            7     4 (average)
  6155                           ;	Chosen strategy is simple_byte
  6156  00117E  500A               	movf	??_atoi,w,c
  6157  001180  0A2B               	xorlw	43	; case 43
  6158  001182  B4D8               	btfsc	status,2,c
  6159  001184  D7ED               	goto	l2667
  6160  001186  0A06               	xorlw	6	; case 45
  6161  001188  B4D8               	btfsc	status,2,c
  6162  00118A  D7E6               	goto	l2665
  6163  00118C  D01A               	goto	l2675
  6164  00118E                     l2671:
  6165  00118E  C015  F001         	movff	atoi@n,___wmul@multiplier
  6166  001192  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6167  001196  0E00               	movlw	0
  6168  001198  6E04               	movwf	___wmul@multiplicand+1,c
  6169  00119A  0E0A               	movlw	10
  6170  00119C  6E03               	movwf	___wmul@multiplicand,c
  6171  00119E  ECC7  F00C         	call	___wmul	;wreg free
  6172  0011A2  C008  FFF6         	movff	atoi@s,tblptrl
  6173  0011A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6174  0011AA                     	if	0	;tblptru may be non-zero
  6175  0011AA                     	endif
  6176  0011AA                     	if	0	;tblptru may be non-zero
  6177  0011AA                     	endif
  6178  0011AA  0008               	tblrd		*
  6179  0011AC  50F5               	movf	tablat,w,c
  6180  0011AE  5E01               	subwf	?___wmul,f,c
  6181  0011B0  0E00               	movlw	0
  6182  0011B2  5A02               	subwfb	?___wmul+1,f,c
  6183  0011B4  0E30               	movlw	48
  6184  0011B6  2401               	addwf	?___wmul,w,c
  6185  0011B8  6E15               	movwf	atoi@n,c
  6186  0011BA  0E00               	movlw	0
  6187  0011BC  2002               	addwfc	?___wmul+1,w,c
  6188  0011BE  6E16               	movwf	atoi@n+1,c
  6189  0011C0  D7CF               	goto	l2667
  6190  0011C2                     l2675:
  6191  0011C2  0ED0               	movlw	208
  6192  0011C4  6E0A               	movwf	??_atoi& (0+255),c
  6193  0011C6  0EFF               	movlw	255
  6194  0011C8  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6195  0011CA  C008  FFF6         	movff	atoi@s,tblptrl
  6196  0011CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6197  0011D2                     	if	0	;tblptru may be non-zero
  6198  0011D2                     	endif
  6199  0011D2                     	if	0	;tblptru may be non-zero
  6200  0011D2                     	endif
  6201  0011D2  0008               	tblrd		*
  6202  0011D4  50F5               	movf	tablat,w,c
  6203  0011D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6204  0011D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6205  0011DA  500A               	movf	??_atoi,w,c
  6206  0011DC  260C               	addwf	??_atoi+2,f,c
  6207  0011DE  500B               	movf	??_atoi+1,w,c
  6208  0011E0  220D               	addwfc	??_atoi+3,f,c
  6209  0011E2  500D               	movf	??_atoi+3,w,c
  6210  0011E4  E106               	bnz	u2210
  6211  0011E6  0E0A               	movlw	10
  6212  0011E8  5C0C               	subwf	??_atoi+2,w,c
  6213  0011EA  B0D8               	btfsc	status,0,c
  6214  0011EC  D002               	goto	u2210
  6215  0011EE  0E01               	movlw	1
  6216  0011F0  D001               	goto	u2220
  6217  0011F2                     u2210:
  6218  0011F2  0E00               	movlw	0
  6219  0011F4                     u2220:
  6220  0011F4  6E12               	movwf	_atoi$1072,c
  6221  0011F6  6A13               	clrf	_atoi$1072+1,c
  6222  0011F8  5012               	movf	_atoi$1072,w,c
  6223  0011FA  1013               	iorwf	_atoi$1072+1,w,c
  6224  0011FC  A4D8               	btfss	status,2,c
  6225  0011FE  D7C7               	goto	l2671
  6226  001200  500E               	movf	atoi@neg,w,c
  6227  001202  100F               	iorwf	atoi@neg+1,w,c
  6228  001204  A4D8               	btfss	status,2,c
  6229  001206  D00D               	goto	l1124
  6230  001208  C015  F00A         	movff	atoi@n,??_atoi
  6231  00120C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6232  001210  1E0A               	comf	??_atoi,f,c
  6233  001212  1E0B               	comf	??_atoi+1,f,c
  6234  001214  4A0A               	infsnz	??_atoi,f,c
  6235  001216  2A0B               	incf	??_atoi+1,f,c
  6236  001218  C00A  F008         	movff	??_atoi,?_atoi
  6237  00121C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6238  001220  0012               	return	
  6239  001222                     l1124:
  6240  001222  C015  F008         	movff	atoi@n,?_atoi
  6241  001226  C016  F009         	movff	atoi@n+1,?_atoi+1
  6242  00122A  0012               	return		;funcret
  6243  00122C                     __end_of_atoi:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _isspace *****************
  6247 ;; Defined at:
  6248 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  c               2    0[COMRAM] int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    0[COMRAM] int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;Total ram usage:        7 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_atoi
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text31
  6277  001764                     __ptext31:
  6278                           	opt callstack 0
  6279  001764                     _isspace:
  6280                           	opt callstack 25
  6281                           
  6282                           ;incstack = 0
  6283  001764  0E01               	movlw	1
  6284  001766  6E07               	movwf	_isspace$1097,c
  6285  001768  0E20               	movlw	32
  6286  00176A  1801               	xorwf	isspace@c,w,c
  6287  00176C  1002               	iorwf	isspace@c+1,w,c
  6288  00176E  B4D8               	btfsc	status,2,c
  6289  001770  D014               	goto	l2473
  6290  001772  0EF7               	movlw	247
  6291  001774  6E03               	movwf	??_isspace& (0+255),c
  6292  001776  0EFF               	movlw	255
  6293  001778  6E04               	movwf	(??_isspace+1)& (0+255),c
  6294  00177A  C001  F005         	movff	isspace@c,??_isspace+2
  6295  00177E  C002  F006         	movff	isspace@c+1,??_isspace+3
  6296  001782  5003               	movf	??_isspace,w,c
  6297  001784  2605               	addwf	??_isspace+2,f,c
  6298  001786  5004               	movf	??_isspace+1,w,c
  6299  001788  2206               	addwfc	??_isspace+3,f,c
  6300  00178A  5006               	movf	??_isspace+3,w,c
  6301  00178C  E104               	bnz	u1750
  6302  00178E  0E05               	movlw	5
  6303  001790  5C05               	subwf	??_isspace+2,w,c
  6304  001792  A0D8               	btfss	status,0,c
  6305  001794  D002               	goto	l2473
  6306  001796                     u1750:
  6307  001796  0E00               	movlw	0
  6308  001798  6E07               	movwf	_isspace$1097,c
  6309  00179A                     l2473:
  6310  00179A  C007  F001         	movff	_isspace$1097,?_isspace
  6311  00179E  6A02               	clrf	?_isspace+1,c
  6312  0017A0  0012               	return		;funcret
  6313  0017A2                     __end_of_isspace:
  6314                           	opt callstack 0
  6315                           
  6316 ;; *************** function _isdigit *****************
  6317 ;; Defined at:
  6318 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  c               2    0[COMRAM] int 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  2    0[COMRAM] int 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:        6 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_vfpfcnvrt
  6343 ;;		_atoi
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text32
  6348  00190E                     __ptext32:
  6349                           	opt callstack 0
  6350  00190E                     _isdigit:
  6351                           	opt callstack 26
  6352                           
  6353                           ;incstack = 0
  6354  00190E  0ED0               	movlw	208
  6355  001910  6E03               	movwf	??_isdigit& (0+255),c
  6356  001912  0EFF               	movlw	255
  6357  001914  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6358  001916  C001  F005         	movff	isdigit@c,??_isdigit+2
  6359  00191A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6360  00191E  5003               	movf	??_isdigit,w,c
  6361  001920  2605               	addwf	??_isdigit+2,f,c
  6362  001922  5004               	movf	??_isdigit+1,w,c
  6363  001924  2206               	addwfc	??_isdigit+3,f,c
  6364  001926  5006               	movf	??_isdigit+3,w,c
  6365  001928  E106               	bnz	u1590
  6366  00192A  0E0A               	movlw	10
  6367  00192C  5C05               	subwf	??_isdigit+2,w,c
  6368  00192E  B0D8               	btfsc	status,0,c
  6369  001930  D002               	goto	u1590
  6370  001932  0E01               	movlw	1
  6371  001934  D001               	goto	u1600
  6372  001936                     u1590:
  6373  001936  0E00               	movlw	0
  6374  001938                     u1600:
  6375  001938  6E01               	movwf	?_isdigit,c
  6376  00193A  6A02               	clrf	?_isdigit+1,c
  6377  00193C  0012               	return		;funcret
  6378  00193E                     __end_of_isdigit:
  6379                           	opt callstack 0
  6380                           
  6381 ;; *************** function ___wmul *****************
  6382 ;; Defined at:
  6383 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  multiplier      2    0[COMRAM] unsigned int 
  6386 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  product         2    4[COMRAM] unsigned int 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[COMRAM] unsigned int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, prodl, prodh
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;Total ram usage:        6 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_atoi
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text33
  6413  00198E                     __ptext33:
  6414                           	opt callstack 0
  6415  00198E                     ___wmul:
  6416                           	opt callstack 25
  6417                           
  6418                           ;incstack = 0
  6419  00198E  5001               	movf	___wmul@multiplier,w,c
  6420  001990  0203               	mulwf	___wmul@multiplicand,c
  6421  001992  CFF3 F005          	movff	prodl,___wmul@product
  6422  001996  CFF4 F006          	movff	prodh,___wmul@product+1
  6423  00199A  5001               	movf	___wmul@multiplier,w,c
  6424  00199C  0204               	mulwf	___wmul@multiplicand+1,c
  6425  00199E  50F3               	movf	prodl,w,c
  6426  0019A0  2606               	addwf	___wmul@product+1,f,c
  6427  0019A2  5002               	movf	___wmul@multiplier+1,w,c
  6428  0019A4  0203               	mulwf	___wmul@multiplicand,c
  6429  0019A6  50F3               	movf	prodl,w,c
  6430  0019A8  2606               	addwf	___wmul@product+1,f,c
  6431  0019AA  C005  F001         	movff	___wmul@product,?___wmul
  6432  0019AE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6433  0019B2  0012               	return		;funcret
  6434  0019B4                     __end_of___wmul:
  6435                           	opt callstack 0
  6436                           
  6437 ;; *************** function _lcdInst *****************
  6438 ;; Defined at:
  6439 ;;		line 64 in file "lcd.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  data            1    wreg     unsigned char 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  data            1    3[COMRAM] unsigned char 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;Total ram usage:        1 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    4
  6460 ;; This function calls:
  6461 ;;		_send_byte
  6462 ;; This function is called by:
  6463 ;;		_doDisplayLog
  6464 ;;		_doOperation
  6465 ;;		_main
  6466 ;;		_initLCD
  6467 ;;		_lcd_shift_cursor
  6468 ;;		_lcd_shift_display
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text34
  6473  001A62                     __ptext34:
  6474                           	opt callstack 0
  6475  001A62                     _lcdInst:
  6476                           	opt callstack 24
  6477                           
  6478                           ;incstack = 0
  6479                           ;lcdInst@data stored from wreg
  6480  001A62  6E04               	movwf	lcdInst@data,c
  6481                           
  6482                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  6483  001A64  948C               	bcf	3980,2,c	;volatile
  6484                           
  6485                           ;lcd.c: 66:     send_byte(data);
  6486  001A66  5004               	movf	lcdInst@data,w,c
  6487  001A68  EC19  F00D         	call	_send_byte
  6488  001A6C  0012               	return		;funcret
  6489  001A6E                     __end_of_lcdInst:
  6490                           	opt callstack 0
  6491                           
  6492 ;; *************** function _send_byte *****************
  6493 ;; Defined at:
  6494 ;;		line 55 in file "lcd.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  data            1    wreg     unsigned char 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  data            1    2[COMRAM] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;Total ram usage:        1 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    3
  6515 ;; This function calls:
  6516 ;;		_send_nibble
  6517 ;; This function is called by:
  6518 ;;		_lcdInst
  6519 ;;		_initLCD
  6520 ;;		_putch
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text35
  6525  001A32                     __ptext35:
  6526                           	opt callstack 0
  6527  001A32                     _send_byte:
  6528                           	opt callstack 25
  6529                           
  6530                           ;incstack = 0
  6531                           ;send_byte@data stored from wreg
  6532  001A32  6E03               	movwf	send_byte@data,c
  6533                           
  6534                           ;lcd.c: 57:     send_nibble(data >> 4);
  6535  001A34  3803               	swapf	send_byte@data,w,c
  6536  001A36  0B0F               	andlw	15
  6537  001A38  EC0E  F00D         	call	_send_nibble
  6538                           
  6539                           ;lcd.c: 60:     send_nibble(data);
  6540  001A3C  5003               	movf	send_byte@data,w,c
  6541  001A3E  EC0E  F00D         	call	_send_nibble
  6542  001A42  0012               	return		;funcret
  6543  001A44                     __end_of_send_byte:
  6544                           	opt callstack 0
  6545                           
  6546 ;; *************** function _send_nibble *****************
  6547 ;; Defined at:
  6548 ;;		line 44 in file "lcd.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  data            1    wreg     unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  data            1    1[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;Total ram usage:        1 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    2
  6569 ;; This function calls:
  6570 ;;		_pulse_e
  6571 ;; This function is called by:
  6572 ;;		_send_byte
  6573 ;;		_initLCD
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text36
  6578  001A1C                     __ptext36:
  6579                           	opt callstack 0
  6580  001A1C                     _send_nibble:
  6581                           	opt callstack 26
  6582                           
  6583                           ;incstack = 0
  6584                           ;send_nibble@data stored from wreg
  6585  001A1C  6E02               	movwf	send_nibble@data,c
  6586                           
  6587                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  6588  001A1E  508C               	movf	3980,w,c	;volatile
  6589  001A20  0B0F               	andlw	15
  6590  001A22  6E8C               	movwf	3980,c	;volatile
  6591                           
  6592                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  6593  001A24  3802               	swapf	send_nibble@data,w,c
  6594  001A26  0BF0               	andlw	240
  6595  001A28  108C               	iorwf	3980,w,c	;volatile
  6596  001A2A  6E8C               	movwf	3980,c	;volatile
  6597                           
  6598                           ;lcd.c: 48:     pulse_e();
  6599  001A2C  EC9F  F00C         	call	_pulse_e	;wreg free
  6600  001A30  0012               	return		;funcret
  6601  001A32                     __end_of_send_nibble:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function _pulse_e *****************
  6605 ;; Defined at:
  6606 ;;		line 28 in file "lcd.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  interruptSta    1    0[COMRAM] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:        1 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_send_nibble
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text37
  6635  00193E                     __ptext37:
  6636                           	opt callstack 0
  6637  00193E                     _pulse_e:
  6638                           	opt callstack 26
  6639                           
  6640                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6641                           
  6642                           ;incstack = 0
  6643  00193E  0E00               	movlw	0
  6644  001940  BEF2               	btfsc	4082,7,c	;volatile
  6645  001942  0E01               	movlw	1
  6646  001944  6E01               	movwf	pulse_e@interruptState,c
  6647                           
  6648                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6649  001946  9EF2               	bcf	4082,7,c	;volatile
  6650                           
  6651                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6652  001948  868C               	bsf	3980,3,c	;volatile
  6653                           
  6654                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6655  00194A  0E14               	movlw	20
  6656  00194C                     u2917:
  6657  00194C  2EE8               	decfsz	wreg,f,c
  6658  00194E  D7FE               	bra	u2917
  6659  001950  D000               	nop2	
  6660                           
  6661                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6662  001952  968C               	bcf	3980,3,c	;volatile
  6663                           
  6664                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6665  001954  0E53               	movlw	83
  6666  001956                     u2927:
  6667  001956  2EE8               	decfsz	wreg,f,c
  6668  001958  D7FE               	bra	u2927
  6669  00195A  F000               	nop	
  6670                           
  6671                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6672  00195C  B001               	btfsc	pulse_e@interruptState,0,c
  6673  00195E  D002               	bra	u1375
  6674  001960  9EF2               	bcf	4082,7,c	;volatile
  6675  001962  D001               	bra	u1376
  6676  001964                     u1375:
  6677  001964  8EF2               	bsf	4082,7,c	;volatile
  6678  001966                     u1376:
  6679  001966  0012               	return		;funcret
  6680  001968                     __end_of_pulse_e:
  6681                           	opt callstack 0
  6682                           
  6683 ;; *************** function ___llmod *****************
  6684 ;; Defined at:
  6685 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  dividend        4    0[COMRAM] unsigned long 
  6688 ;;  divisor         4    4[COMRAM] unsigned long 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  counter         1    8[COMRAM] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  4    0[COMRAM] unsigned long 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6700 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;Total ram usage:        9 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_main
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text38
  6715  0015BE                     __ptext38:
  6716                           	opt callstack 0
  6717  0015BE                     ___llmod:
  6718                           	opt callstack 29
  6719                           
  6720                           ;incstack = 0
  6721  0015BE  5005               	movf	___llmod@divisor,w,c
  6722  0015C0  1006               	iorwf	___llmod@divisor+1,w,c
  6723  0015C2  1007               	iorwf	___llmod@divisor+2,w,c
  6724  0015C4  1008               	iorwf	___llmod@divisor+3,w,c
  6725  0015C6  B4D8               	btfsc	status,2,c
  6726  0015C8  D024               	goto	l838
  6727  0015CA  0E01               	movlw	1
  6728  0015CC  6E09               	movwf	___llmod@counter,c
  6729  0015CE  D006               	goto	l3075
  6730  0015D0                     l3073:
  6731  0015D0  90D8               	bcf	status,0,c
  6732  0015D2  3605               	rlcf	___llmod@divisor,f,c
  6733  0015D4  3606               	rlcf	___llmod@divisor+1,f,c
  6734  0015D6  3607               	rlcf	___llmod@divisor+2,f,c
  6735  0015D8  3608               	rlcf	___llmod@divisor+3,f,c
  6736  0015DA  2A09               	incf	___llmod@counter,f,c
  6737  0015DC                     l3075:
  6738  0015DC  AE08               	btfss	___llmod@divisor+3,7,c
  6739  0015DE  D7F8               	goto	l3073
  6740  0015E0                     u2540:
  6741  0015E0  5005               	movf	___llmod@divisor,w,c
  6742  0015E2  5C01               	subwf	___llmod@dividend,w,c
  6743  0015E4  5006               	movf	___llmod@divisor+1,w,c
  6744  0015E6  5802               	subwfb	___llmod@dividend+1,w,c
  6745  0015E8  5007               	movf	___llmod@divisor+2,w,c
  6746  0015EA  5803               	subwfb	___llmod@dividend+2,w,c
  6747  0015EC  5008               	movf	___llmod@divisor+3,w,c
  6748  0015EE  5804               	subwfb	___llmod@dividend+3,w,c
  6749  0015F0  A0D8               	btfss	status,0,c
  6750  0015F2  D008               	goto	l3081
  6751  0015F4  5005               	movf	___llmod@divisor,w,c
  6752  0015F6  5E01               	subwf	___llmod@dividend,f,c
  6753  0015F8  5006               	movf	___llmod@divisor+1,w,c
  6754  0015FA  5A02               	subwfb	___llmod@dividend+1,f,c
  6755  0015FC  5007               	movf	___llmod@divisor+2,w,c
  6756  0015FE  5A03               	subwfb	___llmod@dividend+2,f,c
  6757  001600  5008               	movf	___llmod@divisor+3,w,c
  6758  001602  5A04               	subwfb	___llmod@dividend+3,f,c
  6759  001604                     l3081:
  6760  001604  90D8               	bcf	status,0,c
  6761  001606  3208               	rrcf	___llmod@divisor+3,f,c
  6762  001608  3207               	rrcf	___llmod@divisor+2,f,c
  6763  00160A  3206               	rrcf	___llmod@divisor+1,f,c
  6764  00160C  3205               	rrcf	___llmod@divisor,f,c
  6765  00160E  2E09               	decfsz	___llmod@counter,f,c
  6766  001610  D7E7               	goto	u2540
  6767  001612                     l838:
  6768  001612  C001  F001         	movff	___llmod@dividend,?___llmod
  6769  001616  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  6770  00161A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  6771  00161E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  6772  001622  0012               	return		;funcret
  6773  001624                     __end_of___llmod:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function _I2C_Master_Read *****************
  6777 ;; Defined at:
  6778 ;;		line 77 in file "I2C.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  ackBit          1    wreg     unsigned char 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  ackBit          1    1[COMRAM] unsigned char 
  6783 ;;  receivedByte    1    2[COMRAM] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      unsigned char 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;Total ram usage:        2 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    2
  6800 ;; This function calls:
  6801 ;;		_I2C_Master_Wait
  6802 ;; This function is called by:
  6803 ;;		_main
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text39
  6808  0019B4                     __ptext39:
  6809                           	opt callstack 0
  6810  0019B4                     _I2C_Master_Read:
  6811                           	opt callstack 28
  6812                           
  6813                           ;incstack = 0
  6814                           ;I2C_Master_Read@ackBit stored from wreg
  6815  0019B4  6E02               	movwf	I2C_Master_Read@ackBit,c
  6816                           
  6817                           ;I2C.c: 78:     I2C_Master_Wait();
  6818  0019B6  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  6819                           
  6820                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  6821  0019BA  86C5               	bsf	4037,3,c	;volatile
  6822                           
  6823                           ;I2C.c: 81:     I2C_Master_Wait();
  6824  0019BC  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  6825                           
  6826                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  6827  0019C0  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  6828                           
  6829                           ;I2C.c: 86:     I2C_Master_Wait();
  6830  0019C4  EC22  F00D         	call	_I2C_Master_Wait	;wreg free
  6831                           
  6832                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  6833  0019C8  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  6834  0019CA  D002               	bra	u2525
  6835  0019CC  9AC5               	bcf	4037,5,c	;volatile
  6836  0019CE  D001               	bra	u2526
  6837  0019D0                     u2525:
  6838  0019D0  8AC5               	bsf	4037,5,c	;volatile
  6839  0019D2                     u2526:
  6840                           
  6841                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  6842  0019D2  88C5               	bsf	4037,4,c	;volatile
  6843                           
  6844                           ;I2C.c: 90:     return receivedByte;
  6845  0019D4  5003               	movf	I2C_Master_Read@receivedByte,w,c
  6846  0019D6  0012               	return		;funcret
  6847  0019D8                     __end_of_I2C_Master_Read:
  6848                           	opt callstack 0
  6849                           
  6850 ;; *************** function _I2C_Master_Wait *****************
  6851 ;; Defined at:
  6852 ;;		line 21 in file "I2C.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;Total ram usage:        1 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_I2C_Master_Start
  6877 ;;		_I2C_Master_Stop
  6878 ;;		_I2C_Master_Write
  6879 ;;		_I2C_Master_Read
  6880 ;;		_I2C_Master_RepeatedStart
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text40
  6885  001A44                     __ptext40:
  6886                           	opt callstack 0
  6887  001A44                     _I2C_Master_Wait:
  6888                           	opt callstack 27
  6889                           
  6890                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6891                           
  6892                           ;I2C.c: 28:     }
  6893                           
  6894                           ;incstack = 0
  6895  001A44  B4C7               	btfsc	4039,2,c	;volatile
  6896  001A46  D7FE               	goto	_I2C_Master_Wait
  6897  001A48  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  6898  001A4C  0E1F               	movlw	31
  6899  001A4E  1601               	andwf	??_I2C_Master_Wait,f,c
  6900  001A50  B4D8               	btfsc	status,2,c
  6901  001A52  0012               	return	
  6902  001A54  D7F7               	goto	_I2C_Master_Wait
  6903  001A56                     __end_of_I2C_Master_Wait:
  6904                           	opt callstack 0
  6905                           
  6906 ;; *************** function _interruptHandler *****************
  6907 ;; Defined at:
  6908 ;;		line 536 in file "main.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		Interrupt level 2
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	intcode
  6936  000008                     __pintcode:
  6937                           	opt callstack 0
  6938  000008                     _interruptHandler:
  6939                           	opt callstack 18
  6940                           
  6941                           ;incstack = 0
  6942  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6943  00000A  EDFD  F00C         	call	int_func,f	;refresh shadow registers
  6944                           
  6945                           	psect	intcode_body
  6946  0019FA                     __pintcode_body:
  6947                           	opt callstack 18
  6948  0019FA                     int_func:
  6949                           	opt callstack 18
  6950  0019FA  0006               	pop		; remove dummy address from shadow register refresh
  6951                           
  6952                           ;main.c: 538:     if(INT1IF){
  6953  0019FC  A0F0               	btfss	4080,0,c	;volatile
  6954  0019FE  D004               	goto	i2l163
  6955                           
  6956                           ;main.c: 541:         keyPressed = 1;
  6957  001A00  0E01               	movlw	1
  6958  001A02  6E7E               	movwf	_keyPressed,c	;volatile
  6959                           
  6960                           ;main.c: 542:         INT1IF = 0;
  6961  001A04  90F0               	bcf	4080,0,c	;volatile
  6962                           
  6963                           ;main.c: 543:     } else if (TMR0IF) {
  6964  001A06  D008               	goto	i2l166
  6965  001A08                     i2l163:
  6966  001A08  A4F2               	btfss	4082,2,c	;volatile
  6967  001A0A  D006               	goto	i2l166
  6968                           
  6969                           ;main.c: 544:       TMR0IF = 0;
  6970  001A0C  94F2               	bcf	4082,2,c	;volatile
  6971                           
  6972                           ;main.c: 545:       TMR0L = 61630;
  6973  001A0E  0EBE               	movlw	190
  6974  001A10  6ED6               	movwf	4054,c	;volatile
  6975                           
  6976                           ;main.c: 546:       secondsMeasured ++;
  6977  001A12  0100               	movlb	0	; () banked
  6978  001A14  4B88               	infsnz	_secondsMeasured& (0+255),f,b	;volatile
  6979  001A16  2B89               	incf	(_secondsMeasured+1)& (0+255),f,b	;volatile
  6980  001A18                     i2l166:
  6981  001A18  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6982  001A1A  0011               	retfie		f
  6983  001A1C                     __end_of_interruptHandler:
  6984                           	opt callstack 0
  6985                           
  6986                           	psect	rparam
  6987  0000                     
  6988                           	psect	temp
  6989  00007F                     btemp:
  6990                           	opt callstack 0
  6991  00007F                     	ds	1
  6992  0000                     int$flags	set	btemp
  6993  0000                     wtemp8	set	btemp+1
  6994  0000                     ttemp5	set	btemp+1
  6995  0000                     ttemp6	set	btemp+4
  6996  0000                     ttemp7	set	btemp+8
  6997                           tosu	equ	0xFFF
  6998                           tosh	equ	0xFFE
  6999                           tosl	equ	0xFFD
  7000                           stkptr	equ	0xFFC
  7001                           pclatu	equ	0xFFB
  7002                           pclath	equ	0xFFA
  7003                           pcl	equ	0xFF9
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           indf0	equ	0xFEF
  7011                           postinc0	equ	0xFEE
  7012                           postdec0	equ	0xFED
  7013                           preinc0	equ	0xFEC
  7014                           plusw0	equ	0xFEB
  7015                           fsr0h	equ	0xFEA
  7016                           fsr0l	equ	0xFE9
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           preinc1	equ	0xFE4
  7022                           plusw1	equ	0xFE3
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           bsr	equ	0xFE0
  7026                           indf2	equ	0xFDF
  7027                           postinc2	equ	0xFDE
  7028                           postdec2	equ	0xFDD
  7029                           preinc2	equ	0xFDC
  7030                           plusw2	equ	0xFDB
  7031                           fsr2h	equ	0xFDA
  7032                           fsr2l	equ	0xFD9
  7033                           status	equ	0xFD8


Data Sizes:
    Strings     296
    Constant    30
    Data        7
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     41      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_43(CODE[16]), 
		 -> STR_41(CODE[14]), STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), 
		 -> STR_33(CODE[13]), STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), 
		 -> STR_25(CODE[14]), STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), STR_43(CODE[16]), 
		 -> STR_41(CODE[14]), STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), 
		 -> STR_33(CODE[13]), STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), 
		 -> STR_25(CODE[14]), STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), 
		 -> STR_14(CODE[17]), STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), 
		 -> STR_6(CODE[14]), STR_4(CODE[16]), STR_2(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1110_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_42(CODE[3]), STR_40(CODE[3]), STR_38(CODE[3]), STR_36(CODE[3]), 
		 -> STR_34(CODE[3]), STR_32(CODE[3]), STR_30(CODE[3]), STR_28(CODE[3]), 
		 -> STR_26(CODE[3]), STR_24(CODE[3]), STR_22(CODE[3]), STR_21(CODE[15]), 
		 -> STR_20(CODE[15]), STR_18(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_43(CODE[16]), STR_41(CODE[14]), STR_39(CODE[11]), 
		 -> STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), STR_31(CODE[13]), 
		 -> STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), STR_23(CODE[10]), 
		 -> STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), STR_43(CODE[16]), STR_41(CODE[14]), STR_39(CODE[11]), 
		 -> STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), STR_31(CODE[13]), 
		 -> STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), STR_23(CODE[10]), 
		 -> STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), STR_12(CODE[15]), 
		 -> STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), STR_4(CODE[16]), 
		 -> STR_2(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_43(CODE[16]), STR_41(CODE[14]), 
		 -> STR_39(CODE[11]), STR_37(CODE[9]), STR_35(CODE[16]), STR_33(CODE[13]), 
		 -> STR_31(CODE[13]), STR_29(CODE[9]), STR_27(CODE[13]), STR_25(CODE[14]), 
		 -> STR_23(CODE[10]), STR_19(CODE[9]), STR_16(CODE[14]), STR_14(CODE[17]), 
		 -> STR_12(CODE[15]), STR_10(CODE[9]), STR_8(CODE[16]), STR_6(CODE[14]), 
		 -> STR_4(CODE[16]), STR_2(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_doDisplayLog
    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _doOperation->_printf
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_doOperation

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   62511
                                             23 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0     657
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     245
                                              4 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         28    28      0   20443
                                            123 COMRAM     1     1      0
                                              0 BANK0     23    23      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _initSecondTimer
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _initSecondTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     554
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                         9     7      2   20068
                                            123 COMRAM     2     0      2
                                              0 BANK0      7     7      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   19742
                                            111 COMRAM    12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17934
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   17553
                                             70 COMRAM    33    27      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5569
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2184
                                             13 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5664
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4015
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1736
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1335
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     111
                                              3 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0      89
                                              2 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _initSecondTimer
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      5E       5       73.4%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC       6        0.0%
DATA                 0      0      DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 19 21:00:11 2019

                             l87 0E4C                      __CFG_CPD$ON 000000  
            ___wmul@multiplicand 0003                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                              l140 0802  
                            l302 0898                              l304 08A0  
                            l331 100E                              l350 0A88  
                            l352 0A90                              l291 1380  
                            l445 145A                              l838 1612  
                   __CFG_CPB$OFF 000000                              _PSA 007EAB  
                            _abs 187C                              _pad 1350  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             ?_abs 0013  
                           l1124 1222                             l1093 18A4  
                           l2301 1500                             l2311 17E8  
                           l1191 1716                             l2321 172E  
                           l2315 17FE                             l2405 0EDA  
                           l2421 0F60                             l2341 138A  
                           l2501 08C8                             l3029 1490  
                           l3205 06D8                             l3109 044E  
                           l2407 0EEE                             l2319 172A  
                           l2335 136A                             l2511 09C0  
                           l3039 14D4                             l3127 04E2  
                           l3119 04B4                             l3215 0702  
                           l3081 1604                             l3073 15D0  
                           l2425 0F86                             l2417 0F4A  
                           l2441 127C                             l2345 13A2  
                           l3241 0796                             l3233 077E  
                           l3217 0732                             l3075 15DC  
                           l2339 1378                             l2531 0A28  
                           l3147 0584                             l2461 132E  
                           l2453 12F2                             l2445 1296  
                           l2437 1258                             l2349 13D0  
                           l2605 0AF4                             l2701 005C  
                           l3253 07BC                             l3245 07A4  
                           l3237 078A                             l3229 0772  
                           l3165 05E8                             l2447 12AA  
                           l2535 0A40                             l2711 0078  
                           l2703 006C                             l2473 179A  
                           l2393 0E8C                             l2457 1308  
                           l2561 103E                             l3257 07C8  
                           l3249 07B0                             l3265 07D6  
                           l3185 0668                             l2651 1102  
                           l2483 087A                             l2571 109A  
                           l2547 0FD2                             l2643 0C70  
                           l2619 0B82                             l2627 0BF8  
                           l2723 008E                             l2715 007E  
                           l2707 0072                             l2565 105C  
                           l2557 1026                             l2741 016A  
                           l2725 00D0                             l2821 1694  
                           l2671 118E                             l2399 0EB4  
                           l2575 10B6                             l2591 0AA4  
                           l2719 0084                             l2823 16BA  
                           l2831 140C                             l3199 06C8  
                           l2665 1158                             l2649 10FE  
                           l2497 08BA                             l2737 013E  
                           l2921 0CB8                             l2833 1418  
                           l2675 11C2                             l2667 1160  
                           l2659 1148                             l2579 10CE  
                           l2739 015C                             l2843 144C  
                           l2669 1166                             l2597 0AD2  
                           l2765 02D0                             l2757 0262  
                           ?_pad 0015                             l2785 03DA  
                           l2961 0DCA                             l2779 039E  
                           l2699 0058                             l2795 03FC  
                           l2939 0D32                             l2789 03E4  
                           l2981 0E20                             l2973 0E0A  
                           l2959 0DAC                             l2977 0E16  
                           l2987 0E2E                             STR_1 FD2C  
                           STR_2 FCE4                             STR_3 FD2C  
                           STR_4 FC28                             STR_5 FD2C  
                           STR_6 FC93                             STR_7 FD2C  
                           STR_8 FC38                             STR_9 FD2C  
                           u2000 10E2                             u2020 0A7E  
                           u2110 0BD4                             u2120 0C08  
                           u2040 0AF0                             u2210 11F2  
                           u1410 1540                             u2050 0B26  
                           u2115 0BC2                             u2220 11F4  
                           u2140 0C2A                             u2060 0B28  
                           u2300 01A2                             u2141 0C28  
                           u1510 188A                             u1430 1750  
                           u2150 0C38                             u2310 01A4  
                           _LATB 000F8A                             u1600 1938  
                           u1520 1906                             u2160 0C3E  
                           u2080 0B60                             u2320 01B0  
                           _LATD 000F8C                             u1530 1908  
                           u1450 18D6                             u2090 0B62  
                           u1540 1842                             u1460 18D8  
                           u2340 01E4                             u1437 1746  
                           u2190 1144                             u1710 12AE  
                           u1390 14F8                             u1550 1844  
                           u2510 14E6                             u2430 141C  
                           u1375 1964                             u1631 0EBA  
                           u1376 1966                             u1800 088E  
                           u1560 16FE                             u1650 0EF2  
                           u1570 1700                             u2370 0304  
                           u2540 15E0                             u1820 08B4  
                           u2525 19D0                             u2526 19D2  
                           u1590 1936                             u1750 1796  
                           u1830 09CE                             u2630 0792  
                           u1911 0FB2                             u2455 164C  
                           u1760 084C                             u1850 09F0  
                           u1770 084E                             u1851 09EE  
                           u1860 09FE                             u1870 0A04  
                           u2807 0818                             u1960 1052  
                           u2817 155A                             u2737 04F0  
                           u1890 0A12                             u1970 107E  
                           u2907 0E54                             u2827 1572  
                           u2747 0592                             u2917 194C  
                           u2837 1584                             u2757 05DA  
                           u2927 1956                             u2847 15A6  
                           u2767 05F6                             u1977 1074  
                           u2857 14B0                             u2777 0676  
                           u2867 0CA8                             u2787 06F0  
                           u2877 0CC6                             u2797 0766  
                           u2887 0D40                             u2897 0DFE  
                           abs@a 0013                             _dbuf 008E  
                           _atoi 10EC                             _main 0430  
                           _dtoa 0824         __end_of_interruptHandler 1A1C  
                           _keys FBE9                             _prec 0084  
                           _nout 0080                             pad@i 001C  
                           pad@p 0019                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001E                             fsr2l 000FD9  
                           _stoa 0FA8                             btemp 007F  
                           _xtoa 0A6A                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 001B            I2C_Master_Read@ackBit 0002  
               ?_I2C_Master_Init 000E                 ?_I2C_Master_Read 0001  
               ?_I2C_Master_Wait 0001          __end_of_initSecondTimer 19FA  
               ?_I2C_Master_Stop 0001                  __end_of___aodiv 0FA8  
                          ?_atoi 0008                            ?_main 0001  
                          ?_dtoa 0020                  __end_of___aomod 1350  
                          STR_10 FD20                            STR_11 FD2C  
                          STR_20 FC67                            STR_12 FC58  
                          STR_13 FD2C                            STR_21 FC76  
                          STR_30 FD2C                            STR_22 FD2C  
                          STR_14 FC07                            STR_15 FD2C  
                          STR_23 FCFB                            STR_31 FCBD  
                          STR_40 FD2C                            STR_32 FD2C  
                          STR_24 FD2C                            STR_16 FCAF  
                          STR_17 FD29                            STR_33 FCCA  
                          STR_25 FCA1                            STR_41 FC85  
                          STR_42 FD2C                            STR_34 FD2C  
                          STR_26 FD2C                            STR_18 FD2C  
                          STR_19 FD05                            STR_27 FCD7  
                          STR_35 FC48                            STR_43 FC18  
                          STR_36 FD2C                            STR_28 FD2C  
                          STR_29 FD17                            STR_37 FD0E  
                          STR_38 FD2C                            STR_39 FCF0  
                          ?_stoa 000E                  __end_of___lldiv 146C  
                          ?_xtoa 0020                  __end_of___llmod 1624  
                          _T0PS0 007EA8                            _T0PS1 007EA9  
                          _T0PS2 007EAA                            i2l163 1A08  
                          i2l166 1A18                     main@keyValue 00D6  
                   vfpfcnvrt@fmt 0049                            _TMR0H 000FD7  
                   vfpfcnvrt@llu 0059                            _TMR0L 000FD6  
                          _PORTB 000F81                            _TRISB 000F93  
                          _TRISD 000F95                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                __end_of_lcdInst 1A6E                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                     main@keypress 00D2  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                __end_of_initLCD 15BE                   __CFG_EBTRB$OFF 000000  
                          _flags 0086                            _fputc 14E8  
                __end_of_isalpha 184A                            _fputs 17DE  
                __end_of_isdigit 193E                            atoi@n 0015  
                          pad@fp 0015                            atoi@s 0008  
                          _width 0082                            _putch 1A56  
                          main@i 00D3                            dtoa@d 0022  
                          dtoa@i 0042                            dtoa@n 003A  
                          dtoa@p 0034                            dtoa@s 0038  
                          dtoa@w 0036                  __end_of_islower 18DE  
                __end_of_isspace 17A2                  __end_of_isupper 190E  
                          tablat 000FF5                  send_nibble@data 0002  
                          plusw1 000FE3                            plusw2 000FDB  
           __size_of_doOperation 007C                            stoa@i 001A  
                          stoa@l 0022                            stoa@p 0020  
                          stoa@s 0010                            stoa@w 001C  
                __end_of_pulse_e 1968                            ttemp5 0080  
                          ttemp6 0083                            ttemp7 0087  
                          status 000FD8      I2C_Master_Read@receivedByte 0003  
                          wtemp8 0080                            xtoa@c 0045  
                          xtoa@d 0022                            xtoa@i 0043  
                          xtoa@n 003B                            xtoa@p 0037  
                          xtoa@w 0039                            xtoa@x 002A  
                __end_of_toupper 1720                   __CFG_PBADEN$ON 000000  
                   _toupper$1161 000D                  __initialization 17A2  
            main@currentLogState 00D4                     __end_of_atoi 122C  
                   __end_of_main 0824                     __end_of_dtoa 0A6A  
                   __end_of_keys FBFA                     __end_of_stoa 10EC  
          __size_of_doDisplayLog 01C6                     __end_of_xtoa 0C9A  
                         ??_atoi 000A                           ??_main 00C5  
                         ??_dtoa 002A                           ??_stoa 0012  
                         ??_xtoa 002B                    __activetblptr 000002  
  doOperation@secondsMeasuredOld 00C3                ?_I2C_Master_Start 0001  
              ?_I2C_Master_Write 0002            __end_of_replaceOldLog 1A92  
             ??_I2C_Master_Start 0002                           _ADCON1 000FC1  
             ??_I2C_Master_Write 0004                     ?_send_nibble 0001  
                         ?_fputc 0005                 ___llmod@dividend 0001  
                         ?_fputs 000E                           _T08BIT 007EAE  
                         ?_putch 0001                           _INT1IE 007F83  
                         _INT1IF 007F80                    vfpfcnvrt@done 0063  
                         _TMR0IE 007F95                           _TMR0IF 007F92  
                         _TMR0ON 007EAF                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                     _doDisplayLog 0C9A  
                 __CFG_XINST$OFF 000000                     vfprintf@cfmt 006E  
                      ??___aodiv 0011                        ??___aomod 0011  
                         ___wmul 198E                   __CFG_STVREN$ON 000000  
                      ??___lldiv 0009                        ??___llmod 0009  
                         clear_0 17C8                 ?_initSecondTimer 0001  
                      ??_lcdInst 0004                           _printf 1968  
                         pad@buf 0017                           dtoa@fp 0020  
                         _strlen 1720                        ??_initLCD 0005  
                         fputc@c 0005                           fputs@c 0012  
                         fputs@i 0013                           fputs@s 000E  
                      ??_isalpha 0003                        ??_isdigit 0003  
                      ??_islower 0003                     __mediumconst FBE8  
                      ??_isspace 0003                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         tblptru 000FF8                           stoa@cp 001E  
                         stoa@fp 000E                 __end_of_vfprintf 16D6  
                      ??_pulse_e 0001                           xtoa@fp 0020  
                      ??_toupper 0009            pulse_e@interruptState 0001  
                     __accesstop 0080          __end_of__initialization 17D0  
                  ___rparam_used 000001             __end_of_happynewyear FC01  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1A88  
                  __end_of_fputc 1554                    __end_of_fputs 1816  
                  __end_of_putch 1A62                          ??_fputc 0009  
                        ??_fputs 0012                          ??_putch 0004  
                     __pbssBANK0 0080                  _secondsMeasured 0088  
              ?_interruptHandler 0001      doDisplayLog@currentLogState 007C  
             ??_interruptHandler 0001                          ?___wmul 0001  
             __size_of_send_byte 0012                          ?_printf 0070  
                        ?_strlen 0001               __size_of_robotInit 0032  
             __size_of_vfpfcnvrt 041E                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
           __size_of_send_nibble 0016                          __Hparam 0000  
                     _keyPressed 007E                          __Lparam 0000  
                        ___aodiv 0E60                          ___aomod 122C  
                        ___lldiv 13EA                  __size_of___wmul 0026  
                        ___llmod 15BE                        ?_vfprintf 0068  
                        __pcinit 17A2                          __ramtop 1000  
                        _lcdInst 1A62                          __ptext0 0430  
                        __ptext1 184A                          __ptext2 1554  
                        __ptext3 1624                          __ptext4 13EA  
                        __ptext5 1A90                          __ptext6 146C  
                        __ptext7 19D8                          __ptext8 1A6E  
                        __ptext9 1A78                  __size_of_printf 0026  
                __size_of_strlen 0044                          _initLCD 1554  
                 _motorADistance 008C                     __size_of_abs 0032  
                   __size_of_pad 009A                          _isalpha 1816  
                        _isdigit 190E                   _motorBDistance 008A  
                        _islower 18AE                          _isspace 1764  
                        _isupper 18DE         __size_of_I2C_Master_Init 005C  
       __size_of_I2C_Master_Read 0024         __size_of_I2C_Master_Wait 0012  
       __size_of_I2C_Master_Stop 0008                          atoi@neg 000E  
                        _pulse_e 193E                    ??_doOperation 007C  
                 __pintcode_body 19FA                          _toupper 16D6  
           end_of_initialization 17D0            __end_of_LCD_SIZE_HORZ FC04  
              __end_of_send_byte 1A44            __end_of_LCD_SIZE_VERT FC03  
                        fputc@fp 0007                    __Lmediumconst FBE8  
                        int_func 19FA                          fputs@fp 0010  
              __end_of_robotInit 187C        __size_of_I2C_Master_Start 0008  
      __size_of_I2C_Master_Write 000A                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 0430  
           doDisplayLog@keyValue 00B4                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 006E             doDisplayLog@keypress 00B2  
                        strlen@a 0003                          strlen@s 0001  
                      _TRISCbits 000F94                     _happynewyear FBFA  
                  send_byte@data 0003              __end_of_doOperation 14E8  
         __size_of_replaceOldLog 0002                      vfpfcnvrt@ap 004B  
                    vfpfcnvrt@cp 0061                      vfpfcnvrt@fp 0047  
                    vfpfcnvrt@ll 0051                   __end_of___wmul 19B4  
                 __end_of_printf 198E                   __end_of_strlen 1764  
            start_initialization 17A2                      __end_of_abs 18AE  
                    __end_of_pad 13EA         __size_of_initSecondTimer 0022  
              ??_I2C_Master_Init 0012                ??_I2C_Master_Read 0002  
              ??_I2C_Master_Wait 0001                ??_I2C_Master_Stop 0002  
                ___llmod@divisor 0005                  ___llmod@counter 0009  
                    vfprintf@fmt 006A                         ??___wmul 0005  
          main@currentRobotState 00D5         I2C_Master_Init@clockFreq 000E  
                    __pdataBANK0 00D7                 __CFG_LPT1OSC$OFF 000000  
                       ??_printf 0078        __size_of_interruptHandler 1A14  
                       ??_strlen 0003                      __pbssCOMRAM 007E  
                  __pcstackBANK0 00AE                 ___aodiv@dividend 0001  
                  _replaceOldLog 1A90                      _doOperation 146C  
                      _atoi$1070 0010                        _atoi$1071 0014  
                      _atoi$1072 0012                 _I2C_Master_Start 1A80  
               _I2C_Master_Write 1A6E                __CFG_CCP2MX$PORTC 000000  
                      __pintcode 0008                    __pmediumconst FBE8  
                       ?___aodiv 0001                         ?___aomod 0001  
               ___aodiv@quotient 0013                         ?___lldiv 0001  
                       ?___llmod 0001                         ?_lcdInst 0001  
              __size_of_vfprintf 0056                         ?_initLCD 0001  
                       ?_isalpha 0001                         ?_isdigit 0001  
                       ?_islower 0001                         ?_isspace 0001  
                 ?_replaceOldLog 0001                         ?_isupper 0001  
                  ??_send_nibble 0002                         ?_pulse_e 0001  
                 __size_of_fputc 006C                   __size_of_fputs 0038  
                       ?_toupper 0007                   __size_of_putch 000C  
                 ___wmul@product 0005                ??_initSecondTimer 0001  
                  ?_doDisplayLog 007C                         _LATDbits 000F8C  
                      _send_byte 1A32                   _LCD_LINE1_ADDR FC01  
                 _LCD_LINE2_ADDR FC06                   _LCD_LINE3_ADDR FC05  
                 _LCD_LINE4_ADDR FC04                 __CFG_WDTPS$32768 000000  
                      _robotInit 184A                        _vfpfcnvrt 0012  
              ___wmul@multiplier 0001                     _isspace$1097 0007  
                     vfpfcnvrt@c 0067                        copy_data0 17B6  
                 ??_doDisplayLog 00AE           __end_of_LCD_LINE1_ADDR FC02  
         __end_of_LCD_LINE2_ADDR FC07           __end_of_LCD_LINE3_ADDR FC06  
         __end_of_LCD_LINE4_ADDR FC05              __end_of_send_nibble 1A32  
                     ?_send_byte 0001                         __Hrparam 0000  
doDisplayLog@currentDisplayState 00B3                       vfprintf@ap 006C  
                       __Lrparam 0000                       vfprintf@fp 0068  
             __CFG_BOREN$SBORDIS 000000                       ?_robotInit 0001  
               __size_of___aodiv 0148                 __size_of___aomod 0124  
               __size_of___lldiv 0082                 __size_of___llmod 0066  
                     ?_vfpfcnvrt 0047                  ___aodiv@divisor 0009  
               _interruptHandler 0008                  ___aodiv@counter 0011  
               __size_of_lcdInst 000C                  ??_replaceOldLog 0001  
                _I2C_Master_Init 1624                  _I2C_Master_Read 19B4  
               __size_of_initLCD 006A                  _I2C_Master_Wait 1A44  
                _I2C_Master_Stop 1A78                 __size_of_isalpha 0034  
               __size_of_isdigit 0030                         _dtoa$574 0032  
               __size_of_islower 0030                 __size_of_isspace 003E  
                       __ptext10 1A80                         __ptext11 0C9A  
                       __ptext20 0FA8                         __ptext12 1968  
                       __ptext21 0824                         __ptext13 1680  
                       __ptext30 10EC                         __ptext22 1350  
                       __ptext14 0012                         __ptext31 1764  
                       __ptext23 1720                         __ptext15 0A6A  
                       __ptext40 1A44                         __ptext32 190E  
                       __ptext24 17DE                         __ptext16 16D6  
                       __ptext33 198E                         __ptext25 14E8  
                       __ptext17 18AE                         __ptext34 1A62  
                       __ptext26 1A56                         __ptext18 18DE  
                       __ptext35 1A32                         __ptext27 187C  
                       __ptext19 1816                         __ptext36 1A1C  
                       __ptext28 122C                         __ptext37 193E  
                       __ptext29 0E60                         __ptext38 15BE  
                       __ptext39 19B4                 __size_of_isupper 0030  
               __size_of_pulse_e 002A                 __size_of_toupper 004A  
                  __size_of_atoi 0140                    __size_of_main 03F4  
                  __size_of_dtoa 0246                    __size_of_stoa 0144  
                  __size_of_xtoa 0230                        stoa@F1139 00D7  
                       int$flags 007F                         _xtoa$596 0033  
                       _xtoa$597 0035                         _vfprintf 1680  
                      printf@fmt 0070                         main@tick 00CE  
                       main@time 00C7      I2C_Master_Write@byteToWrite 0002  
               ___aomod@dividend 0001                        putch@data 0004  
       __end_of_I2C_Master_Start 1A88         __end_of_I2C_Master_Write 1A78  
                     _INTCONbits 000FF2                         isalpha@c 0001  
                       isdigit@c 0001                      _send_nibble 1A1C  
                   ?_doOperation 0001                         intlevel2 0000  
                  _LCD_SIZE_HORZ FC03                         islower@c 0001  
                  _LCD_SIZE_VERT FC02                         isspace@c 0001  
               ___lldiv@dividend 0001                      ??_send_byte 0003  
                       isupper@c 0001                      ??_robotInit 0016  
                       printf@ap 007A          __end_of_I2C_Master_Init 1680  
                ___aomod@divisor 0009          __end_of_I2C_Master_Read 19D8  
        __end_of_I2C_Master_Wait 1A56          __end_of_I2C_Master_Stop 1A80  
                    ??_vfpfcnvrt 004D                      lcdInst@data 0004  
                  _vfpfcnvrt$611 0065                         stoa@nuls 0013  
                ___aomod@counter 0011             __end_of_doDisplayLog 0E60  
               ___lldiv@quotient 0009                  _initSecondTimer 19D8  
                       toupper@c 0007                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                     ___aodiv@sign 0012  
                   ___aomod@sign 0012  
