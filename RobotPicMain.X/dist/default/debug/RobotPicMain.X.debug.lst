

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 03:04:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.05
    93                           ; Generated 20/12/2018 GMT
    94                           ; 
    95                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4620 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  0048B4                     __pidataBANK0:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  0048B4  28                 	db	40
   133  0048B5  6E                 	db	110
   134  0048B6  75                 	db	117
   135  0048B7  6C                 	db	108
   136  0048B8  6C                 	db	108
   137  0048B9  29                 	db	41
   138  0048BA  00                 	db	0
   139                           
   140                           ;initializer for _motorADirection
   141  0048BB  01                 	db	1
   142                           
   143                           ;initializer for _motorBDirection
   144  0048BC  01                 	db	1
   145                           
   146                           	psect	mediumconst
   147  00FB76                     __pmediumconst:
   148                           	opt callstack 0
   149  00FB76  00                 	db	0
   150  00FB77                     _keys:
   151                           	opt callstack 0
   152  00FB77  31                 	db	49
   153  00FB78  32                 	db	50
   154  00FB79  33                 	db	51
   155  00FB7A  41                 	db	65
   156  00FB7B  34                 	db	52
   157  00FB7C  35                 	db	53
   158  00FB7D  36                 	db	54
   159  00FB7E  42                 	db	66
   160  00FB7F  37                 	db	55
   161  00FB80  38                 	db	56
   162  00FB81  39                 	db	57
   163  00FB82  43                 	db	67
   164  00FB83  2A                 	db	42
   165  00FB84  30                 	db	48
   166  00FB85  23                 	db	35
   167  00FB86  44                 	db	68
   168  00FB87  00                 	db	0
   169  00FB88                     __end_of_keys:
   170                           	opt callstack 0
   171  00FB88                     _happynewyear:
   172                           	opt callstack 0
   173  00FB88  00                 	db	0
   174  00FB89  37                 	db	55
   175  00FB8A  0E                 	db	14
   176  00FB8B  02                 	db	2
   177  00FB8C  13                 	db	19
   178  00FB8D  02                 	db	2
   179  00FB8E  13                 	db	19
   180  00FB8F                     __end_of_happynewyear:
   181                           	opt callstack 0
   182  00FB8F                     _LCD_LINE1_ADDR:
   183                           	opt callstack 0
   184  00FB8F  00                 	db	0
   185  00FB90                     __end_of_LCD_LINE1_ADDR:
   186                           	opt callstack 0
   187  00FB90                     _LCD_SIZE_VERT:
   188                           	opt callstack 0
   189  00FB90  04                 	db	4
   190  00FB91                     __end_of_LCD_SIZE_VERT:
   191                           	opt callstack 0
   192  00FB91                     _LCD_SIZE_HORZ:
   193                           	opt callstack 0
   194  00FB91  10                 	db	16
   195  00FB92                     __end_of_LCD_SIZE_HORZ:
   196                           	opt callstack 0
   197  00FB92  10                 	db	16
   198  00FB93                     __end_ofinit_motor_PWM@TIMER2_PRESCALER:
   199                           	opt callstack 0
   200  00FB93  03E8               	dw	1000
   201  00FB95  0000               	dw	0
   202  00FB97                     __end_ofinit_motor_PWM@FREQUENCY:
   203                           	opt callstack 0
   204  00FB97  06EA               	dw	1770
   205  00FB99                     __end_of_clicksPerM:
   206                           	opt callstack 0
   207  00FB99  50                 	db	80
   208  00FB9A                     __end_of_LCD_LINE4_ADDR:
   209                           	opt callstack 0
   210  00FB9A  10                 	db	16
   211  00FB9B                     __end_of_LCD_LINE3_ADDR:
   212                           	opt callstack 0
   213  00FB9B  40                 	db	64
   214  00FB9C                     __end_of_LCD_LINE2_ADDR:
   215                           	opt callstack 0
   216  0000                     _LATDbits	set	3980
   217  0000                     _LATB	set	3978
   218  0000                     _TRISD	set	3989
   219  0000                     _LATD	set	3980
   220  0000                     _TRISAbits	set	3986
   221  0000                     _LATBbits	set	3978
   222  0000                     _LATAbits	set	3977
   223  0000                     _TRISBbits	set	3987
   224  0000                     _TRISEbits	set	3990
   225  0000                     _TRISCbits	set	3988
   226  0000                     _PORTCbits	set	3970
   227  0000                     _PORTEbits	set	3972
   228  0000                     _PORTBbits	set	3969
   229  0000                     _PORTB	set	3969
   230  0000                     _SSPBUF	set	4041
   231  0000                     _SSPCON2bits	set	4037
   232  0000                     _SSPCON1	set	4038
   233  0000                     _SSPADD	set	4040
   234  0000                     _SSPCON1bits	set	4038
   235  0000                     _SSPCON2	set	4037
   236  0000                     _SSPSTAT	set	4039
   237  0000                     _ADCON1	set	4033
   238  0000                     _CCPR2L	set	4027
   239  0000                     _CCPR1L	set	4030
   240  0000                     _PR2	set	4043
   241  0000                     _EECON2	set	4007
   242  0000                     _EECON1bits	set	4006
   243  0000                     _EEADR	set	4009
   244  0000                     _EEDATA	set	4008
   245  0000                     _OSCCONbits	set	4051
   246  0000                     _CCP2Y	set	32212
   247  0000                     _CCP2X	set	32213
   248  0000                     _CCP1Y	set	32236
   249  0000                     _CCP1X	set	32237
   250  0000                     _TMR2ON	set	32338
   251  0000                     _T2CKPS1	set	32337
   252  0000                     _T2CKPS0	set	32336
   253  0000                     _CCP2M0	set	32208
   254  0000                     _CCP2M1	set	32209
   255  0000                     _CCP2M2	set	32210
   256  0000                     _CCP2M3	set	32211
   257  0000                     _CCP1M0	set	32232
   258  0000                     _CCP1M1	set	32233
   259  0000                     _CCP1M2	set	32234
   260  0000                     _CCP1M3	set	32235
   261  0000                     _P1M0	set	32238
   262  0000                     _P1M1	set	32239
   263  0000                     _TMR0L	set	4054
   264  0000                     _TMR0H	set	4055
   265  0000                     _T0CONbits	set	4053
   266  0000                     _TMR0ON	set	32431
   267  0000                     _PSA	set	32427
   268  0000                     _T0PS0	set	32424
   269  0000                     _T0PS1	set	32425
   270  0000                     _T0PS2	set	32426
   271  0000                     _T08BIT	set	32430
   272  0000                     _INTCONbits	set	4082
   273  0000                     _INT0IF	set	32657
   274  0000                     _INT2IF	set	32641
   275  0000                     _TMR0IF	set	32658
   276  0000                     _INT1IF	set	32640
   277  0000                     _INT1IE	set	32643
   278  0000                     _TMR0IE	set	32661
   279  0000                     _INT0IE	set	32660
   280  0000                     _INT2IE	set	32644
   281  00FB9C                     STR_66:
   282                           
   283                           ; BSR set to: 0
   284  00FB9C  28                 	db	40
   285  00FB9D  31                 	db	49	;'1'
   286  00FB9E  29                 	db	41
   287  00FB9F  20                 	db	32
   288  00FBA0  28                 	db	40
   289  00FBA1  32                 	db	50	;'2'
   290  00FBA2  29                 	db	41
   291  00FBA3  20                 	db	32
   292  00FBA4  28                 	db	40
   293  00FBA5  33                 	db	51	;'3'
   294  00FBA6  29                 	db	41
   295  00FBA7  20                 	db	32
   296  00FBA8  28                 	db	40
   297  00FBA9  34                 	db	52	;'4'
   298  00FBAA  29                 	db	41
   299  00FBAB  00                 	db	0
   300  00FBAC                     STR_9:
   301                           
   302                           ; BSR set to: 0
   303  00FBAC  28                 	db	40
   304  00FBAD  32                 	db	50	;'2'
   305  00FBAE  29                 	db	41
   306  00FBAF  20                 	db	32
   307  00FBB0  53                 	db	83	;'S'
   308  00FBB1  41                 	db	65	;'A'
   309  00FBB2  56                 	db	86	;'V'
   310  00FBB3  45                 	db	69	;'E'
   311  00FBB4  20                 	db	32
   312  00FBB5  26                 	db	38
   313  00FBB6  20                 	db	32
   314  00FBB7  45                 	db	69	;'E'
   315  00FBB8  58                 	db	88	;'X'
   316  00FBB9  49                 	db	73	;'I'
   317  00FBBA  54                 	db	84	;'T'
   318  00FBBB  00                 	db	0
   319  00FBBC                     STR_58:
   320                           
   321                           ; BSR set to: 0
   322  00FBBC  28                 	db	40
   323  00FBBD  32                 	db	50	;'2'
   324  00FBBE  29                 	db	41
   325  00FBBF  20                 	db	32
   326  00FBC0  51                 	db	81	;'Q'
   327  00FBC1  55                 	db	85	;'U'
   328  00FBC2  49                 	db	73	;'I'
   329  00FBC3  54                 	db	84	;'T'
   330  00FBC4  20                 	db	32
   331  00FBC5  44                 	db	68	;'D'
   332  00FBC6  4F                 	db	79	;'O'
   333  00FBC7  20                 	db	32
   334  00FBC8  4E                 	db	78	;'N'
   335  00FBC9  4F                 	db	79	;'O'
   336  00FBCA  54                 	db	84	;'T'
   337  00FBCB  00                 	db	0
   338  00FBCC                     STR_28:
   339                           
   340                           ; BSR set to: 0
   341  00FBCC  25                 	db	37
   342  00FBCD  64                 	db	100	;'d'
   343  00FBCE  20                 	db	32
   344  00FBCF  63                 	db	99	;'c'
   345  00FBD0  6D                 	db	109	;'m'
   346  00FBD1  20                 	db	32
   347  00FBD2  66                 	db	102	;'f'
   348  00FBD3  72                 	db	114	;'r'
   349  00FBD4  6F                 	db	111	;'o'
   350  00FBD5  6D                 	db	109	;'m'
   351  00FBD6  20                 	db	32
   352  00FBD7  70                 	db	112	;'p'
   353  00FBD8  6F                 	db	111	;'o'
   354  00FBD9  6C                 	db	108	;'l'
   355  00FBDA  65                 	db	101	;'e'
   356  00FBDB  00                 	db	0
   357  00FBDC                     STR_5:
   358                           
   359                           ; BSR set to: 0
   360  00FBDC  54                 	db	84	;'T'
   361  00FBDD  49                 	db	73	;'I'
   362  00FBDE  52                 	db	82	;'R'
   363  00FBDF  2E                 	db	46
   364  00FBE0  20                 	db	32
   365  00FBE1  53                 	db	83	;'S'
   366  00FBE2  55                 	db	85	;'U'
   367  00FBE3  50                 	db	80	;'P'
   368  00FBE4  50                 	db	80	;'P'
   369  00FBE5  4C                 	db	76	;'L'
   370  00FBE6  49                 	db	73	;'I'
   371  00FBE7  45                 	db	69	;'E'
   372  00FBE8  44                 	db	68	;'D'
   373  00FBE9  20                 	db	32
   374  00FBEA  00                 	db	0
   375  00FBEB                     STR_43:
   376                           
   377                           ; BSR set to: 0
   378  00FBEB  25                 	db	37
   379  00FBEC  30                 	db	48	;'0'
   380  00FBED  32                 	db	50	;'2'
   381  00FBEE  78                 	db	120	;'x'
   382  00FBEF  2F                 	db	47
   383  00FBF0  25                 	db	37
   384  00FBF1  30                 	db	48	;'0'
   385  00FBF2  32                 	db	50	;'2'
   386  00FBF3  78                 	db	120	;'x'
   387  00FBF4  2F                 	db	47
   388  00FBF5  25                 	db	37
   389  00FBF6  30                 	db	48	;'0'
   390  00FBF7  32                 	db	50	;'2'
   391  00FBF8  78                 	db	120	;'x'
   392  00FBF9  00                 	db	0
   393  00FBFA                     STR_44:
   394                           
   395                           ; BSR set to: 0
   396  00FBFA  25                 	db	37
   397  00FBFB  30                 	db	48	;'0'
   398  00FBFC  32                 	db	50	;'2'
   399  00FBFD  78                 	db	120	;'x'
   400  00FBFE  3A                 	db	58	;':'
   401  00FBFF  25                 	db	37
   402  00FC00  30                 	db	48	;'0'
   403  00FC01  32                 	db	50	;'2'
   404  00FC02  78                 	db	120	;'x'
   405  00FC03  3A                 	db	58	;':'
   406  00FC04  25                 	db	37
   407  00FC05  30                 	db	48	;'0'
   408  00FC06  32                 	db	50	;'2'
   409  00FC07  78                 	db	120	;'x'
   410  00FC08  00                 	db	0
   411  00FC09                     STR_64:
   412                           
   413                           ; BSR set to: 0
   414  00FC09  28                 	db	40
   415  00FC0A  31                 	db	49	;'1'
   416  00FC0B  20                 	db	32
   417  00FC0C  49                 	db	73	;'I'
   418  00FC0D  53                 	db	83	;'S'
   419  00FC0E  20                 	db	32
   420  00FC0F  4F                 	db	79	;'O'
   421  00FC10  4C                 	db	76	;'L'
   422  00FC11  44                 	db	68	;'D'
   423  00FC12  45                 	db	69	;'E'
   424  00FC13  53                 	db	83	;'S'
   425  00FC14  54                 	db	84	;'T'
   426  00FC15  29                 	db	41
   427  00FC16  00                 	db	0
   428  00FC17                     STR_7:
   429                           
   430                           ; BSR set to: 0
   431  00FC17  28                 	db	40
   432  00FC18  31                 	db	49	;'1'
   433  00FC19  29                 	db	41
   434  00FC1A  20                 	db	32
   435  00FC1B  50                 	db	80	;'P'
   436  00FC1C  4F                 	db	79	;'O'
   437  00FC1D  4C                 	db	76	;'L'
   438  00FC1E  45                 	db	69	;'E'
   439  00FC1F  20                 	db	32
   440  00FC20  49                 	db	73	;'I'
   441  00FC21  4E                 	db	78	;'N'
   442  00FC22  46                 	db	70	;'F'
   443  00FC23  4F                 	db	79	;'O'
   444  00FC24  00                 	db	0
   445  00FC25                     STR_48:
   446                           
   447                           ; BSR set to: 0
   448  00FC25  28                 	db	40
   449  00FC26  32                 	db	50	;'2'
   450  00FC27  29                 	db	41
   451  00FC28  20                 	db	32
   452  00FC29  56                 	db	86	;'V'
   453  00FC2A  49                 	db	73	;'I'
   454  00FC2B  45                 	db	69	;'E'
   455  00FC2C  57                 	db	87	;'W'
   456  00FC2D  20                 	db	32
   457  00FC2E  4C                 	db	76	;'L'
   458  00FC2F  4F                 	db	79	;'O'
   459  00FC30  47                 	db	71	;'G'
   460  00FC31  53                 	db	83	;'S'
   461  00FC32  00                 	db	0
   462  00FC33                     STR_20:
   463                           
   464                           ; BSR set to: 0
   465  00FC33  31                 	db	49	;'1'
   466  00FC34  3C                 	db	60	;'<'
   467  00FC35  2D                 	db	45
   468  00FC36  20                 	db	32
   469  00FC37  32                 	db	50	;'2'
   470  00FC38  2D                 	db	45
   471  00FC39  3E                 	db	62	;'>'
   472  00FC3A  20                 	db	32
   473  00FC3B  33                 	db	51	;'3'
   474  00FC3C  4D                 	db	77	;'M'
   475  00FC3D  45                 	db	69	;'E'
   476  00FC3E  4E                 	db	78	;'N'
   477  00FC3F  55                 	db	85	;'U'
   478  00FC40  00                 	db	0
   479  00FC41                     STR_54:
   480                           
   481                           ; BSR set to: 0
   482  00FC41  4F                 	db	79	;'O'
   483  00FC42  50                 	db	80	;'P'
   484  00FC43  2E                 	db	46
   485  00FC44  20                 	db	32
   486  00FC45  43                 	db	67	;'C'
   487  00FC46  4F                 	db	79	;'O'
   488  00FC47  4D                 	db	77	;'M'
   489  00FC48  50                 	db	80	;'P'
   490  00FC49  4C                 	db	76	;'L'
   491  00FC4A  45                 	db	69	;'E'
   492  00FC4B  54                 	db	84	;'T'
   493  00FC4C  45                 	db	69	;'E'
   494  00FC4D  00                 	db	0
   495  00FC4E                     STR_56:
   496                           
   497                           ; BSR set to: 0
   498  00FC4E  28                 	db	40
   499  00FC4F  31                 	db	49	;'1'
   500  00FC50  29                 	db	41
   501  00FC51  20                 	db	32
   502  00FC52  56                 	db	86	;'V'
   503  00FC53  49                 	db	73	;'I'
   504  00FC54  45                 	db	69	;'E'
   505  00FC55  57                 	db	87	;'W'
   506  00FC56  20                 	db	32
   507  00FC57  4C                 	db	76	;'L'
   508  00FC58  4F                 	db	79	;'O'
   509  00FC59  47                 	db	71	;'G'
   510  00FC5A  00                 	db	0
   511  00FC5B                     STR_50:
   512                           
   513                           ; BSR set to: 0
   514  00FC5B  4F                 	db	79	;'O'
   515  00FC5C  50                 	db	80	;'P'
   516  00FC5D  45                 	db	69	;'E'
   517  00FC5E  52                 	db	82	;'R'
   518  00FC5F  41                 	db	65	;'A'
   519  00FC60  54                 	db	84	;'T'
   520  00FC61  49                 	db	73	;'I'
   521  00FC62  4F                 	db	79	;'O'
   522  00FC63  4E                 	db	78	;'N'
   523  00FC64  20                 	db	32
   524  00FC65  49                 	db	73	;'I'
   525  00FC66  4E                 	db	78	;'N'
   526  00FC67  00                 	db	0
   527  00FC68                     STR_29:
   528                           
   529                           ; BSR set to: 0
   530  00FC68  4C                 	db	76	;'L'
   531  00FC69  65                 	db	101	;'e'
   532  00FC6A  61                 	db	97	;'a'
   533  00FC6B  76                 	db	118	;'v'
   534  00FC6C  69                 	db	105	;'i'
   535  00FC6D  6E                 	db	110	;'n'
   536  00FC6E  67                 	db	103	;'g'
   537  00FC6F  20                 	db	32
   538  00FC70  50                 	db	80	;'P'
   539  00FC71  6F                 	db	111	;'o'
   540  00FC72  6C                 	db	108	;'l'
   541  00FC73  65                 	db	101	;'e'
   542  00FC74  00                 	db	0
   543  00FC75                     STR_27:
   544                           
   545                           ; BSR set to: 0
   546  00FC75  25                 	db	37
   547  00FC76  64                 	db	100	;'d'
   548  00FC77  20                 	db	32
   549  00FC78  64                 	db	100	;'d'
   550  00FC79  72                 	db	114	;'r'
   551  00FC7A  6F                 	db	111	;'o'
   552  00FC7B  70                 	db	112	;'p'
   553  00FC7C  70                 	db	112	;'p'
   554  00FC7D  69                 	db	105	;'i'
   555  00FC7E  6E                 	db	110	;'n'
   556  00FC7F  67                 	db	103	;'g'
   557  00FC80  00                 	db	0
   558  00FC81                     STR_62:
   559                           
   560                           ; BSR set to: 0
   561  00FC81  53                 	db	83	;'S'
   562  00FC82  45                 	db	69	;'E'
   563  00FC83  4C                 	db	76	;'L'
   564  00FC84  45                 	db	69	;'E'
   565  00FC85  43                 	db	67	;'C'
   566  00FC86  54                 	db	84	;'T'
   567  00FC87  20                 	db	32
   568  00FC88  4C                 	db	76	;'L'
   569  00FC89  4F                 	db	79	;'O'
   570  00FC8A  47                 	db	71	;'G'
   571  00FC8B  00                 	db	0
   572  00FC8C                     STR_26:
   573                           
   574                           ; BSR set to: 0
   575  00FC8C  25                 	db	37
   576  00FC8D  64                 	db	100	;'d'
   577  00FC8E  20                 	db	32
   578  00FC8F  6F                 	db	111	;'o'
   579  00FC90  6E                 	db	110	;'n'
   580  00FC91  20                 	db	32
   581  00FC92  70                 	db	112	;'p'
   582  00FC93  6F                 	db	111	;'o'
   583  00FC94  6C                 	db	108	;'l'
   584  00FC95  65                 	db	101	;'e'
   585  00FC96  00                 	db	0
   586  00FC97                     STR_18:
   587                           
   588                           ; BSR set to: 0
   589  00FC97  4F                 	db	79	;'O'
   590  00FC98  4E                 	db	78	;'N'
   591  00FC99  20                 	db	32
   592  00FC9A  50                 	db	80	;'P'
   593  00FC9B  4F                 	db	79	;'O'
   594  00FC9C  4C                 	db	76	;'L'
   595  00FC9D  45                 	db	69	;'E'
   596  00FC9E  3A                 	db	58	;':'
   597  00FC9F  20                 	db	32
   598  00FCA0  00                 	db	0
   599  00FCA1                     STR_2:
   600                           
   601                           ; BSR set to: 0
   602  00FCA1  4F                 	db	79	;'O'
   603  00FCA2  50                 	db	80	;'P'
   604  00FCA3  2E                 	db	46
   605  00FCA4  20                 	db	32
   606  00FCA5  54                 	db	84	;'T'
   607  00FCA6  49                 	db	73	;'I'
   608  00FCA7  4D                 	db	77	;'M'
   609  00FCA8  45                 	db	69	;'E'
   610  00FCA9  20                 	db	32
   611  00FCAA  00                 	db	0
   612  00FCAB                     STR_25:
   613                           
   614                           ; BSR set to: 0
   615  00FCAB  54                 	db	84	;'T'
   616  00FCAC  49                 	db	73	;'I'
   617  00FCAD  52                 	db	82	;'R'
   618  00FCAE  45                 	db	69	;'E'
   619  00FCAF  20                 	db	32
   620  00FCB0  44                 	db	68	;'D'
   621  00FCB1  52                 	db	82	;'R'
   622  00FCB2  4F                 	db	79	;'O'
   623  00FCB3  50                 	db	80	;'P'
   624  00FCB4  00                 	db	0
   625  00FCB5                     STR_46:
   626                           
   627                           ; BSR set to: 0
   628  00FCB5  28                 	db	40
   629  00FCB6  31                 	db	49	;'1'
   630  00FCB7  29                 	db	41
   631  00FCB8  20                 	db	32
   632  00FCB9  53                 	db	83	;'S'
   633  00FCBA  54                 	db	84	;'T'
   634  00FCBB  41                 	db	65	;'A'
   635  00FCBC  52                 	db	82	;'R'
   636  00FCBD  54                 	db	84	;'T'
   637  00FCBE  00                 	db	0
   638  00FCBF                     STR_67:
   639                           
   640                           ; BSR set to: 0
   641  00FCBF  77                 	db	119	;'w'
   642  00FCC0  72                 	db	114	;'r'
   643  00FCC1  6F                 	db	111	;'o'
   644  00FCC2  74                 	db	116	;'t'
   645  00FCC3  65                 	db	101	;'e'
   646  00FCC4  3A                 	db	58	;':'
   647  00FCC5  20                 	db	32
   648  00FCC6  25                 	db	37
   649  00FCC7  63                 	db	99	;'c'
   650  00FCC8  00                 	db	0
   651  00FCC9                     STR_42:
   652                           
   653                           ; BSR set to: 0
   654  00FCC9  57                 	db	87	;'W'
   655  00FCCA  45                 	db	69	;'E'
   656  00FCCB  4C                 	db	76	;'L'
   657  00FCCC  43                 	db	67	;'C'
   658  00FCCD  4F                 	db	79	;'O'
   659  00FCCE  4D                 	db	77	;'M'
   660  00FCCF  45                 	db	69	;'E'
   661  00FCD0  20                 	db	32
   662  00FCD1  00                 	db	0
   663  00FCD2                     STR_60:
   664                           
   665                           ; BSR set to: 0
   666  00FCD2  53                 	db	83	;'S'
   667  00FCD3  41                 	db	65	;'A'
   668  00FCD4  56                 	db	86	;'V'
   669  00FCD5  45                 	db	69	;'E'
   670  00FCD6  20                 	db	32
   671  00FCD7  4C                 	db	76	;'L'
   672  00FCD8  4F                 	db	79	;'O'
   673  00FCD9  47                 	db	71	;'G'
   674  00FCDA  00                 	db	0
   675  00FCDB                     STR_52:
   676                           
   677                           ; BSR set to: 0
   678  00FCDB  50                 	db	80	;'P'
   679  00FCDC  52                 	db	82	;'R'
   680  00FCDD  4F                 	db	79	;'O'
   681  00FCDE  47                 	db	71	;'G'
   682  00FCDF  52                 	db	82	;'R'
   683  00FCE0  45                 	db	69	;'E'
   684  00FCE1  53                 	db	83	;'S'
   685  00FCE2  53                 	db	83	;'S'
   686  00FCE3  00                 	db	0
   687  00FCE4                     STR_69:
   688                           
   689                           ; BSR set to: 0
   690  00FCE4  72                 	db	114	;'r'
   691  00FCE5  65                 	db	101	;'e'
   692  00FCE6  61                 	db	97	;'a'
   693  00FCE7  64                 	db	100	;'d'
   694  00FCE8  3A                 	db	58	;':'
   695  00FCE9  20                 	db	32
   696  00FCEA  25                 	db	37
   697  00FCEB  63                 	db	99	;'c'
   698  00FCEC  00                 	db	0
   699  00FCED                     STR_10:
   700                           
   701                           ; BSR set to: 0
   702  00FCED  25                 	db	37
   703  00FCEE  73                 	db	115	;'s'
   704  00FCEF  25                 	db	37
   705  00FCF0  64                 	db	100	;'d'
   706  00FCF1  25                 	db	37
   707  00FCF2  73                 	db	115	;'s'
   708  00FCF3  25                 	db	37
   709  00FCF4  64                 	db	100	;'d'
   710  00FCF5  00                 	db	0
   711  00FCF6                     STR_14:
   712                           
   713                           ; BSR set to: 0
   714  00FCF6  44                 	db	68	;'D'
   715  00FCF7  45                 	db	69	;'E'
   716  00FCF8  50                 	db	80	;'P'
   717  00FCF9  4C                 	db	76	;'L'
   718  00FCFA  3A                 	db	58	;':'
   719  00FCFB  20                 	db	32
   720  00FCFC  00                 	db	0
   721  00FCFD                     STR_1:
   722                           
   723                           ; BSR set to: 0
   724  00FCFD  25                 	db	37
   725  00FCFE  73                 	db	115	;'s'
   726  00FCFF  25                 	db	37
   727  00FD00  64                 	db	100	;'d'
   728  00FD01  25                 	db	37
   729  00FD02  73                 	db	115	;'s'
   730  00FD03  00                 	db	0
   731  00FD04                     STR_16:
   732                           
   733                           ; BSR set to: 0
   734  00FD04  20                 	db	32
   735  00FD05  43                 	db	67	;'C'
   736  00FD06  4D                 	db	77	;'M'
   737  00FD07  3A                 	db	58	;':'
   738  00FD08  20                 	db	32
   739  00FD09  00                 	db	0
   740  00FD0A                     STR_11:
   741                           
   742                           ; BSR set to: 0
   743  00FD0A  50                 	db	80	;'P'
   744  00FD0B  4F                 	db	79	;'O'
   745  00FD0C  4C                 	db	76	;'L'
   746  00FD0D  45                 	db	69	;'E'
   747  00FD0E  20                 	db	32
   748  00FD0F  00                 	db	0
   749  00FD10                     STR_24:
   750                           
   751                           ; BSR set to: 0
   752  00FD10  41                 	db	65	;'A'
   753  00FD11  3A                 	db	58	;':'
   754  00FD12  20                 	db	32
   755  00FD13  25                 	db	37
   756  00FD14  64                 	db	100	;'d'
   757  00FD15  00                 	db	0
   758  00FD16                     STR_23:
   759                           
   760                           ; BSR set to: 0
   761  00FD16  42                 	db	66	;'B'
   762  00FD17  3A                 	db	58	;':'
   763  00FD18  20                 	db	32
   764  00FD19  25                 	db	37
   765  00FD1A  64                 	db	100	;'d'
   766  00FD1B  00                 	db	0
   767  00FD1C                     STR_21:
   768                           
   769                           ; BSR set to: 0
   770  00FD1C  25                 	db	37
   771  00FD1D  6C                 	db	108	;'l'
   772  00FD1E  75                 	db	117	;'u'
   773  00FD1F  00                 	db	0
   774  00FD20                     STR_90:
   775                           
   776                           ; BSR set to: 0
   777  00FD20  6C                 	db	108	;'l'
   778  00FD21  58                 	db	88	;'X'
   779  00FD22  00                 	db	0
   780  00FD23                     STR_72:
   781                           
   782                           ; BSR set to: 0
   783  00FD23  6C                 	db	108	;'l'
   784  00FD24  64                 	db	100	;'d'
   785  00FD25  00                 	db	0
   786  00FD26                     STR_76:
   787                           
   788                           ; BSR set to: 0
   789  00FD26  6C                 	db	108	;'l'
   790  00FD27  69                 	db	105	;'i'
   791  00FD28  00                 	db	0
   792  00FD29                     STR_86:
   793                           
   794                           ; BSR set to: 0
   795  00FD29  6C                 	db	108	;'l'
   796  00FD2A  78                 	db	120	;'x'
   797  00FD2B  00                 	db	0
   798  00FD2C                     STR_12:
   799                           
   800                           ; BSR set to: 0
   801  00FD2C  2F                 	db	47
   802  00FD2D  00                 	db	0
   803  0000                     
   804                           ; #config settings
   805  00FD2E  00                 	db	0	; dummy byte at the end
   806  0000                     
   807                           	psect	cinit
   808  004102                     __pcinit:
   809                           	opt callstack 0
   810  004102                     start_initialization:
   811                           	opt callstack 0
   812  004102                     __initialization:
   813                           	opt callstack 0
   814                           
   815                           ; Initialize objects allocated to BANK0 (9 bytes)
   816                           ; load TBLPTR registers with __pidataBANK0
   817  004102  0EB4               	movlw	low __pidataBANK0
   818  004104  6EF6               	movwf	tblptrl,c
   819  004106  0E48               	movlw	high __pidataBANK0
   820  004108  6EF7               	movwf	tblptrh,c
   821  00410A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   822  00410C  6EF8               	movwf	tblptru,c
   823  00410E  EE00  F0EA         	lfsr	0,__pdataBANK0
   824  004112  EE10 F009          	lfsr	1,9
   825  004116                     copy_data0:
   826  004116  0009               	tblrd		*+
   827  004118  CFF5 FFEE          	movff	tablat,postinc0
   828  00411C  50E5               	movf	postdec1,w,c
   829  00411E  50E1               	movf	fsr1l,w,c
   830  004120  E1FA               	bnz	copy_data0
   831                           
   832                           ; Clear objects allocated to BIGRAM (480 bytes)
   833  004122  EE01  F093         	lfsr	0,__pbssBIGRAM
   834  004126  EE11 F0E0          	lfsr	1,480
   835  00412A                     clear_0:
   836  00412A  6AEE               	clrf	postinc0,c
   837  00412C  50E5               	movf	postdec1,w,c
   838  00412E  50E1               	movf	fsr1l,w,c
   839  004130  E1FC               	bnz	clear_0
   840  004132  50E2               	movf	fsr1h,w,c
   841  004134  E1FA               	bnz	clear_0
   842                           
   843                           ; Clear objects allocated to BANK1 (40 bytes)
   844  004136  EE01  F06B         	lfsr	0,__pbssBANK1
   845  00413A  0E28               	movlw	40
   846  00413C                     clear_1:
   847  00413C  6AEE               	clrf	postinc0,c
   848  00413E  06E8               	decf	wreg,f,c
   849  004140  E1FD               	bnz	clear_1
   850                           
   851                           ; Clear objects allocated to BANK0 (19 bytes)
   852  004142  EE00  F0D7         	lfsr	0,__pbssBANK0
   853  004146  0E13               	movlw	19
   854  004148                     clear_2:
   855  004148  6AEE               	clrf	postinc0,c
   856  00414A  06E8               	decf	wreg,f,c
   857  00414C  E1FD               	bnz	clear_2
   858                           
   859                           ; Clear objects allocated to COMRAM (6 bytes)
   860  00414E  6A79               	clrf	(__pbssCOMRAM+5)& (0+255),c
   861  004150  6A78               	clrf	(__pbssCOMRAM+4)& (0+255),c
   862  004152  6A77               	clrf	(__pbssCOMRAM+3)& (0+255),c
   863  004154  6A76               	clrf	(__pbssCOMRAM+2)& (0+255),c
   864  004156  6A75               	clrf	(__pbssCOMRAM+1)& (0+255),c
   865  004158  6A74               	clrf	__pbssCOMRAM& (0+255),c
   866  00415A                     end_of_initialization:
   867                           	opt callstack 0
   868  00415A                     __end_of__initialization:
   869                           	opt callstack 0
   870  00415A  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   871  00415C  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   872  00415E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   873  004160  6EF8               	movwf	tblptru,c
   874  004162  0100               	movlb	0
   875  004164  EFD8  F008         	goto	_main	;jump to C main() function
   876                           
   877                           	psect	bssCOMRAM
   878  000074                     __pbssCOMRAM:
   879                           	opt callstack 0
   880  000074                     _millisecondsMeasured:
   881                           	opt callstack 0
   882  000074                     	ds	4
   883  000078                     _flags:
   884                           	opt callstack 0
   885  000078                     	ds	2
   886                           
   887                           	psect	bssBANK0
   888  0000D7                     __pbssBANK0:
   889                           	opt callstack 0
   890  0000D7                     _motorBDistance:
   891                           	opt callstack 0
   892  0000D7                     	ds	4
   893  0000DB                     _motorADistance:
   894                           	opt callstack 0
   895  0000DB                     	ds	4
   896  0000DF                     _nout:
   897                           	opt callstack 0
   898  0000DF                     	ds	2
   899  0000E1                     _width:
   900                           	opt callstack 0
   901  0000E1                     	ds	2
   902  0000E3                     _prec:
   903                           	opt callstack 0
   904  0000E3                     	ds	2
   905  0000E5                     _encoderAInterruptLast:
   906                           	opt callstack 0
   907  0000E5                     	ds	1
   908  0000E6                     _encoderBInterruptLast:
   909                           	opt callstack 0
   910  0000E6                     	ds	1
   911  0000E7                     _bottomBreakBeamTriggeredChange:
   912                           	opt callstack 0
   913  0000E7                     	ds	1
   914  0000E8                     _topBreakBeamTriggeredChange:
   915                           	opt callstack 0
   916  0000E8                     	ds	1
   917  0000E9                     _keyPressed:
   918                           	opt callstack 0
   919  0000E9                     	ds	1
   920                           
   921                           	psect	dataBANK0
   922  0000EA                     __pdataBANK0:
   923                           	opt callstack 0
   924  0000EA                     stoa@F1144:
   925                           	opt callstack 0
   926  0000EA                     	ds	7
   927  0000F1                     _motorADirection:
   928                           	opt callstack 0
   929  0000F1                     	ds	1
   930  0000F2                     _motorBDirection:
   931                           	opt callstack 0
   932  0000F2                     	ds	1
   933                           
   934                           	psect	bssBANK1
   935  00016B                     __pbssBANK1:
   936                           	opt callstack 0
   937  00016B                     	ds	8
   938  000173                     _dbuf:
   939                           	opt callstack 0
   940  000173                     	ds	32
   941                           
   942                           	psect	bssBIGRAM
   943  000193                     __pbssBIGRAM:
   944                           	opt callstack 0
   945  000193                     _logs:
   946                           	opt callstack 0
   947  000193                     	ds	480
   948                           
   949                           	psect	cstackBANK1
   950  000100                     __pcstackBANK1:
   951                           	opt callstack 0
   952  000100                     doOperation@PIDData:
   953                           	opt callstack 0
   954                           
   955                           ; 8 bytes @ 0x0
   956  000100                     	ds	8
   957  000108                     doOperation@startedDistA:
   958                           	opt callstack 0
   959                           
   960                           ; 4 bytes @ 0x8
   961  000108                     	ds	4
   962  00010C                     doOperation@startedDistB:
   963                           	opt callstack 0
   964                           
   965                           ; 4 bytes @ 0xC
   966  00010C                     	ds	18
   967  00011E                     doOperation@rightRangeFinder:
   968                           	opt callstack 0
   969                           
   970                           ; 2 bytes @ 0x1E
   971  00011E                     	ds	2
   972  000120                     doOperation@accelerationDelay:
   973                           	opt callstack 0
   974                           
   975                           ; 2 bytes @ 0x20
   976  000120                     	ds	2
   977  000122                     doOperation@motorStartTime:
   978                           	opt callstack 0
   979                           
   980                           ; 4 bytes @ 0x22
   981  000122                     	ds	4
   982  000126                     doOperation@send:
   983                           	opt callstack 0
   984                           
   985                           ; 1 bytes @ 0x26
   986  000126                     	ds	1
   987  000127                     doOperation@badCount:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x27
   991  000127                     	ds	2
   992  000129                     doOperation@badCountBot:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x29
   996  000129                     	ds	2
   997  00012B                     doOperation@tiresOnPoleAfterOp:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2B
  1001  00012B                     	ds	2
  1002  00012D                     doOperation@timeStart:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x2D
  1006  00012D                     	ds	4
  1007  000131                     doOperation@motorAStartDistance:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x31
  1011  000131                     	ds	4
  1012  000135                     doOperation@motorBStartDistance:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x35
  1016  000135                     	ds	4
  1017  000139                     doOperation@isDoneDrop:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x39
  1021  000139                     	ds	1
  1022  00013A                     doOperation@counted:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x3A
  1026  00013A                     	ds	2
  1027  00013C                     doOperation@distanceFromLastPoleCM:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x3C
  1031  00013C                     	ds	2
  1032  00013E                     doOperation@distanceToPole:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x3E
  1036  00013E                     	ds	4
  1037  000142                     doOperation@distanceFromLastPole:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x42
  1041  000142                     	ds	4
  1042  000146                     doOperation@totalTiresSupplied:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x46
  1046  000146                     	ds	2
  1047  000148                     doOperation@distanceToPoleCM:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x48
  1051  000148                     	ds	2
  1052  00014A                     doOperation@topLaserStatePrev:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x4A
  1056  00014A                     	ds	1
  1057  00014B                     doOperation@bottomLaserStatePrev:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x4B
  1061  00014B                     	ds	1
  1062  00014C                     doOperation@timeInOperation:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x4C
  1066  00014C                     	ds	4
  1067  000150                     doOperation@bottomLaserState:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x50
  1071  000150                     	ds	1
  1072  000151                     doOperation@currentOperationState:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x51
  1076  000151                     	ds	1
  1077  000152                     doOperation@tiresToDrop:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x52
  1081  000152                     	ds	2
  1082  000154                     doOperation@topLaserState:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x54
  1086  000154                     	ds	1
  1087  000155                     doOperation@tiresDeployedOnPole:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x55
  1091  000155                     	ds	2
  1092  000157                     doOperation@tiresOnPole:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x57
  1096  000157                     	ds	2
  1097  000159                     doOperation@poleNumber:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x59
  1101  000159                     	ds	2
  1102  00015B                     main@time:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 7 bytes @ 0x5B
  1106  00015B                     	ds	7
  1107  000162                     main@tick:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x62
  1111  000162                     	ds	4
  1112  000166                     main@keypress:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x66
  1116  000166                     	ds	1
  1117  000167                     main@i:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x67
  1121  000167                     	ds	1
  1122  000168                     main@currentLogState:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x68
  1126  000168                     	ds	1
  1127  000169                     main@currentRobotState:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x69
  1131  000169                     	ds	1
  1132  00016A                     main@keyValue:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x6A
  1136  00016A                     	ds	1
  1137                           
  1138                           	psect	cstackBANK0
  1139  000080                     __pcstackBANK0:
  1140                           	opt callstack 0
  1141  000080                     set_pwm_duty_cycle@max_duty_val:
  1142                           	opt callstack 0
  1143  000080                     vfpfcnvrt@cp:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x0
  1147  000080                     	ds	2
  1148  000082                     set_pwm_duty_cycle@duty_valA:
  1149                           	opt callstack 0
  1150  000082                     vfpfcnvrt@done:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2
  1154  000082                     	ds	2
  1155  000084                     set_pwm_duty_cycle@duty_valB:
  1156                           	opt callstack 0
  1157  000084                     _vfpfcnvrt$1492:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x4
  1161  000084                     	ds	2
  1162  000086                     _set_pwm_duty_cycle$2392:
  1163                           	opt callstack 0
  1164  000086                     vfpfcnvrt@ll:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 8 bytes @ 0x6
  1168  000086                     	ds	4
  1169  00008A                     setMotorSpeeds@motorASpeed:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xA
  1173  00008A                     	ds	2
  1174  00008C                     setMotorSpeeds@Aforward:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 1 bytes @ 0xC
  1178  00008C                     	ds	1
  1179  00008D                     setMotorSpeeds@Bforward:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 1 bytes @ 0xD
  1183  00008D                     	ds	1
  1184  00008E                     vfpfcnvrt@c:
  1185                           	opt callstack 0
  1186  00008E                     setMotorSpeeds@motorBSpeed:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0xE
  1190  00008E                     	ds	1
  1191  00008F                     vfpfcnvrt@llu:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 8 bytes @ 0xF
  1195  00008F                     	ds	1
  1196  000090                     _setMotorSpeeds$2393:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x10
  1200  000090                     	ds	4
  1201  000094                     _setMotorSpeeds$2394:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x14
  1205  000094                     	ds	3
  1206  000097                     ?_vfprintf:
  1207                           	opt callstack 0
  1208  000097                     vfprintf@fp:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x17
  1212  000097                     	ds	1
  1213  000098                     ?_tirePositioning:
  1214                           	opt callstack 0
  1215  000098                     errorCorrectedMove@goalSpeed:
  1216                           	opt callstack 0
  1217  000098                     tirePositioning@maxOperationTime:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x18
  1221  000098                     	ds	1
  1222  000099                     vfprintf@fmt:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x19
  1226  000099                     	ds	1
  1227  00009A                     errorCorrectedMove@turnRatio:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x1A
  1231  00009A                     	ds	1
  1232  00009B                     vfprintf@ap:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x1B
  1236  00009B                     	ds	1
  1237  00009C                     ??_tirePositioning:
  1238                           
  1239                           ; 1 bytes @ 0x1C
  1240  00009C                     	ds	1
  1241  00009D                     ?_printf:
  1242                           	opt callstack 0
  1243  00009D                     printf@fmt:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x1D
  1247  00009D                     	ds	1
  1248  00009E                     errorCorrectedMove@motorAStartDistance:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x1E
  1252  00009E                     	ds	3
  1253  0000A1                     tirePositioning@startDistanceTop:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x21
  1257  0000A1                     	ds	1
  1258  0000A2                     errorCorrectedMove@motorBStartDistance:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x22
  1262  0000A2                     	ds	3
  1263  0000A5                     tirePositioning@startDistanceBottom:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x25
  1267  0000A5                     	ds	1
  1268  0000A6                     errorCorrectedMove@correctionConstant:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x26
  1272  0000A6                     	ds	1
  1273  0000A7                     doDisplayLog@logNumber:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x27
  1277  0000A7                     	ds	2
  1278  0000A9                     tirePositioning@startDistance:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x29
  1282  0000A9                     	ds	1
  1283  0000AA                     errorCorrectedMove@error:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x2A
  1287  0000AA                     	ds	3
  1288  0000AD                     tirePositioning@topPreviousState:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2D
  1292  0000AD                     	ds	1
  1293  0000AE                     errorCorrectedMove@ASpeed:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x2E
  1297  0000AE                     	ds	1
  1298  0000AF                     tirePositioning@bottomPreviousState:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x2F
  1302  0000AF                     	ds	1
  1303  0000B0                     errorCorrectedMove@BSpeed:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x30
  1307  0000B0                     	ds	1
  1308  0000B1                     tirePositioning@distanceRecordedTop:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x31
  1312  0000B1                     	ds	1
  1313  0000B2                     opErrorCorrectionDegrees@goalSpeed:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x32
  1317  0000B2                     	ds	2
  1318  0000B4                     opErrorCorrectionDegrees@turnRatio:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x34
  1322  0000B4                     	ds	1
  1323  0000B5                     tirePositioning@distanceRecordedBottom:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x35
  1327  0000B5                     	ds	1
  1328  0000B6                     opErrorCorrectionDegrees@correctionConstant:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x36
  1332  0000B6                     	ds	3
  1333  0000B9                     tirePositioning@topBreakbeam:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x39
  1337  0000B9                     	ds	1
  1338  0000BA                     opErrorCorrectionDegrees@distanceDegrees:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x3A
  1342  0000BA                     	ds	1
  1343  0000BB                     tirePositioning@bottomBreakbeam:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x3B
  1347  0000BB                     	ds	3
  1348  0000BE                     opErrorCorrectionDegrees@maxOperationTime:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 4 bytes @ 0x3E
  1352  0000BE                     	ds	4
  1353  0000C2                     ??_opErrorCorrectionDegrees:
  1354                           
  1355                           ; 1 bytes @ 0x42
  1356  0000C2                     	ds	5
  1357  0000C7                     opErrorCorrectionDegrees@motorBStartDistance:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x47
  1361  0000C7                     	ds	4
  1362  0000CB                     _opErrorCorrectionDegrees$2396:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x4B
  1366  0000CB                     	ds	4
  1367  0000CF                     opErrorCorrectionDegrees@motorAStartDistance:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x4F
  1371  0000CF                     	ds	4
  1372  0000D3                     ??_doOperation:
  1373                           
  1374                           ; 1 bytes @ 0x53
  1375  0000D3                     	ds	4
  1376                           
  1377                           	psect	cstackCOMRAM
  1378  000001                     __pcstackCOMRAM:
  1379                           	opt callstack 0
  1380  000001                     ??_updateMotorBEncoder:
  1381  000001                     ??_updateMotorAEncoder:
  1382  000001                     
  1383                           ; 1 bytes @ 0x0
  1384  000001                     	ds	1
  1385  000002                     updateMotorBEncoder@interruptPinState:
  1386                           	opt callstack 0
  1387  000002                     updateMotorAEncoder@interruptPinState:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x1
  1391  000002                     	ds	2
  1392  000004                     updateMotorBEncoder@directionPin:
  1393                           	opt callstack 0
  1394  000004                     updateMotorAEncoder@directionPin:
  1395                           	opt callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x3
  1398  000004                     	ds	2
  1399  000006                     ??_I2C_Master_Wait:
  1400  000006                     ?_strlen:
  1401                           	opt callstack 0
  1402  000006                     ?_isupper:
  1403                           	opt callstack 0
  1404  000006                     ?_isalpha:
  1405                           	opt callstack 0
  1406  000006                     ?_isdigit:
  1407                           	opt callstack 0
  1408  000006                     ?_strncmp:
  1409                           	opt callstack 0
  1410  000006                     ?_isspace:
  1411                           	opt callstack 0
  1412  000006                     ?_islower:
  1413                           	opt callstack 0
  1414  000006                     ?___wmul:
  1415                           	opt callstack 0
  1416  000006                     ?___awmod:
  1417                           	opt callstack 0
  1418  000006                     ?___lldiv:
  1419                           	opt callstack 0
  1420  000006                     ?___aldiv:
  1421                           	opt callstack 0
  1422  000006                     ?___llmod:
  1423                           	opt callstack 0
  1424  000006                     ?___xxtofl:
  1425                           	opt callstack 0
  1426  000006                     ?___aodiv:
  1427                           	opt callstack 0
  1428  000006                     ?___aomod:
  1429                           	opt callstack 0
  1430  000006                     ?___lodiv:
  1431                           	opt callstack 0
  1432  000006                     ?___lomod:
  1433                           	opt callstack 0
  1434  000006                     pulse_e@interruptState:
  1435                           	opt callstack 0
  1436  000006                     opDelay@millis:
  1437                           	opt callstack 0
  1438  000006                     replaceOldLog@i:
  1439                           	opt callstack 0
  1440  000006                     ___wmul@multiplier:
  1441                           	opt callstack 0
  1442  000006                     ___awmod@dividend:
  1443                           	opt callstack 0
  1444  000006                     isalpha@c:
  1445                           	opt callstack 0
  1446  000006                     isdigit@c:
  1447                           	opt callstack 0
  1448  000006                     isspace@c:
  1449                           	opt callstack 0
  1450  000006                     isupper@c:
  1451                           	opt callstack 0
  1452  000006                     strlen@s:
  1453                           	opt callstack 0
  1454  000006                     strncmp@_l:
  1455                           	opt callstack 0
  1456  000006                     islower@c:
  1457                           	opt callstack 0
  1458  000006                     ___lldiv@dividend:
  1459                           	opt callstack 0
  1460  000006                     ___aldiv@dividend:
  1461                           	opt callstack 0
  1462  000006                     ___llmod@dividend:
  1463                           	opt callstack 0
  1464  000006                     ___xxtofl@val:
  1465                           	opt callstack 0
  1466  000006                     ___aodiv@dividend:
  1467                           	opt callstack 0
  1468  000006                     ___aomod@dividend:
  1469                           	opt callstack 0
  1470  000006                     ___lodiv@dividend:
  1471                           	opt callstack 0
  1472  000006                     ___lomod@dividend:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 8 bytes @ 0x5
  1476  000006                     	ds	1
  1477  000007                     send_nibble@data:
  1478                           	opt callstack 0
  1479  000007                     I2C_Master_Read@ackBit:
  1480                           	opt callstack 0
  1481  000007                     I2C_Master_Write@byteToWrite:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x6
  1485  000007                     	ds	1
  1486  000008                     ??_isupper:
  1487  000008                     ??_isalpha:
  1488  000008                     ??_isdigit:
  1489  000008                     ??_isspace:
  1490  000008                     ??_islower:
  1491  000008                     send_byte@data:
  1492                           	opt callstack 0
  1493  000008                     I2C_Master_Read@receivedByte:
  1494                           	opt callstack 0
  1495  000008                     replaceOldLog@i_1083:
  1496                           	opt callstack 0
  1497  000008                     ___wmul@multiplicand:
  1498                           	opt callstack 0
  1499  000008                     ___awmod@divisor:
  1500                           	opt callstack 0
  1501  000008                     strlen@a:
  1502                           	opt callstack 0
  1503  000008                     strncmp@_r:
  1504                           	opt callstack 0
  1505  000008                     opDelay@maxOperationTime:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x7
  1509  000008                     	ds	1
  1510  000009                     requestIsTireDropDone@data:
  1511                           	opt callstack 0
  1512  000009                     lcdInst@data:
  1513                           	opt callstack 0
  1514  000009                     putch@data:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x8
  1518  000009                     	ds	1
  1519  00000A                     ??_initLCD:
  1520  00000A                     ??___xxtofl:
  1521  00000A                     ___awmod@counter:
  1522                           	opt callstack 0
  1523  00000A                     replaceOldLog@i_1084:
  1524                           	opt callstack 0
  1525  00000A                     ___wmul@product:
  1526                           	opt callstack 0
  1527  00000A                     fputc@c:
  1528                           	opt callstack 0
  1529  00000A                     strncmp@n:
  1530                           	opt callstack 0
  1531  00000A                     ___lldiv@divisor:
  1532                           	opt callstack 0
  1533  00000A                     ___aldiv@divisor:
  1534                           	opt callstack 0
  1535  00000A                     ___llmod@divisor:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 4 bytes @ 0x9
  1539  00000A                     	ds	1
  1540  00000B                     ___awmod@sign:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 1 bytes @ 0xA
  1544  00000B                     	ds	1
  1545  00000C                     ??_strncmp:
  1546  00000C                     ??_opDelay:
  1547  00000C                     ?_toupper:
  1548                           	opt callstack 0
  1549  00000C                     _isspace$2003:
  1550                           	opt callstack 0
  1551  00000C                     replaceOldLog@i_1085:
  1552                           	opt callstack 0
  1553  00000C                     fputc@fp:
  1554                           	opt callstack 0
  1555  00000C                     toupper@c:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 2 bytes @ 0xB
  1559  00000C                     	ds	1
  1560  00000D                     ?_atoi:
  1561                           	opt callstack 0
  1562  00000D                     atoi@s:
  1563                           	opt callstack 0
  1564  00000D                     strncmp@l:
  1565                           	opt callstack 0
  1566                           
  1567                           ; 2 bytes @ 0xC
  1568  00000D                     	ds	1
  1569  00000E                     ??_fputc:
  1570  00000E                     ??_toupper:
  1571  00000E                     ___aldiv@counter:
  1572                           	opt callstack 0
  1573  00000E                     ___llmod@counter:
  1574                           	opt callstack 0
  1575  00000E                     ___xxtofl@sign:
  1576                           	opt callstack 0
  1577  00000E                     ___lldiv@quotient:
  1578                           	opt callstack 0
  1579  00000E                     ___aodiv@divisor:
  1580                           	opt callstack 0
  1581  00000E                     ___aomod@divisor:
  1582                           	opt callstack 0
  1583  00000E                     ___lodiv@divisor:
  1584                           	opt callstack 0
  1585  00000E                     ___lomod@divisor:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 8 bytes @ 0xD
  1589  00000E                     	ds	1
  1590  00000F                     ??_atoi:
  1591  00000F                     ___aldiv@sign:
  1592                           	opt callstack 0
  1593  00000F                     ___xxtofl@exp:
  1594                           	opt callstack 0
  1595  00000F                     strncmp@r:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0xE
  1599  00000F                     	ds	1
  1600  000010                     ___aldiv@quotient:
  1601                           	opt callstack 0
  1602  000010                     ___xxtofl@arg:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 4 bytes @ 0xF
  1606  000010                     	ds	2
  1607  000012                     ___lldiv@counter:
  1608                           	opt callstack 0
  1609  000012                     _toupper$2073:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x11
  1613  000012                     	ds	1
  1614  000013                     ?_stoa:
  1615                           	opt callstack 0
  1616  000013                     stoa@fp:
  1617                           	opt callstack 0
  1618  000013                     atoi@neg:
  1619                           	opt callstack 0
  1620  000013                     fputs@s:
  1621                           	opt callstack 0
  1622  000013                     I2C_Master_Init@clockFreq:
  1623                           	opt callstack 0
  1624                           
  1625                           ; 4 bytes @ 0x12
  1626  000013                     	ds	1
  1627  000014                     ?___fldiv:
  1628                           	opt callstack 0
  1629  000014                     opDelay@startTime:
  1630                           	opt callstack 0
  1631  000014                     ___flge@ff1:
  1632                           	opt callstack 0
  1633  000014                     ___fldiv@b:
  1634                           	opt callstack 0
  1635                           
  1636                           ; 4 bytes @ 0x13
  1637  000014                     	ds	1
  1638  000015                     stoa@s:
  1639                           	opt callstack 0
  1640  000015                     _atoi$1976:
  1641                           	opt callstack 0
  1642  000015                     fputs@fp:
  1643                           	opt callstack 0
  1644                           
  1645                           ; 2 bytes @ 0x14
  1646  000015                     	ds	1
  1647  000016                     ___aodiv@counter:
  1648                           	opt callstack 0
  1649  000016                     ___aomod@counter:
  1650                           	opt callstack 0
  1651  000016                     ___lomod@counter:
  1652                           	opt callstack 0
  1653  000016                     ___lodiv@quotient:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 8 bytes @ 0x15
  1657  000016                     	ds	1
  1658  000017                     ??_I2C_Master_Init:
  1659  000017                     ??_stoa:
  1660  000017                     ___aodiv@sign:
  1661                           	opt callstack 0
  1662  000017                     ___aomod@sign:
  1663                           	opt callstack 0
  1664  000017                     fputs@c:
  1665                           	opt callstack 0
  1666  000017                     _atoi$1978:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x16
  1670  000017                     	ds	1
  1671  000018                     ?_abs:
  1672                           	opt callstack 0
  1673  000018                     abs@a:
  1674                           	opt callstack 0
  1675  000018                     fputs@i:
  1676                           	opt callstack 0
  1677  000018                     ___flge@ff2:
  1678                           	opt callstack 0
  1679  000018                     ___fldiv@a:
  1680                           	opt callstack 0
  1681  000018                     stoa@nuls:
  1682                           	opt callstack 0
  1683  000018                     ___aodiv@quotient:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 8 bytes @ 0x17
  1687  000018                     	ds	1
  1688  000019                     _atoi$1977:
  1689                           	opt callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x18
  1692  000019                     	ds	1
  1693  00001A                     ??_abs:
  1694  00001A                     ?_pad:
  1695                           	opt callstack 0
  1696  00001A                     pad@fp:
  1697                           	opt callstack 0
  1698  00001A                     atoi@n:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x19
  1702  00001A                     	ds	1
  1703  00001B                     
  1704                           ; 1 bytes @ 0x1A
  1705  00001B                     	ds	1
  1706  00001C                     ??___fldiv:
  1707  00001C                     ??___flge:
  1708  00001C                     pad@buf:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x1B
  1712  00001C                     	ds	2
  1713  00001E                     ___lodiv@counter:
  1714                           	opt callstack 0
  1715  00001E                     pad@p:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x1D
  1719  00001E                     	ds	1
  1720  00001F                     stoa@i:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 2 bytes @ 0x1E
  1724  00001F                     	ds	1
  1725  000020                     ??_pad:
  1726  000020                     ___fldiv@rem:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x1F
  1730  000020                     	ds	1
  1731  000021                     pad@i:
  1732                           	opt callstack 0
  1733  000021                     stoa@w:
  1734                           	opt callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x20
  1737  000021                     	ds	2
  1738  000023                     pad@w:
  1739                           	opt callstack 0
  1740  000023                     stoa@cp:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x22
  1744  000023                     	ds	1
  1745  000024                     ___fldiv@sign:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x23
  1749  000024                     	ds	1
  1750  000025                     ?_ctoa:
  1751                           	opt callstack 0
  1752  000025                     ?_dtoa:
  1753                           	opt callstack 0
  1754  000025                     ?_utoa:
  1755                           	opt callstack 0
  1756  000025                     ?_xtoa:
  1757                           	opt callstack 0
  1758  000025                     ctoa@fp:
  1759                           	opt callstack 0
  1760  000025                     dtoa@fp:
  1761                           	opt callstack 0
  1762  000025                     stoa@p:
  1763                           	opt callstack 0
  1764  000025                     utoa@fp:
  1765                           	opt callstack 0
  1766  000025                     xtoa@fp:
  1767                           	opt callstack 0
  1768  000025                     ___fldiv@new_exp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x24
  1772  000025                     	ds	2
  1773  000027                     ctoa@c:
  1774                           	opt callstack 0
  1775  000027                     stoa@l:
  1776                           	opt callstack 0
  1777  000027                     ___fldiv@grs:
  1778                           	opt callstack 0
  1779  000027                     dtoa@d:
  1780                           	opt callstack 0
  1781  000027                     utoa@d:
  1782                           	opt callstack 0
  1783  000027                     xtoa@d:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 8 bytes @ 0x26
  1787  000027                     	ds	1
  1788  000028                     ctoa@w:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 2 bytes @ 0x27
  1792  000028                     	ds	3
  1793  00002B                     ___fldiv@bexp:
  1794                           	opt callstack 0
  1795                           
  1796                           ; 1 bytes @ 0x2A
  1797  00002B                     	ds	1
  1798  00002C                     ___fldiv@aexp:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 1 bytes @ 0x2B
  1802  00002C                     	ds	1
  1803  00002D                     ?___flmul:
  1804                           	opt callstack 0
  1805  00002D                     ___flmul@b:
  1806                           	opt callstack 0
  1807                           
  1808                           ; 4 bytes @ 0x2C
  1809  00002D                     	ds	2
  1810  00002F                     ??_dtoa:
  1811  00002F                     ??_utoa:
  1812  00002F                     xtoa@x:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x2E
  1816  00002F                     	ds	1
  1817  000030                     ??_xtoa:
  1818                           
  1819                           ; 1 bytes @ 0x2F
  1820  000030                     	ds	1
  1821  000031                     ___flmul@a:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 4 bytes @ 0x30
  1825  000031                     	ds	4
  1826  000035                     ??___flmul:
  1827                           
  1828                           ; 1 bytes @ 0x34
  1829  000035                     	ds	2
  1830  000037                     _dtoa$1449:
  1831                           	opt callstack 0
  1832  000037                     utoa@p:
  1833                           	opt callstack 0
  1834                           
  1835                           ; 2 bytes @ 0x36
  1836  000037                     	ds	1
  1837  000038                     _xtoa$1477:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 2 bytes @ 0x37
  1841  000038                     	ds	1
  1842  000039                     ___flmul@sign:
  1843                           	opt callstack 0
  1844  000039                     dtoa@p:
  1845                           	opt callstack 0
  1846  000039                     utoa@w:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 2 bytes @ 0x38
  1850  000039                     	ds	1
  1851  00003A                     ___flmul@aexp:
  1852                           	opt callstack 0
  1853  00003A                     _xtoa$1478:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x39
  1857  00003A                     	ds	1
  1858  00003B                     dtoa@w:
  1859                           	opt callstack 0
  1860  00003B                     ___flmul@grs:
  1861                           	opt callstack 0
  1862  00003B                     utoa@n:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 8 bytes @ 0x3A
  1866  00003B                     	ds	1
  1867  00003C                     xtoa@p:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x3B
  1871  00003C                     	ds	1
  1872  00003D                     dtoa@s:
  1873                           	opt callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x3C
  1876  00003D                     	ds	1
  1877  00003E                     xtoa@w:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x3D
  1881  00003E                     	ds	1
  1882  00003F                     ___flmul@bexp:
  1883                           	opt callstack 0
  1884  00003F                     dtoa@n:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 8 bytes @ 0x3E
  1888  00003F                     	ds	1
  1889  000040                     ___flmul@prod:
  1890                           	opt callstack 0
  1891  000040                     xtoa@n:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 8 bytes @ 0x3F
  1895  000040                     	ds	3
  1896  000043                     utoa@i:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0x42
  1900  000043                     	ds	1
  1901  000044                     ___flmul@temp:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x43
  1905  000044                     	ds	2
  1906  000046                     ?___fladd:
  1907                           	opt callstack 0
  1908  000046                     ___fladd@b:
  1909                           	opt callstack 0
  1910                           
  1911                           ; 4 bytes @ 0x45
  1912  000046                     	ds	1
  1913  000047                     dtoa@i:
  1914                           	opt callstack 0
  1915                           
  1916                           ; 2 bytes @ 0x46
  1917  000047                     	ds	1
  1918  000048                     xtoa@i:
  1919                           	opt callstack 0
  1920                           
  1921                           ; 2 bytes @ 0x47
  1922  000048                     	ds	2
  1923  00004A                     xtoa@c:
  1924                           	opt callstack 0
  1925  00004A                     ___fladd@a:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x49
  1929  00004A                     	ds	2
  1930  00004C                     ?_vfpfcnvrt:
  1931                           	opt callstack 0
  1932  00004C                     vfpfcnvrt@fp:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x4B
  1936  00004C                     	ds	2
  1937  00004E                     ??___fladd:
  1938  00004E                     vfpfcnvrt@fmt:
  1939                           	opt callstack 0
  1940                           
  1941                           ; 2 bytes @ 0x4D
  1942  00004E                     	ds	2
  1943  000050                     vfpfcnvrt@ap:
  1944                           	opt callstack 0
  1945                           
  1946                           ; 2 bytes @ 0x4F
  1947  000050                     	ds	2
  1948  000052                     ??_vfpfcnvrt:
  1949  000052                     ___fladd@signs:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 1 bytes @ 0x51
  1953  000052                     	ds	1
  1954  000053                     ___fladd@aexp:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 1 bytes @ 0x52
  1958  000053                     	ds	1
  1959  000054                     ___fladd@bexp:
  1960                           	opt callstack 0
  1961                           
  1962                           ; 1 bytes @ 0x53
  1963  000054                     	ds	1
  1964  000055                     ___fladd@grs:
  1965                           	opt callstack 0
  1966                           
  1967                           ; 1 bytes @ 0x54
  1968  000055                     	ds	1
  1969  000056                     ?___flsub:
  1970                           	opt callstack 0
  1971  000056                     ___flsub@b:
  1972                           	opt callstack 0
  1973                           
  1974                           ; 4 bytes @ 0x55
  1975  000056                     	ds	4
  1976  00005A                     ___flsub@a:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 4 bytes @ 0x59
  1980  00005A                     	ds	4
  1981  00005E                     ?___fltol:
  1982                           	opt callstack 0
  1983  00005E                     ___fltol@f1:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 4 bytes @ 0x5D
  1987  00005E                     	ds	2
  1988  000060                     vfprintf@cfmt:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x5F
  1992  000060                     	ds	2
  1993  000062                     ??___fltol:
  1994                           
  1995                           ; 1 bytes @ 0x61
  1996  000062                     	ds	2
  1997  000064                     printf@ap:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x63
  2001  000064                     	ds	2
  2002  000066                     ??_doDisplayLog:
  2003  000066                     ___fltol@sign1:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x65
  2007  000066                     	ds	1
  2008  000067                     ___fltol@exp1:
  2009                           	opt callstack 0
  2010                           
  2011                           ; 1 bytes @ 0x66
  2012  000067                     	ds	1
  2013  000068                     set_pwm_duty_cycle@dutyA:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 4 bytes @ 0x67
  2017  000068                     	ds	1
  2018  000069                     doDisplayLog@keypress:
  2019                           	opt callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x68
  2022  000069                     	ds	1
  2023  00006A                     doDisplayLog@currentDisplayState:
  2024                           	opt callstack 0
  2025                           
  2026                           ; 1 bytes @ 0x69
  2027  00006A                     	ds	1
  2028  00006B                     doDisplayLog@keyValue:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 1 bytes @ 0x6A
  2032  00006B                     	ds	1
  2033  00006C                     _doDisplayLog$2391:
  2034                           	opt callstack 0
  2035  00006C                     set_pwm_duty_cycle@dutyB:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 4 bytes @ 0x6B
  2039  00006C                     	ds	2
  2040  00006E                     doDisplayLog@currentPole:
  2041                           	opt callstack 0
  2042                           
  2043                           ; 2 bytes @ 0x6D
  2044  00006E                     	ds	2
  2045  000070                     ??_set_pwm_duty_cycle:
  2046                           
  2047                           ; 1 bytes @ 0x6F
  2048  000070                     	ds	2
  2049  000072                     ??_main:
  2050                           
  2051                           ; 1 bytes @ 0x71
  2052  000072                     	ds	2
  2053                           
  2054 ;;
  2055 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2056 ;;
  2057 ;; *************** function _main *****************
  2058 ;; Defined at:
  2059 ;;		line 1318 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  i               1  103[BANK1 ] unsigned char 
  2064 ;;  keyValue        1  106[BANK1 ] unsigned char 
  2065 ;;  keypress        1  102[BANK1 ] unsigned char 
  2066 ;;  time            7   91[BANK1 ] unsigned char [7]
  2067 ;;  tick            4   98[BANK1 ] unsigned long 
  2068 ;;  currentRobot    1  105[BANK1 ] enum E3469
  2069 ;;  currentLogSt    1  104[BANK1 ] enum E3476
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         2       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:       18 bytes
  2084 ;; Hardware stack levels required when called:   14
  2085 ;; This function calls:
  2086 ;;		_I2C_Master_Read
  2087 ;;		_I2C_Master_Start
  2088 ;;		_I2C_Master_Stop
  2089 ;;		_I2C_Master_Write
  2090 ;;		___llmod
  2091 ;;		_doDisplayLog
  2092 ;;		_doOperation
  2093 ;;		_lcdInst
  2094 ;;		_printf
  2095 ;;		_replaceOldLog
  2096 ;;		_robotInit
  2097 ;;		_sendArduinoStandbyClampRequest
  2098 ;; This function is called by:
  2099 ;;		Startup code after reset
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text0
  2104  0011B0                     __ptext0:
  2105                           	opt callstack 0
  2106  0011B0                     _main:
  2107                           	opt callstack 17
  2108                           
  2109                           ;main.c: 1320:     robotInit();
  2110                           
  2111                           ;incstack = 0
  2112  0011B0  EC5B  F022         	call	_robotInit	;wreg free
  2113                           
  2114                           ;main.c: 1322:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  2115  0011B4  0E80               	movlw	128
  2116  0011B6  EC4F  F024         	call	_lcdInst
  2117  0011BA  0E07               	movlw	7
  2118  0011BC  6E72               	movwf	??_main& (0+255),c
  2119  0011BE  0E7D               	movlw	125
  2120  0011C0                     u11977:
  2121  0011C0  2EE8               	decfsz	wreg,f,c
  2122  0011C2  D7FE               	bra	u11977
  2123  0011C4  2E72               	decfsz	??_main& (0+255),f,c
  2124  0011C6  D7FC               	bra	u11977
  2125  0011C8  F000               	nop	
  2126                           
  2127                           ;main.c: 1323:                 printf("%s%d%s%d", "POLE ", 2,"/", 1);
  2128  0011CA  0EED               	movlw	low STR_10
  2129  0011CC  0100               	movlb	0	; () banked
  2130  0011CE  6F9D               	movwf	printf@fmt& (0+255),b
  2131  0011D0  0EFC               	movlw	high STR_10
  2132  0011D2  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2133  0011D4  0E0A               	movlw	low STR_11
  2134  0011D6  6F9F               	movwf	(?_printf+2)& (0+255),b
  2135  0011D8  0EFD               	movlw	high STR_11
  2136  0011DA  6FA0               	movwf	(?_printf+3)& (0+255),b
  2137  0011DC  0E00               	movlw	0
  2138  0011DE  6FA2               	movwf	(?_printf+5)& (0+255),b
  2139  0011E0  0E02               	movlw	2
  2140  0011E2  6FA1               	movwf	(?_printf+4)& (0+255),b
  2141  0011E4  0E2C               	movlw	low STR_12
  2142  0011E6  6FA3               	movwf	(?_printf+6)& (0+255),b
  2143  0011E8  0EFD               	movlw	high STR_12
  2144  0011EA  6FA4               	movwf	(?_printf+7)& (0+255),b
  2145  0011EC  0E00               	movlw	0
  2146  0011EE  6FA6               	movwf	(?_printf+9)& (0+255),b
  2147  0011F0  0E01               	movlw	1
  2148  0011F2  6FA5               	movwf	(?_printf+8)& (0+255),b
  2149  0011F4  EC94  F023         	call	_printf	;wreg free
  2150  0011F8  0EC0               	movlw	192
  2151  0011FA  EC4F  F024         	call	_lcdInst
  2152                           
  2153                           ;main.c: 1325:                 printf("%s%d","DEPL: ", 1);
  2154  0011FE  0EF1               	movlw	low (STR_10+4)
  2155  001200  0100               	movlb	0	; () banked
  2156  001202  6F9D               	movwf	printf@fmt& (0+255),b
  2157  001204  0EFC               	movlw	high (STR_10+4)
  2158  001206  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2159  001208  0EF6               	movlw	low STR_14
  2160  00120A  6F9F               	movwf	(?_printf+2)& (0+255),b
  2161  00120C  0EFC               	movlw	high STR_14
  2162  00120E  6FA0               	movwf	(?_printf+3)& (0+255),b
  2163  001210  0E00               	movlw	0
  2164  001212  6FA2               	movwf	(?_printf+5)& (0+255),b
  2165  001214  0E01               	movlw	1
  2166  001216  6FA1               	movwf	(?_printf+4)& (0+255),b
  2167  001218  EC94  F023         	call	_printf	;wreg free
  2168                           
  2169                           ;main.c: 1326:                 printf("%s%d"," CM: ", 32);
  2170  00121C  0EF1               	movlw	low (STR_10+4)
  2171  00121E  0100               	movlb	0	; () banked
  2172  001220  6F9D               	movwf	printf@fmt& (0+255),b
  2173  001222  0EFC               	movlw	high (STR_10+4)
  2174  001224  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2175  001226  0E04               	movlw	low STR_16
  2176  001228  6F9F               	movwf	(?_printf+2)& (0+255),b
  2177  00122A  0EFD               	movlw	high STR_16
  2178  00122C  6FA0               	movwf	(?_printf+3)& (0+255),b
  2179  00122E  0E00               	movlw	0
  2180  001230  6FA2               	movwf	(?_printf+5)& (0+255),b
  2181  001232  0E20               	movlw	32
  2182  001234  6FA1               	movwf	(?_printf+4)& (0+255),b
  2183  001236  EC94  F023         	call	_printf	;wreg free
  2184  00123A  0E90               	movlw	144
  2185  00123C  EC4F  F024         	call	_lcdInst
  2186                           
  2187                           ;main.c: 1328:                 printf("%s%d","ON POLE: ", 2);
  2188  001240  0EF1               	movlw	low (STR_10+4)
  2189  001242  0100               	movlb	0	; () banked
  2190  001244  6F9D               	movwf	printf@fmt& (0+255),b
  2191  001246  0EFC               	movlw	high (STR_10+4)
  2192  001248  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2193  00124A  0E97               	movlw	low STR_18
  2194  00124C  6F9F               	movwf	(?_printf+2)& (0+255),b
  2195  00124E  0EFC               	movlw	high STR_18
  2196  001250  6FA0               	movwf	(?_printf+3)& (0+255),b
  2197  001252  0E00               	movlw	0
  2198  001254  6FA2               	movwf	(?_printf+5)& (0+255),b
  2199  001256  0E02               	movlw	2
  2200  001258  6FA1               	movwf	(?_printf+4)& (0+255),b
  2201  00125A  EC94  F023         	call	_printf	;wreg free
  2202  00125E  0ED0               	movlw	208
  2203  001260  EC4F  F024         	call	_lcdInst
  2204                           
  2205                           ;main.c: 1330:                 printf("%s","1<- 2-> 3MENU");
  2206  001264  0E01               	movlw	low (STR_1+4)
  2207  001266  0100               	movlb	0	; () banked
  2208  001268  6F9D               	movwf	printf@fmt& (0+255),b
  2209  00126A  0EFD               	movlw	high (STR_1+4)
  2210  00126C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2211  00126E  0E33               	movlw	low STR_20
  2212  001270  6F9F               	movwf	(?_printf+2)& (0+255),b
  2213  001272  0EFC               	movlw	high STR_20
  2214  001274  6FA0               	movwf	(?_printf+3)& (0+255),b
  2215  001276  EC94  F023         	call	_printf	;wreg free
  2216                           
  2217                           ;main.c: 1354:     unsigned char time[7];;main.c: 1361:     enum robotStates currentRobo
      +                          tState = standby;
  2218  00127A  0E00               	movlw	0
  2219  00127C  0101               	movlb	1	; () banked
  2220  00127E  6F69               	movwf	main@currentRobotState& (0+255),b
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;main.c: 1363:     enum logStates currentLogState = one;
  2224  001280  0E01               	movlw	1
  2225  001282  6F68               	movwf	main@currentLogState& (0+255),b
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;main.c: 1367:     unsigned long tick = 0ul;
  2229  001284  0E00               	movlw	0
  2230  001286  6F62               	movwf	main@tick& (0+255),b
  2231  001288  0E00               	movlw	0
  2232  00128A  6F63               	movwf	(main@tick+1)& (0+255),b
  2233  00128C  0E00               	movlw	0
  2234  00128E  6F64               	movwf	(main@tick+2)& (0+255),b
  2235  001290  0E00               	movlw	0
  2236  001292  6F65               	movwf	(main@tick+3)& (0+255),b
  2237  001294                     l10248:
  2238                           
  2239                           ;main.c: 1371:         LATAbits.LATA5 = 0;
  2240  001294  9A89               	bcf	3977,5,c	;volatile
  2241                           
  2242                           ;main.c: 1372:         LATBbits.LATB3 = 1;
  2243  001296  868A               	bsf	3978,3,c	;volatile
  2244                           
  2245                           ;main.c: 1374:             if (tick%10ul==0){
  2246  001298  C162  F006         	movff	main@tick,___llmod@dividend
  2247  00129C  C163  F007         	movff	main@tick+1,___llmod@dividend+1
  2248  0012A0  C164  F008         	movff	main@tick+2,___llmod@dividend+2
  2249  0012A4  C165  F009         	movff	main@tick+3,___llmod@dividend+3
  2250  0012A8  0E0A               	movlw	10
  2251  0012AA  6E0A               	movwf	___llmod@divisor,c
  2252  0012AC  0E00               	movlw	0
  2253  0012AE  6E0B               	movwf	___llmod@divisor+1,c
  2254  0012B0  0E00               	movlw	0
  2255  0012B2  6E0C               	movwf	___llmod@divisor+2,c
  2256  0012B4  0E00               	movlw	0
  2257  0012B6  6E0D               	movwf	___llmod@divisor+3,c
  2258  0012B8  ECB4  F020         	call	___llmod	;wreg free
  2259  0012BC  5006               	movf	?___llmod,w,c
  2260  0012BE  1007               	iorwf	?___llmod+1,w,c
  2261  0012C0  1008               	iorwf	?___llmod+2,w,c
  2262  0012C2  1009               	iorwf	?___llmod+3,w,c
  2263  0012C4  A4D8               	btfss	status,2,c
  2264  0012C6  D14F               	goto	l10358
  2265                           
  2266                           ;main.c: 1376:                 I2C_Master_Start();
  2267  0012C8  EC63  F024         	call	_I2C_Master_Start	;wreg free
  2268                           
  2269                           ;main.c: 1377:                 I2C_Master_Write(0b11010000);
  2270  0012CC  0E00               	movlw	0
  2271  0012CE  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2272  0012D0  0ED0               	movlw	208
  2273  0012D2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2274  0012D4  EC55  F024         	call	_I2C_Master_Write	;wreg free
  2275                           
  2276                           ;main.c: 1378:                 I2C_Master_Write(0x00);
  2277  0012D8  0E00               	movlw	0
  2278  0012DA  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2279  0012DC  0E00               	movlw	0
  2280  0012DE  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2281  0012E0  EC55  F024         	call	_I2C_Master_Write	;wreg free
  2282                           
  2283                           ;main.c: 1379:                 I2C_Master_Stop();
  2284  0012E4  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  2285                           
  2286                           ;main.c: 1382:                 I2C_Master_Start();
  2287  0012E8  EC63  F024         	call	_I2C_Master_Start	;wreg free
  2288                           
  2289                           ;main.c: 1383:                 I2C_Master_Write(0b11010001);
  2290  0012EC  0E00               	movlw	0
  2291  0012EE  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2292  0012F0  0ED1               	movlw	209
  2293  0012F2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2294  0012F4  EC55  F024         	call	_I2C_Master_Write	;wreg free
  2295                           
  2296                           ;main.c: 1384:                 for(unsigned char i = 0; i < 6; i++){
  2297  0012F8  0E00               	movlw	0
  2298  0012FA  0101               	movlb	1	; () banked
  2299  0012FC  6F67               	movwf	main@i& (0+255),b
  2300  0012FE                     l10262:
  2301                           
  2302                           ; BSR set to: 1
  2303                           ;main.c: 1385:                     time[i] = I2C_Master_Read(0);
  2304  0012FE  0E5B               	movlw	low main@time
  2305  001300  2567               	addwf	main@i& (0+255),w,b
  2306  001302  6ED9               	movwf	fsr2l,c
  2307  001304  6ADA               	clrf	fsr2h,c
  2308  001306  0E01               	movlw	high main@time
  2309  001308  22DA               	addwfc	fsr2h,f,c
  2310  00130A  0E00               	movlw	0
  2311  00130C  ECBB  F023         	call	_I2C_Master_Read
  2312  001310  6EDF               	movwf	indf2,c
  2313                           
  2314                           ;main.c: 1386:                 }
  2315  001312  0101               	movlb	1	; () banked
  2316  001314  2B67               	incf	main@i& (0+255),f,b
  2317                           
  2318                           ; BSR set to: 1
  2319  001316  0E05               	movlw	5
  2320  001318  6567               	cpfsgt	main@i& (0+255),b
  2321  00131A  D7F1               	goto	l10262
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;main.c: 1387:                 time[6] = I2C_Master_Read(1);
  2325  00131C  0E01               	movlw	1
  2326  00131E  ECBB  F023         	call	_I2C_Master_Read
  2327  001322  0101               	movlb	1	; () banked
  2328  001324  6F61               	movwf	(main@time+6)& (0+255),b
  2329                           
  2330                           ;main.c: 1388:                 I2C_Master_Stop();
  2331  001326  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  2332  00132A  D11D               	goto	l10358
  2333  00132C                     l10270:
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;main.c: 1401:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2337  00132C  0E80               	movlw	128
  2338  00132E  EC4F  F024         	call	_lcdInst
  2339  001332  0E07               	movlw	7
  2340  001334  6E72               	movwf	??_main& (0+255),c
  2341  001336  0E7D               	movlw	125
  2342  001338                     u11987:
  2343  001338  2EE8               	decfsz	wreg,f,c
  2344  00133A  D7FE               	bra	u11987
  2345  00133C  2E72               	decfsz	??_main& (0+255),f,c
  2346  00133E  D7FC               	bra	u11987
  2347  001340  F000               	nop	
  2348                           
  2349                           ;main.c: 1403:                 printf("%s", "WELCOME ");
  2350  001342  0E01               	movlw	low (STR_1+4)
  2351  001344  0100               	movlb	0	; () banked
  2352  001346  6F9D               	movwf	printf@fmt& (0+255),b
  2353  001348  0EFD               	movlw	high (STR_1+4)
  2354  00134A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2355  00134C  0EC9               	movlw	low STR_42
  2356  00134E  6F9F               	movwf	(?_printf+2)& (0+255),b
  2357  001350  0EFC               	movlw	high STR_42
  2358  001352  6FA0               	movwf	(?_printf+3)& (0+255),b
  2359  001354  EC94  F023         	call	_printf	;wreg free
  2360                           
  2361                           ;main.c: 1404:                 printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  2362  001358  0EEB               	movlw	low STR_43
  2363  00135A  0100               	movlb	0	; () banked
  2364  00135C  6F9D               	movwf	printf@fmt& (0+255),b
  2365  00135E  0EFB               	movlw	high STR_43
  2366  001360  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2367  001362  C161  F09F         	movff	main@time+6,?_printf+2
  2368  001366  6BA0               	clrf	(?_printf+3)& (0+255),b
  2369  001368  C160  F0A1         	movff	main@time+5,?_printf+4
  2370  00136C  6BA2               	clrf	(?_printf+5)& (0+255),b
  2371  00136E  C15F  F0A3         	movff	main@time+4,?_printf+6
  2372  001372  6BA4               	clrf	(?_printf+7)& (0+255),b
  2373  001374  EC94  F023         	call	_printf	;wreg free
  2374  001378  0EC0               	movlw	192
  2375  00137A  EC4F  F024         	call	_lcdInst
  2376                           
  2377                           ;main.c: 1406:                 printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  2378  00137E  0EFA               	movlw	low STR_44
  2379  001380  0100               	movlb	0	; () banked
  2380  001382  6F9D               	movwf	printf@fmt& (0+255),b
  2381  001384  0EFB               	movlw	high STR_44
  2382  001386  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2383  001388  C15D  F09F         	movff	main@time+2,?_printf+2
  2384  00138C  6BA0               	clrf	(?_printf+3)& (0+255),b
  2385  00138E  C15C  F0A1         	movff	main@time+1,?_printf+4
  2386  001392  6BA2               	clrf	(?_printf+5)& (0+255),b
  2387  001394  C15B  F0A3         	movff	main@time,?_printf+6
  2388  001398  6BA4               	clrf	(?_printf+7)& (0+255),b
  2389  00139A  EC94  F023         	call	_printf	;wreg free
  2390  00139E  0E90               	movlw	144
  2391  0013A0  EC4F  F024         	call	_lcdInst
  2392                           
  2393                           ;main.c: 1408:                 printf("%s","(1) START");
  2394  0013A4  0E01               	movlw	low (STR_1+4)
  2395  0013A6  0100               	movlb	0	; () banked
  2396  0013A8  6F9D               	movwf	printf@fmt& (0+255),b
  2397  0013AA  0EFD               	movlw	high (STR_1+4)
  2398  0013AC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2399  0013AE  0EB5               	movlw	low STR_46
  2400  0013B0  6F9F               	movwf	(?_printf+2)& (0+255),b
  2401  0013B2  0EFC               	movlw	high STR_46
  2402  0013B4  6FA0               	movwf	(?_printf+3)& (0+255),b
  2403  0013B6  EC94  F023         	call	_printf	;wreg free
  2404  0013BA  0ED0               	movlw	208
  2405  0013BC  EC4F  F024         	call	_lcdInst
  2406                           
  2407                           ;main.c: 1410:                 printf("%s","(2) VIEW LOGS");
  2408  0013C0  0E01               	movlw	low (STR_1+4)
  2409  0013C2  0100               	movlb	0	; () banked
  2410  0013C4  6F9D               	movwf	printf@fmt& (0+255),b
  2411  0013C6  0EFD               	movlw	high (STR_1+4)
  2412  0013C8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2413  0013CA  0E25               	movlw	low STR_48
  2414  0013CC  6F9F               	movwf	(?_printf+2)& (0+255),b
  2415  0013CE  0EFC               	movlw	high STR_48
  2416  0013D0  6FA0               	movwf	(?_printf+3)& (0+255),b
  2417  0013D2  EC94  F023         	call	_printf	;wreg free
  2418                           
  2419                           ;main.c: 1411:                 break;
  2420  0013D6  D0DF               	goto	l10360
  2421  0013D8                     l10290:
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;main.c: 1414:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2425  0013D8  0E80               	movlw	128
  2426  0013DA  EC4F  F024         	call	_lcdInst
  2427  0013DE  0E07               	movlw	7
  2428  0013E0  6E72               	movwf	??_main& (0+255),c
  2429  0013E2  0E7D               	movlw	125
  2430  0013E4                     u11997:
  2431  0013E4  2EE8               	decfsz	wreg,f,c
  2432  0013E6  D7FE               	bra	u11997
  2433  0013E8  2E72               	decfsz	??_main& (0+255),f,c
  2434  0013EA  D7FC               	bra	u11997
  2435  0013EC  F000               	nop	
  2436                           
  2437                           ;main.c: 1415:                 printf("%s", "OPERATION IN");
  2438  0013EE  0E01               	movlw	low (STR_1+4)
  2439  0013F0  0100               	movlb	0	; () banked
  2440  0013F2  6F9D               	movwf	printf@fmt& (0+255),b
  2441  0013F4  0EFD               	movlw	high (STR_1+4)
  2442  0013F6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2443  0013F8  0E5B               	movlw	low STR_50
  2444  0013FA  6F9F               	movwf	(?_printf+2)& (0+255),b
  2445  0013FC  0EFC               	movlw	high STR_50
  2446  0013FE  6FA0               	movwf	(?_printf+3)& (0+255),b
  2447  001400  EC94  F023         	call	_printf	;wreg free
  2448  001404  0EC0               	movlw	192
  2449  001406  EC4F  F024         	call	_lcdInst
  2450                           
  2451                           ;main.c: 1417:                 printf("%s","PROGRESS");
  2452  00140A  0E01               	movlw	low (STR_1+4)
  2453  00140C  0100               	movlb	0	; () banked
  2454  00140E  6F9D               	movwf	printf@fmt& (0+255),b
  2455  001410  0EFD               	movlw	high (STR_1+4)
  2456  001412  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2457  001414  0EDB               	movlw	low STR_52
  2458  001416  6F9F               	movwf	(?_printf+2)& (0+255),b
  2459  001418  0EFC               	movlw	high STR_52
  2460  00141A  6FA0               	movwf	(?_printf+3)& (0+255),b
  2461  00141C  EC94  F023         	call	_printf	;wreg free
  2462                           
  2463                           ;main.c: 1418:                 doOperation();
  2464  001420  EC09  F000         	call	_doOperation	;wreg free
  2465                           
  2466                           ;main.c: 1419:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2467  001424  0E01               	movlw	1
  2468  001426  EC4F  F024         	call	_lcdInst
  2469  00142A  0E11               	movlw	17
  2470  00142C  6E72               	movwf	??_main& (0+255),c
  2471  00142E  0E3A               	movlw	58
  2472  001430                     u12007:
  2473  001430  2EE8               	decfsz	wreg,f,c
  2474  001432  D7FE               	bra	u12007
  2475  001434  2E72               	decfsz	??_main& (0+255),f,c
  2476  001436  D7FC               	bra	u12007
  2477  001438  D000               	nop2	
  2478                           
  2479                           ;main.c: 1420:                 currentRobotState = operationComplete;
  2480  00143A  0E02               	movlw	2
  2481  00143C  D091               	goto	L1
  2482  00143E                     l10308:
  2483                           
  2484                           ; BSR set to: 1
  2485                           ;main.c: 1427:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2486  00143E  0E80               	movlw	128
  2487  001440  EC4F  F024         	call	_lcdInst
  2488  001444  0E07               	movlw	7
  2489  001446  6E72               	movwf	??_main& (0+255),c
  2490  001448  0E7D               	movlw	125
  2491  00144A                     u12017:
  2492  00144A  2EE8               	decfsz	wreg,f,c
  2493  00144C  D7FE               	bra	u12017
  2494  00144E  2E72               	decfsz	??_main& (0+255),f,c
  2495  001450  D7FC               	bra	u12017
  2496  001452  F000               	nop	
  2497                           
  2498                           ;main.c: 1428:                 printf("%s", "OP. COMPLETE");
  2499  001454  0E01               	movlw	low (STR_1+4)
  2500  001456  0100               	movlb	0	; () banked
  2501  001458  6F9D               	movwf	printf@fmt& (0+255),b
  2502  00145A  0EFD               	movlw	high (STR_1+4)
  2503  00145C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2504  00145E  0E41               	movlw	low STR_54
  2505  001460  6F9F               	movwf	(?_printf+2)& (0+255),b
  2506  001462  0EFC               	movlw	high STR_54
  2507  001464  6FA0               	movwf	(?_printf+3)& (0+255),b
  2508  001466  EC94  F023         	call	_printf	;wreg free
  2509  00146A  0EC0               	movlw	192
  2510  00146C  EC4F  F024         	call	_lcdInst
  2511                           
  2512                           ;main.c: 1430:                 printf("%s","(1) VIEW LOG");
  2513  001470  0E01               	movlw	low (STR_1+4)
  2514  001472  0100               	movlb	0	; () banked
  2515  001474  6F9D               	movwf	printf@fmt& (0+255),b
  2516  001476  0EFD               	movlw	high (STR_1+4)
  2517  001478  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2518  00147A  0E4E               	movlw	low STR_56
  2519  00147C  6F9F               	movwf	(?_printf+2)& (0+255),b
  2520  00147E  0EFC               	movlw	high STR_56
  2521  001480  6FA0               	movwf	(?_printf+3)& (0+255),b
  2522  001482  EC94  F023         	call	_printf	;wreg free
  2523  001486  0E90               	movlw	144
  2524  001488  EC4F  F024         	call	_lcdInst
  2525                           
  2526                           ;main.c: 1432:                 printf("%s","(2) QUIT DO NOT");
  2527  00148C  0E01               	movlw	low (STR_1+4)
  2528  00148E  0100               	movlb	0	; () banked
  2529  001490  6F9D               	movwf	printf@fmt& (0+255),b
  2530  001492  0EFD               	movlw	high (STR_1+4)
  2531  001494  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2532  001496  0EBC               	movlw	low STR_58
  2533  001498  6F9F               	movwf	(?_printf+2)& (0+255),b
  2534  00149A  0EFB               	movlw	high STR_58
  2535  00149C  6FA0               	movwf	(?_printf+3)& (0+255),b
  2536  00149E  EC94  F023         	call	_printf	;wreg free
  2537  0014A2  0ED0               	movlw	208
  2538  0014A4  EC4F  F024         	call	_lcdInst
  2539                           
  2540                           ;main.c: 1434:                 printf("%s","SAVE LOG");
  2541  0014A8  0E01               	movlw	low (STR_1+4)
  2542  0014AA  0100               	movlb	0	; () banked
  2543  0014AC  6F9D               	movwf	printf@fmt& (0+255),b
  2544  0014AE  0EFD               	movlw	high (STR_1+4)
  2545  0014B0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2546  0014B2  0ED2               	movlw	low STR_60
  2547  0014B4  6F9F               	movwf	(?_printf+2)& (0+255),b
  2548  0014B6  0EFC               	movlw	high STR_60
  2549  0014B8  6FA0               	movwf	(?_printf+3)& (0+255),b
  2550  0014BA  EC94  F023         	call	_printf	;wreg free
  2551                           
  2552                           ;main.c: 1435:                 currentLogState = justRan;
  2553  0014BE  0E00               	movlw	0
  2554  0014C0  0101               	movlb	1	; () banked
  2555  0014C2  6F68               	movwf	main@currentLogState& (0+255),b
  2556                           
  2557                           ;main.c: 1436:                 break;
  2558  0014C4  D068               	goto	l10360
  2559  0014C6                     l10328:
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;main.c: 1439:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  2563  0014C6  0E80               	movlw	128
  2564  0014C8  EC4F  F024         	call	_lcdInst
  2565  0014CC  0E07               	movlw	7
  2566  0014CE  6E72               	movwf	??_main& (0+255),c
  2567  0014D0  0E7D               	movlw	125
  2568  0014D2                     u12027:
  2569  0014D2  2EE8               	decfsz	wreg,f,c
  2570  0014D4  D7FE               	bra	u12027
  2571  0014D6  2E72               	decfsz	??_main& (0+255),f,c
  2572  0014D8  D7FC               	bra	u12027
  2573  0014DA  F000               	nop	
  2574                           
  2575                           ;main.c: 1440:                 printf("%s", "SELECT LOG");
  2576  0014DC  0E01               	movlw	low (STR_1+4)
  2577  0014DE  0100               	movlb	0	; () banked
  2578  0014E0  6F9D               	movwf	printf@fmt& (0+255),b
  2579  0014E2  0EFD               	movlw	high (STR_1+4)
  2580  0014E4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2581  0014E6  0E81               	movlw	low STR_62
  2582  0014E8  6F9F               	movwf	(?_printf+2)& (0+255),b
  2583  0014EA  0EFC               	movlw	high STR_62
  2584  0014EC  6FA0               	movwf	(?_printf+3)& (0+255),b
  2585  0014EE  EC94  F023         	call	_printf	;wreg free
  2586  0014F2  0EC0               	movlw	192
  2587  0014F4  EC4F  F024         	call	_lcdInst
  2588                           
  2589                           ;main.c: 1442:                 printf("%s","(1 IS OLDEST)");
  2590  0014F8  0E01               	movlw	low (STR_1+4)
  2591  0014FA  0100               	movlb	0	; () banked
  2592  0014FC  6F9D               	movwf	printf@fmt& (0+255),b
  2593  0014FE  0EFD               	movlw	high (STR_1+4)
  2594  001500  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2595  001502  0E09               	movlw	low STR_64
  2596  001504  6F9F               	movwf	(?_printf+2)& (0+255),b
  2597  001506  0EFC               	movlw	high STR_64
  2598  001508  6FA0               	movwf	(?_printf+3)& (0+255),b
  2599  00150A  EC94  F023         	call	_printf	;wreg free
  2600  00150E  0E90               	movlw	144
  2601  001510  EC4F  F024         	call	_lcdInst
  2602                           
  2603                           ;main.c: 1444:                 printf("%s","(1) (2) (3) (4)");
  2604  001514  0E01               	movlw	low (STR_1+4)
  2605  001516  0100               	movlb	0	; () banked
  2606  001518  6F9D               	movwf	printf@fmt& (0+255),b
  2607  00151A  0EFD               	movlw	high (STR_1+4)
  2608  00151C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  2609  00151E  0E9C               	movlw	low STR_66
  2610  001520  6F9F               	movwf	(?_printf+2)& (0+255),b
  2611  001522  0EFB               	movlw	high STR_66
  2612  001524  6FA0               	movwf	(?_printf+3)& (0+255),b
  2613  001526  EC94  F023         	call	_printf	;wreg free
  2614                           
  2615                           ;main.c: 1445:                 break;
  2616  00152A  D035               	goto	l10360
  2617  00152C                     l10342:
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;main.c: 1447:                 if (currentLogState == justRan){
  2621  00152C  5168               	movf	main@currentLogState& (0+255),w,b
  2622  00152E  A4D8               	btfss	status,2,c
  2623  001530  D005               	goto	l10348
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;main.c: 1448:                     replaceOldLog();
  2627  001532  EC2D  F01B         	call	_replaceOldLog	;wreg free
  2628                           
  2629                           ;main.c: 1449:                     currentLogState = four;
  2630  001536  0E04               	movlw	4
  2631  001538  0101               	movlb	1	; () banked
  2632  00153A  6F68               	movwf	main@currentLogState& (0+255),b
  2633  00153C                     l10348:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;main.c: 1451:                 doDisplayLog(currentLogState);
  2637  00153C  C168  F0A7         	movff	main@currentLogState,doDisplayLog@logNumber
  2638  001540  0100               	movlb	0	; () banked
  2639  001542  6BA8               	clrf	(doDisplayLog@logNumber+1)& (0+255),b
  2640  001544  EC49  F00B         	call	_doDisplayLog	;wreg free
  2641                           
  2642                           ;main.c: 1452:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  2643  001548  0E01               	movlw	1
  2644  00154A  EC4F  F024         	call	_lcdInst
  2645  00154E  0E11               	movlw	17
  2646  001550  6E72               	movwf	??_main& (0+255),c
  2647  001552  0E3A               	movlw	58
  2648  001554                     u12037:
  2649  001554  2EE8               	decfsz	wreg,f,c
  2650  001556  D7FE               	bra	u12037
  2651  001558  2E72               	decfsz	??_main& (0+255),f,c
  2652  00155A  D7FC               	bra	u12037
  2653  00155C  D000               	nop2	
  2654                           
  2655                           ;main.c: 1453:                 currentRobotState = standby;
  2656  00155E  0E00               	movlw	0
  2657  001560                     L1:
  2658  001560  0101               	movlb	1	; () banked
  2659  001562  6F69               	movwf	main@currentRobotState& (0+255),b
  2660                           
  2661                           ;main.c: 1454:                 break;
  2662  001564  D018               	goto	l10360
  2663  001566                     l10358:
  2664  001566  0101               	movlb	1	; () banked
  2665  001568  5169               	movf	main@currentRobotState& (0+255),w,b
  2666  00156A  6E72               	movwf	??_main& (0+255),c
  2667  00156C  6A73               	clrf	(??_main+1)& (0+255),c
  2668                           
  2669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2670                           ; Switch size 1, requested type "simple"
  2671                           ; Number of cases is 1, Range of values is 0 to 0
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte            4     3 (average)
  2675                           ;	Chosen strategy is simple_byte
  2676  00156E  5073               	movf	??_main+1,w,c
  2677  001570  0A00               	xorlw	0	; case 0
  2678  001572  A4D8               	btfss	status,2,c
  2679  001574  D010               	goto	l10360
  2680                           
  2681                           ; BSR set to: 1
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 5, Range of values is 0 to 4
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte           16     9 (average)
  2687                           ;	Chosen strategy is simple_byte
  2688  001576  5072               	movf	??_main,w,c
  2689  001578  0A00               	xorlw	0	; case 0
  2690  00157A  B4D8               	btfsc	status,2,c
  2691  00157C  D6D7               	goto	l10270
  2692  00157E  0A01               	xorlw	1	; case 1
  2693  001580  B4D8               	btfsc	status,2,c
  2694  001582  D72A               	goto	l10290
  2695  001584  0A03               	xorlw	3	; case 2
  2696  001586  B4D8               	btfsc	status,2,c
  2697  001588  D75A               	goto	l10308
  2698  00158A  0A01               	xorlw	1	; case 3
  2699  00158C  B4D8               	btfsc	status,2,c
  2700  00158E  D79B               	goto	l10328
  2701  001590  0A07               	xorlw	7	; case 4
  2702  001592  B4D8               	btfsc	status,2,c
  2703  001594  D7CB               	goto	l10342
  2704  001596                     l10360:
  2705                           
  2706                           ;main.c: 1458:         if(keyPressed){
  2707  001596  0100               	movlb	0	; () banked
  2708  001598  51E9               	movf	_keyPressed& (0+255),w,b	;volatile
  2709  00159A  B4D8               	btfsc	status,2,c
  2710  00159C  D06B               	goto	l472
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;main.c: 1461:             keyPressed = 0;
  2714  00159E  0E00               	movlw	0
  2715  0015A0  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;main.c: 1464:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2719  0015A2  3881               	swapf	3969,w,c	;volatile
  2720  0015A4  0B0F               	andlw	15
  2721  0015A6  0B0F               	andlw	15
  2722  0015A8  0101               	movlb	1	; () banked
  2723  0015AA  6F66               	movwf	main@keypress& (0+255),b
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;main.c: 1465:             char keyValue = keys[keypress];
  2727  0015AC  0E77               	movlw	low _keys
  2728  0015AE  2566               	addwf	main@keypress& (0+255),w,b
  2729  0015B0  6EF6               	movwf	tblptrl,c
  2730  0015B2  6AF7               	clrf	tblptrh,c
  2731  0015B4  0EFB               	movlw	high _keys
  2732  0015B6  22F7               	addwfc	tblptrh,f,c
  2733  0015B8                     	if	0	;There are less than 3 active tblptr bytes
  2734  0015B8                     	endif
  2735  0015B8  0008               	tblrd		*
  2736  0015BA  CFF5 F16A          	movff	tablat,main@keyValue
  2737                           
  2738                           ; BSR set to: 1
  2739                           ;main.c: 1466:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  2740  0015BE  0E01               	movlw	1
  2741  0015C0  EC4F  F024         	call	_lcdInst
  2742  0015C4  0E11               	movlw	17
  2743  0015C6  6E72               	movwf	??_main& (0+255),c
  2744  0015C8  0E3A               	movlw	58
  2745  0015CA                     u12047:
  2746  0015CA  2EE8               	decfsz	wreg,f,c
  2747  0015CC  D7FE               	bra	u12047
  2748  0015CE  2E72               	decfsz	??_main& (0+255),f,c
  2749  0015D0  D7FC               	bra	u12047
  2750  0015D2  D000               	nop2	
  2751                           
  2752                           ;main.c: 1467:             switch (currentRobotState){
  2753  0015D4  D039               	goto	l10412
  2754  0015D6                     l10372:
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;main.c: 1469:                     if (keyValue == '1'){
  2758  0015D6  0E31               	movlw	49
  2759  0015D8  196A               	xorwf	main@keyValue& (0+255),w,b
  2760  0015DA  A4D8               	btfss	status,2,c
  2761  0015DC  D002               	goto	l10376
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;main.c: 1470:                         currentRobotState = operation;
  2765  0015DE  0E01               	movlw	1
  2766  0015E0  D018               	goto	L4
  2767  0015E2                     l10376:
  2768                           
  2769                           ; BSR set to: 1
  2770  0015E2  0E32               	movlw	50
  2771  0015E4  196A               	xorwf	main@keyValue& (0+255),w,b
  2772  0015E6  A4D8               	btfss	status,2,c
  2773  0015E8  D002               	goto	l10380
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;main.c: 1472:                         currentRobotState = selectLog;
  2777  0015EA  0E03               	movlw	3
  2778  0015EC  D012               	goto	L4
  2779  0015EE                     l10380:
  2780                           
  2781                           ; BSR set to: 1
  2782  0015EE  0E41               	movlw	65
  2783  0015F0  196A               	xorwf	main@keyValue& (0+255),w,b
  2784  0015F2  A4D8               	btfss	status,2,c
  2785  0015F4  D03F               	goto	l472
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;main.c: 1474:                         sendArduinoStandbyClampRequest();
  2789  0015F6  ECCD  F023         	call	_sendArduinoStandbyClampRequest	;wreg free
  2790  0015FA  D03C               	goto	l472
  2791  0015FC                     l10384:
  2792                           
  2793                           ; BSR set to: 1
  2794                           ;main.c: 1480:                     if (keyValue == '1'){
  2795  0015FC  0E31               	movlw	49
  2796  0015FE  196A               	xorwf	main@keyValue& (0+255),w,b
  2797  001600  A4D8               	btfss	status,2,c
  2798  001602  D002               	goto	l10388
  2799  001604                     u11890:
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;main.c: 1481:                         currentRobotState = displayLog;
  2803  001604  0E04               	movlw	4
  2804  001606  D005               	goto	L4
  2805  001608                     l10388:
  2806                           
  2807                           ; BSR set to: 1
  2808  001608  0E32               	movlw	50
  2809  00160A  196A               	xorwf	main@keyValue& (0+255),w,b
  2810  00160C  A4D8               	btfss	status,2,c
  2811  00160E  D032               	goto	l472
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;main.c: 1483:                         currentRobotState = standby;
  2815  001610  0E00               	movlw	0
  2816  001612                     L4:
  2817  001612  6F69               	movwf	main@currentRobotState& (0+255),b
  2818  001614  D02F               	goto	l472
  2819  001616                     l10392:
  2820                           
  2821                           ; BSR set to: 1
  2822                           ;main.c: 1487:                     if (keyValue == '1'){
  2823  001616  0E31               	movlw	49
  2824  001618  196A               	xorwf	main@keyValue& (0+255),w,b
  2825  00161A  A4D8               	btfss	status,2,c
  2826  00161C  D002               	goto	l10396
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;main.c: 1488:                         currentLogState = one;
  2830  00161E  0E01               	movlw	1
  2831  001620  D011               	goto	L7
  2832  001622                     l10396:
  2833                           
  2834                           ; BSR set to: 1
  2835  001622  0E32               	movlw	50
  2836  001624  196A               	xorwf	main@keyValue& (0+255),w,b
  2837  001626  A4D8               	btfss	status,2,c
  2838  001628  D002               	goto	l10400
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;main.c: 1490:                         currentLogState = two;
  2842  00162A  0E02               	movlw	2
  2843  00162C  D00B               	goto	L7
  2844  00162E                     l10400:
  2845                           
  2846                           ; BSR set to: 1
  2847  00162E  0E33               	movlw	51
  2848  001630  196A               	xorwf	main@keyValue& (0+255),w,b
  2849  001632  A4D8               	btfss	status,2,c
  2850  001634  D002               	goto	l10404
  2851                           
  2852                           ; BSR set to: 1
  2853                           ;main.c: 1492:                         currentLogState = three;
  2854  001636  0E03               	movlw	3
  2855  001638  D005               	goto	L7
  2856  00163A                     l10404:
  2857                           
  2858                           ; BSR set to: 1
  2859  00163A  0E34               	movlw	52
  2860  00163C  196A               	xorwf	main@keyValue& (0+255),w,b
  2861  00163E  A4D8               	btfss	status,2,c
  2862  001640  D019               	goto	l472
  2863                           
  2864                           ; BSR set to: 1
  2865                           ;main.c: 1494:                         currentLogState = four;
  2866  001642  0E04               	movlw	4
  2867  001644                     L7:
  2868  001644  6F68               	movwf	main@currentLogState& (0+255),b
  2869                           
  2870                           ;main.c: 1495:                     } else {
  2871  001646  D7DE               	goto	u11890
  2872  001648                     l10412:
  2873  001648  0101               	movlb	1	; () banked
  2874  00164A  5169               	movf	main@currentRobotState& (0+255),w,b
  2875  00164C  6E72               	movwf	??_main& (0+255),c
  2876  00164E  6A73               	clrf	(??_main+1)& (0+255),c
  2877                           
  2878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2879                           ; Switch size 1, requested type "simple"
  2880                           ; Number of cases is 1, Range of values is 0 to 0
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte            4     3 (average)
  2884                           ;	Chosen strategy is simple_byte
  2885  001650  5073               	movf	??_main+1,w,c
  2886  001652  0A00               	xorlw	0	; case 0
  2887  001654  A4D8               	btfss	status,2,c
  2888  001656  D00E               	goto	l472
  2889                           
  2890                           ; BSR set to: 1
  2891                           ; Switch size 1, requested type "simple"
  2892                           ; Number of cases is 5, Range of values is 0 to 4
  2893                           ; switch strategies available:
  2894                           ; Name         Instructions Cycles
  2895                           ; simple_byte           16     9 (average)
  2896                           ;	Chosen strategy is simple_byte
  2897  001658  5072               	movf	??_main,w,c
  2898  00165A  0A00               	xorlw	0	; case 0
  2899  00165C  B4D8               	btfsc	status,2,c
  2900  00165E  D7BB               	goto	l10372
  2901  001660  0A01               	xorlw	1	; case 1
  2902  001662  B4D8               	btfsc	status,2,c
  2903  001664  D007               	goto	l472
  2904  001666  0A03               	xorlw	3	; case 2
  2905  001668  B4D8               	btfsc	status,2,c
  2906  00166A  D7C8               	goto	l10384
  2907  00166C  0A01               	xorlw	1	; case 3
  2908  00166E  B4D8               	btfsc	status,2,c
  2909  001670  D7D2               	goto	l10392
  2910  001672  0A07               	xorlw	7	; case 4
  2911  001674                     l472:
  2912                           
  2913                           ;main.c: 1515:         tick++;
  2914                           
  2915                           ; BSR set to: 1
  2916  001674  0E01               	movlw	1
  2917  001676  0101               	movlb	1	; () banked
  2918  001678  2762               	addwf	main@tick& (0+255),f,b
  2919  00167A  0E00               	movlw	0
  2920  00167C  2363               	addwfc	(main@tick+1)& (0+255),f,b
  2921  00167E  2364               	addwfc	(main@tick+2)& (0+255),f,b
  2922  001680  2365               	addwfc	(main@tick+3)& (0+255),f,b
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;main.c: 1516:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2926  001682  0E04               	movlw	4
  2927  001684  6E72               	movwf	??_main& (0+255),c
  2928  001686  0E3E               	movlw	62
  2929  001688                     u12057:
  2930  001688  2EE8               	decfsz	wreg,f,c
  2931  00168A  D7FE               	bra	u12057
  2932  00168C  2E72               	decfsz	??_main& (0+255),f,c
  2933  00168E  D7FC               	bra	u12057
  2934  001690  D601               	goto	l10248
  2935  001692                     __end_of_main:
  2936                           	opt callstack 0
  2937                           
  2938 ;; *************** function _sendArduinoStandbyClampRequest *****************
  2939 ;; Defined at:
  2940 ;;		line 595 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  data            1    0        unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    4
  2961 ;; This function calls:
  2962 ;;		_I2C_Master_Start
  2963 ;;		_I2C_Master_Stop
  2964 ;;		_I2C_Master_Write
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text1
  2971  00479A                     __ptext1:
  2972                           	opt callstack 0
  2973  00479A                     _sendArduinoStandbyClampRequest:
  2974                           	opt callstack 26
  2975                           
  2976                           ;main.c: 602:     I2C_Master_Start();
  2977                           
  2978                           ;incstack = 0
  2979  00479A  EC63  F024         	call	_I2C_Master_Start	;wreg free
  2980                           
  2981                           ;main.c: 603:     I2C_Master_Write(0b00010000);
  2982  00479E  0E00               	movlw	0
  2983  0047A0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2984  0047A2  0E10               	movlw	16
  2985  0047A4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2986  0047A6  EC55  F024         	call	_I2C_Master_Write	;wreg free
  2987                           
  2988                           ;main.c: 604:     I2C_Master_Write(data);
  2989  0047AA  0E00               	movlw	0
  2990  0047AC  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  2991  0047AE  0E41               	movlw	65
  2992  0047B0  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  2993  0047B2  EC55  F024         	call	_I2C_Master_Write	;wreg free
  2994                           
  2995                           ;main.c: 605:     I2C_Master_Stop();
  2996  0047B6  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  2997  0047BA  0012               	return		;funcret
  2998  0047BC                     __end_of_sendArduinoStandbyClampRequest:
  2999                           	opt callstack 0
  3000                           
  3001 ;; *************** function _robotInit *****************
  3002 ;; Defined at:
  3003 ;;		line 1247 in file "main.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    7
  3024 ;; This function calls:
  3025 ;;		_EncoderInit
  3026 ;;		_I2C_Master_Init
  3027 ;;		_initLCD
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;;		_mainEEPROM
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text2
  3035  0044B6                     __ptext2:
  3036                           	opt callstack 0
  3037  0044B6                     _robotInit:
  3038                           	opt callstack 23
  3039                           
  3040                           ;main.c: 1249:     EncoderInit();
  3041                           
  3042                           ;incstack = 0
  3043  0044B6  EC20  F024         	call	_EncoderInit	;wreg free
  3044                           
  3045                           ;main.c: 1253:     LATD = 0x00;
  3046  0044BA  0E00               	movlw	0
  3047  0044BC  6E8C               	movwf	3980,c	;volatile
  3048                           
  3049                           ;main.c: 1254:     TRISD = 0x00;
  3050  0044BE  0E00               	movlw	0
  3051  0044C0  6E95               	movwf	3989,c	;volatile
  3052                           
  3053                           ;main.c: 1257:     LATB = 0x00;
  3054  0044C2  0E00               	movlw	0
  3055  0044C4  6E8A               	movwf	3978,c	;volatile
  3056                           
  3057                           ;main.c: 1258:     TRISBbits.TRISB1 = 1;
  3058  0044C6  8293               	bsf	3987,1,c	;volatile
  3059                           
  3060                           ;main.c: 1259:     TRISBbits.TRISB4 = 1;
  3061  0044C8  8893               	bsf	3987,4,c	;volatile
  3062                           
  3063                           ;main.c: 1260:     TRISBbits.TRISB5 = 1;
  3064  0044CA  8A93               	bsf	3987,5,c	;volatile
  3065                           
  3066                           ;main.c: 1261:     TRISBbits.TRISB6 = 1;
  3067  0044CC  8C93               	bsf	3987,6,c	;volatile
  3068                           
  3069                           ;main.c: 1262:     TRISBbits.TRISB7 = 1;
  3070  0044CE  8E93               	bsf	3987,7,c	;volatile
  3071                           
  3072                           ;main.c: 1265:     TRISBbits.TRISB3 = 0;
  3073  0044D0  9693               	bcf	3987,3,c	;volatile
  3074                           
  3075                           ;main.c: 1266:     TRISAbits.TRISA5 = 0;
  3076  0044D2  9A92               	bcf	3986,5,c	;volatile
  3077                           
  3078                           ;main.c: 1269:     TRISAbits.TRISA4 = 0;
  3079  0044D4  9892               	bcf	3986,4,c	;volatile
  3080                           
  3081                           ;main.c: 1270:     LATAbits.LATA4 = 0;
  3082  0044D6  9889               	bcf	3977,4,c	;volatile
  3083                           
  3084                           ;main.c: 1273:     I2C_Master_Init(100000);
  3085  0044D8  0EA0               	movlw	160
  3086  0044DA  6E13               	movwf	I2C_Master_Init@clockFreq,c
  3087  0044DC  0E86               	movlw	134
  3088  0044DE  6E14               	movwf	I2C_Master_Init@clockFreq+1,c
  3089  0044E0  0E01               	movlw	1
  3090  0044E2  6E15               	movwf	I2C_Master_Init@clockFreq+2,c
  3091  0044E4  0E00               	movlw	0
  3092  0044E6  6E16               	movwf	I2C_Master_Init@clockFreq+3,c
  3093  0044E8  EC19  F021         	call	_I2C_Master_Init	;wreg free
  3094                           
  3095                           ;main.c: 1280:     ADCON1 = 0b00001111;
  3096  0044EC  0E0F               	movlw	15
  3097  0044EE  6EC1               	movwf	4033,c	;volatile
  3098                           
  3099                           ;main.c: 1283:     INT1IE = 1;
  3100  0044F0  86F0               	bsf	4080,3,c	;volatile
  3101                           
  3102                           ;main.c: 1286:     initLCD();
  3103  0044F2  EC4C  F020         	call	_initLCD	;wreg free
  3104                           
  3105                           ;main.c: 1289:     (INTCONbits.GIE = 1);
  3106  0044F6  8EF2               	bsf	4082,7,c	;volatile
  3107  0044F8  0012               	return		;funcret
  3108  0044FA                     __end_of_robotInit:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function _initLCD *****************
  3112 ;; Defined at:
  3113 ;;		line 69 in file "lcd.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        1 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    6
  3134 ;; This function calls:
  3135 ;;		_lcdInst
  3136 ;;		_send_byte
  3137 ;;		_send_nibble
  3138 ;; This function is called by:
  3139 ;;		_robotInit
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text3
  3144  004098                     __ptext3:
  3145                           	opt callstack 0
  3146  004098                     _initLCD:
  3147                           	opt callstack 23
  3148                           
  3149                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3150                           
  3151                           ;incstack = 0
  3152  004098  0E31               	movlw	49
  3153  00409A  6E0A               	movwf	??_initLCD& (0+255),c
  3154  00409C  0EB2               	movlw	178
  3155  00409E                     u12067:
  3156  00409E  2EE8               	decfsz	wreg,f,c
  3157  0040A0  D7FE               	bra	u12067
  3158  0040A2  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3159  0040A4  D7FC               	bra	u12067
  3160  0040A6  D000               	nop2	
  3161                           
  3162                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3163  0040A8  948C               	bcf	3980,2,c	;volatile
  3164                           
  3165                           ;lcd.c: 74:     send_nibble(0b0011);
  3166  0040AA  0E03               	movlw	3
  3167  0040AC  EC2C  F024         	call	_send_nibble
  3168                           
  3169                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3170  0040B0  0E11               	movlw	17
  3171  0040B2  6E0A               	movwf	??_initLCD& (0+255),c
  3172  0040B4  0E3A               	movlw	58
  3173  0040B6                     u12077:
  3174  0040B6  2EE8               	decfsz	wreg,f,c
  3175  0040B8  D7FE               	bra	u12077
  3176  0040BA  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3177  0040BC  D7FC               	bra	u12077
  3178  0040BE  D000               	nop2	
  3179                           
  3180                           ;lcd.c: 76:     send_nibble(0b0011);
  3181  0040C0  0E03               	movlw	3
  3182  0040C2  EC2C  F024         	call	_send_nibble
  3183                           
  3184                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3185  0040C6  0E7D               	movlw	125
  3186  0040C8                     u12087:
  3187  0040C8  2EE8               	decfsz	wreg,f,c
  3188  0040CA  D7FE               	bra	u12087
  3189                           
  3190                           ;lcd.c: 78:     send_byte(0b00110010);
  3191  0040CC  0E32               	movlw	50
  3192  0040CE  EC40  F024         	call	_send_byte
  3193                           
  3194                           ;lcd.c: 80:     send_byte(0b00101000);
  3195  0040D2  0E28               	movlw	40
  3196  0040D4  EC40  F024         	call	_send_byte
  3197                           
  3198                           ;lcd.c: 81:     send_byte(0b00001000);
  3199  0040D8  0E08               	movlw	8
  3200  0040DA  EC40  F024         	call	_send_byte
  3201                           
  3202                           ;lcd.c: 82:     send_byte(0b00000001);
  3203  0040DE  0E01               	movlw	1
  3204  0040E0  EC40  F024         	call	_send_byte
  3205                           
  3206                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3207  0040E4  0E11               	movlw	17
  3208  0040E6  6E0A               	movwf	??_initLCD& (0+255),c
  3209  0040E8  0E3A               	movlw	58
  3210  0040EA                     u12097:
  3211  0040EA  2EE8               	decfsz	wreg,f,c
  3212  0040EC  D7FE               	bra	u12097
  3213  0040EE  2E0A               	decfsz	??_initLCD& (0+255),f,c
  3214  0040F0  D7FC               	bra	u12097
  3215  0040F2  D000               	nop2	
  3216                           
  3217                           ;lcd.c: 84:     send_byte(0b00000110);
  3218  0040F4  0E06               	movlw	6
  3219  0040F6  EC40  F024         	call	_send_byte
  3220                           
  3221                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  3222  0040FA  0E0C               	movlw	12
  3223  0040FC  EC4F  F024         	call	_lcdInst
  3224  004100  0012               	return		;funcret
  3225  004102                     __end_of_initLCD:
  3226                           	opt callstack 0
  3227                           
  3228 ;; *************** function _I2C_Master_Init *****************
  3229 ;; Defined at:
  3230 ;;		line 32 in file "I2C.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  clockFreq       4   18[COMRAM] const unsigned long 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;Total ram usage:        8 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    3
  3251 ;; This function calls:
  3252 ;;		___lldiv
  3253 ;; This function is called by:
  3254 ;;		_robotInit
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text4
  3259  004232                     __ptext4:
  3260                           	opt callstack 0
  3261  004232                     _I2C_Master_Init:
  3262                           	opt callstack 26
  3263                           
  3264                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  3265                           
  3266                           ;incstack = 0
  3267  004232  9AC6               	bcf	4038,5,c	;volatile
  3268                           
  3269                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  3270  004234  8694               	bsf	3988,3,c	;volatile
  3271                           
  3272                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  3273  004236  8894               	bsf	3988,4,c	;volatile
  3274                           
  3275                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  3276  004238  0E80               	movlw	128
  3277  00423A  6E06               	movwf	___lldiv@dividend,c
  3278  00423C  0E96               	movlw	150
  3279  00423E  6E07               	movwf	___lldiv@dividend+1,c
  3280  004240  0E98               	movlw	152
  3281  004242  6E08               	movwf	___lldiv@dividend+2,c
  3282  004244  0E00               	movlw	0
  3283  004246  6E09               	movwf	___lldiv@dividend+3,c
  3284  004248  C013  F017         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3285  00424C  C014  F018         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3286  004250  C015  F019         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3287  004254  C016  F01A         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3288  004258  0E02               	movlw	2
  3289  00425A                     u11065:
  3290  00425A  90D8               	bcf	status,0,c
  3291  00425C  3617               	rlcf	??_I2C_Master_Init,f,c
  3292  00425E  3618               	rlcf	??_I2C_Master_Init+1,f,c
  3293  004260  3619               	rlcf	??_I2C_Master_Init+2,f,c
  3294  004262  361A               	rlcf	??_I2C_Master_Init+3,f,c
  3295  004264  2EE8               	decfsz	wreg,f,c
  3296  004266  D7F9               	goto	u11065
  3297  004268  C017  F00A         	movff	??_I2C_Master_Init,___lldiv@divisor
  3298  00426C  C018  F00B         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3299  004270  C019  F00C         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3300  004274  C01A  F00D         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3301  004278  EC9D  F01F         	call	___lldiv	;wreg free
  3302  00427C  0406               	decf	?___lldiv,w,c
  3303  00427E  6EC8               	movwf	4040,c	;volatile
  3304                           
  3305                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  3306  004280  0E80               	movlw	128
  3307  004282  6EC7               	movwf	4039,c	;volatile
  3308                           
  3309                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  3310  004284  0E28               	movlw	40
  3311  004286  6EC6               	movwf	4038,c	;volatile
  3312                           
  3313                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  3314  004288  0E00               	movlw	0
  3315  00428A  6EC5               	movwf	4037,c	;volatile
  3316  00428C  0012               	return		;funcret
  3317  00428E                     __end_of_I2C_Master_Init:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function _EncoderInit *****************
  3321 ;; Defined at:
  3322 ;;		line 194 in file "main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    2
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_robotInit
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text5
  3351  004840                     __ptext5:
  3352                           	opt callstack 0
  3353  004840                     _EncoderInit:
  3354                           	opt callstack 27
  3355                           
  3356                           ;main.c: 195:   motorBDirection = 1;
  3357                           
  3358                           ;incstack = 0
  3359  004840  0E01               	movlw	1
  3360  004842  0100               	movlb	0	; () banked
  3361  004844  6FF2               	movwf	_motorBDirection& (0+255),b	;volatile
  3362                           
  3363                           ;main.c: 196:   motorADirection = 1;
  3364  004846  0E01               	movlw	1
  3365  004848  6FF1               	movwf	_motorADirection& (0+255),b	;volatile
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;main.c: 199:   TRISCbits.TRISC0 = 1;
  3369  00484A  8094               	bsf	3988,0,c	;volatile
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 200:   TRISEbits.TRISE1 = 1;
  3373  00484C  8296               	bsf	3990,1,c	;volatile
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;main.c: 201:   TRISBbits.TRISB2 = 1;
  3377  00484E  8493               	bsf	3987,2,c	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;main.c: 202:   TRISBbits.TRISB0 = 1;
  3381  004850  8093               	bsf	3987,0,c	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;main.c: 205:   INT2IE = 1;
  3385  004852  88F0               	bsf	4080,4,c	;volatile
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;main.c: 207:   INT0IE = 1;
  3389  004854  88F2               	bsf	4082,4,c	;volatile
  3390                           
  3391                           ; BSR set to: 0
  3392  004856  0012               	return		;funcret
  3393  004858                     __end_of_EncoderInit:
  3394                           	opt callstack 0
  3395                           
  3396 ;; *************** function _replaceOldLog *****************
  3397 ;; Defined at:
  3398 ;;		line 1297 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  i               2   11[COMRAM] int 
  3403 ;;  i               2    9[COMRAM] int 
  3404 ;;  i               2    7[COMRAM] int 
  3405 ;;  i               2    5[COMRAM] int 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        8 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    2
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text6
  3430  00365A                     __ptext6:
  3431                           	opt callstack 0
  3432  00365A                     _replaceOldLog:
  3433                           	opt callstack 28
  3434                           
  3435                           ;main.c: 1298:     for (int i = 0; i< 48; i++){
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;incstack = 0
  3439  00365A  0E00               	movlw	0
  3440  00365C  6E07               	movwf	replaceOldLog@i+1,c
  3441  00365E  0E00               	movlw	0
  3442  003660  6E06               	movwf	replaceOldLog@i,c
  3443  003662                     l9962:
  3444                           
  3445                           ;main.c: 1299:         logs[1][i] = logs[2][i];
  3446  003662  90D8               	bcf	status,0,c
  3447  003664  3406               	rlcf	replaceOldLog@i,w,c
  3448  003666  6ED9               	movwf	fsr2l,c
  3449  003668  3407               	rlcf	replaceOldLog@i+1,w,c
  3450  00366A  6EDA               	movwf	fsr2h,c
  3451  00366C  0E53               	movlw	low (_logs+192)
  3452  00366E  26D9               	addwf	fsr2l,f,c
  3453  003670  0E02               	movlw	high (_logs+192)
  3454  003672  22DA               	addwfc	fsr2h,f,c
  3455  003674  90D8               	bcf	status,0,c
  3456  003676  3406               	rlcf	replaceOldLog@i,w,c
  3457  003678  6EE1               	movwf	fsr1l,c
  3458  00367A  3407               	rlcf	replaceOldLog@i+1,w,c
  3459  00367C  6EE2               	movwf	fsr1h,c
  3460  00367E  0EF3               	movlw	low (_logs+96)
  3461  003680  26E1               	addwf	fsr1l,f,c
  3462  003682  0E01               	movlw	high (_logs+96)
  3463  003684  22E2               	addwfc	fsr1h,f,c
  3464  003686  CFDE FFE6          	movff	postinc2,postinc1
  3465  00368A  CFDD FFE5          	movff	postdec2,postdec1
  3466                           
  3467                           ;main.c: 1300:     }
  3468  00368E  4A06               	infsnz	replaceOldLog@i,f,c
  3469  003690  2A07               	incf	replaceOldLog@i+1,f,c
  3470  003692  BE07               	btfsc	replaceOldLog@i+1,7,c
  3471  003694  D7E6               	goto	l9962
  3472  003696  5007               	movf	replaceOldLog@i+1,w,c
  3473  003698  E104               	bnz	u11470
  3474  00369A  0E30               	movlw	48
  3475  00369C  5C06               	subwf	replaceOldLog@i,w,c
  3476  00369E  A0D8               	btfss	status,0,c
  3477  0036A0  D7E0               	goto	l9962
  3478  0036A2                     u11470:
  3479                           
  3480                           ;main.c: 1303:     for (int i = 0; i< 48; i++){
  3481  0036A2  0E00               	movlw	0
  3482  0036A4  6E09               	movwf	replaceOldLog@i_1083+1,c
  3483  0036A6  0E00               	movlw	0
  3484  0036A8  6E08               	movwf	replaceOldLog@i_1083,c
  3485  0036AA                     l9974:
  3486                           
  3487                           ;main.c: 1304:         logs[2][i] = logs[3][i];
  3488  0036AA  90D8               	bcf	status,0,c
  3489  0036AC  3408               	rlcf	replaceOldLog@i_1083,w,c
  3490  0036AE  6ED9               	movwf	fsr2l,c
  3491  0036B0  3409               	rlcf	replaceOldLog@i_1083+1,w,c
  3492  0036B2  6EDA               	movwf	fsr2h,c
  3493  0036B4  0EB3               	movlw	low (_logs+288)
  3494  0036B6  26D9               	addwf	fsr2l,f,c
  3495  0036B8  0E02               	movlw	high (_logs+288)
  3496  0036BA  22DA               	addwfc	fsr2h,f,c
  3497  0036BC  90D8               	bcf	status,0,c
  3498  0036BE  3408               	rlcf	replaceOldLog@i_1083,w,c
  3499  0036C0  6EE1               	movwf	fsr1l,c
  3500  0036C2  3409               	rlcf	replaceOldLog@i_1083+1,w,c
  3501  0036C4  6EE2               	movwf	fsr1h,c
  3502  0036C6  0E53               	movlw	low (_logs+192)
  3503  0036C8  26E1               	addwf	fsr1l,f,c
  3504  0036CA  0E02               	movlw	high (_logs+192)
  3505  0036CC  22E2               	addwfc	fsr1h,f,c
  3506  0036CE  CFDE FFE6          	movff	postinc2,postinc1
  3507  0036D2  CFDD FFE5          	movff	postdec2,postdec1
  3508                           
  3509                           ;main.c: 1305:     }
  3510  0036D6  4A08               	infsnz	replaceOldLog@i_1083,f,c
  3511  0036D8  2A09               	incf	replaceOldLog@i_1083+1,f,c
  3512  0036DA  BE09               	btfsc	replaceOldLog@i_1083+1,7,c
  3513  0036DC  D7E6               	goto	l9974
  3514  0036DE  5009               	movf	replaceOldLog@i_1083+1,w,c
  3515  0036E0  E104               	bnz	u11480
  3516  0036E2  0E30               	movlw	48
  3517  0036E4  5C08               	subwf	replaceOldLog@i_1083,w,c
  3518  0036E6  A0D8               	btfss	status,0,c
  3519  0036E8  D7E0               	goto	l9974
  3520  0036EA                     u11480:
  3521                           
  3522                           ;main.c: 1307:     for (int i = 0; i< 48; i++){
  3523  0036EA  0E00               	movlw	0
  3524  0036EC  6E0B               	movwf	replaceOldLog@i_1084+1,c
  3525  0036EE  0E00               	movlw	0
  3526  0036F0  6E0A               	movwf	replaceOldLog@i_1084,c
  3527  0036F2                     l9986:
  3528                           
  3529                           ;main.c: 1308:         logs[3][i] = logs[4][i];
  3530  0036F2  90D8               	bcf	status,0,c
  3531  0036F4  340A               	rlcf	replaceOldLog@i_1084,w,c
  3532  0036F6  6ED9               	movwf	fsr2l,c
  3533  0036F8  340B               	rlcf	replaceOldLog@i_1084+1,w,c
  3534  0036FA  6EDA               	movwf	fsr2h,c
  3535  0036FC  0E13               	movlw	low (_logs+384)
  3536  0036FE  26D9               	addwf	fsr2l,f,c
  3537  003700  0E03               	movlw	high (_logs+384)
  3538  003702  22DA               	addwfc	fsr2h,f,c
  3539  003704  90D8               	bcf	status,0,c
  3540  003706  340A               	rlcf	replaceOldLog@i_1084,w,c
  3541  003708  6EE1               	movwf	fsr1l,c
  3542  00370A  340B               	rlcf	replaceOldLog@i_1084+1,w,c
  3543  00370C  6EE2               	movwf	fsr1h,c
  3544  00370E  0EB3               	movlw	low (_logs+288)
  3545  003710  26E1               	addwf	fsr1l,f,c
  3546  003712  0E02               	movlw	high (_logs+288)
  3547  003714  22E2               	addwfc	fsr1h,f,c
  3548  003716  CFDE FFE6          	movff	postinc2,postinc1
  3549  00371A  CFDD FFE5          	movff	postdec2,postdec1
  3550                           
  3551                           ;main.c: 1309:     }
  3552  00371E  4A0A               	infsnz	replaceOldLog@i_1084,f,c
  3553  003720  2A0B               	incf	replaceOldLog@i_1084+1,f,c
  3554  003722  BE0B               	btfsc	replaceOldLog@i_1084+1,7,c
  3555  003724  D7E6               	goto	l9986
  3556  003726  500B               	movf	replaceOldLog@i_1084+1,w,c
  3557  003728  E104               	bnz	u11490
  3558  00372A  0E30               	movlw	48
  3559  00372C  5C0A               	subwf	replaceOldLog@i_1084,w,c
  3560  00372E  A0D8               	btfss	status,0,c
  3561  003730  D7E0               	goto	l9986
  3562  003732                     u11490:
  3563                           
  3564                           ;main.c: 1311:     for (int i = 0; i< 48; i++){
  3565  003732  0E00               	movlw	0
  3566  003734  6E0D               	movwf	replaceOldLog@i_1085+1,c
  3567  003736  0E00               	movlw	0
  3568  003738  6E0C               	movwf	replaceOldLog@i_1085,c
  3569  00373A                     l9998:
  3570                           
  3571                           ;main.c: 1312:         logs[4][i] = logs[0][i];
  3572  00373A  90D8               	bcf	status,0,c
  3573  00373C  340C               	rlcf	replaceOldLog@i_1085,w,c
  3574  00373E  6ED9               	movwf	fsr2l,c
  3575  003740  340D               	rlcf	replaceOldLog@i_1085+1,w,c
  3576  003742  6EDA               	movwf	fsr2h,c
  3577  003744  0E93               	movlw	low _logs
  3578  003746  26D9               	addwf	fsr2l,f,c
  3579  003748  0E01               	movlw	high _logs
  3580  00374A  22DA               	addwfc	fsr2h,f,c
  3581  00374C  90D8               	bcf	status,0,c
  3582  00374E  340C               	rlcf	replaceOldLog@i_1085,w,c
  3583  003750  6EE1               	movwf	fsr1l,c
  3584  003752  340D               	rlcf	replaceOldLog@i_1085+1,w,c
  3585  003754  6EE2               	movwf	fsr1h,c
  3586  003756  0E13               	movlw	low (_logs+384)
  3587  003758  26E1               	addwf	fsr1l,f,c
  3588  00375A  0E03               	movlw	high (_logs+384)
  3589  00375C  22E2               	addwfc	fsr1h,f,c
  3590  00375E  CFDE FFE6          	movff	postinc2,postinc1
  3591  003762  CFDD FFE5          	movff	postdec2,postdec1
  3592                           
  3593                           ;main.c: 1313:     }
  3594  003766  4A0C               	infsnz	replaceOldLog@i_1085,f,c
  3595  003768  2A0D               	incf	replaceOldLog@i_1085+1,f,c
  3596  00376A  BE0D               	btfsc	replaceOldLog@i_1085+1,7,c
  3597  00376C  D7E6               	goto	l9998
  3598  00376E  500D               	movf	replaceOldLog@i_1085+1,w,c
  3599  003770  E105               	bnz	u11500
  3600  003772  0E30               	movlw	48
  3601  003774  5C0C               	subwf	replaceOldLog@i_1085,w,c
  3602  003776  B0D8               	btfsc	status,0,c
  3603  003778  0012               	return	
  3604  00377A  D7DF               	goto	l9998
  3605  00377C                     u11500:
  3606  00377C  0012               	return		;funcret
  3607  00377E                     __end_of_replaceOldLog:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function _doOperation *****************
  3611 ;; Defined at:
  3612 ;;		line 788 in file "main.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  startedDistB    4   12[BANK1 ] long 
  3617 ;;  startedDistA    4    8[BANK1 ] long 
  3618 ;;  PIDData         8    0[BANK1 ] long [2]
  3619 ;;  timeInOperat    4   76[BANK1 ] unsigned long 
  3620 ;;  distanceFrom    4   66[BANK1 ] long 
  3621 ;;  distanceToPo    4   62[BANK1 ] long 
  3622 ;;  motorBStartD    4   53[BANK1 ] long 
  3623 ;;  motorAStartD    4   49[BANK1 ] long 
  3624 ;;  timeStart       4   45[BANK1 ] unsigned long 
  3625 ;;  motorStartTi    4   34[BANK1 ] unsigned long 
  3626 ;;  poleNumber      2   89[BANK1 ] int 
  3627 ;;  tiresOnPole     2   87[BANK1 ] int 
  3628 ;;  tiresDeploye    2   85[BANK1 ] int 
  3629 ;;  tiresToDrop     2   82[BANK1 ] int 
  3630 ;;  distanceToPo    2   72[BANK1 ] int 
  3631 ;;  totalTiresSu    2   70[BANK1 ] int 
  3632 ;;  distanceFrom    2   60[BANK1 ] int 
  3633 ;;  counted         2   58[BANK1 ] int 
  3634 ;;  tiresOnPoleA    2   43[BANK1 ] int 
  3635 ;;  badCountBot     2   41[BANK1 ] int 
  3636 ;;  badCount        2   39[BANK1 ] int 
  3637 ;;  acceleration    2   32[BANK1 ] int 
  3638 ;;  rightRangeFi    2   30[BANK1 ] int 
  3639 ;;  leftRangeFin    2    0        int 
  3640 ;;  currentAngle    2    0        int 
  3641 ;;  error           2    0        int 
  3642 ;;  errorScaleFa    2    0        int 
  3643 ;;  motorBSpeed     2    0        int 
  3644 ;;  motorASpeed     2    0        int 
  3645 ;;  goalSpeed       2    0        int 
  3646 ;;  fourMetreEqu    2    0        int 
  3647 ;;  minimumSafeD    2    0        int 
  3648 ;;  topLaserStat    1   84[BANK1 ] _Bool 
  3649 ;;  currentOpera    1   81[BANK1 ] enum E3396
  3650 ;;  bottomLaserS    1   80[BANK1 ] _Bool 
  3651 ;;  bottomLaserS    1   75[BANK1 ] _Bool 
  3652 ;;  topLaserStat    1   74[BANK1 ] _Bool 
  3653 ;;  isDoneDrop      1   57[BANK1 ] _Bool 
  3654 ;;  send            1   38[BANK1 ] _Bool 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Locals:         0       0      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Totals:         0       4      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;Total ram usage:       95 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   13
  3671 ;; This function calls:
  3672 ;;		_I2C_Master_Start
  3673 ;;		_I2C_Master_Stop
  3674 ;;		_I2C_Master_Write
  3675 ;;		_TIMER_INIT
  3676 ;;		___awmod
  3677 ;;		___fldiv
  3678 ;;		___flge
  3679 ;;		___flmul
  3680 ;;		___fltol
  3681 ;;		___lldiv
  3682 ;;		___wmul
  3683 ;;		___xxtofl
  3684 ;;		_errorCorrectedMove
  3685 ;;		_init_motor_PWM
  3686 ;;		_lcdInst
  3687 ;;		_opDelay
  3688 ;;		_opErrorCorrectionDegrees
  3689 ;;		_printf
  3690 ;;		_requestIsTireDropDone
  3691 ;;		_sendArduinoAbortOperationMessage
  3692 ;;		_sendArduinoTireDropRequest
  3693 ;;		_sendArduinoTireOperationStartMessage
  3694 ;;		_setMotorSpeeds
  3695 ;;		_tirePositioning
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text7
  3702  000012                     __ptext7:
  3703                           	opt callstack 0
  3704  000012                     _doOperation:
  3705                           	opt callstack 17
  3706                           
  3707                           ;main.c: 789:             LATAbits.LATA5 = 0;
  3708                           
  3709                           ;incstack = 0
  3710  000012  9A89               	bcf	3977,5,c	;volatile
  3711                           
  3712                           ;main.c: 790:         LATBbits.LATB3 = 0;
  3713  000014  968A               	bcf	3978,3,c	;volatile
  3714                           
  3715                           ;main.c: 796:     I2C_Master_Start();
  3716  000016  EC63  F024         	call	_I2C_Master_Start	;wreg free
  3717                           
  3718                           ;main.c: 797:     I2C_Master_Write(0b00010000);
  3719  00001A  0E00               	movlw	0
  3720  00001C  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  3721  00001E  0E10               	movlw	16
  3722  000020  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  3723  000022  EC55  F024         	call	_I2C_Master_Write	;wreg free
  3724                           
  3725                           ;main.c: 798:     I2C_Master_Stop();
  3726  000026  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  3727                           
  3728                           ;main.c: 801:     sendArduinoTireOperationStartMessage();
  3729  00002A  ECDE  F023         	call	_sendArduinoTireOperationStartMessage	;wreg free
  3730                           
  3731                           ;main.c: 805:     TIMER_INIT();
  3732  00002E  EC11  F024         	call	_TIMER_INIT	;wreg free
  3733                           
  3734                           ;main.c: 806:     millisecondsMeasured = 0ul;
  3735  000032  0E00               	movlw	0
  3736  000034  6E74               	movwf	_millisecondsMeasured,c	;volatile
  3737  000036  0E00               	movlw	0
  3738  000038  6E75               	movwf	_millisecondsMeasured+1,c	;volatile
  3739  00003A  0E00               	movlw	0
  3740  00003C  6E76               	movwf	_millisecondsMeasured+2,c	;volatile
  3741  00003E  0E00               	movlw	0
  3742  000040  6E77               	movwf	_millisecondsMeasured+3,c	;volatile
  3743                           
  3744                           ;main.c: 815:  enum operationStates currentOperationState = moveForward;
  3745  000042  0E00               	movlw	0
  3746  000044  0101               	movlb	1	; () banked
  3747  000046  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  3748                           
  3749                           ; BSR set to: 1
  3750                           ;main.c: 817:  int rightRangeFinder = 0;
  3751                           
  3752                           ; BSR set to: 1
  3753  000048  0E00               	movlw	0
  3754  00004A  6F1F               	movwf	(doOperation@rightRangeFinder+1)& (0+255),b
  3755  00004C  0E00               	movlw	0
  3756  00004E  6F1E               	movwf	doOperation@rightRangeFinder& (0+255),b
  3757                           
  3758                           ; BSR set to: 1
  3759                           ;main.c: 818:  int tiresToDrop = 0;
  3760  000050  0E00               	movlw	0
  3761  000052  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  3762  000054  0E00               	movlw	0
  3763  000056  6F52               	movwf	doOperation@tiresToDrop& (0+255),b
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;main.c: 819:     int minimumSafeDistanceToPole;;main.c: 820:     int fourMetreEquivalen
      +                          t;;main.c: 821:     unsigned long timeInOperation = 10000ul;
  3767  000058  0E10               	movlw	16
  3768  00005A  6F4C               	movwf	doOperation@timeInOperation& (0+255),b
  3769  00005C  0E27               	movlw	39
  3770  00005E  6F4D               	movwf	(doOperation@timeInOperation+1)& (0+255),b
  3771  000060  0E00               	movlw	0
  3772  000062  6F4E               	movwf	(doOperation@timeInOperation+2)& (0+255),b
  3773  000064  0E00               	movlw	0
  3774  000066  6F4F               	movwf	(doOperation@timeInOperation+3)& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;main.c: 822:     long motorAStartDistance = motorADistance;
  3778  000068  C0DB  F131         	movff	_motorADistance,doOperation@motorAStartDistance	;volatile
  3779  00006C  C0DC  F132         	movff	_motorADistance+1,doOperation@motorAStartDistance+1	;volatile
  3780  000070  C0DD  F133         	movff	_motorADistance+2,doOperation@motorAStartDistance+2	;volatile
  3781  000074  C0DE  F134         	movff	_motorADistance+3,doOperation@motorAStartDistance+3	;volatile
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;main.c: 823:     long motorBStartDistance = motorBDistance;
  3785  000078  C0D7  F135         	movff	_motorBDistance,doOperation@motorBStartDistance	;volatile
  3786  00007C  C0D8  F136         	movff	_motorBDistance+1,doOperation@motorBStartDistance+1	;volatile
  3787  000080  C0D9  F137         	movff	_motorBDistance+2,doOperation@motorBStartDistance+2	;volatile
  3788  000084  C0DA  F138         	movff	_motorBDistance+3,doOperation@motorBStartDistance+3	;volatile
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;main.c: 824:     unsigned long motorStartTime = millisecondsMeasured;
  3792  000088  C074  F122         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  3793  00008C  C075  F123         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  3794  000090  C076  F124         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  3795  000094  C077  F125         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  3796                           
  3797                           ; BSR set to: 1
  3798                           ;main.c: 825:     int accelerationDelay = 0;
  3799  000098  0E00               	movlw	0
  3800  00009A  6F21               	movwf	(doOperation@accelerationDelay+1)& (0+255),b
  3801  00009C  0E00               	movlw	0
  3802  00009E  6F20               	movwf	doOperation@accelerationDelay& (0+255),b
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;main.c: 827:     long PIDData[2] = {0,0};
  3806  0000A0  EE21  F000         	lfsr	2,doOperation@PIDData
  3807  0000A4  0E07               	movlw	7
  3808  0000A6                     u11211:
  3809  0000A6  6ADE               	clrf	postinc2,c
  3810  0000A8  06E8               	decf	wreg,f,c
  3811  0000AA  E2FD               	bc	u11211
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;main.c: 828:     _Bool topLaserState;;main.c: 829:     _Bool topLaserStatePrev;;main.c:
      +                           830:     _Bool bottomLaserState;;main.c: 831:     _Bool bottomLaserStatePrev;;main.c: 8
      +                          32:     _Bool isDoneDrop;;main.c: 833:     init_motor_PWM();
  3815  0000AC  EC80  F023         	call	_init_motor_PWM	;wreg free
  3816                           
  3817                           ;main.c: 834:     int counted = 0;
  3818  0000B0  0E00               	movlw	0
  3819  0000B2  0101               	movlb	1	; () banked
  3820  0000B4  6F3B               	movwf	(doOperation@counted+1)& (0+255),b
  3821  0000B6  0E00               	movlw	0
  3822  0000B8  6F3A               	movwf	doOperation@counted& (0+255),b
  3823                           
  3824                           ; BSR set to: 1
  3825                           ;main.c: 835:     int badCount = 0;
  3826  0000BA  0E00               	movlw	0
  3827  0000BC  6F28               	movwf	(doOperation@badCount+1)& (0+255),b
  3828  0000BE  0E00               	movlw	0
  3829  0000C0  6F27               	movwf	doOperation@badCount& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;main.c: 836:     int badCountBot = 0;
  3833  0000C2  0E00               	movlw	0
  3834  0000C4  6F2A               	movwf	(doOperation@badCountBot+1)& (0+255),b
  3835  0000C6  0E00               	movlw	0
  3836  0000C8  6F29               	movwf	doOperation@badCountBot& (0+255),b
  3837                           
  3838                           ; BSR set to: 1
  3839                           ;main.c: 839:     int poleNumber = 0;
  3840  0000CA  0E00               	movlw	0
  3841  0000CC  6F5A               	movwf	(doOperation@poleNumber+1)& (0+255),b
  3842  0000CE  0E00               	movlw	0
  3843  0000D0  6F59               	movwf	doOperation@poleNumber& (0+255),b
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;main.c: 840:     int tiresDeployedOnPole = 0;
  3847  0000D2  0E00               	movlw	0
  3848  0000D4  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  3849  0000D6  0E00               	movlw	0
  3850  0000D8  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  3851                           
  3852                           ; BSR set to: 1
  3853                           ;main.c: 841:     int tiresOnPoleAfterOp = 0;
  3854  0000DA  0E00               	movlw	0
  3855  0000DC  6F2C               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  3856  0000DE  0E00               	movlw	0
  3857  0000E0  6F2B               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;main.c: 842:     int tiresOnPole = 0;
  3861  0000E2  0E00               	movlw	0
  3862  0000E4  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  3863  0000E6  0E00               	movlw	0
  3864  0000E8  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;main.c: 844:     int totalTiresSupplied = 0;
  3868  0000EA  0E00               	movlw	0
  3869  0000EC  6F47               	movwf	(doOperation@totalTiresSupplied+1)& (0+255),b
  3870  0000EE  0E00               	movlw	0
  3871  0000F0  6F46               	movwf	doOperation@totalTiresSupplied& (0+255),b
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;main.c: 846:     long distanceToPole = 0ll;
  3875  0000F2  0E00               	movlw	0
  3876  0000F4  6F3E               	movwf	doOperation@distanceToPole& (0+255),b
  3877  0000F6  0E00               	movlw	0
  3878  0000F8  6F3F               	movwf	(doOperation@distanceToPole+1)& (0+255),b
  3879  0000FA  0E00               	movlw	0
  3880  0000FC  6F40               	movwf	(doOperation@distanceToPole+2)& (0+255),b
  3881  0000FE  0E00               	movlw	0
  3882  000100  6F41               	movwf	(doOperation@distanceToPole+3)& (0+255),b
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;main.c: 847:     long distanceFromLastPole = 0ll;
  3886  000102  0E00               	movlw	0
  3887  000104  6F42               	movwf	doOperation@distanceFromLastPole& (0+255),b
  3888  000106  0E00               	movlw	0
  3889  000108  6F43               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  3890  00010A  0E00               	movlw	0
  3891  00010C  6F44               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  3892  00010E  0E00               	movlw	0
  3893  000110  6F45               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  3894                           
  3895                           ; BSR set to: 1
  3896                           ;main.c: 848:     int distanceToPoleCM = 0;
  3897  000112  0E00               	movlw	0
  3898  000114  6F49               	movwf	(doOperation@distanceToPoleCM+1)& (0+255),b
  3899  000116  0E00               	movlw	0
  3900  000118  6F48               	movwf	doOperation@distanceToPoleCM& (0+255),b
  3901                           
  3902                           ; BSR set to: 1
  3903                           ;main.c: 849:     int distanceFromLastPoleCM = 0;
  3904  00011A  0E00               	movlw	0
  3905  00011C  6F3D               	movwf	(doOperation@distanceFromLastPoleCM+1)& (0+255),b
  3906  00011E  0E00               	movlw	0
  3907  000120  6F3C               	movwf	doOperation@distanceFromLastPoleCM& (0+255),b
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;main.c: 856:     TRISAbits.TRISA0 = 0;
  3911  000122  9092               	bcf	3986,0,c	;volatile
  3912                           
  3913                           ; BSR set to: 1
  3914                           ;main.c: 857:     TRISAbits.TRISA1 = 0;
  3915  000124  9292               	bcf	3986,1,c	;volatile
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;main.c: 858:     TRISAbits.TRISA2 = 0;
  3919  000126  9492               	bcf	3986,2,c	;volatile
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;main.c: 859:     TRISAbits.TRISA3 = 0;
  3923  000128  9692               	bcf	3986,3,c	;volatile
  3924                           
  3925                           ; BSR set to: 1
  3926                           ;main.c: 862:     TRISAbits.TRISA4 = 0;
  3927  00012A  9892               	bcf	3986,4,c	;volatile
  3928                           
  3929                           ; BSR set to: 1
  3930                           ;main.c: 863:     LATAbits.LATA4 = 1;
  3931  00012C  8889               	bsf	3977,4,c	;volatile
  3932                           
  3933                           ; BSR set to: 1
  3934                           ;main.c: 864:     unsigned long timeStart = millisecondsMeasured;
  3935  00012E  C074  F12D         	movff	_millisecondsMeasured,doOperation@timeStart	;volatile
  3936  000132  C075  F12E         	movff	_millisecondsMeasured+1,doOperation@timeStart+1	;volatile
  3937  000136  C076  F12F         	movff	_millisecondsMeasured+2,doOperation@timeStart+2	;volatile
  3938  00013A  C077  F130         	movff	_millisecondsMeasured+3,doOperation@timeStart+3	;volatile
  3939  00013E                     l9672:
  3940                           
  3941                           ;main.c: 865:     while(millisecondsMeasured < timeStart + 100){
  3942  00013E  0E64               	movlw	100
  3943  000140  0101               	movlb	1	; () banked
  3944  000142  252D               	addwf	doOperation@timeStart& (0+255),w,b
  3945  000144  0100               	movlb	0	; () banked
  3946  000146  6FD3               	movwf	??_doOperation& (0+255),b
  3947  000148  0E00               	movlw	0
  3948  00014A  0101               	movlb	1	; () banked
  3949  00014C  212E               	addwfc	(doOperation@timeStart+1)& (0+255),w,b
  3950  00014E  0100               	movlb	0	; () banked
  3951  000150  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  3952  000152  0E00               	movlw	0
  3953  000154  0101               	movlb	1	; () banked
  3954  000156  212F               	addwfc	(doOperation@timeStart+2)& (0+255),w,b
  3955  000158  0100               	movlb	0	; () banked
  3956  00015A  6FD5               	movwf	(??_doOperation+2)& (0+255),b
  3957  00015C  0E00               	movlw	0
  3958  00015E  0101               	movlb	1	; () banked
  3959  000160  2130               	addwfc	(doOperation@timeStart+3)& (0+255),w,b
  3960  000162  0100               	movlb	0	; () banked
  3961  000164  6FD6               	movwf	(??_doOperation+3)& (0+255),b
  3962  000166  51D3               	movf	??_doOperation& (0+255),w,b
  3963  000168  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  3964  00016A  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  3965  00016C  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  3966  00016E  51D5               	movf	(??_doOperation+2)& (0+255),w,b
  3967  000170  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  3968  000172  51D6               	movf	(??_doOperation+3)& (0+255),w,b
  3969  000174  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  3970  000176  A0D8               	btfss	status,0,c
  3971  000178  D7E2               	goto	l9672
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;main.c: 869:     topLaserState = PORTBbits.RB4;
  3975  00017A  A881               	btfss	3969,4,c	;volatile
  3976  00017C  D002               	goto	u11230
  3977  00017E  0E01               	movlw	1
  3978  000180  D001               	goto	u11236
  3979  000182                     u11230:
  3980  000182  0E00               	movlw	0
  3981  000184                     u11236:
  3982  000184  0101               	movlb	1	; () banked
  3983  000186  6F54               	movwf	doOperation@topLaserState& (0+255),b
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;main.c: 870:     topLaserStatePrev = topLaserState;
  3987  000188  C154  F14A         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  3988                           
  3989                           ;main.c: 871:     bottomLaserState = PORTBbits.RB5;
  3990  00018C  AA81               	btfss	3969,5,c	;volatile
  3991  00018E  D002               	goto	u11240
  3992  000190  0E01               	movlw	1
  3993  000192  D001               	goto	u11246
  3994  000194                     u11240:
  3995  000194  0E00               	movlw	0
  3996  000196                     u11246:
  3997  000196  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;main.c: 872:     bottomLaserStatePrev = bottomLaserState;
  4001  000198  C150  F14B         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  4002                           
  4003                           ;main.c: 880:     _Bool send = 1;
  4004  00019C  0E01               	movlw	1
  4005  00019E  6F26               	movwf	doOperation@send& (0+255),b
  4006  0001A0                     l9680:
  4007                           
  4008                           ;main.c: 887:         counted ++;
  4009  0001A0  0101               	movlb	1	; () banked
  4010  0001A2  4B3A               	infsnz	doOperation@counted& (0+255),f,b
  4011  0001A4  2B3B               	incf	(doOperation@counted+1)& (0+255),f,b
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;main.c: 888:         topLaserStatePrev = topLaserState;
  4015  0001A6  C154  F14A         	movff	doOperation@topLaserState,doOperation@topLaserStatePrev
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;main.c: 889:         topLaserState = PORTBbits.RB4;
  4019  0001AA  A881               	btfss	3969,4,c	;volatile
  4020  0001AC  D002               	goto	u11250
  4021  0001AE  0E01               	movlw	1
  4022  0001B0  D001               	goto	u11256
  4023  0001B2                     u11250:
  4024  0001B2  0E00               	movlw	0
  4025  0001B4                     u11256:
  4026  0001B4  6F54               	movwf	doOperation@topLaserState& (0+255),b
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;main.c: 890:         bottomLaserStatePrev = bottomLaserState;
  4030  0001B6  C150  F14B         	movff	doOperation@bottomLaserState,doOperation@bottomLaserStatePrev
  4031                           
  4032                           ; BSR set to: 1
  4033                           ;main.c: 891:         bottomLaserState = PORTBbits.RB5;
  4034  0001BA  AA81               	btfss	3969,5,c	;volatile
  4035  0001BC  D002               	goto	u11260
  4036  0001BE  0E01               	movlw	1
  4037  0001C0  D001               	goto	u11266
  4038  0001C2                     u11260:
  4039  0001C2  0E00               	movlw	0
  4040  0001C4                     u11266:
  4041  0001C4  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  4042                           
  4043                           ;main.c: 894:         switch (currentOperationState){
  4044  0001C6  D391               	goto	l9886
  4045  0001C8                     l9690:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 896:                 if (counted%100 == 0){
  4049  0001C8  C13A  F006         	movff	doOperation@counted,___awmod@dividend
  4050  0001CC  C13B  F007         	movff	doOperation@counted+1,___awmod@dividend+1
  4051  0001D0  0E00               	movlw	0
  4052  0001D2  6E09               	movwf	___awmod@divisor+1,c
  4053  0001D4  0E64               	movlw	100
  4054  0001D6  6E08               	movwf	___awmod@divisor,c
  4055  0001D8  ECDE  F01F         	call	___awmod	;wreg free
  4056  0001DC  5006               	movf	?___awmod,w,c
  4057  0001DE  1007               	iorwf	?___awmod+1,w,c
  4058  0001E0  A4D8               	btfss	status,2,c
  4059  0001E2  D057               	goto	l9712
  4060                           
  4061                           ;main.c: 897:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4062  0001E4  0E01               	movlw	1
  4063  0001E6  EC4F  F024         	call	_lcdInst
  4064  0001EA  0E11               	movlw	17
  4065  0001EC  0100               	movlb	0	; () banked
  4066  0001EE  6FD3               	movwf	??_doOperation& (0+255),b
  4067  0001F0  0E3A               	movlw	58
  4068  0001F2                     u12107:
  4069  0001F2  2EE8               	decfsz	wreg,f,c
  4070  0001F4  D7FE               	bra	u12107
  4071  0001F6  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4072  0001F8  D7FC               	bra	u12107
  4073  0001FA  F000               	nop	
  4074                           
  4075                           ;main.c: 898:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4076  0001FC  0E80               	movlw	128
  4077  0001FE  EC4F  F024         	call	_lcdInst
  4078  000202  0E07               	movlw	7
  4079  000204  0100               	movlb	0	; () banked
  4080  000206  6FD3               	movwf	??_doOperation& (0+255),b
  4081  000208  0E7D               	movlw	125
  4082  00020A                     u12117:
  4083  00020A  2EE8               	decfsz	wreg,f,c
  4084  00020C  D7FE               	bra	u12117
  4085  00020E  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4086  000210  D7FC               	bra	u12117
  4087                           
  4088                           ;main.c: 899:                 printf("%lu", millisecondsMeasured);
  4089  000212  0E1C               	movlw	low STR_21
  4090  000214  0100               	movlb	0	; () banked
  4091  000216  6F9D               	movwf	printf@fmt& (0+255),b
  4092  000218  0EFD               	movlw	high STR_21
  4093  00021A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4094  00021C  C074  F09F         	movff	_millisecondsMeasured,?_printf+2	;volatile
  4095  000220  C075  F0A0         	movff	_millisecondsMeasured+1,?_printf+3	;volatile
  4096  000224  C076  F0A1         	movff	_millisecondsMeasured+2,?_printf+4	;volatile
  4097  000228  C077  F0A2         	movff	_millisecondsMeasured+3,?_printf+5	;volatile
  4098  00022C  EC94  F023         	call	_printf	;wreg free
  4099  000230  0E90               	movlw	144
  4100  000232  EC4F  F024         	call	_lcdInst
  4101                           
  4102                           ;main.c: 901:                 printf("%d", topLaserState);
  4103  000236  0E13               	movlw	low (STR_24+3)
  4104  000238  0100               	movlb	0	; () banked
  4105  00023A  6F9D               	movwf	printf@fmt& (0+255),b
  4106  00023C  0EFD               	movlw	high (STR_24+3)
  4107  00023E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4108  000240  C154  F09F         	movff	doOperation@topLaserState,?_printf+2
  4109  000244  6BA0               	clrf	(?_printf+3)& (0+255),b
  4110  000246  EC94  F023         	call	_printf	;wreg free
  4111  00024A  0EC0               	movlw	192
  4112  00024C  EC4F  F024         	call	_lcdInst
  4113                           
  4114                           ;main.c: 903:                 printf("B: %d", motorBDistance);
  4115  000250  0E16               	movlw	low STR_23
  4116  000252  0100               	movlb	0	; () banked
  4117  000254  6F9D               	movwf	printf@fmt& (0+255),b
  4118  000256  0EFD               	movlw	high STR_23
  4119  000258  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4120  00025A  C0D7  F09F         	movff	_motorBDistance,?_printf+2	;volatile
  4121  00025E  C0D8  F0A0         	movff	_motorBDistance+1,?_printf+3	;volatile
  4122  000262  C0D9  F0A1         	movff	_motorBDistance+2,?_printf+4	;volatile
  4123  000266  C0DA  F0A2         	movff	_motorBDistance+3,?_printf+5	;volatile
  4124  00026A  EC94  F023         	call	_printf	;wreg free
  4125  00026E  0ED0               	movlw	208
  4126  000270  EC4F  F024         	call	_lcdInst
  4127                           
  4128                           ;main.c: 905:                 printf("A: %d", motorADistance);
  4129  000274  0E10               	movlw	low STR_24
  4130  000276  0100               	movlb	0	; () banked
  4131  000278  6F9D               	movwf	printf@fmt& (0+255),b
  4132  00027A  0EFD               	movlw	high STR_24
  4133  00027C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4134  00027E  C0DB  F09F         	movff	_motorADistance,?_printf+2	;volatile
  4135  000282  C0DC  F0A0         	movff	_motorADistance+1,?_printf+3	;volatile
  4136  000286  C0DD  F0A1         	movff	_motorADistance+2,?_printf+4	;volatile
  4137  00028A  C0DE  F0A2         	movff	_motorADistance+3,?_printf+5	;volatile
  4138  00028E  EC94  F023         	call	_printf	;wreg free
  4139  000292                     l9712:
  4140                           
  4141                           ;main.c: 925:                 errorCorrectedMove(90, 1, motorAStartDistance, motorBStart
      +                          Distance, 1.2);
  4142  000292  0E00               	movlw	0
  4143  000294  0100               	movlb	0	; () banked
  4144  000296  6F99               	movwf	(errorCorrectedMove@goalSpeed+1)& (0+255),b
  4145  000298  0E5A               	movlw	90
  4146  00029A  6F98               	movwf	errorCorrectedMove@goalSpeed& (0+255),b
  4147  00029C  0E00               	movlw	0
  4148  00029E  6F9A               	movwf	errorCorrectedMove@turnRatio& (0+255),b
  4149  0002A0  0E00               	movlw	0
  4150  0002A2  6F9B               	movwf	(errorCorrectedMove@turnRatio+1)& (0+255),b
  4151  0002A4  0E80               	movlw	128
  4152  0002A6  6F9C               	movwf	(errorCorrectedMove@turnRatio+2)& (0+255),b
  4153  0002A8  0E3F               	movlw	63
  4154  0002AA  6F9D               	movwf	(errorCorrectedMove@turnRatio+3)& (0+255),b
  4155  0002AC  C131  F09E         	movff	doOperation@motorAStartDistance,errorCorrectedMove@motorAStartDistance
  4156  0002B0  C132  F09F         	movff	doOperation@motorAStartDistance+1,errorCorrectedMove@motorAStartDistance+1
  4157  0002B4  C133  F0A0         	movff	doOperation@motorAStartDistance+2,errorCorrectedMove@motorAStartDistance+2
  4158  0002B8  C134  F0A1         	movff	doOperation@motorAStartDistance+3,errorCorrectedMove@motorAStartDistance+3
  4159  0002BC  C135  F0A2         	movff	doOperation@motorBStartDistance,errorCorrectedMove@motorBStartDistance
  4160  0002C0  C136  F0A3         	movff	doOperation@motorBStartDistance+1,errorCorrectedMove@motorBStartDistance+1
  4161  0002C4  C137  F0A4         	movff	doOperation@motorBStartDistance+2,errorCorrectedMove@motorBStartDistance+2
  4162  0002C8  C138  F0A5         	movff	doOperation@motorBStartDistance+3,errorCorrectedMove@motorBStartDistance+3
  4163  0002CC  0E9A               	movlw	154
  4164  0002CE  6FA6               	movwf	errorCorrectedMove@correctionConstant& (0+255),b
  4165  0002D0  0E99               	movlw	153
  4166  0002D2  6FA7               	movwf	(errorCorrectedMove@correctionConstant+1)& (0+255),b
  4167  0002D4  0E99               	movlw	153
  4168  0002D6  6FA8               	movwf	(errorCorrectedMove@correctionConstant+2)& (0+255),b
  4169  0002D8  0E3F               	movlw	63
  4170  0002DA  6FA9               	movwf	(errorCorrectedMove@correctionConstant+3)& (0+255),b
  4171  0002DC  EC66  F013         	call	_errorCorrectedMove	;wreg free
  4172                           
  4173                           ;main.c: 935:                 if(motorADistance > 4*clicksPerM){
  4174  0002E0  0100               	movlb	0	; () banked
  4175  0002E2  BFDE               	btfsc	(_motorADistance+3)& (0+255),7,b	;volatile
  4176  0002E4  D323               	goto	l9888
  4177  0002E6  51DE               	movf	(_motorADistance+3)& (0+255),w,b	;volatile
  4178  0002E8  11DD               	iorwf	(_motorADistance+2)& (0+255),w,b	;volatile
  4179  0002EA  E106               	bnz	u11280
  4180  0002EC  0EA9               	movlw	169
  4181  0002EE  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4182  0002F0  0E1B               	movlw	27
  4183  0002F2  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4184  0002F4  A0D8               	btfss	status,0,c
  4185  0002F6  D31A               	goto	l9888
  4186  0002F8                     u11280:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;main.c: 936:                     currentOperationState = complete;
  4190  0002F8  0E06               	movlw	6
  4191  0002FA  D247               	goto	L14
  4192  0002FC                     l9718:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;main.c: 945:                 poleNumber++;
  4196  0002FC  0101               	movlb	1	; () banked
  4197  0002FE  4B59               	infsnz	doOperation@poleNumber& (0+255),f,b
  4198  000300  2B5A               	incf	(doOperation@poleNumber+1)& (0+255),f,b
  4199                           
  4200                           ; BSR set to: 1
  4201                           ;main.c: 948:                 tiresOnPole = tirePositioning(timeInOperation);
  4202  000302  C14C  F098         	movff	doOperation@timeInOperation,tirePositioning@maxOperationTime
  4203  000306  C14D  F099         	movff	doOperation@timeInOperation+1,tirePositioning@maxOperationTime+1
  4204  00030A  C14E  F09A         	movff	doOperation@timeInOperation+2,tirePositioning@maxOperationTime+2
  4205  00030E  C14F  F09B         	movff	doOperation@timeInOperation+3,tirePositioning@maxOperationTime+3
  4206  000312  EC41  F00D         	call	_tirePositioning	;wreg free
  4207  000316  C098  F157         	movff	?_tirePositioning,doOperation@tiresOnPole
  4208  00031A  C099  F158         	movff	?_tirePositioning+1,doOperation@tiresOnPole+1
  4209                           
  4210                           ;main.c: 960:                 distanceFromLastPole = motorADistance - distanceToPole;
  4211  00031E  0101               	movlb	1	; () banked
  4212  000320  513E               	movf	doOperation@distanceToPole& (0+255),w,b
  4213  000322  0100               	movlb	0	; () banked
  4214  000324  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  4215  000326  0101               	movlb	1	; () banked
  4216  000328  6F42               	movwf	doOperation@distanceFromLastPole& (0+255),b
  4217  00032A  513F               	movf	(doOperation@distanceToPole+1)& (0+255),w,b
  4218  00032C  0100               	movlb	0	; () banked
  4219  00032E  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  4220  000330  0101               	movlb	1	; () banked
  4221  000332  6F43               	movwf	(doOperation@distanceFromLastPole+1)& (0+255),b
  4222  000334  5140               	movf	(doOperation@distanceToPole+2)& (0+255),w,b
  4223  000336  0100               	movlb	0	; () banked
  4224  000338  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  4225  00033A  0101               	movlb	1	; () banked
  4226  00033C  6F44               	movwf	(doOperation@distanceFromLastPole+2)& (0+255),b
  4227  00033E  5141               	movf	(doOperation@distanceToPole+3)& (0+255),w,b
  4228  000340  0100               	movlb	0	; () banked
  4229  000342  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  4230  000344  0101               	movlb	1	; () banked
  4231  000346  6F45               	movwf	(doOperation@distanceFromLastPole+3)& (0+255),b
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;main.c: 961:                 distanceToPole = motorADistance;
  4235  000348  C0DB  F13E         	movff	_motorADistance,doOperation@distanceToPole	;volatile
  4236  00034C  C0DC  F13F         	movff	_motorADistance+1,doOperation@distanceToPole+1	;volatile
  4237  000350  C0DD  F140         	movff	_motorADistance+2,doOperation@distanceToPole+2	;volatile
  4238  000354  C0DE  F141         	movff	_motorADistance+3,doOperation@distanceToPole+3	;volatile
  4239                           
  4240                           ; BSR set to: 1
  4241                           ;main.c: 963:                 distanceFromLastPoleCM = (int)((double)distanceFromLastPol
      +                          e/clicksPerM*100);
  4242  000358  0E00               	movlw	0
  4243  00035A  6E31               	movwf	___flmul@a,c
  4244  00035C  0E00               	movlw	0
  4245  00035E  6E32               	movwf	___flmul@a+1,c
  4246  000360  0EC8               	movlw	200
  4247  000362  6E33               	movwf	___flmul@a+2,c
  4248  000364  0E42               	movlw	66
  4249  000366  6E34               	movwf	___flmul@a+3,c
  4250  000368  0E00               	movlw	0
  4251  00036A  6E18               	movwf	___fldiv@a,c
  4252  00036C  0E40               	movlw	64
  4253  00036E  6E19               	movwf	___fldiv@a+1,c
  4254  000370  0EDD               	movlw	221
  4255  000372  6E1A               	movwf	___fldiv@a+2,c
  4256  000374  0E44               	movlw	68
  4257  000376  6E1B               	movwf	___fldiv@a+3,c
  4258  000378  C142  F006         	movff	doOperation@distanceFromLastPole,___xxtofl@val
  4259  00037C  C143  F007         	movff	doOperation@distanceFromLastPole+1,___xxtofl@val+1
  4260  000380  C144  F008         	movff	doOperation@distanceFromLastPole+2,___xxtofl@val+2
  4261  000384  C145  F009         	movff	doOperation@distanceFromLastPole+3,___xxtofl@val+3
  4262  000388  0E01               	movlw	1
  4263  00038A  EC4D  F019         	call	___xxtofl
  4264  00038E  C006  F014         	movff	?___xxtofl,___fldiv@b
  4265  000392  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  4266  000396  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  4267  00039A  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  4268  00039E  EC22  F012         	call	___fldiv	;wreg free
  4269  0003A2  C014  F02D         	movff	?___fldiv,___flmul@b
  4270  0003A6  C015  F02E         	movff	?___fldiv+1,___flmul@b+1
  4271  0003AA  C016  F02F         	movff	?___fldiv+2,___flmul@b+2
  4272  0003AE  C017  F030         	movff	?___fldiv+3,___flmul@b+3
  4273  0003B2  ECF3  F00E         	call	___flmul	;wreg free
  4274  0003B6  C02D  F05E         	movff	?___flmul,___fltol@f1
  4275  0003BA  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  4276  0003BE  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  4277  0003C2  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  4278  0003C6  ECFD  F01D         	call	___fltol	;wreg free
  4279  0003CA  C05E  F13C         	movff	?___fltol,doOperation@distanceFromLastPoleCM
  4280  0003CE  C05F  F13D         	movff	?___fltol+1,doOperation@distanceFromLastPoleCM+1
  4281                           
  4282                           ;main.c: 964:                 distanceToPoleCM = (int)((double)distanceToPole/clicksPerM
      +                          *100);
  4283  0003D2  0E00               	movlw	0
  4284  0003D4  6E31               	movwf	___flmul@a,c
  4285  0003D6  0E00               	movlw	0
  4286  0003D8  6E32               	movwf	___flmul@a+1,c
  4287  0003DA  0EC8               	movlw	200
  4288  0003DC  6E33               	movwf	___flmul@a+2,c
  4289  0003DE  0E42               	movlw	66
  4290  0003E0  6E34               	movwf	___flmul@a+3,c
  4291  0003E2  0E00               	movlw	0
  4292  0003E4  6E18               	movwf	___fldiv@a,c
  4293  0003E6  0E40               	movlw	64
  4294  0003E8  6E19               	movwf	___fldiv@a+1,c
  4295  0003EA  0EDD               	movlw	221
  4296  0003EC  6E1A               	movwf	___fldiv@a+2,c
  4297  0003EE  0E44               	movlw	68
  4298  0003F0  6E1B               	movwf	___fldiv@a+3,c
  4299  0003F2  C13E  F006         	movff	doOperation@distanceToPole,___xxtofl@val
  4300  0003F6  C13F  F007         	movff	doOperation@distanceToPole+1,___xxtofl@val+1
  4301  0003FA  C140  F008         	movff	doOperation@distanceToPole+2,___xxtofl@val+2
  4302  0003FE  C141  F009         	movff	doOperation@distanceToPole+3,___xxtofl@val+3
  4303  000402  0E01               	movlw	1
  4304  000404  EC4D  F019         	call	___xxtofl
  4305  000408  C006  F014         	movff	?___xxtofl,___fldiv@b
  4306  00040C  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  4307  000410  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  4308  000414  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  4309  000418  EC22  F012         	call	___fldiv	;wreg free
  4310  00041C  C014  F02D         	movff	?___fldiv,___flmul@b
  4311  000420  C015  F02E         	movff	?___fldiv+1,___flmul@b+1
  4312  000424  C016  F02F         	movff	?___fldiv+2,___flmul@b+2
  4313  000428  C017  F030         	movff	?___fldiv+3,___flmul@b+3
  4314  00042C  ECF3  F00E         	call	___flmul	;wreg free
  4315  000430  C02D  F05E         	movff	?___flmul,___fltol@f1
  4316  000434  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  4317  000438  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  4318  00043C  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  4319  000440  ECFD  F01D         	call	___fltol	;wreg free
  4320  000444  C05E  F148         	movff	?___fltol,doOperation@distanceToPoleCM
  4321  000448  C05F  F149         	movff	?___fltol+1,doOperation@distanceToPoleCM+1
  4322                           
  4323                           ;main.c: 966:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4324  00044C  0E01               	movlw	1
  4325  00044E  EC4F  F024         	call	_lcdInst
  4326  000452  0E11               	movlw	17
  4327  000454  0100               	movlb	0	; () banked
  4328  000456  6FD3               	movwf	??_doOperation& (0+255),b
  4329  000458  0E3A               	movlw	58
  4330  00045A                     u12127:
  4331  00045A  2EE8               	decfsz	wreg,f,c
  4332  00045C  D7FE               	bra	u12127
  4333  00045E  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4334  000460  D7FC               	bra	u12127
  4335  000462  F000               	nop	
  4336                           
  4337                           ;main.c: 967:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000
      +                          .0)));};
  4338  000464  0E80               	movlw	128
  4339  000466  EC4F  F024         	call	_lcdInst
  4340  00046A  0E07               	movlw	7
  4341  00046C  0100               	movlb	0	; () banked
  4342  00046E  6FD3               	movwf	??_doOperation& (0+255),b
  4343  000470  0E7D               	movlw	125
  4344  000472                     u12137:
  4345  000472  2EE8               	decfsz	wreg,f,c
  4346  000474  D7FE               	bra	u12137
  4347  000476  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4348  000478  D7FC               	bra	u12137
  4349                           
  4350                           ;main.c: 968:                 printf("TIRE DROP");
  4351  00047A  0EAB               	movlw	low STR_25
  4352  00047C  0100               	movlb	0	; () banked
  4353  00047E  6F9D               	movwf	printf@fmt& (0+255),b
  4354  000480  0EFC               	movlw	high STR_25
  4355  000482  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4356  000484  EC94  F023         	call	_printf	;wreg free
  4357  000488  0EC0               	movlw	192
  4358  00048A  EC4F  F024         	call	_lcdInst
  4359                           
  4360                           ;main.c: 970:                 printf("%d on pole", tiresOnPole);
  4361  00048E  0E8C               	movlw	low STR_26
  4362  000490  0100               	movlb	0	; () banked
  4363  000492  6F9D               	movwf	printf@fmt& (0+255),b
  4364  000494  0EFC               	movlw	high STR_26
  4365  000496  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4366  000498  C157  F09F         	movff	doOperation@tiresOnPole,?_printf+2
  4367  00049C  C158  F0A0         	movff	doOperation@tiresOnPole+1,?_printf+3
  4368  0004A0  EC94  F023         	call	_printf	;wreg free
  4369                           
  4370                           ;main.c: 972:                 setMotorSpeeds(0, 1, 1, 0);
  4371  0004A4  0E00               	movlw	0
  4372  0004A6  0100               	movlb	0	; () banked
  4373  0004A8  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  4374  0004AA  0E00               	movlw	0
  4375  0004AC  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  4376  0004AE  0E01               	movlw	1
  4377  0004B0  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  4378  0004B2  0E01               	movlw	1
  4379  0004B4  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  4380  0004B6  0E00               	movlw	0
  4381  0004B8  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  4382  0004BA  0E00               	movlw	0
  4383  0004BC  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  4384  0004BE  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  4385                           
  4386                           ;main.c: 978:                 if (tiresOnPole == 2){
  4387  0004C2  0E02               	movlw	2
  4388  0004C4  0101               	movlb	1	; () banked
  4389  0004C6  1957               	xorwf	doOperation@tiresOnPole& (0+255),w,b
  4390  0004C8  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4391  0004CA  A4D8               	btfss	status,2,c
  4392  0004CC  D004               	goto	l9750
  4393  0004CE                     u11290:
  4394                           
  4395                           ; BSR set to: 1
  4396                           ;main.c: 979:                     tiresToDrop = 0;
  4397  0004CE  0E00               	movlw	0
  4398  0004D0  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4399  0004D2  0E00               	movlw	0
  4400  0004D4  D00F               	goto	L10
  4401  0004D6                     l9750:
  4402                           
  4403                           ; BSR set to: 1
  4404  0004D6  0559               	decf	doOperation@poleNumber& (0+255),w,b
  4405  0004D8  115A               	iorwf	(doOperation@poleNumber+1)& (0+255),w,b
  4406  0004DA  A4D8               	btfss	status,2,c
  4407  0004DC  D00D               	goto	l9758
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;main.c: 981:                     if (tiresOnPole == 1){
  4411  0004DE  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  4412  0004E0  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4413  0004E2  A4D8               	btfss	status,2,c
  4414  0004E4  D004               	goto	l9756
  4415  0004E6                     u11310:
  4416                           
  4417                           ; BSR set to: 1
  4418                           ;main.c: 982:                         tiresToDrop = 1;
  4419  0004E6  0E00               	movlw	0
  4420  0004E8  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4421  0004EA  0E01               	movlw	1
  4422  0004EC  D003               	goto	L10
  4423  0004EE                     l9756:
  4424                           
  4425                           ; BSR set to: 1
  4426                           ;main.c: 984:                         tiresToDrop = 2;
  4427  0004EE  0E00               	movlw	0
  4428  0004F0  6F53               	movwf	(doOperation@tiresToDrop+1)& (0+255),b
  4429  0004F2  0E02               	movlw	2
  4430  0004F4                     L10:
  4431  0004F4  6F52               	movwf	doOperation@tiresToDrop& (0+255),b
  4432  0004F6  D02B               	goto	l9772
  4433  0004F8                     l9758:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;main.c: 987:                     if (distanceFromLastPole < 0.3*clicksPerM){
  4437  0004F8  C142  F006         	movff	doOperation@distanceFromLastPole,___xxtofl@val
  4438  0004FC  C143  F007         	movff	doOperation@distanceFromLastPole+1,___xxtofl@val+1
  4439  000500  C144  F008         	movff	doOperation@distanceFromLastPole+2,___xxtofl@val+2
  4440  000504  C145  F009         	movff	doOperation@distanceFromLastPole+3,___xxtofl@val+3
  4441  000508  0E01               	movlw	1
  4442  00050A  EC4D  F019         	call	___xxtofl
  4443  00050E  C006  F014         	movff	?___xxtofl,___flge@ff1
  4444  000512  C007  F015         	movff	?___xxtofl+1,___flge@ff1+1
  4445  000516  C008  F016         	movff	?___xxtofl+2,___flge@ff1+2
  4446  00051A  C009  F017         	movff	?___xxtofl+3,___flge@ff1+3
  4447  00051E  0E00               	movlw	0
  4448  000520  6E18               	movwf	___flge@ff2,c
  4449  000522  0EC0               	movlw	192
  4450  000524  6E19               	movwf	___flge@ff2+1,c
  4451  000526  0E04               	movlw	4
  4452  000528  6E1A               	movwf	___flge@ff2+2,c
  4453  00052A  0E44               	movlw	68
  4454  00052C  6E1B               	movwf	___flge@ff2+3,c
  4455  00052E  ECC8  F01C         	call	___flge	;wreg free
  4456  000532  B0D8               	btfsc	status,0,c
  4457  000534  D006               	goto	l9766
  4458                           
  4459                           ;main.c: 988:                         if (tiresOnPole == 1){
  4460  000536  0101               	movlb	1	; () banked
  4461  000538  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  4462  00053A  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4463  00053C  B4D8               	btfsc	status,2,c
  4464  00053E  D7C7               	goto	u11290
  4465  000540  D7D2               	goto	u11310
  4466  000542                     l9766:
  4467                           
  4468                           ;main.c: 994:                         if (tiresOnPole == 1){
  4469  000542  0101               	movlb	1	; () banked
  4470  000544  0557               	decf	doOperation@tiresOnPole& (0+255),w,b
  4471  000546  1158               	iorwf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4472  000548  B4D8               	btfsc	status,2,c
  4473  00054A  D7CD               	goto	u11310
  4474  00054C  D7D0               	goto	l9756
  4475  00054E                     l9772:
  4476                           
  4477                           ; BSR set to: 1
  4478  00054E  0E90               	movlw	144
  4479  000550  EC4F  F024         	call	_lcdInst
  4480                           
  4481                           ;main.c: 1003:                 printf("%d dropping", tiresToDrop);
  4482  000554  0E75               	movlw	low STR_27
  4483  000556  0100               	movlb	0	; () banked
  4484  000558  6F9D               	movwf	printf@fmt& (0+255),b
  4485  00055A  0EFC               	movlw	high STR_27
  4486  00055C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4487  00055E  C152  F09F         	movff	doOperation@tiresToDrop,?_printf+2
  4488  000562  C153  F0A0         	movff	doOperation@tiresToDrop+1,?_printf+3
  4489  000566  EC94  F023         	call	_printf	;wreg free
  4490  00056A  0ED0               	movlw	208
  4491  00056C  EC4F  F024         	call	_lcdInst
  4492                           
  4493                           ;main.c: 1006:                 printf("%d cm from pole", distanceFromLastPoleCM );
  4494  000570  0ECC               	movlw	low STR_28
  4495  000572  0100               	movlb	0	; () banked
  4496  000574  6F9D               	movwf	printf@fmt& (0+255),b
  4497  000576  0EFB               	movlw	high STR_28
  4498  000578  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4499  00057A  C13C  F09F         	movff	doOperation@distanceFromLastPoleCM,?_printf+2
  4500  00057E  C13D  F0A0         	movff	doOperation@distanceFromLastPoleCM+1,?_printf+3
  4501  000582  EC94  F023         	call	_printf	;wreg free
  4502                           
  4503                           ;main.c: 1010:     if (tiresToDrop > 0){
  4504  000586  0101               	movlb	1	; () banked
  4505  000588  BF53               	btfsc	(doOperation@tiresToDrop+1)& (0+255),7,b
  4506  00058A  D009               	goto	l9786
  4507  00058C  5153               	movf	(doOperation@tiresToDrop+1)& (0+255),w,b
  4508  00058E  E103               	bnz	u11350
  4509  000590  0552               	decf	doOperation@tiresToDrop& (0+255),w,b
  4510  000592  A0D8               	btfss	status,0,c
  4511  000594  D004               	goto	l9786
  4512  000596                     u11350:
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;main.c: 1011:                     sendArduinoTireDropRequest();
  4516  000596  ECEF  F023         	call	_sendArduinoTireDropRequest	;wreg free
  4517                           
  4518                           ;main.c: 1012:                     currentOperationState = tireDrop;
  4519  00059A  0E02               	movlw	2
  4520  00059C  D0F6               	goto	L14
  4521  00059E                     l9786:
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;main.c: 1014:                     currentOperationState = noTireDrop;
  4525  00059E  0E03               	movlw	3
  4526  0005A0  D0F5               	goto	L13
  4527  0005A2                     l9788:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 1028:                     isDoneDrop = requestIsTireDropDone();
  4531  0005A2  EC55  F023         	call	_requestIsTireDropDone	;wreg free
  4532  0005A6  0101               	movlb	1	; () banked
  4533  0005A8  6F39               	movwf	doOperation@isDoneDrop& (0+255),b
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;main.c: 1030:                     if (isDoneDrop){
  4537  0005AA  5139               	movf	doOperation@isDoneDrop& (0+255),w,b
  4538  0005AC  B4D8               	btfsc	status,2,c
  4539  0005AE  D1BE               	goto	l9888
  4540                           
  4541                           ; BSR set to: 1
  4542                           ;main.c: 1031:                         tiresToDrop -- ;
  4543  0005B0  0752               	decf	doOperation@tiresToDrop& (0+255),f,b
  4544  0005B2  A0D8               	btfss	status,0,c
  4545  0005B4  0753               	decf	(doOperation@tiresToDrop+1)& (0+255),f,b
  4546                           
  4547                           ;main.c: 1032:                         tiresDeployedOnPole++;
  4548  0005B6  4B55               	infsnz	doOperation@tiresDeployedOnPole& (0+255),f,b
  4549  0005B8  2B56               	incf	(doOperation@tiresDeployedOnPole+1)& (0+255),f,b
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;main.c: 1033:                         if (tiresToDrop == 0){
  4553  0005BA  5152               	movf	doOperation@tiresToDrop& (0+255),w,b
  4554  0005BC  1153               	iorwf	(doOperation@tiresToDrop+1)& (0+255),w,b
  4555  0005BE  A4D8               	btfss	status,2,c
  4556  0005C0  D067               	goto	l9814
  4557                           
  4558                           ; BSR set to: 1
  4559                           ;main.c: 1034:                            currentOperationState = leavePole;
  4560  0005C2  0E07               	movlw	7
  4561  0005C4  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  4562                           
  4563                           ; BSR set to: 1
  4564                           ;main.c: 1036:                             totalTiresSupplied += tiresDeployedOnPole;
  4565  0005C6  5155               	movf	doOperation@tiresDeployedOnPole& (0+255),w,b
  4566  0005C8  2746               	addwf	doOperation@totalTiresSupplied& (0+255),f,b
  4567  0005CA  5156               	movf	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  4568  0005CC  2347               	addwfc	(doOperation@totalTiresSupplied+1)& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 1
  4571                           ;main.c: 1041:                             logs[0][1] = totalTiresSupplied;
  4572  0005CE  C146  F195         	movff	doOperation@totalTiresSupplied,_logs+2
  4573  0005D2  C147  F196         	movff	doOperation@totalTiresSupplied+1,_logs+3
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;main.c: 1042:                             logs[0][2] = poleNumber;
  4577  0005D6  C159  F197         	movff	doOperation@poleNumber,_logs+4
  4578  0005DA  C15A  F198         	movff	doOperation@poleNumber+1,_logs+5
  4579                           
  4580                           ; BSR set to: 1
  4581                           ;main.c: 1043:                             logs[0][3+(poleNumber-1)*3] = tiresDeployedOn
      +                          Pole;
  4582  0005DE  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4583  0005E2  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4584  0005E6  0E00               	movlw	0
  4585  0005E8  6E09               	movwf	___wmul@multiplicand+1,c
  4586  0005EA  0E03               	movlw	3
  4587  0005EC  6E08               	movwf	___wmul@multiplicand,c
  4588  0005EE  ECA8  F023         	call	___wmul	;wreg free
  4589  0005F2  90D8               	bcf	status,0,c
  4590  0005F4  3606               	rlcf	?___wmul,f,c
  4591  0005F6  3607               	rlcf	?___wmul+1,f,c
  4592  0005F8  0E93               	movlw	low _logs
  4593  0005FA  2406               	addwf	?___wmul,w,c
  4594  0005FC  6ED9               	movwf	fsr2l,c
  4595  0005FE  0E01               	movlw	high _logs
  4596  000600  2007               	addwfc	?___wmul+1,w,c
  4597  000602  6EDA               	movwf	fsr2h,c
  4598  000604  C155  FFDE         	movff	doOperation@tiresDeployedOnPole,postinc2
  4599  000608  C156  FFDD         	movff	doOperation@tiresDeployedOnPole+1,postdec2
  4600                           
  4601                           ;main.c: 1044:                             logs[0][4+(poleNumber-1)*3] = tiresDeployedOn
      +                          Pole + tiresOnPole;
  4602  00060C  0101               	movlb	1	; () banked
  4603  00060E  5157               	movf	doOperation@tiresOnPole& (0+255),w,b
  4604  000610  2555               	addwf	doOperation@tiresDeployedOnPole& (0+255),w,b
  4605  000612  0100               	movlb	0	; () banked
  4606  000614  6FD3               	movwf	??_doOperation& (0+255),b
  4607  000616  0101               	movlb	1	; () banked
  4608  000618  5158               	movf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4609  00061A  2156               	addwfc	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  4610  00061C  0100               	movlb	0	; () banked
  4611  00061E  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  4612  000620  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4613  000624  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4614  000628  0E00               	movlw	0
  4615  00062A  6E09               	movwf	___wmul@multiplicand+1,c
  4616  00062C  0E03               	movlw	3
  4617  00062E  6E08               	movwf	___wmul@multiplicand,c
  4618  000630  ECA8  F023         	call	___wmul	;wreg free
  4619  000634  90D8               	bcf	status,0,c
  4620  000636  3606               	rlcf	?___wmul,f,c
  4621  000638  3607               	rlcf	?___wmul+1,f,c
  4622  00063A  0E95               	movlw	low (_logs+2)
  4623  00063C  2406               	addwf	?___wmul,w,c
  4624  00063E  6ED9               	movwf	fsr2l,c
  4625  000640  0E01               	movlw	high (_logs+2)
  4626  000642  2007               	addwfc	?___wmul+1,w,c
  4627  000644  6EDA               	movwf	fsr2h,c
  4628  000646  C0D3  FFDE         	movff	??_doOperation,postinc2
  4629  00064A  C0D4  FFDD         	movff	??_doOperation+1,postdec2
  4630                           
  4631                           ;main.c: 1045:                             logs[0][5+(poleNumber-1)*3] = distanceToPoleC
      +                          M;
  4632  00064E  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4633  000652  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4634  000656  0E00               	movlw	0
  4635  000658  6E09               	movwf	___wmul@multiplicand+1,c
  4636  00065A  0E03               	movlw	3
  4637  00065C  6E08               	movwf	___wmul@multiplicand,c
  4638  00065E  ECA8  F023         	call	___wmul	;wreg free
  4639  000662  90D8               	bcf	status,0,c
  4640  000664  3606               	rlcf	?___wmul,f,c
  4641  000666  3607               	rlcf	?___wmul+1,f,c
  4642  000668  0E97               	movlw	low (_logs+4)
  4643  00066A  2406               	addwf	?___wmul,w,c
  4644  00066C  6ED9               	movwf	fsr2l,c
  4645  00066E  0E01               	movlw	high (_logs+4)
  4646  000670  2007               	addwfc	?___wmul+1,w,c
  4647  000672  6EDA               	movwf	fsr2h,c
  4648  000674  C148  FFDE         	movff	doOperation@distanceToPoleCM,postinc2
  4649  000678  C149  FFDD         	movff	doOperation@distanceToPoleCM+1,postdec2
  4650                           
  4651                           ;main.c: 1047:                             tiresOnPole = 0;
  4652  00067C  0E00               	movlw	0
  4653  00067E  0101               	movlb	1	; () banked
  4654  000680  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  4655  000682  0E00               	movlw	0
  4656  000684  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;main.c: 1048:                             tiresDeployedOnPole = 0;
  4660  000686  0E00               	movlw	0
  4661  000688  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  4662  00068A  0E00               	movlw	0
  4663  00068C  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  4664                           
  4665                           ;main.c: 1050:                         } else {
  4666  00068E  D14E               	goto	l9888
  4667  000690                     l9814:
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;main.c: 1052:                             sendArduinoTireDropRequest();
  4671  000690  ECEF  F023         	call	_sendArduinoTireDropRequest	;wreg free
  4672  000694  D14B               	goto	l9888
  4673  000696                     l9816:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;main.c: 1060:                 opDelay(4000, timeInOperation);
  4677  000696  0E0F               	movlw	15
  4678  000698  6E07               	movwf	opDelay@millis+1,c
  4679  00069A  0EA0               	movlw	160
  4680  00069C  6E06               	movwf	opDelay@millis,c
  4681  00069E  C14C  F008         	movff	doOperation@timeInOperation,opDelay@maxOperationTime
  4682  0006A2  C14D  F009         	movff	doOperation@timeInOperation+1,opDelay@maxOperationTime+1
  4683  0006A6  C14E  F00A         	movff	doOperation@timeInOperation+2,opDelay@maxOperationTime+2
  4684  0006AA  C14F  F00B         	movff	doOperation@timeInOperation+3,opDelay@maxOperationTime+3
  4685  0006AE  ECE7  F020         	call	_opDelay	;wreg free
  4686                           
  4687                           ;main.c: 1061:                     tiresDeployedOnPole = 0;
  4688  0006B2  0E00               	movlw	0
  4689  0006B4  0101               	movlb	1	; () banked
  4690  0006B6  6F56               	movwf	(doOperation@tiresDeployedOnPole+1)& (0+255),b
  4691  0006B8  0E00               	movlw	0
  4692  0006BA  6F55               	movwf	doOperation@tiresDeployedOnPole& (0+255),b
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;main.c: 1062:                     tiresOnPoleAfterOp = tiresOnPole;
  4696  0006BC  C157  F12B         	movff	doOperation@tiresOnPole,doOperation@tiresOnPoleAfterOp
  4697  0006C0  C158  F12C         	movff	doOperation@tiresOnPole+1,doOperation@tiresOnPoleAfterOp+1
  4698                           
  4699                           ; BSR set to: 1
  4700                           ;main.c: 1064:                     logs[0][1] = totalTiresSupplied;
  4701  0006C4  C146  F195         	movff	doOperation@totalTiresSupplied,_logs+2
  4702  0006C8  C147  F196         	movff	doOperation@totalTiresSupplied+1,_logs+3
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;main.c: 1065:                     logs[0][2] = poleNumber;
  4706  0006CC  C159  F197         	movff	doOperation@poleNumber,_logs+4
  4707  0006D0  C15A  F198         	movff	doOperation@poleNumber+1,_logs+5
  4708                           
  4709                           ; BSR set to: 1
  4710                           ;main.c: 1066:                     logs[0][3+(poleNumber-1)*3] = tiresDeployedOnPole;
  4711  0006D4  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4712  0006D8  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4713  0006DC  0E00               	movlw	0
  4714  0006DE  6E09               	movwf	___wmul@multiplicand+1,c
  4715  0006E0  0E03               	movlw	3
  4716  0006E2  6E08               	movwf	___wmul@multiplicand,c
  4717  0006E4  ECA8  F023         	call	___wmul	;wreg free
  4718  0006E8  90D8               	bcf	status,0,c
  4719  0006EA  3606               	rlcf	?___wmul,f,c
  4720  0006EC  3607               	rlcf	?___wmul+1,f,c
  4721  0006EE  0E93               	movlw	low _logs
  4722  0006F0  2406               	addwf	?___wmul,w,c
  4723  0006F2  6ED9               	movwf	fsr2l,c
  4724  0006F4  0E01               	movlw	high _logs
  4725  0006F6  2007               	addwfc	?___wmul+1,w,c
  4726  0006F8  6EDA               	movwf	fsr2h,c
  4727  0006FA  C155  FFDE         	movff	doOperation@tiresDeployedOnPole,postinc2
  4728  0006FE  C156  FFDD         	movff	doOperation@tiresDeployedOnPole+1,postdec2
  4729                           
  4730                           ;main.c: 1067:                     logs[0][4+(poleNumber-1)*3] = tiresDeployedOnPole + t
      +                          iresOnPole;
  4731  000702  0101               	movlb	1	; () banked
  4732  000704  5157               	movf	doOperation@tiresOnPole& (0+255),w,b
  4733  000706  2555               	addwf	doOperation@tiresDeployedOnPole& (0+255),w,b
  4734  000708  0100               	movlb	0	; () banked
  4735  00070A  6FD3               	movwf	??_doOperation& (0+255),b
  4736  00070C  0101               	movlb	1	; () banked
  4737  00070E  5158               	movf	(doOperation@tiresOnPole+1)& (0+255),w,b
  4738  000710  2156               	addwfc	(doOperation@tiresDeployedOnPole+1)& (0+255),w,b
  4739  000712  0100               	movlb	0	; () banked
  4740  000714  6FD4               	movwf	(??_doOperation+1)& (0+255),b
  4741  000716  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4742  00071A  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4743  00071E  0E00               	movlw	0
  4744  000720  6E09               	movwf	___wmul@multiplicand+1,c
  4745  000722  0E03               	movlw	3
  4746  000724  6E08               	movwf	___wmul@multiplicand,c
  4747  000726  ECA8  F023         	call	___wmul	;wreg free
  4748  00072A  90D8               	bcf	status,0,c
  4749  00072C  3606               	rlcf	?___wmul,f,c
  4750  00072E  3607               	rlcf	?___wmul+1,f,c
  4751  000730  0E95               	movlw	low (_logs+2)
  4752  000732  2406               	addwf	?___wmul,w,c
  4753  000734  6ED9               	movwf	fsr2l,c
  4754  000736  0E01               	movlw	high (_logs+2)
  4755  000738  2007               	addwfc	?___wmul+1,w,c
  4756  00073A  6EDA               	movwf	fsr2h,c
  4757  00073C  C0D3  FFDE         	movff	??_doOperation,postinc2
  4758  000740  C0D4  FFDD         	movff	??_doOperation+1,postdec2
  4759                           
  4760                           ;main.c: 1068:                     logs[0][5+(poleNumber-1)*3] = distanceToPoleCM;
  4761  000744  C159  F006         	movff	doOperation@poleNumber,___wmul@multiplier
  4762  000748  C15A  F007         	movff	doOperation@poleNumber+1,___wmul@multiplier+1
  4763  00074C  0E00               	movlw	0
  4764  00074E  6E09               	movwf	___wmul@multiplicand+1,c
  4765  000750  0E03               	movlw	3
  4766  000752  6E08               	movwf	___wmul@multiplicand,c
  4767  000754  ECA8  F023         	call	___wmul	;wreg free
  4768  000758  90D8               	bcf	status,0,c
  4769  00075A  3606               	rlcf	?___wmul,f,c
  4770  00075C  3607               	rlcf	?___wmul+1,f,c
  4771  00075E  0E97               	movlw	low (_logs+4)
  4772  000760  2406               	addwf	?___wmul,w,c
  4773  000762  6ED9               	movwf	fsr2l,c
  4774  000764  0E01               	movlw	high (_logs+4)
  4775  000766  2007               	addwfc	?___wmul+1,w,c
  4776  000768  6EDA               	movwf	fsr2h,c
  4777  00076A  C148  FFDE         	movff	doOperation@distanceToPoleCM,postinc2
  4778  00076E  C149  FFDD         	movff	doOperation@distanceToPoleCM+1,postdec2
  4779                           
  4780                           ;main.c: 1071:                     tiresOnPole = 0;
  4781  000772  0E00               	movlw	0
  4782  000774  0101               	movlb	1	; () banked
  4783  000776  6F58               	movwf	(doOperation@tiresOnPole+1)& (0+255),b
  4784  000778  0E00               	movlw	0
  4785  00077A  6F57               	movwf	doOperation@tiresOnPole& (0+255),b
  4786                           
  4787                           ; BSR set to: 1
  4788                           ;main.c: 1072:                     tiresOnPoleAfterOp = 0;
  4789  00077C  0E00               	movlw	0
  4790  00077E  6F2C               	movwf	(doOperation@tiresOnPoleAfterOp+1)& (0+255),b
  4791  000780  0E00               	movlw	0
  4792  000782  6F2B               	movwf	doOperation@tiresOnPoleAfterOp& (0+255),b
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;main.c: 1073:                     currentOperationState = leavePole;
  4796  000784  0E07               	movlw	7
  4797  000786  D002               	goto	L13
  4798  000788                     l9838:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;main.c: 1077:                 currentOperationState = moveForward;
  4802  000788  0E00               	movlw	0
  4803  00078A                     L14:
  4804  00078A  0101               	movlb	1	; () banked
  4805  00078C                     L13:
  4806  00078C  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  4807                           
  4808                           ;main.c: 1078:     break;
  4809  00078E  D0CE               	goto	l9888
  4810  000790                     l9840:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;main.c: 1081:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4814  000790  0E01               	movlw	1
  4815  000792  EC4F  F024         	call	_lcdInst
  4816  000796  0E11               	movlw	17
  4817  000798  0100               	movlb	0	; () banked
  4818  00079A  6FD3               	movwf	??_doOperation& (0+255),b
  4819  00079C  0E3A               	movlw	58
  4820  00079E                     u12147:
  4821  00079E  2EE8               	decfsz	wreg,f,c
  4822  0007A0  D7FE               	bra	u12147
  4823  0007A2  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4824  0007A4  D7FC               	bra	u12147
  4825  0007A6  F000               	nop	
  4826                           
  4827                           ;main.c: 1082:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/400
      +                          0.0)));};
  4828  0007A8  0E80               	movlw	128
  4829  0007AA  EC4F  F024         	call	_lcdInst
  4830  0007AE  0E07               	movlw	7
  4831  0007B0  0100               	movlb	0	; () banked
  4832  0007B2  6FD3               	movwf	??_doOperation& (0+255),b
  4833  0007B4  0E7D               	movlw	125
  4834  0007B6                     u12157:
  4835  0007B6  2EE8               	decfsz	wreg,f,c
  4836  0007B8  D7FE               	bra	u12157
  4837  0007BA  2FD3               	decfsz	??_doOperation& (0+255),f,b
  4838  0007BC  D7FC               	bra	u12157
  4839                           
  4840                           ;main.c: 1083:                 printf("Leaving Pole");
  4841  0007BE  0E68               	movlw	low STR_29
  4842  0007C0  0100               	movlb	0	; () banked
  4843  0007C2  6F9D               	movwf	printf@fmt& (0+255),b
  4844  0007C4  0EFC               	movlw	high STR_29
  4845  0007C6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  4846  0007C8  EC94  F023         	call	_printf	;wreg free
  4847                           
  4848                           ;main.c: 1084:                 long startedDistA = motorADistance;
  4849  0007CC  C0DB  F108         	movff	_motorADistance,doOperation@startedDistA	;volatile
  4850  0007D0  C0DC  F109         	movff	_motorADistance+1,doOperation@startedDistA+1	;volatile
  4851  0007D4  C0DD  F10A         	movff	_motorADistance+2,doOperation@startedDistA+2	;volatile
  4852  0007D8  C0DE  F10B         	movff	_motorADistance+3,doOperation@startedDistA+3	;volatile
  4853                           
  4854                           ;main.c: 1085:                 long startedDistB = motorBDistance;
  4855  0007DC  C0D7  F10C         	movff	_motorBDistance,doOperation@startedDistB	;volatile
  4856  0007E0  C0D8  F10D         	movff	_motorBDistance+1,doOperation@startedDistB+1	;volatile
  4857  0007E4  C0D9  F10E         	movff	_motorBDistance+2,doOperation@startedDistB+2	;volatile
  4858  0007E8  C0DA  F10F         	movff	_motorBDistance+3,doOperation@startedDistB+3	;volatile
  4859                           
  4860                           ;main.c: 1089:                 opErrorCorrectionDegrees(90, 1, 0.1, 180, timeInOperation
      +                          );
  4861  0007EC  0E00               	movlw	0
  4862  0007EE  0100               	movlb	0	; () banked
  4863  0007F0  6FB3               	movwf	(opErrorCorrectionDegrees@goalSpeed+1)& (0+255),b
  4864  0007F2  0E5A               	movlw	90
  4865  0007F4  6FB2               	movwf	opErrorCorrectionDegrees@goalSpeed& (0+255),b
  4866  0007F6  0E00               	movlw	0
  4867  0007F8  6FB5               	movwf	(opErrorCorrectionDegrees@turnRatio+1)& (0+255),b
  4868  0007FA  0E01               	movlw	1
  4869  0007FC  6FB4               	movwf	opErrorCorrectionDegrees@turnRatio& (0+255),b
  4870  0007FE  0ECD               	movlw	205
  4871  000800  6FB6               	movwf	opErrorCorrectionDegrees@correctionConstant& (0+255),b
  4872  000802  0ECC               	movlw	204
  4873  000804  6FB7               	movwf	(opErrorCorrectionDegrees@correctionConstant+1)& (0+255),b
  4874  000806  0ECC               	movlw	204
  4875  000808  6FB8               	movwf	(opErrorCorrectionDegrees@correctionConstant+2)& (0+255),b
  4876  00080A  0E3D               	movlw	61
  4877  00080C  6FB9               	movwf	(opErrorCorrectionDegrees@correctionConstant+3)& (0+255),b
  4878  00080E  0EB4               	movlw	180
  4879  000810  6FBA               	movwf	opErrorCorrectionDegrees@distanceDegrees& (0+255),b
  4880  000812  0E00               	movlw	0
  4881  000814  6FBB               	movwf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),b
  4882  000816  0E00               	movlw	0
  4883  000818  6FBC               	movwf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),b
  4884  00081A  0E00               	movlw	0
  4885  00081C  6FBD               	movwf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),b
  4886  00081E  C14C  F0BE         	movff	doOperation@timeInOperation,opErrorCorrectionDegrees@maxOperationTime
  4887  000822  C14D  F0BF         	movff	doOperation@timeInOperation+1,opErrorCorrectionDegrees@maxOperationTime+1
  4888  000826  C14E  F0C0         	movff	doOperation@timeInOperation+2,opErrorCorrectionDegrees@maxOperationTime+2
  4889  00082A  C14F  F0C1         	movff	doOperation@timeInOperation+3,opErrorCorrectionDegrees@maxOperationTime+3
  4890  00082E  EC51  F01C         	call	_opErrorCorrectionDegrees	;wreg free
  4891                           
  4892                           ;main.c: 1096:                 motorAStartDistance = 0ll;
  4893  000832  0E00               	movlw	0
  4894  000834  0101               	movlb	1	; () banked
  4895  000836  6F31               	movwf	doOperation@motorAStartDistance& (0+255),b
  4896  000838  0E00               	movlw	0
  4897  00083A  6F32               	movwf	(doOperation@motorAStartDistance+1)& (0+255),b
  4898  00083C  0E00               	movlw	0
  4899  00083E  6F33               	movwf	(doOperation@motorAStartDistance+2)& (0+255),b
  4900  000840  0E00               	movlw	0
  4901  000842  6F34               	movwf	(doOperation@motorAStartDistance+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;main.c: 1097:                 motorBStartDistance = 0ll;
  4905  000844  0E00               	movlw	0
  4906  000846  6F35               	movwf	doOperation@motorBStartDistance& (0+255),b
  4907  000848  0E00               	movlw	0
  4908  00084A  6F36               	movwf	(doOperation@motorBStartDistance+1)& (0+255),b
  4909  00084C  0E00               	movlw	0
  4910  00084E  6F37               	movwf	(doOperation@motorBStartDistance+2)& (0+255),b
  4911  000850  0E00               	movlw	0
  4912  000852  6F38               	movwf	(doOperation@motorBStartDistance+3)& (0+255),b
  4913                           
  4914                           ; BSR set to: 1
  4915                           ;main.c: 1098:                 motorStartTime = millisecondsMeasured;
  4916  000854  C074  F122         	movff	_millisecondsMeasured,doOperation@motorStartTime	;volatile
  4917  000858  C075  F123         	movff	_millisecondsMeasured+1,doOperation@motorStartTime+1	;volatile
  4918  00085C  C076  F124         	movff	_millisecondsMeasured+2,doOperation@motorStartTime+2	;volatile
  4919  000860  C077  F125         	movff	_millisecondsMeasured+3,doOperation@motorStartTime+3	;volatile
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;main.c: 1099:                 currentOperationState = moveForward;
  4923  000864  0E00               	movlw	0
  4924  000866  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;main.c: 1102:                 topLaserState = PORTBbits.RB4;
  4928  000868  A881               	btfss	3969,4,c	;volatile
  4929  00086A  D002               	goto	u11380
  4930  00086C  0E01               	movlw	1
  4931  00086E  D001               	goto	u11386
  4932  000870                     u11380:
  4933  000870  0E00               	movlw	0
  4934  000872                     u11386:
  4935  000872  6F54               	movwf	doOperation@topLaserState& (0+255),b
  4936                           
  4937                           ; BSR set to: 1
  4938                           ;main.c: 1103:                 topLaserStatePrev = PORTBbits.RB4;
  4939  000874  A881               	btfss	3969,4,c	;volatile
  4940  000876  D002               	goto	u11390
  4941  000878  0E01               	movlw	1
  4942  00087A  D001               	goto	u11396
  4943  00087C                     u11390:
  4944  00087C  0E00               	movlw	0
  4945  00087E                     u11396:
  4946  00087E  6F4A               	movwf	doOperation@topLaserStatePrev& (0+255),b
  4947                           
  4948                           ; BSR set to: 1
  4949                           ;main.c: 1104:                 bottomLaserState = PORTBbits.RB5;
  4950  000880  AA81               	btfss	3969,5,c	;volatile
  4951  000882  D002               	goto	u11400
  4952  000884  0E01               	movlw	1
  4953  000886  D001               	goto	u11406
  4954  000888                     u11400:
  4955  000888  0E00               	movlw	0
  4956  00088A                     u11406:
  4957  00088A  6F50               	movwf	doOperation@bottomLaserState& (0+255),b
  4958                           
  4959                           ; BSR set to: 1
  4960                           ;main.c: 1105:                 bottomLaserStatePrev = PORTBbits.RB5;
  4961  00088C  AA81               	btfss	3969,5,c	;volatile
  4962  00088E  D002               	goto	u11410
  4963  000890  0E01               	movlw	1
  4964  000892  D001               	goto	u11416
  4965  000894                     u11410:
  4966  000894  0E00               	movlw	0
  4967  000896                     u11416:
  4968  000896  6F4B               	movwf	doOperation@bottomLaserStatePrev& (0+255),b
  4969                           
  4970                           ;main.c: 1107:                 break;
  4971  000898  D049               	goto	l9888
  4972  00089A                     l9872:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;main.c: 1113:                 setMotorSpeeds(0, 1, 1, 0);
  4976  00089A  0E00               	movlw	0
  4977  00089C  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  4978  00089E  0E00               	movlw	0
  4979  0008A0  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  4980  0008A2  0E01               	movlw	1
  4981  0008A4  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  4982  0008A6  0E01               	movlw	1
  4983  0008A8  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  4984  0008AA  0E00               	movlw	0
  4985  0008AC  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  4986  0008AE  0E00               	movlw	0
  4987  0008B0  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  4988  0008B2  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  4989                           
  4990                           ;main.c: 1116:                 sendArduinoAbortOperationMessage();
  4991  0008B6  EC00  F024         	call	_sendArduinoAbortOperationMessage	;wreg free
  4992                           
  4993                           ;main.c: 1119:                 logs[0][0] = (int)(millisecondsMeasured/1000);
  4994  0008BA  C074  F006         	movff	_millisecondsMeasured,___lldiv@dividend	;volatile
  4995  0008BE  C075  F007         	movff	_millisecondsMeasured+1,___lldiv@dividend+1	;volatile
  4996  0008C2  C076  F008         	movff	_millisecondsMeasured+2,___lldiv@dividend+2	;volatile
  4997  0008C6  C077  F009         	movff	_millisecondsMeasured+3,___lldiv@dividend+3	;volatile
  4998  0008CA  0EE8               	movlw	232
  4999  0008CC  6E0A               	movwf	___lldiv@divisor,c
  5000  0008CE  0E03               	movlw	3
  5001  0008D0  6E0B               	movwf	___lldiv@divisor+1,c
  5002  0008D2  0E00               	movlw	0
  5003  0008D4  6E0C               	movwf	___lldiv@divisor+2,c
  5004  0008D6  0E00               	movlw	0
  5005  0008D8  6E0D               	movwf	___lldiv@divisor+3,c
  5006  0008DA  EC9D  F01F         	call	___lldiv	;wreg free
  5007  0008DE  C006  F193         	movff	?___lldiv,_logs
  5008  0008E2  C007  F194         	movff	?___lldiv+1,_logs+1
  5009                           
  5010                           ;main.c: 1129:                 LATAbits.LATA4 = 0;
  5011  0008E6  9889               	bcf	3977,4,c	;volatile
  5012  0008E8  0012               	return	
  5013  0008EA                     l9886:
  5014                           
  5015                           ; BSR set to: 1
  5016  0008EA  5151               	movf	doOperation@currentOperationState& (0+255),w,b
  5017  0008EC  0100               	movlb	0	; () banked
  5018  0008EE  6FD3               	movwf	??_doOperation& (0+255),b
  5019  0008F0  6BD4               	clrf	(??_doOperation+1)& (0+255),b
  5020                           
  5021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5022                           ; Switch size 1, requested type "simple"
  5023                           ; Number of cases is 1, Range of values is 0 to 0
  5024                           ; switch strategies available:
  5025                           ; Name         Instructions Cycles
  5026                           ; simple_byte            4     3 (average)
  5027                           ;	Chosen strategy is simple_byte
  5028  0008F2  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  5029  0008F4  0A00               	xorlw	0	; case 0
  5030  0008F6  A4D8               	btfss	status,2,c
  5031  0008F8  D019               	goto	l9888
  5032                           
  5033                           ; BSR set to: 0
  5034                           ; Switch size 1, requested type "simple"
  5035                           ; Number of cases is 8, Range of values is 0 to 7
  5036                           ; switch strategies available:
  5037                           ; Name         Instructions Cycles
  5038                           ; simple_byte           25    13 (average)
  5039                           ;	Chosen strategy is simple_byte
  5040  0008FA  51D3               	movf	??_doOperation& (0+255),w,b
  5041  0008FC  0A00               	xorlw	0	; case 0
  5042  0008FE  B4D8               	btfsc	status,2,c
  5043  000900  D463               	goto	l9690
  5044  000902  0A01               	xorlw	1	; case 1
  5045  000904  B4D8               	btfsc	status,2,c
  5046  000906  D4FA               	goto	l9718
  5047  000908  0A03               	xorlw	3	; case 2
  5048  00090A  B4D8               	btfsc	status,2,c
  5049  00090C  D64A               	goto	l9788
  5050  00090E  0A01               	xorlw	1	; case 3
  5051  000910  B4D8               	btfsc	status,2,c
  5052  000912  D6C1               	goto	l9816
  5053  000914  0A07               	xorlw	7	; case 4
  5054  000916  B4D8               	btfsc	status,2,c
  5055  000918  D737               	goto	l9838
  5056  00091A  0A01               	xorlw	1	; case 5
  5057  00091C  B4D8               	btfsc	status,2,c
  5058  00091E  D4EC               	goto	u11280
  5059  000920  0A03               	xorlw	3	; case 6
  5060  000922  B4D8               	btfsc	status,2,c
  5061  000924  D7BA               	goto	l9872
  5062  000926  0A01               	xorlw	1	; case 7
  5063  000928  B4D8               	btfsc	status,2,c
  5064  00092A  D732               	goto	l9840
  5065  00092C                     l9888:
  5066                           
  5067                           ;main.c: 1148:   if (millisecondsMeasured >= timeInOperation){
  5068  00092C  0101               	movlb	1	; () banked
  5069  00092E  514C               	movf	doOperation@timeInOperation& (0+255),w,b
  5070  000930  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5071  000932  514D               	movf	(doOperation@timeInOperation+1)& (0+255),w,b
  5072  000934  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5073  000936  514E               	movf	(doOperation@timeInOperation+2)& (0+255),w,b
  5074  000938  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5075  00093A  514F               	movf	(doOperation@timeInOperation+3)& (0+255),w,b
  5076  00093C  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5077  00093E  A0D8               	btfss	status,0,c
  5078  000940  D01B               	goto	l9908
  5079                           
  5080                           ; BSR set to: 1
  5081                           ;main.c: 1149:    currentOperationState = complete;
  5082  000942  0E06               	movlw	6
  5083  000944  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5084  000946  D018               	goto	l9908
  5085  000948                     l9892:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 1162:                 if (topLaserStatePrev != topLaserState || bottomLaserStat
      +                          ePrev != bottomLaserState){
  5089  000948  0101               	movlb	1	; () banked
  5090  00094A  5154               	movf	doOperation@topLaserState& (0+255),w,b
  5091  00094C  194A               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  5092  00094E  A4D8               	btfss	status,2,c
  5093  000950  D004               	goto	u11440
  5094                           
  5095                           ; BSR set to: 1
  5096  000952  5150               	movf	doOperation@bottomLaserState& (0+255),w,b
  5097  000954  194B               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  5098  000956  B4D8               	btfsc	status,2,c
  5099  000958  D423               	goto	l9680
  5100  00095A                     u11440:
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;main.c: 1163:                     if (topLaserStatePrev != topLaserState){
  5104  00095A  5154               	movf	doOperation@topLaserState& (0+255),w,b
  5105  00095C  194A               	xorwf	doOperation@topLaserStatePrev& (0+255),w,b
  5106  00095E  B4D8               	btfsc	status,2,c
  5107  000960  D002               	goto	l9900
  5108                           
  5109                           ; BSR set to: 1
  5110                           ;main.c: 1164:                         badCount++;
  5111  000962  4B27               	infsnz	doOperation@badCount& (0+255),f,b
  5112  000964  2B28               	incf	(doOperation@badCount+1)& (0+255),f,b
  5113  000966                     l9900:
  5114                           
  5115                           ; BSR set to: 1
  5116                           ;main.c: 1166:                     if (bottomLaserStatePrev != bottomLaserState){
  5117  000966  5150               	movf	doOperation@bottomLaserState& (0+255),w,b
  5118  000968  194B               	xorwf	doOperation@bottomLaserStatePrev& (0+255),w,b
  5119  00096A  B4D8               	btfsc	status,2,c
  5120  00096C  D002               	goto	l9904
  5121                           
  5122                           ; BSR set to: 1
  5123                           ;main.c: 1167:                         badCountBot++;
  5124  00096E  4B29               	infsnz	doOperation@badCountBot& (0+255),f,b
  5125  000970  2B2A               	incf	(doOperation@badCountBot+1)& (0+255),f,b
  5126  000972                     l9904:
  5127                           
  5128                           ; BSR set to: 1
  5129                           ;main.c: 1169:                     currentOperationState = poleFinding;
  5130  000972  0E01               	movlw	1
  5131  000974  6F51               	movwf	doOperation@currentOperationState& (0+255),b
  5132  000976  D414               	goto	l9680
  5133  000978                     l9908:
  5134                           
  5135                           ; BSR set to: 1
  5136  000978  5151               	movf	doOperation@currentOperationState& (0+255),w,b
  5137  00097A  0100               	movlb	0	; () banked
  5138  00097C  6FD3               	movwf	??_doOperation& (0+255),b
  5139  00097E  6BD4               	clrf	(??_doOperation+1)& (0+255),b
  5140                           
  5141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5142                           ; Switch size 1, requested type "simple"
  5143                           ; Number of cases is 1, Range of values is 0 to 0
  5144                           ; switch strategies available:
  5145                           ; Name         Instructions Cycles
  5146                           ; simple_byte            4     3 (average)
  5147                           ;	Chosen strategy is simple_byte
  5148  000980  51D4               	movf	(??_doOperation+1)& (0+255),w,b
  5149  000982  0A00               	xorlw	0	; case 0
  5150  000984  A4D8               	btfss	status,2,c
  5151  000986  D40C               	goto	l9680
  5152                           
  5153                           ; BSR set to: 0
  5154                           ; Switch size 1, requested type "simple"
  5155                           ; Number of cases is 7, Range of values is 0 to 7
  5156                           ; switch strategies available:
  5157                           ; Name         Instructions Cycles
  5158                           ; simple_byte           22    12 (average)
  5159                           ;	Chosen strategy is simple_byte
  5160  000988  51D3               	movf	??_doOperation& (0+255),w,b
  5161  00098A  0A00               	xorlw	0	; case 0
  5162  00098C  B4D8               	btfsc	status,2,c
  5163  00098E  D7DC               	goto	l9892
  5164  000990  0A01               	xorlw	1	; case 1
  5165  000992  B4D8               	btfsc	status,2,c
  5166  000994  D405               	goto	l9680
  5167  000996  0A03               	xorlw	3	; case 2
  5168  000998  B4D8               	btfsc	status,2,c
  5169  00099A  D402               	goto	l9680
  5170  00099C  0A06               	xorlw	6	; case 4
  5171  00099E  B4D8               	btfsc	status,2,c
  5172  0009A0  EFD0  F000         	goto	l9680
  5173  0009A4  0A01               	xorlw	1	; case 5
  5174  0009A6  B4D8               	btfsc	status,2,c
  5175  0009A8  EFD0  F000         	goto	l9680
  5176  0009AC  0A03               	xorlw	3	; case 6
  5177  0009AE  B4D8               	btfsc	status,2,c
  5178  0009B0  EFD0  F000         	goto	l9680
  5179  0009B4  0A01               	xorlw	1	; case 7
  5180  0009B6  EFD0  F000         	goto	l9680
  5181  0009BA                     __end_of_doOperation:
  5182                           	opt callstack 0
  5183                           
  5184 ;; *************** function _tirePositioning *****************
  5185 ;; Defined at:
  5186 ;;		line 457 in file "main.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  maxOperation    4   24[BANK0 ] unsigned long 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  startDistanc    4   41[BANK0 ] long 
  5191 ;;  distanceReco    4   53[BANK0 ] long 
  5192 ;;  distanceReco    4   49[BANK0 ] long 
  5193 ;;  startDistanc    4   37[BANK0 ] long 
  5194 ;;  startDistanc    4   33[BANK0 ] long 
  5195 ;;  bottomBreakb    2   59[BANK0 ] int 
  5196 ;;  topBreakbeam    2   57[BANK0 ] int 
  5197 ;;  bottomPrevio    2   47[BANK0 ] int 
  5198 ;;  topPreviousS    2   45[BANK0 ] int 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   24[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:       37 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    6
  5215 ;; This function calls:
  5216 ;;		___aldiv
  5217 ;;		_abs
  5218 ;;		_lcdInst
  5219 ;;		_opDelay
  5220 ;;		_setMotorSpeeds
  5221 ;; This function is called by:
  5222 ;;		_doOperation
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text8
  5227  001A82                     __ptext8:
  5228                           	opt callstack 0
  5229  001A82                     _tirePositioning:
  5230                           	opt callstack 23
  5231                           
  5232                           ;main.c: 458:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  5233                           
  5234                           ;incstack = 0
  5235  001A82  0E01               	movlw	1
  5236  001A84  EC4F  F024         	call	_lcdInst
  5237  001A88  0E11               	movlw	17
  5238  001A8A  0100               	movlb	0	; () banked
  5239  001A8C  6F9C               	movwf	??_tirePositioning& (0+255),b
  5240  001A8E  0E3A               	movlw	58
  5241  001A90                     u12167:
  5242  001A90  2EE8               	decfsz	wreg,f,c
  5243  001A92  D7FE               	bra	u12167
  5244  001A94  2F9C               	decfsz	??_tirePositioning& (0+255),f,b
  5245  001A96  D7FC               	bra	u12167
  5246  001A98  F000               	nop	
  5247                           
  5248                           ;main.c: 459:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  5249  001A9A  0E80               	movlw	128
  5250  001A9C  EC4F  F024         	call	_lcdInst
  5251  001AA0  0E07               	movlw	7
  5252  001AA2  0100               	movlb	0	; () banked
  5253  001AA4  6F9C               	movwf	??_tirePositioning& (0+255),b
  5254  001AA6  0E7D               	movlw	125
  5255  001AA8                     u12177:
  5256  001AA8  2EE8               	decfsz	wreg,f,c
  5257  001AAA  D7FE               	bra	u12177
  5258  001AAC  2F9C               	decfsz	??_tirePositioning& (0+255),f,b
  5259  001AAE  D7FC               	bra	u12177
  5260                           
  5261                           ;main.c: 461:     int topBreakbeam;;main.c: 462:     int bottomBreakbeam;;main.c: 463:  
      +                             long distanceRecordedTop;;main.c: 464:     long startDistanceTop;;main.c: 465:     lo
      +                          ng distanceRecordedBottom;;main.c: 466:     long startDistanceBottom;;main.c: 467:     i
      +                          nt topPreviousState = 1;
  5262  001AB0  0E00               	movlw	0
  5263  001AB2  0100               	movlb	0	; () banked
  5264  001AB4  6FAE               	movwf	(tirePositioning@topPreviousState+1)& (0+255),b
  5265  001AB6  0E01               	movlw	1
  5266  001AB8  6FAD               	movwf	tirePositioning@topPreviousState& (0+255),b
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;main.c: 468:     int bottomPreviousState = 1;
  5270  001ABA  0E00               	movlw	0
  5271  001ABC  6FB0               	movwf	(tirePositioning@bottomPreviousState+1)& (0+255),b
  5272  001ABE  0E01               	movlw	1
  5273  001AC0  6FAF               	movwf	tirePositioning@bottomPreviousState& (0+255),b
  5274                           
  5275                           ;main.c: 471:     while(millisecondsMeasured < maxOperationTime){
  5276  001AC2  D070               	goto	l9288
  5277  001AC4                     l9260:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;main.c: 472:         topBreakbeam = PORTBbits.RB4;
  5281  001AC4  A881               	btfss	3969,4,c	;volatile
  5282  001AC6  D003               	goto	u10810
  5283  001AC8  6B9C               	clrf	??_tirePositioning& (0+255),b
  5284  001ACA  2B9C               	incf	??_tirePositioning& (0+255),f,b
  5285  001ACC  D002               	goto	u10818
  5286  001ACE                     u10810:
  5287  001ACE  0100               	movlb	0	; () banked
  5288  001AD0  6B9C               	clrf	??_tirePositioning& (0+255),b
  5289  001AD2                     u10818:
  5290  001AD2  519C               	movf	??_tirePositioning& (0+255),w,b
  5291  001AD4  6FB9               	movwf	tirePositioning@topBreakbeam& (0+255),b
  5292  001AD6  6BBA               	clrf	(tirePositioning@topBreakbeam+1)& (0+255),b
  5293                           
  5294                           ;main.c: 473:         bottomBreakbeam = PORTBbits.RB5;
  5295  001AD8  AA81               	btfss	3969,5,c	;volatile
  5296  001ADA  D003               	goto	u10820
  5297  001ADC  6B9C               	clrf	??_tirePositioning& (0+255),b
  5298  001ADE  2B9C               	incf	??_tirePositioning& (0+255),f,b
  5299  001AE0  D002               	goto	u10828
  5300  001AE2                     u10820:
  5301  001AE2  0100               	movlb	0	; () banked
  5302  001AE4  6B9C               	clrf	??_tirePositioning& (0+255),b
  5303  001AE6                     u10828:
  5304  001AE6  519C               	movf	??_tirePositioning& (0+255),w,b
  5305  001AE8  6FBB               	movwf	tirePositioning@bottomBreakbeam& (0+255),b
  5306  001AEA  6BBC               	clrf	(tirePositioning@bottomBreakbeam+1)& (0+255),b
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;main.c: 474:         if (topBreakbeam == 0 && topPreviousState == 1){
  5310  001AEC  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5311  001AEE  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5312  001AF0  A4D8               	btfss	status,2,c
  5313  001AF2  D00C               	goto	l9268
  5314                           
  5315                           ; BSR set to: 0
  5316  001AF4  05AD               	decf	tirePositioning@topPreviousState& (0+255),w,b
  5317  001AF6  11AE               	iorwf	(tirePositioning@topPreviousState+1)& (0+255),w,b
  5318  001AF8  A4D8               	btfss	status,2,c
  5319  001AFA  D008               	goto	l9268
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;main.c: 475:             startDistanceTop = motorADistance;
  5323  001AFC  C0DB  F0A1         	movff	_motorADistance,tirePositioning@startDistanceTop	;volatile
  5324  001B00  C0DC  F0A2         	movff	_motorADistance+1,tirePositioning@startDistanceTop+1	;volatile
  5325  001B04  C0DD  F0A3         	movff	_motorADistance+2,tirePositioning@startDistanceTop+2	;volatile
  5326  001B08  C0DE  F0A4         	movff	_motorADistance+3,tirePositioning@startDistanceTop+3	;volatile
  5327  001B0C                     l9268:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;main.c: 477:         if (bottomBreakbeam == 0 && bottomPreviousState == 1){
  5331  001B0C  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5332  001B0E  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5333  001B10  A4D8               	btfss	status,2,c
  5334  001B12  D00C               	goto	l9274
  5335                           
  5336                           ; BSR set to: 0
  5337  001B14  05AF               	decf	tirePositioning@bottomPreviousState& (0+255),w,b
  5338  001B16  11B0               	iorwf	(tirePositioning@bottomPreviousState+1)& (0+255),w,b
  5339  001B18  A4D8               	btfss	status,2,c
  5340  001B1A  D008               	goto	l9274
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;main.c: 478:             startDistanceBottom = motorADistance;
  5344  001B1C  C0DB  F0A5         	movff	_motorADistance,tirePositioning@startDistanceBottom	;volatile
  5345  001B20  C0DC  F0A6         	movff	_motorADistance+1,tirePositioning@startDistanceBottom+1	;volatile
  5346  001B24  C0DD  F0A7         	movff	_motorADistance+2,tirePositioning@startDistanceBottom+2	;volatile
  5347  001B28  C0DE  F0A8         	movff	_motorADistance+3,tirePositioning@startDistanceBottom+3	;volatile
  5348  001B2C                     l9274:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;main.c: 480:         if(!topBreakbeam){
  5352  001B2C  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5353  001B2E  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5354  001B30  A4D8               	btfss	status,2,c
  5355  001B32  D012               	goto	l9278
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;main.c: 481:             distanceRecordedTop = abs(motorADistance - startDistanceTop);
  5359  001B34  51A1               	movf	tirePositioning@startDistanceTop& (0+255),w,b
  5360  001B36  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5361  001B38  6E18               	movwf	abs@a,c
  5362  001B3A  51A2               	movf	(tirePositioning@startDistanceTop+1)& (0+255),w,b
  5363  001B3C  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5364  001B3E  6E19               	movwf	abs@a+1,c
  5365  001B40  ECF4  F022         	call	_abs	;wreg free
  5366  001B44  C018  F0B1         	movff	?_abs,tirePositioning@distanceRecordedTop
  5367  001B48  C019  F0B2         	movff	?_abs+1,tirePositioning@distanceRecordedTop+1
  5368  001B4C  0100               	movlb	0	; () banked
  5369  001B4E  0E00               	movlw	0
  5370  001B50  BFB2               	btfsc	(tirePositioning@distanceRecordedTop+1)& (0+255),7,b
  5371  001B52  0EFF               	movlw	-1
  5372  001B54  6FB3               	movwf	(tirePositioning@distanceRecordedTop+2)& (0+255),b
  5373  001B56  6FB4               	movwf	(tirePositioning@distanceRecordedTop+3)& (0+255),b
  5374  001B58                     l9278:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;main.c: 483:         if(!bottomBreakbeam){
  5378  001B58  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5379  001B5A  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5380  001B5C  A4D8               	btfss	status,2,c
  5381  001B5E  D012               	goto	l9282
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;main.c: 484:             distanceRecordedBottom = abs(motorADistance - startDistanceBot
      +                          tom);
  5385  001B60  51A5               	movf	tirePositioning@startDistanceBottom& (0+255),w,b
  5386  001B62  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  5387  001B64  6E18               	movwf	abs@a,c
  5388  001B66  51A6               	movf	(tirePositioning@startDistanceBottom+1)& (0+255),w,b
  5389  001B68  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  5390  001B6A  6E19               	movwf	abs@a+1,c
  5391  001B6C  ECF4  F022         	call	_abs	;wreg free
  5392  001B70  C018  F0B5         	movff	?_abs,tirePositioning@distanceRecordedBottom
  5393  001B74  C019  F0B6         	movff	?_abs+1,tirePositioning@distanceRecordedBottom+1
  5394  001B78  0100               	movlb	0	; () banked
  5395  001B7A  0E00               	movlw	0
  5396  001B7C  BFB6               	btfsc	(tirePositioning@distanceRecordedBottom+1)& (0+255),7,b
  5397  001B7E  0EFF               	movlw	-1
  5398  001B80  6FB7               	movwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),b
  5399  001B82  6FB8               	movwf	(tirePositioning@distanceRecordedBottom+3)& (0+255),b
  5400  001B84                     l9282:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;main.c: 486:         if(topBreakbeam && bottomBreakbeam){
  5404  001B84  51B9               	movf	tirePositioning@topBreakbeam& (0+255),w,b
  5405  001B86  11BA               	iorwf	(tirePositioning@topBreakbeam+1)& (0+255),w,b
  5406  001B88  B4D8               	btfsc	status,2,c
  5407  001B8A  D004               	goto	l299
  5408                           
  5409                           ; BSR set to: 0
  5410  001B8C  51BB               	movf	tirePositioning@bottomBreakbeam& (0+255),w,b
  5411  001B8E  11BC               	iorwf	(tirePositioning@bottomBreakbeam+1)& (0+255),w,b
  5412  001B90  A4D8               	btfss	status,2,c
  5413  001B92  D012               	goto	u10910
  5414  001B94                     l299:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;main.c: 489:         topPreviousState = topBreakbeam;
  5418  001B94  C0B9  F0AD         	movff	tirePositioning@topBreakbeam,tirePositioning@topPreviousState
  5419  001B98  C0BA  F0AE         	movff	tirePositioning@topBreakbeam+1,tirePositioning@topPreviousState+1
  5420                           
  5421                           ;main.c: 490:         bottomPreviousState = bottomBreakbeam;
  5422  001B9C  C0BB  F0AF         	movff	tirePositioning@bottomBreakbeam,tirePositioning@bottomPreviousState
  5423  001BA0  C0BC  F0B0         	movff	tirePositioning@bottomBreakbeam+1,tirePositioning@bottomPreviousState+1
  5424  001BA4                     l9288:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;main.c: 471:     while(millisecondsMeasured < maxOperationTime){
  5428  001BA4  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  5429  001BA6  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5430  001BA8  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  5431  001BAA  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5432  001BAC  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  5433  001BAE  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5434  001BB0  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  5435  001BB2  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5436  001BB4  A0D8               	btfss	status,0,c
  5437  001BB6  D786               	goto	l9260
  5438  001BB8                     u10910:
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;main.c: 503:     if (distanceRecordedTop < 80){
  5442  001BB8  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  5443  001BBA  D008               	goto	u10920
  5444  001BBC  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  5445  001BBE  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  5446  001BC0  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  5447  001BC2  E14B               	bnz	l9304
  5448  001BC4  0E50               	movlw	80
  5449  001BC6  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  5450  001BC8  B0D8               	btfsc	status,0,c
  5451  001BCA  D047               	goto	l9304
  5452  001BCC                     u10920:
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;main.c: 504:         setMotorSpeeds(0, 1, 1, 0);
  5456  001BCC  0E00               	movlw	0
  5457  001BCE  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5458  001BD0  0E00               	movlw	0
  5459  001BD2  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5460  001BD4  0E01               	movlw	1
  5461  001BD6  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5462  001BD8  0E01               	movlw	1
  5463  001BDA  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5464  001BDC  0E00               	movlw	0
  5465  001BDE  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5466  001BE0  0E00               	movlw	0
  5467  001BE2  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5468  001BE4  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5469                           
  5470                           ;main.c: 505:         opDelay(100, maxOperationTime);
  5471  001BE8  0E00               	movlw	0
  5472  001BEA  6E07               	movwf	opDelay@millis+1,c
  5473  001BEC  0E64               	movlw	100
  5474  001BEE  6E06               	movwf	opDelay@millis,c
  5475  001BF0  C098  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  5476  001BF4  C099  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  5477  001BF8  C09A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  5478  001BFC  C09B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  5479  001C00  ECE7  F020         	call	_opDelay	;wreg free
  5480                           
  5481                           ;main.c: 506:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  5482  001C04  D00E               	goto	l9298
  5483  001C06                     l9296:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;main.c: 507:             setMotorSpeeds(90, 0, 0, 90);
  5487  001C06  0E00               	movlw	0
  5488  001C08  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5489  001C0A  0E5A               	movlw	90
  5490  001C0C  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5491  001C0E  0E00               	movlw	0
  5492  001C10  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5493  001C12  0E00               	movlw	0
  5494  001C14  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5495  001C16  0E00               	movlw	0
  5496  001C18  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5497  001C1A  0E5A               	movlw	90
  5498  001C1C  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5499  001C1E  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5500  001C22                     l9298:
  5501                           
  5502                           ;main.c: 506:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  5503  001C22  0100               	movlb	0	; () banked
  5504  001C24  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  5505  001C26  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5506  001C28  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  5507  001C2A  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5508  001C2C  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  5509  001C2E  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5510  001C30  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  5511  001C32  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5512  001C34  B0D8               	btfsc	status,0,c
  5513  001C36  D002               	goto	u10940
  5514                           
  5515                           ; BSR set to: 0
  5516  001C38  B881               	btfsc	3969,4,c	;volatile
  5517  001C3A  D7E5               	goto	l9296
  5518  001C3C                     u10940:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;main.c: 509:         setMotorSpeeds(0, 1, 1, 0);
  5522  001C3C  0E00               	movlw	0
  5523  001C3E  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5524  001C40  0E00               	movlw	0
  5525  001C42  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5526  001C44  0E01               	movlw	1
  5527  001C46  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5528  001C48  0E01               	movlw	1
  5529  001C4A  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5530  001C4C  0E00               	movlw	0
  5531  001C4E  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5532  001C50  0E00               	movlw	0
  5533  001C52  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5534  001C54  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5535                           
  5536                           ;main.c: 510:     } else {
  5537  001C58  D08E               	goto	l9322
  5538  001C5A                     l9304:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;main.c: 513:         setMotorSpeeds(0, 1, 1, 0);
  5542  001C5A  0E00               	movlw	0
  5543  001C5C  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5544  001C5E  0E00               	movlw	0
  5545  001C60  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5546  001C62  0E01               	movlw	1
  5547  001C64  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5548  001C66  0E01               	movlw	1
  5549  001C68  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5550  001C6A  0E00               	movlw	0
  5551  001C6C  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5552  001C6E  0E00               	movlw	0
  5553  001C70  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5554  001C72  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5555                           
  5556                           ;main.c: 514:         opDelay(100, maxOperationTime);
  5557  001C76  0E00               	movlw	0
  5558  001C78  6E07               	movwf	opDelay@millis+1,c
  5559  001C7A  0E64               	movlw	100
  5560  001C7C  6E06               	movwf	opDelay@millis,c
  5561  001C7E  C098  F008         	movff	tirePositioning@maxOperationTime,opDelay@maxOperationTime
  5562  001C82  C099  F009         	movff	tirePositioning@maxOperationTime+1,opDelay@maxOperationTime+1
  5563  001C86  C09A  F00A         	movff	tirePositioning@maxOperationTime+2,opDelay@maxOperationTime+2
  5564  001C8A  C09B  F00B         	movff	tirePositioning@maxOperationTime+3,opDelay@maxOperationTime+3
  5565  001C8E  ECE7  F020         	call	_opDelay	;wreg free
  5566                           
  5567                           ;main.c: 515:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  5568  001C92  D00E               	goto	l9310
  5569  001C94                     l9308:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;main.c: 516:             setMotorSpeeds(90, 0, 0, 90);
  5573  001C94  0E00               	movlw	0
  5574  001C96  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5575  001C98  0E5A               	movlw	90
  5576  001C9A  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5577  001C9C  0E00               	movlw	0
  5578  001C9E  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5579  001CA0  0E00               	movlw	0
  5580  001CA2  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5581  001CA4  0E00               	movlw	0
  5582  001CA6  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5583  001CA8  0E5A               	movlw	90
  5584  001CAA  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5585  001CAC  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5586  001CB0                     l9310:
  5587                           
  5588                           ;main.c: 515:         while(millisecondsMeasured < maxOperationTime && PORTBbits.RB4 == 
      +                          1){
  5589  001CB0  0100               	movlb	0	; () banked
  5590  001CB2  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  5591  001CB4  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5592  001CB6  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  5593  001CB8  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5594  001CBA  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  5595  001CBC  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5596  001CBE  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  5597  001CC0  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5598  001CC2  B0D8               	btfsc	status,0,c
  5599  001CC4  D002               	goto	u10960
  5600                           
  5601                           ; BSR set to: 0
  5602  001CC6  B881               	btfsc	3969,4,c	;volatile
  5603  001CC8  D7E5               	goto	l9308
  5604  001CCA                     u10960:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;main.c: 518:         long startDistance = motorADistance;
  5608  001CCA  C0DB  F0A9         	movff	_motorADistance,tirePositioning@startDistance	;volatile
  5609  001CCE  C0DC  F0AA         	movff	_motorADistance+1,tirePositioning@startDistance+1	;volatile
  5610  001CD2  C0DD  F0AB         	movff	_motorADistance+2,tirePositioning@startDistance+2	;volatile
  5611  001CD6  C0DE  F0AC         	movff	_motorADistance+3,tirePositioning@startDistance+3	;volatile
  5612                           
  5613                           ;main.c: 519:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  5614  001CDA  D00E               	goto	l9316
  5615  001CDC                     l9314:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;main.c: 520:             setMotorSpeeds(90, 0, 0, 90);
  5619  001CDC  0E00               	movlw	0
  5620  001CDE  6F8B               	movwf	(setMotorSpeeds@motorASpeed+1)& (0+255),b
  5621  001CE0  0E5A               	movlw	90
  5622  001CE2  6F8A               	movwf	setMotorSpeeds@motorASpeed& (0+255),b
  5623  001CE4  0E00               	movlw	0
  5624  001CE6  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  5625  001CE8  0E00               	movlw	0
  5626  001CEA  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  5627  001CEC  0E00               	movlw	0
  5628  001CEE  6F8F               	movwf	(setMotorSpeeds@motorBSpeed+1)& (0+255),b
  5629  001CF0  0E5A               	movlw	90
  5630  001CF2  6F8E               	movwf	setMotorSpeeds@motorBSpeed& (0+255),b
  5631  001CF4  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  5632  001CF8                     l9316:
  5633                           
  5634                           ;main.c: 519:         while(millisecondsMeasured < maxOperationTime && abs(startDistance
      +                           - motorADistance) < distanceRecordedBottom/2){
  5635  001CF8  0100               	movlb	0	; () banked
  5636  001CFA  5198               	movf	tirePositioning@maxOperationTime& (0+255),w,b
  5637  001CFC  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5638  001CFE  5199               	movf	(tirePositioning@maxOperationTime+1)& (0+255),w,b
  5639  001D00  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5640  001D02  519A               	movf	(tirePositioning@maxOperationTime+2)& (0+255),w,b
  5641  001D04  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5642  001D06  519B               	movf	(tirePositioning@maxOperationTime+3)& (0+255),w,b
  5643  001D08  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5644  001D0A  B0D8               	btfsc	status,0,c
  5645  001D0C  D797               	goto	u10940
  5646                           
  5647                           ; BSR set to: 0
  5648  001D0E  51DB               	movf	_motorADistance& (0+255),w,b	;volatile
  5649  001D10  5DA9               	subwf	tirePositioning@startDistance& (0+255),w,b
  5650  001D12  6E18               	movwf	abs@a,c
  5651  001D14  51DC               	movf	(_motorADistance+1)& (0+255),w,b	;volatile
  5652  001D16  59AA               	subwfb	(tirePositioning@startDistance+1)& (0+255),w,b
  5653  001D18  6E19               	movwf	abs@a+1,c
  5654  001D1A  ECF4  F022         	call	_abs	;wreg free
  5655  001D1E  C018  F09C         	movff	?_abs,??_tirePositioning
  5656  001D22  C019  F09D         	movff	?_abs+1,??_tirePositioning+1
  5657  001D26  0E00               	movlw	0
  5658  001D28  0100               	movlb	0	; () banked
  5659  001D2A  BF9D               	btfsc	(??_tirePositioning+1)& (0+255),7,b
  5660  001D2C  0EFF               	movlw	255
  5661  001D2E  6F9E               	movwf	(??_tirePositioning+2)& (0+255),b
  5662  001D30  6F9F               	movwf	(??_tirePositioning+3)& (0+255),b
  5663  001D32  C0B5  F006         	movff	tirePositioning@distanceRecordedBottom,___aldiv@dividend
  5664  001D36  C0B6  F007         	movff	tirePositioning@distanceRecordedBottom+1,___aldiv@dividend+1
  5665  001D3A  C0B7  F008         	movff	tirePositioning@distanceRecordedBottom+2,___aldiv@dividend+2
  5666  001D3E  C0B8  F009         	movff	tirePositioning@distanceRecordedBottom+3,___aldiv@dividend+3
  5667  001D42  0E02               	movlw	2
  5668  001D44  6E0A               	movwf	___aldiv@divisor,c
  5669  001D46  0E00               	movlw	0
  5670  001D48  6E0B               	movwf	___aldiv@divisor+1,c
  5671  001D4A  0E00               	movlw	0
  5672  001D4C  6E0C               	movwf	___aldiv@divisor+2,c
  5673  001D4E  0E00               	movlw	0
  5674  001D50  6E0D               	movwf	___aldiv@divisor+3,c
  5675  001D52  EC97  F01D         	call	___aldiv	;wreg free
  5676  001D56  5006               	movf	?___aldiv,w,c
  5677  001D58  0100               	movlb	0	; () banked
  5678  001D5A  5D9C               	subwf	??_tirePositioning& (0+255),w,b
  5679  001D5C  5007               	movf	?___aldiv+1,w,c
  5680  001D5E  599D               	subwfb	(??_tirePositioning+1)& (0+255),w,b
  5681  001D60  5008               	movf	?___aldiv+2,w,c
  5682  001D62  599E               	subwfb	(??_tirePositioning+2)& (0+255),w,b
  5683  001D64  519F               	movf	(??_tirePositioning+3)& (0+255),w,b
  5684  001D66  0A80               	xorlw	128
  5685  001D68  6FA0               	movwf	(??_tirePositioning+4)& (0+255),b
  5686  001D6A  5009               	movf	?___aldiv+3,w,c
  5687  001D6C  0A80               	xorlw	128
  5688  001D6E  59A0               	subwfb	(??_tirePositioning+4)& (0+255),w,b
  5689  001D70  B0D8               	btfsc	status,0,c
  5690  001D72  D764               	goto	u10940
  5691  001D74  D7B3               	goto	l9314
  5692  001D76                     l9322:
  5693                           
  5694                           ;main.c: 526:     if (distanceRecordedTop < 80 && distanceRecordedBottom < 80){
  5695  001D76  0100               	movlb	0	; () banked
  5696  001D78  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  5697  001D7A  D008               	goto	u10990
  5698  001D7C  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  5699  001D7E  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  5700  001D80  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  5701  001D82  E113               	bnz	l9332
  5702  001D84  0E50               	movlw	80
  5703  001D86  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  5704  001D88  B0D8               	btfsc	status,0,c
  5705  001D8A  D00F               	goto	l9332
  5706  001D8C                     u10990:
  5707                           
  5708                           ; BSR set to: 0
  5709  001D8C  BFB8               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  5710  001D8E  D008               	goto	u11000
  5711  001D90  51B8               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  5712  001D92  11B7               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  5713  001D94  11B6               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  5714  001D96  E109               	bnz	l9332
  5715  001D98  0E50               	movlw	80
  5716  001D9A  5DB5               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  5717  001D9C  B0D8               	btfsc	status,0,c
  5718  001D9E  D005               	goto	l9332
  5719  001DA0                     u11000:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;main.c: 527:         return 0;
  5723  001DA0  0E00               	movlw	0
  5724  001DA2  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  5725  001DA4  0E00               	movlw	0
  5726  001DA6  6F98               	movwf	?_tirePositioning& (0+255),b
  5727  001DA8  0012               	return	
  5728  001DAA                     l9332:
  5729                           
  5730                           ; BSR set to: 0
  5731  001DAA  BFB4               	btfsc	(tirePositioning@distanceRecordedTop+3)& (0+255),7,b
  5732  001DAC  D017               	goto	l9342
  5733  001DAE  51B4               	movf	(tirePositioning@distanceRecordedTop+3)& (0+255),w,b
  5734  001DB0  11B3               	iorwf	(tirePositioning@distanceRecordedTop+2)& (0+255),w,b
  5735  001DB2  11B2               	iorwf	(tirePositioning@distanceRecordedTop+1)& (0+255),w,b
  5736  001DB4  E104               	bnz	u11010
  5737  001DB6  0E51               	movlw	81
  5738  001DB8  5DB1               	subwf	tirePositioning@distanceRecordedTop& (0+255),w,b
  5739  001DBA  A0D8               	btfss	status,0,c
  5740  001DBC  D00F               	goto	l9342
  5741  001DBE                     u11010:
  5742                           
  5743                           ; BSR set to: 0
  5744  001DBE  BFB8               	btfsc	(tirePositioning@distanceRecordedBottom+3)& (0+255),7,b
  5745  001DC0  D00D               	goto	l9342
  5746  001DC2  51B8               	movf	(tirePositioning@distanceRecordedBottom+3)& (0+255),w,b
  5747  001DC4  11B7               	iorwf	(tirePositioning@distanceRecordedBottom+2)& (0+255),w,b
  5748  001DC6  11B6               	iorwf	(tirePositioning@distanceRecordedBottom+1)& (0+255),w,b
  5749  001DC8  E104               	bnz	u11020
  5750  001DCA  0E51               	movlw	81
  5751  001DCC  5DB5               	subwf	tirePositioning@distanceRecordedBottom& (0+255),w,b
  5752  001DCE  A0D8               	btfss	status,0,c
  5753  001DD0  D005               	goto	l9342
  5754  001DD2                     u11020:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;main.c: 529:         return 2;
  5758  001DD2  0E00               	movlw	0
  5759  001DD4  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  5760  001DD6  0E02               	movlw	2
  5761  001DD8  6F98               	movwf	?_tirePositioning& (0+255),b
  5762  001DDA  0012               	return	
  5763  001DDC                     l9342:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;main.c: 531:         return 1;
  5767  001DDC  0E00               	movlw	0
  5768  001DDE  6F99               	movwf	(?_tirePositioning+1)& (0+255),b
  5769  001DE0  0E01               	movlw	1
  5770  001DE2  6F98               	movwf	?_tirePositioning& (0+255),b
  5771                           
  5772                           ; BSR set to: 0
  5773  001DE4  0012               	return		;funcret
  5774  001DE6                     __end_of_tirePositioning:
  5775                           	opt callstack 0
  5776                           
  5777 ;; *************** function _opDelay *****************
  5778 ;; Defined at:
  5779 ;;		line 124 in file "main.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  millis          2    5[COMRAM] int 
  5782 ;;  maxOperation    4    7[COMRAM] unsigned long 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  startTime       4   19[COMRAM] unsigned long 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      void 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5794 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;Total ram usage:       18 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    2
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_tirePositioning
  5805 ;;		_doOperation
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text9
  5810  0041CE                     __ptext9:
  5811                           	opt callstack 0
  5812  0041CE                     _opDelay:
  5813                           	opt callstack 26
  5814                           
  5815                           ;main.c: 125:     unsigned long startTime = millisecondsMeasured;
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;incstack = 0
  5819  0041CE  C074  F014         	movff	_millisecondsMeasured,opDelay@startTime	;volatile
  5820  0041D2  C075  F015         	movff	_millisecondsMeasured+1,opDelay@startTime+1	;volatile
  5821  0041D6  C076  F016         	movff	_millisecondsMeasured+2,opDelay@startTime+2	;volatile
  5822  0041DA  C077  F017         	movff	_millisecondsMeasured+3,opDelay@startTime+3	;volatile
  5823  0041DE                     l9052:
  5824                           
  5825                           ;main.c: 126:     while (millisecondsMeasured < maxOperationTime && (millisecondsMeasure
      +                          d - startTime) < millis){
  5826  0041DE  5008               	movf	opDelay@maxOperationTime,w,c
  5827  0041E0  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5828  0041E2  5009               	movf	opDelay@maxOperationTime+1,w,c
  5829  0041E4  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5830  0041E6  500A               	movf	opDelay@maxOperationTime+2,w,c
  5831  0041E8  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5832  0041EA  500B               	movf	opDelay@maxOperationTime+3,w,c
  5833  0041EC  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5834  0041EE  B0D8               	btfsc	status,0,c
  5835  0041F0  0012               	return	
  5836  0041F2  C006  F00C         	movff	opDelay@millis,??_opDelay
  5837  0041F6  C007  F00D         	movff	opDelay@millis+1,??_opDelay+1
  5838  0041FA  0E00               	movlw	0
  5839  0041FC  BE0D               	btfsc	(??_opDelay+1)& (0+255),7,c
  5840  0041FE  0EFF               	movlw	255
  5841  004200  6E0E               	movwf	(??_opDelay+2)& (0+255),c
  5842  004202  6E0F               	movwf	(??_opDelay+3)& (0+255),c
  5843  004204  5014               	movf	opDelay@startTime,w,c
  5844  004206  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  5845  004208  6E10               	movwf	(??_opDelay+4)& (0+255),c
  5846  00420A  5015               	movf	opDelay@startTime+1,w,c
  5847  00420C  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  5848  00420E  6E11               	movwf	(??_opDelay+5)& (0+255),c
  5849  004210  5016               	movf	opDelay@startTime+2,w,c
  5850  004212  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  5851  004214  6E12               	movwf	(??_opDelay+6)& (0+255),c
  5852  004216  5017               	movf	opDelay@startTime+3,w,c
  5853  004218  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  5854  00421A  6E13               	movwf	(??_opDelay+7)& (0+255),c
  5855  00421C  500C               	movf	??_opDelay,w,c
  5856  00421E  5C10               	subwf	??_opDelay+4,w,c
  5857  004220  500D               	movf	??_opDelay+1,w,c
  5858  004222  5811               	subwfb	??_opDelay+5,w,c
  5859  004224  500E               	movf	??_opDelay+2,w,c
  5860  004226  5812               	subwfb	??_opDelay+6,w,c
  5861  004228  500F               	movf	??_opDelay+3,w,c
  5862  00422A  5813               	subwfb	??_opDelay+7,w,c
  5863  00422C  B0D8               	btfsc	status,0,c
  5864  00422E  0012               	return	
  5865  004230  D7D6               	goto	l9052
  5866  004232                     __end_of_opDelay:
  5867                           	opt callstack 0
  5868                           
  5869 ;; *************** function ___aldiv *****************
  5870 ;; Defined at:
  5871 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  dividend        4    5[COMRAM] long 
  5874 ;;  divisor         4    9[COMRAM] long 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  quotient        4   15[COMRAM] long 
  5877 ;;  sign            1   14[COMRAM] unsigned char 
  5878 ;;  counter         1   13[COMRAM] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  4    5[COMRAM] long 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5888 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;Total ram usage:       14 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    2
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_tirePositioning
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text10
  5903  003B2E                     __ptext10:
  5904                           	opt callstack 0
  5905  003B2E                     ___aldiv:
  5906                           	opt callstack 26
  5907                           
  5908                           ;incstack = 0
  5909  003B2E  0E00               	movlw	0
  5910  003B30  6E0F               	movwf	___aldiv@sign,c
  5911  003B32  AE0D               	btfss	___aldiv@divisor+3,7,c
  5912  003B34  D00A               	goto	l9146
  5913  003B36  1E0D               	comf	___aldiv@divisor+3,f,c
  5914  003B38  1E0C               	comf	___aldiv@divisor+2,f,c
  5915  003B3A  1E0B               	comf	___aldiv@divisor+1,f,c
  5916  003B3C  6C0A               	negf	___aldiv@divisor,c
  5917  003B3E  0E00               	movlw	0
  5918  003B40  220B               	addwfc	___aldiv@divisor+1,f,c
  5919  003B42  220C               	addwfc	___aldiv@divisor+2,f,c
  5920  003B44  220D               	addwfc	___aldiv@divisor+3,f,c
  5921  003B46  0E01               	movlw	1
  5922  003B48  6E0F               	movwf	___aldiv@sign,c
  5923  003B4A                     l9146:
  5924  003B4A  AE09               	btfss	___aldiv@dividend+3,7,c
  5925  003B4C  D00A               	goto	l9152
  5926  003B4E  1E09               	comf	___aldiv@dividend+3,f,c
  5927  003B50  1E08               	comf	___aldiv@dividend+2,f,c
  5928  003B52  1E07               	comf	___aldiv@dividend+1,f,c
  5929  003B54  6C06               	negf	___aldiv@dividend,c
  5930  003B56  0E00               	movlw	0
  5931  003B58  2207               	addwfc	___aldiv@dividend+1,f,c
  5932  003B5A  2208               	addwfc	___aldiv@dividend+2,f,c
  5933  003B5C  2209               	addwfc	___aldiv@dividend+3,f,c
  5934  003B5E  0E01               	movlw	1
  5935  003B60  1A0F               	xorwf	___aldiv@sign,f,c
  5936  003B62                     l9152:
  5937  003B62  0E00               	movlw	0
  5938  003B64  6E10               	movwf	___aldiv@quotient,c
  5939  003B66  0E00               	movlw	0
  5940  003B68  6E11               	movwf	___aldiv@quotient+1,c
  5941  003B6A  0E00               	movlw	0
  5942  003B6C  6E12               	movwf	___aldiv@quotient+2,c
  5943  003B6E  0E00               	movlw	0
  5944  003B70  6E13               	movwf	___aldiv@quotient+3,c
  5945  003B72  500A               	movf	___aldiv@divisor,w,c
  5946  003B74  100B               	iorwf	___aldiv@divisor+1,w,c
  5947  003B76  100C               	iorwf	___aldiv@divisor+2,w,c
  5948  003B78  100D               	iorwf	___aldiv@divisor+3,w,c
  5949  003B7A  B4D8               	btfsc	status,2,c
  5950  003B7C  D02A               	goto	l9174
  5951  003B7E  0E01               	movlw	1
  5952  003B80  6E0E               	movwf	___aldiv@counter,c
  5953  003B82  D006               	goto	l9160
  5954  003B84                     l9158:
  5955  003B84  90D8               	bcf	status,0,c
  5956  003B86  360A               	rlcf	___aldiv@divisor,f,c
  5957  003B88  360B               	rlcf	___aldiv@divisor+1,f,c
  5958  003B8A  360C               	rlcf	___aldiv@divisor+2,f,c
  5959  003B8C  360D               	rlcf	___aldiv@divisor+3,f,c
  5960  003B8E  2A0E               	incf	___aldiv@counter,f,c
  5961  003B90                     l9160:
  5962  003B90  AE0D               	btfss	___aldiv@divisor+3,7,c
  5963  003B92  D7F8               	goto	l9158
  5964  003B94                     u10780:
  5965  003B94  90D8               	bcf	status,0,c
  5966  003B96  3610               	rlcf	___aldiv@quotient,f,c
  5967  003B98  3611               	rlcf	___aldiv@quotient+1,f,c
  5968  003B9A  3612               	rlcf	___aldiv@quotient+2,f,c
  5969  003B9C  3613               	rlcf	___aldiv@quotient+3,f,c
  5970  003B9E  500A               	movf	___aldiv@divisor,w,c
  5971  003BA0  5C06               	subwf	___aldiv@dividend,w,c
  5972  003BA2  500B               	movf	___aldiv@divisor+1,w,c
  5973  003BA4  5807               	subwfb	___aldiv@dividend+1,w,c
  5974  003BA6  500C               	movf	___aldiv@divisor+2,w,c
  5975  003BA8  5808               	subwfb	___aldiv@dividend+2,w,c
  5976  003BAA  500D               	movf	___aldiv@divisor+3,w,c
  5977  003BAC  5809               	subwfb	___aldiv@dividend+3,w,c
  5978  003BAE  A0D8               	btfss	status,0,c
  5979  003BB0  D009               	goto	l9170
  5980  003BB2  500A               	movf	___aldiv@divisor,w,c
  5981  003BB4  5E06               	subwf	___aldiv@dividend,f,c
  5982  003BB6  500B               	movf	___aldiv@divisor+1,w,c
  5983  003BB8  5A07               	subwfb	___aldiv@dividend+1,f,c
  5984  003BBA  500C               	movf	___aldiv@divisor+2,w,c
  5985  003BBC  5A08               	subwfb	___aldiv@dividend+2,f,c
  5986  003BBE  500D               	movf	___aldiv@divisor+3,w,c
  5987  003BC0  5A09               	subwfb	___aldiv@dividend+3,f,c
  5988  003BC2  8010               	bsf	___aldiv@quotient,0,c
  5989  003BC4                     l9170:
  5990  003BC4  90D8               	bcf	status,0,c
  5991  003BC6  320D               	rrcf	___aldiv@divisor+3,f,c
  5992  003BC8  320C               	rrcf	___aldiv@divisor+2,f,c
  5993  003BCA  320B               	rrcf	___aldiv@divisor+1,f,c
  5994  003BCC  320A               	rrcf	___aldiv@divisor,f,c
  5995  003BCE  2E0E               	decfsz	___aldiv@counter,f,c
  5996  003BD0  D7E1               	goto	u10780
  5997  003BD2                     l9174:
  5998  003BD2  500F               	movf	___aldiv@sign,w,c
  5999  003BD4  B4D8               	btfsc	status,2,c
  6000  003BD6  D008               	goto	l9178
  6001  003BD8  1E13               	comf	___aldiv@quotient+3,f,c
  6002  003BDA  1E12               	comf	___aldiv@quotient+2,f,c
  6003  003BDC  1E11               	comf	___aldiv@quotient+1,f,c
  6004  003BDE  6C10               	negf	___aldiv@quotient,c
  6005  003BE0  0E00               	movlw	0
  6006  003BE2  2211               	addwfc	___aldiv@quotient+1,f,c
  6007  003BE4  2212               	addwfc	___aldiv@quotient+2,f,c
  6008  003BE6  2213               	addwfc	___aldiv@quotient+3,f,c
  6009  003BE8                     l9178:
  6010  003BE8  C010  F006         	movff	___aldiv@quotient,?___aldiv
  6011  003BEC  C011  F007         	movff	___aldiv@quotient+1,?___aldiv+1
  6012  003BF0  C012  F008         	movff	___aldiv@quotient+2,?___aldiv+2
  6013  003BF4  C013  F009         	movff	___aldiv@quotient+3,?___aldiv+3
  6014  003BF8  0012               	return		;funcret
  6015  003BFA                     __end_of___aldiv:
  6016                           	opt callstack 0
  6017                           
  6018 ;; *************** function _sendArduinoTireOperationStartMessage *****************
  6019 ;; Defined at:
  6020 ;;		line 609 in file "main.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  data            1    0        unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0, cstack
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;Total ram usage:        1 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    4
  6041 ;; This function calls:
  6042 ;;		_I2C_Master_Start
  6043 ;;		_I2C_Master_Stop
  6044 ;;		_I2C_Master_Write
  6045 ;; This function is called by:
  6046 ;;		_doOperation
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text11
  6051  0047BC                     __ptext11:
  6052                           	opt callstack 0
  6053  0047BC                     _sendArduinoTireOperationStartMessage:
  6054                           	opt callstack 25
  6055                           
  6056                           ;main.c: 616:     I2C_Master_Start();
  6057                           
  6058                           ;incstack = 0
  6059  0047BC  EC63  F024         	call	_I2C_Master_Start	;wreg free
  6060                           
  6061                           ;main.c: 617:     I2C_Master_Write(0b00010000);
  6062  0047C0  0E00               	movlw	0
  6063  0047C2  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6064  0047C4  0E10               	movlw	16
  6065  0047C6  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6066  0047C8  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6067                           
  6068                           ;main.c: 618:     I2C_Master_Write(data);
  6069  0047CC  0E00               	movlw	0
  6070  0047CE  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6071  0047D0  0E32               	movlw	50
  6072  0047D2  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6073  0047D4  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6074                           
  6075                           ;main.c: 619:     I2C_Master_Stop();
  6076  0047D8  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  6077  0047DC  0012               	return		;funcret
  6078  0047DE                     __end_of_sendArduinoTireOperationStartMessage:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _sendArduinoTireDropRequest *****************
  6082 ;; Defined at:
  6083 ;;		line 539 in file "main.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  data            1    0        unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;Total ram usage:        1 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    4
  6104 ;; This function calls:
  6105 ;;		_I2C_Master_Start
  6106 ;;		_I2C_Master_Stop
  6107 ;;		_I2C_Master_Write
  6108 ;; This function is called by:
  6109 ;;		_doOperation
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text12
  6114  0047DE                     __ptext12:
  6115                           	opt callstack 0
  6116  0047DE                     _sendArduinoTireDropRequest:
  6117                           	opt callstack 25
  6118                           
  6119                           ;main.c: 546:     I2C_Master_Start();
  6120                           
  6121                           ;incstack = 0
  6122  0047DE  EC63  F024         	call	_I2C_Master_Start	;wreg free
  6123                           
  6124                           ;main.c: 547:     I2C_Master_Write(0b00010000);
  6125  0047E2  0E00               	movlw	0
  6126  0047E4  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6127  0047E6  0E10               	movlw	16
  6128  0047E8  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6129  0047EA  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6130                           
  6131                           ;main.c: 548:     I2C_Master_Write(data);
  6132  0047EE  0E00               	movlw	0
  6133  0047F0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6134  0047F2  0E31               	movlw	49
  6135  0047F4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6136  0047F6  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6137                           
  6138                           ;main.c: 549:     I2C_Master_Stop();
  6139  0047FA  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  6140  0047FE  0012               	return		;funcret
  6141  004800                     __end_of_sendArduinoTireDropRequest:
  6142                           	opt callstack 0
  6143                           
  6144 ;; *************** function _sendArduinoAbortOperationMessage *****************
  6145 ;; Defined at:
  6146 ;;		line 651 in file "main.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  data            1    0        unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;Total ram usage:        1 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    4
  6167 ;; This function calls:
  6168 ;;		_I2C_Master_Start
  6169 ;;		_I2C_Master_Stop
  6170 ;;		_I2C_Master_Write
  6171 ;; This function is called by:
  6172 ;;		_doOperation
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text13
  6177  004800                     __ptext13:
  6178                           	opt callstack 0
  6179  004800                     _sendArduinoAbortOperationMessage:
  6180                           	opt callstack 25
  6181                           
  6182                           ;main.c: 658:     I2C_Master_Start();
  6183                           
  6184                           ;incstack = 0
  6185  004800  EC63  F024         	call	_I2C_Master_Start	;wreg free
  6186                           
  6187                           ;main.c: 659:     I2C_Master_Write(0b00010000);
  6188  004804  0E00               	movlw	0
  6189  004806  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6190  004808  0E10               	movlw	16
  6191  00480A  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6192  00480C  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6193                           
  6194                           ;main.c: 660:     I2C_Master_Write(data);
  6195  004810  0E00               	movlw	0
  6196  004812  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6197  004814  0E33               	movlw	51
  6198  004816  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6199  004818  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6200                           
  6201                           ;main.c: 661:     I2C_Master_Stop();
  6202  00481C  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  6203  004820  0012               	return		;funcret
  6204  004822                     __end_of_sendArduinoAbortOperationMessage:
  6205                           	opt callstack 0
  6206                           
  6207 ;; *************** function _requestIsTireDropDone *****************
  6208 ;; Defined at:
  6209 ;;		line 666 in file "main.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  data            1    8[COMRAM] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      _Bool 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;Total ram usage:        1 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    4
  6230 ;; This function calls:
  6231 ;;		_I2C_Master_Read
  6232 ;;		_I2C_Master_Start
  6233 ;;		_I2C_Master_Stop
  6234 ;;		_I2C_Master_Write
  6235 ;; This function is called by:
  6236 ;;		_doOperation
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text14
  6241  0046AA                     __ptext14:
  6242                           	opt callstack 0
  6243  0046AA                     _requestIsTireDropDone:
  6244                           	opt callstack 25
  6245                           
  6246                           ;main.c: 667:     I2C_Master_Start();
  6247                           
  6248                           ;incstack = 0
  6249  0046AA  EC63  F024         	call	_I2C_Master_Start	;wreg free
  6250                           
  6251                           ;main.c: 668:     I2C_Master_Write(0b00010001);
  6252  0046AE  0E00               	movlw	0
  6253  0046B0  6E08               	movwf	I2C_Master_Write@byteToWrite+1,c
  6254  0046B2  0E11               	movlw	17
  6255  0046B4  6E07               	movwf	I2C_Master_Write@byteToWrite,c
  6256  0046B6  EC55  F024         	call	_I2C_Master_Write	;wreg free
  6257                           
  6258                           ;main.c: 669:     unsigned char data = I2C_Master_Read(1);
  6259  0046BA  0E01               	movlw	1
  6260  0046BC  ECBB  F023         	call	_I2C_Master_Read
  6261  0046C0  6E09               	movwf	requestIsTireDropDone@data,c
  6262                           
  6263                           ;main.c: 670:     I2C_Master_Stop();
  6264  0046C2  EC5F  F024         	call	_I2C_Master_Stop	;wreg free
  6265                           
  6266                           ;main.c: 671:     if(data == '1'){
  6267  0046C6  0E31               	movlw	49
  6268  0046C8  1809               	xorwf	requestIsTireDropDone@data,w,c
  6269  0046CA  A4D8               	btfss	status,2,c
  6270  0046CC  D002               	goto	l9390
  6271                           
  6272                           ;main.c: 672:         return 1;
  6273  0046CE  0E01               	movlw	1
  6274  0046D0  0012               	return	
  6275  0046D2                     l9390:
  6276                           
  6277                           ;main.c: 674:     return 0;
  6278  0046D2  0E00               	movlw	0
  6279  0046D4  0012               	return		;funcret
  6280  0046D6                     __end_of_requestIsTireDropDone:
  6281                           	opt callstack 0
  6282                           
  6283 ;; *************** function _I2C_Master_Write *****************
  6284 ;; Defined at:
  6285 ;;		line 70 in file "I2C.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  byteToWrite     2    6[COMRAM] unsigned int 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;Total ram usage:        2 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    3
  6306 ;; This function calls:
  6307 ;;		_I2C_Master_Wait
  6308 ;; This function is called by:
  6309 ;;		_sendArduinoTireDropRequest
  6310 ;;		_sendArduinoStandbyClampRequest
  6311 ;;		_sendArduinoTireOperationStartMessage
  6312 ;;		_sendArduinoAbortOperationMessage
  6313 ;;		_requestIsTireDropDone
  6314 ;;		_doOperation
  6315 ;;		_main
  6316 ;;		_sendArduinoLogs
  6317 ;;		_rtc_set_time
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text15
  6322  0048AA                     __ptext15:
  6323                           	opt callstack 0
  6324  0048AA                     _I2C_Master_Write:
  6325                           	opt callstack 26
  6326                           
  6327                           ;I2C.c: 71:     I2C_Master_Wait();
  6328                           
  6329                           ;incstack = 0
  6330  0048AA  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6331                           
  6332                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  6333  0048AE  C007  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  6334  0048B2  0012               	return		;funcret
  6335  0048B4                     __end_of_I2C_Master_Write:
  6336                           	opt callstack 0
  6337                           
  6338 ;; *************** function _I2C_Master_Stop *****************
  6339 ;; Defined at:
  6340 ;;		line 65 in file "I2C.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    3
  6361 ;; This function calls:
  6362 ;;		_I2C_Master_Wait
  6363 ;; This function is called by:
  6364 ;;		_sendArduinoTireDropRequest
  6365 ;;		_sendArduinoStandbyClampRequest
  6366 ;;		_sendArduinoTireOperationStartMessage
  6367 ;;		_sendArduinoAbortOperationMessage
  6368 ;;		_requestIsTireDropDone
  6369 ;;		_doOperation
  6370 ;;		_main
  6371 ;;		_sendArduinoLogs
  6372 ;;		_rtc_set_time
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text16
  6377  0048BE                     __ptext16:
  6378                           	opt callstack 0
  6379  0048BE                     _I2C_Master_Stop:
  6380                           	opt callstack 26
  6381                           
  6382                           ;I2C.c: 66:     I2C_Master_Wait();
  6383                           
  6384                           ;incstack = 0
  6385  0048BE  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6386                           
  6387                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  6388  0048C2  84C5               	bsf	4037,2,c	;volatile
  6389  0048C4  0012               	return		;funcret
  6390  0048C6                     __end_of_I2C_Master_Stop:
  6391                           	opt callstack 0
  6392                           
  6393 ;; *************** function _I2C_Master_Start *****************
  6394 ;; Defined at:
  6395 ;;		line 55 in file "I2C.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    3
  6416 ;; This function calls:
  6417 ;;		_I2C_Master_Wait
  6418 ;; This function is called by:
  6419 ;;		_sendArduinoTireDropRequest
  6420 ;;		_sendArduinoStandbyClampRequest
  6421 ;;		_sendArduinoTireOperationStartMessage
  6422 ;;		_sendArduinoAbortOperationMessage
  6423 ;;		_requestIsTireDropDone
  6424 ;;		_doOperation
  6425 ;;		_main
  6426 ;;		_sendArduinoLogs
  6427 ;;		_rtc_set_time
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text17
  6432  0048C6                     __ptext17:
  6433                           	opt callstack 0
  6434  0048C6                     _I2C_Master_Start:
  6435                           	opt callstack 26
  6436                           
  6437                           ;I2C.c: 56:     I2C_Master_Wait();
  6438                           
  6439                           ;incstack = 0
  6440  0048C6  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6441                           
  6442                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  6443  0048CA  80C5               	bsf	4037,0,c	;volatile
  6444  0048CC  0012               	return		;funcret
  6445  0048CE                     __end_of_I2C_Master_Start:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _I2C_Master_Read *****************
  6449 ;; Defined at:
  6450 ;;		line 77 in file "I2C.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  ackBit          1    wreg     unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  ackBit          1    6[COMRAM] unsigned char 
  6455 ;;  receivedByte    1    7[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      unsigned char 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;Total ram usage:        2 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    3
  6472 ;; This function calls:
  6473 ;;		_I2C_Master_Wait
  6474 ;; This function is called by:
  6475 ;;		_requestIsTireDropDone
  6476 ;;		_main
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text18
  6481  004776                     __ptext18:
  6482                           	opt callstack 0
  6483  004776                     _I2C_Master_Read:
  6484                           	opt callstack 25
  6485                           
  6486                           ;incstack = 0
  6487                           ;I2C_Master_Read@ackBit stored from wreg
  6488  004776  6E07               	movwf	I2C_Master_Read@ackBit,c
  6489                           
  6490                           ;I2C.c: 78:     I2C_Master_Wait();
  6491  004778  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6492                           
  6493                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  6494  00477C  86C5               	bsf	4037,3,c	;volatile
  6495                           
  6496                           ;I2C.c: 81:     I2C_Master_Wait();
  6497  00477E  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6498                           
  6499                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  6500  004782  CFC9 F008          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  6501                           
  6502                           ;I2C.c: 86:     I2C_Master_Wait();
  6503  004786  EC37  F024         	call	_I2C_Master_Wait	;wreg free
  6504                           
  6505                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  6506  00478A  B007               	btfsc	I2C_Master_Read@ackBit,0,c
  6507  00478C  D002               	bra	u10665
  6508  00478E  9AC5               	bcf	4037,5,c	;volatile
  6509  004790  D001               	bra	u10666
  6510  004792                     u10665:
  6511  004792  8AC5               	bsf	4037,5,c	;volatile
  6512  004794                     u10666:
  6513                           
  6514                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  6515  004794  88C5               	bsf	4037,4,c	;volatile
  6516                           
  6517                           ;I2C.c: 90:     return receivedByte;
  6518  004796  5008               	movf	I2C_Master_Read@receivedByte,w,c
  6519  004798  0012               	return		;funcret
  6520  00479A                     __end_of_I2C_Master_Read:
  6521                           	opt callstack 0
  6522                           
  6523 ;; *************** function _I2C_Master_Wait *****************
  6524 ;; Defined at:
  6525 ;;		line 21 in file "I2C.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      void 
  6532 ;; Registers used:
  6533 ;;		wreg, status,2, status,0
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;Total ram usage:        1 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    2
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_I2C_Master_Start
  6550 ;;		_I2C_Master_Stop
  6551 ;;		_I2C_Master_Write
  6552 ;;		_I2C_Master_Read
  6553 ;;		_I2C_Master_RepeatedStart
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text19
  6558  00486E                     __ptext19:
  6559                           	opt callstack 0
  6560  00486E                     _I2C_Master_Wait:
  6561                           	opt callstack 26
  6562                           
  6563                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6564                           
  6565                           ;I2C.c: 28:     }
  6566                           
  6567                           ;incstack = 0
  6568  00486E  B4C7               	btfsc	4039,2,c	;volatile
  6569  004870  D7FE               	goto	_I2C_Master_Wait
  6570  004872  CFC5 F006          	movff	4037,??_I2C_Master_Wait	;volatile
  6571  004876  0E1F               	movlw	31
  6572  004878  1606               	andwf	??_I2C_Master_Wait,f,c
  6573  00487A  B4D8               	btfsc	status,2,c
  6574  00487C  0012               	return	
  6575  00487E  D7F7               	goto	_I2C_Master_Wait
  6576  004880                     __end_of_I2C_Master_Wait:
  6577                           	opt callstack 0
  6578                           
  6579 ;; *************** function _opErrorCorrectionDegrees *****************
  6580 ;; Defined at:
  6581 ;;		line 775 in file "main.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  goalSpeed       2   50[BANK0 ] int 
  6584 ;;  turnRatio       2   52[BANK0 ] int 
  6585 ;;  correctionCo    4   54[BANK0 ] float 
  6586 ;;  distanceDegr    4   58[BANK0 ] long 
  6587 ;;  maxOperation    4   62[BANK0 ] unsigned long 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  motorAStartD    4   79[BANK0 ] long 
  6590 ;;  motorBStartD    4   71[BANK0 ] long 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6600 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;Total ram usage:       33 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    6
  6607 ;; This function calls:
  6608 ;;		___xxtofl
  6609 ;;		_abs
  6610 ;;		_errorCorrectedMove
  6611 ;; This function is called by:
  6612 ;;		_doOperation
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text20
  6617  0038A2                     __ptext20:
  6618                           	opt callstack 0
  6619  0038A2                     _opErrorCorrectionDegrees:
  6620                           	opt callstack 23
  6621                           
  6622                           ;main.c: 776:     long motorAStartDistance = motorADistance;
  6623                           
  6624                           ;incstack = 0
  6625  0038A2  C0DB  F0CF         	movff	_motorADistance,opErrorCorrectionDegrees@motorAStartDistance	;volatile
  6626  0038A6  C0DC  F0D0         	movff	_motorADistance+1,opErrorCorrectionDegrees@motorAStartDistance+1	;volatile
  6627  0038AA  C0DD  F0D1         	movff	_motorADistance+2,opErrorCorrectionDegrees@motorAStartDistance+2	;volatile
  6628  0038AE  C0DE  F0D2         	movff	_motorADistance+3,opErrorCorrectionDegrees@motorAStartDistance+3	;volatile
  6629                           
  6630                           ;main.c: 777:     long motorBStartDistance = motorBDistance;
  6631  0038B2  C0D7  F0C7         	movff	_motorBDistance,opErrorCorrectionDegrees@motorBStartDistance	;volatile
  6632  0038B6  C0D8  F0C8         	movff	_motorBDistance+1,opErrorCorrectionDegrees@motorBStartDistance+1	;volatile
  6633  0038BA  C0D9  F0C9         	movff	_motorBDistance+2,opErrorCorrectionDegrees@motorBStartDistance+2	;volatile
  6634  0038BE  C0DA  F0CA         	movff	_motorBDistance+3,opErrorCorrectionDegrees@motorBStartDistance+3	;volatile
  6635                           
  6636                           ;main.c: 781:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  6637  0038C2  D03A               	goto	l9400
  6638  0038C4                     l9396:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;main.c: 782:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  6642  0038C4  C0B4  F006         	movff	opErrorCorrectionDegrees@turnRatio,___xxtofl@val
  6643  0038C8  C0B5  F007         	movff	opErrorCorrectionDegrees@turnRatio+1,___xxtofl@val+1
  6644  0038CC  0E00               	movlw	0
  6645  0038CE  BE07               	btfsc	___xxtofl@val+1,7,c
  6646  0038D0  0EFF               	movlw	-1
  6647  0038D2  6E08               	movwf	___xxtofl@val+2,c
  6648  0038D4  6E09               	movwf	___xxtofl@val+3,c
  6649  0038D6  0E01               	movlw	1
  6650  0038D8  EC4D  F019         	call	___xxtofl
  6651  0038DC  C006  F0CB         	movff	?___xxtofl,_opErrorCorrectionDegrees$2396
  6652  0038E0  C007  F0CC         	movff	?___xxtofl+1,_opErrorCorrectionDegrees$2396+1
  6653  0038E4  C008  F0CD         	movff	?___xxtofl+2,_opErrorCorrectionDegrees$2396+2
  6654  0038E8  C009  F0CE         	movff	?___xxtofl+3,_opErrorCorrectionDegrees$2396+3
  6655                           
  6656                           ;main.c: 782:         errorCorrectedMove(goalSpeed, turnRatio, motorAStartDistance, moto
      +                          rBStartDistance, correctionConstant);
  6657  0038EC  C0B2  F098         	movff	opErrorCorrectionDegrees@goalSpeed,errorCorrectedMove@goalSpeed
  6658  0038F0  C0B3  F099         	movff	opErrorCorrectionDegrees@goalSpeed+1,errorCorrectedMove@goalSpeed+1
  6659  0038F4  C0CB  F09A         	movff	_opErrorCorrectionDegrees$2396,errorCorrectedMove@turnRatio
  6660  0038F8  C0CC  F09B         	movff	_opErrorCorrectionDegrees$2396+1,errorCorrectedMove@turnRatio+1
  6661  0038FC  C0CD  F09C         	movff	_opErrorCorrectionDegrees$2396+2,errorCorrectedMove@turnRatio+2
  6662  003900  C0CE  F09D         	movff	_opErrorCorrectionDegrees$2396+3,errorCorrectedMove@turnRatio+3
  6663  003904  C0CF  F09E         	movff	opErrorCorrectionDegrees@motorAStartDistance,errorCorrectedMove@motorAStartDistan
      +                          ce
  6664  003908  C0D0  F09F         	movff	opErrorCorrectionDegrees@motorAStartDistance+1,errorCorrectedMove@motorAStartDist
      +                          ance+1
  6665  00390C  C0D1  F0A0         	movff	opErrorCorrectionDegrees@motorAStartDistance+2,errorCorrectedMove@motorAStartDist
      +                          ance+2
  6666  003910  C0D2  F0A1         	movff	opErrorCorrectionDegrees@motorAStartDistance+3,errorCorrectedMove@motorAStartDist
      +                          ance+3
  6667  003914  C0C7  F0A2         	movff	opErrorCorrectionDegrees@motorBStartDistance,errorCorrectedMove@motorBStartDistan
      +                          ce
  6668  003918  C0C8  F0A3         	movff	opErrorCorrectionDegrees@motorBStartDistance+1,errorCorrectedMove@motorBStartDist
      +                          ance+1
  6669  00391C  C0C9  F0A4         	movff	opErrorCorrectionDegrees@motorBStartDistance+2,errorCorrectedMove@motorBStartDist
      +                          ance+2
  6670  003920  C0CA  F0A5         	movff	opErrorCorrectionDegrees@motorBStartDistance+3,errorCorrectedMove@motorBStartDist
      +                          ance+3
  6671  003924  C0B6  F0A6         	movff	opErrorCorrectionDegrees@correctionConstant,errorCorrectedMove@correctionConstant
  6672  003928  C0B7  F0A7         	movff	opErrorCorrectionDegrees@correctionConstant+1,errorCorrectedMove@correctionConsta
      +                          nt+1
  6673  00392C  C0B8  F0A8         	movff	opErrorCorrectionDegrees@correctionConstant+2,errorCorrectedMove@correctionConsta
      +                          nt+2
  6674  003930  C0B9  F0A9         	movff	opErrorCorrectionDegrees@correctionConstant+3,errorCorrectedMove@correctionConsta
      +                          nt+3
  6675  003934  EC66  F013         	call	_errorCorrectedMove	;wreg free
  6676  003938                     l9400:
  6677                           
  6678                           ;main.c: 781:     while (millisecondsMeasured < maxOperationTime && abs(motorADistance -
      +                           motorAStartDistance) < distanceDegrees){
  6679  003938  0100               	movlb	0	; () banked
  6680  00393A  51BE               	movf	opErrorCorrectionDegrees@maxOperationTime& (0+255),w,b
  6681  00393C  5C74               	subwf	_millisecondsMeasured,w,c	;volatile
  6682  00393E  51BF               	movf	(opErrorCorrectionDegrees@maxOperationTime+1)& (0+255),w,b
  6683  003940  5875               	subwfb	_millisecondsMeasured+1,w,c	;volatile
  6684  003942  51C0               	movf	(opErrorCorrectionDegrees@maxOperationTime+2)& (0+255),w,b
  6685  003944  5876               	subwfb	_millisecondsMeasured+2,w,c	;volatile
  6686  003946  51C1               	movf	(opErrorCorrectionDegrees@maxOperationTime+3)& (0+255),w,b
  6687  003948  5877               	subwfb	_millisecondsMeasured+3,w,c	;volatile
  6688  00394A  B0D8               	btfsc	status,0,c
  6689  00394C  0012               	return	
  6690                           
  6691                           ; BSR set to: 0
  6692  00394E  51CF               	movf	opErrorCorrectionDegrees@motorAStartDistance& (0+255),w,b
  6693  003950  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  6694  003952  6E18               	movwf	abs@a,c
  6695  003954  51D0               	movf	(opErrorCorrectionDegrees@motorAStartDistance+1)& (0+255),w,b
  6696  003956  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  6697  003958  6E19               	movwf	abs@a+1,c
  6698  00395A  ECF4  F022         	call	_abs	;wreg free
  6699  00395E  C018  F0C2         	movff	?_abs,??_opErrorCorrectionDegrees
  6700  003962  C019  F0C3         	movff	?_abs+1,??_opErrorCorrectionDegrees+1
  6701  003966  0E00               	movlw	0
  6702  003968  0100               	movlb	0	; () banked
  6703  00396A  BFC3               	btfsc	(??_opErrorCorrectionDegrees+1)& (0+255),7,b
  6704  00396C  0EFF               	movlw	255
  6705  00396E  6FC4               	movwf	(??_opErrorCorrectionDegrees+2)& (0+255),b
  6706  003970  6FC5               	movwf	(??_opErrorCorrectionDegrees+3)& (0+255),b
  6707  003972  51BA               	movf	opErrorCorrectionDegrees@distanceDegrees& (0+255),w,b
  6708  003974  5DC2               	subwf	??_opErrorCorrectionDegrees& (0+255),w,b
  6709  003976  51BB               	movf	(opErrorCorrectionDegrees@distanceDegrees+1)& (0+255),w,b
  6710  003978  59C3               	subwfb	(??_opErrorCorrectionDegrees+1)& (0+255),w,b
  6711  00397A  51BC               	movf	(opErrorCorrectionDegrees@distanceDegrees+2)& (0+255),w,b
  6712  00397C  59C4               	subwfb	(??_opErrorCorrectionDegrees+2)& (0+255),w,b
  6713  00397E  51C5               	movf	(??_opErrorCorrectionDegrees+3)& (0+255),w,b
  6714  003980  0A80               	xorlw	128
  6715  003982  6FC6               	movwf	(??_opErrorCorrectionDegrees+4)& (0+255),b
  6716  003984  51BD               	movf	(opErrorCorrectionDegrees@distanceDegrees+3)& (0+255),w,b
  6717  003986  0A80               	xorlw	128
  6718  003988  59C6               	subwfb	(??_opErrorCorrectionDegrees+4)& (0+255),w,b
  6719  00398A  B0D8               	btfsc	status,0,c
  6720  00398C  0012               	return	
  6721  00398E  D79A               	goto	l9396
  6722  003990                     __end_of_opErrorCorrectionDegrees:
  6723                           	opt callstack 0
  6724                           
  6725 ;; *************** function _errorCorrectedMove *****************
  6726 ;; Defined at:
  6727 ;;		line 721 in file "main.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  goalSpeed       2   24[BANK0 ] int 
  6730 ;;  turnRatio       4   26[BANK0 ] float 
  6731 ;;  motorAStartD    4   30[BANK0 ] long 
  6732 ;;  motorBStartD    4   34[BANK0 ] long 
  6733 ;;  correctionCo    4   38[BANK0 ] float 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  error           4   42[BANK0 ] long 
  6736 ;;  BSpeed          2   48[BANK0 ] int 
  6737 ;;  ASpeed          2   46[BANK0 ] int 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:       26 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    5
  6754 ;; This function calls:
  6755 ;;		___fladd
  6756 ;;		___fldiv
  6757 ;;		___flmul
  6758 ;;		___flsub
  6759 ;;		___fltol
  6760 ;;		___xxtofl
  6761 ;;		_setMotorSpeeds
  6762 ;; This function is called by:
  6763 ;;		_opErrorCorrectionDegrees
  6764 ;;		_doOperation
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text21
  6769  0026CC                     __ptext21:
  6770                           	opt callstack 0
  6771  0026CC                     _errorCorrectedMove:
  6772                           	opt callstack 23
  6773                           
  6774                           ;main.c: 722:     long error = (long)((motorADistance - motorAStartDistance)-(motorBDist
      +                          ance - motorBStartDistance)/(double)turnRatio);
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;incstack = 0
  6778  0026CC  C09A  F018         	movff	errorCorrectedMove@turnRatio,___fldiv@a
  6779  0026D0  C09B  F019         	movff	errorCorrectedMove@turnRatio+1,___fldiv@a+1
  6780  0026D4  C09C  F01A         	movff	errorCorrectedMove@turnRatio+2,___fldiv@a+2
  6781  0026D8  C09D  F01B         	movff	errorCorrectedMove@turnRatio+3,___fldiv@a+3
  6782  0026DC  0100               	movlb	0	; () banked
  6783  0026DE  51A2               	movf	errorCorrectedMove@motorBStartDistance& (0+255),w,b
  6784  0026E0  5DD7               	subwf	_motorBDistance& (0+255),w,b	;volatile
  6785  0026E2  6E06               	movwf	___xxtofl@val,c
  6786  0026E4  51A3               	movf	(errorCorrectedMove@motorBStartDistance+1)& (0+255),w,b
  6787  0026E6  59D8               	subwfb	(_motorBDistance+1)& (0+255),w,b	;volatile
  6788  0026E8  6E07               	movwf	___xxtofl@val+1,c
  6789  0026EA  51A4               	movf	(errorCorrectedMove@motorBStartDistance+2)& (0+255),w,b
  6790  0026EC  59D9               	subwfb	(_motorBDistance+2)& (0+255),w,b	;volatile
  6791  0026EE  6E08               	movwf	___xxtofl@val+2,c
  6792  0026F0  51A5               	movf	(errorCorrectedMove@motorBStartDistance+3)& (0+255),w,b
  6793  0026F2  59DA               	subwfb	(_motorBDistance+3)& (0+255),w,b	;volatile
  6794  0026F4  6E09               	movwf	___xxtofl@val+3,c
  6795  0026F6  0E01               	movlw	1
  6796  0026F8  EC4D  F019         	call	___xxtofl
  6797  0026FC  C006  F014         	movff	?___xxtofl,___fldiv@b
  6798  002700  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  6799  002704  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  6800  002708  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  6801  00270C  EC22  F012         	call	___fldiv	;wreg free
  6802  002710  C014  F05A         	movff	?___fldiv,___flsub@a
  6803  002714  C015  F05B         	movff	?___fldiv+1,___flsub@a+1
  6804  002718  C016  F05C         	movff	?___fldiv+2,___flsub@a+2
  6805  00271C  C017  F05D         	movff	?___fldiv+3,___flsub@a+3
  6806  002720  0100               	movlb	0	; () banked
  6807  002722  519E               	movf	errorCorrectedMove@motorAStartDistance& (0+255),w,b
  6808  002724  5DDB               	subwf	_motorADistance& (0+255),w,b	;volatile
  6809  002726  6E06               	movwf	___xxtofl@val,c
  6810  002728  519F               	movf	(errorCorrectedMove@motorAStartDistance+1)& (0+255),w,b
  6811  00272A  59DC               	subwfb	(_motorADistance+1)& (0+255),w,b	;volatile
  6812  00272C  6E07               	movwf	___xxtofl@val+1,c
  6813  00272E  51A0               	movf	(errorCorrectedMove@motorAStartDistance+2)& (0+255),w,b
  6814  002730  59DD               	subwfb	(_motorADistance+2)& (0+255),w,b	;volatile
  6815  002732  6E08               	movwf	___xxtofl@val+2,c
  6816  002734  51A1               	movf	(errorCorrectedMove@motorAStartDistance+3)& (0+255),w,b
  6817  002736  59DE               	subwfb	(_motorADistance+3)& (0+255),w,b	;volatile
  6818  002738  6E09               	movwf	___xxtofl@val+3,c
  6819  00273A  0E01               	movlw	1
  6820  00273C  EC4D  F019         	call	___xxtofl
  6821  002740  C006  F056         	movff	?___xxtofl,___flsub@b
  6822  002744  C007  F057         	movff	?___xxtofl+1,___flsub@b+1
  6823  002748  C008  F058         	movff	?___xxtofl+2,___flsub@b+2
  6824  00274C  C009  F059         	movff	?___xxtofl+3,___flsub@b+3
  6825  002750  EC15  F022         	call	___flsub	;wreg free
  6826  002754  C056  F05E         	movff	?___flsub,___fltol@f1
  6827  002758  C057  F05F         	movff	?___flsub+1,___fltol@f1+1
  6828  00275C  C058  F060         	movff	?___flsub+2,___fltol@f1+2
  6829  002760  C059  F061         	movff	?___flsub+3,___fltol@f1+3
  6830  002764  ECFD  F01D         	call	___fltol	;wreg free
  6831  002768  C05E  F0AA         	movff	?___fltol,errorCorrectedMove@error
  6832  00276C  C05F  F0AB         	movff	?___fltol+1,errorCorrectedMove@error+1
  6833  002770  C060  F0AC         	movff	?___fltol+2,errorCorrectedMove@error+2
  6834  002774  C061  F0AD         	movff	?___fltol+3,errorCorrectedMove@error+3
  6835                           
  6836                           ;main.c: 723:     int ASpeed = (int)(goalSpeed - error*correctionConstant);
  6837  002778  C0A6  F031         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  6838  00277C  C0A7  F032         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  6839  002780  C0A8  F033         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  6840  002784  C0A9  F034         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  6841  002788  C0AA  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  6842  00278C  C0AB  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  6843  002790  C0AC  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  6844  002794  C0AD  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  6845  002798  0E01               	movlw	1
  6846  00279A  EC4D  F019         	call	___xxtofl
  6847  00279E  C006  F02D         	movff	?___xxtofl,___flmul@b
  6848  0027A2  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  6849  0027A6  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  6850  0027AA  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  6851  0027AE  ECF3  F00E         	call	___flmul	;wreg free
  6852  0027B2  C02D  F05A         	movff	?___flmul,___flsub@a
  6853  0027B6  C02E  F05B         	movff	?___flmul+1,___flsub@a+1
  6854  0027BA  C02F  F05C         	movff	?___flmul+2,___flsub@a+2
  6855  0027BE  C030  F05D         	movff	?___flmul+3,___flsub@a+3
  6856  0027C2  C098  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  6857  0027C6  C099  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  6858  0027CA  0E00               	movlw	0
  6859  0027CC  BE07               	btfsc	___xxtofl@val+1,7,c
  6860  0027CE  0EFF               	movlw	-1
  6861  0027D0  6E08               	movwf	___xxtofl@val+2,c
  6862  0027D2  6E09               	movwf	___xxtofl@val+3,c
  6863  0027D4  0E01               	movlw	1
  6864  0027D6  EC4D  F019         	call	___xxtofl
  6865  0027DA  C006  F056         	movff	?___xxtofl,___flsub@b
  6866  0027DE  C007  F057         	movff	?___xxtofl+1,___flsub@b+1
  6867  0027E2  C008  F058         	movff	?___xxtofl+2,___flsub@b+2
  6868  0027E6  C009  F059         	movff	?___xxtofl+3,___flsub@b+3
  6869  0027EA  EC15  F022         	call	___flsub	;wreg free
  6870  0027EE  C056  F05E         	movff	?___flsub,___fltol@f1
  6871  0027F2  C057  F05F         	movff	?___flsub+1,___fltol@f1+1
  6872  0027F6  C058  F060         	movff	?___flsub+2,___fltol@f1+2
  6873  0027FA  C059  F061         	movff	?___flsub+3,___fltol@f1+3
  6874  0027FE  ECFD  F01D         	call	___fltol	;wreg free
  6875  002802  C05E  F0AE         	movff	?___fltol,errorCorrectedMove@ASpeed
  6876  002806  C05F  F0AF         	movff	?___fltol+1,errorCorrectedMove@ASpeed+1
  6877                           
  6878                           ;main.c: 724:     int BSpeed = (int)(goalSpeed*turnRatio + error*correctionConstant);
  6879  00280A  C0A6  F031         	movff	errorCorrectedMove@correctionConstant,___flmul@a
  6880  00280E  C0A7  F032         	movff	errorCorrectedMove@correctionConstant+1,___flmul@a+1
  6881  002812  C0A8  F033         	movff	errorCorrectedMove@correctionConstant+2,___flmul@a+2
  6882  002816  C0A9  F034         	movff	errorCorrectedMove@correctionConstant+3,___flmul@a+3
  6883  00281A  C0AA  F006         	movff	errorCorrectedMove@error,___xxtofl@val
  6884  00281E  C0AB  F007         	movff	errorCorrectedMove@error+1,___xxtofl@val+1
  6885  002822  C0AC  F008         	movff	errorCorrectedMove@error+2,___xxtofl@val+2
  6886  002826  C0AD  F009         	movff	errorCorrectedMove@error+3,___xxtofl@val+3
  6887  00282A  0E01               	movlw	1
  6888  00282C  EC4D  F019         	call	___xxtofl
  6889  002830  C006  F02D         	movff	?___xxtofl,___flmul@b
  6890  002834  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  6891  002838  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  6892  00283C  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  6893  002840  ECF3  F00E         	call	___flmul	;wreg free
  6894  002844  C02D  F04A         	movff	?___flmul,___fladd@a
  6895  002848  C02E  F04B         	movff	?___flmul+1,___fladd@a+1
  6896  00284C  C02F  F04C         	movff	?___flmul+2,___fladd@a+2
  6897  002850  C030  F04D         	movff	?___flmul+3,___fladd@a+3
  6898  002854  C09A  F031         	movff	errorCorrectedMove@turnRatio,___flmul@a
  6899  002858  C09B  F032         	movff	errorCorrectedMove@turnRatio+1,___flmul@a+1
  6900  00285C  C09C  F033         	movff	errorCorrectedMove@turnRatio+2,___flmul@a+2
  6901  002860  C09D  F034         	movff	errorCorrectedMove@turnRatio+3,___flmul@a+3
  6902  002864  C098  F006         	movff	errorCorrectedMove@goalSpeed,___xxtofl@val
  6903  002868  C099  F007         	movff	errorCorrectedMove@goalSpeed+1,___xxtofl@val+1
  6904  00286C  0E00               	movlw	0
  6905  00286E  BE07               	btfsc	___xxtofl@val+1,7,c
  6906  002870  0EFF               	movlw	-1
  6907  002872  6E08               	movwf	___xxtofl@val+2,c
  6908  002874  6E09               	movwf	___xxtofl@val+3,c
  6909  002876  0E01               	movlw	1
  6910  002878  EC4D  F019         	call	___xxtofl
  6911  00287C  C006  F02D         	movff	?___xxtofl,___flmul@b
  6912  002880  C007  F02E         	movff	?___xxtofl+1,___flmul@b+1
  6913  002884  C008  F02F         	movff	?___xxtofl+2,___flmul@b+2
  6914  002888  C009  F030         	movff	?___xxtofl+3,___flmul@b+3
  6915  00288C  ECF3  F00E         	call	___flmul	;wreg free
  6916  002890  C02D  F046         	movff	?___flmul,___fladd@b
  6917  002894  C02E  F047         	movff	?___flmul+1,___fladd@b+1
  6918  002898  C02F  F048         	movff	?___flmul+2,___fladd@b+2
  6919  00289C  C030  F049         	movff	?___flmul+3,___fladd@b+3
  6920  0028A0  EC9C  F010         	call	___fladd	;wreg free
  6921  0028A4  C046  F05E         	movff	?___fladd,___fltol@f1
  6922  0028A8  C047  F05F         	movff	?___fladd+1,___fltol@f1+1
  6923  0028AC  C048  F060         	movff	?___fladd+2,___fltol@f1+2
  6924  0028B0  C049  F061         	movff	?___fladd+3,___fltol@f1+3
  6925  0028B4  ECFD  F01D         	call	___fltol	;wreg free
  6926  0028B8  C05E  F0B0         	movff	?___fltol,errorCorrectedMove@BSpeed
  6927  0028BC  C05F  F0B1         	movff	?___fltol+1,errorCorrectedMove@BSpeed+1
  6928                           
  6929                           ;main.c: 726:     if (ASpeed > 100){
  6930  0028C0  0100               	movlb	0	; () banked
  6931  0028C2  BFAF               	btfsc	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  6932  0028C4  D00A               	goto	l9092
  6933  0028C6  51AF               	movf	(errorCorrectedMove@ASpeed+1)& (0+255),w,b
  6934  0028C8  E104               	bnz	u10670
  6935  0028CA  0E65               	movlw	101
  6936  0028CC  5DAE               	subwf	errorCorrectedMove@ASpeed& (0+255),w,b
  6937  0028CE  A0D8               	btfss	status,0,c
  6938  0028D0  D004               	goto	l9092
  6939  0028D2                     u10670:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;main.c: 727:         ASpeed = 100;
  6943  0028D2  0E00               	movlw	0
  6944  0028D4  6FAF               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6945  0028D6  0E64               	movlw	100
  6946  0028D8  6FAE               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6947  0028DA                     l9092:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;main.c: 729:     if (ASpeed < 0){
  6951  0028DA  AFAF               	btfss	(errorCorrectedMove@ASpeed+1)& (0+255),7,b
  6952  0028DC  D004               	goto	l9096
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;main.c: 730:         ASpeed = 0;
  6956  0028DE  0E00               	movlw	0
  6957  0028E0  6FAF               	movwf	(errorCorrectedMove@ASpeed+1)& (0+255),b
  6958  0028E2  0E00               	movlw	0
  6959  0028E4  6FAE               	movwf	errorCorrectedMove@ASpeed& (0+255),b
  6960  0028E6                     l9096:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;main.c: 732:     if (BSpeed > 100){
  6964  0028E6  BFB1               	btfsc	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6965  0028E8  D00A               	goto	l9100
  6966  0028EA  51B1               	movf	(errorCorrectedMove@BSpeed+1)& (0+255),w,b
  6967  0028EC  E104               	bnz	u10690
  6968  0028EE  0E65               	movlw	101
  6969  0028F0  5DB0               	subwf	errorCorrectedMove@BSpeed& (0+255),w,b
  6970  0028F2  A0D8               	btfss	status,0,c
  6971  0028F4  D004               	goto	l9100
  6972  0028F6                     u10690:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;main.c: 733:         BSpeed = 100;
  6976  0028F6  0E00               	movlw	0
  6977  0028F8  6FB1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6978  0028FA  0E64               	movlw	100
  6979  0028FC  6FB0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6980  0028FE                     l9100:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;main.c: 735:     if (BSpeed < 0){
  6984  0028FE  AFB1               	btfss	(errorCorrectedMove@BSpeed+1)& (0+255),7,b
  6985  002900  D004               	goto	l9104
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;main.c: 736:         BSpeed = 0;
  6989  002902  0E00               	movlw	0
  6990  002904  6FB1               	movwf	(errorCorrectedMove@BSpeed+1)& (0+255),b
  6991  002906  0E00               	movlw	0
  6992  002908  6FB0               	movwf	errorCorrectedMove@BSpeed& (0+255),b
  6993  00290A                     l9104:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;main.c: 739:     setMotorSpeeds(ASpeed , 1, 1, BSpeed);
  6997  00290A  C0AE  F08A         	movff	errorCorrectedMove@ASpeed,setMotorSpeeds@motorASpeed
  6998  00290E  C0AF  F08B         	movff	errorCorrectedMove@ASpeed+1,setMotorSpeeds@motorASpeed+1
  6999  002912  0E01               	movlw	1
  7000  002914  6F8C               	movwf	setMotorSpeeds@Aforward& (0+255),b
  7001  002916  0E01               	movlw	1
  7002  002918  6F8D               	movwf	setMotorSpeeds@Bforward& (0+255),b
  7003  00291A  C0B0  F08E         	movff	errorCorrectedMove@BSpeed,setMotorSpeeds@motorBSpeed
  7004  00291E  C0B1  F08F         	movff	errorCorrectedMove@BSpeed+1,setMotorSpeeds@motorBSpeed+1
  7005  002922  EC06  F01F         	call	_setMotorSpeeds	;wreg free
  7006  002926  0012               	return		;funcret
  7007  002928                     __end_of_errorCorrectedMove:
  7008                           	opt callstack 0
  7009                           
  7010 ;; *************** function _setMotorSpeeds *****************
  7011 ;; Defined at:
  7012 ;;		line 435 in file "main.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  motorASpeed     2   10[BANK0 ] int 
  7015 ;;  Aforward        1   12[BANK0 ] _Bool 
  7016 ;;  Bforward        1   13[BANK0 ] _Bool 
  7017 ;;  motorBSpeed     2   14[BANK0 ] int 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;		None
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7029 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7033 ;;Total ram usage:       14 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; Hardware stack levels required when called:    4
  7036 ;; This function calls:
  7037 ;;		___xxtofl
  7038 ;;		_set_pwm_duty_cycle
  7039 ;; This function is called by:
  7040 ;;		_tirePositioning
  7041 ;;		_errorCorrectedMove
  7042 ;;		_doOperation
  7043 ;;		_PIDCorrectedMove
  7044 ;;		_errorCorrectedMoveAccelerate
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text22
  7049  003E0C                     __ptext22:
  7050                           	opt callstack 0
  7051  003E0C                     _setMotorSpeeds:
  7052                           	opt callstack 24
  7053                           
  7054                           ;main.c: 436:     if (Aforward){
  7055                           
  7056                           ;incstack = 0
  7057  003E0C  0100               	movlb	0	; () banked
  7058  003E0E  518C               	movf	setMotorSpeeds@Aforward& (0+255),w,b
  7059  003E10  B4D8               	btfsc	status,2,c
  7060  003E12  D003               	goto	l286
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;main.c: 437:         LATAbits.LATA0 = 1;
  7064  003E14  8089               	bsf	3977,0,c	;volatile
  7065                           
  7066                           ;main.c: 438:         LATAbits.LATA1 = 0;
  7067  003E16  9289               	bcf	3977,1,c	;volatile
  7068                           
  7069                           ;main.c: 439:     } else {
  7070  003E18  D002               	goto	l8854
  7071  003E1A                     l286:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;main.c: 440:         LATAbits.LATA0 = 0;
  7075  003E1A  9089               	bcf	3977,0,c	;volatile
  7076                           
  7077                           ;main.c: 441:         LATAbits.LATA1 = 1;
  7078  003E1C  8289               	bsf	3977,1,c	;volatile
  7079  003E1E                     l8854:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;main.c: 443:     if (Bforward){
  7083  003E1E  518D               	movf	setMotorSpeeds@Bforward& (0+255),w,b
  7084  003E20  B4D8               	btfsc	status,2,c
  7085  003E22  D003               	goto	l288
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;main.c: 444:         LATAbits.LATA2 = 1;
  7089  003E24  8489               	bsf	3977,2,c	;volatile
  7090                           
  7091                           ;main.c: 445:         LATAbits.LATA3 = 0;
  7092  003E26  9689               	bcf	3977,3,c	;volatile
  7093                           
  7094                           ;main.c: 446:     } else {
  7095  003E28  D002               	goto	l8858
  7096  003E2A                     l288:
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;main.c: 447:         LATAbits.LATA2 = 0;
  7100  003E2A  9489               	bcf	3977,2,c	;volatile
  7101                           
  7102                           ;main.c: 448:         LATAbits.LATA3 = 1;
  7103  003E2C  8689               	bsf	3977,3,c	;volatile
  7104  003E2E                     l8858:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;main.c: 451:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7108  003E2E  C08A  F006         	movff	setMotorSpeeds@motorASpeed,___xxtofl@val
  7109  003E32  C08B  F007         	movff	setMotorSpeeds@motorASpeed+1,___xxtofl@val+1
  7110  003E36  0E00               	movlw	0
  7111  003E38  BE07               	btfsc	___xxtofl@val+1,7,c
  7112  003E3A  0EFF               	movlw	-1
  7113  003E3C  6E08               	movwf	___xxtofl@val+2,c
  7114  003E3E  6E09               	movwf	___xxtofl@val+3,c
  7115  003E40  0E01               	movlw	1
  7116  003E42  EC4D  F019         	call	___xxtofl
  7117  003E46  C006  F090         	movff	?___xxtofl,_setMotorSpeeds$2393
  7118  003E4A  C007  F091         	movff	?___xxtofl+1,_setMotorSpeeds$2393+1
  7119  003E4E  C008  F092         	movff	?___xxtofl+2,_setMotorSpeeds$2393+2
  7120  003E52  C009  F093         	movff	?___xxtofl+3,_setMotorSpeeds$2393+3
  7121                           
  7122                           ;main.c: 451:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7123  003E56  C08E  F006         	movff	setMotorSpeeds@motorBSpeed,___xxtofl@val
  7124  003E5A  C08F  F007         	movff	setMotorSpeeds@motorBSpeed+1,___xxtofl@val+1
  7125  003E5E  0E00               	movlw	0
  7126  003E60  BE07               	btfsc	___xxtofl@val+1,7,c
  7127  003E62  0EFF               	movlw	-1
  7128  003E64  6E08               	movwf	___xxtofl@val+2,c
  7129  003E66  6E09               	movwf	___xxtofl@val+3,c
  7130  003E68  0E01               	movlw	1
  7131  003E6A  EC4D  F019         	call	___xxtofl
  7132  003E6E  C006  F094         	movff	?___xxtofl,_setMotorSpeeds$2394
  7133  003E72  C007  F095         	movff	?___xxtofl+1,_setMotorSpeeds$2394+1
  7134  003E76  C008  F096         	movff	?___xxtofl+2,_setMotorSpeeds$2394+2
  7135  003E7A  C009  F097         	movff	?___xxtofl+3,_setMotorSpeeds$2394+3
  7136                           
  7137                           ;main.c: 451:     set_pwm_duty_cycle((float) motorASpeed, (float) motorBSpeed);
  7138  003E7E  C090  F068         	movff	_setMotorSpeeds$2393,set_pwm_duty_cycle@dutyA
  7139  003E82  C091  F069         	movff	_setMotorSpeeds$2393+1,set_pwm_duty_cycle@dutyA+1
  7140  003E86  C092  F06A         	movff	_setMotorSpeeds$2393+2,set_pwm_duty_cycle@dutyA+2
  7141  003E8A  C093  F06B         	movff	_setMotorSpeeds$2393+3,set_pwm_duty_cycle@dutyA+3
  7142  003E8E  C094  F06C         	movff	_setMotorSpeeds$2394,set_pwm_duty_cycle@dutyB
  7143  003E92  C095  F06D         	movff	_setMotorSpeeds$2394+1,set_pwm_duty_cycle@dutyB+1
  7144  003E96  C096  F06E         	movff	_setMotorSpeeds$2394+2,set_pwm_duty_cycle@dutyB+2
  7145  003E9A  C097  F06F         	movff	_setMotorSpeeds$2394+3,set_pwm_duty_cycle@dutyB+3
  7146  003E9E  ECCD  F016         	call	_set_pwm_duty_cycle	;wreg free
  7147  003EA2  0012               	return		;funcret
  7148  003EA4                     __end_of_setMotorSpeeds:
  7149                           	opt callstack 0
  7150                           
  7151 ;; *************** function _set_pwm_duty_cycle *****************
  7152 ;; Defined at:
  7153 ;;		line 405 in file "main.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  dutyA           4  103[COMRAM] float 
  7156 ;;  dutyB           4  107[COMRAM] float 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  duty_valB       2    4[BANK0 ] unsigned short 
  7159 ;;  duty_valA       2    2[BANK0 ] unsigned short 
  7160 ;;  max_duty_val    2    0[BANK0 ] unsigned short 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:       20 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    3
  7177 ;; This function calls:
  7178 ;;		___fldiv
  7179 ;;		___flge
  7180 ;;		___flmul
  7181 ;;		___fltol
  7182 ;;		___xxtofl
  7183 ;; This function is called by:
  7184 ;;		_setMotorSpeeds
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text23
  7189  002D9A                     __ptext23:
  7190                           	opt callstack 0
  7191  002D9A                     _set_pwm_duty_cycle:
  7192                           	opt callstack 24
  7193                           
  7194                           ;main.c: 406:     if((dutyA >= 0) && (dutyA <= 100.0) && (dutyB >= 0) && (dutyB <= 100.0
      +                          )){
  7195                           
  7196                           ;incstack = 0
  7197  002D9A  BE6B               	btfsc	set_pwm_duty_cycle@dutyA+3,7,c
  7198  002D9C  0012               	return	
  7199  002D9E  0E00               	movlw	0
  7200  002DA0  6E14               	movwf	___flge@ff1,c
  7201  002DA2  0E00               	movlw	0
  7202  002DA4  6E15               	movwf	___flge@ff1+1,c
  7203  002DA6  0EC8               	movlw	200
  7204  002DA8  6E16               	movwf	___flge@ff1+2,c
  7205  002DAA  0E42               	movlw	66
  7206  002DAC  6E17               	movwf	___flge@ff1+3,c
  7207  002DAE  C068  F018         	movff	set_pwm_duty_cycle@dutyA,___flge@ff2
  7208  002DB2  C069  F019         	movff	set_pwm_duty_cycle@dutyA+1,___flge@ff2+1
  7209  002DB6  C06A  F01A         	movff	set_pwm_duty_cycle@dutyA+2,___flge@ff2+2
  7210  002DBA  C06B  F01B         	movff	set_pwm_duty_cycle@dutyA+3,___flge@ff2+3
  7211  002DBE  ECC8  F01C         	call	___flge	;wreg free
  7212  002DC2  A0D8               	btfss	status,0,c
  7213  002DC4  0012               	return	
  7214  002DC6  BE6F               	btfsc	set_pwm_duty_cycle@dutyB+3,7,c
  7215  002DC8  0012               	return	
  7216  002DCA  0E00               	movlw	0
  7217  002DCC  6E14               	movwf	___flge@ff1,c
  7218  002DCE  0E00               	movlw	0
  7219  002DD0  6E15               	movwf	___flge@ff1+1,c
  7220  002DD2  0EC8               	movlw	200
  7221  002DD4  6E16               	movwf	___flge@ff1+2,c
  7222  002DD6  0E42               	movlw	66
  7223  002DD8  6E17               	movwf	___flge@ff1+3,c
  7224  002DDA  C06C  F018         	movff	set_pwm_duty_cycle@dutyB,___flge@ff2
  7225  002DDE  C06D  F019         	movff	set_pwm_duty_cycle@dutyB+1,___flge@ff2+1
  7226  002DE2  C06E  F01A         	movff	set_pwm_duty_cycle@dutyB+2,___flge@ff2+2
  7227  002DE6  C06F  F01B         	movff	set_pwm_duty_cycle@dutyB+3,___flge@ff2+3
  7228  002DEA  ECC8  F01C         	call	___flge	;wreg free
  7229  002DEE  A0D8               	btfss	status,0,c
  7230  002DF0  0012               	return	
  7231                           
  7232                           ;main.c: 411:         unsigned short max_duty_val = PR2 + 1;
  7233  002DF2  0E01               	movlw	1
  7234  002DF4  24CB               	addwf	4043,w,c	;volatile
  7235  002DF6  0100               	movlb	0	; () banked
  7236  002DF8  6F80               	movwf	set_pwm_duty_cycle@max_duty_val& (0+255),b
  7237  002DFA  6B81               	clrf	(set_pwm_duty_cycle@max_duty_val+1)& (0+255),b
  7238  002DFC  0E00               	movlw	0
  7239  002DFE  2381               	addwfc	(set_pwm_duty_cycle@max_duty_val+1)& (0+255),f,b
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;main.c: 417:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  7243  002E00  0E00               	movlw	0
  7244  002E02  6E18               	movwf	___fldiv@a,c
  7245  002E04  0E00               	movlw	0
  7246  002E06  6E19               	movwf	___fldiv@a+1,c
  7247  002E08  0EC8               	movlw	200
  7248  002E0A  6E1A               	movwf	___fldiv@a+2,c
  7249  002E0C  0E42               	movlw	66
  7250  002E0E  6E1B               	movwf	___fldiv@a+3,c
  7251  002E10  0E00               	movlw	0
  7252  002E12  6E31               	movwf	___flmul@a,c
  7253  002E14  0E00               	movlw	0
  7254  002E16  6E32               	movwf	___flmul@a+1,c
  7255  002E18  0E80               	movlw	128
  7256  002E1A  6E33               	movwf	___flmul@a+2,c
  7257  002E1C  0E40               	movlw	64
  7258  002E1E  6E34               	movwf	___flmul@a+3,c
  7259  002E20  C068  F02D         	movff	set_pwm_duty_cycle@dutyA,___flmul@b
  7260  002E24  C069  F02E         	movff	set_pwm_duty_cycle@dutyA+1,___flmul@b+1
  7261  002E28  C06A  F02F         	movff	set_pwm_duty_cycle@dutyA+2,___flmul@b+2
  7262  002E2C  C06B  F030         	movff	set_pwm_duty_cycle@dutyA+3,___flmul@b+3
  7263  002E30  ECF3  F00E         	call	___flmul	;wreg free
  7264  002E34  C02D  F014         	movff	?___flmul,___fldiv@b
  7265  002E38  C02E  F015         	movff	?___flmul+1,___fldiv@b+1
  7266  002E3C  C02F  F016         	movff	?___flmul+2,___fldiv@b+2
  7267  002E40  C030  F017         	movff	?___flmul+3,___fldiv@b+3
  7268  002E44  EC22  F012         	call	___fldiv	;wreg free
  7269  002E48  C014  F086         	movff	?___fldiv,_set_pwm_duty_cycle$2392
  7270  002E4C  C015  F087         	movff	?___fldiv+1,_set_pwm_duty_cycle$2392+1
  7271  002E50  C016  F088         	movff	?___fldiv+2,_set_pwm_duty_cycle$2392+2
  7272  002E54  C017  F089         	movff	?___fldiv+3,_set_pwm_duty_cycle$2392+3
  7273                           
  7274                           ;main.c: 417:         unsigned short duty_valA = (unsigned short)((dutyA *4 / 100.0) * (
      +                          float)max_duty_val);
  7275  002E58  C080  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  7276  002E5C  C081  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  7277  002E60  6A08               	clrf	___xxtofl@val+2,c
  7278  002E62  6A09               	clrf	___xxtofl@val+3,c
  7279  002E64  0E00               	movlw	0
  7280  002E66  EC4D  F019         	call	___xxtofl
  7281  002E6A  C006  F031         	movff	?___xxtofl,___flmul@a
  7282  002E6E  C007  F032         	movff	?___xxtofl+1,___flmul@a+1
  7283  002E72  C008  F033         	movff	?___xxtofl+2,___flmul@a+2
  7284  002E76  C009  F034         	movff	?___xxtofl+3,___flmul@a+3
  7285  002E7A  C086  F02D         	movff	_set_pwm_duty_cycle$2392,___flmul@b
  7286  002E7E  C087  F02E         	movff	_set_pwm_duty_cycle$2392+1,___flmul@b+1
  7287  002E82  C088  F02F         	movff	_set_pwm_duty_cycle$2392+2,___flmul@b+2
  7288  002E86  C089  F030         	movff	_set_pwm_duty_cycle$2392+3,___flmul@b+3
  7289  002E8A  ECF3  F00E         	call	___flmul	;wreg free
  7290  002E8E  C02D  F05E         	movff	?___flmul,___fltol@f1
  7291  002E92  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  7292  002E96  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  7293  002E9A  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  7294  002E9E  ECFD  F01D         	call	___fltol	;wreg free
  7295  002EA2  C05E  F082         	movff	?___fltol,set_pwm_duty_cycle@duty_valA
  7296  002EA6  C05F  F083         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valA+1
  7297                           
  7298                           ;main.c: 418:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  7299  002EAA  0E00               	movlw	0
  7300  002EAC  6E18               	movwf	___fldiv@a,c
  7301  002EAE  0E00               	movlw	0
  7302  002EB0  6E19               	movwf	___fldiv@a+1,c
  7303  002EB2  0EC8               	movlw	200
  7304  002EB4  6E1A               	movwf	___fldiv@a+2,c
  7305  002EB6  0E42               	movlw	66
  7306  002EB8  6E1B               	movwf	___fldiv@a+3,c
  7307  002EBA  0E00               	movlw	0
  7308  002EBC  6E31               	movwf	___flmul@a,c
  7309  002EBE  0E00               	movlw	0
  7310  002EC0  6E32               	movwf	___flmul@a+1,c
  7311  002EC2  0E80               	movlw	128
  7312  002EC4  6E33               	movwf	___flmul@a+2,c
  7313  002EC6  0E40               	movlw	64
  7314  002EC8  6E34               	movwf	___flmul@a+3,c
  7315  002ECA  C06C  F02D         	movff	set_pwm_duty_cycle@dutyB,___flmul@b
  7316  002ECE  C06D  F02E         	movff	set_pwm_duty_cycle@dutyB+1,___flmul@b+1
  7317  002ED2  C06E  F02F         	movff	set_pwm_duty_cycle@dutyB+2,___flmul@b+2
  7318  002ED6  C06F  F030         	movff	set_pwm_duty_cycle@dutyB+3,___flmul@b+3
  7319  002EDA  ECF3  F00E         	call	___flmul	;wreg free
  7320  002EDE  C02D  F014         	movff	?___flmul,___fldiv@b
  7321  002EE2  C02E  F015         	movff	?___flmul+1,___fldiv@b+1
  7322  002EE6  C02F  F016         	movff	?___flmul+2,___fldiv@b+2
  7323  002EEA  C030  F017         	movff	?___flmul+3,___fldiv@b+3
  7324  002EEE  EC22  F012         	call	___fldiv	;wreg free
  7325  002EF2  C014  F086         	movff	?___fldiv,_set_pwm_duty_cycle$2392
  7326  002EF6  C015  F087         	movff	?___fldiv+1,_set_pwm_duty_cycle$2392+1
  7327  002EFA  C016  F088         	movff	?___fldiv+2,_set_pwm_duty_cycle$2392+2
  7328  002EFE  C017  F089         	movff	?___fldiv+3,_set_pwm_duty_cycle$2392+3
  7329                           
  7330                           ;main.c: 418:         unsigned short duty_valB = (unsigned short)((dutyB *4/ 100.0) * (f
      +                          loat)max_duty_val);
  7331  002F02  C080  F006         	movff	set_pwm_duty_cycle@max_duty_val,___xxtofl@val
  7332  002F06  C081  F007         	movff	set_pwm_duty_cycle@max_duty_val+1,___xxtofl@val+1
  7333  002F0A  6A08               	clrf	___xxtofl@val+2,c
  7334  002F0C  6A09               	clrf	___xxtofl@val+3,c
  7335  002F0E  0E00               	movlw	0
  7336  002F10  EC4D  F019         	call	___xxtofl
  7337  002F14  C006  F031         	movff	?___xxtofl,___flmul@a
  7338  002F18  C007  F032         	movff	?___xxtofl+1,___flmul@a+1
  7339  002F1C  C008  F033         	movff	?___xxtofl+2,___flmul@a+2
  7340  002F20  C009  F034         	movff	?___xxtofl+3,___flmul@a+3
  7341  002F24  C086  F02D         	movff	_set_pwm_duty_cycle$2392,___flmul@b
  7342  002F28  C087  F02E         	movff	_set_pwm_duty_cycle$2392+1,___flmul@b+1
  7343  002F2C  C088  F02F         	movff	_set_pwm_duty_cycle$2392+2,___flmul@b+2
  7344  002F30  C089  F030         	movff	_set_pwm_duty_cycle$2392+3,___flmul@b+3
  7345  002F34  ECF3  F00E         	call	___flmul	;wreg free
  7346  002F38  C02D  F05E         	movff	?___flmul,___fltol@f1
  7347  002F3C  C02E  F05F         	movff	?___flmul+1,___fltol@f1+1
  7348  002F40  C02F  F060         	movff	?___flmul+2,___fltol@f1+2
  7349  002F44  C030  F061         	movff	?___flmul+3,___fltol@f1+3
  7350  002F48  ECFD  F01D         	call	___fltol	;wreg free
  7351  002F4C  C05E  F084         	movff	?___fltol,set_pwm_duty_cycle@duty_valB
  7352  002F50  C05F  F085         	movff	?___fltol+1,set_pwm_duty_cycle@duty_valB+1
  7353                           
  7354                           ;main.c: 422:         CCP1X = duty_valA & 2;
  7355  002F54  9ABD               	bcf	4029,5,c	;volatile
  7356                           
  7357                           ;main.c: 423:         CCP1Y = duty_valA & 1;
  7358  002F56  0100               	movlb	0	; () banked
  7359  002F58  A182               	btfss	set_pwm_duty_cycle@duty_valA& (0+255),0,b
  7360  002F5A  D002               	goto	u9340
  7361  002F5C  88BD               	bsf	4029,4,c	;volatile
  7362  002F5E  D001               	goto	u9355
  7363  002F60                     u9340:
  7364  002F60  98BD               	bcf	4029,4,c	;volatile
  7365  002F62                     u9355:
  7366                           
  7367                           ;main.c: 424:         CCPR1L = duty_valA >> 2;
  7368  002F62  C082  F070         	movff	set_pwm_duty_cycle@duty_valA,??_set_pwm_duty_cycle
  7369  002F66  C083  F071         	movff	set_pwm_duty_cycle@duty_valA+1,??_set_pwm_duty_cycle+1
  7370  002F6A  90D8               	bcf	status,0,c
  7371  002F6C  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7372  002F6E  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7373  002F70  90D8               	bcf	status,0,c
  7374  002F72  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7375  002F74  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7376  002F76  5070               	movf	??_set_pwm_duty_cycle,w,c
  7377  002F78  6EBE               	movwf	4030,c	;volatile
  7378                           
  7379                           ;main.c: 428:         CCP2X = duty_valB & 2;
  7380  002F7A  9ABA               	bcf	4026,5,c	;volatile
  7381                           
  7382                           ;main.c: 429:         CCP2Y = duty_valB & 1;
  7383  002F7C  0100               	movlb	0	; () banked
  7384  002F7E  A184               	btfss	set_pwm_duty_cycle@duty_valB& (0+255),0,b
  7385  002F80  D002               	goto	u9360
  7386  002F82  88BA               	bsf	4026,4,c	;volatile
  7387  002F84  D001               	goto	u9375
  7388  002F86                     u9360:
  7389  002F86  98BA               	bcf	4026,4,c	;volatile
  7390  002F88                     u9375:
  7391                           
  7392                           ;main.c: 430:         CCPR2L = duty_valB >> 2;
  7393  002F88  C084  F070         	movff	set_pwm_duty_cycle@duty_valB,??_set_pwm_duty_cycle
  7394  002F8C  C085  F071         	movff	set_pwm_duty_cycle@duty_valB+1,??_set_pwm_duty_cycle+1
  7395  002F90  90D8               	bcf	status,0,c
  7396  002F92  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7397  002F94  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7398  002F96  90D8               	bcf	status,0,c
  7399  002F98  3271               	rrcf	??_set_pwm_duty_cycle+1,f,c
  7400  002F9A  3270               	rrcf	??_set_pwm_duty_cycle,f,c
  7401  002F9C  5070               	movf	??_set_pwm_duty_cycle,w,c
  7402  002F9E  6EBB               	movwf	4027,c	;volatile
  7403  002FA0  0012               	return		;funcret
  7404  002FA2                     __end_of_set_pwm_duty_cycle:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function ___xxtofl *****************
  7408 ;; Defined at:
  7409 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  sign            1    wreg     unsigned char 
  7412 ;;  val             4    5[COMRAM] long 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  sign            1   13[COMRAM] unsigned char 
  7415 ;;  arg             4   15[COMRAM] unsigned long 
  7416 ;;  exp             1   14[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  4    5[COMRAM] unsigned char 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;Total ram usage:       14 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    2
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_set_pwm_duty_cycle
  7437 ;;		_setMotorSpeeds
  7438 ;;		_errorCorrectedMove
  7439 ;;		_opErrorCorrectionDegrees
  7440 ;;		_doOperation
  7441 ;;		_PIDCorrectedMove
  7442 ;;		_errorCorrectedMoveAccelerate
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text24
  7447  00329A                     __ptext24:
  7448                           	opt callstack 0
  7449  00329A                     ___xxtofl:
  7450                           	opt callstack 24
  7451                           
  7452                           ;incstack = 0
  7453                           ;___xxtofl@sign stored from wreg
  7454  00329A  6E0E               	movwf	___xxtofl@sign,c
  7455  00329C  500E               	movf	___xxtofl@sign,w,c
  7456  00329E  A4D8               	btfss	status,2,c
  7457  0032A0  AE09               	btfss	___xxtofl@val+3,7,c
  7458  0032A2  D01A               	goto	l1445
  7459  0032A4  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7460  0032A8  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7461  0032AC  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7462  0032B0  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7463  0032B4  1E0A               	comf	??___xxtofl,f,c
  7464  0032B6  1E0B               	comf	??___xxtofl+1,f,c
  7465  0032B8  1E0C               	comf	??___xxtofl+2,f,c
  7466  0032BA  1E0D               	comf	??___xxtofl+3,f,c
  7467  0032BC  2A0A               	incf	??___xxtofl,f,c
  7468  0032BE  0E00               	movlw	0
  7469  0032C0  220B               	addwfc	??___xxtofl+1,f,c
  7470  0032C2  220C               	addwfc	??___xxtofl+2,f,c
  7471  0032C4  220D               	addwfc	??___xxtofl+3,f,c
  7472  0032C6  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7473  0032CA  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7474  0032CE  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7475  0032D2  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7476  0032D6  D008               	goto	l8288
  7477  0032D8                     l1445:
  7478  0032D8  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7479  0032DC  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7480  0032E0  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7481  0032E4  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7482  0032E8                     l8288:
  7483  0032E8  5006               	movf	___xxtofl@val,w,c
  7484  0032EA  1007               	iorwf	___xxtofl@val+1,w,c
  7485  0032EC  1008               	iorwf	___xxtofl@val+2,w,c
  7486  0032EE  1009               	iorwf	___xxtofl@val+3,w,c
  7487  0032F0  A4D8               	btfss	status,2,c
  7488  0032F2  D009               	goto	l8294
  7489  0032F4  0E00               	movlw	0
  7490  0032F6  6E06               	movwf	?___xxtofl,c
  7491  0032F8  0E00               	movlw	0
  7492  0032FA  6E07               	movwf	?___xxtofl+1,c
  7493  0032FC  0E00               	movlw	0
  7494  0032FE  6E08               	movwf	?___xxtofl+2,c
  7495  003300  0E00               	movlw	0
  7496  003302  6E09               	movwf	?___xxtofl+3,c
  7497  003304  0012               	return	
  7498  003306                     l8294:
  7499  003306  0E96               	movlw	150
  7500  003308  6E0F               	movwf	___xxtofl@exp,c
  7501  00330A  D006               	goto	l8298
  7502  00330C                     l8296:
  7503  00330C  2A0F               	incf	___xxtofl@exp,f,c
  7504  00330E  90D8               	bcf	status,0,c
  7505  003310  3213               	rrcf	___xxtofl@arg+3,f,c
  7506  003312  3212               	rrcf	___xxtofl@arg+2,f,c
  7507  003314  3211               	rrcf	___xxtofl@arg+1,f,c
  7508  003316  3210               	rrcf	___xxtofl@arg,f,c
  7509  003318                     l8298:
  7510  003318  0E00               	movlw	0
  7511  00331A  1410               	andwf	___xxtofl@arg,w,c
  7512  00331C  6E0A               	movwf	??___xxtofl& (0+255),c
  7513  00331E  0E00               	movlw	0
  7514  003320  1411               	andwf	___xxtofl@arg+1,w,c
  7515  003322  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  7516  003324  0E00               	movlw	0
  7517  003326  1412               	andwf	___xxtofl@arg+2,w,c
  7518  003328  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  7519  00332A  0EFE               	movlw	254
  7520  00332C  1413               	andwf	___xxtofl@arg+3,w,c
  7521  00332E  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  7522  003330  500A               	movf	??___xxtofl,w,c
  7523  003332  100B               	iorwf	??___xxtofl+1,w,c
  7524  003334  100C               	iorwf	??___xxtofl+2,w,c
  7525  003336  100D               	iorwf	??___xxtofl+3,w,c
  7526  003338  B4D8               	btfsc	status,2,c
  7527  00333A  D00D               	goto	l1452
  7528  00333C  D7E7               	goto	l8296
  7529  00333E                     l8300:
  7530  00333E  2A0F               	incf	___xxtofl@exp,f,c
  7531  003340  0E01               	movlw	1
  7532  003342  2610               	addwf	___xxtofl@arg,f,c
  7533  003344  0E00               	movlw	0
  7534  003346  2211               	addwfc	___xxtofl@arg+1,f,c
  7535  003348  2212               	addwfc	___xxtofl@arg+2,f,c
  7536  00334A  2213               	addwfc	___xxtofl@arg+3,f,c
  7537  00334C  90D8               	bcf	status,0,c
  7538  00334E  3213               	rrcf	___xxtofl@arg+3,f,c
  7539  003350  3212               	rrcf	___xxtofl@arg+2,f,c
  7540  003352  3211               	rrcf	___xxtofl@arg+1,f,c
  7541  003354  3210               	rrcf	___xxtofl@arg,f,c
  7542  003356                     l1452:
  7543  003356  0E00               	movlw	0
  7544  003358  1410               	andwf	___xxtofl@arg,w,c
  7545  00335A  6E0A               	movwf	??___xxtofl& (0+255),c
  7546  00335C  0E00               	movlw	0
  7547  00335E  1411               	andwf	___xxtofl@arg+1,w,c
  7548  003360  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  7549  003362  0E00               	movlw	0
  7550  003364  1412               	andwf	___xxtofl@arg+2,w,c
  7551  003366  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  7552  003368  0EFF               	movlw	255
  7553  00336A  1413               	andwf	___xxtofl@arg+3,w,c
  7554  00336C  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  7555  00336E  500A               	movf	??___xxtofl,w,c
  7556  003370  100B               	iorwf	??___xxtofl+1,w,c
  7557  003372  100C               	iorwf	??___xxtofl+2,w,c
  7558  003374  100D               	iorwf	??___xxtofl+3,w,c
  7559  003376  B4D8               	btfsc	status,2,c
  7560  003378  D007               	goto	l8308
  7561  00337A  D7E1               	goto	l8300
  7562  00337C                     l8306:
  7563  00337C  060F               	decf	___xxtofl@exp,f,c
  7564  00337E  90D8               	bcf	status,0,c
  7565  003380  3610               	rlcf	___xxtofl@arg,f,c
  7566  003382  3611               	rlcf	___xxtofl@arg+1,f,c
  7567  003384  3612               	rlcf	___xxtofl@arg+2,f,c
  7568  003386  3613               	rlcf	___xxtofl@arg+3,f,c
  7569  003388                     l8308:
  7570  003388  BE12               	btfsc	___xxtofl@arg+2,7,c
  7571  00338A  D003               	goto	u9240
  7572  00338C  0E02               	movlw	2
  7573  00338E  600F               	cpfslt	___xxtofl@exp,c
  7574  003390  D7F5               	goto	l8306
  7575  003392                     u9240:
  7576  003392  A00F               	btfss	___xxtofl@exp,0,c
  7577  003394  9E12               	bcf	___xxtofl@arg+2,7,c
  7578  003396  90D8               	bcf	status,0,c
  7579  003398  320F               	rrcf	___xxtofl@exp,f,c
  7580  00339A  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7581  00339E  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  7582  0033A0  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  7583  0033A2  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  7584  0033A4  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7585  0033A8  6A0C               	clrf	??___xxtofl+2,c
  7586  0033AA  6A0B               	clrf	??___xxtofl+1,c
  7587  0033AC  6A0A               	clrf	??___xxtofl,c
  7588  0033AE  500A               	movf	??___xxtofl,w,c
  7589  0033B0  1210               	iorwf	___xxtofl@arg,f,c
  7590  0033B2  500B               	movf	??___xxtofl+1,w,c
  7591  0033B4  1211               	iorwf	___xxtofl@arg+1,f,c
  7592  0033B6  500C               	movf	??___xxtofl+2,w,c
  7593  0033B8  1212               	iorwf	___xxtofl@arg+2,f,c
  7594  0033BA  500D               	movf	??___xxtofl+3,w,c
  7595  0033BC  1213               	iorwf	___xxtofl@arg+3,f,c
  7596  0033BE  500E               	movf	___xxtofl@sign,w,c
  7597  0033C0  A4D8               	btfss	status,2,c
  7598  0033C2  AE09               	btfss	___xxtofl@val+3,7,c
  7599  0033C4  D001               	goto	l8324
  7600  0033C6  8E13               	bsf	___xxtofl@arg+3,7,c
  7601  0033C8                     l8324:
  7602  0033C8  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7603  0033CC  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7604  0033D0  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7605  0033D4  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7606  0033D8  0012               	return		;funcret
  7607  0033DA                     __end_of___xxtofl:
  7608                           	opt callstack 0
  7609                           
  7610 ;; *************** function ___fltol *****************
  7611 ;; Defined at:
  7612 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  f1              4   93[COMRAM] unsigned char 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  exp1            1  102[COMRAM] unsigned char 
  7617 ;;  sign1           1  101[COMRAM] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  4   93[COMRAM] long 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;Total ram usage:       10 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    2
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_set_pwm_duty_cycle
  7638 ;;		_errorCorrectedMove
  7639 ;;		_doOperation
  7640 ;;		_PIDCorrectedMove
  7641 ;;		_errorCorrectedMoveAccelerate
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text25
  7646  003BFA                     __ptext25:
  7647                           	opt callstack 0
  7648  003BFA                     ___fltol:
  7649                           	opt callstack 24
  7650                           
  7651                           ;incstack = 0
  7652  003BFA  3460               	rlcf	___fltol@f1+2,w,c
  7653  003BFC  3461               	rlcf	___fltol@f1+3,w,c
  7654  003BFE  6E67               	movwf	___fltol@exp1,c
  7655  003C00  5067               	movf	___fltol@exp1,w,c
  7656  003C02  A4D8               	btfss	status,2,c
  7657  003C04  D009               	goto	l8206
  7658  003C06                     u9040:
  7659  003C06  0E00               	movlw	0
  7660  003C08  6E5E               	movwf	?___fltol,c
  7661  003C0A  0E00               	movlw	0
  7662  003C0C  6E5F               	movwf	?___fltol+1,c
  7663  003C0E  0E00               	movlw	0
  7664  003C10  6E60               	movwf	?___fltol+2,c
  7665  003C12  0E00               	movlw	0
  7666  003C14  6E61               	movwf	?___fltol+3,c
  7667  003C16  0012               	return	
  7668  003C18                     l8206:
  7669  003C18  C05E  F062         	movff	___fltol@f1,??___fltol
  7670  003C1C  C05F  F063         	movff	___fltol@f1+1,??___fltol+1
  7671  003C20  C060  F064         	movff	___fltol@f1+2,??___fltol+2
  7672  003C24  C061  F065         	movff	___fltol@f1+3,??___fltol+3
  7673  003C28  0E20               	movlw	32
  7674  003C2A  D005               	goto	u9050
  7675  003C2C                     u9055:
  7676  003C2C  90D8               	bcf	status,0,c
  7677  003C2E  3265               	rrcf	??___fltol+3,f,c
  7678  003C30  3264               	rrcf	??___fltol+2,f,c
  7679  003C32  3263               	rrcf	??___fltol+1,f,c
  7680  003C34  3262               	rrcf	??___fltol,f,c
  7681  003C36                     u9050:
  7682  003C36  2EE8               	decfsz	wreg,f,c
  7683  003C38  D7F9               	goto	u9055
  7684  003C3A  5062               	movf	??___fltol,w,c
  7685  003C3C  6E66               	movwf	___fltol@sign1,c
  7686  003C3E  8E60               	bsf	___fltol@f1+2,7,c
  7687  003C40  0EFF               	movlw	255
  7688  003C42  165E               	andwf	___fltol@f1,f,c
  7689  003C44  0EFF               	movlw	255
  7690  003C46  165F               	andwf	___fltol@f1+1,f,c
  7691  003C48  0EFF               	movlw	255
  7692  003C4A  1660               	andwf	___fltol@f1+2,f,c
  7693  003C4C  0E00               	movlw	0
  7694  003C4E  1661               	andwf	___fltol@f1+3,f,c
  7695  003C50  0E96               	movlw	150
  7696  003C52  5E67               	subwf	___fltol@exp1,f,c
  7697  003C54  AE67               	btfss	___fltol@exp1,7,c
  7698  003C56  D00D               	goto	l8226
  7699  003C58  5067               	movf	___fltol@exp1,w,c
  7700  003C5A  0A80               	xorlw	128
  7701  003C5C  0F97               	addlw	151
  7702  003C5E  A0D8               	btfss	status,0,c
  7703  003C60  D7D2               	goto	u9040
  7704  003C62                     l8222:
  7705  003C62  90D8               	bcf	status,0,c
  7706  003C64  3261               	rrcf	___fltol@f1+3,f,c
  7707  003C66  3260               	rrcf	___fltol@f1+2,f,c
  7708  003C68  325F               	rrcf	___fltol@f1+1,f,c
  7709  003C6A  325E               	rrcf	___fltol@f1,f,c
  7710  003C6C  3E67               	incfsz	___fltol@exp1,f,c
  7711  003C6E  D7F9               	goto	l8222
  7712  003C70  D00D               	goto	u9090
  7713  003C72                     l8226:
  7714  003C72  0E1F               	movlw	31
  7715  003C74  6467               	cpfsgt	___fltol@exp1,c
  7716  003C76  D007               	goto	l8234
  7717  003C78  D7C6               	goto	u9040
  7718  003C7A                     l8232:
  7719  003C7A  90D8               	bcf	status,0,c
  7720  003C7C  365E               	rlcf	___fltol@f1,f,c
  7721  003C7E  365F               	rlcf	___fltol@f1+1,f,c
  7722  003C80  3660               	rlcf	___fltol@f1+2,f,c
  7723  003C82  3661               	rlcf	___fltol@f1+3,f,c
  7724  003C84  0667               	decf	___fltol@exp1,f,c
  7725  003C86                     l8234:
  7726  003C86  5067               	movf	___fltol@exp1,w,c
  7727  003C88  A4D8               	btfss	status,2,c
  7728  003C8A  D7F7               	goto	l8232
  7729  003C8C                     u9090:
  7730  003C8C  5066               	movf	___fltol@sign1,w,c
  7731  003C8E  B4D8               	btfsc	status,2,c
  7732  003C90  D008               	goto	l8240
  7733  003C92  1E61               	comf	___fltol@f1+3,f,c
  7734  003C94  1E60               	comf	___fltol@f1+2,f,c
  7735  003C96  1E5F               	comf	___fltol@f1+1,f,c
  7736  003C98  6C5E               	negf	___fltol@f1,c
  7737  003C9A  0E00               	movlw	0
  7738  003C9C  225F               	addwfc	___fltol@f1+1,f,c
  7739  003C9E  2260               	addwfc	___fltol@f1+2,f,c
  7740  003CA0  2261               	addwfc	___fltol@f1+3,f,c
  7741  003CA2                     l8240:
  7742  003CA2  C05E  F05E         	movff	___fltol@f1,?___fltol
  7743  003CA6  C05F  F05F         	movff	___fltol@f1+1,?___fltol+1
  7744  003CAA  C060  F060         	movff	___fltol@f1+2,?___fltol+2
  7745  003CAE  C061  F061         	movff	___fltol@f1+3,?___fltol+3
  7746  003CB2  0012               	return		;funcret
  7747  003CB4                     __end_of___fltol:
  7748                           	opt callstack 0
  7749                           
  7750 ;; *************** function ___flmul *****************
  7751 ;; Defined at:
  7752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  b               4   44[COMRAM] long 
  7755 ;;  a               4   48[COMRAM] long 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  prod            4   63[COMRAM] struct .
  7758 ;;  grs             4   58[COMRAM] unsigned long 
  7759 ;;  temp            2   67[COMRAM] struct .
  7760 ;;  bexp            1   62[COMRAM] unsigned char 
  7761 ;;  aexp            1   57[COMRAM] unsigned char 
  7762 ;;  sign            1   56[COMRAM] unsigned char 
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  4   44[COMRAM] unsigned char 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0, prodl, prodh
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7772 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7773 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;Total ram usage:       25 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    2
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_set_pwm_duty_cycle
  7783 ;;		_errorCorrectedMove
  7784 ;;		_doOperation
  7785 ;;		_PIDCorrectedMove
  7786 ;;		_errorCorrectedMoveAccelerate
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text26
  7791  001DE6                     __ptext26:
  7792                           	opt callstack 0
  7793  001DE6                     ___flmul:
  7794                           	opt callstack 24
  7795                           
  7796                           ;incstack = 0
  7797  001DE6  5030               	movf	___flmul@b+3,w,c
  7798  001DE8  0B80               	andlw	128
  7799  001DEA  6E39               	movwf	___flmul@sign,c
  7800  001DEC  5030               	movf	___flmul@b+3,w,c
  7801  001DEE  2430               	addwf	___flmul@b+3,w,c
  7802  001DF0  6E3F               	movwf	___flmul@bexp,c
  7803  001DF2  BE2F               	btfsc	___flmul@b+2,7,c
  7804  001DF4  803F               	bsf	___flmul@bexp,0,c
  7805  001DF6  503F               	movf	___flmul@bexp,w,c
  7806  001DF8  B4D8               	btfsc	status,2,c
  7807  001DFA  D00D               	goto	l8062
  7808  001DFC  283F               	incf	___flmul@bexp,w,c
  7809  001DFE  A4D8               	btfss	status,2,c
  7810  001E00  D008               	goto	l8060
  7811  001E02  0E00               	movlw	0
  7812  001E04  6E2D               	movwf	___flmul@b,c
  7813  001E06  0E00               	movlw	0
  7814  001E08  6E2E               	movwf	___flmul@b+1,c
  7815  001E0A  0E00               	movlw	0
  7816  001E0C  6E2F               	movwf	___flmul@b+2,c
  7817  001E0E  0E00               	movlw	0
  7818  001E10  6E30               	movwf	___flmul@b+3,c
  7819  001E12                     l8060:
  7820  001E12  8E2F               	bsf	___flmul@b+2,7,c
  7821  001E14  D008               	goto	l8064
  7822  001E16                     l8062:
  7823  001E16  0E00               	movlw	0
  7824  001E18  6E2D               	movwf	___flmul@b,c
  7825  001E1A  0E00               	movlw	0
  7826  001E1C  6E2E               	movwf	___flmul@b+1,c
  7827  001E1E  0E00               	movlw	0
  7828  001E20  6E2F               	movwf	___flmul@b+2,c
  7829  001E22  0E00               	movlw	0
  7830  001E24  6E30               	movwf	___flmul@b+3,c
  7831  001E26                     l8064:
  7832  001E26  5034               	movf	___flmul@a+3,w,c
  7833  001E28  0B80               	andlw	128
  7834  001E2A  1A39               	xorwf	___flmul@sign,f,c
  7835  001E2C  5034               	movf	___flmul@a+3,w,c
  7836  001E2E  2434               	addwf	___flmul@a+3,w,c
  7837  001E30  6E3A               	movwf	___flmul@aexp,c
  7838  001E32  BE33               	btfsc	___flmul@a+2,7,c
  7839  001E34  803A               	bsf	___flmul@aexp,0,c
  7840  001E36  503A               	movf	___flmul@aexp,w,c
  7841  001E38  B4D8               	btfsc	status,2,c
  7842  001E3A  D00D               	goto	l8080
  7843  001E3C  283A               	incf	___flmul@aexp,w,c
  7844  001E3E  A4D8               	btfss	status,2,c
  7845  001E40  D008               	goto	l8078
  7846  001E42  0E00               	movlw	0
  7847  001E44  6E31               	movwf	___flmul@a,c
  7848  001E46  0E00               	movlw	0
  7849  001E48  6E32               	movwf	___flmul@a+1,c
  7850  001E4A  0E00               	movlw	0
  7851  001E4C  6E33               	movwf	___flmul@a+2,c
  7852  001E4E  0E00               	movlw	0
  7853  001E50  6E34               	movwf	___flmul@a+3,c
  7854  001E52                     l8078:
  7855  001E52  8E33               	bsf	___flmul@a+2,7,c
  7856  001E54  D008               	goto	l1404
  7857  001E56                     l8080:
  7858  001E56  0E00               	movlw	0
  7859  001E58  6E31               	movwf	___flmul@a,c
  7860  001E5A  0E00               	movlw	0
  7861  001E5C  6E32               	movwf	___flmul@a+1,c
  7862  001E5E  0E00               	movlw	0
  7863  001E60  6E33               	movwf	___flmul@a+2,c
  7864  001E62  0E00               	movlw	0
  7865  001E64  6E34               	movwf	___flmul@a+3,c
  7866  001E66                     l1404:
  7867  001E66  503A               	movf	___flmul@aexp,w,c
  7868  001E68  B4D8               	btfsc	status,2,c
  7869  001E6A  D003               	goto	u8870
  7870  001E6C  503F               	movf	___flmul@bexp,w,c
  7871  001E6E  A4D8               	btfss	status,2,c
  7872  001E70  D009               	goto	l8088
  7873  001E72                     u8870:
  7874  001E72  0E00               	movlw	0
  7875  001E74  6E2D               	movwf	?___flmul,c
  7876  001E76  0E00               	movlw	0
  7877  001E78  6E2E               	movwf	?___flmul+1,c
  7878  001E7A  0E00               	movlw	0
  7879  001E7C  6E2F               	movwf	?___flmul+2,c
  7880  001E7E  0E00               	movlw	0
  7881  001E80  6E30               	movwf	?___flmul+3,c
  7882  001E82  0012               	return	
  7883  001E84                     l8088:
  7884  001E84  5033               	movf	___flmul@a+2,w,c
  7885  001E86  022D               	mulwf	___flmul@b,c
  7886  001E88  CFF3 F044          	movff	prodl,___flmul@temp
  7887  001E8C  CFF4 F045          	movff	prodh,___flmul@temp+1
  7888  001E90  5044               	movf	___flmul@temp,w,c
  7889  001E92  6E3B               	movwf	___flmul@grs,c
  7890  001E94  6A3C               	clrf	___flmul@grs+1,c
  7891  001E96  6A3D               	clrf	___flmul@grs+2,c
  7892  001E98  6A3E               	clrf	___flmul@grs+3,c
  7893  001E9A  5045               	movf	___flmul@temp+1,w,c
  7894  001E9C  6E40               	movwf	___flmul@prod,c
  7895  001E9E  6A41               	clrf	___flmul@prod+1,c
  7896  001EA0  6A42               	clrf	___flmul@prod+2,c
  7897  001EA2  6A43               	clrf	___flmul@prod+3,c
  7898  001EA4  5032               	movf	___flmul@a+1,w,c
  7899  001EA6  022E               	mulwf	___flmul@b+1,c
  7900  001EA8  CFF3 F044          	movff	prodl,___flmul@temp
  7901  001EAC  CFF4 F045          	movff	prodh,___flmul@temp+1
  7902  001EB0  5044               	movf	___flmul@temp,w,c
  7903  001EB2  263B               	addwf	___flmul@grs,f,c
  7904  001EB4  0E00               	movlw	0
  7905  001EB6  223C               	addwfc	___flmul@grs+1,f,c
  7906  001EB8  223D               	addwfc	___flmul@grs+2,f,c
  7907  001EBA  223E               	addwfc	___flmul@grs+3,f,c
  7908  001EBC  5045               	movf	___flmul@temp+1,w,c
  7909  001EBE  2640               	addwf	___flmul@prod,f,c
  7910  001EC0  0E00               	movlw	0
  7911  001EC2  2241               	addwfc	___flmul@prod+1,f,c
  7912  001EC4  2242               	addwfc	___flmul@prod+2,f,c
  7913  001EC6  2243               	addwfc	___flmul@prod+3,f,c
  7914  001EC8  5031               	movf	___flmul@a,w,c
  7915  001ECA  022F               	mulwf	___flmul@b+2,c
  7916  001ECC  CFF3 F044          	movff	prodl,___flmul@temp
  7917  001ED0  CFF4 F045          	movff	prodh,___flmul@temp+1
  7918  001ED4  5044               	movf	___flmul@temp,w,c
  7919  001ED6  263B               	addwf	___flmul@grs,f,c
  7920  001ED8  0E00               	movlw	0
  7921  001EDA  223C               	addwfc	___flmul@grs+1,f,c
  7922  001EDC  223D               	addwfc	___flmul@grs+2,f,c
  7923  001EDE  223E               	addwfc	___flmul@grs+3,f,c
  7924  001EE0  5045               	movf	___flmul@temp+1,w,c
  7925  001EE2  2640               	addwf	___flmul@prod,f,c
  7926  001EE4  0E00               	movlw	0
  7927  001EE6  2241               	addwfc	___flmul@prod+1,f,c
  7928  001EE8  2242               	addwfc	___flmul@prod+2,f,c
  7929  001EEA  2243               	addwfc	___flmul@prod+3,f,c
  7930  001EEC  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  7931  001EF0  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  7932  001EF4  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  7933  001EF8  6A3B               	clrf	___flmul@grs,c
  7934  001EFA  5031               	movf	___flmul@a,w,c
  7935  001EFC  022E               	mulwf	___flmul@b+1,c
  7936  001EFE  CFF3 F044          	movff	prodl,___flmul@temp
  7937  001F02  CFF4 F045          	movff	prodh,___flmul@temp+1
  7938  001F06  5044               	movf	___flmul@temp,w,c
  7939  001F08  263B               	addwf	___flmul@grs,f,c
  7940  001F0A  5045               	movf	___flmul@temp+1,w,c
  7941  001F0C  223C               	addwfc	___flmul@grs+1,f,c
  7942  001F0E  0E00               	movlw	0
  7943  001F10  223D               	addwfc	___flmul@grs+2,f,c
  7944  001F12  0E00               	movlw	0
  7945  001F14  223E               	addwfc	___flmul@grs+3,f,c
  7946  001F16  5032               	movf	___flmul@a+1,w,c
  7947  001F18  022D               	mulwf	___flmul@b,c
  7948  001F1A  CFF3 F044          	movff	prodl,___flmul@temp
  7949  001F1E  CFF4 F045          	movff	prodh,___flmul@temp+1
  7950  001F22  5044               	movf	___flmul@temp,w,c
  7951  001F24  263B               	addwf	___flmul@grs,f,c
  7952  001F26  5045               	movf	___flmul@temp+1,w,c
  7953  001F28  223C               	addwfc	___flmul@grs+1,f,c
  7954  001F2A  0E00               	movlw	0
  7955  001F2C  223D               	addwfc	___flmul@grs+2,f,c
  7956  001F2E  0E00               	movlw	0
  7957  001F30  223E               	addwfc	___flmul@grs+3,f,c
  7958  001F32  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  7959  001F36  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  7960  001F3A  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  7961  001F3E  6A3B               	clrf	___flmul@grs,c
  7962  001F40  5031               	movf	___flmul@a,w,c
  7963  001F42  022D               	mulwf	___flmul@b,c
  7964  001F44  CFF3 F044          	movff	prodl,___flmul@temp
  7965  001F48  CFF4 F045          	movff	prodh,___flmul@temp+1
  7966  001F4C  5044               	movf	___flmul@temp,w,c
  7967  001F4E  263B               	addwf	___flmul@grs,f,c
  7968  001F50  5045               	movf	___flmul@temp+1,w,c
  7969  001F52  223C               	addwfc	___flmul@grs+1,f,c
  7970  001F54  0E00               	movlw	0
  7971  001F56  223D               	addwfc	___flmul@grs+2,f,c
  7972  001F58  0E00               	movlw	0
  7973  001F5A  223E               	addwfc	___flmul@grs+3,f,c
  7974  001F5C  5033               	movf	___flmul@a+2,w,c
  7975  001F5E  022E               	mulwf	___flmul@b+1,c
  7976  001F60  CFF3 F044          	movff	prodl,___flmul@temp
  7977  001F64  CFF4 F045          	movff	prodh,___flmul@temp+1
  7978  001F68  5044               	movf	___flmul@temp,w,c
  7979  001F6A  2640               	addwf	___flmul@prod,f,c
  7980  001F6C  5045               	movf	___flmul@temp+1,w,c
  7981  001F6E  2241               	addwfc	___flmul@prod+1,f,c
  7982  001F70  0E00               	movlw	0
  7983  001F72  2242               	addwfc	___flmul@prod+2,f,c
  7984  001F74  0E00               	movlw	0
  7985  001F76  2243               	addwfc	___flmul@prod+3,f,c
  7986  001F78  5032               	movf	___flmul@a+1,w,c
  7987  001F7A  022F               	mulwf	___flmul@b+2,c
  7988  001F7C  CFF3 F044          	movff	prodl,___flmul@temp
  7989  001F80  CFF4 F045          	movff	prodh,___flmul@temp+1
  7990  001F84  5044               	movf	___flmul@temp,w,c
  7991  001F86  2640               	addwf	___flmul@prod,f,c
  7992  001F88  5045               	movf	___flmul@temp+1,w,c
  7993  001F8A  2241               	addwfc	___flmul@prod+1,f,c
  7994  001F8C  0E00               	movlw	0
  7995  001F8E  2242               	addwfc	___flmul@prod+2,f,c
  7996  001F90  0E00               	movlw	0
  7997  001F92  2243               	addwfc	___flmul@prod+3,f,c
  7998  001F94  5033               	movf	___flmul@a+2,w,c
  7999  001F96  022F               	mulwf	___flmul@b+2,c
  8000  001F98  CFF3 F044          	movff	prodl,___flmul@temp
  8001  001F9C  CFF4 F045          	movff	prodh,___flmul@temp+1
  8002  001FA0  5044               	movf	___flmul@temp,w,c
  8003  001FA2  6E35               	movwf	??___flmul& (0+255),c
  8004  001FA4  5045               	movf	___flmul@temp+1,w,c
  8005  001FA6  6E36               	movwf	(??___flmul+1)& (0+255),c
  8006  001FA8  6A37               	clrf	(??___flmul+2)& (0+255),c
  8007  001FAA  6A38               	clrf	(??___flmul+3)& (0+255),c
  8008  001FAC  C037  F038         	movff	??___flmul+2,??___flmul+3
  8009  001FB0  C036  F037         	movff	??___flmul+1,??___flmul+2
  8010  001FB4  C035  F036         	movff	??___flmul,??___flmul+1
  8011  001FB8  6A35               	clrf	??___flmul,c
  8012  001FBA  5035               	movf	??___flmul,w,c
  8013  001FBC  2640               	addwf	___flmul@prod,f,c
  8014  001FBE  5036               	movf	??___flmul+1,w,c
  8015  001FC0  2241               	addwfc	___flmul@prod+1,f,c
  8016  001FC2  5037               	movf	??___flmul+2,w,c
  8017  001FC4  2242               	addwfc	___flmul@prod+2,f,c
  8018  001FC6  5038               	movf	??___flmul+3,w,c
  8019  001FC8  2243               	addwfc	___flmul@prod+3,f,c
  8020  001FCA  C03B  F035         	movff	___flmul@grs,??___flmul
  8021  001FCE  C03C  F036         	movff	___flmul@grs+1,??___flmul+1
  8022  001FD2  C03D  F037         	movff	___flmul@grs+2,??___flmul+2
  8023  001FD6  C03E  F038         	movff	___flmul@grs+3,??___flmul+3
  8024  001FDA  0E19               	movlw	25
  8025  001FDC  D005               	goto	u8880
  8026  001FDE                     u8885:
  8027  001FDE  90D8               	bcf	status,0,c
  8028  001FE0  3238               	rrcf	??___flmul+3,f,c
  8029  001FE2  3237               	rrcf	??___flmul+2,f,c
  8030  001FE4  3236               	rrcf	??___flmul+1,f,c
  8031  001FE6  3235               	rrcf	??___flmul,f,c
  8032  001FE8                     u8880:
  8033  001FE8  2EE8               	decfsz	wreg,f,c
  8034  001FEA  D7F9               	goto	u8885
  8035  001FEC  5035               	movf	??___flmul,w,c
  8036  001FEE  2640               	addwf	___flmul@prod,f,c
  8037  001FF0  5036               	movf	??___flmul+1,w,c
  8038  001FF2  2241               	addwfc	___flmul@prod+1,f,c
  8039  001FF4  5037               	movf	??___flmul+2,w,c
  8040  001FF6  2242               	addwfc	___flmul@prod+2,f,c
  8041  001FF8  5038               	movf	??___flmul+3,w,c
  8042  001FFA  2243               	addwfc	___flmul@prod+3,f,c
  8043  001FFC  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
  8044  002000  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
  8045  002004  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
  8046  002008  6A3B               	clrf	___flmul@grs,c
  8047  00200A  503A               	movf	___flmul@aexp,w,c
  8048  00200C  C03F  F035         	movff	___flmul@bexp,??___flmul
  8049  002010  6A36               	clrf	(??___flmul+1)& (0+255),c
  8050  002012  2635               	addwf	??___flmul,f,c
  8051  002014  0E00               	movlw	0
  8052  002016  2236               	addwfc	??___flmul+1,f,c
  8053  002018  0E82               	movlw	130
  8054  00201A  2435               	addwf	??___flmul,w,c
  8055  00201C  6E44               	movwf	___flmul@temp,c
  8056  00201E  0EFF               	movlw	255
  8057  002020  2036               	addwfc	??___flmul+1,w,c
  8058  002022  6E45               	movwf	___flmul@temp+1,c
  8059  002024  D00F               	goto	l8136
  8060  002026                     l8130:
  8061  002026  90D8               	bcf	status,0,c
  8062  002028  3640               	rlcf	___flmul@prod,f,c
  8063  00202A  3641               	rlcf	___flmul@prod+1,f,c
  8064  00202C  3642               	rlcf	___flmul@prod+2,f,c
  8065  00202E  3643               	rlcf	___flmul@prod+3,f,c
  8066  002030  BE3E               	btfsc	___flmul@grs+3,7,c
  8067  002032  8040               	bsf	___flmul@prod,0,c
  8068  002034  90D8               	bcf	status,0,c
  8069  002036  363B               	rlcf	___flmul@grs,f,c
  8070  002038  363C               	rlcf	___flmul@grs+1,f,c
  8071  00203A  363D               	rlcf	___flmul@grs+2,f,c
  8072  00203C  363E               	rlcf	___flmul@grs+3,f,c
  8073  00203E  0644               	decf	___flmul@temp,f,c
  8074  002040  A0D8               	btfss	status,0,c
  8075  002042  0645               	decf	___flmul@temp+1,f,c
  8076  002044                     l8136:
  8077  002044  AE42               	btfss	___flmul@prod+2,7,c
  8078  002046  D7EF               	goto	l8130
  8079  002048  0E00               	movlw	0
  8080  00204A  6E3A               	movwf	___flmul@aexp,c
  8081  00204C  AE3E               	btfss	___flmul@grs+3,7,c
  8082  00204E  D017               	goto	l1413
  8083  002050  0EFF               	movlw	255
  8084  002052  143B               	andwf	___flmul@grs,w,c
  8085  002054  6E35               	movwf	??___flmul& (0+255),c
  8086  002056  0EFF               	movlw	255
  8087  002058  143C               	andwf	___flmul@grs+1,w,c
  8088  00205A  6E36               	movwf	(??___flmul+1)& (0+255),c
  8089  00205C  0EFF               	movlw	255
  8090  00205E  143D               	andwf	___flmul@grs+2,w,c
  8091  002060  6E37               	movwf	(??___flmul+2)& (0+255),c
  8092  002062  0E7F               	movlw	127
  8093  002064  143E               	andwf	___flmul@grs+3,w,c
  8094  002066  6E38               	movwf	(??___flmul+3)& (0+255),c
  8095  002068  5035               	movf	??___flmul,w,c
  8096  00206A  1036               	iorwf	??___flmul+1,w,c
  8097  00206C  1037               	iorwf	??___flmul+2,w,c
  8098  00206E  1038               	iorwf	??___flmul+3,w,c
  8099  002070  B4D8               	btfsc	status,2,c
  8100  002072  D003               	goto	l1414
  8101  002074                     u8920:
  8102  002074  0E01               	movlw	1
  8103  002076  6E3A               	movwf	___flmul@aexp,c
  8104  002078  D002               	goto	l1413
  8105  00207A                     l1414:
  8106  00207A  B040               	btfsc	___flmul@prod,0,c
  8107  00207C  D7FB               	goto	u8920
  8108  00207E                     l1413:
  8109  00207E  503A               	movf	___flmul@aexp,w,c
  8110  002080  B4D8               	btfsc	status,2,c
  8111  002082  D01F               	goto	l8156
  8112  002084  0E01               	movlw	1
  8113  002086  2640               	addwf	___flmul@prod,f,c
  8114  002088  0E00               	movlw	0
  8115  00208A  2241               	addwfc	___flmul@prod+1,f,c
  8116  00208C  2242               	addwfc	___flmul@prod+2,f,c
  8117  00208E  2243               	addwfc	___flmul@prod+3,f,c
  8118  002090  A043               	btfss	___flmul@prod+3,0,c
  8119  002092  D017               	goto	l8156
  8120  002094  C040  F035         	movff	___flmul@prod,??___flmul
  8121  002098  C041  F036         	movff	___flmul@prod+1,??___flmul+1
  8122  00209C  C042  F037         	movff	___flmul@prod+2,??___flmul+2
  8123  0020A0  C043  F038         	movff	___flmul@prod+3,??___flmul+3
  8124  0020A4  3438               	rlcf	??___flmul+3,w,c
  8125  0020A6  3238               	rrcf	??___flmul+3,f,c
  8126  0020A8  3237               	rrcf	??___flmul+2,f,c
  8127  0020AA  3236               	rrcf	??___flmul+1,f,c
  8128  0020AC  3235               	rrcf	??___flmul,f,c
  8129  0020AE  C035  F040         	movff	??___flmul,___flmul@prod
  8130  0020B2  C036  F041         	movff	??___flmul+1,___flmul@prod+1
  8131  0020B6  C037  F042         	movff	??___flmul+2,___flmul@prod+2
  8132  0020BA  C038  F043         	movff	??___flmul+3,___flmul@prod+3
  8133  0020BE  4A44               	infsnz	___flmul@temp,f,c
  8134  0020C0  2A45               	incf	___flmul@temp+1,f,c
  8135  0020C2                     l8156:
  8136  0020C2  BE45               	btfsc	___flmul@temp+1,7,c
  8137  0020C4  D00D               	goto	l8160
  8138  0020C6  5045               	movf	___flmul@temp+1,w,c
  8139  0020C8  E103               	bnz	u8960
  8140  0020CA  2844               	incf	___flmul@temp,w,c
  8141  0020CC  A0D8               	btfss	status,0,c
  8142  0020CE  D008               	goto	l8160
  8143  0020D0                     u8960:
  8144  0020D0  0E00               	movlw	0
  8145  0020D2  6E40               	movwf	___flmul@prod,c
  8146  0020D4  0E00               	movlw	0
  8147  0020D6  6E41               	movwf	___flmul@prod+1,c
  8148  0020D8  0E80               	movlw	128
  8149  0020DA  6E42               	movwf	___flmul@prod+2,c
  8150  0020DC  0E7F               	movlw	127
  8151  0020DE  D020               	goto	L15
  8152  0020E0                     l8160:
  8153  0020E0  BE45               	btfsc	___flmul@temp+1,7,c
  8154  0020E2  D005               	goto	u8970
  8155  0020E4  5045               	movf	___flmul@temp+1,w,c
  8156  0020E6  E10E               	bnz	l1421
  8157  0020E8  0444               	decf	___flmul@temp,w,c
  8158  0020EA  B0D8               	btfsc	status,0,c
  8159  0020EC  D00B               	goto	l1421
  8160  0020EE                     u8970:
  8161  0020EE  0E00               	movlw	0
  8162  0020F0  6E40               	movwf	___flmul@prod,c
  8163  0020F2  0E00               	movlw	0
  8164  0020F4  6E41               	movwf	___flmul@prod+1,c
  8165  0020F6  0E00               	movlw	0
  8166  0020F8  6E42               	movwf	___flmul@prod+2,c
  8167  0020FA  0E00               	movlw	0
  8168  0020FC  6E43               	movwf	___flmul@prod+3,c
  8169  0020FE  0E00               	movlw	0
  8170  002100  6E39               	movwf	___flmul@sign,c
  8171  002102  D00F               	goto	l8172
  8172  002104                     l1421:
  8173  002104  C044  F03F         	movff	___flmul@temp,___flmul@bexp
  8174  002108  0EFF               	movlw	255
  8175  00210A  1640               	andwf	___flmul@prod,f,c
  8176  00210C  0EFF               	movlw	255
  8177  00210E  1641               	andwf	___flmul@prod+1,f,c
  8178  002110  0E7F               	movlw	127
  8179  002112  1642               	andwf	___flmul@prod+2,f,c
  8180  002114  0E00               	movlw	0
  8181  002116  1643               	andwf	___flmul@prod+3,f,c
  8182  002118  B03F               	btfsc	___flmul@bexp,0,c
  8183  00211A  8E42               	bsf	___flmul@prod+2,7,c
  8184  00211C  90D8               	bcf	status,0,c
  8185  00211E  303F               	rrcf	___flmul@bexp,w,c
  8186  002120                     L15:
  8187  002120  6E43               	movwf	___flmul@prod+3,c
  8188  002122                     l8172:
  8189  002122  5039               	movf	___flmul@sign,w,c
  8190  002124  1243               	iorwf	___flmul@prod+3,f,c
  8191  002126  C040  F02D         	movff	___flmul@prod,?___flmul
  8192  00212A  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
  8193  00212E  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
  8194  002132  C043  F030         	movff	___flmul@prod+3,?___flmul+3
  8195  002136  0012               	return		;funcret
  8196  002138                     __end_of___flmul:
  8197                           	opt callstack 0
  8198                           
  8199 ;; *************** function ___flge *****************
  8200 ;; Defined at:
  8201 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  ff1             4   19[COMRAM] unsigned char 
  8204 ;;  ff2             4   23[COMRAM] unsigned char 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;		None
  8207 ;; Return value:  Size  Location     Type
  8208 ;;		None               void
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8216 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;Total ram usage:       12 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    2
  8223 ;; This function calls:
  8224 ;;		Nothing
  8225 ;; This function is called by:
  8226 ;;		_set_pwm_duty_cycle
  8227 ;;		_doOperation
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text27
  8232  003990                     __ptext27:
  8233                           	opt callstack 0
  8234  003990                     ___flge:
  8235                           	opt callstack 24
  8236                           
  8237                           ;incstack = 0
  8238  003990  0E00               	movlw	0
  8239  003992  1414               	andwf	___flge@ff1,w,c
  8240  003994  6E1C               	movwf	??___flge& (0+255),c
  8241  003996  0E00               	movlw	0
  8242  003998  1415               	andwf	___flge@ff1+1,w,c
  8243  00399A  6E1D               	movwf	(??___flge+1)& (0+255),c
  8244  00399C  0E80               	movlw	128
  8245  00399E  1416               	andwf	___flge@ff1+2,w,c
  8246  0039A0  6E1E               	movwf	(??___flge+2)& (0+255),c
  8247  0039A2  0E7F               	movlw	127
  8248  0039A4  1417               	andwf	___flge@ff1+3,w,c
  8249  0039A6  6E1F               	movwf	(??___flge+3)& (0+255),c
  8250  0039A8  501C               	movf	??___flge,w,c
  8251  0039AA  101D               	iorwf	??___flge+1,w,c
  8252  0039AC  101E               	iorwf	??___flge+2,w,c
  8253  0039AE  101F               	iorwf	??___flge+3,w,c
  8254  0039B0  A4D8               	btfss	status,2,c
  8255  0039B2  D008               	goto	l8182
  8256  0039B4  0E00               	movlw	0
  8257  0039B6  6E14               	movwf	___flge@ff1,c
  8258  0039B8  0E00               	movlw	0
  8259  0039BA  6E15               	movwf	___flge@ff1+1,c
  8260  0039BC  0E00               	movlw	0
  8261  0039BE  6E16               	movwf	___flge@ff1+2,c
  8262  0039C0  0E00               	movlw	0
  8263  0039C2  6E17               	movwf	___flge@ff1+3,c
  8264  0039C4                     l8182:
  8265  0039C4  0E00               	movlw	0
  8266  0039C6  1418               	andwf	___flge@ff2,w,c
  8267  0039C8  6E1C               	movwf	??___flge& (0+255),c
  8268  0039CA  0E00               	movlw	0
  8269  0039CC  1419               	andwf	___flge@ff2+1,w,c
  8270  0039CE  6E1D               	movwf	(??___flge+1)& (0+255),c
  8271  0039D0  0E80               	movlw	128
  8272  0039D2  141A               	andwf	___flge@ff2+2,w,c
  8273  0039D4  6E1E               	movwf	(??___flge+2)& (0+255),c
  8274  0039D6  0E7F               	movlw	127
  8275  0039D8  141B               	andwf	___flge@ff2+3,w,c
  8276  0039DA  6E1F               	movwf	(??___flge+3)& (0+255),c
  8277  0039DC  501C               	movf	??___flge,w,c
  8278  0039DE  101D               	iorwf	??___flge+1,w,c
  8279  0039E0  101E               	iorwf	??___flge+2,w,c
  8280  0039E2  101F               	iorwf	??___flge+3,w,c
  8281  0039E4  A4D8               	btfss	status,2,c
  8282  0039E6  D008               	goto	l8186
  8283  0039E8  0E00               	movlw	0
  8284  0039EA  6E18               	movwf	___flge@ff2,c
  8285  0039EC  0E00               	movlw	0
  8286  0039EE  6E19               	movwf	___flge@ff2+1,c
  8287  0039F0  0E00               	movlw	0
  8288  0039F2  6E1A               	movwf	___flge@ff2+2,c
  8289  0039F4  0E00               	movlw	0
  8290  0039F6  6E1B               	movwf	___flge@ff2+3,c
  8291  0039F8                     l8186:
  8292  0039F8  AE17               	btfss	___flge@ff1+3,7,c
  8293  0039FA  D009               	goto	l8190
  8294  0039FC  6C14               	negf	___flge@ff1,c
  8295  0039FE  1E15               	comf	___flge@ff1+1,f,c
  8296  003A00  B0D8               	btfsc	status,0,c
  8297  003A02  2A15               	incf	___flge@ff1+1,f,c
  8298  003A04  1E16               	comf	___flge@ff1+2,f,c
  8299  003A06  B0D8               	btfsc	status,0,c
  8300  003A08  2A16               	incf	___flge@ff1+2,f,c
  8301  003A0A  0E80               	movlw	128
  8302  003A0C  5617               	subfwb	___flge@ff1+3,f,c
  8303  003A0E                     l8190:
  8304  003A0E  AE1B               	btfss	___flge@ff2+3,7,c
  8305  003A10  D009               	goto	l1055
  8306  003A12  6C18               	negf	___flge@ff2,c
  8307  003A14  1E19               	comf	___flge@ff2+1,f,c
  8308  003A16  B0D8               	btfsc	status,0,c
  8309  003A18  2A19               	incf	___flge@ff2+1,f,c
  8310  003A1A  1E1A               	comf	___flge@ff2+2,f,c
  8311  003A1C  B0D8               	btfsc	status,0,c
  8312  003A1E  2A1A               	incf	___flge@ff2+2,f,c
  8313  003A20  0E80               	movlw	128
  8314  003A22  561B               	subfwb	___flge@ff2+3,f,c
  8315  003A24                     l1055:
  8316  003A24  0E00               	movlw	0
  8317  003A26  1A14               	xorwf	___flge@ff1,f,c
  8318  003A28  0E00               	movlw	0
  8319  003A2A  1A15               	xorwf	___flge@ff1+1,f,c
  8320  003A2C  0E00               	movlw	0
  8321  003A2E  1A16               	xorwf	___flge@ff1+2,f,c
  8322  003A30  0E80               	movlw	128
  8323  003A32  1A17               	xorwf	___flge@ff1+3,f,c
  8324  003A34  0E00               	movlw	0
  8325  003A36  1A18               	xorwf	___flge@ff2,f,c
  8326  003A38  0E00               	movlw	0
  8327  003A3A  1A19               	xorwf	___flge@ff2+1,f,c
  8328  003A3C  0E00               	movlw	0
  8329  003A3E  1A1A               	xorwf	___flge@ff2+2,f,c
  8330  003A40  0E80               	movlw	128
  8331  003A42  1A1B               	xorwf	___flge@ff2+3,f,c
  8332  003A44  5018               	movf	___flge@ff2,w,c
  8333  003A46  5C14               	subwf	___flge@ff1,w,c
  8334  003A48  5019               	movf	___flge@ff2+1,w,c
  8335  003A4A  5815               	subwfb	___flge@ff1+1,w,c
  8336  003A4C  501A               	movf	___flge@ff2+2,w,c
  8337  003A4E  5816               	subwfb	___flge@ff1+2,w,c
  8338  003A50  501B               	movf	___flge@ff2+3,w,c
  8339  003A52  5817               	subwfb	___flge@ff1+3,w,c
  8340  003A54  B0D8               	btfsc	status,0,c
  8341  003A56  D002               	goto	l8196
  8342  003A58  90D8               	bcf	status,0,c
  8343  003A5A  0012               	return	
  8344  003A5C                     l8196:
  8345  003A5C  80D8               	bsf	status,0,c
  8346  003A5E  0012               	return		;funcret
  8347  003A60                     __end_of___flge:
  8348                           	opt callstack 0
  8349                           
  8350 ;; *************** function ___fldiv *****************
  8351 ;; Defined at:
  8352 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  b               4   19[COMRAM] unsigned char 
  8355 ;;  a               4   23[COMRAM] unsigned char 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  grs             4   38[COMRAM] unsigned long 
  8358 ;;  rem             4   31[COMRAM] unsigned long 
  8359 ;;  new_exp         2   36[COMRAM] short 
  8360 ;;  aexp            1   43[COMRAM] unsigned char 
  8361 ;;  bexp            1   42[COMRAM] unsigned char 
  8362 ;;  sign            1   35[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  4   19[COMRAM] unsigned char 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:       25 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    2
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_set_pwm_duty_cycle
  8383 ;;		_errorCorrectedMove
  8384 ;;		_doOperation
  8385 ;;		_PIDCorrectedMove
  8386 ;;		_errorCorrectedMoveAccelerate
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text28
  8391  002444                     __ptext28:
  8392                           	opt callstack 0
  8393  002444                     ___fldiv:
  8394                           	opt callstack 24
  8395                           
  8396                           ;incstack = 0
  8397  002444  5017               	movf	___fldiv@b+3,w,c
  8398  002446  0B80               	andlw	128
  8399  002448  6E24               	movwf	___fldiv@sign,c
  8400  00244A  5017               	movf	___fldiv@b+3,w,c
  8401  00244C  2417               	addwf	___fldiv@b+3,w,c
  8402  00244E  6E2B               	movwf	___fldiv@bexp,c
  8403  002450  BE16               	btfsc	___fldiv@b+2,7,c
  8404  002452  802B               	bsf	___fldiv@bexp,0,c
  8405  002454  502B               	movf	___fldiv@bexp,w,c
  8406  002456  B4D8               	btfsc	status,2,c
  8407  002458  D00D               	goto	l7926
  8408  00245A  282B               	incf	___fldiv@bexp,w,c
  8409  00245C  A4D8               	btfss	status,2,c
  8410  00245E  D008               	goto	l7922
  8411  002460  0E00               	movlw	0
  8412  002462  6E14               	movwf	___fldiv@b,c
  8413  002464  0E00               	movlw	0
  8414  002466  6E15               	movwf	___fldiv@b+1,c
  8415  002468  0E00               	movlw	0
  8416  00246A  6E16               	movwf	___fldiv@b+2,c
  8417  00246C  0E00               	movlw	0
  8418  00246E  6E17               	movwf	___fldiv@b+3,c
  8419  002470                     l7922:
  8420  002470  8E16               	bsf	___fldiv@b+2,7,c
  8421  002472  D006               	goto	L16
  8422  002474                     l7926:
  8423  002474  0E00               	movlw	0
  8424  002476  6E14               	movwf	___fldiv@b,c
  8425  002478  0E00               	movlw	0
  8426  00247A  6E15               	movwf	___fldiv@b+1,c
  8427  00247C  0E00               	movlw	0
  8428  00247E  6E16               	movwf	___fldiv@b+2,c
  8429  002480                     L16:
  8430  002480  0E00               	movlw	0
  8431  002482  6E17               	movwf	___fldiv@b+3,c
  8432  002484  501B               	movf	___fldiv@a+3,w,c
  8433  002486  0B80               	andlw	128
  8434  002488  1A24               	xorwf	___fldiv@sign,f,c
  8435  00248A  501B               	movf	___fldiv@a+3,w,c
  8436  00248C  241B               	addwf	___fldiv@a+3,w,c
  8437  00248E  6E2C               	movwf	___fldiv@aexp,c
  8438  002490  BE1A               	btfsc	___fldiv@a+2,7,c
  8439  002492  802C               	bsf	___fldiv@aexp,0,c
  8440  002494  502C               	movf	___fldiv@aexp,w,c
  8441  002496  B4D8               	btfsc	status,2,c
  8442  002498  D00D               	goto	l7946
  8443  00249A  282C               	incf	___fldiv@aexp,w,c
  8444  00249C  A4D8               	btfss	status,2,c
  8445  00249E  D008               	goto	l7942
  8446  0024A0  0E00               	movlw	0
  8447  0024A2  6E18               	movwf	___fldiv@a,c
  8448  0024A4  0E00               	movlw	0
  8449  0024A6  6E19               	movwf	___fldiv@a+1,c
  8450  0024A8  0E00               	movlw	0
  8451  0024AA  6E1A               	movwf	___fldiv@a+2,c
  8452  0024AC  0E00               	movlw	0
  8453  0024AE  6E1B               	movwf	___fldiv@a+3,c
  8454  0024B0                     l7942:
  8455  0024B0  8E1A               	bsf	___fldiv@a+2,7,c
  8456  0024B2  D006               	goto	L17
  8457  0024B4                     l7946:
  8458  0024B4  0E00               	movlw	0
  8459  0024B6  6E18               	movwf	___fldiv@a,c
  8460  0024B8  0E00               	movlw	0
  8461  0024BA  6E19               	movwf	___fldiv@a+1,c
  8462  0024BC  0E00               	movlw	0
  8463  0024BE  6E1A               	movwf	___fldiv@a+2,c
  8464  0024C0                     L17:
  8465  0024C0  0E00               	movlw	0
  8466  0024C2  6E1B               	movwf	___fldiv@a+3,c
  8467  0024C4  5018               	movf	___fldiv@a,w,c
  8468  0024C6  1019               	iorwf	___fldiv@a+1,w,c
  8469  0024C8  101A               	iorwf	___fldiv@a+2,w,c
  8470  0024CA  101B               	iorwf	___fldiv@a+3,w,c
  8471  0024CC  A4D8               	btfss	status,2,c
  8472  0024CE  D017               	goto	l7960
  8473  0024D0  0E00               	movlw	0
  8474  0024D2  6E14               	movwf	___fldiv@b,c
  8475  0024D4  0E00               	movlw	0
  8476  0024D6  6E15               	movwf	___fldiv@b+1,c
  8477  0024D8  0E00               	movlw	0
  8478  0024DA  6E16               	movwf	___fldiv@b+2,c
  8479  0024DC  0E00               	movlw	0
  8480  0024DE  6E17               	movwf	___fldiv@b+3,c
  8481  0024E0  0E80               	movlw	128
  8482  0024E2  1216               	iorwf	___fldiv@b+2,f,c
  8483  0024E4  0E7F               	movlw	127
  8484  0024E6  1217               	iorwf	___fldiv@b+3,f,c
  8485  0024E8                     l7954:
  8486  0024E8  5024               	movf	___fldiv@sign,w,c
  8487  0024EA  1217               	iorwf	___fldiv@b+3,f,c
  8488  0024EC  C014  F014         	movff	___fldiv@b,?___fldiv
  8489  0024F0  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  8490  0024F4  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  8491  0024F8  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  8492  0024FC  0012               	return	
  8493  0024FE                     l7960:
  8494  0024FE  502B               	movf	___fldiv@bexp,w,c
  8495  002500  A4D8               	btfss	status,2,c
  8496  002502  D009               	goto	l7968
  8497  002504  0E00               	movlw	0
  8498  002506  6E14               	movwf	?___fldiv,c
  8499  002508  0E00               	movlw	0
  8500  00250A  6E15               	movwf	?___fldiv+1,c
  8501  00250C  0E00               	movlw	0
  8502  00250E  6E16               	movwf	?___fldiv+2,c
  8503  002510  0E00               	movlw	0
  8504  002512  6E17               	movwf	?___fldiv+3,c
  8505  002514  0012               	return	
  8506  002516                     l7968:
  8507  002516  502C               	movf	___fldiv@aexp,w,c
  8508  002518  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  8509  00251C  6A1D               	clrf	(??___fldiv+1)& (0+255),c
  8510  00251E  5E1C               	subwf	??___fldiv,f,c
  8511  002520  0E00               	movlw	0
  8512  002522  5A1D               	subwfb	??___fldiv+1,f,c
  8513  002524  0E7F               	movlw	127
  8514  002526  241C               	addwf	??___fldiv,w,c
  8515  002528  6E25               	movwf	___fldiv@new_exp,c
  8516  00252A  0E00               	movlw	0
  8517  00252C  201D               	addwfc	??___fldiv+1,w,c
  8518  00252E  6E26               	movwf	___fldiv@new_exp+1,c
  8519  002530  C014  F020         	movff	___fldiv@b,___fldiv@rem
  8520  002534  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  8521  002538  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  8522  00253C  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  8523  002540  0E00               	movlw	0
  8524  002542  6E14               	movwf	___fldiv@b,c
  8525  002544  0E00               	movlw	0
  8526  002546  6E15               	movwf	___fldiv@b+1,c
  8527  002548  0E00               	movlw	0
  8528  00254A  6E16               	movwf	___fldiv@b+2,c
  8529  00254C  0E00               	movlw	0
  8530  00254E  6E17               	movwf	___fldiv@b+3,c
  8531  002550  0E00               	movlw	0
  8532  002552  6E27               	movwf	___fldiv@grs,c
  8533  002554  0E00               	movlw	0
  8534  002556  6E28               	movwf	___fldiv@grs+1,c
  8535  002558  0E00               	movlw	0
  8536  00255A  6E29               	movwf	___fldiv@grs+2,c
  8537  00255C  0E00               	movlw	0
  8538  00255E  6E2A               	movwf	___fldiv@grs+3,c
  8539  002560  0E00               	movlw	0
  8540  002562  6E2C               	movwf	___fldiv@aexp,c
  8541  002564  D028               	goto	l1374
  8542  002566                     l7978:
  8543  002566  502C               	movf	___fldiv@aexp,w,c
  8544  002568  B4D8               	btfsc	status,2,c
  8545  00256A  D011               	goto	l7986
  8546  00256C  90D8               	bcf	status,0,c
  8547  00256E  3620               	rlcf	___fldiv@rem,f,c
  8548  002570  3621               	rlcf	___fldiv@rem+1,f,c
  8549  002572  3622               	rlcf	___fldiv@rem+2,f,c
  8550  002574  3623               	rlcf	___fldiv@rem+3,f,c
  8551  002576  90D8               	bcf	status,0,c
  8552  002578  3614               	rlcf	___fldiv@b,f,c
  8553  00257A  3615               	rlcf	___fldiv@b+1,f,c
  8554  00257C  3616               	rlcf	___fldiv@b+2,f,c
  8555  00257E  3617               	rlcf	___fldiv@b+3,f,c
  8556  002580  BE2A               	btfsc	___fldiv@grs+3,7,c
  8557  002582  8014               	bsf	___fldiv@b,0,c
  8558  002584  90D8               	bcf	status,0,c
  8559  002586  3627               	rlcf	___fldiv@grs,f,c
  8560  002588  3628               	rlcf	___fldiv@grs+1,f,c
  8561  00258A  3629               	rlcf	___fldiv@grs+2,f,c
  8562  00258C  362A               	rlcf	___fldiv@grs+3,f,c
  8563  00258E                     l7986:
  8564  00258E  5018               	movf	___fldiv@a,w,c
  8565  002590  5C20               	subwf	___fldiv@rem,w,c
  8566  002592  5019               	movf	___fldiv@a+1,w,c
  8567  002594  5821               	subwfb	___fldiv@rem+1,w,c
  8568  002596  501A               	movf	___fldiv@a+2,w,c
  8569  002598  5822               	subwfb	___fldiv@rem+2,w,c
  8570  00259A  501B               	movf	___fldiv@a+3,w,c
  8571  00259C  5823               	subwfb	___fldiv@rem+3,w,c
  8572  00259E  A0D8               	btfss	status,0,c
  8573  0025A0  D009               	goto	l7992
  8574  0025A2  8C2A               	bsf	___fldiv@grs+3,6,c
  8575  0025A4  5018               	movf	___fldiv@a,w,c
  8576  0025A6  5E20               	subwf	___fldiv@rem,f,c
  8577  0025A8  5019               	movf	___fldiv@a+1,w,c
  8578  0025AA  5A21               	subwfb	___fldiv@rem+1,f,c
  8579  0025AC  501A               	movf	___fldiv@a+2,w,c
  8580  0025AE  5A22               	subwfb	___fldiv@rem+2,f,c
  8581  0025B0  501B               	movf	___fldiv@a+3,w,c
  8582  0025B2  5A23               	subwfb	___fldiv@rem+3,f,c
  8583  0025B4                     l7992:
  8584  0025B4  2A2C               	incf	___fldiv@aexp,f,c
  8585  0025B6                     l1374:
  8586  0025B6  0E19               	movlw	25
  8587  0025B8  642C               	cpfsgt	___fldiv@aexp,c
  8588  0025BA  D7D5               	goto	l7978
  8589  0025BC  5020               	movf	___fldiv@rem,w,c
  8590  0025BE  1021               	iorwf	___fldiv@rem+1,w,c
  8591  0025C0  1022               	iorwf	___fldiv@rem+2,w,c
  8592  0025C2  1023               	iorwf	___fldiv@rem+3,w,c
  8593  0025C4  B4D8               	btfsc	status,2,c
  8594  0025C6  D011               	goto	l8004
  8595  0025C8  8027               	bsf	___fldiv@grs,0,c
  8596  0025CA  D00F               	goto	l8004
  8597  0025CC                     l7998:
  8598  0025CC  90D8               	bcf	status,0,c
  8599  0025CE  3614               	rlcf	___fldiv@b,f,c
  8600  0025D0  3615               	rlcf	___fldiv@b+1,f,c
  8601  0025D2  3616               	rlcf	___fldiv@b+2,f,c
  8602  0025D4  3617               	rlcf	___fldiv@b+3,f,c
  8603  0025D6  BE2A               	btfsc	___fldiv@grs+3,7,c
  8604  0025D8  8014               	bsf	___fldiv@b,0,c
  8605  0025DA  90D8               	bcf	status,0,c
  8606  0025DC  3627               	rlcf	___fldiv@grs,f,c
  8607  0025DE  3628               	rlcf	___fldiv@grs+1,f,c
  8608  0025E0  3629               	rlcf	___fldiv@grs+2,f,c
  8609  0025E2  362A               	rlcf	___fldiv@grs+3,f,c
  8610  0025E4  0625               	decf	___fldiv@new_exp,f,c
  8611  0025E6  A0D8               	btfss	status,0,c
  8612  0025E8  0626               	decf	___fldiv@new_exp+1,f,c
  8613  0025EA                     l8004:
  8614  0025EA  AE16               	btfss	___fldiv@b+2,7,c
  8615  0025EC  D7EF               	goto	l7998
  8616  0025EE  0E00               	movlw	0
  8617  0025F0  6E2C               	movwf	___fldiv@aexp,c
  8618  0025F2  AE2A               	btfss	___fldiv@grs+3,7,c
  8619  0025F4  D017               	goto	l1385
  8620  0025F6  0EFF               	movlw	255
  8621  0025F8  1427               	andwf	___fldiv@grs,w,c
  8622  0025FA  6E1C               	movwf	??___fldiv& (0+255),c
  8623  0025FC  0EFF               	movlw	255
  8624  0025FE  1428               	andwf	___fldiv@grs+1,w,c
  8625  002600  6E1D               	movwf	(??___fldiv+1)& (0+255),c
  8626  002602  0EFF               	movlw	255
  8627  002604  1429               	andwf	___fldiv@grs+2,w,c
  8628  002606  6E1E               	movwf	(??___fldiv+2)& (0+255),c
  8629  002608  0E7F               	movlw	127
  8630  00260A  142A               	andwf	___fldiv@grs+3,w,c
  8631  00260C  6E1F               	movwf	(??___fldiv+3)& (0+255),c
  8632  00260E  501C               	movf	??___fldiv,w,c
  8633  002610  101D               	iorwf	??___fldiv+1,w,c
  8634  002612  101E               	iorwf	??___fldiv+2,w,c
  8635  002614  101F               	iorwf	??___fldiv+3,w,c
  8636  002616  B4D8               	btfsc	status,2,c
  8637  002618  D003               	goto	l1386
  8638  00261A                     u8730:
  8639  00261A  0E01               	movlw	1
  8640  00261C  6E2C               	movwf	___fldiv@aexp,c
  8641  00261E  D002               	goto	l1385
  8642  002620                     l1386:
  8643  002620  B014               	btfsc	___fldiv@b,0,c
  8644  002622  D7FB               	goto	u8730
  8645  002624                     l1385:
  8646  002624  502C               	movf	___fldiv@aexp,w,c
  8647  002626  B4D8               	btfsc	status,2,c
  8648  002628  D01F               	goto	l8024
  8649  00262A  0E01               	movlw	1
  8650  00262C  2614               	addwf	___fldiv@b,f,c
  8651  00262E  0E00               	movlw	0
  8652  002630  2215               	addwfc	___fldiv@b+1,f,c
  8653  002632  2216               	addwfc	___fldiv@b+2,f,c
  8654  002634  2217               	addwfc	___fldiv@b+3,f,c
  8655  002636  A017               	btfss	___fldiv@b+3,0,c
  8656  002638  D017               	goto	l8024
  8657  00263A  C014  F01C         	movff	___fldiv@b,??___fldiv
  8658  00263E  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  8659  002642  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  8660  002646  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  8661  00264A  341F               	rlcf	??___fldiv+3,w,c
  8662  00264C  321F               	rrcf	??___fldiv+3,f,c
  8663  00264E  321E               	rrcf	??___fldiv+2,f,c
  8664  002650  321D               	rrcf	??___fldiv+1,f,c
  8665  002652  321C               	rrcf	??___fldiv,f,c
  8666  002654  C01C  F014         	movff	??___fldiv,___fldiv@b
  8667  002658  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  8668  00265C  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  8669  002660  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  8670  002664  4A25               	infsnz	___fldiv@new_exp,f,c
  8671  002666  2A26               	incf	___fldiv@new_exp+1,f,c
  8672  002668                     l8024:
  8673  002668  BE26               	btfsc	___fldiv@new_exp+1,7,c
  8674  00266A  D010               	goto	l8028
  8675  00266C  5026               	movf	___fldiv@new_exp+1,w,c
  8676  00266E  E103               	bnz	u8770
  8677  002670  2825               	incf	___fldiv@new_exp,w,c
  8678  002672  A0D8               	btfss	status,0,c
  8679  002674  D00B               	goto	l8028
  8680  002676                     u8770:
  8681  002676  0E00               	movlw	0
  8682  002678  6E26               	movwf	___fldiv@new_exp+1,c
  8683  00267A  6825               	setf	___fldiv@new_exp,c
  8684  00267C  0E00               	movlw	0
  8685  00267E  6E14               	movwf	___fldiv@b,c
  8686  002680  0E00               	movlw	0
  8687  002682  6E15               	movwf	___fldiv@b+1,c
  8688  002684  0E00               	movlw	0
  8689  002686  6E16               	movwf	___fldiv@b+2,c
  8690  002688  0E00               	movlw	0
  8691  00268A  6E17               	movwf	___fldiv@b+3,c
  8692  00268C                     l8028:
  8693  00268C  BE26               	btfsc	___fldiv@new_exp+1,7,c
  8694  00268E  D005               	goto	u8780
  8695  002690  5026               	movf	___fldiv@new_exp+1,w,c
  8696  002692  E111               	bnz	l8032
  8697  002694  0425               	decf	___fldiv@new_exp,w,c
  8698  002696  B0D8               	btfsc	status,0,c
  8699  002698  D00E               	goto	l8032
  8700  00269A                     u8780:
  8701  00269A  0E00               	movlw	0
  8702  00269C  6E26               	movwf	___fldiv@new_exp+1,c
  8703  00269E  0E00               	movlw	0
  8704  0026A0  6E25               	movwf	___fldiv@new_exp,c
  8705  0026A2  0E00               	movlw	0
  8706  0026A4  6E14               	movwf	___fldiv@b,c
  8707  0026A6  0E00               	movlw	0
  8708  0026A8  6E15               	movwf	___fldiv@b+1,c
  8709  0026AA  0E00               	movlw	0
  8710  0026AC  6E16               	movwf	___fldiv@b+2,c
  8711  0026AE  0E00               	movlw	0
  8712  0026B0  6E17               	movwf	___fldiv@b+3,c
  8713  0026B2  0E00               	movlw	0
  8714  0026B4  6E24               	movwf	___fldiv@sign,c
  8715  0026B6                     l8032:
  8716  0026B6  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  8717  0026BA  A02B               	btfss	___fldiv@bexp,0,c
  8718  0026BC  D002               	goto	l8038
  8719  0026BE  8E16               	bsf	___fldiv@b+2,7,c
  8720  0026C0  D001               	goto	l8040
  8721  0026C2                     l8038:
  8722  0026C2  9E16               	bcf	___fldiv@b+2,7,c
  8723  0026C4                     l8040:
  8724  0026C4  90D8               	bcf	status,0,c
  8725  0026C6  302B               	rrcf	___fldiv@bexp,w,c
  8726  0026C8  6E17               	movwf	___fldiv@b+3,c
  8727  0026CA  D70E               	goto	l7954
  8728  0026CC                     __end_of___fldiv:
  8729                           	opt callstack 0
  8730                           
  8731 ;; *************** function ___flsub *****************
  8732 ;; Defined at:
  8733 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  b               4   85[COMRAM] unsigned char 
  8736 ;;  a               4   89[COMRAM] unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  4   85[COMRAM] unsigned char 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;Total ram usage:        8 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    3
  8755 ;; This function calls:
  8756 ;;		___fladd
  8757 ;; This function is called by:
  8758 ;;		_errorCorrectedMove
  8759 ;;		_PIDCorrectedMove
  8760 ;;		_errorCorrectedMoveAccelerate
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text29
  8765  00442A                     __ptext29:
  8766                           	opt callstack 0
  8767  00442A                     ___flsub:
  8768                           	opt callstack 24
  8769                           
  8770                           ;incstack = 0
  8771  00442A  0E00               	movlw	0
  8772  00442C  1A5A               	xorwf	___flsub@a,f,c
  8773  00442E  0E00               	movlw	0
  8774  004430  1A5B               	xorwf	___flsub@a+1,f,c
  8775  004432  0E00               	movlw	0
  8776  004434  1A5C               	xorwf	___flsub@a+2,f,c
  8777  004436  0E80               	movlw	128
  8778  004438  1A5D               	xorwf	___flsub@a+3,f,c
  8779  00443A  C056  F046         	movff	___flsub@b,___fladd@b
  8780  00443E  C057  F047         	movff	___flsub@b+1,___fladd@b+1
  8781  004442  C058  F048         	movff	___flsub@b+2,___fladd@b+2
  8782  004446  C059  F049         	movff	___flsub@b+3,___fladd@b+3
  8783  00444A  C05A  F04A         	movff	___flsub@a,___fladd@a
  8784  00444E  C05B  F04B         	movff	___flsub@a+1,___fladd@a+1
  8785  004452  C05C  F04C         	movff	___flsub@a+2,___fladd@a+2
  8786  004456  C05D  F04D         	movff	___flsub@a+3,___fladd@a+3
  8787  00445A  EC9C  F010         	call	___fladd	;wreg free
  8788  00445E  C046  F056         	movff	?___fladd,?___flsub
  8789  004462  C047  F057         	movff	?___fladd+1,?___flsub+1
  8790  004466  C048  F058         	movff	?___fladd+2,?___flsub+2
  8791  00446A  C049  F059         	movff	?___fladd+3,?___flsub+3
  8792  00446E  0012               	return		;funcret
  8793  004470                     __end_of___flsub:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function ___fladd *****************
  8797 ;; Defined at:
  8798 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  b               4   69[COMRAM] unsigned char 
  8801 ;;  a               4   73[COMRAM] unsigned char 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  grs             1   84[COMRAM] unsigned char 
  8804 ;;  bexp            1   83[COMRAM] unsigned char 
  8805 ;;  aexp            1   82[COMRAM] unsigned char 
  8806 ;;  signs           1   81[COMRAM] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  4   69[COMRAM] unsigned char 
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8816 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;Total ram usage:       16 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    2
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_errorCorrectedMove
  8827 ;;		___flsub
  8828 ;;		_PIDCorrectedMove
  8829 ;;		_errorCorrectedMoveAccelerate
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text30
  8834  002138                     __ptext30:
  8835                           	opt callstack 0
  8836  002138                     ___fladd:
  8837                           	opt callstack 24
  8838                           
  8839                           ;incstack = 0
  8840  002138  5049               	movf	___fladd@b+3,w,c
  8841  00213A  0B80               	andlw	128
  8842  00213C  6E52               	movwf	___fladd@signs,c
  8843  00213E  5049               	movf	___fladd@b+3,w,c
  8844  002140  2449               	addwf	___fladd@b+3,w,c
  8845  002142  6E54               	movwf	___fladd@bexp,c
  8846  002144  BE48               	btfsc	___fladd@b+2,7,c
  8847  002146  8054               	bsf	___fladd@bexp,0,c
  8848  002148  5054               	movf	___fladd@bexp,w,c
  8849  00214A  B4D8               	btfsc	status,2,c
  8850  00214C  D00D               	goto	l8664
  8851  00214E  2854               	incf	___fladd@bexp,w,c
  8852  002150  A4D8               	btfss	status,2,c
  8853  002152  D008               	goto	l8660
  8854  002154  0E00               	movlw	0
  8855  002156  6E46               	movwf	___fladd@b,c
  8856  002158  0E00               	movlw	0
  8857  00215A  6E47               	movwf	___fladd@b+1,c
  8858  00215C  0E00               	movlw	0
  8859  00215E  6E48               	movwf	___fladd@b+2,c
  8860  002160  0E00               	movlw	0
  8861  002162  6E49               	movwf	___fladd@b+3,c
  8862  002164                     l8660:
  8863  002164  8E48               	bsf	___fladd@b+2,7,c
  8864  002166  D006               	goto	L18
  8865  002168                     l8664:
  8866  002168  0E00               	movlw	0
  8867  00216A  6E46               	movwf	___fladd@b,c
  8868  00216C  0E00               	movlw	0
  8869  00216E  6E47               	movwf	___fladd@b+1,c
  8870  002170  0E00               	movlw	0
  8871  002172  6E48               	movwf	___fladd@b+2,c
  8872  002174                     L18:
  8873  002174  0E00               	movlw	0
  8874  002176  6E49               	movwf	___fladd@b+3,c
  8875  002178  504D               	movf	___fladd@a+3,w,c
  8876  00217A  0B80               	andlw	128
  8877  00217C  6E53               	movwf	___fladd@aexp,c
  8878  00217E  5052               	movf	___fladd@signs,w,c
  8879  002180  1853               	xorwf	___fladd@aexp,w,c
  8880  002182  A4D8               	btfss	status,2,c
  8881  002184  8C52               	bsf	___fladd@signs,6,c
  8882  002186  504D               	movf	___fladd@a+3,w,c
  8883  002188  244D               	addwf	___fladd@a+3,w,c
  8884  00218A  6E53               	movwf	___fladd@aexp,c
  8885  00218C  BE4C               	btfsc	___fladd@a+2,7,c
  8886  00218E  8053               	bsf	___fladd@aexp,0,c
  8887  002190  5053               	movf	___fladd@aexp,w,c
  8888  002192  B4D8               	btfsc	status,2,c
  8889  002194  D00D               	goto	l8688
  8890  002196  2853               	incf	___fladd@aexp,w,c
  8891  002198  A4D8               	btfss	status,2,c
  8892  00219A  D008               	goto	l8684
  8893  00219C  0E00               	movlw	0
  8894  00219E  6E4A               	movwf	___fladd@a,c
  8895  0021A0  0E00               	movlw	0
  8896  0021A2  6E4B               	movwf	___fladd@a+1,c
  8897  0021A4  0E00               	movlw	0
  8898  0021A6  6E4C               	movwf	___fladd@a+2,c
  8899  0021A8  0E00               	movlw	0
  8900  0021AA  6E4D               	movwf	___fladd@a+3,c
  8901  0021AC                     l8684:
  8902  0021AC  8E4C               	bsf	___fladd@a+2,7,c
  8903  0021AE  D006               	goto	L19
  8904  0021B0                     l8688:
  8905  0021B0  0E00               	movlw	0
  8906  0021B2  6E4A               	movwf	___fladd@a,c
  8907  0021B4  0E00               	movlw	0
  8908  0021B6  6E4B               	movwf	___fladd@a+1,c
  8909  0021B8  0E00               	movlw	0
  8910  0021BA  6E4C               	movwf	___fladd@a+2,c
  8911  0021BC                     L19:
  8912  0021BC  0E00               	movlw	0
  8913  0021BE  6E4D               	movwf	___fladd@a+3,c
  8914  0021C0  5054               	movf	___fladd@bexp,w,c
  8915  0021C2  5C53               	subwf	___fladd@aexp,w,c
  8916  0021C4  B0D8               	btfsc	status,0,c
  8917  0021C6  D022               	goto	l8726
  8918  0021C8  AC52               	btfss	___fladd@signs,6,c
  8919  0021CA  D002               	goto	l8696
  8920  0021CC  0E80               	movlw	128
  8921  0021CE  1A52               	xorwf	___fladd@signs,f,c
  8922  0021D0                     l8696:
  8923  0021D0  C054  F055         	movff	___fladd@bexp,___fladd@grs
  8924  0021D4  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  8925  0021D8  C055  F053         	movff	___fladd@grs,___fladd@aexp
  8926  0021DC  C046  F055         	movff	___fladd@b,___fladd@grs
  8927  0021E0  C04A  F046         	movff	___fladd@a,___fladd@b
  8928  0021E4  C055  F04A         	movff	___fladd@grs,___fladd@a
  8929  0021E8  C047  F055         	movff	___fladd@b+1,___fladd@grs
  8930  0021EC  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  8931  0021F0  C055  F04B         	movff	___fladd@grs,___fladd@a+1
  8932  0021F4  C048  F055         	movff	___fladd@b+2,___fladd@grs
  8933  0021F8  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  8934  0021FC  C055  F04C         	movff	___fladd@grs,___fladd@a+2
  8935  002200  C049  F055         	movff	___fladd@b+3,___fladd@grs
  8936  002204  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  8937  002208  C055  F04D         	movff	___fladd@grs,___fladd@a+3
  8938  00220C                     l8726:
  8939  00220C  0E00               	movlw	0
  8940  00220E  6E55               	movwf	___fladd@grs,c
  8941  002210  5054               	movf	___fladd@bexp,w,c
  8942  002212  C053  F04E         	movff	___fladd@aexp,??___fladd
  8943  002216  6A4F               	clrf	(??___fladd+1)& (0+255),c
  8944  002218  5E4E               	subwf	??___fladd,f,c
  8945  00221A  0E00               	movlw	0
  8946  00221C  5A4F               	subwfb	??___fladd+1,f,c
  8947  00221E  BE4F               	btfsc	??___fladd+1,7,c
  8948  002220  D02C               	goto	l1319
  8949  002222  504F               	movf	??___fladd+1,w,c
  8950  002224  E104               	bnz	u10090
  8951  002226  0E1A               	movlw	26
  8952  002228  5C4E               	subwf	??___fladd,w,c
  8953  00222A  A0D8               	btfss	status,0,c
  8954  00222C  D026               	goto	l1319
  8955  00222E                     u10090:
  8956  00222E  5046               	movf	___fladd@b,w,c
  8957  002230  1047               	iorwf	___fladd@b+1,w,c
  8958  002232  1048               	iorwf	___fladd@b+2,w,c
  8959  002234  1049               	iorwf	___fladd@b+3,w,c
  8960  002236  B4D8               	btfsc	status,2,c
  8961  002238  D002               	goto	u10100
  8962  00223A  0E01               	movlw	1
  8963  00223C  D001               	goto	u10110
  8964  00223E                     u10100:
  8965  00223E  0E00               	movlw	0
  8966  002240                     u10110:
  8967  002240  6E55               	movwf	___fladd@grs,c
  8968  002242  0E00               	movlw	0
  8969  002244  6E46               	movwf	___fladd@b,c
  8970  002246  0E00               	movlw	0
  8971  002248  6E47               	movwf	___fladd@b+1,c
  8972  00224A  0E00               	movlw	0
  8973  00224C  6E48               	movwf	___fladd@b+2,c
  8974  00224E  0E00               	movlw	0
  8975  002250  6E49               	movwf	___fladd@b+3,c
  8976  002252  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  8977  002256  D015               	goto	u10140
  8978  002258                     l1320:
  8979  002258  A055               	btfss	___fladd@grs,0,c
  8980  00225A  D005               	goto	l8738
  8981  00225C  90D8               	bcf	status,0,c
  8982  00225E  3055               	rrcf	___fladd@grs,w,c
  8983  002260  0901               	iorlw	1
  8984  002262  6E55               	movwf	___fladd@grs,c
  8985  002264  D002               	goto	l8740
  8986  002266                     l8738:
  8987  002266  90D8               	bcf	status,0,c
  8988  002268  3255               	rrcf	___fladd@grs,f,c
  8989  00226A                     l8740:
  8990  00226A  B046               	btfsc	___fladd@b,0,c
  8991  00226C  8E55               	bsf	___fladd@grs,7,c
  8992  00226E  3449               	rlcf	___fladd@b+3,w,c
  8993  002270  3249               	rrcf	___fladd@b+3,f,c
  8994  002272  3248               	rrcf	___fladd@b+2,f,c
  8995  002274  3247               	rrcf	___fladd@b+1,f,c
  8996  002276  3246               	rrcf	___fladd@b,f,c
  8997  002278  2A54               	incf	___fladd@bexp,f,c
  8998  00227A                     l1319:
  8999  00227A  5053               	movf	___fladd@aexp,w,c
  9000  00227C  5C54               	subwf	___fladd@bexp,w,c
  9001  00227E  A0D8               	btfss	status,0,c
  9002  002280  D7EB               	goto	l1320
  9003  002282                     u10140:
  9004  002282  BC52               	btfsc	___fladd@signs,6,c
  9005  002284  D028               	goto	l8772
  9006  002286  5054               	movf	___fladd@bexp,w,c
  9007  002288  A4D8               	btfss	status,2,c
  9008  00228A  D009               	goto	l8754
  9009  00228C  0E00               	movlw	0
  9010  00228E  6E46               	movwf	?___fladd,c
  9011  002290  0E00               	movlw	0
  9012  002292  6E47               	movwf	?___fladd+1,c
  9013  002294  0E00               	movlw	0
  9014  002296  6E48               	movwf	?___fladd+2,c
  9015  002298  0E00               	movlw	0
  9016  00229A  6E49               	movwf	?___fladd+3,c
  9017  00229C  0012               	return	
  9018  00229E                     l8754:
  9019  00229E  504A               	movf	___fladd@a,w,c
  9020  0022A0  2646               	addwf	___fladd@b,f,c
  9021  0022A2  504B               	movf	___fladd@a+1,w,c
  9022  0022A4  2247               	addwfc	___fladd@b+1,f,c
  9023  0022A6  504C               	movf	___fladd@a+2,w,c
  9024  0022A8  2248               	addwfc	___fladd@b+2,f,c
  9025  0022AA  504D               	movf	___fladd@a+3,w,c
  9026  0022AC  2249               	addwfc	___fladd@b+3,f,c
  9027  0022AE  A049               	btfss	___fladd@b+3,0,c
  9028  0022B0  D071               	goto	u10270
  9029  0022B2  A055               	btfss	___fladd@grs,0,c
  9030  0022B4  D005               	goto	l8762
  9031  0022B6  90D8               	bcf	status,0,c
  9032  0022B8  3055               	rrcf	___fladd@grs,w,c
  9033  0022BA  0901               	iorlw	1
  9034  0022BC  6E55               	movwf	___fladd@grs,c
  9035  0022BE  D002               	goto	l8764
  9036  0022C0                     l8762:
  9037  0022C0  90D8               	bcf	status,0,c
  9038  0022C2  3255               	rrcf	___fladd@grs,f,c
  9039  0022C4                     l8764:
  9040  0022C4  B046               	btfsc	___fladd@b,0,c
  9041  0022C6  8E55               	bsf	___fladd@grs,7,c
  9042  0022C8  3449               	rlcf	___fladd@b+3,w,c
  9043  0022CA  3249               	rrcf	___fladd@b+3,f,c
  9044  0022CC  3248               	rrcf	___fladd@b+2,f,c
  9045  0022CE  3247               	rrcf	___fladd@b+1,f,c
  9046  0022D0  3246               	rrcf	___fladd@b,f,c
  9047  0022D2  2A54               	incf	___fladd@bexp,f,c
  9048  0022D4  D05F               	goto	u10270
  9049  0022D6                     l8772:
  9050  0022D6  504A               	movf	___fladd@a,w,c
  9051  0022D8  5C46               	subwf	___fladd@b,w,c
  9052  0022DA  504B               	movf	___fladd@a+1,w,c
  9053  0022DC  5847               	subwfb	___fladd@b+1,w,c
  9054  0022DE  504C               	movf	___fladd@a+2,w,c
  9055  0022E0  5848               	subwfb	___fladd@b+2,w,c
  9056  0022E2  5049               	movf	___fladd@b+3,w,c
  9057  0022E4  0A80               	xorlw	128
  9058  0022E6  6E4E               	movwf	??___fladd& (0+255),c
  9059  0022E8  504D               	movf	___fladd@a+3,w,c
  9060  0022EA  0A80               	xorlw	128
  9061  0022EC  584E               	subwfb	??___fladd& (0+255),w,c
  9062  0022EE  B0D8               	btfsc	status,0,c
  9063  0022F0  D025               	goto	l8782
  9064  0022F2  5046               	movf	___fladd@b,w,c
  9065  0022F4  5C4A               	subwf	___fladd@a,w,c
  9066  0022F6  6E4E               	movwf	??___fladd& (0+255),c
  9067  0022F8  5047               	movf	___fladd@b+1,w,c
  9068  0022FA  584B               	subwfb	___fladd@a+1,w,c
  9069  0022FC  6E4F               	movwf	(??___fladd+1)& (0+255),c
  9070  0022FE  5048               	movf	___fladd@b+2,w,c
  9071  002300  584C               	subwfb	___fladd@a+2,w,c
  9072  002302  6E50               	movwf	(??___fladd+2)& (0+255),c
  9073  002304  5049               	movf	___fladd@b+3,w,c
  9074  002306  584D               	subwfb	___fladd@a+3,w,c
  9075  002308  6E51               	movwf	(??___fladd+3)& (0+255),c
  9076  00230A  0EFF               	movlw	255
  9077  00230C  244E               	addwf	??___fladd,w,c
  9078  00230E  6E46               	movwf	___fladd@b,c
  9079  002310  0EFF               	movlw	255
  9080  002312  204F               	addwfc	??___fladd+1,w,c
  9081  002314  6E47               	movwf	___fladd@b+1,c
  9082  002316  0EFF               	movlw	255
  9083  002318  2050               	addwfc	??___fladd+2,w,c
  9084  00231A  6E48               	movwf	___fladd@b+2,c
  9085  00231C  0EFF               	movlw	255
  9086  00231E  2051               	addwfc	??___fladd+3,w,c
  9087  002320  6E49               	movwf	___fladd@b+3,c
  9088  002322  0E80               	movlw	128
  9089  002324  1A52               	xorwf	___fladd@signs,f,c
  9090  002326  6C55               	negf	___fladd@grs,c
  9091  002328  5055               	movf	___fladd@grs,w,c
  9092  00232A  A4D8               	btfss	status,2,c
  9093  00232C  D00F               	goto	l1335
  9094  00232E  0E01               	movlw	1
  9095  002330  2646               	addwf	___fladd@b,f,c
  9096  002332  0E00               	movlw	0
  9097  002334  2247               	addwfc	___fladd@b+1,f,c
  9098  002336  2248               	addwfc	___fladd@b+2,f,c
  9099  002338  2249               	addwfc	___fladd@b+3,f,c
  9100  00233A  D008               	goto	l1335
  9101  00233C                     l8782:
  9102  00233C  504A               	movf	___fladd@a,w,c
  9103  00233E  5E46               	subwf	___fladd@b,f,c
  9104  002340  504B               	movf	___fladd@a+1,w,c
  9105  002342  5A47               	subwfb	___fladd@b+1,f,c
  9106  002344  504C               	movf	___fladd@a+2,w,c
  9107  002346  5A48               	subwfb	___fladd@b+2,f,c
  9108  002348  504D               	movf	___fladd@a+3,w,c
  9109  00234A  5A49               	subwfb	___fladd@b+3,f,c
  9110  00234C                     l1335:
  9111  00234C  5046               	movf	___fladd@b,w,c
  9112  00234E  1047               	iorwf	___fladd@b+1,w,c
  9113  002350  1048               	iorwf	___fladd@b+2,w,c
  9114  002352  1049               	iorwf	___fladd@b+3,w,c
  9115  002354  A4D8               	btfss	status,2,c
  9116  002356  D01C               	goto	l8806
  9117  002358  5055               	movf	___fladd@grs,w,c
  9118  00235A  A4D8               	btfss	status,2,c
  9119  00235C  D019               	goto	l8806
  9120  00235E  0E00               	movlw	0
  9121  002360  6E46               	movwf	?___fladd,c
  9122  002362  0E00               	movlw	0
  9123  002364  6E47               	movwf	?___fladd+1,c
  9124  002366  0E00               	movlw	0
  9125  002368  6E48               	movwf	?___fladd+2,c
  9126  00236A  0E00               	movlw	0
  9127  00236C  6E49               	movwf	?___fladd+3,c
  9128  00236E  0012               	return	
  9129  002370                     l8790:
  9130  002370  90D8               	bcf	status,0,c
  9131  002372  3646               	rlcf	___fladd@b,f,c
  9132  002374  3647               	rlcf	___fladd@b+1,f,c
  9133  002376  3648               	rlcf	___fladd@b+2,f,c
  9134  002378  3649               	rlcf	___fladd@b+3,f,c
  9135  00237A  BE55               	btfsc	___fladd@grs,7,c
  9136  00237C  8046               	bsf	___fladd@b,0,c
  9137  00237E  A055               	btfss	___fladd@grs,0,c
  9138  002380  D002               	goto	l8800
  9139  002382  80D8               	bsf	status,0,c
  9140  002384  D001               	goto	L20
  9141  002386                     l8800:
  9142  002386  90D8               	bcf	status,0,c
  9143  002388                     L20:
  9144  002388  3655               	rlcf	___fladd@grs,f,c
  9145  00238A  5054               	movf	___fladd@bexp,w,c
  9146  00238C  A4D8               	btfss	status,2,c
  9147  00238E  0654               	decf	___fladd@bexp,f,c
  9148  002390                     l8806:
  9149  002390  AE48               	btfss	___fladd@b+2,7,c
  9150  002392  D7EE               	goto	l8790
  9151  002394                     u10270:
  9152  002394  0E00               	movlw	0
  9153  002396  6E53               	movwf	___fladd@aexp,c
  9154  002398  AE55               	btfss	___fladd@grs,7,c
  9155  00239A  D00B               	goto	l1344
  9156  00239C  C055  F04E         	movff	___fladd@grs,??___fladd
  9157  0023A0  0E7F               	movlw	127
  9158  0023A2  164E               	andwf	??___fladd,f,c
  9159  0023A4  B4D8               	btfsc	status,2,c
  9160  0023A6  D003               	goto	l1345
  9161  0023A8                     u10290:
  9162  0023A8  0E01               	movlw	1
  9163  0023AA  6E53               	movwf	___fladd@aexp,c
  9164  0023AC  D002               	goto	l1344
  9165  0023AE                     l1345:
  9166  0023AE  B046               	btfsc	___fladd@b,0,c
  9167  0023B0  D7FB               	goto	u10290
  9168  0023B2                     l1344:
  9169  0023B2  5053               	movf	___fladd@aexp,w,c
  9170  0023B4  B4D8               	btfsc	status,2,c
  9171  0023B6  D020               	goto	l8826
  9172  0023B8  0E01               	movlw	1
  9173  0023BA  2646               	addwf	___fladd@b,f,c
  9174  0023BC  0E00               	movlw	0
  9175  0023BE  2247               	addwfc	___fladd@b+1,f,c
  9176  0023C0  2248               	addwfc	___fladd@b+2,f,c
  9177  0023C2  2249               	addwfc	___fladd@b+3,f,c
  9178  0023C4  A049               	btfss	___fladd@b+3,0,c
  9179  0023C6  D018               	goto	l8826
  9180  0023C8  C046  F04E         	movff	___fladd@b,??___fladd
  9181  0023CC  C047  F04F         	movff	___fladd@b+1,??___fladd+1
  9182  0023D0  C048  F050         	movff	___fladd@b+2,??___fladd+2
  9183  0023D4  C049  F051         	movff	___fladd@b+3,??___fladd+3
  9184  0023D8  3451               	rlcf	??___fladd+3,w,c
  9185  0023DA  3251               	rrcf	??___fladd+3,f,c
  9186  0023DC  3250               	rrcf	??___fladd+2,f,c
  9187  0023DE  324F               	rrcf	??___fladd+1,f,c
  9188  0023E0  324E               	rrcf	??___fladd,f,c
  9189  0023E2  C04E  F046         	movff	??___fladd,___fladd@b
  9190  0023E6  C04F  F047         	movff	??___fladd+1,___fladd@b+1
  9191  0023EA  C050  F048         	movff	??___fladd+2,___fladd@b+2
  9192  0023EE  C051  F049         	movff	??___fladd+3,___fladd@b+3
  9193  0023F2  2854               	incf	___fladd@bexp,w,c
  9194  0023F4  A4D8               	btfss	status,2,c
  9195  0023F6  2A54               	incf	___fladd@bexp,f,c
  9196  0023F8                     l8826:
  9197  0023F8  2854               	incf	___fladd@bexp,w,c
  9198  0023FA  B4D8               	btfsc	status,2,c
  9199  0023FC  D003               	goto	u10350
  9200  0023FE  5054               	movf	___fladd@bexp,w,c
  9201  002400  A4D8               	btfss	status,2,c
  9202  002402  D00D               	goto	l8834
  9203  002404                     u10350:
  9204  002404  0E00               	movlw	0
  9205  002406  6E46               	movwf	___fladd@b,c
  9206  002408  0E00               	movlw	0
  9207  00240A  6E47               	movwf	___fladd@b+1,c
  9208  00240C  0E00               	movlw	0
  9209  00240E  6E48               	movwf	___fladd@b+2,c
  9210  002410  0E00               	movlw	0
  9211  002412  6E49               	movwf	___fladd@b+3,c
  9212  002414  5054               	movf	___fladd@bexp,w,c
  9213  002416  A4D8               	btfss	status,2,c
  9214  002418  D002               	goto	l8834
  9215  00241A  0E00               	movlw	0
  9216  00241C  6E52               	movwf	___fladd@signs,c
  9217  00241E                     l8834:
  9218  00241E  A054               	btfss	___fladd@bexp,0,c
  9219  002420  D002               	goto	l8838
  9220  002422  8E48               	bsf	___fladd@b+2,7,c
  9221  002424  D001               	goto	l8840
  9222  002426                     l8838:
  9223  002426  9E48               	bcf	___fladd@b+2,7,c
  9224  002428                     l8840:
  9225  002428  90D8               	bcf	status,0,c
  9226  00242A  3054               	rrcf	___fladd@bexp,w,c
  9227  00242C  6E49               	movwf	___fladd@b+3,c
  9228  00242E  BE52               	btfsc	___fladd@signs,7,c
  9229  002430  8E49               	bsf	___fladd@b+3,7,c
  9230  002432  C046  F046         	movff	___fladd@b,?___fladd
  9231  002436  C047  F047         	movff	___fladd@b+1,?___fladd+1
  9232  00243A  C048  F048         	movff	___fladd@b+2,?___fladd+2
  9233  00243E  C049  F049         	movff	___fladd@b+3,?___fladd+3
  9234  002442  0012               	return		;funcret
  9235  002444                     __end_of___fladd:
  9236                           	opt callstack 0
  9237                           
  9238 ;; *************** function _init_motor_PWM *****************
  9239 ;; Defined at:
  9240 ;;		line 362 in file "main.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    2
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_doOperation
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text31
  9269  004700                     __ptext31:
  9270                           	opt callstack 0
  9271  004700                     _init_motor_PWM:
  9272                           	opt callstack 27
  9273                           
  9274                           ;main.c: 370:     TRISCbits.TRISC2 = 1;
  9275                           
  9276                           ;incstack = 0
  9277  004700  8494               	bsf	3988,2,c	;volatile
  9278                           
  9279                           ;main.c: 371:     TRISCbits.TRISC1 = 1;
  9280  004702  8294               	bsf	3988,1,c	;volatile
  9281                           
  9282                           ;main.c: 374:     const unsigned long FREQUENCY = 1000ul;;main.c: 375:     const unsigne
      +                          d char TIMER2_PRESCALER = 16;;main.c: 376:     PR2 = (10000000 / (FREQUENCY * 4 * TIMER2
      +                          _PRESCALER)) - 1;
  9283  004704  0E9B               	movlw	155
  9284  004706  6ECB               	movwf	4043,c	;volatile
  9285                           
  9286                           ;main.c: 379:     P1M1 = 0;
  9287  004708  9EBD               	bcf	4029,7,c	;volatile
  9288                           
  9289                           ;main.c: 380:     P1M0 = 0;
  9290  00470A  9CBD               	bcf	4029,6,c	;volatile
  9291                           
  9292                           ;main.c: 381:     CCP1M3 = 1;
  9293  00470C  86BD               	bsf	4029,3,c	;volatile
  9294                           
  9295                           ;main.c: 382:     CCP1M2 = 1;
  9296  00470E  84BD               	bsf	4029,2,c	;volatile
  9297                           
  9298                           ;main.c: 383:     CCP1M1 = 0;
  9299  004710  92BD               	bcf	4029,1,c	;volatile
  9300                           
  9301                           ;main.c: 384:     CCP1M0 = 0;
  9302  004712  90BD               	bcf	4029,0,c	;volatile
  9303                           
  9304                           ;main.c: 386:     CCP2M3 = 1;
  9305  004714  86BA               	bsf	4026,3,c	;volatile
  9306                           
  9307                           ;main.c: 387:     CCP2M2 = 1;
  9308  004716  84BA               	bsf	4026,2,c	;volatile
  9309                           
  9310                           ;main.c: 388:     CCP2M1 = 0;
  9311  004718  92BA               	bcf	4026,1,c	;volatile
  9312                           
  9313                           ;main.c: 389:     CCP2M0 = 0;
  9314  00471A  90BA               	bcf	4026,0,c	;volatile
  9315                           
  9316                           ;main.c: 392:     T2CKPS0 = 1;
  9317  00471C  80CA               	bsf	4042,0,c	;volatile
  9318                           
  9319                           ;main.c: 393:     T2CKPS1 = 1;
  9320  00471E  82CA               	bsf	4042,1,c	;volatile
  9321                           
  9322                           ;main.c: 396:     TMR2ON = 1;
  9323  004720  84CA               	bsf	4042,2,c	;volatile
  9324                           
  9325                           ;main.c: 399:     TRISCbits.TRISC2 = 0;
  9326  004722  9494               	bcf	3988,2,c	;volatile
  9327                           
  9328                           ;main.c: 400:     TRISCbits.TRISC1 = 0;
  9329  004724  9294               	bcf	3988,1,c	;volatile
  9330  004726  0012               	return		;funcret
  9331  004728                     __end_of_init_motor_PWM:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function ___lldiv *****************
  9335 ;; Defined at:
  9336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  dividend        4    5[COMRAM] unsigned long 
  9339 ;;  divisor         4    9[COMRAM] unsigned long 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  quotient        4   13[COMRAM] unsigned long 
  9342 ;;  counter         1   17[COMRAM] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  4    5[COMRAM] unsigned long 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;Total ram usage:       13 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    2
  9359 ;; This function calls:
  9360 ;;		Nothing
  9361 ;; This function is called by:
  9362 ;;		_doOperation
  9363 ;;		_I2C_Master_Init
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text32
  9368  003F3A                     __ptext32:
  9369                           	opt callstack 0
  9370  003F3A                     ___lldiv:
  9371                           	opt callstack 26
  9372                           
  9373                           ;incstack = 0
  9374  003F3A  0E00               	movlw	0
  9375  003F3C  6E0E               	movwf	___lldiv@quotient,c
  9376  003F3E  0E00               	movlw	0
  9377  003F40  6E0F               	movwf	___lldiv@quotient+1,c
  9378  003F42  0E00               	movlw	0
  9379  003F44  6E10               	movwf	___lldiv@quotient+2,c
  9380  003F46  0E00               	movlw	0
  9381  003F48  6E11               	movwf	___lldiv@quotient+3,c
  9382  003F4A  500A               	movf	___lldiv@divisor,w,c
  9383  003F4C  100B               	iorwf	___lldiv@divisor+1,w,c
  9384  003F4E  100C               	iorwf	___lldiv@divisor+2,w,c
  9385  003F50  100D               	iorwf	___lldiv@divisor+3,w,c
  9386  003F52  B4D8               	btfsc	status,2,c
  9387  003F54  D02A               	goto	l817
  9388  003F56  0E01               	movlw	1
  9389  003F58  6E12               	movwf	___lldiv@counter,c
  9390  003F5A  D006               	goto	l9124
  9391  003F5C                     l9122:
  9392  003F5C  90D8               	bcf	status,0,c
  9393  003F5E  360A               	rlcf	___lldiv@divisor,f,c
  9394  003F60  360B               	rlcf	___lldiv@divisor+1,f,c
  9395  003F62  360C               	rlcf	___lldiv@divisor+2,f,c
  9396  003F64  360D               	rlcf	___lldiv@divisor+3,f,c
  9397  003F66  2A12               	incf	___lldiv@counter,f,c
  9398  003F68                     l9124:
  9399  003F68  AE0D               	btfss	___lldiv@divisor+3,7,c
  9400  003F6A  D7F8               	goto	l9122
  9401  003F6C                     u10730:
  9402  003F6C  90D8               	bcf	status,0,c
  9403  003F6E  360E               	rlcf	___lldiv@quotient,f,c
  9404  003F70  360F               	rlcf	___lldiv@quotient+1,f,c
  9405  003F72  3610               	rlcf	___lldiv@quotient+2,f,c
  9406  003F74  3611               	rlcf	___lldiv@quotient+3,f,c
  9407  003F76  500A               	movf	___lldiv@divisor,w,c
  9408  003F78  5C06               	subwf	___lldiv@dividend,w,c
  9409  003F7A  500B               	movf	___lldiv@divisor+1,w,c
  9410  003F7C  5807               	subwfb	___lldiv@dividend+1,w,c
  9411  003F7E  500C               	movf	___lldiv@divisor+2,w,c
  9412  003F80  5808               	subwfb	___lldiv@dividend+2,w,c
  9413  003F82  500D               	movf	___lldiv@divisor+3,w,c
  9414  003F84  5809               	subwfb	___lldiv@dividend+3,w,c
  9415  003F86  A0D8               	btfss	status,0,c
  9416  003F88  D009               	goto	l9134
  9417  003F8A  500A               	movf	___lldiv@divisor,w,c
  9418  003F8C  5E06               	subwf	___lldiv@dividend,f,c
  9419  003F8E  500B               	movf	___lldiv@divisor+1,w,c
  9420  003F90  5A07               	subwfb	___lldiv@dividend+1,f,c
  9421  003F92  500C               	movf	___lldiv@divisor+2,w,c
  9422  003F94  5A08               	subwfb	___lldiv@dividend+2,f,c
  9423  003F96  500D               	movf	___lldiv@divisor+3,w,c
  9424  003F98  5A09               	subwfb	___lldiv@dividend+3,f,c
  9425  003F9A  800E               	bsf	___lldiv@quotient,0,c
  9426  003F9C                     l9134:
  9427  003F9C  90D8               	bcf	status,0,c
  9428  003F9E  320D               	rrcf	___lldiv@divisor+3,f,c
  9429  003FA0  320C               	rrcf	___lldiv@divisor+2,f,c
  9430  003FA2  320B               	rrcf	___lldiv@divisor+1,f,c
  9431  003FA4  320A               	rrcf	___lldiv@divisor,f,c
  9432  003FA6  2E12               	decfsz	___lldiv@counter,f,c
  9433  003FA8  D7E1               	goto	u10730
  9434  003FAA                     l817:
  9435  003FAA  C00E  F006         	movff	___lldiv@quotient,?___lldiv
  9436  003FAE  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
  9437  003FB2  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
  9438  003FB6  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
  9439  003FBA  0012               	return		;funcret
  9440  003FBC                     __end_of___lldiv:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function ___awmod *****************
  9444 ;; Defined at:
  9445 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  dividend        2    5[COMRAM] int 
  9448 ;;  divisor         2    7[COMRAM] int 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  sign            1   10[COMRAM] unsigned char 
  9451 ;;  counter         1    9[COMRAM] unsigned char 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  2    5[COMRAM] int 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;Total ram usage:        6 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    2
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_doOperation
  9472 ;;		_saveLogs
  9473 ;;		_readLogs
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text33
  9478  003FBC                     __ptext33:
  9479                           	opt callstack 0
  9480  003FBC                     ___awmod:
  9481                           	opt callstack 27
  9482                           
  9483                           ;incstack = 0
  9484  003FBC  0E00               	movlw	0
  9485  003FBE  6E0B               	movwf	___awmod@sign,c
  9486  003FC0  AE07               	btfss	___awmod@dividend+1,7,c
  9487  003FC2  D006               	goto	l9442
  9488  003FC4  6C06               	negf	___awmod@dividend,c
  9489  003FC6  1E07               	comf	___awmod@dividend+1,f,c
  9490  003FC8  B0D8               	btfsc	status,0,c
  9491  003FCA  2A07               	incf	___awmod@dividend+1,f,c
  9492  003FCC  0E01               	movlw	1
  9493  003FCE  6E0B               	movwf	___awmod@sign,c
  9494  003FD0                     l9442:
  9495  003FD0  AE09               	btfss	___awmod@divisor+1,7,c
  9496  003FD2  D004               	goto	l9446
  9497  003FD4  6C08               	negf	___awmod@divisor,c
  9498  003FD6  1E09               	comf	___awmod@divisor+1,f,c
  9499  003FD8  B0D8               	btfsc	status,0,c
  9500  003FDA  2A09               	incf	___awmod@divisor+1,f,c
  9501  003FDC                     l9446:
  9502  003FDC  5008               	movf	___awmod@divisor,w,c
  9503  003FDE  1009               	iorwf	___awmod@divisor+1,w,c
  9504  003FE0  B4D8               	btfsc	status,2,c
  9505  003FE2  D018               	goto	l9462
  9506  003FE4  0E01               	movlw	1
  9507  003FE6  6E0A               	movwf	___awmod@counter,c
  9508  003FE8  D004               	goto	l9452
  9509  003FEA                     l9450:
  9510  003FEA  90D8               	bcf	status,0,c
  9511  003FEC  3608               	rlcf	___awmod@divisor,f,c
  9512  003FEE  3609               	rlcf	___awmod@divisor+1,f,c
  9513  003FF0  2A0A               	incf	___awmod@counter,f,c
  9514  003FF2                     l9452:
  9515  003FF2  AE09               	btfss	___awmod@divisor+1,7,c
  9516  003FF4  D7FA               	goto	l9450
  9517  003FF6                     u11100:
  9518  003FF6  5008               	movf	___awmod@divisor,w,c
  9519  003FF8  5C06               	subwf	___awmod@dividend,w,c
  9520  003FFA  5009               	movf	___awmod@divisor+1,w,c
  9521  003FFC  5807               	subwfb	___awmod@dividend+1,w,c
  9522  003FFE  A0D8               	btfss	status,0,c
  9523  004000  D004               	goto	l9458
  9524  004002  5008               	movf	___awmod@divisor,w,c
  9525  004004  5E06               	subwf	___awmod@dividend,f,c
  9526  004006  5009               	movf	___awmod@divisor+1,w,c
  9527  004008  5A07               	subwfb	___awmod@dividend+1,f,c
  9528  00400A                     l9458:
  9529  00400A  90D8               	bcf	status,0,c
  9530  00400C  3209               	rrcf	___awmod@divisor+1,f,c
  9531  00400E  3208               	rrcf	___awmod@divisor,f,c
  9532  004010  2E0A               	decfsz	___awmod@counter,f,c
  9533  004012  D7F1               	goto	u11100
  9534  004014                     l9462:
  9535  004014  500B               	movf	___awmod@sign,w,c
  9536  004016  B4D8               	btfsc	status,2,c
  9537  004018  D004               	goto	l9466
  9538  00401A  6C06               	negf	___awmod@dividend,c
  9539  00401C  1E07               	comf	___awmod@dividend+1,f,c
  9540  00401E  B0D8               	btfsc	status,0,c
  9541  004020  2A07               	incf	___awmod@dividend+1,f,c
  9542  004022                     l9466:
  9543  004022  C006  F006         	movff	___awmod@dividend,?___awmod
  9544  004026  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  9545  00402A  0012               	return		;funcret
  9546  00402C                     __end_of___awmod:
  9547                           	opt callstack 0
  9548                           
  9549 ;; *************** function _TIMER_INIT *****************
  9550 ;; Defined at:
  9551 ;;		line 222 in file "main.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    2
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_doOperation
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text34
  9580  004822                     __ptext34:
  9581                           	opt callstack 0
  9582  004822                     _TIMER_INIT:
  9583                           	opt callstack 27
  9584                           
  9585                           ;main.c: 223:     T0CONbits.TMR0ON = 0;
  9586                           
  9587                           ;incstack = 0
  9588  004822  9ED5               	bcf	4053,7,c	;volatile
  9589                           
  9590                           ;main.c: 224:     T0CONbits.T08BIT = 0;
  9591  004824  9CD5               	bcf	4053,6,c	;volatile
  9592                           
  9593                           ;main.c: 225:     T0CONbits.T0CS = 0;
  9594  004826  9AD5               	bcf	4053,5,c	;volatile
  9595                           
  9596                           ;main.c: 226:     T0CONbits.PSA = 0;
  9597  004828  96D5               	bcf	4053,3,c	;volatile
  9598                           
  9599                           ;main.c: 227:     T0CONbits.T0PS = 0b000;
  9600  00482A  0EF8               	movlw	-8
  9601  00482C  16D5               	andwf	4053,f,c	;volatile
  9602                           
  9603                           ;main.c: 228:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
  9604  00482E  0EFB               	movlw	251
  9605  004830  6ED7               	movwf	4055,c	;volatile
  9606                           
  9607                           ;main.c: 229:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
  9608  004832  0E1E               	movlw	30
  9609  004834  6ED6               	movwf	4054,c	;volatile
  9610                           
  9611                           ;main.c: 230:     T0CONbits.TMR0ON = 1;
  9612  004836  8ED5               	bsf	4053,7,c	;volatile
  9613                           
  9614                           ;main.c: 231:     INTCONbits.TMR0IE = 1;
  9615  004838  8AF2               	bsf	4082,5,c	;volatile
  9616                           
  9617                           ;main.c: 233:     INTCONbits.GIE = 1;
  9618  00483A  8EF2               	bsf	4082,7,c	;volatile
  9619                           
  9620                           ;main.c: 234:     INTCONbits.PEIE = 1;
  9621  00483C  8CF2               	bsf	4082,6,c	;volatile
  9622  00483E  0012               	return		;funcret
  9623  004840                     __end_of_TIMER_INIT:
  9624                           	opt callstack 0
  9625                           
  9626 ;; *************** function _doDisplayLog *****************
  9627 ;; Defined at:
  9628 ;;		line 46 in file "main.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  logNumber       2   39[BANK0 ] int 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  keyValue        1  106[COMRAM] unsigned char 
  9633 ;;  keypress        1  104[COMRAM] unsigned char 
  9634 ;;  currentPole     2  109[COMRAM] int 
  9635 ;;  currentDispl    1  105[COMRAM] enum E3251
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;      Totals:        10       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;Total ram usage:       12 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:   13
  9652 ;; This function calls:
  9653 ;;		___wmul
  9654 ;;		_lcdInst
  9655 ;;		_printf
  9656 ;; This function is called by:
  9657 ;;		_main
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text35
  9662  001692                     __ptext35:
  9663                           	opt callstack 0
  9664  001692                     _doDisplayLog:
  9665                           	opt callstack 17
  9666                           
  9667                           ;main.c: 47:     { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.0)));};
  9668                           
  9669                           ;incstack = 0
  9670  001692  0E80               	movlw	128
  9671  001694  EC4F  F024         	call	_lcdInst
  9672  001698  0E07               	movlw	7
  9673  00169A  6E66               	movwf	??_doDisplayLog& (0+255),c
  9674  00169C  0E7D               	movlw	125
  9675  00169E                     u12187:
  9676  00169E  2EE8               	decfsz	wreg,f,c
  9677  0016A0  D7FE               	bra	u12187
  9678  0016A2  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  9679  0016A4  D7FC               	bra	u12187
  9680  0016A6  F000               	nop	
  9681                           
  9682                           ;main.c: 52:     int currentPole = 1;
  9683  0016A8  0E00               	movlw	0
  9684  0016AA  6E6F               	movwf	doDisplayLog@currentPole+1,c
  9685  0016AC  0E01               	movlw	1
  9686  0016AE  6E6E               	movwf	doDisplayLog@currentPole,c
  9687                           
  9688                           ;main.c: 54:     enum displayStates currentDisplayState = opTime;
  9689  0016B0  0E00               	movlw	0
  9690  0016B2  6E6A               	movwf	doDisplayLog@currentDisplayState,c
  9691  0016B4  D15C               	goto	l9528
  9692  0016B6                     l9478:
  9693                           
  9694                           ;main.c: 59:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  9695  0016B6  0E80               	movlw	128
  9696  0016B8  EC4F  F024         	call	_lcdInst
  9697  0016BC  0E07               	movlw	7
  9698  0016BE  6E66               	movwf	??_doDisplayLog& (0+255),c
  9699  0016C0  0E7D               	movlw	125
  9700  0016C2                     u12197:
  9701  0016C2  2EE8               	decfsz	wreg,f,c
  9702  0016C4  D7FE               	bra	u12197
  9703  0016C6  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  9704  0016C8  D7FC               	bra	u12197
  9705  0016CA  F000               	nop	
  9706                           
  9707                           ;main.c: 60:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  9708  0016CC  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9709  0016D0  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9710  0016D4  0E00               	movlw	0
  9711  0016D6  6E09               	movwf	___wmul@multiplicand+1,c
  9712  0016D8  0E60               	movlw	96
  9713  0016DA  6E08               	movwf	___wmul@multiplicand,c
  9714  0016DC  ECA8  F023         	call	___wmul	;wreg free
  9715  0016E0  0E93               	movlw	low _logs
  9716  0016E2  2406               	addwf	?___wmul,w,c
  9717  0016E4  6ED9               	movwf	fsr2l,c
  9718  0016E6  0E01               	movlw	high _logs
  9719  0016E8  2007               	addwfc	?___wmul+1,w,c
  9720  0016EA  6EDA               	movwf	fsr2h,c
  9721  0016EC  CFDE F06C          	movff	postinc2,_doDisplayLog$2391
  9722  0016F0  CFDD F06D          	movff	postdec2,_doDisplayLog$2391+1
  9723                           
  9724                           ;main.c: 60:                 printf("%s%d%s", "OP. TIME ",logs[logNumber][0], "s");
  9725  0016F4  0EFD               	movlw	low STR_1
  9726  0016F6  0100               	movlb	0	; () banked
  9727  0016F8  6F9D               	movwf	printf@fmt& (0+255),b
  9728  0016FA  0EFC               	movlw	high STR_1
  9729  0016FC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9730  0016FE  0EA1               	movlw	low STR_2
  9731  001700  6F9F               	movwf	(?_printf+2)& (0+255),b
  9732  001702  0EFC               	movlw	high STR_2
  9733  001704  6FA0               	movwf	(?_printf+3)& (0+255),b
  9734  001706  C06C  F0A1         	movff	_doDisplayLog$2391,?_printf+4
  9735  00170A  C06D  F0A2         	movff	_doDisplayLog$2391+1,?_printf+5
  9736  00170E  0E02               	movlw	low (STR_1+5)
  9737  001710  6FA3               	movwf	(?_printf+6)& (0+255),b
  9738  001712  0EFD               	movlw	high (STR_1+5)
  9739  001714  6FA4               	movwf	(?_printf+7)& (0+255),b
  9740  001716  EC94  F023         	call	_printf	;wreg free
  9741  00171A  0EC0               	movlw	192
  9742  00171C  EC4F  F024         	call	_lcdInst
  9743                           
  9744                           ;main.c: 62:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  9745  001720  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9746  001724  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9747  001728  0E00               	movlw	0
  9748  00172A  6E09               	movwf	___wmul@multiplicand+1,c
  9749  00172C  0E60               	movlw	96
  9750  00172E  6E08               	movwf	___wmul@multiplicand,c
  9751  001730  ECA8  F023         	call	___wmul	;wreg free
  9752  001734  0E95               	movlw	low (_logs+2)
  9753  001736  2406               	addwf	?___wmul,w,c
  9754  001738  6ED9               	movwf	fsr2l,c
  9755  00173A  0E01               	movlw	high (_logs+2)
  9756  00173C  2007               	addwfc	?___wmul+1,w,c
  9757  00173E  6EDA               	movwf	fsr2h,c
  9758  001740  CFDE F06C          	movff	postinc2,_doDisplayLog$2391
  9759  001744  CFDD F06D          	movff	postdec2,_doDisplayLog$2391+1
  9760                           
  9761                           ;main.c: 62:                 printf("%s%d", "TIR. SUPPLIED ",logs[logNumber][1]);
  9762  001748  0EF1               	movlw	low (STR_10+4)
  9763  00174A  0100               	movlb	0	; () banked
  9764  00174C  6F9D               	movwf	printf@fmt& (0+255),b
  9765  00174E  0EFC               	movlw	high (STR_10+4)
  9766  001750  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9767  001752  0EDC               	movlw	low STR_5
  9768  001754  6F9F               	movwf	(?_printf+2)& (0+255),b
  9769  001756  0EFB               	movlw	high STR_5
  9770  001758  6FA0               	movwf	(?_printf+3)& (0+255),b
  9771  00175A  C06C  F0A1         	movff	_doDisplayLog$2391,?_printf+4
  9772  00175E  C06D  F0A2         	movff	_doDisplayLog$2391+1,?_printf+5
  9773  001762  EC94  F023         	call	_printf	;wreg free
  9774  001766  0E90               	movlw	144
  9775  001768  EC4F  F024         	call	_lcdInst
  9776                           
  9777                           ;main.c: 64:                 printf("%s","(1) POLE INFO");
  9778  00176C  0E01               	movlw	low (STR_1+4)
  9779  00176E  0100               	movlb	0	; () banked
  9780  001770  6F9D               	movwf	printf@fmt& (0+255),b
  9781  001772  0EFD               	movlw	high (STR_1+4)
  9782  001774  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9783  001776  0E17               	movlw	low STR_7
  9784  001778  6F9F               	movwf	(?_printf+2)& (0+255),b
  9785  00177A  0EFC               	movlw	high STR_7
  9786  00177C  6FA0               	movwf	(?_printf+3)& (0+255),b
  9787  00177E  EC94  F023         	call	_printf	;wreg free
  9788  001782  0ED0               	movlw	208
  9789  001784  EC4F  F024         	call	_lcdInst
  9790                           
  9791                           ;main.c: 66:                 printf("%s","(2) SAVE & EXIT");
  9792  001788  0E01               	movlw	low (STR_1+4)
  9793  00178A  0100               	movlb	0	; () banked
  9794  00178C  6F9D               	movwf	printf@fmt& (0+255),b
  9795  00178E  0EFD               	movlw	high (STR_1+4)
  9796  001790  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9797  001792  0EAC               	movlw	low STR_9
  9798  001794  6F9F               	movwf	(?_printf+2)& (0+255),b
  9799  001796  0EFB               	movlw	high STR_9
  9800  001798  6FA0               	movwf	(?_printf+3)& (0+255),b
  9801  00179A  EC94  F023         	call	_printf	;wreg free
  9802                           
  9803                           ;main.c: 67:                 break;
  9804  00179E  D0F5               	goto	l9530
  9805  0017A0                     l9500:
  9806                           
  9807                           ;main.c: 69:                 { lcdInst(0x80); _delay((unsigned long)((2)*(10000000/4000.
      +                          0)));};
  9808  0017A0  0E80               	movlw	128
  9809  0017A2  EC4F  F024         	call	_lcdInst
  9810  0017A6  0E07               	movlw	7
  9811  0017A8  6E66               	movwf	??_doDisplayLog& (0+255),c
  9812  0017AA  0E7D               	movlw	125
  9813  0017AC                     u12207:
  9814  0017AC  2EE8               	decfsz	wreg,f,c
  9815  0017AE  D7FE               	bra	u12207
  9816  0017B0  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
  9817  0017B2  D7FC               	bra	u12207
  9818  0017B4  F000               	nop	
  9819                           
  9820                           ;main.c: 70:                 printf("%s%d%s%d", "POLE ", currentPole,"/", 1);
  9821  0017B6  0EED               	movlw	low STR_10
  9822  0017B8  0100               	movlb	0	; () banked
  9823  0017BA  6F9D               	movwf	printf@fmt& (0+255),b
  9824  0017BC  0EFC               	movlw	high STR_10
  9825  0017BE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9826  0017C0  0E0A               	movlw	low STR_11
  9827  0017C2  6F9F               	movwf	(?_printf+2)& (0+255),b
  9828  0017C4  0EFD               	movlw	high STR_11
  9829  0017C6  6FA0               	movwf	(?_printf+3)& (0+255),b
  9830  0017C8  C06E  F0A1         	movff	doDisplayLog@currentPole,?_printf+4
  9831  0017CC  C06F  F0A2         	movff	doDisplayLog@currentPole+1,?_printf+5
  9832  0017D0  0E2C               	movlw	low STR_12
  9833  0017D2  6FA3               	movwf	(?_printf+6)& (0+255),b
  9834  0017D4  0EFD               	movlw	high STR_12
  9835  0017D6  6FA4               	movwf	(?_printf+7)& (0+255),b
  9836  0017D8  0E00               	movlw	0
  9837  0017DA  6FA6               	movwf	(?_printf+9)& (0+255),b
  9838  0017DC  0E01               	movlw	1
  9839  0017DE  6FA5               	movwf	(?_printf+8)& (0+255),b
  9840  0017E0  EC94  F023         	call	_printf	;wreg free
  9841  0017E4  0EC0               	movlw	192
  9842  0017E6  EC4F  F024         	call	_lcdInst
  9843                           
  9844                           ;main.c: 72:                 printf("%s%d","DEPL: ", logs[logNumber][3+(currentPole-1)*3
      +                          ]);
  9845  0017EA  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9846  0017EE  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9847  0017F2  0E00               	movlw	0
  9848  0017F4  6E09               	movwf	___wmul@multiplicand+1,c
  9849  0017F6  0E60               	movlw	96
  9850  0017F8  6E08               	movwf	___wmul@multiplicand,c
  9851  0017FA  ECA8  F023         	call	___wmul	;wreg free
  9852  0017FE  0E93               	movlw	low _logs
  9853  001800  6E66               	movwf	??_doDisplayLog& (0+255),c
  9854  001802  0E01               	movlw	high _logs
  9855  001804  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
  9856  001806  5006               	movf	?___wmul,w,c
  9857  001808  2666               	addwf	??_doDisplayLog,f,c
  9858  00180A  5007               	movf	?___wmul+1,w,c
  9859  00180C  2267               	addwfc	??_doDisplayLog+1,f,c
  9860  00180E  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
  9861  001812  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
  9862  001816  0E00               	movlw	0
  9863  001818  6E09               	movwf	___wmul@multiplicand+1,c
  9864  00181A  0E03               	movlw	3
  9865  00181C  6E08               	movwf	___wmul@multiplicand,c
  9866  00181E  ECA8  F023         	call	___wmul	;wreg free
  9867  001822  90D8               	bcf	status,0,c
  9868  001824  3606               	rlcf	?___wmul,f,c
  9869  001826  3607               	rlcf	?___wmul+1,f,c
  9870  001828  5006               	movf	?___wmul,w,c
  9871  00182A  2466               	addwf	??_doDisplayLog,w,c
  9872  00182C  6ED9               	movwf	fsr2l,c
  9873  00182E  5007               	movf	?___wmul+1,w,c
  9874  001830  2067               	addwfc	??_doDisplayLog+1,w,c
  9875  001832  6EDA               	movwf	fsr2h,c
  9876  001834  CFDE F06C          	movff	postinc2,_doDisplayLog$2391
  9877  001838  CFDD F06D          	movff	postdec2,_doDisplayLog$2391+1
  9878                           
  9879                           ;main.c: 72:                 printf("%s%d","DEPL: ", logs[logNumber][3+(currentPole-1)*3
      +                          ]);
  9880  00183C  0EF1               	movlw	low (STR_10+4)
  9881  00183E  0100               	movlb	0	; () banked
  9882  001840  6F9D               	movwf	printf@fmt& (0+255),b
  9883  001842  0EFC               	movlw	high (STR_10+4)
  9884  001844  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9885  001846  0EF6               	movlw	low STR_14
  9886  001848  6F9F               	movwf	(?_printf+2)& (0+255),b
  9887  00184A  0EFC               	movlw	high STR_14
  9888  00184C  6FA0               	movwf	(?_printf+3)& (0+255),b
  9889  00184E  C06C  F0A1         	movff	_doDisplayLog$2391,?_printf+4
  9890  001852  C06D  F0A2         	movff	_doDisplayLog$2391+1,?_printf+5
  9891  001856  EC94  F023         	call	_printf	;wreg free
  9892                           
  9893                           ;main.c: 73:                 printf("%s%d"," CM: ", logs[logNumber][5+(currentPole-1)*3]
      +                          );
  9894  00185A  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9895  00185E  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9896  001862  0E00               	movlw	0
  9897  001864  6E09               	movwf	___wmul@multiplicand+1,c
  9898  001866  0E60               	movlw	96
  9899  001868  6E08               	movwf	___wmul@multiplicand,c
  9900  00186A  ECA8  F023         	call	___wmul	;wreg free
  9901  00186E  0E93               	movlw	low _logs
  9902  001870  6E66               	movwf	??_doDisplayLog& (0+255),c
  9903  001872  0E01               	movlw	high _logs
  9904  001874  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
  9905  001876  0E04               	movlw	4
  9906  001878  2666               	addwf	??_doDisplayLog,f,c
  9907  00187A  0E00               	movlw	0
  9908  00187C  2267               	addwfc	??_doDisplayLog+1,f,c
  9909  00187E  5006               	movf	?___wmul,w,c
  9910  001880  2666               	addwf	??_doDisplayLog,f,c
  9911  001882  5007               	movf	?___wmul+1,w,c
  9912  001884  2267               	addwfc	??_doDisplayLog+1,f,c
  9913  001886  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
  9914  00188A  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
  9915  00188E  0E00               	movlw	0
  9916  001890  6E09               	movwf	___wmul@multiplicand+1,c
  9917  001892  0E03               	movlw	3
  9918  001894  6E08               	movwf	___wmul@multiplicand,c
  9919  001896  ECA8  F023         	call	___wmul	;wreg free
  9920  00189A  90D8               	bcf	status,0,c
  9921  00189C  3606               	rlcf	?___wmul,f,c
  9922  00189E  3607               	rlcf	?___wmul+1,f,c
  9923  0018A0  5006               	movf	?___wmul,w,c
  9924  0018A2  2466               	addwf	??_doDisplayLog,w,c
  9925  0018A4  6ED9               	movwf	fsr2l,c
  9926  0018A6  5007               	movf	?___wmul+1,w,c
  9927  0018A8  2067               	addwfc	??_doDisplayLog+1,w,c
  9928  0018AA  6EDA               	movwf	fsr2h,c
  9929  0018AC  CFDE F06C          	movff	postinc2,_doDisplayLog$2391
  9930  0018B0  CFDD F06D          	movff	postdec2,_doDisplayLog$2391+1
  9931                           
  9932                           ;main.c: 73:                 printf("%s%d"," CM: ", logs[logNumber][5+(currentPole-1)*3]
      +                          );
  9933  0018B4  0EF1               	movlw	low (STR_10+4)
  9934  0018B6  0100               	movlb	0	; () banked
  9935  0018B8  6F9D               	movwf	printf@fmt& (0+255),b
  9936  0018BA  0EFC               	movlw	high (STR_10+4)
  9937  0018BC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9938  0018BE  0E04               	movlw	low STR_16
  9939  0018C0  6F9F               	movwf	(?_printf+2)& (0+255),b
  9940  0018C2  0EFD               	movlw	high STR_16
  9941  0018C4  6FA0               	movwf	(?_printf+3)& (0+255),b
  9942  0018C6  C06C  F0A1         	movff	_doDisplayLog$2391,?_printf+4
  9943  0018CA  C06D  F0A2         	movff	_doDisplayLog$2391+1,?_printf+5
  9944  0018CE  EC94  F023         	call	_printf	;wreg free
  9945  0018D2  0E90               	movlw	144
  9946  0018D4  EC4F  F024         	call	_lcdInst
  9947                           
  9948                           ;main.c: 75:                 printf("%s%d","ON POLE: ", logs[logNumber][4+(currentPole-1
      +                          )*3]);
  9949  0018D8  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
  9950  0018DC  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
  9951  0018E0  0E00               	movlw	0
  9952  0018E2  6E09               	movwf	___wmul@multiplicand+1,c
  9953  0018E4  0E60               	movlw	96
  9954  0018E6  6E08               	movwf	___wmul@multiplicand,c
  9955  0018E8  ECA8  F023         	call	___wmul	;wreg free
  9956  0018EC  0E93               	movlw	low _logs
  9957  0018EE  6E66               	movwf	??_doDisplayLog& (0+255),c
  9958  0018F0  0E01               	movlw	high _logs
  9959  0018F2  6E67               	movwf	(??_doDisplayLog+1)& (0+255),c
  9960  0018F4  0E02               	movlw	2
  9961  0018F6  2666               	addwf	??_doDisplayLog,f,c
  9962  0018F8  0E00               	movlw	0
  9963  0018FA  2267               	addwfc	??_doDisplayLog+1,f,c
  9964  0018FC  5006               	movf	?___wmul,w,c
  9965  0018FE  2666               	addwf	??_doDisplayLog,f,c
  9966  001900  5007               	movf	?___wmul+1,w,c
  9967  001902  2267               	addwfc	??_doDisplayLog+1,f,c
  9968  001904  C06E  F006         	movff	doDisplayLog@currentPole,___wmul@multiplier
  9969  001908  C06F  F007         	movff	doDisplayLog@currentPole+1,___wmul@multiplier+1
  9970  00190C  0E00               	movlw	0
  9971  00190E  6E09               	movwf	___wmul@multiplicand+1,c
  9972  001910  0E03               	movlw	3
  9973  001912  6E08               	movwf	___wmul@multiplicand,c
  9974  001914  ECA8  F023         	call	___wmul	;wreg free
  9975  001918  90D8               	bcf	status,0,c
  9976  00191A  3606               	rlcf	?___wmul,f,c
  9977  00191C  3607               	rlcf	?___wmul+1,f,c
  9978  00191E  5006               	movf	?___wmul,w,c
  9979  001920  2466               	addwf	??_doDisplayLog,w,c
  9980  001922  6ED9               	movwf	fsr2l,c
  9981  001924  5007               	movf	?___wmul+1,w,c
  9982  001926  2067               	addwfc	??_doDisplayLog+1,w,c
  9983  001928  6EDA               	movwf	fsr2h,c
  9984  00192A  CFDE F06C          	movff	postinc2,_doDisplayLog$2391
  9985  00192E  CFDD F06D          	movff	postdec2,_doDisplayLog$2391+1
  9986                           
  9987                           ;main.c: 75:                 printf("%s%d","ON POLE: ", logs[logNumber][4+(currentPole-1
      +                          )*3]);
  9988  001932  0EF1               	movlw	low (STR_10+4)
  9989  001934  0100               	movlb	0	; () banked
  9990  001936  6F9D               	movwf	printf@fmt& (0+255),b
  9991  001938  0EFC               	movlw	high (STR_10+4)
  9992  00193A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  9993  00193C  0E97               	movlw	low STR_18
  9994  00193E  6F9F               	movwf	(?_printf+2)& (0+255),b
  9995  001940  0EFC               	movlw	high STR_18
  9996  001942  6FA0               	movwf	(?_printf+3)& (0+255),b
  9997  001944  C06C  F0A1         	movff	_doDisplayLog$2391,?_printf+4
  9998  001948  C06D  F0A2         	movff	_doDisplayLog$2391+1,?_printf+5
  9999  00194C  EC94  F023         	call	_printf	;wreg free
 10000  001950  0ED0               	movlw	208
 10001  001952  EC4F  F024         	call	_lcdInst
 10002                           
 10003                           ;main.c: 77:                 printf("%s","1<- 2-> 3MENU");
 10004  001956  0E01               	movlw	low (STR_1+4)
 10005  001958  0100               	movlb	0	; () banked
 10006  00195A  6F9D               	movwf	printf@fmt& (0+255),b
 10007  00195C  0EFD               	movlw	high (STR_1+4)
 10008  00195E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
 10009  001960  0E33               	movlw	low STR_20
 10010  001962  6F9F               	movwf	(?_printf+2)& (0+255),b
 10011  001964  0EFC               	movlw	high STR_20
 10012  001966  6FA0               	movwf	(?_printf+3)& (0+255),b
 10013  001968  EC94  F023         	call	_printf	;wreg free
 10014                           
 10015                           ;main.c: 78:                 break;
 10016  00196C  D00E               	goto	l9530
 10017  00196E                     l9528:
 10018  00196E  506A               	movf	doDisplayLog@currentDisplayState,w,c
 10019  001970  6E66               	movwf	??_doDisplayLog& (0+255),c
 10020  001972  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
 10021                           
 10022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10023                           ; Switch size 1, requested type "simple"
 10024                           ; Number of cases is 1, Range of values is 0 to 0
 10025                           ; switch strategies available:
 10026                           ; Name         Instructions Cycles
 10027                           ; simple_byte            4     3 (average)
 10028                           ;	Chosen strategy is simple_byte
 10029  001974  5067               	movf	??_doDisplayLog+1,w,c
 10030  001976  0A00               	xorlw	0	; case 0
 10031  001978  A4D8               	btfss	status,2,c
 10032  00197A  D007               	goto	l9530
 10033                           
 10034                           ; Switch size 1, requested type "simple"
 10035                           ; Number of cases is 2, Range of values is 0 to 1
 10036                           ; switch strategies available:
 10037                           ; Name         Instructions Cycles
 10038                           ; simple_byte            7     4 (average)
 10039                           ;	Chosen strategy is simple_byte
 10040  00197C  5066               	movf	??_doDisplayLog,w,c
 10041  00197E  0A00               	xorlw	0	; case 0
 10042  001980  B4D8               	btfsc	status,2,c
 10043  001982  D699               	goto	l9478
 10044  001984  0A01               	xorlw	1	; case 1
 10045  001986  B4D8               	btfsc	status,2,c
 10046  001988  D70B               	goto	l9500
 10047  00198A                     l9530:
 10048                           
 10049                           ;main.c: 81:         if(keyPressed){
 10050  00198A  0100               	movlb	0	; () banked
 10051  00198C  51E9               	movf	_keyPressed& (0+255),w,b	;volatile
 10052  00198E  B4D8               	btfsc	status,2,c
 10053  001990  D070               	goto	l9570
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;main.c: 84:             keyPressed = 0;
 10057  001992  0E00               	movlw	0
 10058  001994  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;main.c: 87:             unsigned char keypress = (PORTB & 0xF0) >> 4;
 10062  001996  3881               	swapf	3969,w,c	;volatile
 10063  001998  0B0F               	andlw	15
 10064  00199A  0B0F               	andlw	15
 10065  00199C  6E69               	movwf	doDisplayLog@keypress,c
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;main.c: 88:             char keyValue = keys[keypress];
 10069  00199E  0E77               	movlw	low _keys
 10070  0019A0  2469               	addwf	doDisplayLog@keypress,w,c
 10071  0019A2  6EF6               	movwf	tblptrl,c
 10072  0019A4  6AF7               	clrf	tblptrh,c
 10073  0019A6  0EFB               	movlw	high _keys
 10074  0019A8  22F7               	addwfc	tblptrh,f,c
 10075  0019AA                     	if	0	;There are less than 3 active tblptr bytes
 10076  0019AA                     	endif
 10077  0019AA  0008               	tblrd		*
 10078  0019AC  CFF5 F06B          	movff	tablat,doDisplayLog@keyValue
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;main.c: 89:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)))
      +                          ;};
 10082  0019B0  0E01               	movlw	1
 10083  0019B2  EC4F  F024         	call	_lcdInst
 10084  0019B6  0E11               	movlw	17
 10085  0019B8  6E66               	movwf	??_doDisplayLog& (0+255),c
 10086  0019BA  0E3A               	movlw	58
 10087  0019BC                     u12217:
 10088  0019BC  2EE8               	decfsz	wreg,f,c
 10089  0019BE  D7FE               	bra	u12217
 10090  0019C0  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10091  0019C2  D7FC               	bra	u12217
 10092  0019C4  D000               	nop2	
 10093                           
 10094                           ;main.c: 90:             switch (currentDisplayState){
 10095  0019C6  D047               	goto	l9568
 10096  0019C8                     l9542:
 10097                           
 10098                           ;main.c: 92:                     if (keyValue == '1'){
 10099  0019C8  0E31               	movlw	49
 10100  0019CA  186B               	xorwf	doDisplayLog@keyValue,w,c
 10101  0019CC  A4D8               	btfss	status,2,c
 10102  0019CE  D003               	goto	l9546
 10103                           
 10104                           ;main.c: 93:                         currentDisplayState = pole;
 10105  0019D0  0E01               	movlw	1
 10106  0019D2  6E6A               	movwf	doDisplayLog@currentDisplayState,c
 10107                           
 10108                           ;main.c: 94:                     } else if (keyValue == '2'){
 10109  0019D4  D04E               	goto	l9570
 10110  0019D6                     l9546:
 10111  0019D6  0E32               	movlw	50
 10112  0019D8  186B               	xorwf	doDisplayLog@keyValue,w,c
 10113  0019DA  B4D8               	btfsc	status,2,c
 10114  0019DC  0012               	return	
 10115  0019DE  D049               	goto	l9570
 10116  0019E0                     l9550:
 10117                           
 10118                           ;main.c: 99:                     if (keyValue == '3'){
 10119  0019E0  0E33               	movlw	51
 10120  0019E2  186B               	xorwf	doDisplayLog@keyValue,w,c
 10121  0019E4  A4D8               	btfss	status,2,c
 10122  0019E6  D007               	goto	l9554
 10123                           
 10124                           ;main.c: 100:                         currentDisplayState = opTime;
 10125  0019E8  0E00               	movlw	0
 10126  0019EA  6E6A               	movwf	doDisplayLog@currentDisplayState,c
 10127                           
 10128                           ;main.c: 101:                         currentPole = 1;
 10129  0019EC  0E00               	movlw	0
 10130  0019EE  6E6F               	movwf	doDisplayLog@currentPole+1,c
 10131  0019F0  0E01               	movlw	1
 10132  0019F2  6E6E               	movwf	doDisplayLog@currentPole,c
 10133                           
 10134                           ;main.c: 103:                     } else if (keyValue == '2'){
 10135  0019F4  D03E               	goto	l9570
 10136  0019F6                     l9554:
 10137  0019F6  0E32               	movlw	50
 10138  0019F8  186B               	xorwf	doDisplayLog@keyValue,w,c
 10139  0019FA  A4D8               	btfss	status,2,c
 10140  0019FC  D01D               	goto	l9560
 10141                           
 10142                           ;main.c: 104:                         if(currentPole < logs[logNumber][2]){
 10143  0019FE  C0A7  F006         	movff	doDisplayLog@logNumber,___wmul@multiplier
 10144  001A02  C0A8  F007         	movff	doDisplayLog@logNumber+1,___wmul@multiplier+1
 10145  001A06  0E00               	movlw	0
 10146  001A08  6E09               	movwf	___wmul@multiplicand+1,c
 10147  001A0A  0E60               	movlw	96
 10148  001A0C  6E08               	movwf	___wmul@multiplicand,c
 10149  001A0E  ECA8  F023         	call	___wmul	;wreg free
 10150  001A12  0E97               	movlw	low (_logs+4)
 10151  001A14  2406               	addwf	?___wmul,w,c
 10152  001A16  6ED9               	movwf	fsr2l,c
 10153  001A18  0E01               	movlw	high (_logs+4)
 10154  001A1A  2007               	addwfc	?___wmul+1,w,c
 10155  001A1C  6EDA               	movwf	fsr2h,c
 10156  001A1E  50DE               	movf	postinc2,w,c
 10157  001A20  5C6E               	subwf	doDisplayLog@currentPole,w,c
 10158  001A22  506F               	movf	doDisplayLog@currentPole+1,w,c
 10159  001A24  0A80               	xorlw	128
 10160  001A26  6E68               	movwf	(??_doDisplayLog+2)& (0+255),c
 10161  001A28  50DE               	movf	postinc2,w,c
 10162  001A2A  0A80               	xorlw	128
 10163  001A2C  5868               	subwfb	(??_doDisplayLog+2)& (0+255),w,c
 10164  001A2E  B0D8               	btfsc	status,0,c
 10165  001A30  D020               	goto	l9570
 10166                           
 10167                           ;main.c: 105:                             currentPole++;
 10168  001A32  4A6E               	infsnz	doDisplayLog@currentPole,f,c
 10169  001A34  2A6F               	incf	doDisplayLog@currentPole+1,f,c
 10170  001A36  D01D               	goto	l9570
 10171  001A38                     l9560:
 10172  001A38  0E31               	movlw	49
 10173  001A3A  186B               	xorwf	doDisplayLog@keyValue,w,c
 10174  001A3C  B4D8               	btfsc	status,2,c
 10175                           
 10176                           ;main.c: 108:                         if (currentPole > 1){
 10177  001A3E  BE6F               	btfsc	doDisplayLog@currentPole+1,7,c
 10178  001A40  D018               	goto	l9570
 10179  001A42  506F               	movf	doDisplayLog@currentPole+1,w,c
 10180  001A44  E104               	bnz	u11200
 10181  001A46  0E02               	movlw	2
 10182  001A48  5C6E               	subwf	doDisplayLog@currentPole,w,c
 10183  001A4A  A0D8               	btfss	status,0,c
 10184  001A4C  D012               	goto	l9570
 10185  001A4E                     u11200:
 10186                           
 10187                           ;main.c: 109:                             currentPole--;
 10188  001A4E  066E               	decf	doDisplayLog@currentPole,f,c
 10189  001A50  A0D8               	btfss	status,0,c
 10190  001A52  066F               	decf	doDisplayLog@currentPole+1,f,c
 10191  001A54  D00E               	goto	l9570
 10192  001A56                     l9568:
 10193  001A56  506A               	movf	doDisplayLog@currentDisplayState,w,c
 10194  001A58  6E66               	movwf	??_doDisplayLog& (0+255),c
 10195  001A5A  6A67               	clrf	(??_doDisplayLog+1)& (0+255),c
 10196                           
 10197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10198                           ; Switch size 1, requested type "simple"
 10199                           ; Number of cases is 1, Range of values is 0 to 0
 10200                           ; switch strategies available:
 10201                           ; Name         Instructions Cycles
 10202                           ; simple_byte            4     3 (average)
 10203                           ;	Chosen strategy is simple_byte
 10204  001A5C  5067               	movf	??_doDisplayLog+1,w,c
 10205  001A5E  0A00               	xorlw	0	; case 0
 10206  001A60  A4D8               	btfss	status,2,c
 10207  001A62  D007               	goto	l9570
 10208                           
 10209                           ; Switch size 1, requested type "simple"
 10210                           ; Number of cases is 2, Range of values is 0 to 1
 10211                           ; switch strategies available:
 10212                           ; Name         Instructions Cycles
 10213                           ; simple_byte            7     4 (average)
 10214                           ;	Chosen strategy is simple_byte
 10215  001A64  5066               	movf	??_doDisplayLog,w,c
 10216  001A66  0A00               	xorlw	0	; case 0
 10217  001A68  B4D8               	btfsc	status,2,c
 10218  001A6A  D7AE               	goto	l9542
 10219  001A6C  0A01               	xorlw	1	; case 1
 10220  001A6E  B4D8               	btfsc	status,2,c
 10221  001A70  D7B7               	goto	l9550
 10222  001A72                     l9570:
 10223                           
 10224                           ;main.c: 117:     _delay((unsigned long)((1)*(10000000/4000.0)));
 10225  001A72  0E04               	movlw	4
 10226  001A74  6E66               	movwf	??_doDisplayLog& (0+255),c
 10227  001A76  0E3E               	movlw	62
 10228  001A78                     u12227:
 10229  001A78  2EE8               	decfsz	wreg,f,c
 10230  001A7A  D7FE               	bra	u12227
 10231  001A7C  2E66               	decfsz	??_doDisplayLog& (0+255),f,c
 10232  001A7E  D7FC               	bra	u12227
 10233  001A80  D776               	goto	l9528
 10234  001A82                     __end_of_doDisplayLog:
 10235                           	opt callstack 0
 10236                           
 10237 ;; *************** function _printf *****************
 10238 ;; Defined at:
 10239 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 10242 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 10243 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 10244 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 10245 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 10246 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 10247 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 10248 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 10249 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 10250 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 10251 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 10252 ;;		 -> STR_4(5), STR_1(7), 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;  ap              2   99[COMRAM] PTR void [1]
 10255 ;;		 -> ?_printf(2), 
 10256 ;;  ret             2    0        int 
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  2   29[BANK0 ] int 
 10259 ;; Registers used:
 10260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10266 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;Total ram usage:       14 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:   12
 10273 ;; This function calls:
 10274 ;;		_vfprintf
 10275 ;; This function is called by:
 10276 ;;		_doDisplayLog
 10277 ;;		_doOperation
 10278 ;;		_main
 10279 ;;		_mainEEPROM
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text36
 10284  004728                     __ptext36:
 10285                           	opt callstack 0
 10286  004728                     _printf:
 10287                           	opt callstack 18
 10288                           
 10289                           ;incstack = 0
 10290  004728  0E9F               	movlw	low (?_printf+2)
 10291  00472A  6E64               	movwf	printf@ap,c
 10292  00472C  0E00               	movlw	high (?_printf+2)
 10293  00472E  6E65               	movwf	printf@ap+1,c
 10294  004730  0E00               	movlw	0
 10295  004732  0100               	movlb	0	; () banked
 10296  004734  6F97               	movwf	vfprintf@fp& (0+255),b
 10297  004736  0E00               	movlw	0
 10298  004738  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
 10299  00473A  C09D  F099         	movff	printf@fmt,vfprintf@fmt
 10300  00473E  C09E  F09A         	movff	printf@fmt+1,vfprintf@fmt+1
 10301  004742  0E64               	movlw	low printf@ap
 10302  004744  6F9B               	movwf	vfprintf@ap& (0+255),b
 10303  004746  0E00               	movlw	high printf@ap
 10304  004748  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
 10305  00474A  EC47  F021         	call	_vfprintf	;wreg free
 10306  00474E  0012               	return		;funcret
 10307  004750                     __end_of_printf:
 10308                           	opt callstack 0
 10309                           
 10310 ;; *************** function _vfprintf *****************
 10311 ;; Defined at:
 10312 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 10315 ;;		 -> NULL(0), 
 10316 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 10317 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 10318 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 10319 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 10320 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 10321 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 10322 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 10323 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 10324 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 10325 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 10326 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 10327 ;;		 -> STR_4(5), STR_1(7), 
 10328 ;;  ap              2   27[BANK0 ] PTR PTR void 
 10329 ;;		 -> printf@ap(2), 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  cfmt            2   95[COMRAM] PTR unsigned char 
 10332 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 10333 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 10334 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 10335 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 10336 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 10337 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 10338 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 10339 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 10340 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 10341 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 10342 ;;		 -> STR_4(5), STR_1(7), 
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  2   23[BANK0 ] int 
 10345 ;; Registers used:
 10346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10352 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;Total ram usage:        8 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; Hardware stack levels required when called:   11
 10359 ;; This function calls:
 10360 ;;		_vfpfcnvrt
 10361 ;; This function is called by:
 10362 ;;		_printf
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           	psect	text37
 10367  00428E                     __ptext37:
 10368                           	opt callstack 0
 10369  00428E                     _vfprintf:
 10370                           	opt callstack 18
 10371                           
 10372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10373                           
 10374                           ;incstack = 0
 10375  00428E  C099  F060         	movff	vfprintf@fmt,vfprintf@cfmt
 10376  004292  C09A  F061         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10377                           
 10378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10379  004296  0E00               	movlw	0
 10380  004298  0100               	movlb	0	; () banked
 10381  00429A  6FE0               	movwf	(_nout+1)& (0+255),b
 10382  00429C  0E00               	movlw	0
 10383  00429E  6FDF               	movwf	_nout& (0+255),b
 10384                           
 10385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10386  0042A0  D013               	goto	l9114
 10387  0042A2                     l9112:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10391  0042A2  C097  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
 10392  0042A6  C098  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10393  0042AA  0E60               	movlw	low vfprintf@cfmt
 10394  0042AC  6E4E               	movwf	vfpfcnvrt@fmt,c
 10395  0042AE  0E00               	movlw	high vfprintf@cfmt
 10396  0042B0  6E4F               	movwf	vfpfcnvrt@fmt+1,c
 10397  0042B2  C09B  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
 10398  0042B6  C09C  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10399  0042BA  ECDD  F004         	call	_vfpfcnvrt	;wreg free
 10400  0042BE  504C               	movf	?_vfpfcnvrt,w,c
 10401  0042C0  0100               	movlb	0	; () banked
 10402  0042C2  27DF               	addwf	_nout& (0+255),f,b
 10403  0042C4  504D               	movf	?_vfpfcnvrt+1,w,c
 10404  0042C6  23E0               	addwfc	(_nout+1)& (0+255),f,b
 10405  0042C8                     l9114:
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10409  0042C8  C060  FFF6         	movff	vfprintf@cfmt,tblptrl
 10410  0042CC  C061  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 10411  0042D0                     	if	0	;tblptru may be non-zero
 10412  0042D0                     	endif
 10413  0042D0                     	if	0	;tblptru may be non-zero
 10414  0042D0                     	endif
 10415  0042D0  0008               	tblrd		*
 10416  0042D2  50F5               	movf	tablat,w,c
 10417  0042D4  0900               	iorlw	0
 10418  0042D6  A4D8               	btfss	status,2,c
 10419  0042D8  D7E4               	goto	l9112
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10423  0042DA  C0DF  F097         	movff	_nout,?_vfprintf
 10424  0042DE  C0E0  F098         	movff	_nout+1,?_vfprintf+1
 10425                           
 10426                           ; BSR set to: 0
 10427  0042E2  0012               	return		;funcret
 10428  0042E4                     __end_of_vfprintf:
 10429                           	opt callstack 0
 10430                           
 10431 ;; *************** function _vfpfcnvrt *****************
 10432 ;; Defined at:
 10433 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
 10436 ;;		 -> NULL(0), 
 10437 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
 10438 ;;		 -> vfprintf@cfmt(2), 
 10439 ;;  ap              2   79[COMRAM] PTR PTR void 
 10440 ;;		 -> printf@ap(2), 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  llu             8   15[BANK0 ] unsigned long long 
 10443 ;;  ll              8    6[BANK0 ] long long 
 10444 ;;  f               4    0        long long 
 10445 ;;  vp              3    0        PTR void 
 10446 ;;  ct              3    0        unsigned char [3]
 10447 ;;  done            2    2[BANK0 ] int 
 10448 ;;  cp              2    0[BANK0 ] PTR unsigned char 
 10449 ;;		 -> ?_printf(2), STR_66(16), STR_64(14), STR_62(11), 
 10450 ;;		 -> STR_60(9), STR_58(16), STR_56(13), STR_54(13), 
 10451 ;;		 -> STR_52(9), STR_50(13), STR_48(14), STR_46(10), 
 10452 ;;		 -> STR_42(9), STR_40(14), STR_38(10), STR_36(6), 
 10453 ;;		 -> STR_34(7), STR_32(2), STR_31(6), STR_20(14), 
 10454 ;;		 -> STR_18(10), STR_16(6), STR_14(7), STR_12(2), 
 10455 ;;		 -> STR_11(6), STR_9(16), STR_7(14), STR_5(15), 
 10456 ;;		 -> STR_3(2), STR_2(10), 
 10457 ;;  i               2    0        int 
 10458 ;;  c               1   14[BANK0 ] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  2   75[COMRAM] int 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10468 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Totals:        20      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;Total ram usage:       43 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; Hardware stack levels required when called:   10
 10475 ;; This function calls:
 10476 ;;		_atoi
 10477 ;;		_ctoa
 10478 ;;		_dtoa
 10479 ;;		_fputc
 10480 ;;		_isdigit
 10481 ;;		_stoa
 10482 ;;		_strncmp
 10483 ;;		_utoa
 10484 ;;		_xtoa
 10485 ;; This function is called by:
 10486 ;;		_vfprintf
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           	psect	text38
 10491  0009BA                     __ptext38:
 10492                           	opt callstack 0
 10493  0009BA                     _vfpfcnvrt:
 10494                           	opt callstack 18
 10495                           
 10496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;incstack = 0
 10500  0009BA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10501  0009BE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10502  0009C2  CFDE FFF6          	movff	postinc2,tblptrl
 10503  0009C6  CFDD FFF7          	movff	postdec2,tblptrh
 10504  0009CA                     	if	0	;tblptru may be non-zero
 10505  0009CA                     	endif
 10506  0009CA                     	if	0	;tblptru may be non-zero
 10507  0009CA                     	endif
 10508  0009CA  0008               	tblrd		*
 10509  0009CC  50F5               	movf	tablat,w,c
 10510  0009CE  0A25               	xorlw	37
 10511  0009D0  A4D8               	btfss	status,2,c
 10512  0009D2  D3D4               	goto	l9022
 10513                           
 10514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10515  0009D4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10516  0009D8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10517  0009DC  2ADE               	incf	postinc2,f,c
 10518  0009DE  0E00               	movlw	0
 10519  0009E0  22DD               	addwfc	postdec2,f,c
 10520                           
 10521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10522  0009E2  0E00               	movlw	0
 10523  0009E4  0100               	movlb	0	; () banked
 10524  0009E6  6FE2               	movwf	(_width+1)& (0+255),b
 10525  0009E8  0E00               	movlw	0
 10526  0009EA  6FE1               	movwf	_width& (0+255),b
 10527  0009EC  C0E1  F078         	movff	_width,_flags
 10528  0009F0  C0E2  F079         	movff	_width+1,_flags+1
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10532  0009F4  69E3               	setf	_prec& (0+255),b
 10533  0009F6  69E4               	setf	(_prec+1)& (0+255),b
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10537  0009F8  0E00               	movlw	0
 10538  0009FA  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10539  0009FC  0E00               	movlw	0
 10540  0009FE  D014               	goto	L21
 10541  000A00                     l8878:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10545  000A00  8078               	bsf	_flags,0,c
 10546  000A02                     l8880:
 10547                           
 10548                           ; BSR set to: 0
 10549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10550  000A02  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10551  000A06  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10552  000A0A  2ADE               	incf	postinc2,f,c
 10553  000A0C  0E00               	movlw	0
 10554  000A0E  22DD               	addwfc	postdec2,f,c
 10555                           
 10556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10557  000A10  D02E               	goto	l8904
 10558  000A12                     l8882:
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10562  000A12  8278               	bsf	_flags,1,c
 10563  000A14  D7F6               	goto	l8880
 10564  000A16                     l8886:
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10568  000A16  8478               	bsf	_flags,2,c
 10569  000A18  D7F4               	goto	l8880
 10570  000A1A                     l8890:
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10574  000A1A  8678               	bsf	_flags,3,c
 10575  000A1C  D7F2               	goto	l8880
 10576  000A1E                     l8894:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10580  000A1E  8878               	bsf	_flags,4,c
 10581  000A20  D7F0               	goto	l8880
 10582  000A22                     l8898:
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10586  000A22  0E00               	movlw	0
 10587  000A24  6F83               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10588  000A26  0E01               	movlw	1
 10589  000A28                     L21:
 10590  000A28  6F82               	movwf	vfpfcnvrt@done& (0+255),b
 10591                           
 10592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10593  000A2A  D021               	goto	l8904
 10594  000A2C                     l8902:
 10595                           
 10596                           ; BSR set to: 0
 10597  000A2C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10598  000A30  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10599  000A34  CFDE FFF6          	movff	postinc2,tblptrl
 10600  000A38  CFDD FFF7          	movff	postdec2,tblptrh
 10601  000A3C                     	if	0	;tblptru may be non-zero
 10602  000A3C                     	endif
 10603  000A3C                     	if	0	;tblptru may be non-zero
 10604  000A3C                     	endif
 10605  000A3C  0008               	tblrd		*
 10606  000A3E  50F5               	movf	tablat,w,c
 10607  000A40  6E52               	movwf	??_vfpfcnvrt& (0+255),c
 10608  000A42  6A53               	clrf	(??_vfpfcnvrt+1)& (0+255),c
 10609                           
 10610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10611                           ; Switch size 1, requested type "simple"
 10612                           ; Number of cases is 1, Range of values is 0 to 0
 10613                           ; switch strategies available:
 10614                           ; Name         Instructions Cycles
 10615                           ; simple_byte            4     3 (average)
 10616                           ;	Chosen strategy is simple_byte
 10617  000A44  5053               	movf	??_vfpfcnvrt+1,w,c
 10618  000A46  0A00               	xorlw	0	; case 0
 10619  000A48  A4D8               	btfss	status,2,c
 10620  000A4A  D7EB               	goto	l8898
 10621                           
 10622                           ; BSR set to: 0
 10623                           ; Switch size 1, requested type "simple"
 10624                           ; Number of cases is 5, Range of values is 32 to 48
 10625                           ; switch strategies available:
 10626                           ; Name         Instructions Cycles
 10627                           ; simple_byte           16     9 (average)
 10628                           ;	Chosen strategy is simple_byte
 10629  000A4C  5052               	movf	??_vfpfcnvrt,w,c
 10630  000A4E  0A20               	xorlw	32	; case 32
 10631  000A50  B4D8               	btfsc	status,2,c
 10632  000A52  D7E3               	goto	l8890
 10633  000A54  0A03               	xorlw	3	; case 35
 10634  000A56  B4D8               	btfsc	status,2,c
 10635  000A58  D7E2               	goto	l8894
 10636  000A5A  0A08               	xorlw	8	; case 43
 10637  000A5C  B4D8               	btfsc	status,2,c
 10638  000A5E  D7DB               	goto	l8886
 10639  000A60  0A06               	xorlw	6	; case 45
 10640  000A62  B4D8               	btfsc	status,2,c
 10641  000A64  D7CD               	goto	l8878
 10642  000A66  0A1D               	xorlw	29	; case 48
 10643  000A68  B4D8               	btfsc	status,2,c
 10644  000A6A  D7D3               	goto	l8882
 10645  000A6C  D7DA               	goto	l8898
 10646  000A6E                     l8904:
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 10650  000A6E  5182               	movf	vfpfcnvrt@done& (0+255),w,b
 10651  000A70  1183               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10652  000A72  B4D8               	btfsc	status,2,c
 10653  000A74  D7DB               	goto	l8902
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 10657  000A76  B078               	btfsc	_flags,0,c
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 10661  000A78  9278               	bcf	_flags,1,c
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 10665  000A7A  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10666  000A7E  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10667  000A82  CFDE FFF6          	movff	postinc2,tblptrl
 10668  000A86  CFDD FFF7          	movff	postdec2,tblptrh
 10669  000A8A                     	if	0	;tblptru may be non-zero
 10670  000A8A                     	endif
 10671  000A8A                     	if	0	;tblptru may be non-zero
 10672  000A8A                     	endif
 10673  000A8A  0008               	tblrd		*
 10674  000A8C  50F5               	movf	tablat,w,c
 10675  000A8E  0A2A               	xorlw	42
 10676  000A90  A4D8               	btfss	status,2,c
 10677  000A92  D023               	goto	l8916
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 10681  000A94  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10682  000A98  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10683  000A9C  2ADE               	incf	postinc2,f,c
 10684  000A9E  0E00               	movlw	0
 10685  000AA0  22DD               	addwfc	postdec2,f,c
 10686                           
 10687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10688  000AA2  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10689  000AA6  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10690  000AAA  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10691  000AAE  0E02               	movlw	2
 10692  000AB0  26DE               	addwf	postinc2,f,c
 10693  000AB2  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10694  000AB6  0E00               	movlw	0
 10695  000AB8  22DD               	addwfc	postdec2,f,c
 10696  000ABA  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10697  000ABE  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10698  000AC2  CFDE F0E1          	movff	postinc2,_width
 10699  000AC6  CFDD F0E2          	movff	postdec2,_width+1
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 10703  000ACA  AFE2               	btfss	(_width+1)& (0+255),7,b
 10704  000ACC  D040               	goto	u10500
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 10708  000ACE  8078               	bsf	_flags,0,c
 10709                           
 10710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 10711  000AD0  6DE1               	negf	_width& (0+255),b
 10712  000AD2  1FE2               	comf	(_width+1)& (0+255),f,b
 10713  000AD4  B0D8               	btfsc	status,0,c
 10714  000AD6  2BE2               	incf	(_width+1)& (0+255),f,b
 10715  000AD8  D03A               	goto	u10500
 10716  000ADA                     l8916:
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 10720  000ADA  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10721  000ADE  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10722  000AE2  CFDE F00D          	movff	postinc2,atoi@s
 10723  000AE6  CFDD F00E          	movff	postdec2,atoi@s+1
 10724  000AEA  EC8D  F01A         	call	_atoi	;wreg free
 10725  000AEE  C00D  F0E1         	movff	?_atoi,_width
 10726  000AF2  C00E  F0E2         	movff	?_atoi+1,_width+1
 10727                           
 10728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10729  000AF6  D007               	goto	l8920
 10730  000AF8                     l8918:
 10731                           
 10732                           ; BSR set to: 0
 10733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 10734  000AF8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10735  000AFC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10736  000B00  2ADE               	incf	postinc2,f,c
 10737  000B02  0E00               	movlw	0
 10738  000B04  22DD               	addwfc	postdec2,f,c
 10739  000B06                     l8920:
 10740  000B06  0ED0               	movlw	208
 10741  000B08  6E52               	movwf	??_vfpfcnvrt& (0+255),c
 10742  000B0A  0EFF               	movlw	255
 10743  000B0C  6E53               	movwf	(??_vfpfcnvrt+1)& (0+255),c
 10744  000B0E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10745  000B12  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10746  000B16  CFDE FFF6          	movff	postinc2,tblptrl
 10747  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
 10748  000B1E                     	if	0	;tblptru may be non-zero
 10749  000B1E                     	endif
 10750  000B1E                     	if	0	;tblptru may be non-zero
 10751  000B1E                     	endif
 10752  000B1E  0008               	tblrd		*
 10753  000B20  50F5               	movf	tablat,w,c
 10754  000B22  6E54               	movwf	(??_vfpfcnvrt+2)& (0+255),c
 10755  000B24  6A55               	clrf	(??_vfpfcnvrt+3)& (0+255),c
 10756  000B26  5052               	movf	??_vfpfcnvrt,w,c
 10757  000B28  2654               	addwf	??_vfpfcnvrt+2,f,c
 10758  000B2A  5053               	movf	??_vfpfcnvrt+1,w,c
 10759  000B2C  2255               	addwfc	??_vfpfcnvrt+3,f,c
 10760  000B2E  5055               	movf	??_vfpfcnvrt+3,w,c
 10761  000B30  E106               	bnz	u10480
 10762  000B32  0E0A               	movlw	10
 10763  000B34  5C54               	subwf	??_vfpfcnvrt+2,w,c
 10764  000B36  B0D8               	btfsc	status,0,c
 10765  000B38  D002               	goto	u10480
 10766  000B3A  0E01               	movlw	1
 10767  000B3C  D001               	goto	u10490
 10768  000B3E                     u10480:
 10769  000B3E  0E00               	movlw	0
 10770  000B40                     u10490:
 10771  000B40  0100               	movlb	0	; () banked
 10772  000B42  6F84               	movwf	_vfpfcnvrt$1492& (0+255),b
 10773  000B44  6B85               	clrf	(_vfpfcnvrt$1492+1)& (0+255),b
 10774                           
 10775                           ; BSR set to: 0
 10776  000B46  5184               	movf	_vfpfcnvrt$1492& (0+255),w,b
 10777  000B48  1185               	iorwf	(_vfpfcnvrt$1492+1)& (0+255),w,b
 10778  000B4A  A4D8               	btfss	status,2,c
 10779  000B4C  D7D5               	goto	l8918
 10780  000B4E                     u10500:
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 10784  000B4E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10785  000B52  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10786  000B56  CFDE FFF6          	movff	postinc2,tblptrl
 10787  000B5A  CFDD FFF7          	movff	postdec2,tblptrh
 10788  000B5E                     	if	0	;tblptru may be non-zero
 10789  000B5E                     	endif
 10790  000B5E                     	if	0	;tblptru may be non-zero
 10791  000B5E                     	endif
 10792  000B5E  0008               	tblrd		*
 10793  000B60  50F5               	movf	tablat,w,c
 10794  000B62  0A63               	xorlw	99
 10795  000B64  A4D8               	btfss	status,2,c
 10796  000B66  D026               	goto	l8934
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 10800  000B68  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10801  000B6C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10802  000B70  2ADE               	incf	postinc2,f,c
 10803  000B72  0E00               	movlw	0
 10804  000B74  22DD               	addwfc	postdec2,f,c
 10805                           
 10806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10807  000B76  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10808  000B7A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10809  000B7E  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10810  000B82  0E02               	movlw	2
 10811  000B84  26DE               	addwf	postinc2,f,c
 10812  000B86  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10813  000B8A  0E00               	movlw	0
 10814  000B8C  22DD               	addwfc	postdec2,f,c
 10815  000B8E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10816  000B92  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10817  000B96  50DF               	movf	indf2,w,c
 10818  000B98  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 10822  000B9A  C04C  F025         	movff	vfpfcnvrt@fp,ctoa@fp
 10823  000B9E  C04D  F026         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10824  000BA2  C08E  F027         	movff	vfpfcnvrt@c,ctoa@c
 10825  000BA6  ECC8  F021         	call	_ctoa	;wreg free
 10826  000BAA  C025  F04C         	movff	?_ctoa,?_vfpfcnvrt
 10827  000BAE  C026  F04D         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10828  000BB2  0012               	return	
 10829  000BB4                     l8934:
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10833  000BB4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10834  000BB8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10835  000BBC  CFDE FFF6          	movff	postinc2,tblptrl
 10836  000BC0  CFDD FFF7          	movff	postdec2,tblptrh
 10837  000BC4                     	if	0	;tblptru may be non-zero
 10838  000BC4                     	endif
 10839  000BC4                     	if	0	;tblptru may be non-zero
 10840  000BC4                     	endif
 10841  000BC4  0008               	tblrd		*
 10842  000BC6  50F5               	movf	tablat,w,c
 10843  000BC8  0A64               	xorlw	100
 10844  000BCA  B4D8               	btfsc	status,2,c
 10845  000BCC  D00D               	goto	u10530
 10846                           
 10847                           ; BSR set to: 0
 10848  000BCE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10849  000BD2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10850  000BD6  CFDE FFF6          	movff	postinc2,tblptrl
 10851  000BDA  CFDD FFF7          	movff	postdec2,tblptrh
 10852  000BDE                     	if	0	;tblptru may be non-zero
 10853  000BDE                     	endif
 10854  000BDE                     	if	0	;tblptru may be non-zero
 10855  000BDE                     	endif
 10856  000BDE  0008               	tblrd		*
 10857  000BE0  50F5               	movf	tablat,w,c
 10858  000BE2  0A69               	xorlw	105
 10859  000BE4  A4D8               	btfss	status,2,c
 10860  000BE6  D03F               	goto	l8944
 10861  000BE8                     u10530:
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 10865  000BE8  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10866  000BEC  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10867  000BF0  2ADE               	incf	postinc2,f,c
 10868  000BF2  0E00               	movlw	0
 10869  000BF4  22DD               	addwfc	postdec2,f,c
 10870                           
 10871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10872  000BF6  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10873  000BFA  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10874  000BFE  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10875  000C02  0E02               	movlw	2
 10876  000C04  26DE               	addwf	postinc2,f,c
 10877  000C06  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10878  000C0A  0E00               	movlw	0
 10879  000C0C  22DD               	addwfc	postdec2,f,c
 10880  000C0E  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10881  000C12  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10882  000C16  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
 10883  000C1A  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
 10884  000C1E  0E00               	movlw	0
 10885  000C20  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10886  000C22  0EFF               	movlw	-1
 10887  000C24  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10888  000C26  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10889  000C28  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10890  000C2A  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10891  000C2C  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10892  000C2E  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 10896  000C30  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
 10897  000C34  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10898  000C38  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
 10899  000C3C  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10900  000C40  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10901  000C44  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10902  000C48  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10903  000C4C  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10904  000C50  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10905  000C54  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10906  000C58  EC94  F014         	call	_dtoa	;wreg free
 10907  000C5C  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
 10908  000C60  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10909  000C64  0012               	return	
 10910  000C66                     l8944:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 10914  000C66  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10915  000C6A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10916  000C6E  CFDE F006          	movff	postinc2,strncmp@_l
 10917  000C72  CFDD F007          	movff	postdec2,strncmp@_l+1
 10918  000C76  0E23               	movlw	low STR_72
 10919  000C78  6E08               	movwf	strncmp@_r,c
 10920  000C7A  0EFD               	movlw	high STR_72
 10921  000C7C  6E09               	movwf	strncmp@_r+1,c
 10922  000C7E  0E00               	movlw	0
 10923  000C80  6E0B               	movwf	strncmp@n+1,c
 10924  000C82  0E02               	movlw	2
 10925  000C84  6E0A               	movwf	strncmp@n,c
 10926  000C86  ECB1  F01E         	call	_strncmp	;wreg free
 10927  000C8A  5006               	movf	?_strncmp,w,c
 10928  000C8C  1007               	iorwf	?_strncmp+1,w,c
 10929  000C8E  B4D8               	btfsc	status,2,c
 10930  000C90  D016               	goto	u10550
 10931  000C92  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10932  000C96  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10933  000C9A  CFDE F006          	movff	postinc2,strncmp@_l
 10934  000C9E  CFDD F007          	movff	postdec2,strncmp@_l+1
 10935  000CA2  0E26               	movlw	low STR_76
 10936  000CA4  6E08               	movwf	strncmp@_r,c
 10937  000CA6  0EFD               	movlw	high STR_76
 10938  000CA8  6E09               	movwf	strncmp@_r+1,c
 10939  000CAA  0E00               	movlw	0
 10940  000CAC  6E0B               	movwf	strncmp@n+1,c
 10941  000CAE  0E02               	movlw	2
 10942  000CB0  6E0A               	movwf	strncmp@n,c
 10943  000CB2  ECB1  F01E         	call	_strncmp	;wreg free
 10944  000CB6  5006               	movf	?_strncmp,w,c
 10945  000CB8  1007               	iorwf	?_strncmp+1,w,c
 10946  000CBA  A4D8               	btfss	status,2,c
 10947  000CBC  D05C               	goto	l8954
 10948  000CBE                     u10550:
 10949                           
 10950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 10951  000CBE  0E02               	movlw	2
 10952  000CC0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10953  000CC4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10954  000CC8  26DE               	addwf	postinc2,f,c
 10955  000CCA  0E00               	movlw	0
 10956  000CCC  22DD               	addwfc	postdec2,f,c
 10957                           
 10958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 10959  000CCE  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10960  000CD2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10961  000CD6  CFDF F052          	movff	indf2,??_vfpfcnvrt
 10962  000CDA  0E04               	movlw	4
 10963  000CDC  26DE               	addwf	postinc2,f,c
 10964  000CDE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 10965  000CE2  0E00               	movlw	0
 10966  000CE4  22DD               	addwfc	postdec2,f,c
 10967  000CE6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10968  000CEA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10969  000CEE  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 10970  000CF2  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 10971  000CF6  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 10972  000CFA  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 10973  000CFE  C054  F058         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 10974  000D02  C055  F059         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 10975  000D06  C056  F05A         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 10976  000D0A  C057  F05B         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 10977  000D0E  6A5C               	clrf	(??_vfpfcnvrt+10)& (0+255),c
 10978  000D10  BE5B               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
 10979  000D12  685C               	setf	(??_vfpfcnvrt+10)& (0+255),c
 10980  000D14  C05C  F05D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 10981  000D18  C05C  F05E         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 10982  000D1C  C05C  F05F         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 10983  000D20  C058  F086         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 10984  000D24  C059  F087         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 10985  000D28  C05A  F088         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 10986  000D2C  C05B  F089         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 10987  000D30  C05C  F08A         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 10988  000D34  C05D  F08B         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 10989  000D38  C05E  F08C         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 10990  000D3C  C05F  F08D         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 10991                           
 10992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 10993  000D40  C04C  F025         	movff	vfpfcnvrt@fp,dtoa@fp
 10994  000D44  C04D  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10995  000D48  C086  F027         	movff	vfpfcnvrt@ll,dtoa@d
 10996  000D4C  C087  F028         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10997  000D50  C088  F029         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10998  000D54  C089  F02A         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10999  000D58  C08A  F02B         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11000  000D5C  C08B  F02C         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11001  000D60  C08C  F02D         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11002  000D64  C08D  F02E         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11003  000D68  EC94  F014         	call	_dtoa	;wreg free
 11004  000D6C  C025  F04C         	movff	?_dtoa,?_vfpfcnvrt
 11005  000D70  C026  F04D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11006  000D74  0012               	return	
 11007  000D76                     l8954:
 11008                           
 11009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 11010  000D76  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11011  000D7A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11012  000D7E  CFDE FFF6          	movff	postinc2,tblptrl
 11013  000D82  CFDD FFF7          	movff	postdec2,tblptrh
 11014  000D86                     	if	0	;tblptru may be non-zero
 11015  000D86                     	endif
 11016  000D86                     	if	0	;tblptru may be non-zero
 11017  000D86                     	endif
 11018  000D86  0008               	tblrd		*
 11019  000D88  50F5               	movf	tablat,w,c
 11020  000D8A  0A73               	xorlw	115
 11021  000D8C  A4D8               	btfss	status,2,c
 11022  000D8E  D02A               	goto	l8962
 11023                           
 11024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 11025  000D90  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11026  000D94  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11027  000D98  2ADE               	incf	postinc2,f,c
 11028  000D9A  0E00               	movlw	0
 11029  000D9C  22DD               	addwfc	postdec2,f,c
 11030                           
 11031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11032  000D9E  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11033  000DA2  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11034  000DA6  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11035  000DAA  0E02               	movlw	2
 11036  000DAC  26DE               	addwf	postinc2,f,c
 11037  000DAE  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11038  000DB2  0E00               	movlw	0
 11039  000DB4  22DD               	addwfc	postdec2,f,c
 11040  000DB6  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11041  000DBA  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11042  000DBE  CFDE F080          	movff	postinc2,vfpfcnvrt@cp
 11043  000DC2  CFDD F081          	movff	postdec2,vfpfcnvrt@cp+1
 11044                           
 11045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 11046  000DC6  C04C  F013         	movff	vfpfcnvrt@fp,stoa@fp
 11047  000DCA  C04D  F014         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11048  000DCE  C080  F015         	movff	vfpfcnvrt@cp,stoa@s
 11049  000DD2  C081  F016         	movff	vfpfcnvrt@cp+1,stoa@s+1
 11050  000DD6  ECED  F019         	call	_stoa	;wreg free
 11051  000DDA  C013  F04C         	movff	?_stoa,?_vfpfcnvrt
 11052  000DDE  C014  F04D         	movff	?_stoa+1,?_vfpfcnvrt+1
 11053  000DE2  0012               	return	
 11054  000DE4                     l8962:
 11055                           
 11056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11057  000DE4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11058  000DE8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11059  000DEC  CFDE FFF6          	movff	postinc2,tblptrl
 11060  000DF0  CFDD FFF7          	movff	postdec2,tblptrh
 11061  000DF4                     	if	0	;tblptru may be non-zero
 11062  000DF4                     	endif
 11063  000DF4                     	if	0	;tblptru may be non-zero
 11064  000DF4                     	endif
 11065  000DF4  0008               	tblrd		*
 11066  000DF6  50F5               	movf	tablat,w,c
 11067  000DF8  0A75               	xorlw	117
 11068  000DFA  A4D8               	btfss	status,2,c
 11069  000DFC  D041               	goto	l8970
 11070                           
 11071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11072  000DFE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11073  000E02  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11074  000E06  2ADE               	incf	postinc2,f,c
 11075  000E08  0E00               	movlw	0
 11076  000E0A  22DD               	addwfc	postdec2,f,c
 11077                           
 11078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11079  000E0C  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11080  000E10  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11081  000E14  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11082  000E18  0E02               	movlw	2
 11083  000E1A  26DE               	addwf	postinc2,f,c
 11084  000E1C  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11085  000E20  0E00               	movlw	0
 11086  000E22  22DD               	addwfc	postdec2,f,c
 11087  000E24  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11088  000E28  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11089  000E2C  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11090  000E30  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 11091  000E34  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11092  000E38  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11093  000E3C  0100               	movlb	0	; () banked
 11094  000E3E  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11095  000E40  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11096  000E42  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11097  000E44  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11098  000E46  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11099  000E48  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11103  000E4A  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
 11104  000E4E  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11105  000E52  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
 11106  000E56  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11107  000E5A  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11108  000E5E  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11109  000E62  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11110  000E66  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11111  000E6A  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11112  000E6E  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11113  000E72  ECD1  F017         	call	_utoa	;wreg free
 11114  000E76  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 11115  000E7A  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 11116  000E7E  0012               	return	
 11117  000E80                     l8970:
 11118                           
 11119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11120  000E80  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11121  000E84  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11122  000E88  CFDE F006          	movff	postinc2,strncmp@_l
 11123  000E8C  CFDD F007          	movff	postdec2,strncmp@_l+1
 11124  000E90  0E1D               	movlw	low (STR_21+1)
 11125  000E92  6E08               	movwf	strncmp@_r,c
 11126  000E94  0EFD               	movlw	high (STR_21+1)
 11127  000E96  6E09               	movwf	strncmp@_r+1,c
 11128  000E98  0E00               	movlw	0
 11129  000E9A  6E0B               	movwf	strncmp@n+1,c
 11130  000E9C  0E02               	movlw	2
 11131  000E9E  6E0A               	movwf	strncmp@n,c
 11132  000EA0  ECB1  F01E         	call	_strncmp	;wreg free
 11133  000EA4  5006               	movf	?_strncmp,w,c
 11134  000EA6  1007               	iorwf	?_strncmp+1,w,c
 11135  000EA8  A4D8               	btfss	status,2,c
 11136  000EAA  D048               	goto	l8978
 11137                           
 11138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 11139  000EAC  0E02               	movlw	2
 11140  000EAE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11141  000EB2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11142  000EB6  26DE               	addwf	postinc2,f,c
 11143  000EB8  0E00               	movlw	0
 11144  000EBA  22DD               	addwfc	postdec2,f,c
 11145                           
 11146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 11147  000EBC  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11148  000EC0  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11149  000EC4  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11150  000EC8  0E04               	movlw	4
 11151  000ECA  26DE               	addwf	postinc2,f,c
 11152  000ECC  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11153  000ED0  0E00               	movlw	0
 11154  000ED2  22DD               	addwfc	postdec2,f,c
 11155  000ED4  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11156  000ED8  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11157  000EDC  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11158  000EE0  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 11159  000EE4  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 11160  000EE8  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 11161  000EEC  5054               	movf	??_vfpfcnvrt+2,w,c
 11162  000EEE  0100               	movlb	0	; () banked
 11163  000EF0  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 11164  000EF2  5055               	movf	??_vfpfcnvrt+3,w,c
 11165  000EF4  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 11166  000EF6  5056               	movf	??_vfpfcnvrt+4,w,c
 11167  000EF8  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 11168  000EFA  5057               	movf	??_vfpfcnvrt+5,w,c
 11169  000EFC  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 11170  000EFE  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11171  000F00  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11172  000F02  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11173  000F04  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 11177  000F06  C04C  F025         	movff	vfpfcnvrt@fp,utoa@fp
 11178  000F0A  C04D  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11179  000F0E  C08F  F027         	movff	vfpfcnvrt@llu,utoa@d
 11180  000F12  C090  F028         	movff	vfpfcnvrt@llu+1,utoa@d+1
 11181  000F16  C091  F029         	movff	vfpfcnvrt@llu+2,utoa@d+2
 11182  000F1A  C092  F02A         	movff	vfpfcnvrt@llu+3,utoa@d+3
 11183  000F1E  C093  F02B         	movff	vfpfcnvrt@llu+4,utoa@d+4
 11184  000F22  C094  F02C         	movff	vfpfcnvrt@llu+5,utoa@d+5
 11185  000F26  C095  F02D         	movff	vfpfcnvrt@llu+6,utoa@d+6
 11186  000F2A  C096  F02E         	movff	vfpfcnvrt@llu+7,utoa@d+7
 11187  000F2E  ECD1  F017         	call	_utoa	;wreg free
 11188  000F32  C025  F04C         	movff	?_utoa,?_vfpfcnvrt
 11189  000F36  C026  F04D         	movff	?_utoa+1,?_vfpfcnvrt+1
 11190  000F3A  0012               	return	
 11191  000F3C                     l8978:
 11192                           
 11193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11194  000F3C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11195  000F40  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11196  000F44  CFDE FFF6          	movff	postinc2,tblptrl
 11197  000F48  CFDD FFF7          	movff	postdec2,tblptrh
 11198  000F4C                     	if	0	;tblptru may be non-zero
 11199  000F4C                     	endif
 11200  000F4C                     	if	0	;tblptru may be non-zero
 11201  000F4C                     	endif
 11202  000F4C  0008               	tblrd		*
 11203  000F4E  50F5               	movf	tablat,w,c
 11204  000F50  0A78               	xorlw	120
 11205  000F52  B4D8               	btfsc	status,2,c
 11206  000F54  D00D               	goto	u10600
 11207  000F56  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11208  000F5A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11209  000F5E  CFDE FFF6          	movff	postinc2,tblptrl
 11210  000F62  CFDD FFF7          	movff	postdec2,tblptrh
 11211  000F66                     	if	0	;tblptru may be non-zero
 11212  000F66                     	endif
 11213  000F66                     	if	0	;tblptru may be non-zero
 11214  000F66                     	endif
 11215  000F66  0008               	tblrd		*
 11216  000F68  50F5               	movf	tablat,w,c
 11217  000F6A  0A58               	xorlw	88
 11218  000F6C  A4D8               	btfss	status,2,c
 11219  000F6E  D04E               	goto	l8992
 11220  000F70                     u10600:
 11221                           
 11222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11223  000F70  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11224  000F74  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11225  000F78  CFDE FFF6          	movff	postinc2,tblptrl
 11226  000F7C  CFDD FFF7          	movff	postdec2,tblptrh
 11227  000F80                     	if	0	;tblptru may be non-zero
 11228  000F80                     	endif
 11229  000F80                     	if	0	;tblptru may be non-zero
 11230  000F80                     	endif
 11231  000F80  0008               	tblrd		*
 11232  000F82  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 11233                           
 11234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11235  000F86  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11236  000F8A  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11237  000F8E  2ADE               	incf	postinc2,f,c
 11238  000F90  0E00               	movlw	0
 11239  000F92  22DD               	addwfc	postdec2,f,c
 11240                           
 11241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11242  000F94  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11243  000F98  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11244  000F9C  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11245  000FA0  0E02               	movlw	2
 11246  000FA2  26DE               	addwf	postinc2,f,c
 11247  000FA4  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11248  000FA8  0E00               	movlw	0
 11249  000FAA  22DD               	addwfc	postdec2,f,c
 11250  000FAC  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11251  000FB0  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11252  000FB4  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11253  000FB8  CFDD F055          	movff	postdec2,??_vfpfcnvrt+3
 11254  000FBC  C054  F08F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 11255  000FC0  C055  F090         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 11256  000FC4  0100               	movlb	0	; () banked
 11257  000FC6  6B91               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11258  000FC8  6B92               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11259  000FCA  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11260  000FCC  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11261  000FCE  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11262  000FD0  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11266  000FD2  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 11267  000FD6  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11268  000FDA  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 11269  000FDE  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11270  000FE2  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11271  000FE6  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11272  000FEA  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11273  000FEE  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11274  000FF2  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11275  000FF6  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11276  000FFA  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 11277  000FFE  ECB6  F015         	call	_xtoa	;wreg free
 11278  001002  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 11279  001006  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11280  00100A  0012               	return	
 11281  00100C                     l8992:
 11282                           
 11283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 11284  00100C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11285  001010  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11286  001014  CFDE F006          	movff	postinc2,strncmp@_l
 11287  001018  CFDD F007          	movff	postdec2,strncmp@_l+1
 11288  00101C  0E29               	movlw	low STR_86
 11289  00101E  6E08               	movwf	strncmp@_r,c
 11290  001020  0EFD               	movlw	high STR_86
 11291  001022  6E09               	movwf	strncmp@_r+1,c
 11292  001024  0E00               	movlw	0
 11293  001026  6E0B               	movwf	strncmp@n+1,c
 11294  001028  0E02               	movlw	2
 11295  00102A  6E0A               	movwf	strncmp@n,c
 11296  00102C  ECB1  F01E         	call	_strncmp	;wreg free
 11297  001030  5006               	movf	?_strncmp,w,c
 11298  001032  1007               	iorwf	?_strncmp+1,w,c
 11299  001034  B4D8               	btfsc	status,2,c
 11300  001036  D016               	goto	u10620
 11301  001038  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11302  00103C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11303  001040  CFDE F006          	movff	postinc2,strncmp@_l
 11304  001044  CFDD F007          	movff	postdec2,strncmp@_l+1
 11305  001048  0E20               	movlw	low STR_90
 11306  00104A  6E08               	movwf	strncmp@_r,c
 11307  00104C  0EFD               	movlw	high STR_90
 11308  00104E  6E09               	movwf	strncmp@_r+1,c
 11309  001050  0E00               	movlw	0
 11310  001052  6E0B               	movwf	strncmp@n+1,c
 11311  001054  0E02               	movlw	2
 11312  001056  6E0A               	movwf	strncmp@n,c
 11313  001058  ECB1  F01E         	call	_strncmp	;wreg free
 11314  00105C  5006               	movf	?_strncmp,w,c
 11315  00105E  1007               	iorwf	?_strncmp+1,w,c
 11316  001060  A4D8               	btfss	status,2,c
 11317  001062  D05D               	goto	l9006
 11318  001064                     u10620:
 11319                           
 11320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 11321  001064  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11322  001068  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11323  00106C  CFDE F052          	movff	postinc2,??_vfpfcnvrt
 11324  001070  CFDD F053          	movff	postdec2,??_vfpfcnvrt+1
 11325  001074  0E01               	movlw	1
 11326  001076  2652               	addwf	??_vfpfcnvrt,f,c
 11327  001078  0E00               	movlw	0
 11328  00107A  2253               	addwfc	??_vfpfcnvrt+1,f,c
 11329  00107C  C052  FFF6         	movff	??_vfpfcnvrt,tblptrl
 11330  001080  C053  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 11331  001084                     	if	0	;tblptru may be non-zero
 11332  001084                     	endif
 11333  001084                     	if	0	;tblptru may be non-zero
 11334  001084                     	endif
 11335  001084  0008               	tblrd		*
 11336  001086  CFF5 F08E          	movff	tablat,vfpfcnvrt@c
 11337                           
 11338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 11339  00108A  0E02               	movlw	2
 11340  00108C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11341  001090  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11342  001094  26DE               	addwf	postinc2,f,c
 11343  001096  0E00               	movlw	0
 11344  001098  22DD               	addwfc	postdec2,f,c
 11345                           
 11346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 11347  00109A  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11348  00109E  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11349  0010A2  CFDF F052          	movff	indf2,??_vfpfcnvrt
 11350  0010A6  0E04               	movlw	4
 11351  0010A8  26DE               	addwf	postinc2,f,c
 11352  0010AA  CFDF F053          	movff	indf2,??_vfpfcnvrt+1
 11353  0010AE  0E00               	movlw	0
 11354  0010B0  22DD               	addwfc	postdec2,f,c
 11355  0010B2  C052  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11356  0010B6  C053  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11357  0010BA  CFDE F054          	movff	postinc2,??_vfpfcnvrt+2
 11358  0010BE  CFDE F055          	movff	postinc2,??_vfpfcnvrt+3
 11359  0010C2  CFDE F056          	movff	postinc2,??_vfpfcnvrt+4
 11360  0010C6  CFDE F057          	movff	postinc2,??_vfpfcnvrt+5
 11361  0010CA  5054               	movf	??_vfpfcnvrt+2,w,c
 11362  0010CC  0100               	movlb	0	; () banked
 11363  0010CE  6F8F               	movwf	vfpfcnvrt@llu& (0+255),b
 11364  0010D0  5055               	movf	??_vfpfcnvrt+3,w,c
 11365  0010D2  6F90               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
 11366  0010D4  5056               	movf	??_vfpfcnvrt+4,w,c
 11367  0010D6  6F91               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
 11368  0010D8  5057               	movf	??_vfpfcnvrt+5,w,c
 11369  0010DA  6F92               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
 11370  0010DC  6B93               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11371  0010DE  6B94               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11372  0010E0  6B95               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11373  0010E2  6B96               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 11377  0010E4  C04C  F025         	movff	vfpfcnvrt@fp,xtoa@fp
 11378  0010E8  C04D  F026         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11379  0010EC  C08F  F027         	movff	vfpfcnvrt@llu,xtoa@d
 11380  0010F0  C090  F028         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11381  0010F4  C091  F029         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11382  0010F8  C092  F02A         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11383  0010FC  C093  F02B         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11384  001100  C094  F02C         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11385  001104  C095  F02D         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11386  001108  C096  F02E         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11387  00110C  C08E  F02F         	movff	vfpfcnvrt@c,xtoa@x
 11388  001110  ECB6  F015         	call	_xtoa	;wreg free
 11389  001114  C025  F04C         	movff	?_xtoa,?_vfpfcnvrt
 11390  001118  C026  F04D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 11391  00111C  0012               	return	
 11392  00111E                     l9006:
 11393                           
 11394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11395  00111E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11396  001122  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11397  001126  CFDE FFF6          	movff	postinc2,tblptrl
 11398  00112A  CFDD FFF7          	movff	postdec2,tblptrh
 11399  00112E                     	if	0	;tblptru may be non-zero
 11400  00112E                     	endif
 11401  00112E                     	if	0	;tblptru may be non-zero
 11402  00112E                     	endif
 11403  00112E  0008               	tblrd		*
 11404  001130  50F5               	movf	tablat,w,c
 11405  001132  0A25               	xorlw	37
 11406  001134  A4D8               	btfss	status,2,c
 11407  001136  D016               	goto	l9016
 11408                           
 11409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11410  001138  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11411  00113C  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11412  001140  2ADE               	incf	postinc2,f,c
 11413  001142  0E00               	movlw	0
 11414  001144  22DD               	addwfc	postdec2,f,c
 11415                           
 11416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11417  001146  0E00               	movlw	0
 11418  001148  6E0B               	movwf	fputc@c+1,c
 11419  00114A  0E25               	movlw	37
 11420  00114C  6E0A               	movwf	fputc@c,c
 11421  00114E  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 11422  001152  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11423  001156  EC16  F020         	call	_fputc	;wreg free
 11424  00115A                     l9012:
 11425                           
 11426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11427  00115A  0E00               	movlw	0
 11428  00115C  6E4D               	movwf	?_vfpfcnvrt+1,c
 11429  00115E  0E01               	movlw	1
 11430  001160  6E4C               	movwf	?_vfpfcnvrt,c
 11431  001162  0012               	return	
 11432  001164                     l9016:
 11433                           
 11434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11435  001164  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11436  001168  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11437  00116C  2ADE               	incf	postinc2,f,c
 11438  00116E  0E00               	movlw	0
 11439  001170  22DD               	addwfc	postdec2,f,c
 11440                           
 11441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11442  001172  0E00               	movlw	0
 11443  001174  6E4D               	movwf	?_vfpfcnvrt+1,c
 11444  001176  0E00               	movlw	0
 11445  001178  6E4C               	movwf	?_vfpfcnvrt,c
 11446  00117A  0012               	return	
 11447  00117C                     l9022:
 11448                           
 11449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11450  00117C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11451  001180  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11452  001184  CFDE FFF6          	movff	postinc2,tblptrl
 11453  001188  CFDD FFF7          	movff	postdec2,tblptrh
 11454  00118C                     	if	0	;tblptru may be non-zero
 11455  00118C                     	endif
 11456  00118C                     	if	0	;tblptru may be non-zero
 11457  00118C                     	endif
 11458  00118C  0008               	tblrd		*
 11459  00118E  50F5               	movf	tablat,w,c
 11460  001190  6E0A               	movwf	fputc@c,c
 11461  001192  6A0B               	clrf	fputc@c+1,c
 11462  001194  C04C  F00C         	movff	vfpfcnvrt@fp,fputc@fp
 11463  001198  C04D  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11464  00119C  EC16  F020         	call	_fputc	;wreg free
 11465                           
 11466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11467  0011A0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11468  0011A4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11469  0011A8  2ADE               	incf	postinc2,f,c
 11470  0011AA  0E00               	movlw	0
 11471  0011AC  22DD               	addwfc	postdec2,f,c
 11472  0011AE  D7D5               	goto	l9012
 11473  0011B0                     __end_of_vfpfcnvrt:
 11474                           	opt callstack 0
 11475                           
 11476 ;; *************** function _xtoa *****************
 11477 ;; Defined at:
 11478 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 11481 ;;		 -> NULL(0), 
 11482 ;;  d               8   38[COMRAM] unsigned long long 
 11483 ;;  x               1   46[COMRAM] unsigned char 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  n               8   63[COMRAM] unsigned long long 
 11486 ;;  c               2   73[COMRAM] int 
 11487 ;;  i               2   71[COMRAM] int 
 11488 ;;  w               2   61[COMRAM] int 
 11489 ;;  p               2   59[COMRAM] int 
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  2   36[COMRAM] int 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11499 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;Total ram usage:       39 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    9
 11506 ;; This function calls:
 11507 ;;		_isalpha
 11508 ;;		_isupper
 11509 ;;		_pad
 11510 ;;		_toupper
 11511 ;; This function is called by:
 11512 ;;		_vfpfcnvrt
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text39
 11517  002B6C                     __ptext39:
 11518                           	opt callstack 0
 11519  002B6C                     _xtoa:
 11520                           	opt callstack 18
 11521                           
 11522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11523                           
 11524                           ;incstack = 0
 11525  002B6C  0100               	movlb	0	; () banked
 11526  002B6E  AFE4               	btfss	(_prec+1)& (0+255),7,b
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11530  002B70  9278               	bcf	_flags,1,c
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11534  002B72  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 11535  002B74  D005               	goto	u9720
 11536  002B76  51E4               	movf	(_prec+1)& (0+255),w,b
 11537  002B78  E108               	bnz	l713
 11538  002B7A  05E3               	decf	_prec& (0+255),w,b
 11539  002B7C  B0D8               	btfsc	status,0,c
 11540  002B7E  D005               	goto	l713
 11541  002B80                     u9720:
 11542                           
 11543                           ; BSR set to: 0
 11544  002B80  0E00               	movlw	0
 11545  002B82  6E3D               	movwf	xtoa@p+1,c
 11546  002B84  0E01               	movlw	1
 11547  002B86  6E3C               	movwf	xtoa@p,c
 11548  002B88  D004               	goto	l715
 11549  002B8A                     l713:
 11550                           
 11551                           ; BSR set to: 0
 11552  002B8A  C0E3  F03C         	movff	_prec,xtoa@p
 11553  002B8E  C0E4  F03D         	movff	_prec+1,xtoa@p+1
 11554  002B92                     l715:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11558  002B92  C0E1  F03E         	movff	_width,xtoa@w
 11559  002B96  C0E2  F03F         	movff	_width+1,xtoa@w+1
 11560                           
 11561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11562  002B9A  A878               	btfss	_flags,4,c
 11563  002B9C  D004               	goto	l8530
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11567  002B9E  0EFE               	movlw	254
 11568  002BA0  263E               	addwf	xtoa@w,f,c
 11569  002BA2  0EFF               	movlw	255
 11570  002BA4  223F               	addwfc	xtoa@w+1,f,c
 11571  002BA6                     l8530:
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11575  002BA6  C027  F040         	movff	xtoa@d,xtoa@n
 11576  002BAA  C028  F041         	movff	xtoa@d+1,xtoa@n+1
 11577  002BAE  C029  F042         	movff	xtoa@d+2,xtoa@n+2
 11578  002BB2  C02A  F043         	movff	xtoa@d+3,xtoa@n+3
 11579  002BB6  C02B  F044         	movff	xtoa@d+4,xtoa@n+4
 11580  002BBA  C02C  F045         	movff	xtoa@d+5,xtoa@n+5
 11581  002BBE  C02D  F046         	movff	xtoa@d+6,xtoa@n+6
 11582  002BC2  C02E  F047         	movff	xtoa@d+7,xtoa@n+7
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11586  002BC6  0E00               	movlw	0
 11587  002BC8  6E49               	movwf	xtoa@i+1,c
 11588  002BCA  0E1F               	movlw	31
 11589  002BCC  6E48               	movwf	xtoa@i,c
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11593  002BCE  0E00               	movlw	0
 11594  002BD0  0101               	movlb	1	; () banked
 11595  002BD2  6F92               	movwf	(_dbuf+31)& (0+255),b
 11596                           
 11597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11598  002BD4  D093               	goto	l8566
 11599  002BD6                     l8536:
 11600                           
 11601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11602  002BD6  0648               	decf	xtoa@i,f,c
 11603  002BD8  A0D8               	btfss	status,0,c
 11604  002BDA  0649               	decf	xtoa@i+1,f,c
 11605                           
 11606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11607  002BDC  0E0F               	movlw	15
 11608  002BDE  1440               	andwf	xtoa@n,w,c
 11609  002BE0  6E4A               	movwf	xtoa@c,c
 11610  002BE2  6A4B               	clrf	xtoa@c+1,c
 11611                           
 11612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11613  002BE4  BE4B               	btfsc	xtoa@c+1,7,c
 11614  002BE6  D008               	goto	l8544
 11615  002BE8  504B               	movf	xtoa@c+1,w,c
 11616  002BEA  E104               	bnz	u9740
 11617  002BEC  0E0A               	movlw	10
 11618  002BEE  5C4A               	subwf	xtoa@c,w,c
 11619  002BF0  A0D8               	btfss	status,0,c
 11620  002BF2  D002               	goto	l8544
 11621  002BF4                     u9740:
 11622  002BF4  0E57               	movlw	87
 11623  002BF6  D001               	goto	L22
 11624  002BF8                     l8544:
 11625  002BF8  0E30               	movlw	48
 11626  002BFA                     L22:
 11627  002BFA  244A               	addwf	xtoa@c,w,c
 11628  002BFC  6E4A               	movwf	xtoa@c,c
 11629  002BFE  0E00               	movlw	0
 11630  002C00  204B               	addwfc	xtoa@c+1,w,c
 11631  002C02  6E4B               	movwf	xtoa@c+1,c
 11632                           
 11633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 11634  002C04  0EBF               	movlw	191
 11635  002C06  6E30               	movwf	??_xtoa& (0+255),c
 11636  002C08  0EFF               	movlw	255
 11637  002C0A  6E31               	movwf	(??_xtoa+1)& (0+255),c
 11638  002C0C  502F               	movf	xtoa@x,w,c
 11639  002C0E  6E32               	movwf	(??_xtoa+2)& (0+255),c
 11640  002C10  6A33               	clrf	(??_xtoa+3)& (0+255),c
 11641  002C12  5030               	movf	??_xtoa,w,c
 11642  002C14  2632               	addwf	??_xtoa+2,f,c
 11643  002C16  5031               	movf	??_xtoa+1,w,c
 11644  002C18  2233               	addwfc	??_xtoa+3,f,c
 11645  002C1A  5033               	movf	??_xtoa+3,w,c
 11646  002C1C  E106               	bnz	u9750
 11647  002C1E  0E1A               	movlw	26
 11648  002C20  5C32               	subwf	??_xtoa+2,w,c
 11649  002C22  B0D8               	btfsc	status,0,c
 11650  002C24  D002               	goto	u9750
 11651  002C26  0E01               	movlw	1
 11652  002C28  D001               	goto	u9760
 11653  002C2A                     u9750:
 11654  002C2A  0E00               	movlw	0
 11655  002C2C                     u9760:
 11656  002C2C  6E38               	movwf	_xtoa$1477,c
 11657  002C2E  6A39               	clrf	_xtoa$1477+1,c
 11658  002C30  5038               	movf	_xtoa$1477,w,c
 11659  002C32  1039               	iorwf	_xtoa$1477+1,w,c
 11660  002C34  B4D8               	btfsc	status,2,c
 11661  002C36  D027               	goto	l8558
 11662  002C38  0E9F               	movlw	159
 11663  002C3A  6E30               	movwf	??_xtoa& (0+255),c
 11664  002C3C  0EFF               	movlw	255
 11665  002C3E  6E31               	movwf	(??_xtoa+1)& (0+255),c
 11666  002C40  0E20               	movlw	32
 11667  002C42  104A               	iorwf	xtoa@c,w,c
 11668  002C44  6E32               	movwf	(??_xtoa+2)& (0+255),c
 11669  002C46  0E00               	movlw	0
 11670  002C48  104B               	iorwf	xtoa@c+1,w,c
 11671  002C4A  6E33               	movwf	(??_xtoa+3)& (0+255),c
 11672  002C4C  5030               	movf	??_xtoa,w,c
 11673  002C4E  2632               	addwf	??_xtoa+2,f,c
 11674  002C50  5031               	movf	??_xtoa+1,w,c
 11675  002C52  2233               	addwfc	??_xtoa+3,f,c
 11676  002C54  5033               	movf	??_xtoa+3,w,c
 11677  002C56  E106               	bnz	u9780
 11678  002C58  0E1A               	movlw	26
 11679  002C5A  5C32               	subwf	??_xtoa+2,w,c
 11680  002C5C  B0D8               	btfsc	status,0,c
 11681  002C5E  D002               	goto	u9780
 11682  002C60  0E01               	movlw	1
 11683  002C62  D001               	goto	u9790
 11684  002C64                     u9780:
 11685  002C64  0E00               	movlw	0
 11686  002C66                     u9790:
 11687  002C66  6E3A               	movwf	_xtoa$1478,c
 11688  002C68  6A3B               	clrf	_xtoa$1478+1,c
 11689  002C6A  503A               	movf	_xtoa$1478,w,c
 11690  002C6C  103B               	iorwf	_xtoa$1478+1,w,c
 11691  002C6E  B4D8               	btfsc	status,2,c
 11692  002C70  D00A               	goto	l8558
 11693                           
 11694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11695  002C72  C04A  F00C         	movff	xtoa@c,toupper@c
 11696  002C76  C04B  F00D         	movff	xtoa@c+1,toupper@c+1
 11697  002C7A  ECF0  F021         	call	_toupper	;wreg free
 11698  002C7E  C00C  F04A         	movff	?_toupper,xtoa@c
 11699  002C82  C00D  F04B         	movff	?_toupper+1,xtoa@c+1
 11700  002C86                     l8558:
 11701                           
 11702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11703  002C86  0E73               	movlw	low _dbuf
 11704  002C88  2448               	addwf	xtoa@i,w,c
 11705  002C8A  6ED9               	movwf	fsr2l,c
 11706  002C8C  0E01               	movlw	high _dbuf
 11707  002C8E  2049               	addwfc	xtoa@i+1,w,c
 11708  002C90  6EDA               	movwf	fsr2h,c
 11709  002C92  C04A  FFDF         	movff	xtoa@c,indf2
 11710                           
 11711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11712  002C96  063C               	decf	xtoa@p,f,c
 11713  002C98  A0D8               	btfss	status,0,c
 11714  002C9A  063D               	decf	xtoa@p+1,f,c
 11715                           
 11716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11717  002C9C  063E               	decf	xtoa@w,f,c
 11718  002C9E  A0D8               	btfss	status,0,c
 11719  002CA0  063F               	decf	xtoa@w+1,f,c
 11720                           
 11721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11722  002CA2  C040  F030         	movff	xtoa@n,??_xtoa
 11723  002CA6  C041  F031         	movff	xtoa@n+1,??_xtoa+1
 11724  002CAA  C042  F032         	movff	xtoa@n+2,??_xtoa+2
 11725  002CAE  C043  F033         	movff	xtoa@n+3,??_xtoa+3
 11726  002CB2  C044  F034         	movff	xtoa@n+4,??_xtoa+4
 11727  002CB6  C045  F035         	movff	xtoa@n+5,??_xtoa+5
 11728  002CBA  C046  F036         	movff	xtoa@n+6,??_xtoa+6
 11729  002CBE  C047  F037         	movff	xtoa@n+7,??_xtoa+7
 11730  002CC2  0E05               	movlw	5
 11731  002CC4  D009               	goto	u9810
 11732  002CC6                     u9815:
 11733  002CC6  90D8               	bcf	status,0,c
 11734  002CC8  3237               	rrcf	??_xtoa+7,f,c
 11735  002CCA  3236               	rrcf	??_xtoa+6,f,c
 11736  002CCC  3235               	rrcf	??_xtoa+5,f,c
 11737  002CCE  3234               	rrcf	??_xtoa+4,f,c
 11738  002CD0  3233               	rrcf	??_xtoa+3,f,c
 11739  002CD2  3232               	rrcf	??_xtoa+2,f,c
 11740  002CD4  3231               	rrcf	??_xtoa+1,f,c
 11741  002CD6  3230               	rrcf	??_xtoa,f,c
 11742  002CD8                     u9810:
 11743  002CD8  2EE8               	decfsz	wreg,f,c
 11744  002CDA  D7F5               	goto	u9815
 11745  002CDC  C030  F040         	movff	??_xtoa,xtoa@n
 11746  002CE0  C031  F041         	movff	??_xtoa+1,xtoa@n+1
 11747  002CE4  C032  F042         	movff	??_xtoa+2,xtoa@n+2
 11748  002CE8  C033  F043         	movff	??_xtoa+3,xtoa@n+3
 11749  002CEC  C034  F044         	movff	??_xtoa+4,xtoa@n+4
 11750  002CF0  C035  F045         	movff	??_xtoa+5,xtoa@n+5
 11751  002CF4  C036  F046         	movff	??_xtoa+6,xtoa@n+6
 11752  002CF8  C037  F047         	movff	??_xtoa+7,xtoa@n+7
 11753  002CFC                     l8566:
 11754                           
 11755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11756  002CFC  BE49               	btfsc	xtoa@i+1,7,c
 11757  002CFE  D020               	goto	u9860
 11758  002D00  5049               	movf	xtoa@i+1,w,c
 11759  002D02  E104               	bnz	u9820
 11760  002D04  0E02               	movlw	2
 11761  002D06  5C48               	subwf	xtoa@i,w,c
 11762  002D08  A0D8               	btfss	status,0,c
 11763  002D0A  D01A               	goto	u9860
 11764  002D0C                     u9820:
 11765  002D0C  5040               	movf	xtoa@n,w,c
 11766  002D0E  1041               	iorwf	xtoa@n+1,w,c
 11767  002D10  1042               	iorwf	xtoa@n+2,w,c
 11768  002D12  1043               	iorwf	xtoa@n+3,w,c
 11769  002D14  1044               	iorwf	xtoa@n+4,w,c
 11770  002D16  1045               	iorwf	xtoa@n+5,w,c
 11771  002D18  1046               	iorwf	xtoa@n+6,w,c
 11772  002D1A  1047               	iorwf	xtoa@n+7,w,c
 11773  002D1C  A4D8               	btfss	status,2,c
 11774  002D1E  D75B               	goto	l8536
 11775  002D20  BE3D               	btfsc	xtoa@p+1,7,c
 11776  002D22  D005               	goto	u9840
 11777  002D24  503D               	movf	xtoa@p+1,w,c
 11778  002D26  E102               	bnz	u9841
 11779  002D28  043C               	decf	xtoa@p,w,c
 11780  002D2A  B0D8               	btfsc	status,0,c
 11781  002D2C                     u9841:
 11782  002D2C  D754               	goto	l8536
 11783  002D2E                     u9840:
 11784  002D2E  BE3F               	btfsc	xtoa@w+1,7,c
 11785  002D30  D007               	goto	u9860
 11786  002D32  503F               	movf	xtoa@w+1,w,c
 11787  002D34  E103               	bnz	u9850
 11788  002D36  043E               	decf	xtoa@w,w,c
 11789  002D38  A0D8               	btfss	status,0,c
 11790  002D3A  D002               	goto	u9860
 11791  002D3C                     u9850:
 11792  002D3C  B278               	btfsc	_flags,1,c
 11793  002D3E  D74B               	goto	l8536
 11794  002D40                     u9860:
 11795                           
 11796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11797  002D40  A878               	btfss	_flags,4,c
 11798  002D42  D016               	goto	l8582
 11799                           
 11800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11801  002D44  0648               	decf	xtoa@i,f,c
 11802  002D46  A0D8               	btfss	status,0,c
 11803  002D48  0649               	decf	xtoa@i+1,f,c
 11804                           
 11805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11806  002D4A  0E73               	movlw	low _dbuf
 11807  002D4C  2448               	addwf	xtoa@i,w,c
 11808  002D4E  6ED9               	movwf	fsr2l,c
 11809  002D50  0E01               	movlw	high _dbuf
 11810  002D52  2049               	addwfc	xtoa@i+1,w,c
 11811  002D54  6EDA               	movwf	fsr2h,c
 11812  002D56  C02F  FFDF         	movff	xtoa@x,indf2
 11813                           
 11814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11815  002D5A  0648               	decf	xtoa@i,f,c
 11816  002D5C  A0D8               	btfss	status,0,c
 11817  002D5E  0649               	decf	xtoa@i+1,f,c
 11818                           
 11819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11820  002D60  0E73               	movlw	low _dbuf
 11821  002D62  2448               	addwf	xtoa@i,w,c
 11822  002D64  6ED9               	movwf	fsr2l,c
 11823  002D66  0E01               	movlw	high _dbuf
 11824  002D68  2049               	addwfc	xtoa@i+1,w,c
 11825  002D6A  6EDA               	movwf	fsr2h,c
 11826  002D6C  0E30               	movlw	48
 11827  002D6E  6EDF               	movwf	indf2,c
 11828  002D70                     l8582:
 11829                           
 11830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11831  002D70  C025  F01A         	movff	xtoa@fp,pad@fp
 11832  002D74  C026  F01B         	movff	xtoa@fp+1,pad@fp+1
 11833  002D78  0E73               	movlw	low _dbuf
 11834  002D7A  2448               	addwf	xtoa@i,w,c
 11835  002D7C  6E1C               	movwf	pad@buf,c
 11836  002D7E  0E01               	movlw	high _dbuf
 11837  002D80  2049               	addwfc	xtoa@i+1,w,c
 11838  002D82  6E1D               	movwf	pad@buf+1,c
 11839  002D84  C03E  F01E         	movff	xtoa@w,pad@p
 11840  002D88  C03F  F01F         	movff	xtoa@w+1,pad@p+1
 11841  002D8C  EC52  F01F         	call	_pad	;wreg free
 11842  002D90  C01A  F025         	movff	?_pad,?_xtoa
 11843  002D94  C01B  F026         	movff	?_pad+1,?_xtoa+1
 11844  002D98  0012               	return		;funcret
 11845  002D9A                     __end_of_xtoa:
 11846                           	opt callstack 0
 11847                           
 11848 ;; *************** function _toupper *****************
 11849 ;; Defined at:
 11850 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  c               2   11[COMRAM] int 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;		None
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  2   11[COMRAM] int 
 11857 ;; Registers used:
 11858 ;;		wreg, status,2, status,0
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;Total ram usage:        8 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:    3
 11871 ;; This function calls:
 11872 ;;		_islower
 11873 ;; This function is called by:
 11874 ;;		_xtoa
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text40
 11879  0043E0                     __ptext40:
 11880                           	opt callstack 0
 11881  0043E0                     _toupper:
 11882                           	opt callstack 23
 11883                           
 11884                           ;incstack = 0
 11885  0043E0  0E9F               	movlw	159
 11886  0043E2  6E0E               	movwf	??_toupper& (0+255),c
 11887  0043E4  0EFF               	movlw	255
 11888  0043E6  6E0F               	movwf	(??_toupper+1)& (0+255),c
 11889  0043E8  C00C  F010         	movff	toupper@c,??_toupper+2
 11890  0043EC  C00D  F011         	movff	toupper@c+1,??_toupper+3
 11891  0043F0  500E               	movf	??_toupper,w,c
 11892  0043F2  2610               	addwf	??_toupper+2,f,c
 11893  0043F4  500F               	movf	??_toupper+1,w,c
 11894  0043F6  2211               	addwfc	??_toupper+3,f,c
 11895  0043F8  5011               	movf	??_toupper+3,w,c
 11896  0043FA  E106               	bnz	u8390
 11897  0043FC  0E1A               	movlw	26
 11898  0043FE  5C10               	subwf	??_toupper+2,w,c
 11899  004400  B0D8               	btfsc	status,0,c
 11900  004402  D002               	goto	u8390
 11901  004404  0E01               	movlw	1
 11902  004406  D001               	goto	u8400
 11903  004408                     u8390:
 11904  004408  0E00               	movlw	0
 11905  00440A                     u8400:
 11906  00440A  6E12               	movwf	_toupper$2073,c
 11907  00440C  6A13               	clrf	_toupper$2073+1,c
 11908  00440E  5012               	movf	_toupper$2073,w,c
 11909  004410  1013               	iorwf	_toupper$2073+1,w,c
 11910  004412  B4D8               	btfsc	status,2,c
 11911  004414  D005               	goto	l1572
 11912  004416  0E5F               	movlw	95
 11913  004418  140C               	andwf	toupper@c,w,c
 11914  00441A  6E0C               	movwf	?_toupper,c
 11915  00441C  6A0D               	clrf	?_toupper+1,c
 11916  00441E  0012               	return	
 11917  004420                     l1572:
 11918  004420  C00C  F00C         	movff	toupper@c,?_toupper
 11919  004424  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 11920  004428  0012               	return		;funcret
 11921  00442A                     __end_of_toupper:
 11922                           	opt callstack 0
 11923                           
 11924 ;; *************** function _islower *****************
 11925 ;; Defined at:
 11926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;  c               2    5[COMRAM] int 
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  2    5[COMRAM] int 
 11933 ;; Registers used:
 11934 ;;		wreg, status,2, status,0
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;Total ram usage:        6 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:    2
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_toupper
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text41
 11955  00461A                     __ptext41:
 11956                           	opt callstack 0
 11957  00461A                     _islower:
 11958                           	opt callstack 23
 11959                           
 11960                           ;incstack = 0
 11961  00461A  0E9F               	movlw	159
 11962  00461C  6E08               	movwf	??_islower& (0+255),c
 11963  00461E  0EFF               	movlw	255
 11964  004620  6E09               	movwf	(??_islower+1)& (0+255),c
 11965  004622  C006  F00A         	movff	islower@c,??_islower+2
 11966  004626  C007  F00B         	movff	islower@c+1,??_islower+3
 11967  00462A  5008               	movf	??_islower,w,c
 11968  00462C  260A               	addwf	??_islower+2,f,c
 11969  00462E  5009               	movf	??_islower+1,w,c
 11970  004630  220B               	addwfc	??_islower+3,f,c
 11971  004632  500B               	movf	??_islower+3,w,c
 11972  004634  E106               	bnz	u8280
 11973  004636  0E1A               	movlw	26
 11974  004638  5C0A               	subwf	??_islower+2,w,c
 11975  00463A  B0D8               	btfsc	status,0,c
 11976  00463C  D002               	goto	u8280
 11977  00463E  0E01               	movlw	1
 11978  004640  D001               	goto	u8290
 11979  004642                     u8280:
 11980  004642  0E00               	movlw	0
 11981  004644                     u8290:
 11982  004644  6E06               	movwf	?_islower,c
 11983  004646  6A07               	clrf	?_islower+1,c
 11984  004648  0012               	return		;funcret
 11985  00464A                     __end_of_islower:
 11986                           	opt callstack 0
 11987                           
 11988 ;; *************** function _isupper *****************
 11989 ;; Defined at:
 11990 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  c               2    5[COMRAM] int 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;		None
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  2    5[COMRAM] int 
 11997 ;; Registers used:
 11998 ;;		wreg, status,2, status,0
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;Total ram usage:        6 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; Hardware stack levels required when called:    2
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_xtoa
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           	psect	text42
 12019  00464A                     __ptext42:
 12020                           	opt callstack 0
 12021  00464A                     _isupper:
 12022                           	opt callstack 24
 12023                           
 12024                           ;incstack = 0
 12025  00464A  0EBF               	movlw	191
 12026  00464C  6E08               	movwf	??_isupper& (0+255),c
 12027  00464E  0EFF               	movlw	255
 12028  004650  6E09               	movwf	(??_isupper+1)& (0+255),c
 12029  004652  C006  F00A         	movff	isupper@c,??_isupper+2
 12030  004656  C007  F00B         	movff	isupper@c+1,??_isupper+3
 12031  00465A  5008               	movf	??_isupper,w,c
 12032  00465C  260A               	addwf	??_isupper+2,f,c
 12033  00465E  5009               	movf	??_isupper+1,w,c
 12034  004660  220B               	addwfc	??_isupper+3,f,c
 12035  004662  500B               	movf	??_isupper+3,w,c
 12036  004664  E106               	bnz	u8350
 12037  004666  0E1A               	movlw	26
 12038  004668  5C0A               	subwf	??_isupper+2,w,c
 12039  00466A  B0D8               	btfsc	status,0,c
 12040  00466C  D002               	goto	u8350
 12041  00466E  0E01               	movlw	1
 12042  004670  D001               	goto	u8360
 12043  004672                     u8350:
 12044  004672  0E00               	movlw	0
 12045  004674                     u8360:
 12046  004674  6E06               	movwf	?_isupper,c
 12047  004676  6A07               	clrf	?_isupper+1,c
 12048  004678  0012               	return		;funcret
 12049  00467A                     __end_of_isupper:
 12050                           	opt callstack 0
 12051                           
 12052 ;; *************** function _isalpha *****************
 12053 ;; Defined at:
 12054 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;  c               2    5[COMRAM] int 
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  2    5[COMRAM] int 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;Total ram usage:        6 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    2
 12075 ;; This function calls:
 12076 ;;		Nothing
 12077 ;; This function is called by:
 12078 ;;		_xtoa
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text43
 12083  0045B4                     __ptext43:
 12084                           	opt callstack 0
 12085  0045B4                     _isalpha:
 12086                           	opt callstack 24
 12087                           
 12088                           ;incstack = 0
 12089  0045B4  0E9F               	movlw	159
 12090  0045B6  6E08               	movwf	??_isalpha& (0+255),c
 12091  0045B8  0EFF               	movlw	255
 12092  0045BA  6E09               	movwf	(??_isalpha+1)& (0+255),c
 12093  0045BC  0E20               	movlw	32
 12094  0045BE  1006               	iorwf	isalpha@c,w,c
 12095  0045C0  6E0A               	movwf	(??_isalpha+2)& (0+255),c
 12096  0045C2  0E00               	movlw	0
 12097  0045C4  1007               	iorwf	isalpha@c+1,w,c
 12098  0045C6  6E0B               	movwf	(??_isalpha+3)& (0+255),c
 12099  0045C8  5008               	movf	??_isalpha,w,c
 12100  0045CA  260A               	addwf	??_isalpha+2,f,c
 12101  0045CC  5009               	movf	??_isalpha+1,w,c
 12102  0045CE  220B               	addwfc	??_isalpha+3,f,c
 12103  0045D0  500B               	movf	??_isalpha+3,w,c
 12104  0045D2  E106               	bnz	u8370
 12105  0045D4  0E1A               	movlw	26
 12106  0045D6  5C0A               	subwf	??_isalpha+2,w,c
 12107  0045D8  B0D8               	btfsc	status,0,c
 12108  0045DA  D002               	goto	u8370
 12109  0045DC  0E01               	movlw	1
 12110  0045DE  D001               	goto	u8380
 12111  0045E0                     u8370:
 12112  0045E0  0E00               	movlw	0
 12113  0045E2                     u8380:
 12114  0045E2  6E06               	movwf	?_isalpha,c
 12115  0045E4  6A07               	clrf	?_isalpha+1,c
 12116  0045E6  0012               	return		;funcret
 12117  0045E8                     __end_of_isalpha:
 12118                           	opt callstack 0
 12119                           
 12120 ;; *************** function _utoa *****************
 12121 ;; Defined at:
 12122 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12125 ;;		 -> NULL(0), 
 12126 ;;  d               8   38[COMRAM] unsigned long long 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;  n               8   58[COMRAM] unsigned long long 
 12129 ;;  i               2   66[COMRAM] int 
 12130 ;;  w               2   56[COMRAM] int 
 12131 ;;  p               2   54[COMRAM] int 
 12132 ;; Return value:  Size  Location     Type
 12133 ;;                  2   36[COMRAM] int 
 12134 ;; Registers used:
 12135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12141 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12144 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12145 ;;Total ram usage:       32 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    9
 12148 ;; This function calls:
 12149 ;;		___lodiv
 12150 ;;		___lomod
 12151 ;;		_pad
 12152 ;; This function is called by:
 12153 ;;		_vfpfcnvrt
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text44
 12158  002FA2                     __ptext44:
 12159                           	opt callstack 0
 12160  002FA2                     _utoa:
 12161                           	opt callstack 18
 12162                           
 12163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12164                           
 12165                           ;incstack = 0
 12166  002FA2  0100               	movlb	0	; () banked
 12167  002FA4  AFE4               	btfss	(_prec+1)& (0+255),7,b
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12171  002FA6  9278               	bcf	_flags,1,c
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12175  002FA8  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 12176  002FAA  D005               	goto	u9650
 12177  002FAC  51E4               	movf	(_prec+1)& (0+255),w,b
 12178  002FAE  E108               	bnz	l698
 12179  002FB0  05E3               	decf	_prec& (0+255),w,b
 12180  002FB2  B0D8               	btfsc	status,0,c
 12181  002FB4  D005               	goto	l698
 12182  002FB6                     u9650:
 12183                           
 12184                           ; BSR set to: 0
 12185  002FB6  0E00               	movlw	0
 12186  002FB8  6E38               	movwf	utoa@p+1,c
 12187  002FBA  0E01               	movlw	1
 12188  002FBC  6E37               	movwf	utoa@p,c
 12189  002FBE  D004               	goto	l700
 12190  002FC0                     l698:
 12191                           
 12192                           ; BSR set to: 0
 12193  002FC0  C0E3  F037         	movff	_prec,utoa@p
 12194  002FC4  C0E4  F038         	movff	_prec+1,utoa@p+1
 12195  002FC8                     l700:
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12199  002FC8  C0E1  F039         	movff	_width,utoa@w
 12200  002FCC  C0E2  F03A         	movff	_width+1,utoa@w+1
 12201                           
 12202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12203  002FD0  C027  F03B         	movff	utoa@d,utoa@n
 12204  002FD4  C028  F03C         	movff	utoa@d+1,utoa@n+1
 12205  002FD8  C029  F03D         	movff	utoa@d+2,utoa@n+2
 12206  002FDC  C02A  F03E         	movff	utoa@d+3,utoa@n+3
 12207  002FE0  C02B  F03F         	movff	utoa@d+4,utoa@n+4
 12208  002FE4  C02C  F040         	movff	utoa@d+5,utoa@n+5
 12209  002FE8  C02D  F041         	movff	utoa@d+6,utoa@n+6
 12210  002FEC  C02E  F042         	movff	utoa@d+7,utoa@n+7
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12214  002FF0  0E00               	movlw	0
 12215  002FF2  6E44               	movwf	utoa@i+1,c
 12216  002FF4  0E1F               	movlw	31
 12217  002FF6  6E43               	movwf	utoa@i,c
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12221  002FF8  0E00               	movlw	0
 12222  002FFA  0101               	movlb	1	; () banked
 12223  002FFC  6F92               	movwf	(_dbuf+31)& (0+255),b
 12224                           
 12225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12226  002FFE  D076               	goto	l8506
 12227  003000                     l8496:
 12228                           
 12229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12230  003000  0643               	decf	utoa@i,f,c
 12231  003002  A0D8               	btfss	status,0,c
 12232  003004  0644               	decf	utoa@i+1,f,c
 12233                           
 12234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12235  003006  0E73               	movlw	low _dbuf
 12236  003008  2443               	addwf	utoa@i,w,c
 12237  00300A  6ED9               	movwf	fsr2l,c
 12238  00300C  0E01               	movlw	high _dbuf
 12239  00300E  2044               	addwfc	utoa@i+1,w,c
 12240  003010  6EDA               	movwf	fsr2h,c
 12241  003012  C03B  F006         	movff	utoa@n,___lomod@dividend
 12242  003016  C03C  F007         	movff	utoa@n+1,___lomod@dividend+1
 12243  00301A  C03D  F008         	movff	utoa@n+2,___lomod@dividend+2
 12244  00301E  C03E  F009         	movff	utoa@n+3,___lomod@dividend+3
 12245  003022  C03F  F00A         	movff	utoa@n+4,___lomod@dividend+4
 12246  003026  C040  F00B         	movff	utoa@n+5,___lomod@dividend+5
 12247  00302A  C041  F00C         	movff	utoa@n+6,___lomod@dividend+6
 12248  00302E  C042  F00D         	movff	utoa@n+7,___lomod@dividend+7
 12249  003032  0E0A               	movlw	10
 12250  003034  6E0E               	movwf	___lomod@divisor,c
 12251  003036  0E00               	movlw	0
 12252  003038  6E0F               	movwf	___lomod@divisor+1,c
 12253  00303A  0E00               	movlw	0
 12254  00303C  6E10               	movwf	___lomod@divisor+2,c
 12255  00303E  0E00               	movlw	0
 12256  003040  6E11               	movwf	___lomod@divisor+3,c
 12257  003042  0E00               	movlw	0
 12258  003044  6E12               	movwf	___lomod@divisor+4,c
 12259  003046  0E00               	movlw	0
 12260  003048  6E13               	movwf	___lomod@divisor+5,c
 12261  00304A  0E00               	movlw	0
 12262  00304C  6E14               	movwf	___lomod@divisor+6,c
 12263  00304E  0E00               	movlw	0
 12264  003050  6E15               	movwf	___lomod@divisor+7,c
 12265  003052  EC5A  F01E         	call	___lomod	;wreg free
 12266  003056  C006  F02F         	movff	?___lomod,??_utoa
 12267  00305A  C007  F030         	movff	?___lomod+1,??_utoa+1
 12268  00305E  C008  F031         	movff	?___lomod+2,??_utoa+2
 12269  003062  C009  F032         	movff	?___lomod+3,??_utoa+3
 12270  003066  C00A  F033         	movff	?___lomod+4,??_utoa+4
 12271  00306A  C00B  F034         	movff	?___lomod+5,??_utoa+5
 12272  00306E  C00C  F035         	movff	?___lomod+6,??_utoa+6
 12273  003072  C00D  F036         	movff	?___lomod+7,??_utoa+7
 12274  003076  502F               	movf	??_utoa,w,c
 12275  003078  0F30               	addlw	48
 12276  00307A  6EDF               	movwf	indf2,c
 12277                           
 12278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12279  00307C  0637               	decf	utoa@p,f,c
 12280  00307E  A0D8               	btfss	status,0,c
 12281  003080  0638               	decf	utoa@p+1,f,c
 12282                           
 12283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12284  003082  0639               	decf	utoa@w,f,c
 12285  003084  A0D8               	btfss	status,0,c
 12286  003086  063A               	decf	utoa@w+1,f,c
 12287                           
 12288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12289  003088  C03B  F006         	movff	utoa@n,___lodiv@dividend
 12290  00308C  C03C  F007         	movff	utoa@n+1,___lodiv@dividend+1
 12291  003090  C03D  F008         	movff	utoa@n+2,___lodiv@dividend+2
 12292  003094  C03E  F009         	movff	utoa@n+3,___lodiv@dividend+3
 12293  003098  C03F  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 12294  00309C  C040  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 12295  0030A0  C041  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 12296  0030A4  C042  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 12297  0030A8  0E0A               	movlw	10
 12298  0030AA  6E0E               	movwf	___lodiv@divisor,c
 12299  0030AC  0E00               	movlw	0
 12300  0030AE  6E0F               	movwf	___lodiv@divisor+1,c
 12301  0030B0  0E00               	movlw	0
 12302  0030B2  6E10               	movwf	___lodiv@divisor+2,c
 12303  0030B4  0E00               	movlw	0
 12304  0030B6  6E11               	movwf	___lodiv@divisor+3,c
 12305  0030B8  0E00               	movlw	0
 12306  0030BA  6E12               	movwf	___lodiv@divisor+4,c
 12307  0030BC  0E00               	movlw	0
 12308  0030BE  6E13               	movwf	___lodiv@divisor+5,c
 12309  0030C0  0E00               	movlw	0
 12310  0030C2  6E14               	movwf	___lodiv@divisor+6,c
 12311  0030C4  0E00               	movlw	0
 12312  0030C6  6E15               	movwf	___lodiv@divisor+7,c
 12313  0030C8  EC30  F01D         	call	___lodiv	;wreg free
 12314  0030CC  C006  F03B         	movff	?___lodiv,utoa@n
 12315  0030D0  C007  F03C         	movff	?___lodiv+1,utoa@n+1
 12316  0030D4  C008  F03D         	movff	?___lodiv+2,utoa@n+2
 12317  0030D8  C009  F03E         	movff	?___lodiv+3,utoa@n+3
 12318  0030DC  C00A  F03F         	movff	?___lodiv+4,utoa@n+4
 12319  0030E0  C00B  F040         	movff	?___lodiv+5,utoa@n+5
 12320  0030E4  C00C  F041         	movff	?___lodiv+6,utoa@n+6
 12321  0030E8  C00D  F042         	movff	?___lodiv+7,utoa@n+7
 12322  0030EC                     l8506:
 12323                           
 12324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12325  0030EC  5043               	movf	utoa@i,w,c
 12326  0030EE  1044               	iorwf	utoa@i+1,w,c
 12327  0030F0  B4D8               	btfsc	status,2,c
 12328  0030F2  D01A               	goto	u9700
 12329  0030F4  503B               	movf	utoa@n,w,c
 12330  0030F6  103C               	iorwf	utoa@n+1,w,c
 12331  0030F8  103D               	iorwf	utoa@n+2,w,c
 12332  0030FA  103E               	iorwf	utoa@n+3,w,c
 12333  0030FC  103F               	iorwf	utoa@n+4,w,c
 12334  0030FE  1040               	iorwf	utoa@n+5,w,c
 12335  003100  1041               	iorwf	utoa@n+6,w,c
 12336  003102  1042               	iorwf	utoa@n+7,w,c
 12337  003104  A4D8               	btfss	status,2,c
 12338  003106  D77C               	goto	l8496
 12339  003108  BE38               	btfsc	utoa@p+1,7,c
 12340  00310A  D005               	goto	u9680
 12341  00310C  5038               	movf	utoa@p+1,w,c
 12342  00310E  E102               	bnz	u9681
 12343  003110  0437               	decf	utoa@p,w,c
 12344  003112  B0D8               	btfsc	status,0,c
 12345  003114                     u9681:
 12346  003114  D775               	goto	l8496
 12347  003116                     u9680:
 12348  003116  BE3A               	btfsc	utoa@w+1,7,c
 12349  003118  D007               	goto	u9700
 12350  00311A  503A               	movf	utoa@w+1,w,c
 12351  00311C  E103               	bnz	u9690
 12352  00311E  0439               	decf	utoa@w,w,c
 12353  003120  A0D8               	btfss	status,0,c
 12354  003122  D002               	goto	u9700
 12355  003124                     u9690:
 12356  003124  B278               	btfsc	_flags,1,c
 12357  003126  D76C               	goto	l8496
 12358  003128                     u9700:
 12359                           
 12360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12361  003128  C025  F01A         	movff	utoa@fp,pad@fp
 12362  00312C  C026  F01B         	movff	utoa@fp+1,pad@fp+1
 12363  003130  0E73               	movlw	low _dbuf
 12364  003132  2443               	addwf	utoa@i,w,c
 12365  003134  6E1C               	movwf	pad@buf,c
 12366  003136  0E01               	movlw	high _dbuf
 12367  003138  2044               	addwfc	utoa@i+1,w,c
 12368  00313A  6E1D               	movwf	pad@buf+1,c
 12369  00313C  C039  F01E         	movff	utoa@w,pad@p
 12370  003140  C03A  F01F         	movff	utoa@w+1,pad@p+1
 12371  003144  EC52  F01F         	call	_pad	;wreg free
 12372  003148  C01A  F025         	movff	?_pad,?_utoa
 12373  00314C  C01B  F026         	movff	?_pad+1,?_utoa+1
 12374  003150  0012               	return		;funcret
 12375  003152                     __end_of_utoa:
 12376                           	opt callstack 0
 12377                           
 12378 ;; *************** function ___lomod *****************
 12379 ;; Defined at:
 12380 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;  dividend        8    5[COMRAM] unsigned long long 
 12383 ;;  divisor         8   13[COMRAM] unsigned long long 
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;  counter         1   21[COMRAM] unsigned char 
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  8    5[COMRAM] unsigned long long 
 12388 ;; Registers used:
 12389 ;;		wreg, status,2, status,0
 12390 ;; Tracked objects:
 12391 ;;		On entry : 0/0
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12395 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;Total ram usage:       17 bytes
 12400 ;; Hardware stack levels used:    1
 12401 ;; Hardware stack levels required when called:    2
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_utoa
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text45
 12410  003CB4                     __ptext45:
 12411                           	opt callstack 0
 12412  003CB4                     ___lomod:
 12413                           	opt callstack 24
 12414                           
 12415                           ;incstack = 0
 12416  003CB4  500E               	movf	___lomod@divisor,w,c
 12417  003CB6  100F               	iorwf	___lomod@divisor+1,w,c
 12418  003CB8  1010               	iorwf	___lomod@divisor+2,w,c
 12419  003CBA  1011               	iorwf	___lomod@divisor+3,w,c
 12420  003CBC  1012               	iorwf	___lomod@divisor+4,w,c
 12421  003CBE  1013               	iorwf	___lomod@divisor+5,w,c
 12422  003CC0  1014               	iorwf	___lomod@divisor+6,w,c
 12423  003CC2  1015               	iorwf	___lomod@divisor+7,w,c
 12424  003CC4  B4D8               	btfsc	status,2,c
 12425  003CC6  D03C               	goto	l1238
 12426  003CC8  0E01               	movlw	1
 12427  003CCA  6E16               	movwf	___lomod@counter,c
 12428  003CCC  D00A               	goto	l8272
 12429  003CCE                     l8270:
 12430  003CCE  90D8               	bcf	status,0,c
 12431  003CD0  360E               	rlcf	___lomod@divisor,f,c
 12432  003CD2  360F               	rlcf	___lomod@divisor+1,f,c
 12433  003CD4  3610               	rlcf	___lomod@divisor+2,f,c
 12434  003CD6  3611               	rlcf	___lomod@divisor+3,f,c
 12435  003CD8  3612               	rlcf	___lomod@divisor+4,f,c
 12436  003CDA  3613               	rlcf	___lomod@divisor+5,f,c
 12437  003CDC  3614               	rlcf	___lomod@divisor+6,f,c
 12438  003CDE  3615               	rlcf	___lomod@divisor+7,f,c
 12439  003CE0  2A16               	incf	___lomod@counter,f,c
 12440  003CE2                     l8272:
 12441  003CE2  AE15               	btfss	___lomod@divisor+7,7,c
 12442  003CE4  D7F4               	goto	l8270
 12443  003CE6                     u9160:
 12444  003CE6  500E               	movf	___lomod@divisor,w,c
 12445  003CE8  5C06               	subwf	___lomod@dividend,w,c
 12446  003CEA  500F               	movf	___lomod@divisor+1,w,c
 12447  003CEC  5807               	subwfb	___lomod@dividend+1,w,c
 12448  003CEE  5010               	movf	___lomod@divisor+2,w,c
 12449  003CF0  5808               	subwfb	___lomod@dividend+2,w,c
 12450  003CF2  5011               	movf	___lomod@divisor+3,w,c
 12451  003CF4  5809               	subwfb	___lomod@dividend+3,w,c
 12452  003CF6  5012               	movf	___lomod@divisor+4,w,c
 12453  003CF8  580A               	subwfb	___lomod@dividend+4,w,c
 12454  003CFA  5013               	movf	___lomod@divisor+5,w,c
 12455  003CFC  580B               	subwfb	___lomod@dividend+5,w,c
 12456  003CFE  5014               	movf	___lomod@divisor+6,w,c
 12457  003D00  580C               	subwfb	___lomod@dividend+6,w,c
 12458  003D02  5015               	movf	___lomod@divisor+7,w,c
 12459  003D04  580D               	subwfb	___lomod@dividend+7,w,c
 12460  003D06  A0D8               	btfss	status,0,c
 12461  003D08  D010               	goto	l8278
 12462  003D0A  500E               	movf	___lomod@divisor,w,c
 12463  003D0C  5E06               	subwf	___lomod@dividend,f,c
 12464  003D0E  500F               	movf	___lomod@divisor+1,w,c
 12465  003D10  5A07               	subwfb	___lomod@dividend+1,f,c
 12466  003D12  5010               	movf	___lomod@divisor+2,w,c
 12467  003D14  5A08               	subwfb	___lomod@dividend+2,f,c
 12468  003D16  5011               	movf	___lomod@divisor+3,w,c
 12469  003D18  5A09               	subwfb	___lomod@dividend+3,f,c
 12470  003D1A  5012               	movf	___lomod@divisor+4,w,c
 12471  003D1C  5A0A               	subwfb	___lomod@dividend+4,f,c
 12472  003D1E  5013               	movf	___lomod@divisor+5,w,c
 12473  003D20  5A0B               	subwfb	___lomod@dividend+5,f,c
 12474  003D22  5014               	movf	___lomod@divisor+6,w,c
 12475  003D24  5A0C               	subwfb	___lomod@dividend+6,f,c
 12476  003D26  5015               	movf	___lomod@divisor+7,w,c
 12477  003D28  5A0D               	subwfb	___lomod@dividend+7,f,c
 12478  003D2A                     l8278:
 12479  003D2A  90D8               	bcf	status,0,c
 12480  003D2C  3215               	rrcf	___lomod@divisor+7,f,c
 12481  003D2E  3214               	rrcf	___lomod@divisor+6,f,c
 12482  003D30  3213               	rrcf	___lomod@divisor+5,f,c
 12483  003D32  3212               	rrcf	___lomod@divisor+4,f,c
 12484  003D34  3211               	rrcf	___lomod@divisor+3,f,c
 12485  003D36  3210               	rrcf	___lomod@divisor+2,f,c
 12486  003D38  320F               	rrcf	___lomod@divisor+1,f,c
 12487  003D3A  320E               	rrcf	___lomod@divisor,f,c
 12488  003D3C  2E16               	decfsz	___lomod@counter,f,c
 12489  003D3E  D7D3               	goto	u9160
 12490  003D40                     l1238:
 12491  003D40  C006  F006         	movff	___lomod@dividend,?___lomod
 12492  003D44  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 12493  003D48  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 12494  003D4C  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 12495  003D50  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 12496  003D54  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 12497  003D58  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 12498  003D5C  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 12499  003D60  0012               	return		;funcret
 12500  003D62                     __end_of___lomod:
 12501                           	opt callstack 0
 12502                           
 12503 ;; *************** function ___lodiv *****************
 12504 ;; Defined at:
 12505 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;  dividend        8    5[COMRAM] unsigned long long 
 12508 ;;  divisor         8   13[COMRAM] unsigned long long 
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;  quotient        8   21[COMRAM] unsigned long long 
 12511 ;;  counter         1   29[COMRAM] unsigned char 
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  8    5[COMRAM] unsigned long long 
 12514 ;; Registers used:
 12515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12521 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;Total ram usage:       25 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:    2
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_utoa
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           	psect	text46
 12536  003A60                     __ptext46:
 12537                           	opt callstack 0
 12538  003A60                     ___lodiv:
 12539                           	opt callstack 24
 12540                           
 12541                           ;incstack = 0
 12542  003A60  EE20  F016         	lfsr	2,___lodiv@quotient
 12543  003A64  0E07               	movlw	7
 12544  003A66                     u9111:
 12545  003A66  6ADE               	clrf	postinc2,c
 12546  003A68  06E8               	decf	wreg,f,c
 12547  003A6A  E2FD               	bc	u9111
 12548  003A6C  500E               	movf	___lodiv@divisor,w,c
 12549  003A6E  100F               	iorwf	___lodiv@divisor+1,w,c
 12550  003A70  1010               	iorwf	___lodiv@divisor+2,w,c
 12551  003A72  1011               	iorwf	___lodiv@divisor+3,w,c
 12552  003A74  1012               	iorwf	___lodiv@divisor+4,w,c
 12553  003A76  1013               	iorwf	___lodiv@divisor+5,w,c
 12554  003A78  1014               	iorwf	___lodiv@divisor+6,w,c
 12555  003A7A  1015               	iorwf	___lodiv@divisor+7,w,c
 12556  003A7C  B4D8               	btfsc	status,2,c
 12557  003A7E  D046               	goto	l1228
 12558  003A80  0E01               	movlw	1
 12559  003A82  6E1E               	movwf	___lodiv@counter,c
 12560  003A84  D00A               	goto	l8252
 12561  003A86                     l8250:
 12562  003A86  90D8               	bcf	status,0,c
 12563  003A88  360E               	rlcf	___lodiv@divisor,f,c
 12564  003A8A  360F               	rlcf	___lodiv@divisor+1,f,c
 12565  003A8C  3610               	rlcf	___lodiv@divisor+2,f,c
 12566  003A8E  3611               	rlcf	___lodiv@divisor+3,f,c
 12567  003A90  3612               	rlcf	___lodiv@divisor+4,f,c
 12568  003A92  3613               	rlcf	___lodiv@divisor+5,f,c
 12569  003A94  3614               	rlcf	___lodiv@divisor+6,f,c
 12570  003A96  3615               	rlcf	___lodiv@divisor+7,f,c
 12571  003A98  2A1E               	incf	___lodiv@counter,f,c
 12572  003A9A                     l8252:
 12573  003A9A  AE15               	btfss	___lodiv@divisor+7,7,c
 12574  003A9C  D7F4               	goto	l8250
 12575  003A9E                     u9130:
 12576  003A9E  90D8               	bcf	status,0,c
 12577  003AA0  3616               	rlcf	___lodiv@quotient,f,c
 12578  003AA2  3617               	rlcf	___lodiv@quotient+1,f,c
 12579  003AA4  3618               	rlcf	___lodiv@quotient+2,f,c
 12580  003AA6  3619               	rlcf	___lodiv@quotient+3,f,c
 12581  003AA8  361A               	rlcf	___lodiv@quotient+4,f,c
 12582  003AAA  361B               	rlcf	___lodiv@quotient+5,f,c
 12583  003AAC  361C               	rlcf	___lodiv@quotient+6,f,c
 12584  003AAE  361D               	rlcf	___lodiv@quotient+7,f,c
 12585  003AB0  500E               	movf	___lodiv@divisor,w,c
 12586  003AB2  5C06               	subwf	___lodiv@dividend,w,c
 12587  003AB4  500F               	movf	___lodiv@divisor+1,w,c
 12588  003AB6  5807               	subwfb	___lodiv@dividend+1,w,c
 12589  003AB8  5010               	movf	___lodiv@divisor+2,w,c
 12590  003ABA  5808               	subwfb	___lodiv@dividend+2,w,c
 12591  003ABC  5011               	movf	___lodiv@divisor+3,w,c
 12592  003ABE  5809               	subwfb	___lodiv@dividend+3,w,c
 12593  003AC0  5012               	movf	___lodiv@divisor+4,w,c
 12594  003AC2  580A               	subwfb	___lodiv@dividend+4,w,c
 12595  003AC4  5013               	movf	___lodiv@divisor+5,w,c
 12596  003AC6  580B               	subwfb	___lodiv@dividend+5,w,c
 12597  003AC8  5014               	movf	___lodiv@divisor+6,w,c
 12598  003ACA  580C               	subwfb	___lodiv@dividend+6,w,c
 12599  003ACC  5015               	movf	___lodiv@divisor+7,w,c
 12600  003ACE  580D               	subwfb	___lodiv@dividend+7,w,c
 12601  003AD0  A0D8               	btfss	status,0,c
 12602  003AD2  D011               	goto	l8262
 12603  003AD4  500E               	movf	___lodiv@divisor,w,c
 12604  003AD6  5E06               	subwf	___lodiv@dividend,f,c
 12605  003AD8  500F               	movf	___lodiv@divisor+1,w,c
 12606  003ADA  5A07               	subwfb	___lodiv@dividend+1,f,c
 12607  003ADC  5010               	movf	___lodiv@divisor+2,w,c
 12608  003ADE  5A08               	subwfb	___lodiv@dividend+2,f,c
 12609  003AE0  5011               	movf	___lodiv@divisor+3,w,c
 12610  003AE2  5A09               	subwfb	___lodiv@dividend+3,f,c
 12611  003AE4  5012               	movf	___lodiv@divisor+4,w,c
 12612  003AE6  5A0A               	subwfb	___lodiv@dividend+4,f,c
 12613  003AE8  5013               	movf	___lodiv@divisor+5,w,c
 12614  003AEA  5A0B               	subwfb	___lodiv@dividend+5,f,c
 12615  003AEC  5014               	movf	___lodiv@divisor+6,w,c
 12616  003AEE  5A0C               	subwfb	___lodiv@dividend+6,f,c
 12617  003AF0  5015               	movf	___lodiv@divisor+7,w,c
 12618  003AF2  5A0D               	subwfb	___lodiv@dividend+7,f,c
 12619  003AF4  8016               	bsf	___lodiv@quotient,0,c
 12620  003AF6                     l8262:
 12621  003AF6  90D8               	bcf	status,0,c
 12622  003AF8  3215               	rrcf	___lodiv@divisor+7,f,c
 12623  003AFA  3214               	rrcf	___lodiv@divisor+6,f,c
 12624  003AFC  3213               	rrcf	___lodiv@divisor+5,f,c
 12625  003AFE  3212               	rrcf	___lodiv@divisor+4,f,c
 12626  003B00  3211               	rrcf	___lodiv@divisor+3,f,c
 12627  003B02  3210               	rrcf	___lodiv@divisor+2,f,c
 12628  003B04  320F               	rrcf	___lodiv@divisor+1,f,c
 12629  003B06  320E               	rrcf	___lodiv@divisor,f,c
 12630  003B08  2E1E               	decfsz	___lodiv@counter,f,c
 12631  003B0A  D7C9               	goto	u9130
 12632  003B0C                     l1228:
 12633  003B0C  C016  F006         	movff	___lodiv@quotient,?___lodiv
 12634  003B10  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 12635  003B14  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 12636  003B18  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 12637  003B1C  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 12638  003B20  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 12639  003B24  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 12640  003B28  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 12641  003B2C  0012               	return		;funcret
 12642  003B2E                     __end_of___lodiv:
 12643                           	opt callstack 0
 12644                           
 12645 ;; *************** function _strncmp *****************
 12646 ;; Defined at:
 12647 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 12650 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 12651 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 12652 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 12653 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 12654 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 12655 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 12656 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 12657 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 12658 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 12659 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 12660 ;;		 -> STR_4(5), STR_1(7), 
 12661 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 12662 ;;		 -> STR_92(3), STR_88(3), STR_83(3), STR_78(3), 
 12663 ;;		 -> STR_74(3), 
 12664 ;;  n               2    9[COMRAM] unsigned int 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  r               2   14[COMRAM] PTR const unsigned char 
 12667 ;;		 -> STR_92(3), STR_88(3), STR_83(3), STR_78(3), 
 12668 ;;		 -> STR_74(3), 
 12669 ;;  l               2   12[COMRAM] PTR const unsigned char 
 12670 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 12671 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 12672 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 12673 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 12674 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 12675 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 12676 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 12677 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 12678 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 12679 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 12680 ;;		 -> STR_4(5), STR_1(7), 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  2    5[COMRAM] int 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12690 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12693 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12694 ;;Total ram usage:       11 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    2
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_vfpfcnvrt
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           	psect	text47
 12705  003D62                     __ptext47:
 12706                           	opt callstack 0
 12707  003D62                     _strncmp:
 12708                           	opt callstack 25
 12709                           
 12710                           ;incstack = 0
 12711  003D62  C006  F00D         	movff	strncmp@_l,strncmp@l
 12712  003D66  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 12713  003D6A  C008  F00F         	movff	strncmp@_r,strncmp@r
 12714  003D6E  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 12715  003D72  060A               	decf	strncmp@n,f,c
 12716  003D74  A0D8               	btfss	status,0,c
 12717  003D76  060B               	decf	strncmp@n+1,f,c
 12718  003D78  280A               	incf	strncmp@n,w,c
 12719  003D7A  E10F               	bnz	l8636
 12720  003D7C  280B               	incf	strncmp@n+1,w,c
 12721  003D7E  A4D8               	btfss	status,2,c
 12722  003D80  D00C               	goto	l8636
 12723  003D82  0E00               	movlw	0
 12724  003D84  6E07               	movwf	?_strncmp+1,c
 12725  003D86  0E00               	movlw	0
 12726  003D88  6E06               	movwf	?_strncmp,c
 12727  003D8A  0012               	return	
 12728  003D8C                     l8634:
 12729  003D8C  4A0D               	infsnz	strncmp@l,f,c
 12730  003D8E  2A0E               	incf	strncmp@l+1,f,c
 12731  003D90  4A0F               	infsnz	strncmp@r,f,c
 12732  003D92  2A10               	incf	strncmp@r+1,f,c
 12733  003D94  060A               	decf	strncmp@n,f,c
 12734  003D96  A0D8               	btfss	status,0,c
 12735  003D98  060B               	decf	strncmp@n+1,f,c
 12736  003D9A                     l8636:
 12737  003D9A  C00D  FFF6         	movff	strncmp@l,tblptrl
 12738  003D9E  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 12739  003DA2                     	if	0	;tblptru may be non-zero
 12740  003DA2                     	endif
 12741  003DA2                     	if	0	;tblptru may be non-zero
 12742  003DA2                     	endif
 12743  003DA2  0008               	tblrd		*
 12744  003DA4  50F5               	movf	tablat,w,c
 12745  003DA6  0900               	iorlw	0
 12746  003DA8  B4D8               	btfsc	status,2,c
 12747  003DAA  D01D               	goto	u9990
 12748  003DAC  C00F  FFF6         	movff	strncmp@r,tblptrl
 12749  003DB0  C010  FFF7         	movff	strncmp@r+1,tblptrh
 12750  003DB4                     	if	0	;tblptru may be non-zero
 12751  003DB4                     	endif
 12752  003DB4                     	if	0	;tblptru may be non-zero
 12753  003DB4                     	endif
 12754  003DB4  0008               	tblrd		*
 12755  003DB6  50F5               	movf	tablat,w,c
 12756  003DB8  0900               	iorlw	0
 12757  003DBA  B4D8               	btfsc	status,2,c
 12758  003DBC  D014               	goto	u9990
 12759  003DBE  500A               	movf	strncmp@n,w,c
 12760  003DC0  100B               	iorwf	strncmp@n+1,w,c
 12761  003DC2  B4D8               	btfsc	status,2,c
 12762  003DC4  D010               	goto	u9990
 12763  003DC6  C00D  FFF6         	movff	strncmp@l,tblptrl
 12764  003DCA  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 12765  003DCE                     	if	0	;tblptru may be non-zero
 12766  003DCE                     	endif
 12767  003DCE                     	if	0	;tblptru may be non-zero
 12768  003DCE                     	endif
 12769  003DCE  0008               	tblrd		*
 12770  003DD0  CFF5 F00C          	movff	tablat,??_strncmp
 12771  003DD4  C00F  FFF6         	movff	strncmp@r,tblptrl
 12772  003DD8  C010  FFF7         	movff	strncmp@r+1,tblptrh
 12773  003DDC                     	if	0	;tblptru may be non-zero
 12774  003DDC                     	endif
 12775  003DDC                     	if	0	;tblptru may be non-zero
 12776  003DDC                     	endif
 12777  003DDC  0008               	tblrd		*
 12778  003DDE  50F5               	movf	tablat,w,c
 12779  003DE0  180C               	xorwf	??_strncmp,w,c
 12780  003DE2  B4D8               	btfsc	status,2,c
 12781  003DE4  D7D3               	goto	l8634
 12782  003DE6                     u9990:
 12783  003DE6  C00D  FFF6         	movff	strncmp@l,tblptrl
 12784  003DEA  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 12785  003DEE                     	if	0	;tblptru may be non-zero
 12786  003DEE                     	endif
 12787  003DEE                     	if	0	;tblptru may be non-zero
 12788  003DEE                     	endif
 12789  003DEE  0008               	tblrd		*
 12790  003DF0  CFF5 F00C          	movff	tablat,??_strncmp
 12791  003DF4  C00F  FFF6         	movff	strncmp@r,tblptrl
 12792  003DF8  C010  FFF7         	movff	strncmp@r+1,tblptrh
 12793  003DFC                     	if	0	;tblptru may be non-zero
 12794  003DFC                     	endif
 12795  003DFC                     	if	0	;tblptru may be non-zero
 12796  003DFC                     	endif
 12797  003DFC  0008               	tblrd		*
 12798  003DFE  50F5               	movf	tablat,w,c
 12799  003E00  5C0C               	subwf	??_strncmp,w,c
 12800  003E02  6E06               	movwf	?_strncmp,c
 12801  003E04  6A07               	clrf	?_strncmp+1,c
 12802  003E06  A0D8               	btfss	status,0,c
 12803  003E08  0607               	decf	?_strncmp+1,f,c
 12804  003E0A  0012               	return		;funcret
 12805  003E0C                     __end_of_strncmp:
 12806                           	opt callstack 0
 12807                           
 12808 ;; *************** function _stoa *****************
 12809 ;; Defined at:
 12810 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 12813 ;;		 -> NULL(0), 
 12814 ;;  s               2   20[COMRAM] PTR unsigned char 
 12815 ;;		 -> ?_printf(2), STR_66(16), STR_64(14), STR_62(11), 
 12816 ;;		 -> STR_60(9), STR_58(16), STR_56(13), STR_54(13), 
 12817 ;;		 -> STR_52(9), STR_50(13), STR_48(14), STR_46(10), 
 12818 ;;		 -> STR_42(9), STR_40(14), STR_38(10), STR_36(6), 
 12819 ;;		 -> STR_34(7), STR_32(2), STR_31(6), STR_20(14), 
 12820 ;;		 -> STR_18(10), STR_16(6), STR_14(7), STR_12(2), 
 12821 ;;		 -> STR_11(6), STR_9(16), STR_7(14), STR_5(15), 
 12822 ;;		 -> STR_3(2), STR_2(10), 
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;  nuls            7   23[COMRAM] unsigned char [7]
 12825 ;;  l               2   38[COMRAM] int 
 12826 ;;  p               2   36[COMRAM] int 
 12827 ;;  cp              2   34[COMRAM] PTR unsigned char 
 12828 ;;		 -> ?_printf(2), stoa@nuls(7), STR_66(16), STR_64(14), 
 12829 ;;		 -> STR_62(11), STR_60(9), STR_58(16), STR_56(13), 
 12830 ;;		 -> STR_54(13), STR_52(9), STR_50(13), STR_48(14), 
 12831 ;;		 -> STR_46(10), STR_42(9), STR_40(14), STR_38(10), 
 12832 ;;		 -> STR_36(6), STR_34(7), STR_32(2), STR_31(6), 
 12833 ;;		 -> STR_20(14), STR_18(10), STR_16(6), STR_14(7), 
 12834 ;;		 -> STR_12(2), STR_11(6), STR_9(16), STR_7(14), 
 12835 ;;		 -> STR_5(15), STR_3(2), STR_2(10), 
 12836 ;;  w               2   32[COMRAM] int 
 12837 ;;  i               2   30[COMRAM] int 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  2   18[COMRAM] int 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12848 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12850 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12851 ;;Total ram usage:       22 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    7
 12854 ;; This function calls:
 12855 ;;		_fputc
 12856 ;;		_strlen
 12857 ;; This function is called by:
 12858 ;;		_vfpfcnvrt
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862                           	psect	text48
 12863  0033DA                     __ptext48:
 12864                           	opt callstack 0
 12865  0033DA                     _stoa:
 12866                           	opt callstack 20
 12867                           
 12868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12869                           
 12870                           ;incstack = 0
 12871  0033DA  EE20  F0EA         	lfsr	2,stoa@F1144
 12872  0033DE  EE10  F018         	lfsr	1,stoa@nuls
 12873  0033E2  0E06               	movlw	6
 12874  0033E4                     u9541:
 12875  0033E4  CFDB FFE3          	movff	plusw2,plusw1
 12876  0033E8  06E8               	decf	wreg,f,c
 12877  0033EA  E2FC               	bc	u9541
 12878                           
 12879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 12880  0033EC  C015  F023         	movff	stoa@s,stoa@cp
 12881  0033F0  C016  F024         	movff	stoa@s+1,stoa@cp+1
 12882                           
 12883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 12884  0033F4  5023               	movf	stoa@cp,w,c
 12885  0033F6  1024               	iorwf	stoa@cp+1,w,c
 12886  0033F8  A4D8               	btfss	status,2,c
 12887  0033FA  D004               	goto	l8450
 12888                           
 12889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 12890  0033FC  0E18               	movlw	low stoa@nuls
 12891  0033FE  6E23               	movwf	stoa@cp,c
 12892  003400  0E00               	movlw	high stoa@nuls
 12893  003402  6E24               	movwf	stoa@cp+1,c
 12894  003404                     l8450:
 12895                           
 12896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 12897  003404  C023  F006         	movff	stoa@cp,strlen@s
 12898  003408  C024  F007         	movff	stoa@cp+1,strlen@s+1
 12899  00340C  EC7D  F022         	call	_strlen	;wreg free
 12900  003410  C006  F027         	movff	?_strlen,stoa@l
 12901  003414  C007  F028         	movff	?_strlen+1,stoa@l+1
 12902                           
 12903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 12904  003418  C0E3  F025         	movff	_prec,stoa@p
 12905  00341C  C0E4  F026         	movff	_prec+1,stoa@p+1
 12906                           
 12907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 12908  003420  BE26               	btfsc	stoa@p+1,7,c
 12909  003422  D00E               	goto	l679
 12910  003424  5027               	movf	stoa@l,w,c
 12911  003426  5C25               	subwf	stoa@p,w,c
 12912  003428  5026               	movf	stoa@p+1,w,c
 12913  00342A  0A80               	xorlw	128
 12914  00342C  6E17               	movwf	??_stoa& (0+255),c
 12915  00342E  5028               	movf	stoa@l+1,w,c
 12916  003430  0A80               	xorlw	128
 12917  003432  5817               	subwfb	??_stoa& (0+255),w,c
 12918  003434  B0D8               	btfsc	status,0,c
 12919  003436  D004               	goto	l679
 12920  003438  C025  F027         	movff	stoa@p,stoa@l
 12921  00343C  C026  F028         	movff	stoa@p+1,stoa@l+1
 12922  003440                     l679:
 12923                           
 12924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 12925  003440  C027  F025         	movff	stoa@l,stoa@p
 12926  003444  C028  F026         	movff	stoa@l+1,stoa@p+1
 12927                           
 12928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 12929  003448  C0E1  F021         	movff	_width,stoa@w
 12930  00344C  C0E2  F022         	movff	_width+1,stoa@w+1
 12931                           
 12932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 12933  003450  A078               	btfss	_flags,0,c
 12934  003452  D00D               	goto	l8464
 12935  003454  D016               	goto	u9590
 12936  003456                     l8460:
 12937                           
 12938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 12939  003456  0E00               	movlw	0
 12940  003458  6E0B               	movwf	fputc@c+1,c
 12941  00345A  0E20               	movlw	32
 12942  00345C  6E0A               	movwf	fputc@c,c
 12943  00345E  C013  F00C         	movff	stoa@fp,fputc@fp
 12944  003462  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 12945  003466  EC16  F020         	call	_fputc	;wreg free
 12946                           
 12947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 12948  00346A  4A27               	infsnz	stoa@l,f,c
 12949  00346C  2A28               	incf	stoa@l+1,f,c
 12950  00346E                     l8464:
 12951                           
 12952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 12953  00346E  5021               	movf	stoa@w,w,c
 12954  003470  5C27               	subwf	stoa@l,w,c
 12955  003472  5028               	movf	stoa@l+1,w,c
 12956  003474  0A80               	xorlw	128
 12957  003476  6E17               	movwf	??_stoa& (0+255),c
 12958  003478  5022               	movf	stoa@w+1,w,c
 12959  00347A  0A80               	xorlw	128
 12960  00347C  5817               	subwfb	??_stoa& (0+255),w,c
 12961  00347E  A0D8               	btfss	status,0,c
 12962  003480  D7EA               	goto	l8460
 12963  003482                     u9590:
 12964                           
 12965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 12966  003482  0E00               	movlw	0
 12967  003484  6E20               	movwf	stoa@i+1,c
 12968  003486  0E00               	movlw	0
 12969  003488  6E1F               	movwf	stoa@i,c
 12970                           
 12971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 12972  00348A  D01F               	goto	l8474
 12973  00348C                     l8468:
 12974                           
 12975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 12976  00348C  C023  FFF6         	movff	stoa@cp,tblptrl
 12977  003490  C024  FFF7         	movff	stoa@cp+1,tblptrh
 12978  003494  0E00               	movlw	low (__mediumconst shr (0+16))
 12979  003496  6EF8               	movwf	tblptru,c
 12980  003498  0E0F               	movlw	(high __ramtop+-1)
 12981  00349A  64F7               	cpfsgt	tblptrh,c
 12982  00349C  D003               	bra	u9607
 12983  00349E  0008               	tblrd		*
 12984  0034A0  50F5               	movf	tablat,w,c
 12985  0034A2  D005               	bra	u9600
 12986  0034A4                     u9607:
 12987  0034A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 12988  0034A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 12989  0034AC  50E7               	movf	indf1,w,c
 12990  0034AE                     u9600:
 12991  0034AE  6E17               	movwf	??_stoa& (0+255),c
 12992  0034B0  5017               	movf	??_stoa,w,c
 12993  0034B2  6E0A               	movwf	fputc@c,c
 12994  0034B4  6A0B               	clrf	fputc@c+1,c
 12995  0034B6  C013  F00C         	movff	stoa@fp,fputc@fp
 12996  0034BA  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 12997  0034BE  EC16  F020         	call	_fputc	;wreg free
 12998                           
 12999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 13000  0034C2  4A23               	infsnz	stoa@cp,f,c
 13001  0034C4  2A24               	incf	stoa@cp+1,f,c
 13002                           
 13003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 13004  0034C6  4A1F               	infsnz	stoa@i,f,c
 13005  0034C8  2A20               	incf	stoa@i+1,f,c
 13006  0034CA                     l8474:
 13007                           
 13008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 13009  0034CA  5025               	movf	stoa@p,w,c
 13010  0034CC  5C1F               	subwf	stoa@i,w,c
 13011  0034CE  5020               	movf	stoa@i+1,w,c
 13012  0034D0  0A80               	xorlw	128
 13013  0034D2  6E17               	movwf	??_stoa& (0+255),c
 13014  0034D4  5026               	movf	stoa@p+1,w,c
 13015  0034D6  0A80               	xorlw	128
 13016  0034D8  5817               	subwfb	??_stoa& (0+255),w,c
 13017  0034DA  A0D8               	btfss	status,0,c
 13018  0034DC  D7D7               	goto	l8468
 13019                           
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 13021  0034DE  B078               	btfsc	_flags,0,c
 13022  0034E0  D00D               	goto	l8482
 13023  0034E2  D016               	goto	u9630
 13024  0034E4                     l8478:
 13025                           
 13026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 13027  0034E4  0E00               	movlw	0
 13028  0034E6  6E0B               	movwf	fputc@c+1,c
 13029  0034E8  0E20               	movlw	32
 13030  0034EA  6E0A               	movwf	fputc@c,c
 13031  0034EC  C013  F00C         	movff	stoa@fp,fputc@fp
 13032  0034F0  C014  F00D         	movff	stoa@fp+1,fputc@fp+1
 13033  0034F4  EC16  F020         	call	_fputc	;wreg free
 13034                           
 13035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 13036  0034F8  4A27               	infsnz	stoa@l,f,c
 13037  0034FA  2A28               	incf	stoa@l+1,f,c
 13038  0034FC                     l8482:
 13039                           
 13040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 13041  0034FC  5021               	movf	stoa@w,w,c
 13042  0034FE  5C27               	subwf	stoa@l,w,c
 13043  003500  5028               	movf	stoa@l+1,w,c
 13044  003502  0A80               	xorlw	128
 13045  003504  6E17               	movwf	??_stoa& (0+255),c
 13046  003506  5022               	movf	stoa@w+1,w,c
 13047  003508  0A80               	xorlw	128
 13048  00350A  5817               	subwfb	??_stoa& (0+255),w,c
 13049  00350C  A0D8               	btfss	status,0,c
 13050  00350E  D7EA               	goto	l8478
 13051  003510                     u9630:
 13052                           
 13053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 13054                           
 13055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 13056  003510  C027  F013         	movff	stoa@l,?_stoa
 13057  003514  C028  F014         	movff	stoa@l+1,?_stoa+1
 13058  003518  0012               	return		;funcret
 13059  00351A                     __end_of_stoa:
 13060                           	opt callstack 0
 13061                           
 13062 ;; *************** function _dtoa *****************
 13063 ;; Defined at:
 13064 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 13067 ;;		 -> NULL(0), 
 13068 ;;  d               8   38[COMRAM] long long 
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;  n               8   62[COMRAM] long long 
 13071 ;;  i               2   70[COMRAM] int 
 13072 ;;  s               2   60[COMRAM] int 
 13073 ;;  w               2   58[COMRAM] int 
 13074 ;;  p               2   56[COMRAM] int 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  2   36[COMRAM] int 
 13077 ;; Registers used:
 13078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13084 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;Total ram usage:       36 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    9
 13091 ;; This function calls:
 13092 ;;		___aodiv
 13093 ;;		___aomod
 13094 ;;		_abs
 13095 ;;		_pad
 13096 ;; This function is called by:
 13097 ;;		_vfpfcnvrt
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           	psect	text49
 13102  002928                     __ptext49:
 13103                           	opt callstack 0
 13104  002928                     _dtoa:
 13105                           	opt callstack 18
 13106                           
 13107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13108                           
 13109                           ;incstack = 0
 13110  002928  C027  F03F         	movff	dtoa@d,dtoa@n
 13111  00292C  C028  F040         	movff	dtoa@d+1,dtoa@n+1
 13112  002930  C029  F041         	movff	dtoa@d+2,dtoa@n+2
 13113  002934  C02A  F042         	movff	dtoa@d+3,dtoa@n+3
 13114  002938  C02B  F043         	movff	dtoa@d+4,dtoa@n+4
 13115  00293C  C02C  F044         	movff	dtoa@d+5,dtoa@n+5
 13116  002940  C02D  F045         	movff	dtoa@d+6,dtoa@n+6
 13117  002944  C02E  F046         	movff	dtoa@d+7,dtoa@n+7
 13118                           
 13119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13120  002948  AE46               	btfss	dtoa@n+7,7,c
 13121  00294A  D002               	goto	u9390
 13122  00294C  0E01               	movlw	1
 13123  00294E  D001               	goto	u9400
 13124  002950                     u9390:
 13125  002950  0E00               	movlw	0
 13126  002952                     u9400:
 13127  002952  6E3D               	movwf	dtoa@s,c
 13128  002954  6A3E               	clrf	dtoa@s+1,c
 13129                           
 13130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13131  002956  503D               	movf	dtoa@s,w,c
 13132  002958  103E               	iorwf	dtoa@s+1,w,c
 13133  00295A  B4D8               	btfsc	status,2,c
 13134  00295C  D010               	goto	l8386
 13135                           
 13136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13137  00295E  1E46               	comf	dtoa@n+7,f,c
 13138  002960  1E45               	comf	dtoa@n+6,f,c
 13139  002962  1E44               	comf	dtoa@n+5,f,c
 13140  002964  1E43               	comf	dtoa@n+4,f,c
 13141  002966  1E42               	comf	dtoa@n+3,f,c
 13142  002968  1E41               	comf	dtoa@n+2,f,c
 13143  00296A  1E40               	comf	dtoa@n+1,f,c
 13144  00296C  6C3F               	negf	dtoa@n,c
 13145  00296E  0E00               	movlw	0
 13146  002970  2240               	addwfc	dtoa@n+1,f,c
 13147  002972  2241               	addwfc	dtoa@n+2,f,c
 13148  002974  2242               	addwfc	dtoa@n+3,f,c
 13149  002976  2243               	addwfc	dtoa@n+4,f,c
 13150  002978  2244               	addwfc	dtoa@n+5,f,c
 13151  00297A  2245               	addwfc	dtoa@n+6,f,c
 13152  00297C  2246               	addwfc	dtoa@n+7,f,c
 13153  00297E                     l8386:
 13154                           
 13155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13156  00297E  0100               	movlb	0	; () banked
 13157  002980  AFE4               	btfss	(_prec+1)& (0+255),7,b
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13161  002982  9278               	bcf	_flags,1,c
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13165  002984  BFE4               	btfsc	(_prec+1)& (0+255),7,b
 13166  002986  D005               	goto	u9430
 13167  002988  51E4               	movf	(_prec+1)& (0+255),w,b
 13168  00298A  E108               	bnz	l650
 13169  00298C  05E3               	decf	_prec& (0+255),w,b
 13170  00298E  B0D8               	btfsc	status,0,c
 13171  002990  D005               	goto	l650
 13172  002992                     u9430:
 13173                           
 13174                           ; BSR set to: 0
 13175  002992  0E00               	movlw	0
 13176  002994  6E3A               	movwf	dtoa@p+1,c
 13177  002996  0E01               	movlw	1
 13178  002998  6E39               	movwf	dtoa@p,c
 13179  00299A  D004               	goto	l652
 13180  00299C                     l650:
 13181                           
 13182                           ; BSR set to: 0
 13183  00299C  C0E3  F039         	movff	_prec,dtoa@p
 13184  0029A0  C0E4  F03A         	movff	_prec+1,dtoa@p+1
 13185  0029A4                     l652:
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13189  0029A4  C0E1  F03B         	movff	_width,dtoa@w
 13190  0029A8  C0E2  F03C         	movff	_width+1,dtoa@w+1
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13194  0029AC  503D               	movf	dtoa@s,w,c
 13195  0029AE  103E               	iorwf	dtoa@s+1,w,c
 13196  0029B0  A4D8               	btfss	status,2,c
 13197  0029B2  D002               	goto	u9450
 13198                           
 13199                           ; BSR set to: 0
 13200  0029B4  A478               	btfss	_flags,2,c
 13201  0029B6  D003               	goto	l8400
 13202  0029B8                     u9450:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13206  0029B8  063B               	decf	dtoa@w,f,c
 13207  0029BA  A0D8               	btfss	status,0,c
 13208  0029BC  063C               	decf	dtoa@w+1,f,c
 13209  0029BE                     l8400:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13213  0029BE  0E00               	movlw	0
 13214  0029C0  6E48               	movwf	dtoa@i+1,c
 13215  0029C2  0E1F               	movlw	31
 13216  0029C4  6E47               	movwf	dtoa@i,c
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13220  0029C6  0E00               	movlw	0
 13221  0029C8  0101               	movlb	1	; () banked
 13222  0029CA  6F92               	movwf	(_dbuf+31)& (0+255),b
 13223                           
 13224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13225  0029CC  D07C               	goto	l8414
 13226  0029CE                     l8404:
 13227                           
 13228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13229  0029CE  0647               	decf	dtoa@i,f,c
 13230  0029D0  A0D8               	btfss	status,0,c
 13231  0029D2  0648               	decf	dtoa@i+1,f,c
 13232                           
 13233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13234  0029D4  0E73               	movlw	low _dbuf
 13235  0029D6  2447               	addwf	dtoa@i,w,c
 13236  0029D8  6ED9               	movwf	fsr2l,c
 13237  0029DA  0E01               	movlw	high _dbuf
 13238  0029DC  2048               	addwfc	dtoa@i+1,w,c
 13239  0029DE  6EDA               	movwf	fsr2h,c
 13240  0029E0  C03F  F006         	movff	dtoa@n,___aomod@dividend
 13241  0029E4  C040  F007         	movff	dtoa@n+1,___aomod@dividend+1
 13242  0029E8  C041  F008         	movff	dtoa@n+2,___aomod@dividend+2
 13243  0029EC  C042  F009         	movff	dtoa@n+3,___aomod@dividend+3
 13244  0029F0  C043  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 13245  0029F4  C044  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 13246  0029F8  C045  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 13247  0029FC  C046  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 13248  002A00  0E0A               	movlw	10
 13249  002A02  6E0E               	movwf	___aomod@divisor,c
 13250  002A04  0E00               	movlw	0
 13251  002A06  6E0F               	movwf	___aomod@divisor+1,c
 13252  002A08  0E00               	movlw	0
 13253  002A0A  6E10               	movwf	___aomod@divisor+2,c
 13254  002A0C  0E00               	movlw	0
 13255  002A0E  6E11               	movwf	___aomod@divisor+3,c
 13256  002A10  0E00               	movlw	0
 13257  002A12  6E12               	movwf	___aomod@divisor+4,c
 13258  002A14  0E00               	movlw	0
 13259  002A16  6E13               	movwf	___aomod@divisor+5,c
 13260  002A18  0E00               	movlw	0
 13261  002A1A  6E14               	movwf	___aomod@divisor+6,c
 13262  002A1C  0E00               	movlw	0
 13263  002A1E  6E15               	movwf	___aomod@divisor+7,c
 13264  002A20  ECBF  F01B         	call	___aomod	;wreg free
 13265  002A24  C006  F02F         	movff	?___aomod,??_dtoa
 13266  002A28  C007  F030         	movff	?___aomod+1,??_dtoa+1
 13267  002A2C  C008  F031         	movff	?___aomod+2,??_dtoa+2
 13268  002A30  C009  F032         	movff	?___aomod+3,??_dtoa+3
 13269  002A34  C00A  F033         	movff	?___aomod+4,??_dtoa+4
 13270  002A38  C00B  F034         	movff	?___aomod+5,??_dtoa+5
 13271  002A3C  C00C  F035         	movff	?___aomod+6,??_dtoa+6
 13272  002A40  C00D  F036         	movff	?___aomod+7,??_dtoa+7
 13273  002A44  C02F  F018         	movff	??_dtoa,abs@a
 13274  002A48  C031  F019         	movff	??_dtoa+2,abs@a+1
 13275  002A4C  ECF4  F022         	call	_abs	;wreg free
 13276  002A50  5018               	movf	?_abs,w,c
 13277  002A52  0F30               	addlw	48
 13278  002A54  6EDF               	movwf	indf2,c
 13279                           
 13280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13281  002A56  0639               	decf	dtoa@p,f,c
 13282  002A58  A0D8               	btfss	status,0,c
 13283  002A5A  063A               	decf	dtoa@p+1,f,c
 13284                           
 13285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13286  002A5C  063B               	decf	dtoa@w,f,c
 13287  002A5E  A0D8               	btfss	status,0,c
 13288  002A60  063C               	decf	dtoa@w+1,f,c
 13289                           
 13290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13291  002A62  C03F  F006         	movff	dtoa@n,___aodiv@dividend
 13292  002A66  C040  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 13293  002A6A  C041  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 13294  002A6E  C042  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 13295  002A72  C043  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 13296  002A76  C044  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 13297  002A7A  C045  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 13298  002A7E  C046  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 13299  002A82  0E0A               	movlw	10
 13300  002A84  6E0E               	movwf	___aodiv@divisor,c
 13301  002A86  0E00               	movlw	0
 13302  002A88  6E0F               	movwf	___aodiv@divisor+1,c
 13303  002A8A  0E00               	movlw	0
 13304  002A8C  6E10               	movwf	___aodiv@divisor+2,c
 13305  002A8E  0E00               	movlw	0
 13306  002A90  6E11               	movwf	___aodiv@divisor+3,c
 13307  002A92  0E00               	movlw	0
 13308  002A94  6E12               	movwf	___aodiv@divisor+4,c
 13309  002A96  0E00               	movlw	0
 13310  002A98  6E13               	movwf	___aodiv@divisor+5,c
 13311  002A9A  0E00               	movlw	0
 13312  002A9C  6E14               	movwf	___aodiv@divisor+6,c
 13313  002A9E  0E00               	movlw	0
 13314  002AA0  6E15               	movwf	___aodiv@divisor+7,c
 13315  002AA2  ECA9  F018         	call	___aodiv	;wreg free
 13316  002AA6  C006  F03F         	movff	?___aodiv,dtoa@n
 13317  002AAA  C007  F040         	movff	?___aodiv+1,dtoa@n+1
 13318  002AAE  C008  F041         	movff	?___aodiv+2,dtoa@n+2
 13319  002AB2  C009  F042         	movff	?___aodiv+3,dtoa@n+3
 13320  002AB6  C00A  F043         	movff	?___aodiv+4,dtoa@n+4
 13321  002ABA  C00B  F044         	movff	?___aodiv+5,dtoa@n+5
 13322  002ABE  C00C  F045         	movff	?___aodiv+6,dtoa@n+6
 13323  002AC2  C00D  F046         	movff	?___aodiv+7,dtoa@n+7
 13324  002AC6                     l8414:
 13325                           
 13326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13327  002AC6  BE48               	btfsc	dtoa@i+1,7,c
 13328  002AC8  D01F               	goto	u9500
 13329  002ACA  5048               	movf	dtoa@i+1,w,c
 13330  002ACC  E103               	bnz	u9460
 13331  002ACE  0447               	decf	dtoa@i,w,c
 13332  002AD0  A0D8               	btfss	status,0,c
 13333  002AD2  D01A               	goto	u9500
 13334  002AD4                     u9460:
 13335  002AD4  503F               	movf	dtoa@n,w,c
 13336  002AD6  1040               	iorwf	dtoa@n+1,w,c
 13337  002AD8  1041               	iorwf	dtoa@n+2,w,c
 13338  002ADA  1042               	iorwf	dtoa@n+3,w,c
 13339  002ADC  1043               	iorwf	dtoa@n+4,w,c
 13340  002ADE  1044               	iorwf	dtoa@n+5,w,c
 13341  002AE0  1045               	iorwf	dtoa@n+6,w,c
 13342  002AE2  1046               	iorwf	dtoa@n+7,w,c
 13343  002AE4  A4D8               	btfss	status,2,c
 13344  002AE6  D773               	goto	l8404
 13345  002AE8  BE3A               	btfsc	dtoa@p+1,7,c
 13346  002AEA  D005               	goto	u9480
 13347  002AEC  503A               	movf	dtoa@p+1,w,c
 13348  002AEE  E102               	bnz	u9481
 13349  002AF0  0439               	decf	dtoa@p,w,c
 13350  002AF2  B0D8               	btfsc	status,0,c
 13351  002AF4                     u9481:
 13352  002AF4  D76C               	goto	l8404
 13353  002AF6                     u9480:
 13354  002AF6  BE3C               	btfsc	dtoa@w+1,7,c
 13355  002AF8  D007               	goto	u9500
 13356  002AFA  503C               	movf	dtoa@w+1,w,c
 13357  002AFC  E103               	bnz	u9490
 13358  002AFE  043B               	decf	dtoa@w,w,c
 13359  002B00  A0D8               	btfss	status,0,c
 13360  002B02  D002               	goto	u9500
 13361  002B04                     u9490:
 13362  002B04  B278               	btfsc	_flags,1,c
 13363  002B06  D763               	goto	l8404
 13364  002B08                     u9500:
 13365                           
 13366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13367  002B08  503D               	movf	dtoa@s,w,c
 13368  002B0A  103E               	iorwf	dtoa@s+1,w,c
 13369  002B0C  A4D8               	btfss	status,2,c
 13370  002B0E  D002               	goto	u9520
 13371  002B10  A478               	btfss	_flags,2,c
 13372  002B12  D017               	goto	l8438
 13373  002B14                     u9520:
 13374                           
 13375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13376  002B14  0647               	decf	dtoa@i,f,c
 13377  002B16  A0D8               	btfss	status,0,c
 13378  002B18  0648               	decf	dtoa@i+1,f,c
 13379                           
 13380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13381  002B1A  503D               	movf	dtoa@s,w,c
 13382  002B1C  103E               	iorwf	dtoa@s+1,w,c
 13383  002B1E  A4D8               	btfss	status,2,c
 13384  002B20  D004               	goto	l8434
 13385  002B22  0E00               	movlw	0
 13386  002B24  6E38               	movwf	_dtoa$1449+1,c
 13387  002B26  0E2B               	movlw	43
 13388  002B28  D003               	goto	L23
 13389  002B2A                     l8434:
 13390  002B2A  0E00               	movlw	0
 13391  002B2C  6E38               	movwf	_dtoa$1449+1,c
 13392  002B2E  0E2D               	movlw	45
 13393  002B30                     L23:
 13394  002B30  6E37               	movwf	_dtoa$1449,c
 13395  002B32  0E73               	movlw	low _dbuf
 13396  002B34  2447               	addwf	dtoa@i,w,c
 13397  002B36  6ED9               	movwf	fsr2l,c
 13398  002B38  0E01               	movlw	high _dbuf
 13399  002B3A  2048               	addwfc	dtoa@i+1,w,c
 13400  002B3C  6EDA               	movwf	fsr2h,c
 13401  002B3E  C037  FFDF         	movff	_dtoa$1449,indf2
 13402  002B42                     l8438:
 13403                           
 13404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13405  002B42  C025  F01A         	movff	dtoa@fp,pad@fp
 13406  002B46  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
 13407  002B4A  0E73               	movlw	low _dbuf
 13408  002B4C  2447               	addwf	dtoa@i,w,c
 13409  002B4E  6E1C               	movwf	pad@buf,c
 13410  002B50  0E01               	movlw	high _dbuf
 13411  002B52  2048               	addwfc	dtoa@i+1,w,c
 13412  002B54  6E1D               	movwf	pad@buf+1,c
 13413  002B56  C03B  F01E         	movff	dtoa@w,pad@p
 13414  002B5A  C03C  F01F         	movff	dtoa@w+1,pad@p+1
 13415  002B5E  EC52  F01F         	call	_pad	;wreg free
 13416  002B62  C01A  F025         	movff	?_pad,?_dtoa
 13417  002B66  C01B  F026         	movff	?_pad+1,?_dtoa+1
 13418  002B6A  0012               	return		;funcret
 13419  002B6C                     __end_of_dtoa:
 13420                           	opt callstack 0
 13421                           
 13422 ;; *************** function _abs *****************
 13423 ;; Defined at:
 13424 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;  a               2   23[COMRAM] int 
 13427 ;; Auto vars:     Size  Location     Type
 13428 ;;		None
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  2   23[COMRAM] int 
 13431 ;; Registers used:
 13432 ;;		wreg, status,2, status,0
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;Total ram usage:        4 bytes
 13443 ;; Hardware stack levels used:    1
 13444 ;; Hardware stack levels required when called:    2
 13445 ;; This function calls:
 13446 ;;		Nothing
 13447 ;; This function is called by:
 13448 ;;		_tirePositioning
 13449 ;;		_opErrorCorrectionDegrees
 13450 ;;		_dtoa
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text50
 13455  0045E8                     __ptext50:
 13456                           	opt callstack 0
 13457  0045E8                     _abs:
 13458                           	opt callstack 24
 13459                           
 13460                           ;incstack = 0
 13461  0045E8  BE19               	btfsc	abs@a+1,7,c
 13462  0045EA  D005               	goto	u8300
 13463  0045EC  5019               	movf	abs@a+1,w,c
 13464  0045EE  E110               	bnz	l1465
 13465  0045F0  0418               	decf	abs@a,w,c
 13466  0045F2  B0D8               	btfsc	status,0,c
 13467  0045F4  D00D               	goto	l1465
 13468  0045F6                     u8300:
 13469  0045F6  C018  F01A         	movff	abs@a,??_abs
 13470  0045FA  C019  F01B         	movff	abs@a+1,??_abs+1
 13471  0045FE  1E1A               	comf	??_abs,f,c
 13472  004600  1E1B               	comf	??_abs+1,f,c
 13473  004602  4A1A               	infsnz	??_abs,f,c
 13474  004604  2A1B               	incf	??_abs+1,f,c
 13475  004606  C01A  F018         	movff	??_abs,?_abs
 13476  00460A  C01B  F019         	movff	??_abs+1,?_abs+1
 13477  00460E  0012               	return	
 13478  004610                     l1465:
 13479  004610  C018  F018         	movff	abs@a,?_abs
 13480  004614  C019  F019         	movff	abs@a+1,?_abs+1
 13481  004618  0012               	return		;funcret
 13482  00461A                     __end_of_abs:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function ___aomod *****************
 13486 ;; Defined at:
 13487 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  dividend        8    5[COMRAM] long long 
 13490 ;;  divisor         8   13[COMRAM] long long 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  sign            1   22[COMRAM] unsigned char 
 13493 ;;  counter         1   21[COMRAM] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  8    5[COMRAM] long long 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, status,0
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13503 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13506 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13507 ;;Total ram usage:       18 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    2
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_dtoa
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text51
 13518  00377E                     __ptext51:
 13519                           	opt callstack 0
 13520  00377E                     ___aomod:
 13521                           	opt callstack 24
 13522                           
 13523                           ;incstack = 0
 13524  00377E  0E00               	movlw	0
 13525  003780  6E17               	movwf	___aomod@sign,c
 13526  003782  AE0D               	btfss	___aomod@dividend+7,7,c
 13527  003784  D012               	goto	l7882
 13528  003786  1E0D               	comf	___aomod@dividend+7,f,c
 13529  003788  1E0C               	comf	___aomod@dividend+6,f,c
 13530  00378A  1E0B               	comf	___aomod@dividend+5,f,c
 13531  00378C  1E0A               	comf	___aomod@dividend+4,f,c
 13532  00378E  1E09               	comf	___aomod@dividend+3,f,c
 13533  003790  1E08               	comf	___aomod@dividend+2,f,c
 13534  003792  1E07               	comf	___aomod@dividend+1,f,c
 13535  003794  6C06               	negf	___aomod@dividend,c
 13536  003796  0E00               	movlw	0
 13537  003798  2207               	addwfc	___aomod@dividend+1,f,c
 13538  00379A  2208               	addwfc	___aomod@dividend+2,f,c
 13539  00379C  2209               	addwfc	___aomod@dividend+3,f,c
 13540  00379E  220A               	addwfc	___aomod@dividend+4,f,c
 13541  0037A0  220B               	addwfc	___aomod@dividend+5,f,c
 13542  0037A2  220C               	addwfc	___aomod@dividend+6,f,c
 13543  0037A4  220D               	addwfc	___aomod@dividend+7,f,c
 13544  0037A6  0E01               	movlw	1
 13545  0037A8  6E17               	movwf	___aomod@sign,c
 13546  0037AA                     l7882:
 13547  0037AA  AE15               	btfss	___aomod@divisor+7,7,c
 13548  0037AC  D010               	goto	l7886
 13549  0037AE  1E15               	comf	___aomod@divisor+7,f,c
 13550  0037B0  1E14               	comf	___aomod@divisor+6,f,c
 13551  0037B2  1E13               	comf	___aomod@divisor+5,f,c
 13552  0037B4  1E12               	comf	___aomod@divisor+4,f,c
 13553  0037B6  1E11               	comf	___aomod@divisor+3,f,c
 13554  0037B8  1E10               	comf	___aomod@divisor+2,f,c
 13555  0037BA  1E0F               	comf	___aomod@divisor+1,f,c
 13556  0037BC  6C0E               	negf	___aomod@divisor,c
 13557  0037BE  0E00               	movlw	0
 13558  0037C0  220F               	addwfc	___aomod@divisor+1,f,c
 13559  0037C2  2210               	addwfc	___aomod@divisor+2,f,c
 13560  0037C4  2211               	addwfc	___aomod@divisor+3,f,c
 13561  0037C6  2212               	addwfc	___aomod@divisor+4,f,c
 13562  0037C8  2213               	addwfc	___aomod@divisor+5,f,c
 13563  0037CA  2214               	addwfc	___aomod@divisor+6,f,c
 13564  0037CC  2215               	addwfc	___aomod@divisor+7,f,c
 13565  0037CE                     l7886:
 13566  0037CE  500E               	movf	___aomod@divisor,w,c
 13567  0037D0  100F               	iorwf	___aomod@divisor+1,w,c
 13568  0037D2  1010               	iorwf	___aomod@divisor+2,w,c
 13569  0037D4  1011               	iorwf	___aomod@divisor+3,w,c
 13570  0037D6  1012               	iorwf	___aomod@divisor+4,w,c
 13571  0037D8  1013               	iorwf	___aomod@divisor+5,w,c
 13572  0037DA  1014               	iorwf	___aomod@divisor+6,w,c
 13573  0037DC  1015               	iorwf	___aomod@divisor+7,w,c
 13574  0037DE  B4D8               	btfsc	status,2,c
 13575  0037E0  D03C               	goto	l7902
 13576  0037E2  0E01               	movlw	1
 13577  0037E4  6E16               	movwf	___aomod@counter,c
 13578  0037E6  D00A               	goto	l7892
 13579  0037E8                     l7890:
 13580  0037E8  90D8               	bcf	status,0,c
 13581  0037EA  360E               	rlcf	___aomod@divisor,f,c
 13582  0037EC  360F               	rlcf	___aomod@divisor+1,f,c
 13583  0037EE  3610               	rlcf	___aomod@divisor+2,f,c
 13584  0037F0  3611               	rlcf	___aomod@divisor+3,f,c
 13585  0037F2  3612               	rlcf	___aomod@divisor+4,f,c
 13586  0037F4  3613               	rlcf	___aomod@divisor+5,f,c
 13587  0037F6  3614               	rlcf	___aomod@divisor+6,f,c
 13588  0037F8  3615               	rlcf	___aomod@divisor+7,f,c
 13589  0037FA  2A16               	incf	___aomod@counter,f,c
 13590  0037FC                     l7892:
 13591  0037FC  AE15               	btfss	___aomod@divisor+7,7,c
 13592  0037FE  D7F4               	goto	l7890
 13593  003800                     u8540:
 13594  003800  500E               	movf	___aomod@divisor,w,c
 13595  003802  5C06               	subwf	___aomod@dividend,w,c
 13596  003804  500F               	movf	___aomod@divisor+1,w,c
 13597  003806  5807               	subwfb	___aomod@dividend+1,w,c
 13598  003808  5010               	movf	___aomod@divisor+2,w,c
 13599  00380A  5808               	subwfb	___aomod@dividend+2,w,c
 13600  00380C  5011               	movf	___aomod@divisor+3,w,c
 13601  00380E  5809               	subwfb	___aomod@dividend+3,w,c
 13602  003810  5012               	movf	___aomod@divisor+4,w,c
 13603  003812  580A               	subwfb	___aomod@dividend+4,w,c
 13604  003814  5013               	movf	___aomod@divisor+5,w,c
 13605  003816  580B               	subwfb	___aomod@dividend+5,w,c
 13606  003818  5014               	movf	___aomod@divisor+6,w,c
 13607  00381A  580C               	subwfb	___aomod@dividend+6,w,c
 13608  00381C  5015               	movf	___aomod@divisor+7,w,c
 13609  00381E  580D               	subwfb	___aomod@dividend+7,w,c
 13610  003820  A0D8               	btfss	status,0,c
 13611  003822  D010               	goto	l7898
 13612  003824  500E               	movf	___aomod@divisor,w,c
 13613  003826  5E06               	subwf	___aomod@dividend,f,c
 13614  003828  500F               	movf	___aomod@divisor+1,w,c
 13615  00382A  5A07               	subwfb	___aomod@dividend+1,f,c
 13616  00382C  5010               	movf	___aomod@divisor+2,w,c
 13617  00382E  5A08               	subwfb	___aomod@dividend+2,f,c
 13618  003830  5011               	movf	___aomod@divisor+3,w,c
 13619  003832  5A09               	subwfb	___aomod@dividend+3,f,c
 13620  003834  5012               	movf	___aomod@divisor+4,w,c
 13621  003836  5A0A               	subwfb	___aomod@dividend+4,f,c
 13622  003838  5013               	movf	___aomod@divisor+5,w,c
 13623  00383A  5A0B               	subwfb	___aomod@dividend+5,f,c
 13624  00383C  5014               	movf	___aomod@divisor+6,w,c
 13625  00383E  5A0C               	subwfb	___aomod@dividend+6,f,c
 13626  003840  5015               	movf	___aomod@divisor+7,w,c
 13627  003842  5A0D               	subwfb	___aomod@dividend+7,f,c
 13628  003844                     l7898:
 13629  003844  90D8               	bcf	status,0,c
 13630  003846  3215               	rrcf	___aomod@divisor+7,f,c
 13631  003848  3214               	rrcf	___aomod@divisor+6,f,c
 13632  00384A  3213               	rrcf	___aomod@divisor+5,f,c
 13633  00384C  3212               	rrcf	___aomod@divisor+4,f,c
 13634  00384E  3211               	rrcf	___aomod@divisor+3,f,c
 13635  003850  3210               	rrcf	___aomod@divisor+2,f,c
 13636  003852  320F               	rrcf	___aomod@divisor+1,f,c
 13637  003854  320E               	rrcf	___aomod@divisor,f,c
 13638  003856  2E16               	decfsz	___aomod@counter,f,c
 13639  003858  D7D3               	goto	u8540
 13640  00385A                     l7902:
 13641  00385A  5017               	movf	___aomod@sign,w,c
 13642  00385C  B4D8               	btfsc	status,2,c
 13643  00385E  D010               	goto	l7906
 13644  003860  1E0D               	comf	___aomod@dividend+7,f,c
 13645  003862  1E0C               	comf	___aomod@dividend+6,f,c
 13646  003864  1E0B               	comf	___aomod@dividend+5,f,c
 13647  003866  1E0A               	comf	___aomod@dividend+4,f,c
 13648  003868  1E09               	comf	___aomod@dividend+3,f,c
 13649  00386A  1E08               	comf	___aomod@dividend+2,f,c
 13650  00386C  1E07               	comf	___aomod@dividend+1,f,c
 13651  00386E  6C06               	negf	___aomod@dividend,c
 13652  003870  0E00               	movlw	0
 13653  003872  2207               	addwfc	___aomod@dividend+1,f,c
 13654  003874  2208               	addwfc	___aomod@dividend+2,f,c
 13655  003876  2209               	addwfc	___aomod@dividend+3,f,c
 13656  003878  220A               	addwfc	___aomod@dividend+4,f,c
 13657  00387A  220B               	addwfc	___aomod@dividend+5,f,c
 13658  00387C  220C               	addwfc	___aomod@dividend+6,f,c
 13659  00387E  220D               	addwfc	___aomod@dividend+7,f,c
 13660  003880                     l7906:
 13661  003880  C006  F006         	movff	___aomod@dividend,?___aomod
 13662  003884  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 13663  003888  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 13664  00388C  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 13665  003890  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 13666  003894  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 13667  003898  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 13668  00389C  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 13669  0038A0  0012               	return		;funcret
 13670  0038A2                     __end_of___aomod:
 13671                           	opt callstack 0
 13672                           
 13673 ;; *************** function ___aodiv *****************
 13674 ;; Defined at:
 13675 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13676 ;; Parameters:    Size  Location     Type
 13677 ;;  dividend        8    5[COMRAM] long long 
 13678 ;;  divisor         8   13[COMRAM] long long 
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  quotient        8   23[COMRAM] long long 
 13681 ;;  sign            1   22[COMRAM] unsigned char 
 13682 ;;  counter         1   21[COMRAM] unsigned char 
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  8    5[COMRAM] long long 
 13685 ;; Registers used:
 13686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13692 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13693 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13695 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13696 ;;Total ram usage:       26 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; Hardware stack levels required when called:    2
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		_dtoa
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text52
 13707  003152                     __ptext52:
 13708                           	opt callstack 0
 13709  003152                     ___aodiv:
 13710                           	opt callstack 24
 13711                           
 13712                           ;incstack = 0
 13713  003152  0E00               	movlw	0
 13714  003154  6E17               	movwf	___aodiv@sign,c
 13715  003156  AE15               	btfss	___aodiv@divisor+7,7,c
 13716  003158  D012               	goto	l7838
 13717  00315A  1E15               	comf	___aodiv@divisor+7,f,c
 13718  00315C  1E14               	comf	___aodiv@divisor+6,f,c
 13719  00315E  1E13               	comf	___aodiv@divisor+5,f,c
 13720  003160  1E12               	comf	___aodiv@divisor+4,f,c
 13721  003162  1E11               	comf	___aodiv@divisor+3,f,c
 13722  003164  1E10               	comf	___aodiv@divisor+2,f,c
 13723  003166  1E0F               	comf	___aodiv@divisor+1,f,c
 13724  003168  6C0E               	negf	___aodiv@divisor,c
 13725  00316A  0E00               	movlw	0
 13726  00316C  220F               	addwfc	___aodiv@divisor+1,f,c
 13727  00316E  2210               	addwfc	___aodiv@divisor+2,f,c
 13728  003170  2211               	addwfc	___aodiv@divisor+3,f,c
 13729  003172  2212               	addwfc	___aodiv@divisor+4,f,c
 13730  003174  2213               	addwfc	___aodiv@divisor+5,f,c
 13731  003176  2214               	addwfc	___aodiv@divisor+6,f,c
 13732  003178  2215               	addwfc	___aodiv@divisor+7,f,c
 13733  00317A  0E01               	movlw	1
 13734  00317C  6E17               	movwf	___aodiv@sign,c
 13735  00317E                     l7838:
 13736  00317E  AE0D               	btfss	___aodiv@dividend+7,7,c
 13737  003180  D012               	goto	l7844
 13738  003182  1E0D               	comf	___aodiv@dividend+7,f,c
 13739  003184  1E0C               	comf	___aodiv@dividend+6,f,c
 13740  003186  1E0B               	comf	___aodiv@dividend+5,f,c
 13741  003188  1E0A               	comf	___aodiv@dividend+4,f,c
 13742  00318A  1E09               	comf	___aodiv@dividend+3,f,c
 13743  00318C  1E08               	comf	___aodiv@dividend+2,f,c
 13744  00318E  1E07               	comf	___aodiv@dividend+1,f,c
 13745  003190  6C06               	negf	___aodiv@dividend,c
 13746  003192  0E00               	movlw	0
 13747  003194  2207               	addwfc	___aodiv@dividend+1,f,c
 13748  003196  2208               	addwfc	___aodiv@dividend+2,f,c
 13749  003198  2209               	addwfc	___aodiv@dividend+3,f,c
 13750  00319A  220A               	addwfc	___aodiv@dividend+4,f,c
 13751  00319C  220B               	addwfc	___aodiv@dividend+5,f,c
 13752  00319E  220C               	addwfc	___aodiv@dividend+6,f,c
 13753  0031A0  220D               	addwfc	___aodiv@dividend+7,f,c
 13754  0031A2  0E01               	movlw	1
 13755  0031A4  1A17               	xorwf	___aodiv@sign,f,c
 13756  0031A6                     l7844:
 13757  0031A6  EE20  F018         	lfsr	2,___aodiv@quotient
 13758  0031AA  0E07               	movlw	7
 13759  0031AC                     u8461:
 13760  0031AC  6ADE               	clrf	postinc2,c
 13761  0031AE  06E8               	decf	wreg,f,c
 13762  0031B0  E2FD               	bc	u8461
 13763  0031B2  500E               	movf	___aodiv@divisor,w,c
 13764  0031B4  100F               	iorwf	___aodiv@divisor+1,w,c
 13765  0031B6  1010               	iorwf	___aodiv@divisor+2,w,c
 13766  0031B8  1011               	iorwf	___aodiv@divisor+3,w,c
 13767  0031BA  1012               	iorwf	___aodiv@divisor+4,w,c
 13768  0031BC  1013               	iorwf	___aodiv@divisor+5,w,c
 13769  0031BE  1014               	iorwf	___aodiv@divisor+6,w,c
 13770  0031C0  1015               	iorwf	___aodiv@divisor+7,w,c
 13771  0031C2  B4D8               	btfsc	status,2,c
 13772  0031C4  D046               	goto	l7866
 13773  0031C6  0E01               	movlw	1
 13774  0031C8  6E16               	movwf	___aodiv@counter,c
 13775  0031CA  D00A               	goto	l7852
 13776  0031CC                     l7850:
 13777  0031CC  90D8               	bcf	status,0,c
 13778  0031CE  360E               	rlcf	___aodiv@divisor,f,c
 13779  0031D0  360F               	rlcf	___aodiv@divisor+1,f,c
 13780  0031D2  3610               	rlcf	___aodiv@divisor+2,f,c
 13781  0031D4  3611               	rlcf	___aodiv@divisor+3,f,c
 13782  0031D6  3612               	rlcf	___aodiv@divisor+4,f,c
 13783  0031D8  3613               	rlcf	___aodiv@divisor+5,f,c
 13784  0031DA  3614               	rlcf	___aodiv@divisor+6,f,c
 13785  0031DC  3615               	rlcf	___aodiv@divisor+7,f,c
 13786  0031DE  2A16               	incf	___aodiv@counter,f,c
 13787  0031E0                     l7852:
 13788  0031E0  AE15               	btfss	___aodiv@divisor+7,7,c
 13789  0031E2  D7F4               	goto	l7850
 13790  0031E4                     u8480:
 13791  0031E4  90D8               	bcf	status,0,c
 13792  0031E6  3618               	rlcf	___aodiv@quotient,f,c
 13793  0031E8  3619               	rlcf	___aodiv@quotient+1,f,c
 13794  0031EA  361A               	rlcf	___aodiv@quotient+2,f,c
 13795  0031EC  361B               	rlcf	___aodiv@quotient+3,f,c
 13796  0031EE  361C               	rlcf	___aodiv@quotient+4,f,c
 13797  0031F0  361D               	rlcf	___aodiv@quotient+5,f,c
 13798  0031F2  361E               	rlcf	___aodiv@quotient+6,f,c
 13799  0031F4  361F               	rlcf	___aodiv@quotient+7,f,c
 13800  0031F6  500E               	movf	___aodiv@divisor,w,c
 13801  0031F8  5C06               	subwf	___aodiv@dividend,w,c
 13802  0031FA  500F               	movf	___aodiv@divisor+1,w,c
 13803  0031FC  5807               	subwfb	___aodiv@dividend+1,w,c
 13804  0031FE  5010               	movf	___aodiv@divisor+2,w,c
 13805  003200  5808               	subwfb	___aodiv@dividend+2,w,c
 13806  003202  5011               	movf	___aodiv@divisor+3,w,c
 13807  003204  5809               	subwfb	___aodiv@dividend+3,w,c
 13808  003206  5012               	movf	___aodiv@divisor+4,w,c
 13809  003208  580A               	subwfb	___aodiv@dividend+4,w,c
 13810  00320A  5013               	movf	___aodiv@divisor+5,w,c
 13811  00320C  580B               	subwfb	___aodiv@dividend+5,w,c
 13812  00320E  5014               	movf	___aodiv@divisor+6,w,c
 13813  003210  580C               	subwfb	___aodiv@dividend+6,w,c
 13814  003212  5015               	movf	___aodiv@divisor+7,w,c
 13815  003214  580D               	subwfb	___aodiv@dividend+7,w,c
 13816  003216  A0D8               	btfss	status,0,c
 13817  003218  D011               	goto	l7862
 13818  00321A  500E               	movf	___aodiv@divisor,w,c
 13819  00321C  5E06               	subwf	___aodiv@dividend,f,c
 13820  00321E  500F               	movf	___aodiv@divisor+1,w,c
 13821  003220  5A07               	subwfb	___aodiv@dividend+1,f,c
 13822  003222  5010               	movf	___aodiv@divisor+2,w,c
 13823  003224  5A08               	subwfb	___aodiv@dividend+2,f,c
 13824  003226  5011               	movf	___aodiv@divisor+3,w,c
 13825  003228  5A09               	subwfb	___aodiv@dividend+3,f,c
 13826  00322A  5012               	movf	___aodiv@divisor+4,w,c
 13827  00322C  5A0A               	subwfb	___aodiv@dividend+4,f,c
 13828  00322E  5013               	movf	___aodiv@divisor+5,w,c
 13829  003230  5A0B               	subwfb	___aodiv@dividend+5,f,c
 13830  003232  5014               	movf	___aodiv@divisor+6,w,c
 13831  003234  5A0C               	subwfb	___aodiv@dividend+6,f,c
 13832  003236  5015               	movf	___aodiv@divisor+7,w,c
 13833  003238  5A0D               	subwfb	___aodiv@dividend+7,f,c
 13834  00323A  8018               	bsf	___aodiv@quotient,0,c
 13835  00323C                     l7862:
 13836  00323C  90D8               	bcf	status,0,c
 13837  00323E  3215               	rrcf	___aodiv@divisor+7,f,c
 13838  003240  3214               	rrcf	___aodiv@divisor+6,f,c
 13839  003242  3213               	rrcf	___aodiv@divisor+5,f,c
 13840  003244  3212               	rrcf	___aodiv@divisor+4,f,c
 13841  003246  3211               	rrcf	___aodiv@divisor+3,f,c
 13842  003248  3210               	rrcf	___aodiv@divisor+2,f,c
 13843  00324A  320F               	rrcf	___aodiv@divisor+1,f,c
 13844  00324C  320E               	rrcf	___aodiv@divisor,f,c
 13845  00324E  2E16               	decfsz	___aodiv@counter,f,c
 13846  003250  D7C9               	goto	u8480
 13847  003252                     l7866:
 13848  003252  5017               	movf	___aodiv@sign,w,c
 13849  003254  B4D8               	btfsc	status,2,c
 13850  003256  D010               	goto	l7870
 13851  003258  1E1F               	comf	___aodiv@quotient+7,f,c
 13852  00325A  1E1E               	comf	___aodiv@quotient+6,f,c
 13853  00325C  1E1D               	comf	___aodiv@quotient+5,f,c
 13854  00325E  1E1C               	comf	___aodiv@quotient+4,f,c
 13855  003260  1E1B               	comf	___aodiv@quotient+3,f,c
 13856  003262  1E1A               	comf	___aodiv@quotient+2,f,c
 13857  003264  1E19               	comf	___aodiv@quotient+1,f,c
 13858  003266  6C18               	negf	___aodiv@quotient,c
 13859  003268  0E00               	movlw	0
 13860  00326A  2219               	addwfc	___aodiv@quotient+1,f,c
 13861  00326C  221A               	addwfc	___aodiv@quotient+2,f,c
 13862  00326E  221B               	addwfc	___aodiv@quotient+3,f,c
 13863  003270  221C               	addwfc	___aodiv@quotient+4,f,c
 13864  003272  221D               	addwfc	___aodiv@quotient+5,f,c
 13865  003274  221E               	addwfc	___aodiv@quotient+6,f,c
 13866  003276  221F               	addwfc	___aodiv@quotient+7,f,c
 13867  003278                     l7870:
 13868  003278  C018  F006         	movff	___aodiv@quotient,?___aodiv
 13869  00327C  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 13870  003280  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 13871  003284  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 13872  003288  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 13873  00328C  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 13874  003290  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 13875  003294  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 13876  003298  0012               	return		;funcret
 13877  00329A                     __end_of___aodiv:
 13878                           	opt callstack 0
 13879                           
 13880 ;; *************** function _ctoa *****************
 13881 ;; Defined at:
 13882 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 13885 ;;		 -> NULL(0), 
 13886 ;;  c               1   38[COMRAM] unsigned char 
 13887 ;; Auto vars:     Size  Location     Type
 13888 ;;  w               2   39[COMRAM] int 
 13889 ;;  l               2    0        int 
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  2   36[COMRAM] int 
 13892 ;; Registers used:
 13893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13899 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13902 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;Total ram usage:        5 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    9
 13906 ;; This function calls:
 13907 ;;		_pad
 13908 ;; This function is called by:
 13909 ;;		_vfpfcnvrt
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text53
 13914  004390                     __ptext53:
 13915                           	opt callstack 0
 13916  004390                     _ctoa:
 13917                           	opt callstack 18
 13918                           
 13919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13920                           
 13921                           ;incstack = 0
 13922  004390  0100               	movlb	0	; () banked
 13923  004392  51E1               	movf	_width& (0+255),w,b
 13924  004394  11E2               	iorwf	(_width+1)& (0+255),w,b
 13925  004396  A4D8               	btfss	status,2,c
 13926  004398  D005               	goto	l8370
 13927                           
 13928                           ; BSR set to: 0
 13929  00439A  C0E1  F028         	movff	_width,ctoa@w
 13930  00439E  C0E2  F029         	movff	_width+1,ctoa@w+1
 13931  0043A2  D006               	goto	l8372
 13932  0043A4                     l8370:
 13933                           
 13934                           ; BSR set to: 0
 13935  0043A4  0EFF               	movlw	255
 13936  0043A6  25E1               	addwf	_width& (0+255),w,b
 13937  0043A8  6E28               	movwf	ctoa@w,c
 13938  0043AA  0EFF               	movlw	255
 13939  0043AC  21E2               	addwfc	(_width+1)& (0+255),w,b
 13940  0043AE  6E29               	movwf	ctoa@w+1,c
 13941  0043B0                     l8372:
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13945  0043B0  C027  F173         	movff	ctoa@c,_dbuf
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13949  0043B4  0E00               	movlw	0
 13950  0043B6  0101               	movlb	1	; () banked
 13951  0043B8  6F74               	movwf	(_dbuf+1)& (0+255),b
 13952                           
 13953                           ; BSR set to: 1
 13954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13955  0043BA  C025  F01A         	movff	ctoa@fp,pad@fp
 13956  0043BE  C026  F01B         	movff	ctoa@fp+1,pad@fp+1
 13957  0043C2  0E73               	movlw	low _dbuf
 13958  0043C4  6E1C               	movwf	pad@buf,c
 13959  0043C6  0E01               	movlw	high _dbuf
 13960  0043C8  6E1D               	movwf	pad@buf+1,c
 13961  0043CA  C028  F01E         	movff	ctoa@w,pad@p
 13962  0043CE  C029  F01F         	movff	ctoa@w+1,pad@p+1
 13963  0043D2  EC52  F01F         	call	_pad	;wreg free
 13964  0043D6  C01A  F025         	movff	?_pad,?_ctoa
 13965  0043DA  C01B  F026         	movff	?_pad+1,?_ctoa+1
 13966  0043DE  0012               	return		;funcret
 13967  0043E0                     __end_of_ctoa:
 13968                           	opt callstack 0
 13969                           
 13970 ;; *************** function _pad *****************
 13971 ;; Defined at:
 13972 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 13975 ;;		 -> NULL(0), 
 13976 ;;  buf             2   27[COMRAM] PTR unsigned char 
 13977 ;;		 -> dbuf(32), 
 13978 ;;  p               2   29[COMRAM] int 
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  w               2   34[COMRAM] int 
 13981 ;;  i               2   32[COMRAM] int 
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  2   25[COMRAM] int 
 13984 ;; Registers used:
 13985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13991 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;Total ram usage:       11 bytes
 13996 ;; Hardware stack levels used:    1
 13997 ;; Hardware stack levels required when called:    8
 13998 ;; This function calls:
 13999 ;;		_fputc
 14000 ;;		_fputs
 14001 ;;		_strlen
 14002 ;; This function is called by:
 14003 ;;		_ctoa
 14004 ;;		_dtoa
 14005 ;;		_utoa
 14006 ;;		_xtoa
 14007 ;; This function uses a non-reentrant model
 14008 ;;
 14009                           
 14010                           	psect	text54
 14011  003EA4                     __ptext54:
 14012                           	opt callstack 0
 14013  003EA4                     _pad:
 14014                           	opt callstack 18
 14015                           
 14016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14017                           
 14018                           ;incstack = 0
 14019  003EA4  A078               	btfss	_flags,0,c
 14020  003EA6  D00A               	goto	l7784
 14021                           
 14022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14023  003EA8  C01C  F013         	movff	pad@buf,fputs@s
 14024  003EAC  C01D  F014         	movff	pad@buf+1,fputs@s+1
 14025  003EB0  C01A  F015         	movff	pad@fp,fputs@fp
 14026  003EB4  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 14027  003EB8  ECBE  F022         	call	_fputs	;wreg free
 14028  003EBC                     l7784:
 14029                           
 14030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14031  003EBC  BE1F               	btfsc	pad@p+1,7,c
 14032  003EBE  D005               	goto	l7788
 14033  003EC0  C01E  F023         	movff	pad@p,pad@w
 14034  003EC4  C01F  F024         	movff	pad@p+1,pad@w+1
 14035  003EC8  D004               	goto	l632
 14036  003ECA                     l7788:
 14037  003ECA  0E00               	movlw	0
 14038  003ECC  6E24               	movwf	pad@w+1,c
 14039  003ECE  0E00               	movlw	0
 14040  003ED0  6E23               	movwf	pad@w,c
 14041  003ED2                     l632:
 14042                           
 14043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14044  003ED2  0E00               	movlw	0
 14045  003ED4  6E22               	movwf	pad@i+1,c
 14046  003ED6  0E00               	movlw	0
 14047  003ED8  6E21               	movwf	pad@i,c
 14048                           
 14049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14050  003EDA  D00C               	goto	l7794
 14051  003EDC                     l7790:
 14052                           
 14053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14054  003EDC  0E00               	movlw	0
 14055  003EDE  6E0B               	movwf	fputc@c+1,c
 14056  003EE0  0E20               	movlw	32
 14057  003EE2  6E0A               	movwf	fputc@c,c
 14058  003EE4  C01A  F00C         	movff	pad@fp,fputc@fp
 14059  003EE8  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
 14060  003EEC  EC16  F020         	call	_fputc	;wreg free
 14061                           
 14062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14063  003EF0  4A21               	infsnz	pad@i,f,c
 14064  003EF2  2A22               	incf	pad@i+1,f,c
 14065  003EF4                     l7794:
 14066                           
 14067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14068  003EF4  5023               	movf	pad@w,w,c
 14069  003EF6  5C21               	subwf	pad@i,w,c
 14070  003EF8  5022               	movf	pad@i+1,w,c
 14071  003EFA  0A80               	xorlw	128
 14072  003EFC  6E20               	movwf	??_pad& (0+255),c
 14073  003EFE  5024               	movf	pad@w+1,w,c
 14074  003F00  0A80               	xorlw	128
 14075  003F02  5820               	subwfb	??_pad& (0+255),w,c
 14076  003F04  A0D8               	btfss	status,0,c
 14077  003F06  D7EA               	goto	l7790
 14078                           
 14079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14080  003F08  B078               	btfsc	_flags,0,c
 14081  003F0A  D00A               	goto	l7798
 14082                           
 14083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14084  003F0C  C01C  F013         	movff	pad@buf,fputs@s
 14085  003F10  C01D  F014         	movff	pad@buf+1,fputs@s+1
 14086  003F14  C01A  F015         	movff	pad@fp,fputs@fp
 14087  003F18  C01B  F016         	movff	pad@fp+1,fputs@fp+1
 14088  003F1C  ECBE  F022         	call	_fputs	;wreg free
 14089  003F20                     l7798:
 14090                           
 14091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14092  003F20  C01C  F006         	movff	pad@buf,strlen@s
 14093  003F24  C01D  F007         	movff	pad@buf+1,strlen@s+1
 14094  003F28  EC7D  F022         	call	_strlen	;wreg free
 14095  003F2C  5023               	movf	pad@w,w,c
 14096  003F2E  2406               	addwf	?_strlen,w,c
 14097  003F30  6E1A               	movwf	?_pad,c
 14098  003F32  5024               	movf	pad@w+1,w,c
 14099  003F34  2007               	addwfc	?_strlen+1,w,c
 14100  003F36  6E1B               	movwf	?_pad+1,c
 14101  003F38  0012               	return		;funcret
 14102  003F3A                     __end_of_pad:
 14103                           	opt callstack 0
 14104                           
 14105 ;; *************** function _strlen *****************
 14106 ;; Defined at:
 14107 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14110 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_66(16), 
 14111 ;;		 -> STR_64(14), STR_62(11), STR_60(9), STR_58(16), 
 14112 ;;		 -> STR_56(13), STR_54(13), STR_52(9), STR_50(13), 
 14113 ;;		 -> STR_48(14), STR_46(10), STR_42(9), STR_40(14), 
 14114 ;;		 -> STR_38(10), STR_36(6), STR_34(7), STR_32(2), 
 14115 ;;		 -> STR_31(6), STR_20(14), STR_18(10), STR_16(6), 
 14116 ;;		 -> STR_14(7), STR_12(2), STR_11(6), STR_9(16), 
 14117 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14120 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_66(16), 
 14121 ;;		 -> STR_64(14), STR_62(11), STR_60(9), STR_58(16), 
 14122 ;;		 -> STR_56(13), STR_54(13), STR_52(9), STR_50(13), 
 14123 ;;		 -> STR_48(14), STR_46(10), STR_42(9), STR_40(14), 
 14124 ;;		 -> STR_38(10), STR_36(6), STR_34(7), STR_32(2), 
 14125 ;;		 -> STR_31(6), STR_20(14), STR_18(10), STR_16(6), 
 14126 ;;		 -> STR_14(7), STR_12(2), STR_11(6), STR_9(16), 
 14127 ;;		 -> STR_7(14), STR_5(15), STR_3(2), STR_2(10), 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  2    5[COMRAM] unsigned int 
 14130 ;; Registers used:
 14131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14140 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14141 ;;Total ram usage:        4 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:    2
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_pad
 14148 ;;		_stoa
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text55
 14153  0044FA                     __ptext55:
 14154                           	opt callstack 0
 14155  0044FA                     _strlen:
 14156                           	opt callstack 23
 14157                           
 14158                           ;incstack = 0
 14159  0044FA  C006  F008         	movff	strlen@s,strlen@a
 14160  0044FE  C007  F009         	movff	strlen@s+1,strlen@a+1
 14161  004502  D002               	goto	l7766
 14162  004504                     l7764:
 14163  004504  4A06               	infsnz	strlen@s,f,c
 14164  004506  2A07               	incf	strlen@s+1,f,c
 14165  004508                     l7766:
 14166  004508  C006  FFF6         	movff	strlen@s,tblptrl
 14167  00450C  C007  FFF7         	movff	strlen@s+1,tblptrh
 14168  004510  0E00               	movlw	low (__mediumconst shr (0+16))
 14169  004512  6EF8               	movwf	tblptru,c
 14170  004514  0E0F               	movlw	(high __ramtop+-1)
 14171  004516  64F7               	cpfsgt	tblptrh,c
 14172  004518  D003               	bra	u8267
 14173  00451A  0008               	tblrd		*
 14174  00451C  50F5               	movf	tablat,w,c
 14175  00451E  D005               	bra	u8260
 14176  004520                     u8267:
 14177  004520  CFF6 FFE1          	movff	tblptrl,fsr1l
 14178  004524  CFF7 FFE2          	movff	tblptrh,fsr1h
 14179  004528  50E7               	movf	indf1,w,c
 14180  00452A                     u8260:
 14181  00452A  0900               	iorlw	0
 14182  00452C  A4D8               	btfss	status,2,c
 14183  00452E  D7EA               	goto	l7764
 14184  004530  5008               	movf	strlen@a,w,c
 14185  004532  5C06               	subwf	strlen@s,w,c
 14186  004534  6E06               	movwf	?_strlen,c
 14187  004536  5009               	movf	strlen@a+1,w,c
 14188  004538  5807               	subwfb	strlen@s+1,w,c
 14189  00453A  6E07               	movwf	?_strlen+1,c
 14190  00453C  0012               	return		;funcret
 14191  00453E                     __end_of_strlen:
 14192                           	opt callstack 0
 14193                           
 14194 ;; *************** function _fputs *****************
 14195 ;; Defined at:
 14196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  s               2   18[COMRAM] PTR const unsigned char 
 14199 ;;		 -> dbuf(32), 
 14200 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
 14201 ;;		 -> NULL(0), 
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;  i               2   23[COMRAM] int 
 14204 ;;  c               1   22[COMRAM] unsigned char 
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  2   18[COMRAM] int 
 14207 ;; Registers used:
 14208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14218 ;;Total ram usage:        7 bytes
 14219 ;; Hardware stack levels used:    1
 14220 ;; Hardware stack levels required when called:    7
 14221 ;; This function calls:
 14222 ;;		_fputc
 14223 ;; This function is called by:
 14224 ;;		_pad
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text56
 14229  00457C                     __ptext56:
 14230                           	opt callstack 0
 14231  00457C                     _fputs:
 14232                           	opt callstack 18
 14233                           
 14234                           ;incstack = 0
 14235  00457C  0E00               	movlw	0
 14236  00457E  6E19               	movwf	fputs@i+1,c
 14237  004580  0E00               	movlw	0
 14238  004582  6E18               	movwf	fputs@i,c
 14239  004584  D00B               	goto	l7760
 14240  004586                     l7756:
 14241  004586  C017  F00A         	movff	fputs@c,fputc@c
 14242  00458A  6A0B               	clrf	fputc@c+1,c
 14243  00458C  C015  F00C         	movff	fputs@fp,fputc@fp
 14244  004590  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
 14245  004594  EC16  F020         	call	_fputc	;wreg free
 14246  004598  4A18               	infsnz	fputs@i,f,c
 14247  00459A  2A19               	incf	fputs@i+1,f,c
 14248  00459C                     l7760:
 14249  00459C  5018               	movf	fputs@i,w,c
 14250  00459E  2413               	addwf	fputs@s,w,c
 14251  0045A0  6ED9               	movwf	fsr2l,c
 14252  0045A2  5019               	movf	fputs@i+1,w,c
 14253  0045A4  2014               	addwfc	fputs@s+1,w,c
 14254  0045A6  6EDA               	movwf	fsr2h,c
 14255  0045A8  50DF               	movf	indf2,w,c
 14256  0045AA  6E17               	movwf	fputs@c,c
 14257  0045AC  5017               	movf	fputs@c,w,c
 14258  0045AE  B4D8               	btfsc	status,2,c
 14259  0045B0  0012               	return	
 14260  0045B2  D7E9               	goto	l7756
 14261  0045B4                     __end_of_fputs:
 14262                           	opt callstack 0
 14263                           
 14264 ;; *************** function _fputc *****************
 14265 ;; Defined at:
 14266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;  c               2    9[COMRAM] int 
 14269 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 14270 ;;		 -> NULL(0), 
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  2    9[COMRAM] int 
 14275 ;; Registers used:
 14276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14286 ;;Total ram usage:        9 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    6
 14289 ;; This function calls:
 14290 ;;		_putch
 14291 ;; This function is called by:
 14292 ;;		_pad
 14293 ;;		_stoa
 14294 ;;		_vfpfcnvrt
 14295 ;;		_fputs
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           	psect	text57
 14300  00402C                     __ptext57:
 14301                           	opt callstack 0
 14302  00402C                     _fputc:
 14303                           	opt callstack 18
 14304                           
 14305                           ;incstack = 0
 14306  00402C  500C               	movf	fputc@fp,w,c
 14307  00402E  100D               	iorwf	fputc@fp+1,w,c
 14308  004030  B4D8               	btfsc	status,2,c
 14309  004032  D004               	goto	u8220
 14310  004034  500C               	movf	fputc@fp,w,c
 14311  004036  100D               	iorwf	fputc@fp+1,w,c
 14312  004038  A4D8               	btfss	status,2,c
 14313  00403A  D004               	goto	l7746
 14314  00403C                     u8220:
 14315  00403C  500A               	movf	fputc@c,w,c
 14316  00403E  EC49  F024         	call	_putch
 14317  004042  0012               	return	
 14318  004044                     l7746:
 14319  004044  EE20 F004          	lfsr	2,4
 14320  004048  500C               	movf	fputc@fp,w,c
 14321  00404A  26D9               	addwf	fsr2l,f,c
 14322  00404C  500D               	movf	fputc@fp+1,w,c
 14323  00404E  22DA               	addwfc	fsr2h,f,c
 14324  004050  50DE               	movf	postinc2,w,c
 14325  004052  10DE               	iorwf	postinc2,w,c
 14326  004054  B4D8               	btfsc	status,2,c
 14327  004056  D016               	goto	u8240
 14328  004058  EE20 F004          	lfsr	2,4
 14329  00405C  500C               	movf	fputc@fp,w,c
 14330  00405E  26D9               	addwf	fsr2l,f,c
 14331  004060  500D               	movf	fputc@fp+1,w,c
 14332  004062  22DA               	addwfc	fsr2h,f,c
 14333  004064  EE10 F002          	lfsr	1,2
 14334  004068  500C               	movf	fputc@fp,w,c
 14335  00406A  26E1               	addwf	fsr1l,f,c
 14336  00406C  500D               	movf	fputc@fp+1,w,c
 14337  00406E  22E2               	addwfc	fsr1h,f,c
 14338  004070  50DE               	movf	postinc2,w,c
 14339  004072  5CE6               	subwf	postinc1,w,c
 14340  004074  50E6               	movf	postinc1,w,c
 14341  004076  0A80               	xorlw	128
 14342  004078  6E12               	movwf	(??_fputc+4)& (0+255),c
 14343  00407A  50DE               	movf	postinc2,w,c
 14344  00407C  0A80               	xorlw	128
 14345  00407E  5812               	subwfb	(??_fputc+4)& (0+255),w,c
 14346  004080  B0D8               	btfsc	status,0,c
 14347  004082  0012               	return	
 14348  004084                     u8240:
 14349  004084  EE20 F002          	lfsr	2,2
 14350  004088  500C               	movf	fputc@fp,w,c
 14351  00408A  26D9               	addwf	fsr2l,f,c
 14352  00408C  500D               	movf	fputc@fp+1,w,c
 14353  00408E  22DA               	addwfc	fsr2h,f,c
 14354  004090  2ADE               	incf	postinc2,f,c
 14355  004092  0E00               	movlw	0
 14356  004094  22DD               	addwfc	postdec2,f,c
 14357  004096  0012               	return		;funcret
 14358  004098                     __end_of_fputc:
 14359                           	opt callstack 0
 14360                           
 14361 ;; *************** function _putch *****************
 14362 ;; Defined at:
 14363 ;;		line 102 in file "lcd.c"
 14364 ;; Parameters:    Size  Location     Type
 14365 ;;  data            1    wreg     unsigned char 
 14366 ;; Auto vars:     Size  Location     Type
 14367 ;;  data            1    8[COMRAM] unsigned char 
 14368 ;; Return value:  Size  Location     Type
 14369 ;;                  1    wreg      void 
 14370 ;; Registers used:
 14371 ;;		wreg, status,2, status,0, cstack
 14372 ;; Tracked objects:
 14373 ;;		On entry : 0/0
 14374 ;;		On exit  : 0/0
 14375 ;;		Unchanged: 0/0
 14376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14381 ;;Total ram usage:        1 bytes
 14382 ;; Hardware stack levels used:    1
 14383 ;; Hardware stack levels required when called:    5
 14384 ;; This function calls:
 14385 ;;		_send_byte
 14386 ;; This function is called by:
 14387 ;;		_fputc
 14388 ;; This function uses a non-reentrant model
 14389 ;;
 14390                           
 14391                           	psect	text58
 14392  004892                     __ptext58:
 14393                           	opt callstack 0
 14394  004892                     _putch:
 14395                           	opt callstack 18
 14396                           
 14397                           ;incstack = 0
 14398                           ;putch@data stored from wreg
 14399  004892  6E09               	movwf	putch@data,c
 14400                           
 14401                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 14402  004894  848C               	bsf	3980,2,c	;volatile
 14403                           
 14404                           ;lcd.c: 104:     send_byte((unsigned char)data);
 14405  004896  5009               	movf	putch@data,w,c
 14406  004898  EC40  F024         	call	_send_byte
 14407  00489C  0012               	return		;funcret
 14408  00489E                     __end_of_putch:
 14409                           	opt callstack 0
 14410                           
 14411 ;; *************** function _atoi *****************
 14412 ;; Defined at:
 14413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14414 ;; Parameters:    Size  Location     Type
 14415 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14416 ;;		 -> STR_71(3), STR_70(9), STR_69(9), STR_68(10), 
 14417 ;;		 -> STR_67(10), STR_65(3), STR_63(3), STR_61(3), 
 14418 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 14419 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 14420 ;;		 -> STR_44(15), STR_43(15), STR_41(3), STR_39(3), 
 14421 ;;		 -> STR_37(5), STR_35(5), STR_33(5), STR_30(9), 
 14422 ;;		 -> STR_29(13), STR_28(16), STR_27(12), STR_26(11), 
 14423 ;;		 -> STR_25(10), STR_24(6), STR_23(6), STR_22(3), 
 14424 ;;		 -> STR_21(4), STR_19(3), STR_17(5), STR_15(5), 
 14425 ;;		 -> STR_13(5), STR_10(9), STR_8(3), STR_6(3), 
 14426 ;;		 -> STR_4(5), STR_1(7), 
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;  n               2   25[COMRAM] int 
 14429 ;;  neg             2   18[COMRAM] int 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  2   12[COMRAM] int 
 14432 ;; Registers used:
 14433 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14440 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14441 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14442 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14443 ;;Total ram usage:       15 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:    3
 14446 ;; This function calls:
 14447 ;;		___wmul
 14448 ;;		_isdigit
 14449 ;;		_isspace
 14450 ;; This function is called by:
 14451 ;;		_vfpfcnvrt
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text59
 14456  00351A                     __ptext59:
 14457                           	opt callstack 0
 14458  00351A                     _atoi:
 14459                           	opt callstack 24
 14460                           
 14461                           ;incstack = 0
 14462  00351A  0E00               	movlw	0
 14463  00351C  6E1B               	movwf	atoi@n+1,c
 14464  00351E  0E00               	movlw	0
 14465  003520  6E1A               	movwf	atoi@n,c
 14466  003522  0E00               	movlw	0
 14467  003524  6E14               	movwf	atoi@neg+1,c
 14468  003526  0E00               	movlw	0
 14469  003528  6E13               	movwf	atoi@neg,c
 14470  00352A  D002               	goto	l8590
 14471  00352C                     l8588:
 14472  00352C  4A0D               	infsnz	atoi@s,f,c
 14473  00352E  2A0E               	incf	atoi@s+1,f,c
 14474  003530                     l8590:
 14475  003530  0E01               	movlw	1
 14476  003532  6E19               	movwf	_atoi$1977,c
 14477  003534  C00D  FFF6         	movff	atoi@s,tblptrl
 14478  003538  C00E  FFF7         	movff	atoi@s+1,tblptrh
 14479  00353C                     	if	0	;tblptru may be non-zero
 14480  00353C                     	endif
 14481  00353C                     	if	0	;tblptru may be non-zero
 14482  00353C                     	endif
 14483  00353C  0008               	tblrd		*
 14484  00353E  50F5               	movf	tablat,w,c
 14485  003540  0A20               	xorlw	32
 14486  003542  B4D8               	btfsc	status,2,c
 14487  003544  D018               	goto	l8598
 14488  003546  0EF7               	movlw	247
 14489  003548  6E0F               	movwf	??_atoi& (0+255),c
 14490  00354A  0EFF               	movlw	255
 14491  00354C  6E10               	movwf	(??_atoi+1)& (0+255),c
 14492  00354E  C00D  FFF6         	movff	atoi@s,tblptrl
 14493  003552  C00E  FFF7         	movff	atoi@s+1,tblptrh
 14494  003556                     	if	0	;tblptru may be non-zero
 14495  003556                     	endif
 14496  003556                     	if	0	;tblptru may be non-zero
 14497  003556                     	endif
 14498  003556  0008               	tblrd		*
 14499  003558  50F5               	movf	tablat,w,c
 14500  00355A  6E11               	movwf	(??_atoi+2)& (0+255),c
 14501  00355C  6A12               	clrf	(??_atoi+3)& (0+255),c
 14502  00355E  500F               	movf	??_atoi,w,c
 14503  003560  2611               	addwf	??_atoi+2,f,c
 14504  003562  5010               	movf	??_atoi+1,w,c
 14505  003564  2212               	addwfc	??_atoi+3,f,c
 14506  003566  5012               	movf	??_atoi+3,w,c
 14507  003568  E104               	bnz	u9890
 14508  00356A  0E05               	movlw	5
 14509  00356C  5C11               	subwf	??_atoi+2,w,c
 14510  00356E  A0D8               	btfss	status,0,c
 14511  003570  D002               	goto	l8598
 14512  003572                     u9890:
 14513  003572  0E00               	movlw	0
 14514  003574  6E19               	movwf	_atoi$1977,c
 14515  003576                     l8598:
 14516  003576  C019  F015         	movff	_atoi$1977,_atoi$1976
 14517  00357A  6A16               	clrf	_atoi$1976+1,c
 14518  00357C  5015               	movf	_atoi$1976,w,c
 14519  00357E  1016               	iorwf	_atoi$1976+1,w,c
 14520  003580  B4D8               	btfsc	status,2,c
 14521  003582  D008               	goto	l8608
 14522  003584  D7D3               	goto	l8588
 14523  003586                     l8604:
 14524  003586  0E00               	movlw	0
 14525  003588  6E14               	movwf	atoi@neg+1,c
 14526  00358A  0E01               	movlw	1
 14527  00358C  6E13               	movwf	atoi@neg,c
 14528  00358E                     l8606:
 14529  00358E  4A0D               	infsnz	atoi@s,f,c
 14530  003590  2A0E               	incf	atoi@s+1,f,c
 14531  003592  D02E               	goto	l8614
 14532  003594                     l8608:
 14533  003594  C00D  FFF6         	movff	atoi@s,tblptrl
 14534  003598  C00E  FFF7         	movff	atoi@s+1,tblptrh
 14535  00359C                     	if	0	;tblptru may be non-zero
 14536  00359C                     	endif
 14537  00359C                     	if	0	;tblptru may be non-zero
 14538  00359C                     	endif
 14539  00359C  0008               	tblrd		*
 14540  00359E  50F5               	movf	tablat,w,c
 14541  0035A0  6E0F               	movwf	??_atoi& (0+255),c
 14542  0035A2  6A10               	clrf	(??_atoi+1)& (0+255),c
 14543                           
 14544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14545                           ; Switch size 1, requested type "simple"
 14546                           ; Number of cases is 1, Range of values is 0 to 0
 14547                           ; switch strategies available:
 14548                           ; Name         Instructions Cycles
 14549                           ; simple_byte            4     3 (average)
 14550                           ;	Chosen strategy is simple_byte
 14551  0035A4  5010               	movf	??_atoi+1,w,c
 14552  0035A6  0A00               	xorlw	0	; case 0
 14553  0035A8  A4D8               	btfss	status,2,c
 14554  0035AA  D022               	goto	l8614
 14555                           
 14556                           ; Switch size 1, requested type "simple"
 14557                           ; Number of cases is 2, Range of values is 43 to 45
 14558                           ; switch strategies available:
 14559                           ; Name         Instructions Cycles
 14560                           ; simple_byte            7     4 (average)
 14561                           ;	Chosen strategy is simple_byte
 14562  0035AC  500F               	movf	??_atoi,w,c
 14563  0035AE  0A2B               	xorlw	43	; case 43
 14564  0035B0  B4D8               	btfsc	status,2,c
 14565  0035B2  D7ED               	goto	l8606
 14566  0035B4  0A06               	xorlw	6	; case 45
 14567  0035B6  B4D8               	btfsc	status,2,c
 14568  0035B8  D7E6               	goto	l8604
 14569  0035BA  D01A               	goto	l8614
 14570  0035BC                     l8610:
 14571  0035BC  C01A  F006         	movff	atoi@n,___wmul@multiplier
 14572  0035C0  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 14573  0035C4  0E00               	movlw	0
 14574  0035C6  6E09               	movwf	___wmul@multiplicand+1,c
 14575  0035C8  0E0A               	movlw	10
 14576  0035CA  6E08               	movwf	___wmul@multiplicand,c
 14577  0035CC  ECA8  F023         	call	___wmul	;wreg free
 14578  0035D0  C00D  FFF6         	movff	atoi@s,tblptrl
 14579  0035D4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 14580  0035D8                     	if	0	;tblptru may be non-zero
 14581  0035D8                     	endif
 14582  0035D8                     	if	0	;tblptru may be non-zero
 14583  0035D8                     	endif
 14584  0035D8  0008               	tblrd		*
 14585  0035DA  50F5               	movf	tablat,w,c
 14586  0035DC  5E06               	subwf	?___wmul,f,c
 14587  0035DE  0E00               	movlw	0
 14588  0035E0  5A07               	subwfb	?___wmul+1,f,c
 14589  0035E2  0E30               	movlw	48
 14590  0035E4  2406               	addwf	?___wmul,w,c
 14591  0035E6  6E1A               	movwf	atoi@n,c
 14592  0035E8  0E00               	movlw	0
 14593  0035EA  2007               	addwfc	?___wmul+1,w,c
 14594  0035EC  6E1B               	movwf	atoi@n+1,c
 14595  0035EE  D7CF               	goto	l8606
 14596  0035F0                     l8614:
 14597  0035F0  0ED0               	movlw	208
 14598  0035F2  6E0F               	movwf	??_atoi& (0+255),c
 14599  0035F4  0EFF               	movlw	255
 14600  0035F6  6E10               	movwf	(??_atoi+1)& (0+255),c
 14601  0035F8  C00D  FFF6         	movff	atoi@s,tblptrl
 14602  0035FC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 14603  003600                     	if	0	;tblptru may be non-zero
 14604  003600                     	endif
 14605  003600                     	if	0	;tblptru may be non-zero
 14606  003600                     	endif
 14607  003600  0008               	tblrd		*
 14608  003602  50F5               	movf	tablat,w,c
 14609  003604  6E11               	movwf	(??_atoi+2)& (0+255),c
 14610  003606  6A12               	clrf	(??_atoi+3)& (0+255),c
 14611  003608  500F               	movf	??_atoi,w,c
 14612  00360A  2611               	addwf	??_atoi+2,f,c
 14613  00360C  5010               	movf	??_atoi+1,w,c
 14614  00360E  2212               	addwfc	??_atoi+3,f,c
 14615  003610  5012               	movf	??_atoi+3,w,c
 14616  003612  E106               	bnz	u9910
 14617  003614  0E0A               	movlw	10
 14618  003616  5C11               	subwf	??_atoi+2,w,c
 14619  003618  B0D8               	btfsc	status,0,c
 14620  00361A  D002               	goto	u9910
 14621  00361C  0E01               	movlw	1
 14622  00361E  D001               	goto	u9920
 14623  003620                     u9910:
 14624  003620  0E00               	movlw	0
 14625  003622                     u9920:
 14626  003622  6E17               	movwf	_atoi$1978,c
 14627  003624  6A18               	clrf	_atoi$1978+1,c
 14628  003626  5017               	movf	_atoi$1978,w,c
 14629  003628  1018               	iorwf	_atoi$1978+1,w,c
 14630  00362A  A4D8               	btfss	status,2,c
 14631  00362C  D7C7               	goto	l8610
 14632  00362E  5013               	movf	atoi@neg,w,c
 14633  003630  1014               	iorwf	atoi@neg+1,w,c
 14634  003632  A4D8               	btfss	status,2,c
 14635  003634  D00D               	goto	l1496
 14636  003636  C01A  F00F         	movff	atoi@n,??_atoi
 14637  00363A  C01B  F010         	movff	atoi@n+1,??_atoi+1
 14638  00363E  1E0F               	comf	??_atoi,f,c
 14639  003640  1E10               	comf	??_atoi+1,f,c
 14640  003642  4A0F               	infsnz	??_atoi,f,c
 14641  003644  2A10               	incf	??_atoi+1,f,c
 14642  003646  C00F  F00D         	movff	??_atoi,?_atoi
 14643  00364A  C010  F00E         	movff	??_atoi+1,?_atoi+1
 14644  00364E  0012               	return	
 14645  003650                     l1496:
 14646  003650  C01A  F00D         	movff	atoi@n,?_atoi
 14647  003654  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 14648  003658  0012               	return		;funcret
 14649  00365A                     __end_of_atoi:
 14650                           	opt callstack 0
 14651                           
 14652 ;; *************** function _isspace *****************
 14653 ;; Defined at:
 14654 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;  c               2    5[COMRAM] int 
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;		None
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  2    5[COMRAM] int 
 14661 ;; Registers used:
 14662 ;;		wreg, status,2, status,0
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14671 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;Total ram usage:        7 bytes
 14673 ;; Hardware stack levels used:    1
 14674 ;; Hardware stack levels required when called:    2
 14675 ;; This function calls:
 14676 ;;		Nothing
 14677 ;; This function is called by:
 14678 ;;		_atoi
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text60
 14683  00453E                     __ptext60:
 14684                           	opt callstack 0
 14685  00453E                     _isspace:
 14686                           	opt callstack 24
 14687                           
 14688                           ;incstack = 0
 14689  00453E  0E01               	movlw	1
 14690  004540  6E0C               	movwf	_isspace$2003,c
 14691  004542  0E20               	movlw	32
 14692  004544  1806               	xorwf	isspace@c,w,c
 14693  004546  1007               	iorwf	isspace@c+1,w,c
 14694  004548  B4D8               	btfsc	status,2,c
 14695  00454A  D014               	goto	l8336
 14696  00454C  0EF7               	movlw	247
 14697  00454E  6E08               	movwf	??_isspace& (0+255),c
 14698  004550  0EFF               	movlw	255
 14699  004552  6E09               	movwf	(??_isspace+1)& (0+255),c
 14700  004554  C006  F00A         	movff	isspace@c,??_isspace+2
 14701  004558  C007  F00B         	movff	isspace@c+1,??_isspace+3
 14702  00455C  5008               	movf	??_isspace,w,c
 14703  00455E  260A               	addwf	??_isspace+2,f,c
 14704  004560  5009               	movf	??_isspace+1,w,c
 14705  004562  220B               	addwfc	??_isspace+3,f,c
 14706  004564  500B               	movf	??_isspace+3,w,c
 14707  004566  E104               	bnz	u9290
 14708  004568  0E05               	movlw	5
 14709  00456A  5C0A               	subwf	??_isspace+2,w,c
 14710  00456C  A0D8               	btfss	status,0,c
 14711  00456E  D002               	goto	l8336
 14712  004570                     u9290:
 14713  004570  0E00               	movlw	0
 14714  004572  6E0C               	movwf	_isspace$2003,c
 14715  004574                     l8336:
 14716  004574  C00C  F006         	movff	_isspace$2003,?_isspace
 14717  004578  6A07               	clrf	?_isspace+1,c
 14718  00457A  0012               	return		;funcret
 14719  00457C                     __end_of_isspace:
 14720                           	opt callstack 0
 14721                           
 14722 ;; *************** function _isdigit *****************
 14723 ;; Defined at:
 14724 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;  c               2    5[COMRAM] int 
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  2    5[COMRAM] int 
 14731 ;; Registers used:
 14732 ;;		wreg, status,2, status,0
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14742 ;;Total ram usage:        6 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    2
 14745 ;; This function calls:
 14746 ;;		Nothing
 14747 ;; This function is called by:
 14748 ;;		_vfpfcnvrt
 14749 ;;		_atoi
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text61
 14754  00467A                     __ptext61:
 14755                           	opt callstack 0
 14756  00467A                     _isdigit:
 14757                           	opt callstack 25
 14758                           
 14759                           ;incstack = 0
 14760  00467A  0ED0               	movlw	208
 14761  00467C  6E08               	movwf	??_isdigit& (0+255),c
 14762  00467E  0EFF               	movlw	255
 14763  004680  6E09               	movwf	(??_isdigit+1)& (0+255),c
 14764  004682  C006  F00A         	movff	isdigit@c,??_isdigit+2
 14765  004686  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 14766  00468A  5008               	movf	??_isdigit,w,c
 14767  00468C  260A               	addwf	??_isdigit+2,f,c
 14768  00468E  5009               	movf	??_isdigit+1,w,c
 14769  004690  220B               	addwfc	??_isdigit+3,f,c
 14770  004692  500B               	movf	??_isdigit+3,w,c
 14771  004694  E106               	bnz	u8420
 14772  004696  0E0A               	movlw	10
 14773  004698  5C0A               	subwf	??_isdigit+2,w,c
 14774  00469A  B0D8               	btfsc	status,0,c
 14775  00469C  D002               	goto	u8420
 14776  00469E  0E01               	movlw	1
 14777  0046A0  D001               	goto	u8430
 14778  0046A2                     u8420:
 14779  0046A2  0E00               	movlw	0
 14780  0046A4                     u8430:
 14781  0046A4  6E06               	movwf	?_isdigit,c
 14782  0046A6  6A07               	clrf	?_isdigit+1,c
 14783  0046A8  0012               	return		;funcret
 14784  0046AA                     __end_of_isdigit:
 14785                           	opt callstack 0
 14786                           
 14787 ;; *************** function ___wmul *****************
 14788 ;; Defined at:
 14789 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  multiplier      2    5[COMRAM] unsigned int 
 14792 ;;  multiplicand    2    7[COMRAM] unsigned int 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  product         2    9[COMRAM] unsigned int 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  2    5[COMRAM] unsigned int 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0, prodl, prodh
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14808 ;;Total ram usage:        6 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    2
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_doDisplayLog
 14815 ;;		_doOperation
 14816 ;;		_atoi
 14817 ;;		_saveLogs
 14818 ;;		_readLogs
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           	psect	text62
 14823  004750                     __ptext62:
 14824                           	opt callstack 0
 14825  004750                     ___wmul:
 14826                           	opt callstack 24
 14827                           
 14828                           ;incstack = 0
 14829  004750  5006               	movf	___wmul@multiplier,w,c
 14830  004752  0208               	mulwf	___wmul@multiplicand,c
 14831  004754  CFF3 F00A          	movff	prodl,___wmul@product
 14832  004758  CFF4 F00B          	movff	prodh,___wmul@product+1
 14833  00475C  5006               	movf	___wmul@multiplier,w,c
 14834  00475E  0209               	mulwf	___wmul@multiplicand+1,c
 14835  004760  50F3               	movf	prodl,w,c
 14836  004762  260B               	addwf	___wmul@product+1,f,c
 14837  004764  5007               	movf	___wmul@multiplier+1,w,c
 14838  004766  0208               	mulwf	___wmul@multiplicand,c
 14839  004768  50F3               	movf	prodl,w,c
 14840  00476A  260B               	addwf	___wmul@product+1,f,c
 14841  00476C  C00A  F006         	movff	___wmul@product,?___wmul
 14842  004770  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 14843  004774  0012               	return		;funcret
 14844  004776                     __end_of___wmul:
 14845                           	opt callstack 0
 14846                           
 14847 ;; *************** function _lcdInst *****************
 14848 ;; Defined at:
 14849 ;;		line 64 in file "lcd.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  data            1    wreg     unsigned char 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;  data            1    8[COMRAM] unsigned char 
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  1    wreg      void 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0, cstack
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14867 ;;Total ram usage:        1 bytes
 14868 ;; Hardware stack levels used:    1
 14869 ;; Hardware stack levels required when called:    5
 14870 ;; This function calls:
 14871 ;;		_send_byte
 14872 ;; This function is called by:
 14873 ;;		_doDisplayLog
 14874 ;;		_tirePositioning
 14875 ;;		_doOperation
 14876 ;;		_main
 14877 ;;		_initLCD
 14878 ;;		_mainEEPROM
 14879 ;;		_lcd_shift_cursor
 14880 ;;		_lcd_shift_display
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           	psect	text63
 14885  00489E                     __ptext63:
 14886                           	opt callstack 0
 14887  00489E                     _lcdInst:
 14888                           	opt callstack 23
 14889                           
 14890                           ;incstack = 0
 14891                           ;lcdInst@data stored from wreg
 14892  00489E  6E09               	movwf	lcdInst@data,c
 14893                           
 14894                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 14895  0048A0  948C               	bcf	3980,2,c	;volatile
 14896                           
 14897                           ;lcd.c: 66:     send_byte(data);
 14898  0048A2  5009               	movf	lcdInst@data,w,c
 14899  0048A4  EC40  F024         	call	_send_byte
 14900  0048A8  0012               	return		;funcret
 14901  0048AA                     __end_of_lcdInst:
 14902                           	opt callstack 0
 14903                           
 14904 ;; *************** function _send_byte *****************
 14905 ;; Defined at:
 14906 ;;		line 55 in file "lcd.c"
 14907 ;; Parameters:    Size  Location     Type
 14908 ;;  data            1    wreg     unsigned char 
 14909 ;; Auto vars:     Size  Location     Type
 14910 ;;  data            1    7[COMRAM] unsigned char 
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  1    wreg      void 
 14913 ;; Registers used:
 14914 ;;		wreg, status,2, status,0, cstack
 14915 ;; Tracked objects:
 14916 ;;		On entry : 0/0
 14917 ;;		On exit  : 0/0
 14918 ;;		Unchanged: 0/0
 14919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14924 ;;Total ram usage:        1 bytes
 14925 ;; Hardware stack levels used:    1
 14926 ;; Hardware stack levels required when called:    4
 14927 ;; This function calls:
 14928 ;;		_send_nibble
 14929 ;; This function is called by:
 14930 ;;		_lcdInst
 14931 ;;		_initLCD
 14932 ;;		_putch
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text64
 14937  004880                     __ptext64:
 14938                           	opt callstack 0
 14939  004880                     _send_byte:
 14940                           	opt callstack 24
 14941                           
 14942                           ;incstack = 0
 14943                           ;send_byte@data stored from wreg
 14944  004880  6E08               	movwf	send_byte@data,c
 14945                           
 14946                           ;lcd.c: 57:     send_nibble(data >> 4);
 14947  004882  3808               	swapf	send_byte@data,w,c
 14948  004884  0B0F               	andlw	15
 14949  004886  EC2C  F024         	call	_send_nibble
 14950                           
 14951                           ;lcd.c: 60:     send_nibble(data);
 14952  00488A  5008               	movf	send_byte@data,w,c
 14953  00488C  EC2C  F024         	call	_send_nibble
 14954  004890  0012               	return		;funcret
 14955  004892                     __end_of_send_byte:
 14956                           	opt callstack 0
 14957                           
 14958 ;; *************** function _send_nibble *****************
 14959 ;; Defined at:
 14960 ;;		line 44 in file "lcd.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  data            1    wreg     unsigned char 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  data            1    6[COMRAM] unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, status,0, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14978 ;;Total ram usage:        1 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    3
 14981 ;; This function calls:
 14982 ;;		_pulse_e
 14983 ;; This function is called by:
 14984 ;;		_send_byte
 14985 ;;		_initLCD
 14986 ;; This function uses a non-reentrant model
 14987 ;;
 14988                           
 14989                           	psect	text65
 14990  004858                     __ptext65:
 14991                           	opt callstack 0
 14992  004858                     _send_nibble:
 14993                           	opt callstack 25
 14994                           
 14995                           ;incstack = 0
 14996                           ;send_nibble@data stored from wreg
 14997  004858  6E07               	movwf	send_nibble@data,c
 14998                           
 14999                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 15000  00485A  508C               	movf	3980,w,c	;volatile
 15001  00485C  0B0F               	andlw	15
 15002  00485E  6E8C               	movwf	3980,c	;volatile
 15003                           
 15004                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 15005  004860  3807               	swapf	send_nibble@data,w,c
 15006  004862  0BF0               	andlw	240
 15007  004864  108C               	iorwf	3980,w,c	;volatile
 15008  004866  6E8C               	movwf	3980,c	;volatile
 15009                           
 15010                           ;lcd.c: 48:     pulse_e();
 15011  004868  EC6B  F023         	call	_pulse_e	;wreg free
 15012  00486C  0012               	return		;funcret
 15013  00486E                     __end_of_send_nibble:
 15014                           	opt callstack 0
 15015                           
 15016 ;; *************** function _pulse_e *****************
 15017 ;; Defined at:
 15018 ;;		line 28 in file "lcd.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;  interruptSta    1    5[COMRAM] unsigned char 
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;Total ram usage:        1 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    2
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		_send_nibble
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text66
 15047  0046D6                     __ptext66:
 15048                           	opt callstack 0
 15049  0046D6                     _pulse_e:
 15050                           	opt callstack 25
 15051                           
 15052                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 15053                           
 15054                           ;incstack = 0
 15055  0046D6  0E00               	movlw	0
 15056  0046D8  BEF2               	btfsc	4082,7,c	;volatile
 15057  0046DA  0E01               	movlw	1
 15058  0046DC  6E06               	movwf	pulse_e@interruptState,c
 15059                           
 15060                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 15061  0046DE  9EF2               	bcf	4082,7,c	;volatile
 15062                           
 15063                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 15064  0046E0  868C               	bsf	3980,3,c	;volatile
 15065                           
 15066                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 15067  0046E2  0E14               	movlw	20
 15068  0046E4                     u12237:
 15069  0046E4  2EE8               	decfsz	wreg,f,c
 15070  0046E6  D7FE               	bra	u12237
 15071  0046E8  D000               	nop2	
 15072                           
 15073                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 15074  0046EA  968C               	bcf	3980,3,c	;volatile
 15075                           
 15076                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 15077  0046EC  0E53               	movlw	83
 15078  0046EE                     u12247:
 15079  0046EE  2EE8               	decfsz	wreg,f,c
 15080  0046F0  D7FE               	bra	u12247
 15081  0046F2  F000               	nop	
 15082                           
 15083                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 15084  0046F4  B006               	btfsc	pulse_e@interruptState,0,c
 15085  0046F6  D002               	bra	u8205
 15086  0046F8  9EF2               	bcf	4082,7,c	;volatile
 15087  0046FA  D001               	bra	u8206
 15088  0046FC                     u8205:
 15089  0046FC  8EF2               	bsf	4082,7,c	;volatile
 15090  0046FE                     u8206:
 15091  0046FE  0012               	return		;funcret
 15092  004700                     __end_of_pulse_e:
 15093                           	opt callstack 0
 15094                           
 15095 ;; *************** function ___llmod *****************
 15096 ;; Defined at:
 15097 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;  dividend        4    5[COMRAM] unsigned long 
 15100 ;;  divisor         4    9[COMRAM] unsigned long 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;  counter         1   13[COMRAM] unsigned char 
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  4    5[COMRAM] unsigned long 
 15105 ;; Registers used:
 15106 ;;		wreg, status,2, status,0
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15115 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15116 ;;Total ram usage:        9 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; Hardware stack levels required when called:    2
 15119 ;; This function calls:
 15120 ;;		Nothing
 15121 ;; This function is called by:
 15122 ;;		_main
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text67
 15127  004168                     __ptext67:
 15128                           	opt callstack 0
 15129  004168                     ___llmod:
 15130                           	opt callstack 28
 15131                           
 15132                           ;incstack = 0
 15133  004168  500A               	movf	___llmod@divisor,w,c
 15134  00416A  100B               	iorwf	___llmod@divisor+1,w,c
 15135  00416C  100C               	iorwf	___llmod@divisor+2,w,c
 15136  00416E  100D               	iorwf	___llmod@divisor+3,w,c
 15137  004170  B4D8               	btfsc	status,2,c
 15138  004172  D024               	goto	l1210
 15139  004174  0E01               	movlw	1
 15140  004176  6E0E               	movwf	___llmod@counter,c
 15141  004178  D006               	goto	l10010
 15142  00417A                     l10008:
 15143  00417A  90D8               	bcf	status,0,c
 15144  00417C  360A               	rlcf	___llmod@divisor,f,c
 15145  00417E  360B               	rlcf	___llmod@divisor+1,f,c
 15146  004180  360C               	rlcf	___llmod@divisor+2,f,c
 15147  004182  360D               	rlcf	___llmod@divisor+3,f,c
 15148  004184  2A0E               	incf	___llmod@counter,f,c
 15149  004186                     l10010:
 15150  004186  AE0D               	btfss	___llmod@divisor+3,7,c
 15151  004188  D7F8               	goto	l10008
 15152  00418A                     u11520:
 15153  00418A  500A               	movf	___llmod@divisor,w,c
 15154  00418C  5C06               	subwf	___llmod@dividend,w,c
 15155  00418E  500B               	movf	___llmod@divisor+1,w,c
 15156  004190  5807               	subwfb	___llmod@dividend+1,w,c
 15157  004192  500C               	movf	___llmod@divisor+2,w,c
 15158  004194  5808               	subwfb	___llmod@dividend+2,w,c
 15159  004196  500D               	movf	___llmod@divisor+3,w,c
 15160  004198  5809               	subwfb	___llmod@dividend+3,w,c
 15161  00419A  A0D8               	btfss	status,0,c
 15162  00419C  D008               	goto	l10016
 15163  00419E  500A               	movf	___llmod@divisor,w,c
 15164  0041A0  5E06               	subwf	___llmod@dividend,f,c
 15165  0041A2  500B               	movf	___llmod@divisor+1,w,c
 15166  0041A4  5A07               	subwfb	___llmod@dividend+1,f,c
 15167  0041A6  500C               	movf	___llmod@divisor+2,w,c
 15168  0041A8  5A08               	subwfb	___llmod@dividend+2,f,c
 15169  0041AA  500D               	movf	___llmod@divisor+3,w,c
 15170  0041AC  5A09               	subwfb	___llmod@dividend+3,f,c
 15171  0041AE                     l10016:
 15172  0041AE  90D8               	bcf	status,0,c
 15173  0041B0  320D               	rrcf	___llmod@divisor+3,f,c
 15174  0041B2  320C               	rrcf	___llmod@divisor+2,f,c
 15175  0041B4  320B               	rrcf	___llmod@divisor+1,f,c
 15176  0041B6  320A               	rrcf	___llmod@divisor,f,c
 15177  0041B8  2E0E               	decfsz	___llmod@counter,f,c
 15178  0041BA  D7E7               	goto	u11520
 15179  0041BC                     l1210:
 15180  0041BC  C006  F006         	movff	___llmod@dividend,?___llmod
 15181  0041C0  C007  F007         	movff	___llmod@dividend+1,?___llmod+1
 15182  0041C4  C008  F008         	movff	___llmod@dividend+2,?___llmod+2
 15183  0041C8  C009  F009         	movff	___llmod@dividend+3,?___llmod+3
 15184  0041CC  0012               	return		;funcret
 15185  0041CE                     __end_of___llmod:
 15186                           	opt callstack 0
 15187                           
 15188 ;; *************** function _interruptHandler *****************
 15189 ;; Defined at:
 15190 ;;		line 1528 in file "main.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;		None
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;		None
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      void 
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15208 ;;Total ram usage:        0 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:    1
 15211 ;; This function calls:
 15212 ;;		_updateMotorAEncoder
 15213 ;;		_updateMotorBEncoder
 15214 ;; This function is called by:
 15215 ;;		Interrupt level 2
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	intcode
 15220  000008                     __pintcode:
 15221                           	opt callstack 0
 15222  000008                     _interruptHandler:
 15223                           	opt callstack 17
 15224                           
 15225                           ;incstack = 0
 15226  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15227  00000A  ED38  F022         	call	int_func,f	;refresh shadow registers
 15228                           
 15229                           	psect	intcode_body
 15230  004470                     __pintcode_body:
 15231                           	opt callstack 17
 15232  004470                     int_func:
 15233                           	opt callstack 17
 15234  004470  0006               	pop		; remove dummy address from shadow register refresh
 15235                           
 15236                           ;main.c: 1530:     if(INT1IF){
 15237  004472  A0F0               	btfss	4080,0,c	;volatile
 15238  004474  D005               	goto	i2l495
 15239                           
 15240                           ;main.c: 1533:         keyPressed = 1;
 15241  004476  0E01               	movlw	1
 15242  004478  0100               	movlb	0	; () banked
 15243  00447A  6FE9               	movwf	_keyPressed& (0+255),b	;volatile
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;main.c: 1534:         INT1IF = 0;
 15247  00447C  90F0               	bcf	4080,0,c	;volatile
 15248                           
 15249                           ;main.c: 1535:     } else if (TMR0IF) {
 15250  00447E  D019               	goto	i2l498
 15251  004480                     i2l495:
 15252  004480  A4F2               	btfss	4082,2,c	;volatile
 15253  004482  D00C               	goto	i2l497
 15254                           
 15255                           ;main.c: 1536:     INTCONbits.TMR0IF = 0;
 15256  004484  94F2               	bcf	4082,2,c	;volatile
 15257                           
 15258                           ;main.c: 1537:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul)) >> 8;
 15259  004486  0EFB               	movlw	251
 15260  004488  6ED7               	movwf	4055,c	;volatile
 15261                           
 15262                           ;main.c: 1538:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000ul));
 15263  00448A  0E1E               	movlw	30
 15264  00448C  6ED6               	movwf	4054,c	;volatile
 15265                           
 15266                           ;main.c: 1539:     millisecondsMeasured++;
 15267  00448E  0E01               	movlw	1
 15268  004490  2674               	addwf	_millisecondsMeasured,f,c	;volatile
 15269  004492  0E00               	movlw	0
 15270  004494  2275               	addwfc	_millisecondsMeasured+1,f,c	;volatile
 15271  004496  2276               	addwfc	_millisecondsMeasured+2,f,c	;volatile
 15272  004498  2277               	addwfc	_millisecondsMeasured+3,f,c	;volatile
 15273                           
 15274                           ;main.c: 1540:    } else if (INT2IF){
 15275  00449A  D00B               	goto	i2l498
 15276  00449C                     i2l497:
 15277  00449C  A2F0               	btfss	4080,1,c	;volatile
 15278  00449E  D004               	goto	i2l499
 15279                           
 15280                           ;main.c: 1541:        INT2IF = 0;
 15281  0044A0  92F0               	bcf	4080,1,c	;volatile
 15282                           
 15283                           ;main.c: 1542:        updateMotorBEncoder();
 15284  0044A2  EC72  F021         	call	_updateMotorBEncoder	;wreg free
 15285                           
 15286                           ;main.c: 1543:    } else if (INT0IF){
 15287  0044A6  D005               	goto	i2l498
 15288  0044A8                     i2l499:
 15289  0044A8  A2F2               	btfss	4082,1,c	;volatile
 15290  0044AA  D003               	goto	i2l498
 15291                           
 15292                           ;main.c: 1544:        INT0IF = 0;
 15293  0044AC  92F2               	bcf	4082,1,c	;volatile
 15294                           
 15295                           ;main.c: 1545:        updateMotorAEncoder();
 15296  0044AE  EC9D  F021         	call	_updateMotorAEncoder	;wreg free
 15297  0044B2                     i2l498:
 15298  0044B2  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15299  0044B4  0011               	retfie		f
 15300  0044B6                     __end_of_interruptHandler:
 15301                           	opt callstack 0
 15302                           
 15303 ;; *************** function _updateMotorBEncoder *****************
 15304 ;; Defined at:
 15305 ;;		line 153 in file "main.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;		None
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;  directionPin    2    3[COMRAM] int 
 15310 ;;  interruptPin    2    1[COMRAM] int 
 15311 ;; Return value:  Size  Location     Type
 15312 ;;                  1    wreg      void 
 15313 ;; Registers used:
 15314 ;;		wreg, status,2, status,0
 15315 ;; Tracked objects:
 15316 ;;		On entry : 0/0
 15317 ;;		On exit  : 0/0
 15318 ;;		Unchanged: 0/0
 15319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15321 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15324 ;;Total ram usage:        5 bytes
 15325 ;; Hardware stack levels used:    1
 15326 ;; This function calls:
 15327 ;;		Nothing
 15328 ;; This function is called by:
 15329 ;;		_interruptHandler
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text69
 15334  0042E4                     __ptext69:
 15335                           	opt callstack 0
 15336  0042E4                     _updateMotorBEncoder:
 15337                           	opt callstack 17
 15338                           
 15339                           ;main.c: 154:   int interruptPinState = PORTBbits.RB2;
 15340                           
 15341                           ;incstack = 0
 15342  0042E4  A481               	btfss	3969,2,c	;volatile
 15343  0042E6  D003               	goto	i2u712_40
 15344  0042E8  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15345  0042EA  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 15346  0042EC  D001               	goto	i2u712_48
 15347  0042EE                     i2u712_40:
 15348  0042EE  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15349  0042F0                     i2u712_48:
 15350  0042F0  5001               	movf	??_updateMotorBEncoder,w,c
 15351  0042F2  6E02               	movwf	updateMotorBEncoder@interruptPinState,c
 15352  0042F4  6A03               	clrf	updateMotorBEncoder@interruptPinState+1,c
 15353                           
 15354                           ;main.c: 155:   int directionPin = PORTCbits.RC0;
 15355  0042F6  A082               	btfss	3970,0,c	;volatile
 15356  0042F8  D003               	goto	i2u713_40
 15357  0042FA  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15358  0042FC  2A01               	incf	??_updateMotorBEncoder& (0+255),f,c
 15359  0042FE  D001               	goto	i2u713_48
 15360  004300                     i2u713_40:
 15361  004300  6A01               	clrf	??_updateMotorBEncoder& (0+255),c
 15362  004302                     i2u713_48:
 15363  004302  5001               	movf	??_updateMotorBEncoder,w,c
 15364  004304  6E04               	movwf	updateMotorBEncoder@directionPin,c
 15365  004306  6A05               	clrf	updateMotorBEncoder@directionPin+1,c
 15366                           
 15367                           ;main.c: 156:   if(directionPin == interruptPinState){
 15368  004308  5002               	movf	updateMotorBEncoder@interruptPinState,w,c
 15369  00430A  1804               	xorwf	updateMotorBEncoder@directionPin,w,c
 15370  00430C  E10E               	bnz	i2l6532
 15371  00430E  5003               	movf	updateMotorBEncoder@interruptPinState+1,w,c
 15372  004310  1805               	xorwf	updateMotorBEncoder@directionPin+1,w,c
 15373  004312  A4D8               	btfss	status,2,c
 15374  004314  D00A               	goto	i2l6532
 15375                           
 15376                           ;main.c: 157:     motorBDistance--;
 15377  004316  0EFF               	movlw	255
 15378  004318  0100               	movlb	0	; () banked
 15379  00431A  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 15380  00431C  0EFF               	movlw	255
 15381  00431E  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 15382  004320  0EFF               	movlw	255
 15383  004322  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 15384  004324  0EFF               	movlw	255
 15385  004326  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 15386                           
 15387                           ;main.c: 158:   } else {
 15388  004328  0012               	return	
 15389  00432A                     i2l6532:
 15390                           
 15391                           ;main.c: 159:     motorBDistance++;
 15392  00432A  0E01               	movlw	1
 15393  00432C  0100               	movlb	0	; () banked
 15394  00432E  27D7               	addwf	_motorBDistance& (0+255),f,b	;volatile
 15395  004330  0E00               	movlw	0
 15396  004332  23D8               	addwfc	(_motorBDistance+1)& (0+255),f,b	;volatile
 15397  004334  23D9               	addwfc	(_motorBDistance+2)& (0+255),f,b	;volatile
 15398  004336  23DA               	addwfc	(_motorBDistance+3)& (0+255),f,b	;volatile
 15399                           
 15400                           ; BSR set to: 0
 15401  004338  0012               	return		;funcret
 15402  00433A                     __end_of_updateMotorBEncoder:
 15403                           	opt callstack 0
 15404                           
 15405 ;; *************** function _updateMotorAEncoder *****************
 15406 ;; Defined at:
 15407 ;;		line 184 in file "main.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;		None
 15410 ;; Auto vars:     Size  Location     Type
 15411 ;;  directionPin    2    3[COMRAM] int 
 15412 ;;  interruptPin    2    1[COMRAM] int 
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, status,2, status,0
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;Total ram usage:        5 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; This function calls:
 15429 ;;		Nothing
 15430 ;; This function is called by:
 15431 ;;		_interruptHandler
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text70
 15436  00433A                     __ptext70:
 15437                           	opt callstack 0
 15438  00433A                     _updateMotorAEncoder:
 15439                           	opt callstack 17
 15440                           
 15441                           ;main.c: 185:   int interruptPinState = PORTBbits.RB0;
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;incstack = 0
 15445  00433A  A081               	btfss	3969,0,c	;volatile
 15446  00433C  D003               	goto	i2u715_40
 15447  00433E  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 15448  004340  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 15449  004342  D001               	goto	i2u715_48
 15450  004344                     i2u715_40:
 15451  004344  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 15452  004346                     i2u715_48:
 15453  004346  5001               	movf	??_updateMotorAEncoder,w,c
 15454  004348  6E02               	movwf	updateMotorAEncoder@interruptPinState,c
 15455  00434A  6A03               	clrf	updateMotorAEncoder@interruptPinState+1,c
 15456                           
 15457                           ;main.c: 186:   int directionPin = PORTEbits.RE1;
 15458  00434C  A284               	btfss	3972,1,c	;volatile
 15459  00434E  D003               	goto	i2u716_40
 15460  004350  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 15461  004352  2A01               	incf	??_updateMotorAEncoder& (0+255),f,c
 15462  004354  D001               	goto	i2u716_48
 15463  004356                     i2u716_40:
 15464  004356  6A01               	clrf	??_updateMotorAEncoder& (0+255),c
 15465  004358                     i2u716_48:
 15466  004358  5001               	movf	??_updateMotorAEncoder,w,c
 15467  00435A  6E04               	movwf	updateMotorAEncoder@directionPin,c
 15468  00435C  6A05               	clrf	updateMotorAEncoder@directionPin+1,c
 15469                           
 15470                           ;main.c: 187:   if(directionPin == interruptPinState){
 15471  00435E  5002               	movf	updateMotorAEncoder@interruptPinState,w,c
 15472  004360  1804               	xorwf	updateMotorAEncoder@directionPin,w,c
 15473  004362  E10C               	bnz	i2l6540
 15474  004364  5003               	movf	updateMotorAEncoder@interruptPinState+1,w,c
 15475  004366  1805               	xorwf	updateMotorAEncoder@directionPin+1,w,c
 15476  004368  A4D8               	btfss	status,2,c
 15477  00436A  D008               	goto	i2l6540
 15478                           
 15479                           ;main.c: 188:     motorADistance++;
 15480  00436C  0E01               	movlw	1
 15481  00436E  0100               	movlb	0	; () banked
 15482  004370  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 15483  004372  0E00               	movlw	0
 15484  004374  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 15485  004376  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 15486  004378  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 15487                           
 15488                           ;main.c: 189:   } else {
 15489  00437A  0012               	return	
 15490  00437C                     i2l6540:
 15491                           
 15492                           ;main.c: 190:     motorADistance--;
 15493  00437C  0EFF               	movlw	255
 15494  00437E  0100               	movlb	0	; () banked
 15495  004380  27DB               	addwf	_motorADistance& (0+255),f,b	;volatile
 15496  004382  0EFF               	movlw	255
 15497  004384  23DC               	addwfc	(_motorADistance+1)& (0+255),f,b	;volatile
 15498  004386  0EFF               	movlw	255
 15499  004388  23DD               	addwfc	(_motorADistance+2)& (0+255),f,b	;volatile
 15500  00438A  0EFF               	movlw	255
 15501  00438C  23DE               	addwfc	(_motorADistance+3)& (0+255),f,b	;volatile
 15502                           
 15503                           ; BSR set to: 0
 15504  00438E  0012               	return		;funcret
 15505  004390                     __end_of_updateMotorAEncoder:
 15506                           	opt callstack 0
 15507                           
 15508                           	psect	rparam
 15509  0000                     
 15510                           	psect	temp
 15511  00007A                     btemp:
 15512                           	opt callstack 0
 15513  00007A                     	ds	1
 15514  0000                     int$flags	set	btemp
 15515  0000                     wtemp8	set	btemp+1
 15516  0000                     ttemp5	set	btemp+1
 15517  0000                     ttemp6	set	btemp+4
 15518  0000                     ttemp7	set	btemp+8
 15519                           tosu	equ	0xFFF
 15520                           tosh	equ	0xFFE
 15521                           tosl	equ	0xFFD
 15522                           stkptr	equ	0xFFC
 15523                           pclatu	equ	0xFFB
 15524                           pclath	equ	0xFFA
 15525                           pcl	equ	0xFF9
 15526                           tblptru	equ	0xFF8
 15527                           tblptrh	equ	0xFF7
 15528                           tblptrl	equ	0xFF6
 15529                           tablat	equ	0xFF5
 15530                           prodh	equ	0xFF4
 15531                           prodl	equ	0xFF3
 15532                           indf0	equ	0xFEF
 15533                           postinc0	equ	0xFEE
 15534                           postdec0	equ	0xFED
 15535                           preinc0	equ	0xFEC
 15536                           plusw0	equ	0xFEB
 15537                           fsr0h	equ	0xFEA
 15538                           fsr0l	equ	0xFE9
 15539                           wreg	equ	0xFE8
 15540                           indf1	equ	0xFE7
 15541                           postinc1	equ	0xFE6
 15542                           postdec1	equ	0xFE5
 15543                           preinc1	equ	0xFE4
 15544                           plusw1	equ	0xFE3
 15545                           fsr1h	equ	0xFE2
 15546                           fsr1l	equ	0xFE1
 15547                           bsr	equ	0xFE0
 15548                           indf2	equ	0xFDF
 15549                           postinc2	equ	0xFDE
 15550                           postdec2	equ	0xFDD
 15551                           preinc2	equ	0xFDC
 15552                           plusw2	equ	0xFDB
 15553                           fsr2h	equ	0xFDA
 15554                           fsr2l	equ	0xFD9
 15555                           status	equ	0xFD8


Data Sizes:
    Strings     402
    Constant    37
    Data        9
    BSS         545
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    115     121
    BANK0           128     87     115
    BANK1           256    107     147
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_92(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_74(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_92(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_74(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_66(CODE[16]), 
		 -> STR_64(CODE[14]), STR_62(CODE[11]), STR_60(CODE[9]), STR_58(CODE[16]), 
		 -> STR_56(CODE[13]), STR_54(CODE[13]), STR_52(CODE[9]), STR_50(CODE[13]), 
		 -> STR_48(CODE[14]), STR_46(CODE[10]), STR_42(CODE[9]), STR_40(CODE[14]), 
		 -> STR_38(CODE[10]), STR_36(CODE[6]), STR_34(CODE[7]), STR_32(CODE[2]), 
		 -> STR_31(CODE[6]), STR_20(CODE[14]), STR_18(CODE[10]), STR_16(CODE[6]), 
		 -> STR_14(CODE[7]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_66(CODE[16]), 
		 -> STR_64(CODE[14]), STR_62(CODE[11]), STR_60(CODE[9]), STR_58(CODE[16]), 
		 -> STR_56(CODE[13]), STR_54(CODE[13]), STR_52(CODE[9]), STR_50(CODE[13]), 
		 -> STR_48(CODE[14]), STR_46(CODE[10]), STR_42(CODE[9]), STR_40(CODE[14]), 
		 -> STR_38(CODE[10]), STR_36(CODE[6]), STR_34(CODE[7]), STR_32(CODE[2]), 
		 -> STR_31(CODE[6]), STR_20(CODE[14]), STR_18(CODE[10]), STR_16(CODE[6]), 
		 -> STR_14(CODE[7]), STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), 
		 -> STR_7(CODE[14]), STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2016_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_71(CODE[3]), STR_70(CODE[9]), STR_69(CODE[9]), STR_68(CODE[10]), 
		 -> STR_67(CODE[10]), STR_65(CODE[3]), STR_63(CODE[3]), STR_61(CODE[3]), 
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_41(CODE[3]), STR_39(CODE[3]), 
		 -> STR_37(CODE[5]), STR_35(CODE[5]), STR_33(CODE[5]), STR_30(CODE[9]), 
		 -> STR_29(CODE[13]), STR_28(CODE[16]), STR_27(CODE[12]), STR_26(CODE[11]), 
		 -> STR_25(CODE[10]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_19(CODE[3]), STR_17(CODE[5]), STR_15(CODE[5]), 
		 -> STR_13(CODE[5]), STR_10(CODE[9]), STR_8(CODE[3]), STR_6(CODE[3]), 
		 -> STR_4(CODE[5]), STR_1(CODE[7]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_66(CODE[16]), STR_64(CODE[14]), STR_62(CODE[11]), 
		 -> STR_60(CODE[9]), STR_58(CODE[16]), STR_56(CODE[13]), STR_54(CODE[13]), 
		 -> STR_52(CODE[9]), STR_50(CODE[13]), STR_48(CODE[14]), STR_46(CODE[10]), 
		 -> STR_42(CODE[9]), STR_40(CODE[14]), STR_38(CODE[10]), STR_36(CODE[6]), 
		 -> STR_34(CODE[7]), STR_32(CODE[2]), STR_31(CODE[6]), STR_20(CODE[14]), 
		 -> STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), STR_12(CODE[2]), 
		 -> STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), 
		 -> STR_3(CODE[2]), STR_2(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_66(CODE[16]), STR_64(CODE[14]), STR_62(CODE[11]), 
		 -> STR_60(CODE[9]), STR_58(CODE[16]), STR_56(CODE[13]), STR_54(CODE[13]), 
		 -> STR_52(CODE[9]), STR_50(CODE[13]), STR_48(CODE[14]), STR_46(CODE[10]), 
		 -> STR_42(CODE[9]), STR_40(CODE[14]), STR_38(CODE[10]), STR_36(CODE[6]), 
		 -> STR_34(CODE[7]), STR_32(CODE[2]), STR_31(CODE[6]), STR_20(CODE[14]), 
		 -> STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), STR_12(CODE[2]), 
		 -> STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), STR_5(CODE[15]), 
		 -> STR_3(CODE[2]), STR_2(CODE[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_66(CODE[16]), STR_64(CODE[14]), 
		 -> STR_62(CODE[11]), STR_60(CODE[9]), STR_58(CODE[16]), STR_56(CODE[13]), 
		 -> STR_54(CODE[13]), STR_52(CODE[9]), STR_50(CODE[13]), STR_48(CODE[14]), 
		 -> STR_46(CODE[10]), STR_42(CODE[9]), STR_40(CODE[14]), STR_38(CODE[10]), 
		 -> STR_36(CODE[6]), STR_34(CODE[7]), STR_32(CODE[2]), STR_31(CODE[6]), 
		 -> STR_20(CODE[14]), STR_18(CODE[10]), STR_16(CODE[6]), STR_14(CODE[7]), 
		 -> STR_12(CODE[2]), STR_11(CODE[6]), STR_9(CODE[16]), STR_7(CODE[14]), 
		 -> STR_5(CODE[15]), STR_3(CODE[2]), STR_2(CODE[10]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    _sendArduinoStandbyClampRequest->_I2C_Master_Write
    _robotInit->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _sendArduinoTireOperationStartMessage->_I2C_Master_Write
    _sendArduinoTireDropRequest->_I2C_Master_Write
    _sendArduinoAbortOperationMessage->_I2C_Master_Write
    _requestIsTireDropDone->_I2C_Master_Read
    _requestIsTireDropDone->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _setMotorSpeeds->_set_pwm_duty_cycle
    _set_pwm_duty_cycle->___fltol
    ___fltol->___flsub
    ___flmul->___fldiv
    ___flge->___xxtofl
    ___fldiv->___xxtofl
    ___flsub->___fladd
    ___fladd->___flmul
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_updateMotorAEncoder
    _interruptHandler->_updateMotorBEncoder

Critical Paths under _main in BANK0

    _main->_doOperation
    _doOperation->_opErrorCorrectionDegrees
    _tirePositioning->_setMotorSpeeds
    _opErrorCorrectionDegrees->_errorCorrectedMove
    _errorCorrectedMove->_setMotorSpeeds
    _setMotorSpeeds->_set_pwm_duty_cycle
    _doDisplayLog->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doOperation

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  330297
                                            113 COMRAM     2     2      0
                                             91 BANK1     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                       _doDisplayLog
                        _doOperation
                            _lcdInst
                             _printf
                      _replaceOldLog
                          _robotInit
     _sendArduinoStandbyClampRequest
 ---------------------------------------------------------------------------------
 (1) _sendArduinoStandbyClampRequest                       1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _robotInit                                            0     0      0    1072
                        _EncoderInit
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     350
                                              9 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _EncoderInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceOldLog                                        8     8      0     520
                                              5 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _doOperation                                         99    99      0  223839
                                             83 BANK0      4     4      0
                                              0 BANK1     91    91      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _TIMER_INIT
                            ___awmod
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lldiv
                             ___wmul
                           ___xxtofl
                 _errorCorrectedMove
                     _init_motor_PWM
                            _lcdInst
                            _opDelay
           _opErrorCorrectionDegrees
                             _printf
              _requestIsTireDropDone
   _sendArduinoAbortOperationMessage
         _sendArduinoTireDropRequest
_sendArduinoTireOperationStartMessag
                     _setMotorSpeeds
                    _tirePositioning
 ---------------------------------------------------------------------------------
 (2) _tirePositioning                                     37    33      4   25232
                                             24 BANK0     37    33      4
                            ___aldiv
                                _abs
                            _lcdInst
                            _opDelay
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _opDelay                                             18    12      6     636
                                              5 COMRAM    18    12      6
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     625
                                              5 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireOperationStartMessage                 1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoTireDropRequest                           1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _sendArduinoAbortOperationMessage                     1     1      0    1775
                                              8 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _requestIsTireDropDone                                1     1      0    1840
                                              8 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1741
                                              6 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                              6 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _opErrorCorrectionDegrees                            33    17     16   50924
                                             50 BANK0     33    17     16
                           ___xxtofl
                                _abs
                 _errorCorrectedMove
 ---------------------------------------------------------------------------------
 (3) _errorCorrectedMove                                  26     8     18   46557
                                             24 BANK0     26     8     18
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                     _setMotorSpeeds
 ---------------------------------------------------------------------------------
 (3) _setMotorSpeeds                                      14     8      6   22372
                                             10 BANK0     14     8      6
                           ___xxtofl
                 _set_pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (4) _set_pwm_duty_cycle                                  20    12      8   14774
                                            103 COMRAM    10     2      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    3086
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1597
                                             93 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5393
                                             44 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             19 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5267
                                             85 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4162
                                             69 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _init_motor_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     973
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doDisplayLog                                        12    10      2   52353
                                            101 COMRAM    10    10      0
                                             39 BANK0      2     0      2
                             ___wmul
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   47466
                                             97 COMRAM     4     4      0
                                             29 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   43557
                                             95 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           55    49      6   42949
                                             75 COMRAM    20    14      6
                                              0 BANK0     23    23      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7827
                                             36 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7119
                                             36 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2797
                                             18 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8333
                                             36 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     543
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5806
                                             36 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5527
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2142
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1642
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    4925
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3822
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              8 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            1     1      0     127
                                              7 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          1     1      0      65
                                              6 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (4) _pulse_e                                              1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     412
                                              5 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _interruptHandler                                    0     0      0      92
                _updateMotorAEncoder
                _updateMotorBEncoder
 ---------------------------------------------------------------------------------
 (14) _updateMotorBEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (14) _updateMotorAEncoder                                 5     5      0      46
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___llmod
   _doDisplayLog
     ___wmul
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _doOperation
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _TIMER_INIT
     ___awmod
     ___fldiv
       ___xxtofl (ARG)
     ___flge
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___wmul
     ___xxtofl
     _errorCorrectedMove
       ___fladd
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___xxtofl (ARG)
           ___flge
             ___xxtofl (ARG)
           ___flmul
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _init_motor_PWM
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _opDelay
     _opErrorCorrectionDegrees
       ___xxtofl
       _abs
         ___aomod (ARG)
       _errorCorrectedMove
         ___fladd
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _setMotorSpeeds
           ___xxtofl
           _set_pwm_duty_cycle
             ___fldiv
               ___xxtofl (ARG)
             ___flge
               ___xxtofl (ARG)
             ___flmul
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___fldiv (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _stoa
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _requestIsTireDropDone
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoAbortOperationMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireDropRequest
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sendArduinoTireOperationStartMessage
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _setMotorSpeeds
       ___xxtofl
       _set_pwm_duty_cycle
         ___fldiv
           ___xxtofl (ARG)
         ___flge
           ___xxtofl (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _tirePositioning
       ___aldiv
       _abs
         ___aomod (ARG)
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _opDelay
       _setMotorSpeeds
         ___xxtofl
         _set_pwm_duty_cycle
           ___fldiv
             ___xxtofl (ARG)
           ___flge
             ___xxtofl (ARG)
           ___flmul
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _replaceOldLog
   _robotInit
     _EncoderInit
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
   _sendArduinoStandbyClampRequest
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _interruptHandler (ROOT)
   _updateMotorAEncoder
   _updateMotorBEncoder

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0     1E0      38       12.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     6B      93       8       57.4%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     57      73       5       89.8%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     73      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17F       6        0.0%
DATA                 0      0     35F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 03:04:47 2019

                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CPD$ON 000000  
                          ___wmul@multiplicand 0008                                    __CFG_BORV$3 000000  
               doOperation@motorBStartDistance 0135                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                                   __CFG_CP2$OFF 000000  
                                 __CFG_CP3$OFF 000000                                    __CFG_OSC$HS 000000  
             __end_of_opErrorCorrectionDegrees 3990                                            l700 2FC8  
                                          l286 3E1A                                            l632 3ED2  
                                          l288 3E2A                                            l472 1674  
                                          l713 2B8A                                            l650 299C  
                                          l715 2B92                                            l299 1B94  
                                          l652 29A4                                            l817 3FAA  
                                          l679 3440                                            l698 2FC0  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                          _PSA 007EAB                                            _abs 45E8  
                                          _pad 3EA4                                   ___awmod@sign 000B  
                             ??_init_motor_PWM 0006                                            wreg 000FE8  
                                 ___flmul@aexp 003A                                   ___flmul@bexp 003F  
                                 ___flmul@sign 0039                                   ___flmul@temp 0044  
                                 ___flmul@prod 0040                              _doDisplayLog$2391 006C  
                   __end_of_errorCorrectedMove 2928                                   __CFG_LVP$OFF 000000  
                                 ___fltol@exp1 0067                                   __CFG_WDT$OFF 000000  
                                         l1210 41BC                                           ?_abs 0018  
                                         l1055 3A24                                           l1320 2258  
                                         l1228 3B0C                                           l1404 1E66  
                                         l1421 2104                                           l1413 207E  
                                         l1238 3D40                                           l1414 207A  
                                         l1335 234C                                           l1319 227A  
                                         l1344 23B2                                           l1345 23AE  
                                         l1452 3356                                           l1445 32D8  
                                         l1374 25B6                                           l1465 4610  
                                         l1385 2624                                           l1386 2620  
                                         l1572 4420                                           l1496 3650  
                                         ?_pad 001A                                           l8004 25EA  
                                         l8040 26C4                                           l8032 26B6  
                                         l8024 2668                                           l8130 2026  
                                         l9012 115A                                           l8028 268C  
                                         l8060 1E12                                           l8300 333E  
                                         l9100 28FE                                           l9006 111E  
                                         l9022 117C                                           l8038 26C2  
                                         l8062 1E16                                           l8222 3C62  
                                         l8206 3C18                                           l8400 29BE  
                                         l9016 1164                                           l9112 42A2  
                                         l8160 20E0                                           l8136 2044  
                                         l8080 1E56                                           l8064 1E26  
                                         l8240 3CA2                                           l8232 3C7A  
                                         l9104 290A                                           l8250 3A86  
                                         l9114 42C8                                           l9122 3F5C  
                                         l8234 3C86                                           l8226 3C72  
                                         l8306 337C                                           l8404 29CE  
                                         l8252 3A9A                                           l9124 3F68  
                                         l8172 2122                                           l8156 20C2  
                                         l8324 33C8                                           l8308 3388  
                                         l9052 41DE                                           l8414 2AC6  
                                         l8262 3AF6                                           l8270 3CCE  
                                         l9134 3F9C                                           l8190 3A0E  
                                         l8182 39C4                                           l8078 1E52  
                                         l9310 1CB0                                           l8336 4574  
                                         l8272 3CE2                                           l8088 1E84  
                                         l9400 3938                                           l9160 3B90  
                                         l9152 3B62                                           l9304 1C5A  
                                         l8610 35BC                                           l8370 43A4  
                                         l8434 2B2A                                           l8450 3404  
                                         l8506 30EC                                           l8530 2BA6  
                                         l8186 39F8                                           l9170 3BC4  
                                         l9146 3B4A                                           l9314 1CDC  
                                         l9322 1D76                                           l8604 3586  
                                         l8372 43B0                                           l8460 3456  
                                         l9500 17A0                                           l8196 3A5C  
                                         l9092 28DA                                           l9332 1DAA  
                                         l9316 1CF8                                           l9308 1C94  
                                         l9260 1AC4                                           l8614 35F0  
                                         l8606 358E                                           l7902 385A  
                                         l8438 2B42                                           l8278 3D2A  
                                         l8294 3306                                           l9158 3B84  
                                         l9174 3BD2                                           l9342 1DDC  
                                         l8608 3594                                           l7760 459C  
                                         l8464 346E                                           l8544 2BF8  
                                         l8536 2BD6                                           l8800 2386  
                                         l8296 330C                                           l8288 32E8  
                                         l9096 28E6                                           l7746 4044  
                                         l7850 31CC                                           l7906 3880  
                                         l8386 297E                                           l8482 34FC  
                                         l8474 34CA                                           l8634 3D8C  
                                         l9530 198A                                           l9450 3FEA  
                                         l9442 3FD0                                           l7922 2470  
                                         l8298 3318                                           l9178 3BE8  
                                         l9282 1B84                                           l9274 1B2C  
                                         l7756 4586                                           l7764 4504  
                                         l7852 31E0                                           l7844 31A6  
                                         l8468 348C                                           l8636 3D9A  
                                         l9452 3FF2                                           l8740 226A  
                                         l8660 2164                                           l9268 1B0C  
                                         l8590 3530                                           l7766 4508  
                                         l7790 3EDC                                           l7870 3278  
                                         l7862 323C                                           l7838 317E  
                                         l8478 34E4                                           l8582 2D70  
                                         l8558 2C86                                           l8566 2CFC  
                                         l8902 0A2C                                           l9550 19E0  
                                         l9542 19C8                                           l9462 4014  
                                         l9446 3FDC                                           l8806 2390  
                                         l8726 220C                                           l7942 24B0  
                                         l7926 2474                                           l9390 46D2  
                                         l9278 1B58                                           l7784 3EBC  
                                         l8496 3000                                           l8920 0B06  
                                         l8904 0A6E                                           l9560 1A38  
                                         l9528 196E                                           l8840 2428  
                                         l8664 2168                                           l7960 24FE  
                                         l9296 1C06                                           l9288 1BA4  
                                         l9712 0292                                           l7794 3EF4  
                                         l7866 3252                                           l7890 37E8  
                                         l7882 37AA                                           l9554 19F6  
                                         l9546 19D6                                           l9570 1A72  
                                         l9466 4022                                           l9458 400A  
                                         l8834 241E                                           l8826 23F8  
                                         l8762 22C0                                           l8754 229E  
                                         l8738 2266                                           l7954 24E8  
                                         l7946 24B4                                           l9298 1C22  
                                         l8588 352C                                           l7788 3ECA  
                                         l7892 37FC                                           l8916 0ADA  
                                         l8764 22C4                                           l8772 22D6  
                                         l8684 21AC                                           l9396 38C4  
                                         l9900 0966                                           l8598 3576  
                                         l7798 3F20                                           l7886 37CE  
                                         l8934 0BB4                                           l8918 0AF8  
                                         l9478 16B6                                           l8838 2426  
                                         l8790 2370                                           l8782 233C  
                                         l8854 3E1E                                           l9814 0690  
                                         l9750 04D6                                           l9718 02FC  
                                         _P1M0 007DEE                                           _P1M1 007DEF  
                                         l8944 0C66                                           l8880 0A02  
                                         l9568 1A56                                           l8696 21D0  
                                         l8688 21B0                                           l7992 25B4  
                                         l7968 2516                                           l9904 0972  
                                         l9840 0790                                           l9816 0696  
                                         l9680 01A0                                           l9672 013E  
                                         l7898 3844                                           l8970 0E80  
                                         l8962 0DE4                                           l8954 0D76  
                                         l8890 0A1A                                           l8882 0A12  
                                         l7986 258E                                           l7978 2566  
                                         l8858 3E2E                                           l9690 01C8  
                                         l9908 0978                                           l9756 04EE  
                                         l9772 054E                                           l8894 0A1E  
                                         l8886 0A16                                           l8878 0A00  
                                         l7998 25CC                                           l9838 0788  
                                         l9766 0542                                           l9758 04F8  
                                         STR_1 FCFD                                           l8992 100C  
                                         l9872 089A                                           STR_2 FCA1  
                                         STR_3 FD02                                           l8978 0F3C  
                                         l8898 0A22                                           l9786 059E  
                                         l9962 3662                                           STR_4 FCF1  
                                         STR_5 FBDC                                           l9892 0948  
                                         l9788 05A2                                           STR_6 FD01  
                                         STR_7 FC17                                           l9886 08EA  
                                         l9974 36AA                                           STR_8 FD01  
                                         STR_9 FBAC                                           l9888 092C  
                                         l9986 36F2                                           l9998 373A  
                                         _LATB 000F8A                                           _LATD 000F8C  
                                         u8220 403C                                           u8300 45F6  
                                         u8205 46FC                                           u8206 46FE  
                                         u9111 3A66                                           u8240 4084  
                                         u8400 440A                                           u9040 3C06  
                                         u9130 3A9E                                           u9050 3C36  
                                         u8420 46A2                                           u8260 452A  
                                         u8430 46A4                                           u8350 4672  
                                         u9055 3C2C                                           u9400 2952  
                                         u9160 3CE6                                           u8360 4674  
                                         u8280 4642                                           u9240 3392  
                                         u8370 45E0                                           u8290 4644  
                                         u9090 3C8C                                           u8267 4520  
                                         u8540 3800                                           u9500 2B08  
                                         u8380 45E2                                           u9340 2F60  
                                         u8461 31AC                                           u9430 2992  
                                         u8390 4408                                           u8480 31E4  
                                         u9520 2B14                                           u9600 34AE  
                                         u9360 2F86                                           u9290 4570  
                                         u9450 29B8                                           u8730 261A  
                                         u9355 2F62                                           u9460 2AD4  
                                         u9700 3128                                           u9541 33E4  
                                         u9390 2950                                           u9630 3510  
                                         u9607 34A4                                           u9375 2F88  
                                         u9480 2AF6                                           u9720 2B80  
                                         u8920 2074                                           u9481 2AF4  
                                         u9490 2B04                                           u9650 2FB6  
                                         u9810 2CD8                                           u8770 2676  
                                         u9820 2D0C                                           u9740 2BF4  
                                         u8780 269A                                           u9910 3620  
                                         u9590 3482                                           u9750 2C2A  
                                         u8870 1E72                                           u9815 2CC6  
                                         u9920 3622                                           u9680 3116  
                                         u9840 2D2E                                           u9760 2C2C  
                                         u8960 20D0                                           u8880 1FE8  
                                         u9681 3114                                           u9841 2D2C  
                                         u9690 3124                                           u9850 2D3C  
                                         u8970 20EE                                           u9860 2D40  
                                         u9780 2C64                                           u8885 1FDE  
                                         u9790 2C66                                           u9890 3572  
                                         u9990 3DE6                                   __CFG_PWRT$ON 000000  
                                         abs@a 0018                                           _dbuf 0173  
                                         _atoi 351A                                           _ctoa 4390  
                                         _main 11B0                                           _dtoa 2928  
                     __end_of_interruptHandler 44B6                                           _keys FB77  
                                         _logs 0193                                           _prec 00E3  
                                         _nout 00DF                                           pad@i 0021  
                                         pad@p 001E                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0023                                           fsr2l 000FD9  
                                         _stoa 33DA                                           btemp 007A  
                                         _utoa 2FA2                                           _xtoa 2B6C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 000E                                  __CFG_IESO$OFF 000000  
                      __size_of_setMotorSpeeds 0098                                ___fldiv@new_exp 0025  
                          __end_of_EncoderInit 4858                                  __CFG_MCLRE$ON 000000  
           tirePositioning@bottomPreviousState 00AF                                   ___param_bank 000000  
                                        ??_abs 001A                                          ??_pad 0020  
                     __size_of_tirePositioning 0364                          I2C_Master_Read@ackBit 0007  
                             ?_I2C_Master_Init 0013                               ?_I2C_Master_Read 0001  
                             ?_I2C_Master_Wait 0001                               ?_I2C_Master_Stop 0001  
                               replaceOldLog@i 0006                      doOperation@distanceToPole 013E  
                                        l10010 4186                                          l10016 41AE  
                                        l10008 417A                                          l10400 162E  
                                        l10404 163A                                          l10412 1648  
                                        l10308 143E                                          l10342 152C  
                                        l10270 132C                                          l10262 12FE  
                                        l10328 14C6                                          l10360 1596  
                                        l10248 1294                                          l10290 13D8  
                                        l10380 15EE                                          l10372 15D6  
                                        l10348 153C                                          l10358 1566  
                                        l10392 1616                                          l10384 15FC  
                                        l10376 15E2                                          l10396 1622  
                                        l10388 1608                                  ___fltol@sign1 0066  
                              __end_of___aldiv 3BFA                                    ?_TIMER_INIT 0001  
                              __end_of___aodiv 329A                                          ?_atoi 000D  
                                        ?_ctoa 0025                                __end_of___fladd 2444  
                                        ?_main 0001                                          ?_dtoa 0025  
                              __end_of___aomod 38A2                                          _CCP1X 007DED  
                              __end_of___fldiv 26CC                                          _CCP1Y 007DEC  
                                        _CCP2X 007DD5                                          _CCP2Y 007DD4  
                                        _EEADR 000FA9                                          STR_10 FCED  
                                        STR_11 FD0A                                          STR_12 FD2C  
                                        STR_20 FC33                                          STR_13 FCF1  
                                        STR_21 FD1C                                          STR_22 FD13  
                                        STR_30 FCED                                          STR_14 FCF6  
                                        STR_31 FD0A                                          STR_15 FCF1  
                                        STR_23 FD16                                          STR_32 FD2C  
                                        STR_40 FC33                                          STR_24 FD10  
                                        STR_16 FD04                                          STR_33 FCF1  
                                        STR_17 FCF1                                          STR_41 FD01  
                                        STR_25 FCAB                                          STR_34 FCF6  
                                        STR_42 FCC9                                          STR_18 FC97  
                                        STR_26 FC8C                                          STR_50 FC5B  
                                        STR_35 FCF1                                          STR_51 FD01  
                                        STR_19 FD01                                          STR_27 FC75  
                                        STR_43 FBEB                                          STR_36 FD04  
                                        STR_52 FCDB                                          STR_60 FCD2  
                                        STR_44 FBFA                                          STR_28 FBCC  
                              __end_of___awmod 402C                                          STR_37 FCF1  
                                        STR_61 FD01                                          STR_53 FD01  
                                        STR_45 FD01                                          STR_29 FC68  
                                        STR_38 FC97                                          STR_46 FCB5  
                                        STR_62 FC81                                          STR_54 FC41  
                                        STR_63 FD01                                          STR_55 FD01  
                                        STR_47 FD01                                          STR_39 FD01  
                                        STR_72 FD23                                          STR_56 FC4E  
                                        STR_48 FC25                                          STR_64 FC09  
                                        STR_65 FD01                                          STR_57 FD01  
                                        STR_49 FD01                                          STR_74 FD23  
                                        STR_90 FD20                                          STR_58 FBBC  
                                        STR_66 FB9C                                          STR_59 FD01  
                                        STR_83 FD1D                                          STR_67 FCBF  
                                        STR_92 FD20                                          STR_76 FD26  
                                        STR_69 FCE4                                          STR_78 FD26  
                                        STR_86 FD29                                          STR_88 FD29  
                              __end_of___flmul 2138                                __end_of___flsub 4470  
                              __end_of___fltol 3CB4                                          ?_stoa 0013  
                              __end_of___lldiv 3FBC                                          u10100 223E  
                                        u10110 2240                                          ?_utoa 0025  
                                        u11000 1DA0                                          u11010 1DBE  
                                        u11100 3FF6                                          u10140 2282  
                                        u11020 1DD2                                          u11200 1A4E  
                                        u10090 222E                                          u11211 00A6  
                                        u10500 0B4E                                          u10350 2404  
                                        u10270 2394                                          u11310 04E6  
                                        u11230 0182                                          u12007 1430  
                                        u10600 0F70                                          u11400 0888  
                                        u11240 0194                                          u11065 425A  
                                        u12017 144A                                          u10530 0BE8  
                                        u10290 23A8                                          u11410 0894  
                                        u11250 01B2                                __end_of___lodiv 3B2E  
                                        u12107 01F2                                          u12027 14D2  
                                        u10620 1064                                          u11260 01C2  
                                        u11236 0184                                          u11500 377C  
                                        u12117 020A                                          u12037 1554  
                                        u10550 0CBE                                          u11406 088A  
                                        u11350 0596                                          u11246 0196  
                                        u12207 17AC                                          u12127 045A  
                                        u12047 15CA                                          ?_xtoa 0025  
                                        u11520 418A                                          u10480 0B3E  
                                        u11440 095A                                          u11416 0896  
                                        u11280 02F8                                          u11256 01B4  
                              __end_of___llmod 41CE                                          u12217 19BC  
                                        u12137 0472                                          u12057 1688  
                                        u10490 0B40                                          u10730 3F6C  
                                        u10810 1ACE                                          u11290 04CE  
                                        u11266 01C4                                          u12227 1A78  
                                        u12147 079E                                          u12067 409E  
                                        u10820 1AE2                                          u11380 0870  
                                        u12237 46E4                                          u12157 07B6  
                                        u12077 40B6                                          u10670 28D2  
                                        u10910 1BB8                                          u11390 087C  
                                        u11470 36A2                                          u12247 46EE  
                                        u12167 1A90                                          u12087 40C8  
                                        u10920 1BCC                                          u11480 36EA  
                                        u10665 4792                                          u12177 1AA8  
                                        u12097 40EA                                          u10690 28F6  
                                        u10666 4794                                          u10818 1AD2  
                                        u11386 0872                                          u11490 3732  
                                        u12187 169E                                          u10780 3B94  
                                        u10940 1C3C                                          u10828 1AE6  
                                        u11396 087E                                          u12197 16C2  
                                        u10960 1CCA                                          u10990 1D8C  
                                        _T0PS0 007EA8                                          _T0PS1 007EA9  
                                        _T0PS2 007EAA                                __end_of___lomod 3D62  
                                        u11890 1604                                          u11977 11C0  
                                        u11987 1338                                          u11997 13E4  
                                 main@keyValue 016A                                          i2l495 4480  
                                        i2l497 449C                                          i2l498 44B2  
                                        i2l499 44A8                                   vfpfcnvrt@fmt 004E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 008F  
                                        _TMR0L 000FD6                                          _PORTB 000F81  
                                        _TRISD 000F95                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                __end_of_lcdInst 48AA  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 0166                                 __CFG_EBTR3$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                    set_pwm_duty_cycle@duty_valA 0082  
                  set_pwm_duty_cycle@duty_valB 0084                                __end_of_opDelay 4232  
                              __end_of_initLCD 4102                                 __CFG_EBTRB$OFF 000000  
              tirePositioning@topPreviousState 00AD                                          _flags 0078  
       __end_ofinit_motor_PWM@TIMER2_PRESCALER FB93                 init_motor_PWM@TIMER2_PRESCALER FB92  
                                        _fputc 402C                                __end_of_isalpha 45E8  
                                        _fputs 457C                                __end_of_isdigit 46AA  
                                        atoi@n 001A                                          pad@fp 001A  
                                        atoi@s 000D                                          _width 00E1  
                                        ctoa@c 0027                                          _putch 4892  
                                        ctoa@w 0028                                          main@i 0167  
                                        dtoa@d 0027                                          dtoa@i 0047  
                                        dtoa@n 003F                                          dtoa@p 0039  
                                        dtoa@s 003D                                          dtoa@w 003B  
                              __end_of_islower 464A                                __end_of_isspace 457C  
                              __end_of_isupper 467A                                          tablat 000FF5  
                  __end_of_updateMotorAEncoder 4390                                send_nibble@data 0007  
                                        plusw1 000FE3                                          plusw2 000FDB  
                         __size_of_doOperation 09A8                    __end_of_updateMotorBEncoder 433A  
                                        stoa@i 001F                                          stoa@l 0027  
                                        stoa@p 0025                                          stoa@s 0015  
                                        stoa@w 0021                                __end_of_pulse_e 4700  
                                        ttemp5 007B                                          ttemp6 007E  
                                        ttemp7 0082                                          utoa@d 0027  
                                        utoa@i 0043                                          utoa@n 003B  
                                        utoa@p 0037                                          utoa@w 0039  
                                        status 000FD8                    I2C_Master_Read@receivedByte 0008  
                    requestIsTireDropDone@data 0009                                          wtemp8 007B  
                                        xtoa@c 004A                                          xtoa@d 0027  
                                        xtoa@i 0048                                          xtoa@n 0040  
                                        xtoa@p 003C                                          xtoa@w 003E  
                                        xtoa@x 002F                                __end_of_strncmp 3E0C  
                              __end_of_toupper 442A                       errorCorrectedMove@ASpeed 00AE  
                             ___lodiv@dividend 0006                       errorCorrectedMove@BSpeed 00B0  
                               __CFG_PBADEN$ON 000000                                   _toupper$2073 0012  
                              __initialization 4102                            main@currentLogState 0168  
                                 __end_of_atoi 365A                                   __end_of_ctoa 43E0  
                                 __end_of_main 1692                                   __end_of_dtoa 2B6C  
                                 __end_of_keys FB88                                   __end_of_stoa 351A  
                        __size_of_doDisplayLog 03F0                                   __end_of_utoa 3152  
                                 __end_of_xtoa 2D9A                                         ??_atoi 000F  
                                       ??_ctoa 0028                                         ??_main 0072  
                                       ??_dtoa 002F                               opDelay@startTime 0014  
                                       ??_stoa 0017                                         ??_utoa 002F  
                                       ??_xtoa 0030                                  __activetblptr 000002  
                      set_pwm_duty_cycle@dutyA 0068                        set_pwm_duty_cycle@dutyB 006C  
                            ?_I2C_Master_Start 0001                               ___lodiv@quotient 0016  
                            ?_I2C_Master_Write 0007                          __end_of_replaceOldLog 377E  
                           ??_I2C_Master_Start 0007                           _millisecondsMeasured 0074  
                                       _ADCON1 000FC1                             ??_I2C_Master_Write 0009  
                                       _CCP1M0 007DE8                                         _CCP1M1 007DE9  
                                       _CCP1M2 007DEA                                         _CCP1M3 007DEB  
                                       _CCP2M0 007DD0                                         _CCP2M1 007DD1  
                                       _CCP2M2 007DD2                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 000A  
                             ___llmod@dividend 0006                                         ?_fputs 0013  
                                       _EEDATA 000FA8                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                                         _EECON2 000FA7  
                                       _T08BIT 007EAE                         doOperation@tiresOnPole 0157  
                                       ?_putch 0001                         doOperation@tiresToDrop 0152  
                                       _INT0IE 007F94                                         _INT0IF 007F91  
                                       _INT1IE 007F83                                         _INT1IF 007F80  
                                       _INT2IE 007F84                                         _INT2IF 007F81  
                                       i2l6540 437C                                         i2l6532 432A  
                           _set_pwm_duty_cycle 2D9A                                    _EncoderInit 4840  
                                vfpfcnvrt@done 0082                                         _TMR0IE 007F95  
                                       _TMR0IF 007F92                                         _TMR0ON 007EAF  
                                       _TMR2ON 007E52                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                               __end_of___xxtofl 33DA  
            __size_of_opErrorCorrectionDegrees 00EE                                   _doDisplayLog 1692  
                          __size_of_TIMER_INIT 001E                      ?_opErrorCorrectionDegrees 00B2  
     opErrorCorrectionDegrees@maxOperationTime 00BE                            ?_set_pwm_duty_cycle 0068  
                               __CFG_XINST$OFF 000000                          _encoderAInterruptLast 00E5  
                                 vfprintf@cfmt 0060                                         ___flge 3990  
                                    ??___aldiv 000E                                      ??___aodiv 0016  
                                    ??___fladd 004E                                      ??___aomod 0016  
                                       ___wmul 4750                                      ??___fldiv 001C  
                               __CFG_STVREN$ON 000000                                      ??___awmod 000A  
                                    ??___flmul 0035                                      ??___flsub 005E  
                                    ??___fltol 0062                                      ??___lldiv 000E  
                                    ??___lodiv 0016                                      ??___llmod 000E  
                                    ??___lomod 0016                               doOperation@F3416 016B  
                                       clear_0 412A                                         clear_1 413C  
                                       clear_2 4148                                ___awmod@divisor 0008  
                              ___awmod@counter 000A                                      ??_lcdInst 0009  
                                       _printf 4728                                         pad@buf 001C  
                                       ctoa@fp 0025                    ?_sendArduinoTireDropRequest 0001  
                                       dtoa@fp 0025                updateMotorBEncoder@directionPin 0004  
                                       _strlen 44FA                                      ??_opDelay 000C  
                                    ??_initLCD 000A                                         fputc@c 000A  
                                       fputs@c 0017                                         fputs@i 0018  
                                       fputs@s 0013                                      ??_isalpha 0008  
                                    ??_isdigit 0008                          _requestIsTireDropDone 46AA  
                         ??_set_pwm_duty_cycle 0070                              ??_tirePositioning 009C  
                                    ??_islower 0008                                   __mediumconst FB76  
                                    ??_isspace 0008               doOperation@currentOperationState 0151  
                _opErrorCorrectionDegrees$2396 00CB                                         tblptrh 000FF7  
                                    ??_isupper 0008                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0023  
                                       stoa@fp 0013                               __end_of_vfprintf 42E4  
                                    ??_pulse_e 0006                                         utoa@fp 0025  
                                       xtoa@fp 0025                                      ??_strncmp 000C  
                                    ??_toupper 000E                                     ___flge@ff1 0014  
                                   ___flge@ff2 0018                                   ___xxtofl@arg 0010  
                        pulse_e@interruptState 0006                                   ___xxtofl@exp 000F  
                                 ___xxtofl@val 0006                                     __accesstop 0080  
                      __end_of__initialization 415A                            _setMotorSpeeds$2393 0090  
                          _setMotorSpeeds$2394 0094                                  ___rparam_used 000001  
                               _setMotorSpeeds 3E0C                  doOperation@tiresOnPoleAfterOp 012B  
                                   ___fltol@f1 005E                           __end_of_happynewyear FB8F  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 48B4  
                      opDelay@maxOperationTime 0008                                  __end_of_fputc 4098  
                                __end_of_fputs 45B4                                  __end_of_putch 489E  
                                      ??_fputc 000E                                        ??_fputs 0017  
                                      ??_putch 0009                                     __pbssBANK0 00D7  
                                   __pbssBANK1 016B                         __end_of_setMotorSpeeds 3EA4  
     __end_of_sendArduinoAbortOperationMessage 4822      __size_of_sendArduinoAbortOperationMessage 0022  
           ??_sendArduinoAbortOperationMessage 0009              ?_sendArduinoAbortOperationMessage 0001  
             _sendArduinoAbortOperationMessage 4800                              ?_interruptHandler 0001  
                           _errorCorrectedMove 26CC                             ??_interruptHandler 0006  
                        _encoderBInterruptLast 00E6                                        ?___flge 0014  
                                      ?___wmul 0006             tirePositioning@distanceRecordedTop 00B1  
                                   _clicksPerM FB97                            ?_errorCorrectedMove 0098  
                           __size_of_send_byte 0012                                   ??_TIMER_INIT 0006  
                                      ?_printf 009D                                        ?_strlen 0006  
                                      _T2CKPS0 007E50                                        _T2CKPS1 007E51  
                  tirePositioning@topBreakbeam 00B9                         ?_requestIsTireDropDone 0001  
                           __size_of_robotInit 0044                                      ?___xxtofl 0006  
       __end_of_sendArduinoStandbyClampRequest 47BC        __size_of_sendArduinoStandbyClampRequest 0022  
               _sendArduinoStandbyClampRequest 479A                             __size_of_vfpfcnvrt 07F6  
      opErrorCorrectionDegrees@distanceDegrees 00BA                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                         ??_errorCorrectedMove 0072                               ___lomod@dividend 0006  
                         __size_of_send_nibble 0016                                ?_setMotorSpeeds 008A  
  opErrorCorrectionDegrees@motorAStartDistance 00CF                                  opDelay@millis 0006  
                           __end_of_TIMER_INIT 4840                                        __Hparam 0000  
                                   _keyPressed 00E9                                        __Lparam 0000  
              tirePositioning@maxOperationTime 0098                                        ___aldiv 3B2E  
                              __size_of___flge 00D0                                        ___aodiv 3152  
                                      ___fladd 2138                                        ___aomod 377E  
                                      ___fldiv 2444                                        ___awmod 3FBC  
                                      ___flmul 1DE6                                        ___flsub 442A  
                                      ___fltol 3BFA                                        ___lldiv 3F3A  
                              __size_of___wmul 0026                                        ___lodiv 3A60  
                                      ___llmod 4168                                        ___lomod 3CB4  
                                    ?_vfprintf 0097                                        __pcinit 4102  
                                      __ramtop 1000                                        _lcdInst 489E  
                                      __ptext0 11B0                                        __ptext1 479A  
                                      __ptext2 44B6                                        __ptext3 4098  
                                      __ptext4 4232                                        __ptext5 4840  
                                      __ptext6 365A                                        __ptext7 0012  
                                      __ptext8 1A82                                        __ptext9 41CE  
                              __size_of_printf 0028                                      _T0CONbits 000FD5  
                                      _opDelay 41CE                                __size_of_strlen 0044  
                                      _initLCD 4098                                 _motorADistance 00DB  
                                 __size_of_abs 0032                                   __size_of_pad 0096  
                                      _isalpha 45B4                                        _isdigit 467A  
                                   ??___xxtofl 000A                               ___awmod@dividend 0006  
                               _motorBDistance 00D7                               ___aldiv@dividend 0006  
                                      _islower 461A                                        _isspace 453E  
                      doOperation@startedDistA 0108                        doOperation@startedDistB 010C  
                                      _isupper 464A                       __size_of_I2C_Master_Init 005C  
                     __size_of_I2C_Master_Read 0024                       __size_of_I2C_Master_Wait 0012  
                     __size_of_I2C_Master_Stop 0008                                        atoi@neg 0013  
                                      _pulse_e 46D6                                  ??_doOperation 00D3  
            opErrorCorrectionDegrees@goalSpeed 00B2                                        _strncmp 3D62  
                               __pintcode_body 4470                                        _toupper 43E0  
                  _topBreakBeamTriggeredChange 00E8                           end_of_initialization 415A  
                        __end_of_LCD_SIZE_HORZ FB92                              __end_of_send_byte 4892  
                        __end_of_LCD_SIZE_VERT FB91                                   ?_EncoderInit 0001  
                        doOperation@isDoneDrop 0139                                        fputc@fp 000C  
                                __Lmediumconst FB76                                        int_func 4470  
                                      fputs@fp 0015                        __size_of_init_motor_PWM 0028  
                            __end_of_robotInit 44FA                      __size_of_I2C_Master_Start 0008  
                    __size_of_I2C_Master_Write 000A                                ___lldiv@divisor 000A  
                              ___lldiv@counter 0012                   __size_of_updateMotorAEncoder 0056  
                            __end_of_vfpfcnvrt 11B0             tirePositioning@startDistanceBottom 00A5  
                 __size_of_updateMotorBEncoder 0056                               ___aldiv@quotient 0010  
                         doDisplayLog@keyValue 006B                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
            doOperation@distanceFromLastPoleCM 013C                                _tirePositioning 1A82  
                                   ??_vfprintf 0060                           doDisplayLog@keypress 0069  
                                      strlen@a 0008                                        strlen@s 0006  
                                    _PORTBbits 000F81                                      _PORTCbits 000F82  
                                    _PORTEbits 000F84           updateMotorBEncoder@interruptPinState 0002  
                                  ___fladd@grs 0055                                  ___xxtofl@sign 000E  
                                    _TRISAbits 000F92                    doOperation@bottomLaserState 0150  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISEbits 000F96                                    ___fldiv@grs 0027  
                                  ___fldiv@rem 0020                                   _happynewyear FB88  
                  doOperation@distanceToPoleCM 0148                   tirePositioning@startDistance 00A9  
                                  ___flmul@grs 003B    opErrorCorrectionDegrees@motorBStartDistance 00C7  
                doOperation@totalTiresSupplied 0146                                  send_byte@data 0008  
                          __end_of_doOperation 09BA              opErrorCorrectionDegrees@turnRatio 00B4  
                       __size_of_replaceOldLog 0124                                 __end_of___flge 3A60  
                                  vfpfcnvrt@ap 0050                                    vfpfcnvrt@cp 0080  
                                  vfpfcnvrt@fp 004C                                    vfpfcnvrt@ll 0086  
                               __end_of___wmul 4776                          doOperation@poleNumber 0159  
                               __end_of_printf 4750                                 __end_of_strlen 453E  
                          start_initialization 4102                                ___lodiv@divisor 000E  
                  __size_of_set_pwm_duty_cycle 0208                                ___lodiv@counter 001E  
                    setMotorSpeeds@motorASpeed 008A                      setMotorSpeeds@motorBSpeed 008E  
                                  __end_of_abs 461A                                    __end_of_pad 3F3A  
                      errorCorrectedMove@error 00AA                       _opErrorCorrectionDegrees 38A2  
                            ??_I2C_Master_Init 0017                              ??_I2C_Master_Read 0007  
                            ??_I2C_Master_Wait 0006                              ??_I2C_Master_Stop 0007  
                              ___llmod@divisor 000A                                ___llmod@counter 000E  
                      __end_of_tirePositioning 1DE6                                    vfprintf@fmt 0099  
                                     ??___flge 001C                                       ??___wmul 000A  
                        main@currentRobotState 0169                       I2C_Master_Init@clockFreq 0013  
                                  __pdataBANK0 00EA                        ??_requestIsTireDropDone 0009  
                          replaceOldLog@i_1083 0008                            replaceOldLog@i_1084 000A  
                          replaceOldLog@i_1085 000C                               __CFG_LPT1OSC$OFF 000000  
               doOperation@tiresDeployedOnPole 0155                tirePositioning@startDistanceTop 00A1  
                              doOperation@send 0126                                       ??_printf 0062  
                    __size_of_interruptHandler 44AE                                       ??_strlen 0008  
                                    ___fladd@a 004A                                      ___fladd@b 0046  
                                    ___fldiv@a 0018                                      ___fldiv@b 0014  
                                  __pbssBIGRAM 0193                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                    __pbssCOMRAM 0074  
                                    ___flsub@a 005A                                      ___flsub@b 0056  
                                __pcstackBANK0 0080                                  __pcstackBANK1 0100  
                             ___aodiv@dividend 0006                                  _replaceOldLog 365A  
                             ??_setMotorSpeeds 0072                              __size_of___xxtofl 0140  
                                  _doOperation 0012                         setMotorSpeeds@Aforward 008C  
                       setMotorSpeeds@Bforward 008D                                 _init_motor_PWM 4700  
                                    _atoi$1976 0015                                      _atoi$1977 0019  
                                    _atoi$1978 0017                           __size_of_EncoderInit 0018  
                             _I2C_Master_Start 48C6               ??_sendArduinoStandbyClampRequest 0009  
              ?_sendArduinoStandbyClampRequest 0001                               _I2C_Master_Write 48AA  
                     doOperation@topLaserState 0154                                      _dtoa$1449 0037  
                            __CFG_CCP2MX$PORTC 000000                                      __pintcode 0008  
                                __pmediumconst FB76                                       ?___aldiv 0006  
                                     ?___aodiv 0006                                       ?___fladd 0046  
                                     ?___aomod 0006                                       ?___fldiv 0014  
                             ___aodiv@quotient 0018                                       ?___awmod 0006  
                                     ?___flmul 002D                                       ?___flsub 0056  
                                     ?___fltol 005E                                       ?___lldiv 0006  
                                     ?___lodiv 0006          errorCorrectedMove@motorAStartDistance 009E  
                                     ?___llmod 0006                                       ?___lomod 0006  
                                     ?_lcdInst 0001                              __size_of_vfprintf 0056  
                                     ?_opDelay 0006                                ___lomod@divisor 000E  
                                     ?_initLCD 0001                         doOperation@badCountBot 0129  
                              ___lomod@counter 0016                                       ?_isalpha 0006  
                                     ?_isdigit 0006                                       ?_islower 0006  
                                     ?_isspace 0006                                 ?_replaceOldLog 0001  
                                     ?_isupper 0006                            _updateMotorAEncoder 433A  
                          _updateMotorBEncoder 42E4                                  ??_send_nibble 0007  
                                     ?_pulse_e 0001                                 __size_of_fputc 006C  
                               __size_of_fputs 0038                                       ?_strncmp 0006  
                                     ?_toupper 000C                         __end_of_init_motor_PWM 4728  
                 doOperation@topLaserStatePrev 014A                                 __size_of_putch 000C  
                  __size_of_errorCorrectedMove 025C                                ___aldiv@divisor 000A  
                              ___aldiv@counter 000E                                 ___wmul@product 000A  
                                     _LATAbits 000F89                                       _LATBbits 000F8A  
                                ?_doDisplayLog 00A7                                       _LATDbits 000F8C  
                             ?_tirePositioning 0098                                      _send_byte 4880  
                  errorCorrectedMove@goalSpeed 0098                                 _LCD_LINE1_ADDR FB8F  
                               _LCD_LINE2_ADDR FB9B                                 _LCD_LINE3_ADDR FB9A  
                               _LCD_LINE4_ADDR FB99                     doOperation@timeInOperation 014C  
                      init_motor_PWM@FREQUENCY FB93                           ?_updateMotorAEncoder 0001  
                                     i2u712_40 42EE                                       i2u713_40 4300  
                                     i2u712_48 42F0                                       i2u713_48 4302  
                                     i2u715_40 4344                                       i2u716_40 4356  
                                     i2u715_48 4346                                       i2u716_48 4358  
                         ?_updateMotorBEncoder 0001                      doOperation@motorStartTime 0122  
                             __CFG_WDTPS$32768 000000                                      _robotInit 44B6  
                                    _vfpfcnvrt 09BA                                      _xtoa$1477 0038  
                                    _xtoa$1478 003A                              ___wmul@multiplier 0006  
                 ??_sendArduinoTireDropRequest 0009                                   _isspace$2003 000C  
                                   vfpfcnvrt@c 008E                                      copy_data0 4116  
                              ?_init_motor_PWM 0001                        _set_pwm_duty_cycle$2392 0086  
                           __end_of_clicksPerM FB99                                 ??_doDisplayLog 0066  
                         doOperation@timeStart 012D                         __end_of_LCD_LINE1_ADDR FB90  
                       __end_of_LCD_LINE2_ADDR FB9C                         __end_of_LCD_LINE3_ADDR FB9B  
                       __end_of_LCD_LINE4_ADDR FB9A                            __end_of_send_nibble 486E  
                                   _EECON1bits 000FA6                                     ?_send_byte 0001  
                                     __Hrparam 0000                          ??_updateMotorAEncoder 0001  
                        ??_updateMotorBEncoder 0001                        doDisplayLog@currentPole 006E  
              doDisplayLog@currentDisplayState 006A                                     vfprintf@ap 009B  
                                     __Lrparam 0000                                     vfprintf@fp 0097  
                           __CFG_BOREN$SBORDIS 000000            __size_of_sendArduinoTireDropRequest 0022  
                                   ?_robotInit 0001           updateMotorAEncoder@interruptPinState 0002  
                             __size_of___aldiv 00CC                               __size_of___aodiv 0148  
                             __size_of___fladd 030C          errorCorrectedMove@motorBStartDistance 00A2  
                             __size_of___aomod 0124                               __size_of___fldiv 0288  
                             __size_of___awmod 0070                               __size_of___flmul 0352  
                             __size_of___flsub 0046                               __size_of___fltol 00BA  
                             __size_of___lldiv 0082                               __size_of___lodiv 00CE  
                             __size_of___llmod 0066                    errorCorrectedMove@turnRatio 009A  
                             __size_of___lomod 00AE                                     ?_vfpfcnvrt 004C  
                              ___aodiv@divisor 000E                               _interruptHandler 0008  
                              ___aodiv@counter 0016                               __size_of_lcdInst 000C  
                              ??_replaceOldLog 0006                     ??_opErrorCorrectionDegrees 00C2  
                             __size_of_opDelay 0064                                _I2C_Master_Init 4232  
                              _I2C_Master_Read 4776                               __size_of_initLCD 006A  
                                     ___xxtofl 329A                                _I2C_Master_Wait 486E  
                              _I2C_Master_Stop 48BE                               __size_of_isalpha 0034  
                             __size_of_isdigit 0030                               __size_of_islower 0030  
                             __size_of_isspace 003E                            doOperation@badCount 0127  
                                     __ptext10 3B2E                                       __ptext11 47BC  
                                     __ptext20 38A2                                       __ptext12 47DE  
                                     __ptext21 26CC                                       __ptext13 4800  
                                     __ptext30 2138                                       __ptext22 3E0C  
                                     __ptext14 46AA                                       __ptext31 4700  
                                     __ptext23 2D9A                                       __ptext15 48AA  
                                     __ptext40 43E0                                       __ptext32 3F3A  
                                     __ptext24 329A                                       __ptext16 48BE  
                                     __ptext41 461A                                       __ptext33 3FBC  
                                     __ptext25 3BFA                                       __ptext17 48C6  
                                     __ptext50 45E8                                       __ptext42 464A  
                                     __ptext34 4822                                       __ptext26 1DE6  
                                     __ptext18 4776                                       __ptext51 377E  
                                     __ptext43 45B4                                       __ptext35 1692  
                                     __ptext27 3990                                       __ptext19 486E  
                                     __ptext60 453E                                       __ptext52 3152  
                                     __ptext44 2FA2                                       __ptext36 4728  
                                     __ptext28 2444                                       __ptext61 467A  
                                     __ptext53 4390                                       __ptext45 3CB4  
                                     __ptext37 428E                                       __ptext29 442A  
                                     __ptext70 433A                                       __ptext62 4750  
                                     __ptext54 3EA4                                       __ptext46 3A60  
                                     __ptext38 09BA                                       __ptext63 489E  
                                     __ptext55 44FA                                       __ptext47 3D62  
                                     __ptext39 2B6C                                       __ptext64 4880  
                                     __ptext56 457C                                       __ptext48 33DA  
                                     __ptext65 4858                                       __ptext57 402C  
                                     __ptext49 2928                                       __ptext66 46D6  
                                     __ptext58 4892                                       __ptext67 4168  
                                     __ptext59 351A                                       __ptext69 42E4  
                             __size_of_isupper 0030                               __size_of_pulse_e 002A  
                              _motorADirection 00F1                               __size_of_strncmp 00AA  
                             __size_of_toupper 004A                                  __size_of_atoi 0140  
                                __size_of_ctoa 0050                                  __size_of_main 04E2  
                              _motorBDirection 00F2                                  __size_of_dtoa 0244  
                                __size_of_stoa 0140                                  __size_of_utoa 01B0  
                                __size_of_xtoa 022E                                      stoa@F1144 00EA  
              doOperation@distanceFromLastPole 0142                    doOperation@rightRangeFinder 011E  
               set_pwm_duty_cycle@max_duty_val 0080                                       int$flags 007A  
                           doOperation@PIDData 0100                                       _vfprintf 428E  
                                    printf@fmt 009D                 doOperation@motorAStartDistance 0131  
                                     main@tick 0162                                       main@time 015B  
               __size_of_requestIsTireDropDone 002C                  __end_of_requestIsTireDropDone 46D6  
                  I2C_Master_Write@byteToWrite 0007   __end_of_sendArduinoTireOperationStartMessage 47DE  
__size_of_sendArduinoTireOperationStartMessage 0022         ??_sendArduinoTireOperationStartMessage 0009  
        ?_sendArduinoTireOperationStartMessage 0001           _sendArduinoTireOperationStartMessage 47BC  
              updateMotorAEncoder@directionPin 0004                               ___aomod@dividend 0006  
                   __end_of_set_pwm_duty_cycle 2FA2                                      putch@data 0009  
                     __end_of_I2C_Master_Start 48CE                                 _vfpfcnvrt$1492 0084  
                     __end_of_I2C_Master_Write 48B4                                     _INTCONbits 000FF2  
        tirePositioning@distanceRecordedBottom 00B5                                       isalpha@c 0006  
                                     isdigit@c 0006                                    _send_nibble 4858  
                                 ?_doOperation 0001                 _bottomBreakBeamTriggeredChange 00E7  
                                     intlevel2 0000                                  _LCD_SIZE_HORZ FB91  
                                     islower@c 0006           errorCorrectedMove@correctionConstant 00A6  
                                _LCD_SIZE_VERT FB90                                       isspace@c 0006  
                             ___lldiv@dividend 0006                                    ??_send_byte 0008  
                                     isupper@c 0006                                      strncmp@_l 0006  
                                    strncmp@_r 0008                doOperation@bottomLaserStatePrev 014B  
                                   _OSCCONbits 000FD3                             doOperation@counted 013A  
                                  ??_robotInit 001B                                       printf@ap 0064  
                      __end_of_I2C_Master_Init 428E                                ___aomod@divisor 000E  
                      __end_of_I2C_Master_Read 479A                        __end_of_I2C_Master_Wait 4880  
                      __end_of_I2C_Master_Stop 48C6                                    ??_vfpfcnvrt 0052  
                                  lcdInst@data 0009                                       stoa@nuls 0018  
                              ___aomod@counter 0016                          doDisplayLog@logNumber 00A7  
           __end_of_sendArduinoTireDropRequest 4800                     _sendArduinoTireDropRequest 47DE  
                                   _TIMER_INIT 4822                __end_ofinit_motor_PWM@FREQUENCY FB97  
                         __end_of_doDisplayLog 1A82                   doOperation@accelerationDelay 0120  
               tirePositioning@bottomBreakbeam 00BB                               ___lldiv@quotient 000E  
                                     strncmp@l 000D                                       strncmp@n 000A  
                                     strncmp@r 000F                                       toupper@c 000C  
                                 ___aldiv@sign 000F                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0052  
   opErrorCorrectionDegrees@correctionConstant 00B6                                   ___aodiv@sign 0017  
                                ??_EncoderInit 0006                                   ___fladd@aexp 0053  
                                 ___fladd@bexp 0054                                   ___aomod@sign 0017  
